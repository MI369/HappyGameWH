; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\游戏服务器\DistributeManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?BLOCK_SIZE@CDistributeNodePool@@2HB		; CDistributeNodePool::BLOCK_SIZE
PUBLIC	?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
_BSS	SEGMENT
?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A DD 01H DUP (?) ; CDistributeNodePool::m_pHeadOfFreeList
_BSS	ENDS
CONST	SEGMENT
?BLOCK_SIZE@CDistributeNodePool@@2HB DD 028H		; CDistributeNodePool::BLOCK_SIZE
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0CDistributeNodePool@@QAE@XZ			; CDistributeNodePool::CDistributeNodePool
PUBLIC	??1CDistributeNodePool@@QAE@XZ			; CDistributeNodePool::~CDistributeNodePool
PUBLIC	?AllocNode@CDistributeNodePool@@QAEPAUtagDistributeNode@@XZ ; CDistributeNodePool::AllocNode
PUBLIC	?FreeNode@CDistributeNodePool@@QAEXPAX@Z	; CDistributeNodePool::FreeNode
PUBLIC	??0CDistributeManager@@QAE@XZ			; CDistributeManager::CDistributeManager
PUBLIC	??1CDistributeManager@@UAE@XZ			; CDistributeManager::~CDistributeManager
PUBLIC	?SearchNode@CDistributeManager@@IAEPAUtagDistributeNode@@QBUIServerUserItem@@@Z ; CDistributeManager::SearchNode
PUBLIC	?RemoveAll@CDistributeManager@@QAEXXZ		; CDistributeManager::RemoveAll
PUBLIC	?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z ; CDistributeManager::RemoveDistributeNode
PUBLIC	?RemoveDistributeNode@CDistributeManager@@QAEXPBUIServerUserItem@@@Z ; CDistributeManager::RemoveDistributeNode
PUBLIC	?InsertDistributeNode@CDistributeManager@@QAEHABUtagDistributeInfo@@@Z ; CDistributeManager::InsertDistributeNode
PUBLIC	?PerformDistribute@CDistributeManager@@QAEGAAV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z ; CDistributeManager::PerformDistribute
PUBLIC	?FilterRuleExitsIPAddr@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@K@Z ; CDistributeManager::FilterRuleExitsIPAddr
PUBLIC	?FilterRuleExitsSameTable@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z ; CDistributeManager::FilterRuleExitsSameTable
PUBLIC	?FilterRuleIsAllAndroid@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@QAUIServerUserItem@@@Z ; CDistributeManager::FilterRuleIsAllAndroid
PUBLIC	??_GCDistributeManager@@UAEPAXI@Z		; CDistributeManager::`scalar deleting destructor'
PUBLIC	?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
PUBLIC	?Add@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEHABUtagDistributeInfo@@@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::Add
PUBLIC	?GetAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetAt
PUBLIC	?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHABUtagDistributeInfo@@@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetAtGrow
PUBLIC	??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
PUBLIC	??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::AllocMemory
PUBLIC	??_7CDistributeManager@@6B@			; CDistributeManager::`vftable'
PUBLIC	?__LINE__Var@?0???1CDistributeNodePool@@QAE@XZ@4JA ; `CDistributeNodePool::~CDistributeNodePool'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@KKELKDCO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4CDistributeManager@@6B@			; CDistributeManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDistributeManager@@@8			; CDistributeManager `RTTI Type Descriptor'
PUBLIC	??_R3CDistributeManager@@8			; CDistributeManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDistributeManager@@8			; CDistributeManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDistributeManager@@8		; CDistributeManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	??_ECDistributeManager@@UAEPAXI@Z:PROC		; CDistributeManager::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CDistributeManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDistributeManager@@8 DD FLAT:??_R0?AVCDistributeManager@@@8 ; CDistributeManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDistributeManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CDistributeManager@@8
rdata$r	SEGMENT
??_R2CDistributeManager@@8 DD FLAT:??_R1A@?0A@EA@CDistributeManager@@8 ; CDistributeManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDistributeManager@@8
rdata$r	SEGMENT
??_R3CDistributeManager@@8 DD 00H			; CDistributeManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDistributeManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDistributeManager@@@8
data$r	SEGMENT
??_R0?AVCDistributeManager@@@8 DD FLAT:??_7type_info@@6B@ ; CDistributeManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDistributeManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDistributeManager@@6B@
rdata$r	SEGMENT
??_R4CDistributeManager@@6B@ DD 00H			; CDistributeManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDistributeManager@@@8
	DD	FLAT:??_R3CDistributeManager@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@KKELKDCO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0FA@KKELKDCO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH, 0f1H, 0c6H
	DB	0f7H, '\distributemanager.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CDistributeNodePool@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CDistributeNodePool@@QAE@XZ@4JA DD 016H ; `CDistributeNodePool::~CDistributeNodePool'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CDistributeManager@@6B@
CONST	SEGMENT
??_7CDistributeManager@@6B@ DD FLAT:??_R4CDistributeManager@@6B@ ; CDistributeManager::`vftable'
	DD	FLAT:??_ECDistributeManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDistributeManager@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CDistributeNodePool@@QAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CDistributeNodePool@@QAE@XZ$0
__unwindtable$??1CDistributeNodePool@@QAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??1CDistributeNodePool@@QAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1CDistributeNodePool@@QAE@XZ$2
__ehfuncinfo$??1CDistributeNodePool@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CDistributeNodePool@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CDistributeNodePool@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e d7 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	6b 45 08 0c	 imul	 eax, DWORD PTR _nNewCount$[ebp], 12
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009c	83 c4 04	 add	 esp, 4
  0009f	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a2	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a5	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	6b 48 10 0c	 imul	 ecx, DWORD PTR [eax+16], 12
  000af	51		 push	 ecx
  000b0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b6	50		 push	 eax
  000b7	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000ba	51		 push	 ecx
  000bb	e8 00 00 00 00	 call	 _memcpy
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000c9	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000cc	6b d1 0c	 imul	 edx, ecx, 12
  000cf	52		 push	 edx
  000d0	6a 00		 push	 0
  000d2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	6b 48 10 0c	 imul	 ecx, DWORD PTR [eax+16], 12
  000d9	03 4d f4	 add	 ecx, DWORD PTR _pNewData$3[ebp]
  000dc	51		 push	 ecx
  000dd	e8 00 00 00 00	 call	 _memset
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000e5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000eb	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000ee	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f1	52		 push	 edx
  000f2	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000f7	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00100	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00103	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00106	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  00109	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[], COMDAT
; _this$ = ecx

; 121  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 	return GetAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetAt

; 123  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHABUtagDistributeInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHABUtagDistributeInfo@@@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	6b 45 08 0c	 imul	 eax, DWORD PTR _nIndex$[ebp], 12
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00058	03 d0		 add	 edx, eax
  0005a	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 0a		 mov	 DWORD PTR [edx], ecx
  00061	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00064	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00067	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0006a	89 42 08	 mov	 DWORD PTR [edx+8], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHABUtagDistributeInfo@@@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 38		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1a		 jge	 SHORT $LN3@SetSize
  00064	6b 45 f8 0c	 imul	 eax, DWORD PTR _i$3[ebp], 12
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  0006e	50		 push	 eax
  0006f	6a 0c		 push	 12			; 0000000cH
  00071	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00076	83 c4 08	 add	 esp, 8
  00079	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007c	eb d5		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  0007e	eb 4b		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00086	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00089	7d 40		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008b	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  0008e	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00091	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00093	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00096	83 c0 01	 add	 eax, 1
  00099	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a2	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a5	7d 02		 jge	 SHORT $LN6@SetSize
  000a7	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000af	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b2	6b d1 0c	 imul	 edx, ecx, 12
  000b5	52		 push	 edx
  000b6	6a 00		 push	 0
  000b8	6b 45 08 0c	 imul	 eax, DWORD PTR _nNewSize$[ebp], 12
  000bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 _memset
  000c8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d1	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c2 04 00	 ret	 4
?SetSize@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXH@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	6b 45 08 0c	 imul	 eax, DWORD PTR _nIndex$[ebp], 12
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN3@ElementAt:

; 237  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetAt, COMDAT
; _this$ = ecx

; 222  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN5@GetAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN6@GetAt
$LN5@GetAt:
  0001d	68 df 00 00 00	 push	 223			; 000000dfH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN6@GetAt
  00030	cc		 int	 3
$LN6@GetAt:

; 224  : 	if ((nIndex<0)||(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7c 0b		 jl	 SHORT $LN3@GetAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@GetAt
$LN3@GetAt:
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetAt:

; 225  : 	
; 226  : 	return m_pData[nIndex];

  00047	6b 45 08 0c	 imul	 eax, DWORD PTR _nIndex$[ebp], 12
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN4@GetAt:

; 227  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?GetAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEHABUtagDistributeInfo@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEHABUtagDistributeInfo@@@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHABUtagDistributeInfo@@@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEHABUtagDistributeInfo@@@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDistributeManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDistributeManager@@UAEPAXI@Z PROC			; CDistributeManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDistributeManager@@UAE@XZ ; CDistributeManager::~CDistributeManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCDistributeManager@@UAEPAXI@Z ENDP			; CDistributeManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?FilterRuleIsAllAndroid@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@QAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv95 = -80						; size = 4
tv78 = -80						; size = 4
_nIndex$1 = -12						; size = 4
_wAndroidCount$ = -8					; size = 2
_this$ = -4						; size = 4
_DistributeInfoArray$ = 8				; size = 4
_pIServerUserItem$ = 12					; size = 4
?FilterRuleIsAllAndroid@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@QAUIServerUserItem@@@Z PROC ; CDistributeManager::FilterRuleIsAllAndroid, COMDAT
; _this$ = ecx

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 329  : 	//参数校验
; 330  : 	if(pIServerUserItem==NULL || DistributeInfoArray.GetCount()==0) return FALSE;

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	74 0c		 je	 SHORT $LN6@FilterRule
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00015	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN5@FilterRule
$LN6@FilterRule:
  0001e	33 c0		 xor	 eax, eax
  00020	e9 97 00 00 00	 jmp	 $LN1@FilterRule
$LN5@FilterRule:

; 331  : 
; 332  : 	//变量定义
; 333  : 	WORD wAndroidCount=0;

  00025	33 c0		 xor	 eax, eax
  00027	66 89 45 f8	 mov	 WORD PTR _wAndroidCount$[ebp], ax

; 334  : 
; 335  : 	//统计机器
; 336  : 	for(INT_PTR nIndex=0; nIndex<DistributeInfoArray.GetCount(); nIndex++)

  0002b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nIndex$1[ebp], 0
  00032	eb 09		 jmp	 SHORT $LN4@FilterRule
$LN2@FilterRule:
  00034	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00037	83 c0 01	 add	 eax, 1
  0003a	89 45 f4	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@FilterRule:
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00040	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  00045	39 45 f4	 cmp	 DWORD PTR _nIndex$1[ebp], eax
  00048	7d 38		 jge	 SHORT $LN3@FilterRule

; 337  : 	{
; 338  : 		if(DistributeInfoArray[nIndex].pIServerUserItem->IsAndroidUser()==true)

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00051	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  00056	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00059	89 4d b0	 mov	 DWORD PTR tv78[ebp], ecx
  0005c	8b 55 b0	 mov	 edx, DWORD PTR tv78[ebp]
  0005f	8b 02		 mov	 eax, DWORD PTR [edx]
  00061	8b 4d b0	 mov	 ecx, DWORD PTR tv78[ebp]
  00064	8b 90 d0 00 00
	00		 mov	 edx, DWORD PTR [eax+208]
  0006a	ff d2		 call	 edx
  0006c	0f b6 c0	 movzx	 eax, al
  0006f	83 f8 01	 cmp	 eax, 1
  00072	75 0c		 jne	 SHORT $LN7@FilterRule

; 339  : 			++wAndroidCount;

  00074	66 8b 45 f8	 mov	 ax, WORD PTR _wAndroidCount$[ebp]
  00078	66 83 c0 01	 add	 ax, 1
  0007c	66 89 45 f8	 mov	 WORD PTR _wAndroidCount$[ebp], ax
$LN7@FilterRule:

; 340  : 	}

  00080	eb b2		 jmp	 SHORT $LN2@FilterRule
$LN3@FilterRule:

; 341  : 
; 342  : 	return (wAndroidCount==DistributeInfoArray.GetCount()) && pIServerUserItem->IsAndroidUser();

  00082	0f b7 75 f8	 movzx	 esi, WORD PTR _wAndroidCount$[ebp]
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00089	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  0008e	3b f0		 cmp	 esi, eax
  00090	75 20		 jne	 SHORT $LN9@FilterRule
  00092	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00095	8b 10		 mov	 edx, DWORD PTR [eax]
  00097	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0009a	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  000a0	ff d0		 call	 eax
  000a2	0f b6 c8	 movzx	 ecx, al
  000a5	85 c9		 test	 ecx, ecx
  000a7	74 09		 je	 SHORT $LN9@FilterRule
  000a9	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv95[ebp], 1
  000b0	eb 07		 jmp	 SHORT $LN10@FilterRule
$LN9@FilterRule:
  000b2	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN10@FilterRule:
  000b9	8b 45 b0	 mov	 eax, DWORD PTR tv95[ebp]
$LN1@FilterRule:

; 343  : }

  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 08 00	 ret	 8
?FilterRuleIsAllAndroid@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@QAUIServerUserItem@@@Z ENDP ; CDistributeManager::FilterRuleIsAllAndroid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?FilterRuleExitsSameTable@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z
_TEXT	SEGMENT
_nIndex$1 = -8						; size = 4
_this$ = -4						; size = 4
_DistributeInfoArray$ = 8				; size = 4
_wLastTableID$ = 12					; size = 2
?FilterRuleExitsSameTable@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z PROC ; CDistributeManager::FilterRuleExitsSameTable, COMDAT
; _this$ = ecx

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 315  : 	//查找同IP
; 316  : 	for(INT_PTR nIndex=0; nIndex<DistributeInfoArray.GetCount(); nIndex++)

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nIndex$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@FilterRule
$LN2@FilterRule:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@FilterRule:
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00021	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  00026	39 45 f8	 cmp	 DWORD PTR _nIndex$1[ebp], eax
  00029	7d 2c		 jge	 SHORT $LN3@FilterRule

; 317  : 	{
; 318  : 		if(DistributeInfoArray[nIndex].wLastTableID == wLastTableID &&

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00032	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  00037	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0003b	0f b7 55 0c	 movzx	 edx, WORD PTR _wLastTableID$[ebp]
  0003f	3b ca		 cmp	 ecx, edx
  00041	75 12		 jne	 SHORT $LN5@FilterRule
  00043	0f b7 45 0c	 movzx	 eax, WORD PTR _wLastTableID$[ebp]
  00047	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0004c	74 07		 je	 SHORT $LN5@FilterRule

; 319  : 			wLastTableID != INVALID_TABLE )
; 320  : 			return TRUE;

  0004e	b8 01 00 00 00	 mov	 eax, 1
  00053	eb 04		 jmp	 SHORT $LN1@FilterRule
$LN5@FilterRule:

; 321  : 	}

  00055	eb be		 jmp	 SHORT $LN2@FilterRule
$LN3@FilterRule:

; 322  : 
; 323  : 	return FALSE;

  00057	33 c0		 xor	 eax, eax
$LN1@FilterRule:

; 324  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?FilterRuleExitsSameTable@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z ENDP ; CDistributeManager::FilterRuleExitsSameTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?FilterRuleExitsIPAddr@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@K@Z
_TEXT	SEGMENT
tv74 = -76						; size = 4
_nIndex$1 = -8						; size = 4
_this$ = -4						; size = 4
_DistributeInfoArray$ = 8				; size = 4
_dwClientAddr$ = 12					; size = 4
?FilterRuleExitsIPAddr@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@K@Z PROC ; CDistributeManager::FilterRuleExitsIPAddr, COMDAT
; _this$ = ecx

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 	//查找同IP
; 303  : 	for(INT_PTR nIndex=0;nIndex<DistributeInfoArray.GetCount();nIndex++)

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nIndex$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@FilterRule
$LN2@FilterRule:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@FilterRule:
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00021	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  00026	39 45 f8	 cmp	 DWORD PTR _nIndex$1[ebp], eax
  00029	7d 2d		 jge	 SHORT $LN3@FilterRule

; 304  : 	{
; 305  : 		if(DistributeInfoArray[nIndex].pIServerUserItem->GetClientAddr()==dwClientAddr)

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00032	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEABUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  00037	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003a	89 4d b4	 mov	 DWORD PTR tv74[ebp], ecx
  0003d	8b 55 b4	 mov	 edx, DWORD PTR tv74[ebp]
  00040	8b 02		 mov	 eax, DWORD PTR [edx]
  00042	8b 4d b4	 mov	 ecx, DWORD PTR tv74[ebp]
  00045	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00048	ff d2		 call	 edx
  0004a	3b 45 0c	 cmp	 eax, DWORD PTR _dwClientAddr$[ebp]
  0004d	75 07		 jne	 SHORT $LN5@FilterRule

; 306  : 			return TRUE;

  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	eb 04		 jmp	 SHORT $LN1@FilterRule
$LN5@FilterRule:

; 307  : 	}

  00056	eb bd		 jmp	 SHORT $LN2@FilterRule
$LN3@FilterRule:

; 308  : 
; 309  : 	return FALSE;

  00058	33 c0		 xor	 eax, eax
$LN1@FilterRule:

; 310  : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 08 00	 ret	 8
?FilterRuleExitsIPAddr@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@K@Z ENDP ; CDistributeManager::FilterRuleExitsIPAddr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?PerformDistribute@CDistributeManager@@QAEGAAV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z
_TEXT	SEGMENT
_bFirstSuccess$1 = -12					; size = 4
_pMoveNode$ = -8					; size = 4
_this$ = -4						; size = 4
_DistributeInfoArray$ = 8				; size = 4
_wNeedCount$ = 12					; size = 2
?PerformDistribute@CDistributeManager@@QAEGAAV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z PROC ; CDistributeManager::PerformDistribute, COMDAT
; _this$ = ecx

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 231  : 	//定义变量
; 232  : 	tagDistributeNode  * pMoveNode=m_pHeadNode;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00012	89 4d f8	 mov	 DWORD PTR _pMoveNode$[ebp], ecx

; 233  : 	if(pMoveNode!=NULL)

  00015	83 7d f8 00	 cmp	 DWORD PTR _pMoveNode$[ebp], 0
  00019	74 18		 je	 SHORT $LN2@PerformDis

; 234  : 	{
; 235  : 		DistributeInfoArray.Add(pMoveNode->DistributeInfo);

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0001e	83 c0 08	 add	 eax, 8
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00025	e8 00 00 00 00	 call	 ?Add@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEHABUtagDistributeInfo@@@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::Add

; 236  : 		pMoveNode=pMoveNode->pNextDistributeNode;

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	89 4d f8	 mov	 DWORD PTR _pMoveNode$[ebp], ecx
$LN2@PerformDis:

; 237  : 	}
; 238  : 
; 239  : 	//获取用户
; 240  : 	while(pMoveNode!=NULL)

  00033	83 7d f8 00	 cmp	 DWORD PTR _pMoveNode$[ebp], 0
  00037	0f 84 0e 01 00
	00		 je	 $LN3@PerformDis

; 241  : 	{
; 242  : 		//定义变量
; 243  : 		BOOL bFirstSuccess=TRUE;

  0003d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bFirstSuccess$1[ebp], 1

; 244  : 
; 245  : 		//等级过滤
; 246  : 		if(DistributeInfoArray.GetCount()>0 && DistributeInfoArray[0].wDistribute!=pMoveNode->DistributeInfo.wDistribute)

  00044	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00047	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  0004c	85 c0		 test	 eax, eax
  0004e	7e 1f		 jle	 SHORT $LN5@PerformDis
  00050	6a 00		 push	 0
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00055	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  0005a	0f b7 00	 movzx	 eax, WORD PTR [eax]
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _pMoveNode$[ebp]
  00060	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00064	3b c2		 cmp	 eax, edx
  00066	74 07		 je	 SHORT $LN5@PerformDis

; 247  : 			bFirstSuccess=FALSE;

  00068	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bFirstSuccess$1[ebp], 0
$LN5@PerformDis:

; 248  : 
; 249  : 		//机器过滤
; 250  : 		if(bFirstSuccess==TRUE && DistributeInfoArray.GetCount()==wNeedCount-1 && 

  0006f	83 7d f4 01	 cmp	 DWORD PTR _bFirstSuccess$1[ebp], 1
  00073	75 31		 jne	 SHORT $LN6@PerformDis
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00078	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  0007d	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wNeedCount$[ebp]
  00081	83 e9 01	 sub	 ecx, 1
  00084	3b c1		 cmp	 eax, ecx
  00086	75 1e		 jne	 SHORT $LN6@PerformDis
  00088	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0008b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0008e	51		 push	 ecx
  0008f	8b 55 08	 mov	 edx, DWORD PTR _DistributeInfoArray$[ebp]
  00092	52		 push	 edx
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?FilterRuleIsAllAndroid@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@QAUIServerUserItem@@@Z ; CDistributeManager::FilterRuleIsAllAndroid
  0009b	85 c0		 test	 eax, eax
  0009d	74 07		 je	 SHORT $LN6@PerformDis

; 251  : 			FilterRuleIsAllAndroid(DistributeInfoArray,pMoveNode->DistributeInfo.pIServerUserItem))
; 252  : 			bFirstSuccess=FALSE;

  0009f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bFirstSuccess$1[ebp], 0
$LN6@PerformDis:

; 253  : 
; 254  : 		//同桌过滤
; 255  : 		if(bFirstSuccess==TRUE && (m_cbDistributeRule&DISTRIBUTE_LAST_TABLE)==0 &&

  000a6	83 7d f4 01	 cmp	 DWORD PTR _bFirstSuccess$1[ebp], 1
  000aa	75 2c		 jne	 SHORT $LN7@PerformDis
  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  000b3	83 e1 02	 and	 ecx, 2
  000b6	75 20		 jne	 SHORT $LN7@PerformDis
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  000bb	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  000bf	51		 push	 ecx
  000c0	8b 55 08	 mov	 edx, DWORD PTR _DistributeInfoArray$[ebp]
  000c3	52		 push	 edx
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?FilterRuleExitsSameTable@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z ; CDistributeManager::FilterRuleExitsSameTable
  000cc	83 f8 01	 cmp	 eax, 1
  000cf	75 07		 jne	 SHORT $LN7@PerformDis

; 256  : 			FilterRuleExitsSameTable(DistributeInfoArray,pMoveNode->DistributeInfo.wLastTableID)==TRUE)
; 257  : 			bFirstSuccess=FALSE;

  000d1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bFirstSuccess$1[ebp], 0
$LN7@PerformDis:

; 258  : 
; 259  : 		//同IP过滤
; 260  : 		if(bFirstSuccess==TRUE && (m_cbDistributeRule&DISTRIBUTE_SAME_ADDRESS)==0 &&  

  000d8	83 7d f4 01	 cmp	 DWORD PTR _bFirstSuccess$1[ebp], 1
  000dc	75 38		 jne	 SHORT $LN8@PerformDis
  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  000e5	83 e1 04	 and	 ecx, 4
  000e8	75 2c		 jne	 SHORT $LN8@PerformDis
  000ea	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  000ed	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000f0	8b 55 f8	 mov	 edx, DWORD PTR _pMoveNode$[ebp]
  000f3	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f5	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  000f8	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000fb	ff d2		 call	 edx
  000fd	50		 push	 eax
  000fe	8b 45 08	 mov	 eax, DWORD PTR _DistributeInfoArray$[ebp]
  00101	50		 push	 eax
  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	e8 00 00 00 00	 call	 ?FilterRuleExitsIPAddr@CDistributeManager@@IAEHABV?$CWHArray@UtagDistributeInfo@@ABU1@@@K@Z ; CDistributeManager::FilterRuleExitsIPAddr
  0010a	83 f8 01	 cmp	 eax, 1
  0010d	75 07		 jne	 SHORT $LN8@PerformDis

; 261  : 			FilterRuleExitsIPAddr(DistributeInfoArray,pMoveNode->DistributeInfo.pIServerUserItem->GetClientAddr())==TRUE)
; 262  : 			bFirstSuccess=FALSE;

  0010f	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bFirstSuccess$1[ebp], 0
$LN8@PerformDis:

; 263  : 
; 264  : 		//获取成功
; 265  : 		if(bFirstSuccess==TRUE) DistributeInfoArray.Add(pMoveNode->DistributeInfo);

  00116	83 7d f4 01	 cmp	 DWORD PTR _bFirstSuccess$1[ebp], 1
  0011a	75 0f		 jne	 SHORT $LN9@PerformDis
  0011c	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0011f	83 c0 08	 add	 eax, 8
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00126	e8 00 00 00 00	 call	 ?Add@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEHABUtagDistributeInfo@@@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::Add
$LN9@PerformDis:

; 266  : 
; 267  : 		//向前推进
; 268  : 		pMoveNode=pMoveNode->pNextDistributeNode;

  0012b	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0012e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00131	89 4d f8	 mov	 DWORD PTR _pMoveNode$[ebp], ecx

; 269  : 
; 270  : 		//成功判断
; 271  : 		if(DistributeInfoArray.GetCount()==wNeedCount) break;

  00134	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  00137	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  0013c	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wNeedCount$[ebp]
  00140	3b c1		 cmp	 eax, ecx
  00142	75 02		 jne	 SHORT $LN10@PerformDis
  00144	eb 05		 jmp	 SHORT $LN3@PerformDis
$LN10@PerformDis:

; 272  : 	}

  00146	e9 e8 fe ff ff	 jmp	 $LN2@PerformDis
$LN3@PerformDis:

; 273  : 
; 274  : 	return (WORD)DistributeInfoArray.GetCount();

  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _DistributeInfoArray$[ebp]
  0014e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount

; 275  : }

  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 08 00	 ret	 8
?PerformDistribute@CDistributeManager@@QAEGAAV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z ENDP ; CDistributeManager::PerformDistribute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?InsertDistributeNode@CDistributeManager@@QAEHABUtagDistributeInfo@@@Z
_TEXT	SEGMENT
_pDistributeNode$1 = -8					; size = 4
_this$ = -4						; size = 4
_DistributeInfo$ = 8					; size = 4
?InsertDistributeNode@CDistributeManager@@QAEHABUtagDistributeInfo@@@Z PROC ; CDistributeManager::InsertDistributeNode, COMDAT
; _this$ = ecx

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 	//查找用户
; 102  : 	if(SearchNode(DistributeInfo.pIServerUserItem)!=NULL) return false;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _DistributeInfo$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	51		 push	 ecx
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?SearchNode@CDistributeManager@@IAEPAUtagDistributeNode@@QBUIServerUserItem@@@Z ; CDistributeManager::SearchNode
  0001b	85 c0		 test	 eax, eax
  0001d	74 07		 je	 SHORT $LN2@InsertDist
  0001f	33 c0		 xor	 eax, eax
  00021	e9 26 01 00 00	 jmp	 $LN1@InsertDist
$LN2@InsertDist:

; 103  : 
; 104  : 	//头部判断
; 105  : 	if(m_pHeadNode==NULL)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0002d	75 4a		 jne	 SHORT $LN3@InsertDist

; 106  : 	{
; 107  : 		//分配结点
; 108  : 		m_pHeadNode = m_DistributeNodePool.AllocNode();

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00035	e8 00 00 00 00	 call	 ?AllocNode@CDistributeNodePool@@QAEPAUtagDistributeNode@@XZ ; CDistributeNodePool::AllocNode
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 109  : 		if(m_pHeadNode==NULL) return false;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00047	75 07		 jne	 SHORT $LN5@InsertDist
  00049	33 c0		 xor	 eax, eax
  0004b	e9 fc 00 00 00	 jmp	 $LN1@InsertDist
$LN5@InsertDist:

; 110  : 
; 111  : 		//设置变量
; 112  : 		CopyMemory(&m_pHeadNode->DistributeInfo,&DistributeInfo,sizeof(DistributeInfo));

  00050	6a 0c		 push	 12			; 0000000cH
  00052	8b 45 08	 mov	 eax, DWORD PTR _DistributeInfo$[ebp]
  00055	50		 push	 eax
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0005c	83 c2 08	 add	 edx, 8
  0005f	52		 push	 edx
  00060	e8 00 00 00 00	 call	 _memcpy
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH

; 113  : 		m_pHeadNode->DistributeInfo.pPertainNode=m_pHeadNode;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00071	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00074	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 114  : 	}
; 115  : 	else

  00077	eb 79		 jmp	 SHORT $LN4@InsertDist
$LN3@InsertDist:

; 116  : 	{
; 117  : 		//分配结点
; 118  : 		tagDistributeNode * pDistributeNode = m_DistributeNodePool.AllocNode();

  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0007f	e8 00 00 00 00	 call	 ?AllocNode@CDistributeNodePool@@QAEPAUtagDistributeNode@@XZ ; CDistributeNodePool::AllocNode
  00084	89 45 f8	 mov	 DWORD PTR _pDistributeNode$1[ebp], eax

; 119  : 		if(pDistributeNode==NULL) return false;

  00087	83 7d f8 00	 cmp	 DWORD PTR _pDistributeNode$1[ebp], 0
  0008b	75 07		 jne	 SHORT $LN6@InsertDist
  0008d	33 c0		 xor	 eax, eax
  0008f	e9 b8 00 00 00	 jmp	 $LN1@InsertDist
$LN6@InsertDist:

; 120  : 
; 121  : 		//设置结点
; 122  : 		CopyMemory(&pDistributeNode->DistributeInfo,&DistributeInfo,sizeof(DistributeInfo));

  00094	6a 0c		 push	 12			; 0000000cH
  00096	8b 45 08	 mov	 eax, DWORD PTR _DistributeInfo$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d f8	 mov	 ecx, DWORD PTR _pDistributeNode$1[ebp]
  0009d	83 c1 08	 add	 ecx, 8
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 _memcpy
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 123  : 		pDistributeNode->DistributeInfo.pPertainNode=pDistributeNode;

  000a9	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$1[ebp]
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _pDistributeNode$1[ebp]
  000af	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 124  : 		
; 125  : 		//插入结点
; 126  : 		if(m_pHeadNode->pNextDistributeNode!=NULL)

  000b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000b8	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000bc	74 1d		 je	 SHORT $LN7@InsertDist

; 127  : 		{
; 128  : 			m_pHeadNode->pNextDistributeNode->pPrepDistributeNode=pDistributeNode;

  000be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c7	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$1[ebp]
  000ca	89 02		 mov	 DWORD PTR [edx], eax

; 129  : 			pDistributeNode->pNextDistributeNode=m_pHeadNode->pNextDistributeNode;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _pDistributeNode$1[ebp]
  000d5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000d8	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN7@InsertDist:

; 130  : 		}
; 131  : 		
; 132  : 		//链接结点
; 133  : 		pDistributeNode->pPrepDistributeNode=m_pHeadNode;

  000db	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$1[ebp]
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000e4	89 10		 mov	 DWORD PTR [eax], edx

; 134  : 		m_pHeadNode->pNextDistributeNode=pDistributeNode;

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _pDistributeNode$1[ebp]
  000ef	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN4@InsertDist:

; 135  : 	}
; 136  : 
; 137  : 	//更新数目
; 138  : 	if(DistributeInfo.pIServerUserItem->IsAndroidUser())

  000f2	8b 45 08	 mov	 eax, DWORD PTR _DistributeInfo$[ebp]
  000f5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f8	8b 55 08	 mov	 edx, DWORD PTR _DistributeInfo$[ebp]
  000fb	8b 01		 mov	 eax, DWORD PTR [ecx]
  000fd	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00100	8b 90 d0 00 00
	00		 mov	 edx, DWORD PTR [eax+208]
  00106	ff d2		 call	 edx
  00108	0f b6 c0	 movzx	 eax, al
  0010b	85 c0		 test	 eax, eax
  0010d	74 14		 je	 SHORT $LN8@InsertDist

; 139  : 		++m_wAndroidCount;

  0010f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00112	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00116	66 83 c1 01	 add	 cx, 1
  0011a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011d	66 89 4a 08	 mov	 WORD PTR [edx+8], cx

; 140  : 	else

  00121	eb 12		 jmp	 SHORT $LN9@InsertDist
$LN8@InsertDist:

; 141  : 		++m_wRealCount;

  00123	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00126	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  0012a	66 83 c1 01	 add	 cx, 1
  0012e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00131	66 89 4a 06	 mov	 WORD PTR [edx+6], cx
$LN9@InsertDist:

; 142  : 	++m_wNodeCount;

  00135	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00138	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  0013c	66 83 c1 01	 add	 cx, 1
  00140	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00143	66 89 4a 04	 mov	 WORD PTR [edx+4], cx

; 143  : 
; 144  : 	return true;

  00147	b8 01 00 00 00	 mov	 eax, 1
$LN1@InsertDist:

; 145  : }

  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 04 00	 ret	 4
?InsertDistributeNode@CDistributeManager@@QAEHABUtagDistributeInfo@@@Z ENDP ; CDistributeManager::InsertDistributeNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?RemoveDistributeNode@CDistributeManager@@QAEXPBUIServerUserItem@@@Z
_TEXT	SEGMENT
_pDistributeNode$ = -8					; size = 4
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?RemoveDistributeNode@CDistributeManager@@QAEXPBUIServerUserItem@@@Z PROC ; CDistributeManager::RemoveDistributeNode, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 150  : 	//查找结点
; 151  : 	tagDistributeNode  *pDistributeNode=SearchNode(pIServerUserItem);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?SearchNode@CDistributeManager@@IAEPAUtagDistributeNode@@QBUIServerUserItem@@@Z ; CDistributeManager::SearchNode
  00018	89 45 f8	 mov	 DWORD PTR _pDistributeNode$[ebp], eax

; 152  : 	if(pDistributeNode!=NULL) RemoveDistributeNode(pDistributeNode);

  0001b	83 7d f8 00	 cmp	 DWORD PTR _pDistributeNode$[ebp], 0
  0001f	74 0c		 je	 SHORT $LN1@RemoveDist
  00021	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z ; CDistributeManager::RemoveDistributeNode
$LN1@RemoveDist:

; 153  : 
; 154  : 	return;
; 155  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?RemoveDistributeNode@CDistributeManager@@QAEXPBUIServerUserItem@@@Z ENDP ; CDistributeManager::RemoveDistributeNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z
_TEXT	SEGMENT
_pNextNode$ = -12					; size = 4
_pPrepNode$ = -8					; size = 4
_this$ = -4						; size = 4
_pDistributeNode$ = 8					; size = 4
?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z PROC ; CDistributeManager::RemoveDistributeNode, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 160  : 	//参数校验
; 161  : 	if(pDistributeNode==NULL) return;

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pDistributeNode$[ebp], 0
  00010	75 05		 jne	 SHORT $LN2@RemoveDist
  00012	e9 cf 00 00 00	 jmp	 $LN1@RemoveDist
$LN2@RemoveDist:

; 162  : 
; 163  : 	//变量定义
; 164  : 	tagDistributeNode  *pPrepNode=pDistributeNode->pPrepDistributeNode;

  00017	8b 45 08	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d f8	 mov	 DWORD PTR _pPrepNode$[ebp], ecx

; 165  : 	tagDistributeNode  *pNextNode=pDistributeNode->pNextDistributeNode;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  00022	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00025	89 4d f4	 mov	 DWORD PTR _pNextNode$[ebp], ecx

; 166  : 
; 167  : 	//删除结点
; 168  : 	if(pPrepNode!=NULL)

  00028	83 7d f8 00	 cmp	 DWORD PTR _pPrepNode$[ebp], 0
  0002c	74 30		 je	 SHORT $LN3@RemoveDist

; 169  : 	{
; 170  : 		if(pNextNode!=NULL)

  0002e	83 7d f4 00	 cmp	 DWORD PTR _pNextNode$[ebp], 0
  00032	74 13		 je	 SHORT $LN5@RemoveDist

; 171  : 		{
; 172  : 			pPrepNode->pNextDistributeNode=pNextNode;

  00034	8b 45 f8	 mov	 eax, DWORD PTR _pPrepNode$[ebp]
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _pNextNode$[ebp]
  0003a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 173  : 			pNextNode->pPrepDistributeNode=pPrepNode;

  0003d	8b 45 f4	 mov	 eax, DWORD PTR _pNextNode$[ebp]
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _pPrepNode$[ebp]
  00043	89 08		 mov	 DWORD PTR [eax], ecx

; 174  : 		}
; 175  : 		else

  00045	eb 15		 jmp	 SHORT $LN6@RemoveDist
$LN5@RemoveDist:

; 176  : 		{
; 177  : 			//尾部结点
; 178  : 			if(pPrepNode->pNextDistributeNode==pDistributeNode)

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pPrepNode$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	3b 4d 08	 cmp	 ecx, DWORD PTR _pDistributeNode$[ebp]
  00050	75 0a		 jne	 SHORT $LN6@RemoveDist

; 179  : 			{
; 180  : 				pPrepNode->pNextDistributeNode=NULL;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _pPrepNode$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@RemoveDist:

; 181  : 			}
; 182  : 		}
; 183  : 	}
; 184  : 	else

  0005c	eb 24		 jmp	 SHORT $LN4@RemoveDist
$LN3@RemoveDist:

; 185  : 	{
; 186  : 		if(pNextNode!=NULL)

  0005e	83 7d f4 00	 cmp	 DWORD PTR _pNextNode$[ebp], 0
  00062	74 14		 je	 SHORT $LN8@RemoveDist

; 187  : 		{
; 188  : 			pNextNode->pPrepDistributeNode=NULL;

  00064	8b 45 f4	 mov	 eax, DWORD PTR _pNextNode$[ebp]
  00067	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 189  : 
; 190  : 			//重置表头
; 191  : 			m_pHeadNode=pNextNode;

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR _pNextNode$[ebp]
  00073	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 192  : 		}
; 193  : 		else

  00076	eb 0a		 jmp	 SHORT $LN4@RemoveDist
$LN8@RemoveDist:

; 194  : 		{
; 195  : 			m_pHeadNode=NULL;

  00078	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN4@RemoveDist:

; 196  : 		}
; 197  : 	}
; 198  : 
; 199  :     //更新数目
; 200  : 	if(pDistributeNode->DistributeInfo.pIServerUserItem->IsAndroidUser())

  00082	8b 45 08	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  00085	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00088	8b 55 08	 mov	 edx, DWORD PTR _pDistributeNode$[ebp]
  0008b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008d	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00090	8b 90 d0 00 00
	00		 mov	 edx, DWORD PTR [eax+208]
  00096	ff d2		 call	 edx
  00098	0f b6 c0	 movzx	 eax, al
  0009b	85 c0		 test	 eax, eax
  0009d	74 14		 je	 SHORT $LN10@RemoveDist

; 201  : 		--m_wAndroidCount;

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  000a6	66 83 e9 01	 sub	 cx, 1
  000aa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ad	66 89 4a 08	 mov	 WORD PTR [edx+8], cx

; 202  : 	else

  000b1	eb 12		 jmp	 SHORT $LN11@RemoveDist
$LN10@RemoveDist:

; 203  : 		--m_wRealCount;

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  000ba	66 83 e9 01	 sub	 cx, 1
  000be	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c1	66 89 4a 06	 mov	 WORD PTR [edx+6], cx
$LN11@RemoveDist:

; 204  : 	--m_wNodeCount;

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  000cc	66 83 e9 01	 sub	 cx, 1
  000d0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d3	66 89 4a 04	 mov	 WORD PTR [edx+4], cx

; 205  : 
; 206  : 	//安全释放
; 207  : 	m_DistributeNodePool.FreeNode(pDistributeNode);

  000d7	8b 45 08	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  000da	50		 push	 eax
  000db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	83 c1 0a	 add	 ecx, 10			; 0000000aH
  000e1	e8 00 00 00 00	 call	 ?FreeNode@CDistributeNodePool@@QAEXPAX@Z ; CDistributeNodePool::FreeNode
$LN1@RemoveDist:

; 208  : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z ENDP ; CDistributeManager::RemoveDistributeNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?RemoveAll@CDistributeManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RemoveAll@CDistributeManager@@QAEXXZ PROC		; CDistributeManager::RemoveAll, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@RemoveAll:

; 213  : 	//释放内存
; 214  : 	while(m_pHeadNode!=NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	74 11		 je	 SHORT $LN3@RemoveAll

; 215  : 	{
; 216  : 		RemoveDistributeNode(m_pHeadNode);

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z ; CDistributeManager::RemoveDistributeNode

; 217  : 	}

  00024	eb e6		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 218  : 
; 219  : 	//重置变量
; 220  : 	m_pHeadNode=NULL;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 221  : 	m_wNodeCount=0;

  00030	33 c0		 xor	 eax, eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 222  : 	m_wAndroidCount=0;

  00039	33 c0		 xor	 eax, eax
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 223  : 	m_wRealCount=0;

  00042	33 c0		 xor	 eax, eax
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 224  : 
; 225  : 	return;
; 226  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?RemoveAll@CDistributeManager@@QAEXXZ ENDP		; CDistributeManager::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?SearchNode@CDistributeManager@@IAEPAUtagDistributeNode@@QBUIServerUserItem@@@Z
_TEXT	SEGMENT
_pMoveNode$ = -8					; size = 4
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?SearchNode@CDistributeManager@@IAEPAUtagDistributeNode@@QBUIServerUserItem@@@Z PROC ; CDistributeManager::SearchNode, COMDAT
; _this$ = ecx

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 280  : 	if(m_pHeadNode==NULL) return NULL;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 04		 jne	 SHORT $LN4@SearchNode
  00015	33 c0		 xor	 eax, eax
  00017	eb 2c		 jmp	 SHORT $LN1@SearchNode
$LN4@SearchNode:

; 281  : 
; 282  : 	//设置变量
; 283  : 	tagDistributeNode * pMoveNode=m_pHeadNode;

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001f	89 4d f8	 mov	 DWORD PTR _pMoveNode$[ebp], ecx
$LN2@SearchNode:

; 284  : 
; 285  : 	//查找结点
; 286  : 	while(pMoveNode!=NULL)

  00022	83 7d f8 00	 cmp	 DWORD PTR _pMoveNode$[ebp], 0
  00026	74 1b		 je	 SHORT $LN3@SearchNode

; 287  : 	{
; 288  : 		//接口判断
; 289  : 		if(pMoveNode->DistributeInfo.pIServerUserItem==pIServerUserItem)

  00028	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0002b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0002e	3b 4d 08	 cmp	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00031	75 05		 jne	 SHORT $LN5@SearchNode

; 290  : 			return pMoveNode;

  00033	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  00036	eb 0d		 jmp	 SHORT $LN1@SearchNode
$LN5@SearchNode:

; 291  : 
; 292  : 		//向前推进
; 293  : 		pMoveNode=pMoveNode->pNextDistributeNode;

  00038	8b 45 f8	 mov	 eax, DWORD PTR _pMoveNode$[ebp]
  0003b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003e	89 4d f8	 mov	 DWORD PTR _pMoveNode$[ebp], ecx

; 294  : 	}

  00041	eb df		 jmp	 SHORT $LN2@SearchNode
$LN3@SearchNode:

; 295  : 
; 296  : 	return NULL;

  00043	33 c0		 xor	 eax, eax
$LN1@SearchNode:

; 297  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?SearchNode@CDistributeManager@@IAEPAUtagDistributeNode@@QBUIServerUserItem@@@Z ENDP ; CDistributeManager::SearchNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ??1CDistributeManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDistributeManager@@UAE@XZ PROC			; CDistributeManager::~CDistributeManager, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDistributeManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDistributeManager@@6B@

; 94   : 	//移除节点
; 95   : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@CDistributeManager@@QAEXXZ ; CDistributeManager::RemoveAll

; 96   : }

  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00042	e8 00 00 00 00	 call	 ??1CDistributeNodePool@@QAE@XZ ; CDistributeNodePool::~CDistributeNodePool
  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDistributeManager@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDistributeManager@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDistributeManager@@UAE@XZ ENDP			; CDistributeManager::~CDistributeManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ??0CDistributeManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDistributeManager@@QAE@XZ PROC			; CDistributeManager::CDistributeManager, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDistributeManager@@6B@
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0001b	e8 00 00 00 00	 call	 ??0CDistributeNodePool@@QAE@XZ ; CDistributeNodePool::CDistributeNodePool

; 83   : 	//设置变量
; 84   : 	m_pHeadNode=NULL;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 85   : 	m_wNodeCount=0;	

  0002a	33 c0		 xor	 eax, eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 86   : 	m_wRealCount=0;

  00033	33 c0		 xor	 eax, eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 87   : 	m_wAndroidCount=0;

  0003c	33 c0		 xor	 eax, eax
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 88   : 	m_cbDistributeRule=0;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 89   : }

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??0CDistributeManager@@QAE@XZ ENDP			; CDistributeManager::CDistributeManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?FreeNode@CDistributeNodePool@@QAEXPAX@Z
_TEXT	SEGMENT
_pDeadNode$ = -8					; size = 4
_this$ = -4						; size = 4
_pNode$ = 8						; size = 4
?FreeNode@CDistributeNodePool@@QAEXPAX@Z PROC		; CDistributeNodePool::FreeNode, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	//归还结点
; 71   : 	tagDistributeNode * pDeadNode =  static_cast<tagDistributeNode*>(pNode);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNode$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pDeadNode$[ebp], eax

; 72   : 	pDeadNode->pNextDistributeNode = m_pHeadOfFreeList;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _pDeadNode$[ebp]
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 73   : 	m_pHeadOfFreeList = pDeadNode;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _pDeadNode$[ebp]
  00021	a3 00 00 00 00	 mov	 DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A, eax ; CDistributeNodePool::m_pHeadOfFreeList

; 74   : 
; 75   : 	return;
; 76   : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
?FreeNode@CDistributeNodePool@@QAEXPAX@Z ENDP		; CDistributeNodePool::FreeNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?AllocNode@CDistributeNodePool@@QAEPAUtagDistributeNode@@XZ
_TEXT	SEGMENT
$T1 = -84						; size = 4
_pNewBlock$2 = -16					; size = 4
_nIndex$3 = -12						; size = 4
_pDistributeNode$ = -8					; size = 4
_this$ = -4						; size = 4
?AllocNode@CDistributeNodePool@@QAEPAUtagDistributeNode@@XZ PROC ; CDistributeNodePool::AllocNode, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 40   : 	//获取头结点
; 41   : 	tagDistributeNode *pDistributeNode = m_pHeadOfFreeList; 

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
  00011	89 45 f8	 mov	 DWORD PTR _pDistributeNode$[ebp], eax

; 42   : 	if(pDistributeNode!=NULL)

  00014	83 7d f8 00	 cmp	 DWORD PTR _pDistributeNode$[ebp], 0
  00018	74 0e		 je	 SHORT $LN5@AllocNode

; 43   : 	{
; 44   : 		m_pHeadOfFreeList = pDistributeNode->pNextDistributeNode;

  0001a	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A, ecx ; CDistributeNodePool::m_pHeadOfFreeList

; 45   : 	}
; 46   : 	else 

  00026	eb 55		 jmp	 SHORT $LN6@AllocNode
$LN5@AllocNode:

; 47   : 	{
; 48   : 		//分配内存
; 49   : 		for(int nIndex = 0; nIndex < BLOCK_SIZE; nIndex++)

  00028	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nIndex$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@AllocNode
$LN2@AllocNode:
  00031	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f4	 mov	 DWORD PTR _nIndex$3[ebp], eax
$LN4@AllocNode:
  0003a	83 7d f4 28	 cmp	 DWORD PTR _nIndex$3[ebp], 40 ; 00000028H
  0003e	7d 29		 jge	 SHORT $LN3@AllocNode

; 50   : 		{
; 51   : 			tagDistributeNode * pNewBlock = new tagDistributeNode;

  00040	6a 14		 push	 20			; 00000014H
  00042	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00047	83 c4 04	 add	 esp, 4
  0004a	89 45 ac	 mov	 DWORD PTR $T1[ebp], eax
  0004d	8b 45 ac	 mov	 eax, DWORD PTR $T1[ebp]
  00050	89 45 f0	 mov	 DWORD PTR _pNewBlock$2[ebp], eax

; 52   : 			pNewBlock->pNextDistributeNode=m_pHeadOfFreeList;

  00053	8b 45 f0	 mov	 eax, DWORD PTR _pNewBlock$2[ebp]
  00056	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
  0005c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 53   : 			m_pHeadOfFreeList=pNewBlock;

  0005f	8b 45 f0	 mov	 eax, DWORD PTR _pNewBlock$2[ebp]
  00062	a3 00 00 00 00	 mov	 DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A, eax ; CDistributeNodePool::m_pHeadOfFreeList

; 54   : 		}

  00067	eb c8		 jmp	 SHORT $LN2@AllocNode
$LN3@AllocNode:

; 55   : 		
; 56   : 		//设置结点
; 57   : 		pDistributeNode = m_pHeadOfFreeList;

  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
  0006e	89 45 f8	 mov	 DWORD PTR _pDistributeNode$[ebp], eax

; 58   : 		m_pHeadOfFreeList=pDistributeNode->pNextDistributeNode;

  00071	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  00074	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00077	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A, ecx ; CDistributeNodePool::m_pHeadOfFreeList
$LN6@AllocNode:

; 59   : 	}
; 60   : 
; 61   : 	//初始节点
; 62   : 	ZeroMemory(pDistributeNode,sizeof(tagDistributeNode));

  0007d	6a 14		 push	 20			; 00000014H
  0007f	6a 00		 push	 0
  00081	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   : 
; 64   : 	return pDistributeNode;

  0008d	8b 45 f8	 mov	 eax, DWORD PTR _pDistributeNode$[ebp]

; 65   : }

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?AllocNode@CDistributeNodePool@@QAEPAUtagDistributeNode@@XZ ENDP ; CDistributeNodePool::AllocNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ??1CDistributeNodePool@@QAE@XZ
_TEXT	SEGMENT
$T2 = -92						; size = 4
_pDistributeNode$3 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CDistributeNodePool@@QAE@XZ PROC			; CDistributeNodePool::~CDistributeNodePool, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDistributeNodePool@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	//释放列表
; 24   : 	if(m_pHeadOfFreeList!=NULL)

  0002f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A, 0 ; CDistributeNodePool::m_pHeadOfFreeList
  00036	74 7b		 je	 SHORT $LN6@CDistribut

; 25   : 	{
; 26   : 		tagDistributeNode * pDistributeNode=m_pHeadOfFreeList;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
  0003d	89 45 e8	 mov	 DWORD PTR _pDistributeNode$3[ebp], eax
$LN2@CDistribut:

; 27   : 		while(pDistributeNode!=NULL)

  00040	83 7d e8 00	 cmp	 DWORD PTR _pDistributeNode$3[ebp], 0
  00044	74 6d		 je	 SHORT $LN6@CDistribut

; 28   : 		{
; 29   : 			//安全释放
; 30   : 			m_pHeadOfFreeList = pDistributeNode->pNextDistributeNode;

  00046	8b 45 e8	 mov	 eax, DWORD PTR _pDistributeNode$3[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A, ecx ; CDistributeNodePool::m_pHeadOfFreeList

; 31   : 			SafeDelete(pDistributeNode);

  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00059	8b 45 e8	 mov	 eax, DWORD PTR _pDistributeNode$3[ebp]
  0005c	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  0005f	6a 14		 push	 20			; 00000014H
  00061	8b 4d a4	 mov	 ecx, DWORD PTR $T2[ebp]
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006a	83 c4 08	 add	 esp, 8
  0006d	eb 23		 jmp	 SHORT $LN8@CDistribut
__catch$??1CDistributeNodePool@@QAE@XZ$0:
  0006f	33 c0		 xor	 eax, eax
  00071	75 19		 jne	 SHORT $LN7@CDistribut
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CDistributeNodePool@@QAE@XZ@4JA
  00079	83 c1 09	 add	 ecx, 9
  0007c	51		 push	 ecx
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@KKELKDCO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00082	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00087	85 c0		 test	 eax, eax
  00089	74 01		 je	 SHORT $LN7@CDistribut
  0008b	cc		 int	 3
$LN7@CDistribut:
  0008c	b8 00 00 00 00	 mov	 eax, $LN11@CDistribut
  00091	c3		 ret	 0
$LN8@CDistribut:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00099	eb 07		 jmp	 SHORT __tryend$??1CDistributeNodePool@@QAE@XZ$1
$LN11@CDistribut:
  0009b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??1CDistributeNodePool@@QAE@XZ$1:
  000a2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pDistributeNode$3[ebp], 0

; 32   : 			pDistributeNode=m_pHeadOfFreeList;

  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pHeadOfFreeList@CDistributeNodePool@@2PAUtagDistributeNode@@A ; CDistributeNodePool::m_pHeadOfFreeList
  000ae	89 45 e8	 mov	 DWORD PTR _pDistributeNode$3[ebp], eax

; 33   : 		}

  000b1	eb 8d		 jmp	 SHORT $LN2@CDistribut
$LN6@CDistribut:

; 34   : 	}
; 35   : }

  000b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000b6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bd	59		 pop	 ecx
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDistributeNodePool@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDistributeNodePool@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDistributeNodePool@@QAE@XZ ENDP			; CDistributeNodePool::~CDistributeNodePool
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ??0CDistributeNodePool@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDistributeNodePool@@QAE@XZ PROC			; CDistributeNodePool::CDistributeNodePool, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : }

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CDistributeNodePool@@QAE@XZ ENDP			; CDistributeNodePool::CDistributeNodePool
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
