; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\游戏服务器\TableFrame.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
?szTreasureDB@@3QBDB DB 'QPTreasureDB', 00H		; szTreasureDB
	ORG $+3
?szCompilation@@3QBDB DB 'ED56BE63-3026-465B-9DFC-17F595145F3D', 00H ; szCompilation
	ORG $+3
?IID_ITableFrame@@3U_GUID@@B DD 0860cd1cfH		; IID_ITableFrame
	DW	01a4fH
	DW	04e35H
	DB	0b8H
	DB	0cH
	DB	0d2H
	DB	046H
	DB	0a4H
	DB	0efH
	DB	0fdH
	DB	0fbH
?IID_ICompilationSink@@3U_GUID@@B DD 0a37f720fH		; IID_ICompilationSink
	DW	015cdH
	DW	041e4H
	DB	0b8H
	DB	06cH
	DB	0e0H
	DB	0a7H
	DB	0ecH
	DB	0abH
	DB	031H
	DB	089H
?IID_ITableFrameSink@@3U_GUID@@B DD 038a74df5H		; IID_ITableFrameSink
	DW	06245H
	DW	046c7H
	DB	0b6H
	DB	0ceH
	DB	053H
	DB	0f9H
	DB	0d5H
	DB	0bfH
	DB	06dH
	DB	0e6H
?IID_ITableUserAction@@3U_GUID@@B DD 0c97c060bH		; IID_ITableUserAction
	DW	0cf0eH
	DW	040b7H
	DB	093H
	DB	030H
	DB	097H
	DB	0a4H
	DB	0f6H
	DB	08cH
	DB	0caH
	DB	084H
?IID_ITableUserRequest@@3U_GUID@@B DD 07ad17e89H	; IID_ITableUserRequest
	DW	0cb5bH
	DW	0472aH
	DB	0acH
	DB	0ebH
	DB	084H
	DB	04dH
	DB	04fH
	DB	0a1H
	DB	04cH
	DB	038H
?IID_ITableFrameHook@@3U_GUID@@B DD 094a90d45H		; IID_ITableFrameHook
	DW	0570eH
	DW	041d6H
	DB	09fH
	DB	020H
	DB	01H
	DB	08dH
	DB	068H
	DB	016H
	DB	0d5H
	DB	0fH
?IID_IPersonalTableFrameHook@@3U_GUID@@B DD 010ac366eH	; IID_IPersonalTableFrameHook
	DW	09d0cH
	DW	041b6H
	DB	09bH
	DB	02eH
	DB	039H
	DB	09aH
	DB	010H
	DB	013H
	DB	017H
	DB	081H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_IsEqualGUID
PUBLIC	_==
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	__vsprintf_l
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	__vscprintf_l
PUBLIC	__vscprintf
PUBLIC	_sprintf
PUBLIC	__snprintf
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	??$AtlMultiply@I@ATL@@YAJPAIII@Z		; ATL::AtlMultiply<unsigned int>
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??0CTime@ATL@@QAE@_J@Z				; ATL::CTime::CTime
PUBLIC	?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z	; ATL::CTime::GetLocalTm
PUBLIC	?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??$HashKey@K@@YGIK@Z				; HashKey<unsigned long>
PUBLIC	??0tagPersonalUserScoreInfo@@QAE@XZ		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
PUBLIC	??0IUnknownEx@@QAE@XZ				; IUnknownEx::IUnknownEx
PUBLIC	?GetProductVer@@YAEK@Z				; GetProductVer
PUBLIC	?GetMainVer@@YAEK@Z				; GetMainVer
PUBLIC	?GetSubVer@@YAEK@Z				; GetSubVer
PUBLIC	?GetBuildVer@@YAEK@Z				; GetBuildVer
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	?IsForfendGameChat@CServerRule@@SA_NK@Z		; CServerRule::IsForfendGameChat
PUBLIC	?IsAllowDynamicJoin@CServerRule@@SA_NK@Z	; CServerRule::IsAllowDynamicJoin
PUBLIC	?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAvertCheatMode
PUBLIC	?IsRecordGameScore@CServerRule@@SA_NK@Z		; CServerRule::IsRecordGameScore
PUBLIC	?IsForfendGameEnter@CServerRule@@SA_NK@Z	; CServerRule::IsForfendGameEnter
PUBLIC	?IsForfendGameLookon@CServerRule@@SA_NK@Z	; CServerRule::IsForfendGameLookon
PUBLIC	?IsForfendGameRule@CServerRule@@SA_NK@Z		; CServerRule::IsForfendGameRule
PUBLIC	?IsAllowAndroidAttend@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidAttend
PUBLIC	?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidSimulate
PUBLIC	?IsSuportPlayBack@CServerRule@@SA_NK@Z		; CServerRule::IsSuportPlayBack
PUBLIC	?CanRoomChat@CUserRight@@SA_NK@Z		; CUserRight::CanRoomChat
PUBLIC	??0ITableFrame@@QAE@XZ				; ITableFrame::ITableFrame
PUBLIC	??0ICompilationSink@@QAE@XZ			; ICompilationSink::ICompilationSink
PUBLIC	??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z	; SerializeElements<unsigned long>
PUBLIC	??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z	; DumpElements<unsigned long>
PUBLIC	??$CompareElements@KK@@YGHPBK0@Z		; CompareElements<unsigned long,unsigned long>
PUBLIC	??0?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAE@XZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::CWHArray<IServerUserItem *,IServerUserItem * const &>
PUBLIC	??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::~CWHArray<IServerUserItem *,IServerUserItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEHABQAUIServerUserItem@@@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHABQAUIServerUserItem@@@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHH@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::RemoveAt
PUBLIC	??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAEPAXI@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
PUBLIC	??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABQAUtagGameScoreRecord@@@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Add
PUBLIC	?Append@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHABQAUtagGameScoreRecord@@@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@KK_JAA_J@@QAE@H@Z			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CMap<unsigned long,unsigned long,__int64,__int64 &>
PUBLIC	?Lookup@?$CMap@KK_JAA_J@@QBEHKAA_J@Z		; CMap<unsigned long,unsigned long,__int64,__int64 &>::Lookup
PUBLIC	??A?$CMap@KK_JAA_J@@QAEAA_JK@Z			; CMap<unsigned long,unsigned long,__int64,__int64 &>::operator[]
PUBLIC	?SetAt@?$CMap@KK_JAA_J@@QAEXKAA_J@Z		; CMap<unsigned long,unsigned long,__int64,__int64 &>::SetAt
PUBLIC	?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ		; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KK_JAA_J@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KK_JAA_J@@QBEXAAPAU__POSITION@@AAKAA_J@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KK_JAA_J@@QAEXIH@Z	; CMap<unsigned long,unsigned long,__int64,__int64 &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KK_JAA_J@@IAEPAVCAssoc@1@K@Z	; CMap<unsigned long,unsigned long,__int64,__int64 &>::NewAssoc
PUBLIC	?GetAssocAt@?$CMap@KK_JAA_J@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetAssocAt
PUBLIC	??1?$CMap@KK_JAA_J@@UAE@XZ			; CMap<unsigned long,unsigned long,__int64,__int64 &>::~CMap<unsigned long,unsigned long,__int64,__int64 &>
PUBLIC	?Serialize@?$CMap@KK_JAA_J@@UAEXAAVCArchive@@@Z	; CMap<unsigned long,unsigned long,__int64,__int64 &>::Serialize
PUBLIC	?Dump@?$CMap@KK_JAA_J@@UBEXAAVCDumpContext@@@Z	; CMap<unsigned long,unsigned long,__int64,__int64 &>::Dump
PUBLIC	?AssertValid@?$CMap@KK_JAA_J@@UBEXXZ		; CMap<unsigned long,unsigned long,__int64,__int64 &>::AssertValid
PUBLIC	??_G?$CMap@KK_JAA_J@@UAEPAXI@Z			; CMap<unsigned long,unsigned long,__int64,__int64 &>::`scalar deleting destructor'
PUBLIC	??0CTableFrame@@QAE@XZ				; CTableFrame::CTableFrame
PUBLIC	??1CTableFrame@@UAE@XZ				; CTableFrame::~CTableFrame
PUBLIC	?Release@CTableFrame@@UAEXXZ			; CTableFrame::Release
PUBLIC	?QueryInterface@CTableFrame@@UAEPAXABU_GUID@@K@Z ; CTableFrame::QueryInterface
PUBLIC	?GetTableID@CTableFrame@@UAEGXZ			; CTableFrame::GetTableID
PUBLIC	?GetChairCount@CTableFrame@@UAEGXZ		; CTableFrame::GetChairCount
PUBLIC	?GetNullChairCount@CTableFrame@@UAEGXZ		; CTableFrame::GetNullChairCount
PUBLIC	?GetCustomRule@CTableFrame@@UAEPAXXZ		; CTableFrame::GetCustomRule
PUBLIC	?GetGameMatchOption@CTableFrame@@UAEPAUtagGameMatchOption@@XZ ; CTableFrame::GetGameMatchOption
PUBLIC	?GetGameServiceAttrib@CTableFrame@@UAEPAUtagGameServiceAttrib@@XZ ; CTableFrame::GetGameServiceAttrib
PUBLIC	?GetGameServiceOption@CTableFrame@@UAEPAUtagGameServiceOption@@XZ ; CTableFrame::GetGameServiceOption
PUBLIC	?GetStartMode@CTableFrame@@UAEEXZ		; CTableFrame::GetStartMode
PUBLIC	?SetStartMode@CTableFrame@@UAEXE@Z		; CTableFrame::SetStartMode
PUBLIC	?GetCellScore@CTableFrame@@UAEJXZ		; CTableFrame::GetCellScore
PUBLIC	?SetCellScore@CTableFrame@@UAEXJ@Z		; CTableFrame::SetCellScore
PUBLIC	?GetGameStatus@CTableFrame@@UAEEXZ		; CTableFrame::GetGameStatus
PUBLIC	?SetGameStatus@CTableFrame@@UAEXE@Z		; CTableFrame::SetGameStatus
PUBLIC	?IsGameStarted@CTableFrame@@UAE_NXZ		; CTableFrame::IsGameStarted
PUBLIC	?IsDrawStarted@CTableFrame@@UAE_NXZ		; CTableFrame::IsDrawStarted
PUBLIC	?IsTableStarted@CTableFrame@@UAE_NXZ		; CTableFrame::IsTableStarted
PUBLIC	?IsTableLocked@CTableFrame@@UAE_NXZ		; CTableFrame::IsTableLocked
PUBLIC	?SetPersonalTablePassword@CTableFrame@@UAEXPAUtagRoomPassword@@@Z ; CTableFrame::SetPersonalTablePassword
PUBLIC	?StartGame@CTableFrame@@UAE_NXZ			; CTableFrame::StartGame
PUBLIC	?DismissGame@CTableFrame@@UAE_NXZ		; CTableFrame::DismissGame
PUBLIC	?ConcludeGame@CTableFrame@@UAE_NEH@Z		; CTableFrame::ConcludeGame
PUBLIC	?ConcludeTable@CTableFrame@@UAE_NXZ		; CTableFrame::ConcludeTable
PUBLIC	?SearchUserItem@CTableFrame@@UAEPAUIServerUserItem@@K@Z ; CTableFrame::SearchUserItem
PUBLIC	?GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z ; CTableFrame::GetTableUserItem
PUBLIC	?EnumLookonUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z ; CTableFrame::EnumLookonUserItem
PUBLIC	?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z ; CTableFrame::WriteUserScore
PUBLIC	?WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z ; CTableFrame::WriteTableScore
PUBLIC	?WriteTableVideoPlayer@CTableFrame@@UAE_NKPAD@Z	; CTableFrame::WriteTableVideoPlayer
PUBLIC	?WriteTableVideoData@CTableFrame@@UAE_NPADGGPAEG@Z ; CTableFrame::WriteTableVideoData
PUBLIC	?CalculateRevenue@CTableFrame@@UAE_JG_J@Z	; CTableFrame::CalculateRevenue
PUBLIC	?QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z ; CTableFrame::QueryConsumeQuota
PUBLIC	?SetGameTimer@CTableFrame@@UAE_NKKKI@Z		; CTableFrame::SetGameTimer
PUBLIC	?KillGameTimer@CTableFrame@@UAE_NK@Z		; CTableFrame::KillGameTimer
PUBLIC	?SendTableData@CTableFrame@@UAE_NGG@Z		; CTableFrame::SendTableData
PUBLIC	?SendTableData@CTableFrame@@UAE_NGGPAXGG@Z	; CTableFrame::SendTableData
PUBLIC	?SendLookonData@CTableFrame@@UAE_NGG@Z		; CTableFrame::SendLookonData
PUBLIC	?SendLookonData@CTableFrame@@UAE_NGGPAXG@Z	; CTableFrame::SendLookonData
PUBLIC	?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z ; CTableFrame::SendUserItemData
PUBLIC	?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z ; CTableFrame::SendUserItemData
PUBLIC	?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z ; CTableFrame::SendRoomData
PUBLIC	?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z ; CTableFrame::SendRoomData
PUBLIC	?SendGameMessage@CTableFrame@@UAE_NPBDG@Z	; CTableFrame::SendGameMessage
PUBLIC	?SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z ; CTableFrame::SendGameMessage
PUBLIC	?SendRoomMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z ; CTableFrame::SendRoomMessage
PUBLIC	?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z ; CTableFrame::PerformStandUpAction
PUBLIC	?PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z ; CTableFrame::PerformLookonAction
PUBLIC	?PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z ; CTableFrame::PerformSitDownAction
PUBLIC	?SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z ; CTableFrame::SendGameScene
PUBLIC	?SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z ; CTableFrame::SetTableFrameHook
PUBLIC	?GetTableFrameHook@CTableFrame@@UAEPAUIUnknownEx@@XZ ; CTableFrame::GetTableFrameHook
PUBLIC	?ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z ; CTableFrame::ImitateGameOption
PUBLIC	?SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z ; CTableFrame::SendChatMessage
PUBLIC	?GetCompilation@CTableFrame@@UAEPBDXZ		; CTableFrame::GetCompilation
PUBLIC	?GetDrawCount@CTableFrame@@UAEGXZ		; CTableFrame::GetDrawCount
PUBLIC	?GetNullChairID@CTableFrame@@UAEGXZ		; CTableFrame::GetNullChairID
PUBLIC	?GetRandNullChairID@CTableFrame@@QAEGXZ		; CTableFrame::GetRandNullChairID
PUBLIC	?GetSitUserCount@CTableFrame@@QAEGXZ		; CTableFrame::GetSitUserCount
PUBLIC	?GetLookonUserCount@CTableFrame@@QAEGXZ		; CTableFrame::GetLookonUserCount
PUBLIC	?GetOffLineUserCount@CTableFrame@@QAEGXZ	; CTableFrame::GetOffLineUserCount
PUBLIC	?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
PUBLIC	?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z ; CTableFrame::InitializationFrame
PUBLIC	?OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ; CTableFrame::OnEventUserOffLine
PUBLIC	?OnUserScroeNotify@CTableFrame@@UAE_NGPAUIServerUserItem@@E@Z ; CTableFrame::OnUserScroeNotify
PUBLIC	?OnEventTimer@CTableFrame@@QAE_NKI@Z		; CTableFrame::OnEventTimer
PUBLIC	?OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ; CTableFrame::OnEventSocketGame
PUBLIC	?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ; CTableFrame::OnEventSocketFrame
PUBLIC	?SendTableStatus@CTableFrame@@QAE_NXZ		; CTableFrame::SendTableStatus
PUBLIC	?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure
PUBLIC	?EfficacyStartGame@CTableFrame@@QAE_NG@Z	; CTableFrame::EfficacyStartGame
PUBLIC	?EfficacyIPAddress@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ; CTableFrame::EfficacyIPAddress
PUBLIC	?EfficacyScoreRule@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ; CTableFrame::EfficacyScoreRule
PUBLIC	?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z ; CTableFrame::EfficacyEnterTableScoreRule
PUBLIC	?CheckDistribute@CTableFrame@@QAE_NXZ		; CTableFrame::CheckDistribute
PUBLIC	?RecordGameScore@CTableFrame@@QAEX_NK@Z		; CTableFrame::RecordGameScore
PUBLIC	?IsPersonalTableLocked@CTableFrame@@UAE_NXZ	; CTableFrame::IsPersonalTableLocked
PUBLIC	?SetPersonalTableLocked@CTableFrame@@UAEX_N@Z	; CTableFrame::SetPersonalTableLocked
PUBLIC	?GetPersonalScore@CTableFrame@@UAE_NKAA_J@Z	; CTableFrame::GetPersonalScore
PUBLIC	?GetPersonalTableParameter@CTableFrame@@UAE?AUtagPersonalTableParameter@@XZ ; CTableFrame::GetPersonalTableParameter
PUBLIC	?SetTableOwner@CTableFrame@@UAEXK@Z		; CTableFrame::SetTableOwner
PUBLIC	?GetTableOwner@CTableFrame@@UAEKXZ		; CTableFrame::GetTableOwner
PUBLIC	?GetRecordTableOwner@CTableFrame@@UAEKXZ	; CTableFrame::GetRecordTableOwner
PUBLIC	?SetPersonalTable@CTableFrame@@UAEXKK_J@Z	; CTableFrame::SetPersonalTable
PUBLIC	?SetPersonalTableParameter@CTableFrame@@UAEXUtagPersonalTableParameter@@UtagPersonalRoomOption@@@Z ; CTableFrame::SetPersonalTableParameter
PUBLIC	?SetTimerNotBeginAfterCreate@CTableFrame@@UAEXXZ ; CTableFrame::SetTimerNotBeginAfterCreate
PUBLIC	?CancelTableRequest@CTableFrame@@UAE_NKG@Z	; CTableFrame::CancelTableRequest
PUBLIC	?CancelTableRequestReply@CTableFrame@@UAE_NKE@Z	; CTableFrame::CancelTableRequestReply
PUBLIC	?SetPersonalRoomID@CTableFrame@@UAEXK@Z		; CTableFrame::SetPersonalRoomID
PUBLIC	?HostDissumeGame@CTableFrame@@UAEXH@Z		; CTableFrame::HostDissumeGame
PUBLIC	?GetPersonalRoomID@CTableFrame@@UAEKXZ		; CTableFrame::GetPersonalRoomID
PUBLIC	?SetGameRule@CTableFrame@@UAEXPAEH@Z		; CTableFrame::SetGameRule
PUBLIC	?GetGameRule@CTableFrame@@UAEPAEXZ		; CTableFrame::GetGameRule
PUBLIC	?GetSpeicalInfo@CTableFrame@@UAEXPAEH@Z		; CTableFrame::GetSpeicalInfo
PUBLIC	?SetTableChairCount@CTableFrame@@UAEXG@Z	; CTableFrame::SetTableChairCount
PUBLIC	?IsPersonalRoomDisumme@CTableFrame@@UAE_NXZ	; CTableFrame::IsPersonalRoomDisumme
PUBLIC	?SetDataBaseMode@CTableFrame@@UAEXE@Z		; CTableFrame::SetDataBaseMode
PUBLIC	?GetDataBaseMode@CTableFrame@@UAEEXZ		; CTableFrame::GetDataBaseMode
PUBLIC	?SetPersonalRoomGUID@CTableFrame@@UAEXPADH@Z	; CTableFrame::SetPersonalRoomGUID
PUBLIC	?GetPersonalRoomGUID@CTableFrame@@UAEPADXZ	; CTableFrame::GetPersonalRoomGUID
PUBLIC	?SetPayRoomCardMode@CTableFrame@@UAEXEJE@Z	; CTableFrame::SetPayRoomCardMode
PUBLIC	?GetPayRoomCardMode@CTableFrame@@UAEEXZ		; CTableFrame::GetPayRoomCardMode
PUBLIC	?SetHostAddr@CTableFrame@@UAEXK@Z		; CTableFrame::SetHostAddr
PUBLIC	?GetHostAddr@CTableFrame@@UAEKXZ		; CTableFrame::GetHostAddr
PUBLIC	?GetDrawCountLimit@CTableFrame@@UAEKXZ		; CTableFrame::GetDrawCountLimit
PUBLIC	?SetCreatePersonalTime@CTableFrame@@UAEXU_SYSTEMTIME@@@Z ; CTableFrame::SetCreatePersonalTime
PUBLIC	?SetLoopCount@CTableFrame@@UAEXE@Z		; CTableFrame::SetLoopCount
PUBLIC	?GetLoopCount@CTableFrame@@UAEEXZ		; CTableFrame::GetLoopCount
PUBLIC	?GetGameMode@CTableFrame@@UAEEXZ		; CTableFrame::GetGameMode
PUBLIC	??_GCTableFrame@@UAEPAXI@Z			; CTableFrame::`scalar deleting destructor'
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ	; _snprintf_s<260>
PUBLIC	??0CPair@?$CMap@KK_JAA_J@@IAE@K@Z		; CMap<unsigned long,unsigned long,__int64,__int64 &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KK_JAA_J@@QAE@K@Z		; CMap<unsigned long,unsigned long,__int64,__int64 &>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@_J@@YGXAAVCArchive@@PA_JH@Z ; SerializeElements<__int64>
PUBLIC	??$DumpElements@_J@@YGXAAVCDumpContext@@PB_JH@Z	; DumpElements<__int64>
PUBLIC	?Release@CTableFrame@@W3AEXXZ			; [thunk]:CTableFrame::Release`adjustor{4}'
PUBLIC	?QueryInterface@CTableFrame@@W3AEPAXABU_GUID@@K@Z ; [thunk]:CTableFrame::QueryInterface`adjustor{4}'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrowImpl'::`1'::__LINE__Var
PUBLIC	??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ ; `string'
PUBLIC	??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA ; `ATL::CTime::GetLocalTm'::`1'::__LINE__Var
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_C@_0BG@LDDEPHLF@open?5?$CK?$CK?$CK?5?H?U?V?$LO?P?E?O?$KC?5?$CFs?5@ ; `string'
PUBLIC	??_C@_0BD@DCGNBEMB@?$CFd?9?$CFd?9?$CFd?9?$CFd?3?5?$CFs?5?$AN?6@ ; `string'
PUBLIC	??_C@_03GGEOLGBL@Log@				; `string'
PUBLIC	??_C@_0BM@MPGOOIFH@Log?1?1?$CFd?9?$CFd?9?$CFd?9ServerLog?4txt@ ; `string'
PUBLIC	??_C@_0N@LMHKOMJJ@openfile?5?5?$CFs@		; `string'
PUBLIC	??_C@_03HIKJINGA@at?$CL@			; `string'
PUBLIC	??_C@_0BG@FGDEEIKF@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LD?I?$LJ?$KG@ ; `string'
PUBLIC	??_C@_0BG@FNDGHLBI@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LE?m?N?s@ ; `string'
PUBLIC	??_7ITableFrame@@6B@				; ITableFrame::`vftable'
PUBLIC	??_7ICompilationSink@@6B@			; ICompilationSink::`vftable'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_7?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@	; CWHArray<IServerUserItem *,IServerUserItem * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`vftable'
PUBLIC	?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
PUBLIC	??_7?$CMap@KK_JAA_J@@6B@			; CMap<unsigned long,unsigned long,__int64,__int64 &>::`vftable'
PUBLIC	??_7CTableFrame@@6BITableFrame@@@		; CTableFrame::`vftable'
PUBLIC	??_7CTableFrame@@6BICompilationSink@@@		; CTableFrame::`vftable'
PUBLIC	?__LINE__Var@?0??StartGame@CTableFrame@@UAE_NXZ@4JA ; `CTableFrame::StartGame'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DismissGame@CTableFrame@@UAE_NXZ@4JA ; `CTableFrame::DismissGame'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ConcludeGame@CTableFrame@@UAE_NEH@Z@4JA ; `CTableFrame::ConcludeGame'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@ ; `string'
PUBLIC	??_C@_0CH@OPGIFPHK@?D?z?$LF?D?S?N?O?$LH?$LL?$PN?$LH?V?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@ ; `string'
PUBLIC	??_C@_0CN@COMBKMFK@?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S@ ; `string'
PUBLIC	?__LINE__Var@?0??WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z@4JA ; `CTableFrame::WriteUserScore'::`1'::__LINE__Var
PUBLIC	??_C@_0CL@IKLNOEBJ@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?D?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@ ; `string'
PUBLIC	??_C@_0CI@KNPBKMHB@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?$KL?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@ ; `string'
PUBLIC	??_C@_0CG@BJIOFAKH@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?$LL?$KE?I?m?$LH?$PL?$LP?$KI?5?$FN?$KD?$KM?$LL?$PN?$LH?V@ ; `string'
PUBLIC	__TI2PAD
PUBLIC	__CTA2PAD
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAD@84
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAX@84
PUBLIC	??_C@_0BF@OJEHDHNG@?S?N?O?$LH?$LM?G?B?$LM?$LG?T?O?s?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ ; `string'
PUBLIC	?__LINE__Var@?0??WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z@4JA ; `CTableFrame::WriteTableScore'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??CalculateRevenue@CTableFrame@@UAE_JG_J@Z@4JA ; `CTableFrame::CalculateRevenue'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z@4JA ; `CTableFrame::QueryConsumeQuota'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z@4JA ; `CTableFrame::GetTableUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetGameTimer@CTableFrame@@UAE_NKKKI@Z@4JA ; `CTableFrame::SetGameTimer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??KillGameTimer@CTableFrame@@UAE_NK@Z@4JA ; `CTableFrame::KillGameTimer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z@4JA ; `CTableFrame::SendUserItemData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z@4JA ; `CTableFrame::SendUserItemData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendTableData@CTableFrame@@UAE_NGG@Z@4JA ; `CTableFrame::SendTableData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendLookonData@CTableFrame@@UAE_NGG@Z@4JA ; `CTableFrame::SendLookonData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPBDG@Z@4JA ; `CTableFrame::SendGameMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA ; `CTableFrame::SendGameMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z@4JA ; `CTableFrame::SendGameScene'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z@4JA ; `CTableFrame::SetTableFrameHook'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z@4JA ; `CTableFrame::ImitateGameOption'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z@4JA ; `CTableFrame::SendChatMessage'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@ ; `string'
PUBLIC	??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z@4JA ; `CTableFrame::OnEventUserOffLine'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA ; `CTableFrame::OnEventTimer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA ; `CTableFrame::OnEventSocketGame'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA ; `CTableFrame::OnEventSocketFrame'::`1'::__LINE__Var
PUBLIC	??_C@_0BJ@BFEPDGOK@?$LH?$LP?$LM?d?$LL?$LJ?N?$LE?$LE?$LE?$LN?$KI?$KD?$KM?N?$NO?$LH?$KI?$LN?x?H?k?$KD?$KB@ ; `string'
PUBLIC	??_C@_0N@PEOJOPIF@?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC@ ; `string'
PUBLIC	??_C@_0CF@IEAHKEDO@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$KD?$KM?W?$KD?D?z?S?N?O?$LH?S@ ; `string'
PUBLIC	??_C@_0BL@FDDKLKIA@?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G?k?I?T?$LK?s?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z@4JA ; `CTableFrame::InitializationFrame'::`1'::__LINE__Var
PUBLIC	??_C@_0BF@FCLAICIB@?$CFs?2PersonalTable?4ini@	; `string'
PUBLIC	??_C@_0P@OOPDANCH@PlayerWaitTime@		; `string'
PUBLIC	??_C@_0BD@EHGOMFHF@TableOwnerWaitTime@		; `string'
PUBLIC	??_C@_0BC@JKMCHJPE@GameStartOverTime@		; `string'
PUBLIC	?__LINE__Var@?0??PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z@4JA ; `CTableFrame::PerformStandUpAction'::`1'::__LINE__Var
PUBLIC	??_C@_0DB@BACGKDF@?$LM?$LE?J?$LB?H?$PM?V?P?$LD?v?O?V?M?f?$LM?R?3?5?$CFd?F?p?A?$KC?J?$LB?W?$LE?L?$KM?N@ ; `string'
PUBLIC	??_C@_0BP@LMDGPNLB@?$LE?K?S?N?O?$LH?W?$MA?$LF?D?K?y?S?P?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP?$KK?A?K?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CH@CEHEIJKA@?S?I?M?f?$LM?R?$MA?k?$LP?$KK?$KD?$KM?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G@ ; `string'
PUBLIC	?__LINE__Var@?0??PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z@4JA ; `CTableFrame::PerformLookonAction'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@IPFJJGIH@?T?$LM?U?$LN?$LH?$LP?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CD@MNPNNHIG@?S?N?O?$LH?$LL?$LJ?C?$LL?S?P?$LP?$KK?J?$LM?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$LE?K?S?N?O?$LH?W@ ; `string'
PUBLIC	??_C@_0CB@EHMDHMJJ@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@ ; `string'
PUBLIC	??_C@_0CB@NJNGCIAH@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@ ; `string'
PUBLIC	??_C@_0CN@JOFFIFMN@?D?z?K?y?G?k?G?s?$LF?D?N?$LL?V?C?C?$LL?S?P?S?N?O?$LH?M?f?$LM?R?$KD?$KM?N?$NO?$LH@ ; `string'
PUBLIC	??_C@_0CF@GJHCGP@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?S@ ; `string'
PUBLIC	?__LINE__Var@?0??PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z@4JA ; `CTableFrame::PerformSitDownAction'::`1'::__LINE__Var
PUBLIC	??_C@_0BE@NAFGAAOB@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC1?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BE@MCODKPAP@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC2?$KD?$KB@ ; `string'
PUBLIC	??_C@_0DB@MOHGBBK@?R?N?W?S?R?Q?$LO?$KN?$LB?$LL?5?$FL?5?$CFs?5?$FN?5?$LN?$NN?W?c?O?H?$LF?G?A?K?$KD?$KM?O@ ; `string'
PUBLIC	??_C@_0CH@KFMNDNLD@?D?z?$LF?D?W?j?J?$KP?J?$PN?A?$LP?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@ ; `string'
PUBLIC	??_C@_0BF@JFHBNNDB@?$LB?$KH?G?$LI?$KD?$KM?T?$LM?U?$LN?R?Q?$LO?$KN?$LP?$KK?J?$LM?$KD?$KB@ ; `string'
PUBLIC	??_C@_0HC@EGIPEGNE@userid?5?$DN?5?$CFd?5?5m_wChairCount?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0BN@KGKBJPME@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?H?K?J?$PN?R?Q?B?z?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CB@NMLDBGEG@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LN?x?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CF@NFDLJKEK@?S?N?O?$LH?R?Q?$LO?$KN?$LP?$KK?J?$LM?A?K?$KD?$KM?O?V?T?Z?$LC?$LL?D?$NM?$LN?x?H?k?S?N?O@ ; `string'
PUBLIC	??_C@_0BE@MONKBGOO@?C?$NM?B?k?$LB?$LL?J?$LJ?S?C?0?R?Q?$LJ?$PN?F?Z?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BP@OBBKOCFP@?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S?N?O?$LH?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CF@FMPIBIL@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S@ ; `string'
PUBLIC	?__LINE__Var@?0??EfficacyStartGame@CTableFrame@@QAE_NG@Z@4JA ; `CTableFrame::EfficacyStartGame'::`1'::__LINE__Var
PUBLIC	??_C@_0FP@HJKNBJDK@?$LE?K?S?N?O?$LH?W?$MA?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF@ ; `string'
PUBLIC	??_C@_0FH@GMPNLGDP@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@ ; `string'
PUBLIC	??_C@_0FD@FJCGPGNB@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@ ; `string'
PUBLIC	??_C@_0DF@OLOBDEEC@?D?z?$LF?D?L?S?E?$NM?B?J?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V@ ; `string'
PUBLIC	??_C@_0DD@KCKDKCBH@?D?z?$LF?D?J?$KE?B?J?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@ ; `string'
PUBLIC	??_C@_0DD@ILLHEC@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@ ; `string'
PUBLIC	??_C@_0DD@KCEHNENI@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@ ; `string'
PUBLIC	??_C@_0DM@HLIDKABO@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LB?R@ ; `string'
PUBLIC	??_C@_0DM@LGDJKEOB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?$LB?H?H?$PM?$LB?R@ ; `string'
PUBLIC	??_C@_0DM@NJICMNBB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LL?$PN@ ; `string'
PUBLIC	?__LINE__Var@?0??RecordGameScore@CTableFrame@@QAEX_NK@Z@4JA ; `CTableFrame::RecordGameScore'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@NAIKEGDD@ptdtjs?5?$CK?$CK?$CK?5?O?r?5UserID?5?$DN?5?$CFd?5?5?5Nic@ ; `string'
PUBLIC	??_C@_0DG@JDEJHMNA@ptdtcs?5?$CK?$CK?$CK?$CK?5?5kill?5?5?5IDI_PERSONA@ ; `string'
PUBLIC	??_C@_0BN@OELOPBKB@?M?f?$LM?R?I?j?G?k?$LN?b?I?$KC?$KD?$KM?S?N?O?$LH?L?a?G?$LA?$LN?a?J?x?$KD?$KB@ ; `string'
PUBLIC	??_C@_0L@INAKIJJF@?T?$LM?U?$LN?$LN?a?J?x?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BD@HIPNDJBM@?$LH?$LP?V?w?G?$LP?V?F?$LN?b?I?$KC?S?N?O?$LH?$KD?$KB@ ; `string'
PUBLIC	??_C@_0P@IHBJCBPJ@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KD?$KB@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ITableFrame@@6B@				; ITableFrame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUITableFrame@@@8				; ITableFrame `RTTI Type Descriptor'
PUBLIC	??_R3ITableFrame@@8				; ITableFrame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITableFrame@@8				; ITableFrame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITableFrame@@8			; ITableFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ICompilationSink@@6B@			; ICompilationSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUICompilationSink@@@8			; ICompilationSink `RTTI Type Descriptor'
PUBLIC	??_R3ICompilationSink@@8			; ICompilationSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompilationSink@@8			; ICompilationSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompilationSink@@8		; ICompilationSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTableFrame@@6BITableFrame@@@		; CTableFrame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTableFrame@@@8				; CTableFrame `RTTI Type Descriptor'
PUBLIC	??_R3CTableFrame@@8				; CTableFrame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTableFrame@@8				; CTableFrame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTableFrame@@8			; CTableFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompilationSink@@8		; ICompilationSink::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R4CTableFrame@@6BICompilationSink@@@		; CTableFrame::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUIServerUserItem@@ABQAU1@@@@8 ; CWHArray<IServerUserItem *,IServerUserItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8	; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8	; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8 ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@@8 ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KK_JAA_J@@6B@			; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KK_JAA_J@@@8			; CMap<unsigned long,unsigned long,__int64,__int64 &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KK_JAA_J@@8				; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KK_JAA_J@@8				; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KK_JAA_J@@8		; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__lstrcmpA@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp___localtime64:PROC
EXTRN	__imp___localtime64_s:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowOleException@@YGXJ@Z:PROC		; AfxThrowOleException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??2@YAPAXIPBDH@Z:PROC				; operator new
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	__imp___mkdir:PROC
EXTRN	__imp_?GetWorkDirectory@CWHService@@SA_NQADG@Z:PROC
EXTRN	__imp_??0CWHIniData@@QAE@XZ:PROC
EXTRN	__imp_??1CWHIniData@@UAE@XZ:PROC
EXTRN	__imp_?SetIniFilePath@CWHIniData@@QAEXPBD@Z:PROC
EXTRN	__imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	__imp_?SearchValidPropertyBuff@CGamePropertyManager@@SAPAUtagPropertyBuff@@KW4PROP_KIND@@@Z:PROC
EXTRN	??_E?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`vector deleting destructor'
EXTRN	??_E?$CMap@KK_JAA_J@@UAEPAXI@Z:PROC		; CMap<unsigned long,unsigned long,__int64,__int64 &>::`vector deleting destructor'
EXTRN	??_ECTableFrame@@UAEPAXI@Z:PROC			; CTableFrame::`vector deleting destructor'
EXTRN	?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z:PROC ; CAttemperEngineSink::PerformRoomTaskProgress
EXTRN	?SaveVideoPlayerInfo@CAttemperEngineSink@@QAE_NKPAD@Z:PROC ; CAttemperEngineSink::SaveVideoPlayerInfo
EXTRN	?SaveVideoDataInfo@CAttemperEngineSink@@QAE_NPADGGPAEG@Z:PROC ; CAttemperEngineSink::SaveVideoDataInfo
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
_BSS	SEGMENT
?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A DB 014H DUP (?) ; CTableFrame::m_GameScoreRecordBuffer
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KK_JAA_J@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KK_JAA_J@@8 DD FLAT:??_R0?AV?$CMap@KK_JAA_J@@@8 ; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KK_JAA_J@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KK_JAA_J@@8
rdata$r	SEGMENT
??_R2?$CMap@KK_JAA_J@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KK_JAA_J@@8 ; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KK_JAA_J@@8
rdata$r	SEGMENT
??_R3?$CMap@KK_JAA_J@@8 DD 00H				; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KK_JAA_J@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KK_JAA_J@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KK_JAA_J@@@8 DD FLAT:??_7type_info@@6B@	; CMap<unsigned long,unsigned long,__int64,__int64 &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KK_JAA_J@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KK_JAA_J@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KK_JAA_J@@6B@ DD 00H			; CMap<unsigned long,unsigned long,__int64,__int64 &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KK_JAA_J@@@8
	DD	FLAT:??_R3?$CMap@KK_JAA_J@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@@8 ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8 DD 00H ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUIServerUserItem@@ABQAU1@@@@8 ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8 ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8 DD 00H	; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUIServerUserItem@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUIServerUserItem@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<IServerUserItem *,IServerUserItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUIServerUserItem@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@ DD 00H	; CWHArray<IServerUserItem *,IServerUserItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUIServerUserItem@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUIServerUserItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTableFrame@@6BICompilationSink@@@
rdata$r	SEGMENT
??_R4CTableFrame@@6BICompilationSink@@@ DD 00H		; CTableFrame::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCTableFrame@@@8
	DD	FLAT:??_R3CTableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@ICompilationSink@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompilationSink@@8 DD FLAT:??_R0?AUICompilationSink@@@8 ; ICompilationSink::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompilationSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTableFrame@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTableFrame@@8 DD FLAT:??_R0?AVCTableFrame@@@8 ; CTableFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R2CTableFrame@@8
rdata$r	SEGMENT
??_R2CTableFrame@@8 DD FLAT:??_R1A@?0A@EA@CTableFrame@@8 ; CTableFrame::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ITableFrame@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R13?0A@EA@ICompilationSink@@8
	DD	FLAT:??_R13?0A@EC@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CTableFrame@@8
rdata$r	SEGMENT
??_R3CTableFrame@@8 DD 00H				; CTableFrame::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	05H
	DD	FLAT:??_R2CTableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTableFrame@@@8
data$r	SEGMENT
??_R0?AVCTableFrame@@@8 DD FLAT:??_7type_info@@6B@	; CTableFrame `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTableFrame@@', 00H
data$r	ENDS
;	COMDAT ??_R4CTableFrame@@6BITableFrame@@@
rdata$r	SEGMENT
??_R4CTableFrame@@6BITableFrame@@@ DD 00H		; CTableFrame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTableFrame@@@8
	DD	FLAT:??_R3CTableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompilationSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompilationSink@@8 DD FLAT:??_R0?AUICompilationSink@@@8 ; ICompilationSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompilationSink@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompilationSink@@8
rdata$r	SEGMENT
??_R2ICompilationSink@@8 DD FLAT:??_R1A@?0A@EA@ICompilationSink@@8 ; ICompilationSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompilationSink@@8
rdata$r	SEGMENT
??_R3ICompilationSink@@8 DD 00H				; ICompilationSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompilationSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompilationSink@@@8
data$r	SEGMENT
??_R0?AUICompilationSink@@@8 DD FLAT:??_7type_info@@6B@	; ICompilationSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompilationSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4ICompilationSink@@6B@
rdata$r	SEGMENT
??_R4ICompilationSink@@6B@ DD 00H			; ICompilationSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompilationSink@@@8
	DD	FLAT:??_R3ICompilationSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ITableFrame@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITableFrame@@8 DD FLAT:??_R0?AUITableFrame@@@8 ; ITableFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R2ITableFrame@@8
rdata$r	SEGMENT
??_R2ITableFrame@@8 DD FLAT:??_R1A@?0A@EA@ITableFrame@@8 ; ITableFrame::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3ITableFrame@@8
rdata$r	SEGMENT
??_R3ITableFrame@@8 DD 00H				; ITableFrame::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ITableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITableFrame@@@8
data$r	SEGMENT
??_R0?AUITableFrame@@@8 DD FLAT:??_7type_info@@6B@	; ITableFrame `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITableFrame@@', 00H
data$r	ENDS
;	COMDAT ??_R4ITableFrame@@6B@
rdata$r	SEGMENT
??_R4ITableFrame@@6B@ DD 00H				; ITableFrame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUITableFrame@@@8
	DD	FLAT:??_R3ITableFrame@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IHBJCBPJ@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KD?$KB@
CONST	SEGMENT
??_C@_0P@IHBJCBPJ@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KD?$KB@ DB 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d7H, 0d4H, 0b6H, 0afH, 0bdH, 0e2H, 0c9H, 0a2H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIPNDJBM@?$LH?$LP?V?w?G?$LP?V?F?$LN?b?I?$KC?S?N?O?$LH?$KD?$KB@
CONST	SEGMENT
??_C@_0BD@HIPNDJBM@?$LH?$LP?V?w?G?$LP?V?F?$LN?b?I?$KC?S?N?O?$LH?$KD?$KB@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0c7H, 0bfH, 0d6H, 0c6H, 0bdH, 0e2H, 0c9H, 0a2H
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INAKIJJF@?T?$LM?U?$LN?$LN?a?J?x?$KB?$KD@
CONST	SEGMENT
??_C@_0L@INAKIJJF@?T?$LM?U?$LN?$LN?a?J?x?$KB?$KD@ DB 0d4H, 0bcH, 0d5H, 0bdH
	DB	0bdH, 0e1H, 0caH, 0f8H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OELOPBKB@?M?f?$LM?R?I?j?G?k?$LN?b?I?$KC?$KD?$KM?S?N?O?$LH?L?a?G?$LA?$LN?a?J?x?$KD?$KB@
CONST	SEGMENT
??_C@_0BN@OELOPBKB@?M?f?$LM?R?I?j?G?k?$LN?b?I?$KC?$KD?$KM?S?N?O?$LH?L?a?G?$LA?$LN?a?J?x?$KD?$KB@ DB 0cdH
	DB	0e6H, 0bcH, 0d2H, 0c9H, 0eaH, 0c7H, 0ebH, 0bdH, 0e2H, 0c9H, 0a2H
	DB	0a3H, 0acH, 0d3H, 0ceH, 0cfH, 0b7H, 0ccH, 0e1H, 0c7H, 0b0H, 0bdH
	DB	0e1H, 0caH, 0f8H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JDEJHMNA@ptdtcs?5?$CK?$CK?$CK?$CK?5?5kill?5?5?5IDI_PERSONA@
CONST	SEGMENT
??_C@_0DG@JDEJHMNA@ptdtcs?5?$CK?$CK?$CK?$CK?5?5kill?5?5?5IDI_PERSONA@ DB 'p'
	DB	'tdtcs ****  kill   IDI_PERSONAL_BEFORE_BEGAIN_TIME 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@NAIKEGDD@ptdtjs?5?$CK?$CK?$CK?5?O?r?5UserID?5?$DN?5?$CFd?5?5?5Nic@
CONST	SEGMENT
??_C@_0DD@NAIKEGDD@ptdtjs?5?$CK?$CK?$CK?5?O?r?5UserID?5?$DN?5?$CFd?5?5?5Nic@ DB 'p'
	DB	'tdtjs *** ', 0cfH, 0f2H, ' UserID = %d   Nicname = %s  ', 0b7H
	DB	0a2H, 0cbH, 0cdH, 0cfH, 0fbH, 0cfH, 0a2H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??RecordGameScore@CTableFrame@@QAEX_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RecordGameScore@CTableFrame@@QAEX_NK@Z@4JA DD 0e4fH ; `CTableFrame::RecordGameScore'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DM@NJICMNBB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LL?$PN@
CONST	SEGMENT
??_C@_0DM@NJICMNBB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LL?$PN@ DB 0bcH
	DB	0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0d6H, 0c1H, 0c9H, 0d9H
	DB	0d0H, 0e8H, 0d2H, 0aaH, ' %I64d ', 0b5H, 0c4H, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0bbH, 0fdH, 0b7H, 0d6H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H
	DB	0bbH, 0fdH, 0b7H, 0d6H, 0b2H, 0bbH, 0b9H, 0bbH, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@LGDJKEOB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?$LB?H?H?$PM?$LB?R@
CONST	SEGMENT
??_C@_0DM@LGDJKEOB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?$LB?H?H?$PM?$LB?R@ DB 0bcH
	DB	0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0d6H, 0c1H, 0c9H, 0d9H
	DB	0d0H, 0e8H, 0d2H, 0aaH, ' %I64d ', 0b5H, 0c4H, 0b1H, 0c8H, 0c8H
	DB	0fcH, 0b1H, 0d2H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H, 0b1H, 0c8H
	DB	0c8H, 0fcH, 0b1H, 0d2H, 0b2H, 0bbH, 0b9H, 0bbH, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HLIDKABO@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LB?R@
CONST	SEGMENT
??_C@_0DM@HLIDKABO@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LB?R@ DB 0bcH
	DB	0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0d6H, 0c1H, 0c9H, 0d9H
	DB	0d0H, 0e8H, 0d2H, 0aaH, ' %I64d ', 0b5H, 0c4H, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0b1H, 0d2H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b1H, 0d2H, 0b2H, 0bbH, 0b9H, 0bbH, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KCEHNENI@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@
CONST	SEGMENT
??_C@_0DD@KCEHNENI@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0bbH, 0fdH, 0b7H, 0d6H, 0ccH, 0abH, 0b5H, 0cdH
	DB	0a3H, 0acH, 0d3H, 0ebH, ' %s ', 0c9H, 0e8H, 0d6H, 0c3H, 0b5H, 0c4H
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0b7H, 0fbH, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@ILLHEC@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@
CONST	SEGMENT
??_C@_0DD@ILLHEC@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0bbH, 0fdH, 0b7H, 0d6H, 0ccH, 0abH, 0b8H, 0dfH
	DB	0a3H, 0acH, 0d3H, 0ebH, ' %s ', 0c9H, 0e8H, 0d6H, 0c3H, 0b5H, 0c4H
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0b7H, 0fbH, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KCKDKCBH@?D?z?$LF?D?J?$KE?B?J?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@
CONST	SEGMENT
??_C@_0DD@KCKDKCBH@?D?z?$LF?D?J?$KE?B?J?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0caH, 0a4H, 0c2H, 0caH, 0ccH, 0abH, 0b5H, 0cdH
	DB	0a3H, 0acH, 0d3H, 0ebH, ' %s ', 0c9H, 0e8H, 0d6H, 0c3H, 0b5H, 0c4H
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0b7H, 0fbH, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OLOBDEEC@?D?z?$LF?D?L?S?E?$NM?B?J?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V@
CONST	SEGMENT
??_C@_0DF@OLOBDEEC@?D?z?$LF?D?L?S?E?$NM?B?J?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0ccH, 0d3H, 0c5H, 0dcH, 0c2H, 0caH, 0ccH, 0abH
	DB	0b8H, 0dfH, 0a3H, 0acH, 0d3H, 0ebH, ' %s ', 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b5H, 0c4H, 0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0b7H, 0fbH, 0a3H
	DB	0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@FJCGPGNB@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@
CONST	SEGMENT
??_C@_0FD@FJCGPGNB@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@ DB 0c4H
	DB	0faH, 0c9H, 0e8H, 0d6H, 0c3H, 0c1H, 0cbH, 0b2H, 0bbH, 0b8H, 0faH
	DB	0cfH, 0e0H, 0cdH, 0acH, ' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0b5H, 0c4H
	DB	0cdH, 0e6H, 0bcH, 0d2H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0acH, 0b4H
	DB	0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0b4H, 0e6H, 0d4H, 0daH
	DB	' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0cfH, 0e0H, 0cdH, 0acH, 0b5H, 0c4H
	DB	0cdH, 0e6H, 0bcH, 0d2H, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bcH
	DB	0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@GMPNLGDP@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@
CONST	SEGMENT
??_C@_0FH@GMPNLGDP@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@ DB 0c4H
	DB	0faH, 0c9H, 0e8H, 0d6H, 0c3H, 0c1H, 0cbH, 0b2H, 0bbH, 0b8H, 0faH
	DB	0cfH, 0e0H, 0cdH, 0acH, ' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0b5H, 0c4H
	DB	0cdH, 0e6H, 0bcH, 0d2H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0acH, 0b4H
	DB	0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0b4H, 0e6H, 0d4H, 0daH
	DB	0d3H, 0ebH, 0c4H, 0faH, ' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0cfH, 0e0H
	DB	0cdH, 0acH, 0b5H, 0c4H, 0cdH, 0e6H, 0bcH, 0d2H, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@HJKNBJDK@?$LE?K?S?N?O?$LH?W?$MA?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF@
CONST	SEGMENT
??_C@_0FP@HJKNBJDK@?$LE?K?S?N?O?$LH?W?$MA?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF@ DB 0b4H
	DB	0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0cdH, 0e6H, 0bcH, 0d2H
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0c1H, 0cbH, 0b2H, 0bbH, 0b8H, 0faH, 0cfH
	DB	0e0H, 0cdH, 0acH, ' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0b5H, 0c4H, 0cdH
	DB	0e6H, 0bcH, 0d2H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0acH, 0c4H, 0faH
	DB	' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0d3H, 0ebH, 0b4H, 0cbH, 0cdH, 0e6H
	DB	0bcH, 0d2H, 0b5H, 0c4H, ' IP ', 0b5H, 0d8H, 0d6H, 0b7H, 0cfH, 0e0H
	DB	0cdH, 0acH, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H
	DB	0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EfficacyStartGame@CTableFrame@@QAE_NG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EfficacyStartGame@CTableFrame@@QAE_NG@Z@4JA DD 0d0cH ; `CTableFrame::EfficacyStartGame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@FMPIBIL@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S@
CONST	SEGMENT
??_C@_0CF@FMPIBIL@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0bdH, 0f8H, 0c8H, 0ebH, 0c3H, 0dcH
	DB	0c2H, 0ebH, 0b2H, 0bbH, 0d5H, 0fdH, 0c8H, 0b7H, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OBBKOCFP@?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S?N?O?$LH?$KD?$KB@
CONST	SEGMENT
??_C@_0BP@OBBKOCFP@?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S?N?O?$LH?$KD?$KB@ DB 0b7H
	DB	0bfH, 0bcH, 0e4H, 0c3H, 0dcH, 0c2H, 0ebH, 0b2H, 0bbH, 0d5H, 0fdH
	DB	0c8H, 0b7H, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bcH, 0d3H, 0c8H
	DB	0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MONKBGOO@?C?$NM?B?k?$LB?$LL?J?$LJ?S?C?0?R?Q?$LJ?$PN?F?Z?$KD?$KB@
CONST	SEGMENT
??_C@_0BE@MONKBGOO@?C?$NM?B?k?$LB?$LL?J?$LJ?S?C?0?R?Q?$LJ?$PN?F?Z?$KD?$KB@ DB 0c3H
	DB	0dcH, 0c2H, 0ebH, 0b1H, 0bbH, 0caH, 0b9H, 0d3H, 0c3H, ',', 0d2H
	DB	0d1H, 0b9H, 0fdH, 0c6H, 0daH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NFDLJKEK@?S?N?O?$LH?R?Q?$LO?$KN?$LP?$KK?J?$LM?A?K?$KD?$KM?O?V?T?Z?$LC?$LL?D?$NM?$LN?x?H?k?S?N?O@
CONST	SEGMENT
??_C@_0CF@NFDLJKEK@?S?N?O?$LH?R?Q?$LO?$KN?$LP?$KK?J?$LM?A?K?$KD?$KM?O?V?T?Z?$LC?$LL?D?$NM?$LN?x?H?k?S?N?O@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0d2H, 0d1H, 0beH, 0adH, 0bfH, 0aaH, 0caH, 0bcH
	DB	0c1H, 0cbH, 0a3H, 0acH, 0cfH, 0d6H, 0d4H, 0daH, 0b2H, 0bbH, 0c4H
	DB	0dcH, 0bdH, 0f8H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NMLDBGEG@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LN?x?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@NMLDBGEG@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LN?x?H?k?$KD@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d7H, 0c0H, 0d7H, 0d3H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H
	DB	0c3H, 0bbH, 0a7H, 0bdH, 0f8H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KGKBJPME@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?H?K?J?$PN?R?Q?B?z?$KD?$KB@
CONST	SEGMENT
??_C@_0BN@KGKBJPME@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?H?K?J?$PN?R?Q?B?z?$KD?$KB@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d7H, 0c0H, 0d7H, 0d3H, 0c8H, 0cbH, 0caH, 0fdH, 0d2H
	DB	0d1H, 0c2H, 0faH, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@EGIPEGNE@userid?5?$DN?5?$CFd?5?5m_wChairCount?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0HC@EGIPEGNE@userid?5?$DN?5?$CFd?5?5m_wChairCount?5?$DN?5?$CFd@ DB 'u'
	DB	'serid = %d  m_wChairCount = %d  GetSitUserCount() = %d  m_dwP'
	DB	'ersonalPlayCount = %d  m_wTableID = %d ', 0d4H, 0bcH, 0d5H, 0bdH
	DB	0d2H, 0d1H, 0beH, 0adH, 0bfH, 0aaH, 0caH, 0bcH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JFHBNNDB@?$LB?$KH?G?$LI?$KD?$KM?T?$LM?U?$LN?R?Q?$LO?$KN?$LP?$KK?J?$LM?$KD?$KB@
CONST	SEGMENT
??_C@_0BF@JFHBNNDB@?$LB?$KH?G?$LI?$KD?$KM?T?$LM?U?$LN?R?Q?$LO?$KN?$LP?$KK?J?$LM?$KD?$KB@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0d4H, 0bcH, 0d5H, 0bdH, 0d2H, 0d1H
	DB	0beH, 0adH, 0bfH, 0aaH, 0caH, 0bcH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KFMNDNLD@?D?z?$LF?D?W?j?J?$KP?J?$PN?A?$LP?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@
CONST	SEGMENT
??_C@_0CH@KFMNDNLD@?D?z?$LF?D?W?j?J?$KP?J?$PN?A?$LP?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0d7H, 0eaH, 0caH, 0afH, 0caH, 0fdH, 0c1H, 0bfH
	DB	0c9H, 0d9H, 0d3H, 0daH, ' %I64d', 0a3H, 0acH, 0b2H, 0bbH, 0c4H
	DB	0dcH, 0bcH, 0ccH, 0d0H, 0f8H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MOHGBBK@?R?N?W?S?R?Q?$LO?$KN?$LB?$LL?5?$FL?5?$CFs?5?$FN?5?$LN?$NN?W?c?O?H?$LF?G?A?K?$KD?$KM?O@
CONST	SEGMENT
??_C@_0DB@MOHGBBK@?R?N?W?S?R?Q?$LO?$KN?$LB?$LL?5?$FL?5?$CFs?5?$FN?5?$LN?$NN?W?c?O?H?$LF?G?A?K?$KD?$KM?O@ DB 0d2H
	DB	0ceH, 0d7H, 0d3H, 0d2H, 0d1H, 0beH, 0adH, 0b1H, 0bbH, ' [ %s ]'
	DB	' ', 0bdH, 0ddH, 0d7H, 0e3H, 0cfH, 0c8H, 0b5H, 0c7H, 0c1H, 0cbH
	DB	0a3H, 0acH, 0cfH, 0c2H, 0b4H, 0ceH, 0b6H, 0afH, 0d7H, 0f7H, 0d2H
	DB	0aaH, 0bfH, 0ecH, 0b5H, 0e3H, 0c1H, 0cbH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MCODKPAP@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC2?$KD?$KB@
CONST	SEGMENT
??_C@_0BE@MCODKPAP@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC2?$KD?$KB@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0beH, 0adH
	DB	0bdH, 0e2H, 0c9H, 0a2H, '2', 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NAFGAAOB@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC1?$KD?$KB@
CONST	SEGMENT
??_C@_0BE@NAFGAAOB@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC1?$KD?$KB@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0beH, 0adH
	DB	0bdH, 0e2H, 0c9H, 0a2H, '1', 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z@4JA DD 0b49H ; `CTableFrame::PerformSitDownAction'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@GJHCGP@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?S@
CONST	SEGMENT
??_C@_0CF@GJHCGP@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?S@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0bdH, 0f8H, 0c8H, 0ebH, 0c3H, 0dcH
	DB	0c2H, 0ebH, 0b2H, 0bbH, 0d5H, 0fdH, 0c8H, 0b7H, 0a3H, 0acH, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0c5H, 0d4H, 0b9H, 0dbH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JOFFIFMN@?D?z?K?y?G?k?G?s?$LF?D?N?$LL?V?C?C?$LL?S?P?S?N?O?$LH?M?f?$LM?R?$KD?$KM?N?$NO?$LH@
CONST	SEGMENT
??_C@_0CN@JOFFIFMN@?D?z?K?y?G?k?G?s?$LF?D?N?$LL?V?C?C?$LL?S?P?S?N?O?$LH?M?f?$LM?R?$KD?$KM?N?$NO?$LH@ DB 0c4H
	DB	0faH, 0cbH, 0f9H, 0c7H, 0ebH, 0c7H, 0f3H, 0b5H, 0c4H, 0ceH, 0bbH
	DB	0d6H, 0c3H, 0c3H, 0bbH, 0d3H, 0d0H, 0d3H, 0ceH, 0cfH, 0b7H, 0cdH
	DB	0e6H, 0bcH, 0d2H, 0a3H, 0acH, 0ceH, 0deH, 0b7H, 0a8H, 0c5H, 0d4H
	DB	0b9H, 0dbH, 0b4H, 0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NJNGCIAH@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@
CONST	SEGMENT
??_C@_0CB@NJNGCIAH@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H
	DB	0c3H, 0bbH, 0a7H, 0c5H, 0d4H, 0b9H, 0dbH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EHMDHMJJ@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@
CONST	SEGMENT
??_C@_0CB@EHMDHMJJ@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d7H, 0c0H, 0d7H, 0d3H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H
	DB	0c3H, 0bbH, 0a7H, 0c5H, 0d4H, 0b9H, 0dbH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MNPNNHIG@?S?N?O?$LH?$LL?$LJ?C?$LL?S?P?$LP?$KK?J?$LM?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$LE?K?S?N?O?$LH?W@
CONST	SEGMENT
??_C@_0CD@MNPNNHIG@?S?N?O?$LH?$LL?$LJ?C?$LL?S?P?$LP?$KK?J?$LM?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$LE?K?S?N?O?$LH?W@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0bbH, 0b9H, 0c3H, 0bbH, 0d3H, 0d0H, 0bfH, 0aaH
	DB	0caH, 0bcH, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0c5H, 0d4H, 0b9H
	DB	0dbH, 0b4H, 0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IPFJJGIH@?T?$LM?U?$LN?$LH?$LP?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$KD?$KB@
CONST	SEGMENT
??_C@_0BD@IPFJJGIH@?T?$LM?U?$LN?$LH?$LP?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$KD?$KB@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0b7H, 0bfH, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH
	DB	0c5H, 0d4H, 0b9H, 0dbH, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z@4JA DD 0accH ; `CTableFrame::PerformLookonAction'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@CEHEIJKA@?S?I?M?f?$LM?R?$MA?k?$LP?$KK?$KD?$KM?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G@
CONST	SEGMENT
??_C@_0CH@CEHEIJKA@?S?I?M?f?$LM?R?$MA?k?$LP?$KK?$KD?$KM?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G@ DB 0d3H
	DB	0c9H, 0cdH, 0e6H, 0bcH, 0d2H, 0c0H, 0ebH, 0bfH, 0aaH, 0a3H, 0acH
	DB	0cfH, 0b5H, 0cdH, 0b3H, 0d6H, 0d8H, 0d0H, 0c2H, 0b7H, 0d6H, 0c5H
	DB	0e4H, 0d7H, 0c0H, 0d7H, 0d3H, 0a3H, 0acH, 0c7H, 0ebH, 0c9H, 0d4H
	DB	0baH, 0f3H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LMDGPNLB@?$LE?K?S?N?O?$LH?W?$MA?$LF?D?K?y?S?P?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP?$KK?A?K?$KD?$KB@
CONST	SEGMENT
??_C@_0BP@LMDGPNLB@?$LE?K?S?N?O?$LH?W?$MA?$LF?D?K?y?S?P?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP?$KK?A?K?$KD?$KB@ DB 0b4H
	DB	0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0b5H, 0c4H, 0cbH, 0f9H
	DB	0d3H, 0d0H, 0cdH, 0e6H, 0bcH, 0d2H, 0d2H, 0d1H, 0beH, 0adH, 0c0H
	DB	0ebH, 0bfH, 0aaH, 0c1H, 0cbH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@BACGKDF@?$LM?$LE?J?$LB?H?$PM?V?P?$LD?v?O?V?M?f?$LM?R?3?5?$CFd?F?p?A?$KC?J?$LB?W?$LE?L?$KM?N@
CONST	SEGMENT
??_C@_0DB@BACGKDF@?$LM?$LE?J?$LB?H?$PM?V?P?$LD?v?O?V?M?f?$LM?R?3?5?$CFd?F?p?A?$KC?J?$LB?W?$LE?L?$KM?N@ DB 0bcH
	DB	0b4H, 0caH, 0b1H, 0c8H, 0fcH, 0d6H, 0d0H, 0b3H, 0f6H, 0cfH, 0d6H
	DB	0cdH, 0e6H, 0bcH, 0d2H, ': %d', 0c6H, 0f0H, 0c1H, 0a2H, 0caH, 0b1H
	DB	0d7H, 0b4H, 0ccH, 0acH, 0ceH, 0aaH, 'US_OFFLINE', 0b5H, 0c4H, 0c7H
	DB	0e9H, 0bfH, 0f6H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z@4JA DD 09a7H ; `CTableFrame::PerformStandUpAction'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@JKMCHJPE@GameStartOverTime@
CONST	SEGMENT
??_C@_0BC@JKMCHJPE@GameStartOverTime@ DB 'GameStartOverTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EHGOMFHF@TableOwnerWaitTime@
CONST	SEGMENT
??_C@_0BD@EHGOMFHF@TableOwnerWaitTime@ DB 'TableOwnerWaitTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OOPDANCH@PlayerWaitTime@
CONST	SEGMENT
??_C@_0P@OOPDANCH@PlayerWaitTime@ DB 'PlayerWaitTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FCLAICIB@?$CFs?2PersonalTable?4ini@
CONST	SEGMENT
??_C@_0BF@FCLAICIB@?$CFs?2PersonalTable?4ini@ DB '%s\PersonalTable.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z@4JA DD 0967H ; `CTableFrame::InitializationFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@FDDKLKIA@?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G?k?I?T?$LK?s?$KD?$KB@
CONST	SEGMENT
??_C@_0BL@FDDKLKIA@?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G?k?I?T?$LK?s?$KD?$KB@ DB 0cfH
	DB	0b5H, 0cdH, 0b3H, 0d6H, 0d8H, 0d0H, 0c2H, 0b7H, 0d6H, 0c5H, 0e4H
	DB	0d7H, 0c0H, 0d7H, 0d3H, 0a3H, 0acH, 0c7H, 0ebH, 0c9H, 0d4H, 0baH
	DB	0f3H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IEAHKEDO@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$KD?$KM?W?$KD?D?z?S?N?O?$LH?S@
CONST	SEGMENT
??_C@_0CF@IEAHKEDO@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$KD?$KM?W?$KD?D?z?S?N?O?$LH?S@ DB 0bbH
	DB	0b6H, 0d3H, 0adH, 0c4H, 0faH, 0bdH, 0f8H, 0c8H, 0ebH, 0a1H, 0b0H
	DB	'%s', 0a1H, 0b1H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0acH, 0d7H, 0a3H
	DB	0c4H, 0faH, 0d3H, 0ceH, 0cfH, 0b7H, 0d3H, 0e4H, 0bfH, 0ecH, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PEOJOPIF@?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC@
CONST	SEGMENT
??_C@_0N@PEOJOPIF@?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC@ DB 0b7H, 0bfH, 0bcH
	DB	0e4H, 0d2H, 0d1H, 0beH, 0adH, 0bdH, 0e2H, 0c9H, 0a2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BFEPDGOK@?$LH?$LP?$LM?d?$LL?$LJ?N?$LE?$LE?$LE?$LN?$KI?$KD?$KM?N?$NO?$LH?$KI?$LN?x?H?k?$KD?$KB@
CONST	SEGMENT
??_C@_0BJ@BFEPDGOK@?$LH?$LP?$LM?d?$LL?$LJ?N?$LE?$LE?$LE?$LN?$KI?$KD?$KM?N?$NO?$LH?$KI?$LN?x?H?k?$KD?$KB@ DB 0b7H
	DB	0bfH, 0bcH, 0e4H, 0bbH, 0b9H, 0ceH, 0b4H, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0a3H, 0acH, 0ceH, 0deH, 0b7H, 0a8H, 0bdH, 0f8H, 0c8H, 0ebH, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA DD 06b7H ; `CTableFrame::OnEventSocketFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA DD 06acH ; `CTableFrame::OnEventSocketGame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA DD 05e9H ; `CTableFrame::OnEventTimer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z@4JA DD 057cH ; `CTableFrame::OnEventUserOffLine'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
CONST	SEGMENT
??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0c3H, 0bbH, 0d3H, 0d0H
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0c1H, 0c4H, 0ccH, 0ecH, 0b5H, 0c4H, 0c8H
	DB	0a8H, 0cfH, 0deH, 0a3H, 0acH, 0c8H, 0f4H, 0d0H, 0e8H, 0d2H, 0aaH
	DB	0b0H, 0efH, 0d6H, 0faH, 0a3H, 0acH, 0c7H, 0ebH, 0c1H, 0aaH, 0cfH
	DB	0b5H, 0d3H, 0ceH, 0cfH, 0b7H, 0bfH, 0cdH, 0b7H, 0feH, 0d7H, 0c9H
	DB	0d1H, 0afH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@
CONST	SEGMENT
??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H
	DB	0ceH, 0cfH, 0b7H, 0c1H, 0c4H, 0ccH, 0ecH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z@4JA DD 052bH ; `CTableFrame::SendChatMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z@4JA DD 0512H ; `CTableFrame::ImitateGameOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z@4JA DD 04faH ; `CTableFrame::SetTableFrameHook'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z@4JA DD 04ecH ; `CTableFrame::SendGameScene'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA DD 04e1H ; `CTableFrame::SendGameMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPBDG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPBDG@Z@4JA DD 04aaH ; `CTableFrame::SendGameMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendLookonData@CTableFrame@@UAE_NGG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendLookonData@CTableFrame@@UAE_NGG@Z@4JA DD 044fH ; `CTableFrame::SendLookonData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendTableData@CTableFrame@@UAE_NGG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendTableData@CTableFrame@@UAE_NGG@Z@4JA DD 0405H ; `CTableFrame::SendTableData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z@4JA DD 03f2H ; `CTableFrame::SendUserItemData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z@4JA DD 03dfH ; `CTableFrame::SendUserItemData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??KillGameTimer@CTableFrame@@UAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??KillGameTimer@CTableFrame@@UAE_NK@Z@4JA DD 03d1H ; `CTableFrame::KillGameTimer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetGameTimer@CTableFrame@@UAE_NKKKI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetGameTimer@CTableFrame@@UAE_NKKKI@Z@4JA DD 03c3H ; `CTableFrame::SetGameTimer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z@4JA DD 03b1H ; `CTableFrame::GetTableUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z@4JA DD 0386H ; `CTableFrame::QueryConsumeQuota'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??CalculateRevenue@CTableFrame@@UAE_JG_J@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CalculateRevenue@CTableFrame@@UAE_JG_J@Z@4JA DD 036aH ; `CTableFrame::CalculateRevenue'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z@4JA DD 0337H ; `CTableFrame::WriteTableScore'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BF@OJEHDHNG@?S?N?O?$LH?$LM?G?B?$LM?$LG?T?O?s?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BF@OJEHDHNG@?S?N?O?$LH?$LM?G?B?$LM?$LG?T?O?s?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0bcH, 0c7H, 0c2H, 0bcH, 0b6H, 0d4H, 0cfH, 0f3H
	DB	0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H, 0b0H, 0dcH, 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAX@8
data$r	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
data$r	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __TI2PAD
xdata$x	SEGMENT
__TI2PAD DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT ??_C@_0CG@BJIOFAKH@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?$LL?$KE?I?m?$LH?$PL?$LP?$KI?5?$FN?$KD?$KM?$LL?$PN?$LH?V@
CONST	SEGMENT
??_C@_0CG@BJIOFAKH@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?$LL?$KE?I?m?$LH?$PL?$LP?$KI?5?$FN?$KD?$KM?$LL?$PN?$LH?V@ DB '['
	DB	' %s ] ', 0caH, 0b9H, 0d3H, 0c3H, 0c1H, 0cbH, '[ ', 0bbH, 0a4H
	DB	0c9H, 0edH, 0b7H, 0fbH, 0bfH, 0a8H, ' ]', 0a3H, 0acH, 0bbH, 0fdH
	DB	0b7H, 0d6H, 0b2H, 0bbH, 0b1H, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KNPBKMHB@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?$KL?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@
CONST	SEGMENT
??_C@_0CI@KNPBKMHB@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?$KL?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@ DB '['
	DB	' %s ] ', 0caH, 0b9H, 0d3H, 0c3H, 0c1H, 0cbH, '[ ', 0cbH, 0abH
	DB	0b1H, 0b6H, 0bbH, 0fdH, 0b7H, 0d6H, 0bfH, 0a8H, ' ]', 0a3H, 0acH
	DB	0b5H, 0c3H, 0b7H, 0d6H, 0b7H, 0adH, 0b1H, 0b6H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IKLNOEBJ@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?D?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@
CONST	SEGMENT
??_C@_0CL@IKLNOEBJ@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?D?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@ DB '['
	DB	' %s ] ', 0caH, 0b9H, 0d3H, 0c3H, 0c1H, 0cbH, '[ ', 0cbH, 0c4H
	DB	0b1H, 0b6H, 0bbH, 0fdH, 0b7H, 0d6H, 0bfH, 0a8H, ' ]', 0a3H, 0acH
	DB	0b5H, 0c3H, 0b7H, 0d6H, 0b7H, 0adH, 0cbH, 0c4H, 0b1H, 0b6H, 0a3H
	DB	0a1H, ')', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z@4JA DD 025dH ; `CTableFrame::WriteUserScore'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CN@COMBKMFK@?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S@
CONST	SEGMENT
??_C@_0CN@COMBKMFK@?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0cfH, 0b5H, 0cdH, 0b3H, 0ceH, 0acH, 0bbH, 0a4H
	DB	0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H
	DB	0c0H, 0d7H, 0d3H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H, 0c3H, 0bbH, 0a7H
	DB	0bcH, 0ccH, 0d0H, 0f8H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OPGIFPHK@?D?z?$LF?D?S?N?O?$LH?$LL?$PN?$LH?V?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@
CONST	SEGMENT
??_C@_0CH@OPGIFPHK@?D?z?$LF?D?S?N?O?$LH?$LL?$PN?$LH?V?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0bbH, 0fdH, 0b7H, 0d6H
	DB	0c9H, 0d9H, 0d3H, 0daH, ' %I64d', 0a3H, 0acH, 0b2H, 0bbH, 0c4H
	DB	0dcH, 0bcH, 0ccH, 0d0H, 0f8H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@
CONST	SEGMENT
??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0b1H, 0d2H, 0c9H, 0d9H
	DB	0d3H, 0daH, ' %I64d', 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bcH
	DB	0ccH, 0d0H, 0f8H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ConcludeGame@CTableFrame@@UAE_NEH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ConcludeGame@CTableFrame@@UAE_NEH@Z@4JA DD 0134H ; `CTableFrame::ConcludeGame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DismissGame@CTableFrame@@UAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DismissGame@CTableFrame@@UAE_NXZ@4JA DD 0108H ; `CTableFrame::DismissGame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??StartGame@CTableFrame@@UAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??StartGame@CTableFrame@@UAE_NXZ@4JA DD 08fH ; `CTableFrame::StartGame'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?THIS_FILE@@3PADA DB 'g:\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H
	DB	0feH, 0ceH, 0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H
	DB	0a3H, 0bfH, 0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H
	DB	0e9H, 0bcH, 0feH, '\', 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH
	DB	0f1H, 0c6H, 0f7H, '\tableframe.cpp', 00H	; THIS_FILE
_DATA	ENDS
;	COMDAT ??_7CTableFrame@@6BICompilationSink@@@
CONST	SEGMENT
??_7CTableFrame@@6BICompilationSink@@@ DD FLAT:??_R4CTableFrame@@6BICompilationSink@@@ ; CTableFrame::`vftable'
	DD	FLAT:?Release@CTableFrame@@W3AEXXZ
	DD	FLAT:?QueryInterface@CTableFrame@@W3AEPAXABU_GUID@@K@Z
	DD	FLAT:?GetCompilation@CTableFrame@@UAEPBDXZ
CONST	ENDS
;	COMDAT ??_7CTableFrame@@6BITableFrame@@@
CONST	SEGMENT
??_7CTableFrame@@6BITableFrame@@@ DD FLAT:??_R4CTableFrame@@6BITableFrame@@@ ; CTableFrame::`vftable'
	DD	FLAT:?Release@CTableFrame@@UAEXXZ
	DD	FLAT:?QueryInterface@CTableFrame@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?GetTableID@CTableFrame@@UAEGXZ
	DD	FLAT:?GetChairCount@CTableFrame@@UAEGXZ
	DD	FLAT:?GetNullChairCount@CTableFrame@@UAEGXZ
	DD	FLAT:?SetPersonalTablePassword@CTableFrame@@UAEXPAUtagRoomPassword@@@Z
	DD	FLAT:?GetCustomRule@CTableFrame@@UAEPAXXZ
	DD	FLAT:?GetGameMatchOption@CTableFrame@@UAEPAUtagGameMatchOption@@XZ
	DD	FLAT:?GetGameServiceAttrib@CTableFrame@@UAEPAUtagGameServiceAttrib@@XZ
	DD	FLAT:?GetGameServiceOption@CTableFrame@@UAEPAUtagGameServiceOption@@XZ
	DD	FLAT:?GetStartMode@CTableFrame@@UAEEXZ
	DD	FLAT:?SetStartMode@CTableFrame@@UAEXE@Z
	DD	FLAT:?GetCellScore@CTableFrame@@UAEJXZ
	DD	FLAT:?SetCellScore@CTableFrame@@UAEXJ@Z
	DD	FLAT:?IsTableLocked@CTableFrame@@UAE_NXZ
	DD	FLAT:?IsGameStarted@CTableFrame@@UAE_NXZ
	DD	FLAT:?IsDrawStarted@CTableFrame@@UAE_NXZ
	DD	FLAT:?IsTableStarted@CTableFrame@@UAE_NXZ
	DD	FLAT:?IsPersonalTableLocked@CTableFrame@@UAE_NXZ
	DD	FLAT:?SetPersonalTableLocked@CTableFrame@@UAEX_N@Z
	DD	FLAT:?SetTableOwner@CTableFrame@@UAEXK@Z
	DD	FLAT:?GetTableOwner@CTableFrame@@UAEKXZ
	DD	FLAT:?SetPersonalTable@CTableFrame@@UAEXKK_J@Z
	DD	FLAT:?SetPersonalTableParameter@CTableFrame@@UAEXUtagPersonalTableParameter@@UtagPersonalRoomOption@@@Z
	DD	FLAT:?GetPersonalScore@CTableFrame@@UAE_NKAA_J@Z
	DD	FLAT:?GetPersonalTableParameter@CTableFrame@@UAE?AUtagPersonalTableParameter@@XZ
	DD	FLAT:?SetTimerNotBeginAfterCreate@CTableFrame@@UAEXXZ
	DD	FLAT:?GetGameStatus@CTableFrame@@UAEEXZ
	DD	FLAT:?SetGameStatus@CTableFrame@@UAEXE@Z
	DD	FLAT:?StartGame@CTableFrame@@UAE_NXZ
	DD	FLAT:?DismissGame@CTableFrame@@UAE_NXZ
	DD	FLAT:?ConcludeGame@CTableFrame@@UAE_NEH@Z
	DD	FLAT:?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z
	DD	FLAT:?WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z
	DD	FLAT:?WriteTableVideoPlayer@CTableFrame@@UAE_NKPAD@Z
	DD	FLAT:?WriteTableVideoData@CTableFrame@@UAE_NPADGGPAEG@Z
	DD	FLAT:?CalculateRevenue@CTableFrame@@UAE_JG_J@Z
	DD	FLAT:?QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z
	DD	FLAT:?SearchUserItem@CTableFrame@@UAEPAUIServerUserItem@@K@Z
	DD	FLAT:?GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z
	DD	FLAT:?EnumLookonUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z
	DD	FLAT:?SetGameTimer@CTableFrame@@UAE_NKKKI@Z
	DD	FLAT:?KillGameTimer@CTableFrame@@UAE_NK@Z
	DD	FLAT:?SendTableData@CTableFrame@@UAE_NGGPAXGG@Z
	DD	FLAT:?SendTableData@CTableFrame@@UAE_NGG@Z
	DD	FLAT:?SendLookonData@CTableFrame@@UAE_NGGPAXG@Z
	DD	FLAT:?SendLookonData@CTableFrame@@UAE_NGG@Z
	DD	FLAT:?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z
	DD	FLAT:?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z
	DD	FLAT:?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z
	DD	FLAT:?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z
	DD	FLAT:?SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z
	DD	FLAT:?SendGameMessage@CTableFrame@@UAE_NPBDG@Z
	DD	FLAT:?SendRoomMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z
	DD	FLAT:?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z
	DD	FLAT:?PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z
	DD	FLAT:?PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z
	DD	FLAT:?SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z
	DD	FLAT:?GetTableFrameHook@CTableFrame@@UAEPAUIUnknownEx@@XZ
	DD	FLAT:?SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z
	DD	FLAT:?SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z
	DD	FLAT:?GetGameRule@CTableFrame@@UAEPAEXZ
	DD	FLAT:?GetSpeicalInfo@CTableFrame@@UAEXPAEH@Z
	DD	FLAT:?SetTableChairCount@CTableFrame@@UAEXG@Z
	DD	FLAT:?IsPersonalRoomDisumme@CTableFrame@@UAE_NXZ
	DD	FLAT:?SetDataBaseMode@CTableFrame@@UAEXE@Z
	DD	FLAT:?GetDataBaseMode@CTableFrame@@UAEEXZ
	DD	FLAT:?GetDrawCountLimit@CTableFrame@@UAEKXZ
	DD	FLAT:?SetLoopCount@CTableFrame@@UAEXE@Z
	DD	FLAT:?GetLoopCount@CTableFrame@@UAEEXZ
	DD	FLAT:?GetGameMode@CTableFrame@@UAEEXZ
	DD	FLAT:??_ECTableFrame@@UAEPAXI@Z
	DD	FLAT:?ConcludeTable@CTableFrame@@UAE_NXZ
	DD	FLAT:?GetDrawCount@CTableFrame@@UAEGXZ
	DD	FLAT:?GetNullChairID@CTableFrame@@UAEGXZ
	DD	FLAT:?OnUserScroeNotify@CTableFrame@@UAE_NGPAUIServerUserItem@@E@Z
	DD	FLAT:?GetRecordTableOwner@CTableFrame@@UAEKXZ
	DD	FLAT:?CancelTableRequest@CTableFrame@@UAE_NKG@Z
	DD	FLAT:?CancelTableRequestReply@CTableFrame@@UAE_NKE@Z
	DD	FLAT:?SetPersonalRoomID@CTableFrame@@UAEXK@Z
	DD	FLAT:?HostDissumeGame@CTableFrame@@UAEXH@Z
	DD	FLAT:?GetPersonalRoomID@CTableFrame@@UAEKXZ
	DD	FLAT:?SetGameRule@CTableFrame@@UAEXPAEH@Z
	DD	FLAT:?SetPersonalRoomGUID@CTableFrame@@UAEXPADH@Z
	DD	FLAT:?GetPersonalRoomGUID@CTableFrame@@UAEPADXZ
	DD	FLAT:?SetPayRoomCardMode@CTableFrame@@UAEXEJE@Z
	DD	FLAT:?GetPayRoomCardMode@CTableFrame@@UAEEXZ
	DD	FLAT:?SetHostAddr@CTableFrame@@UAEXK@Z
	DD	FLAT:?GetHostAddr@CTableFrame@@UAEKXZ
	DD	FLAT:?SetCreatePersonalTime@CTableFrame@@UAEXU_SYSTEMTIME@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KK_JAA_J@@6B@
CONST	SEGMENT
??_7?$CMap@KK_JAA_J@@6B@ DD FLAT:??_R4?$CMap@KK_JAA_J@@6B@ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KK_JAA_J@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KK_JAA_J@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KK_JAA_J@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KK_JAA_J@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ICompilationSink@@6B@
CONST	SEGMENT
??_7ICompilationSink@@6B@ DD FLAT:??_R4ICompilationSink@@6B@ ; ICompilationSink::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ITableFrame@@6B@
CONST	SEGMENT
??_7ITableFrame@@6B@ DD FLAT:??_R4ITableFrame@@6B@	; ITableFrame::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0BG@FNDGHLBI@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LE?m?N?s@
CONST	SEGMENT
??_C@_0BG@FNDGHLBI@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LE?m?N?s@ DB 'op'
	DB	'enfile ', 0b4H, 0f2H, 0bfH, 0aaH, 0ceH, 0c4H, 0bcH, 0feH, 0b4H
	DB	0edH, 0ceH, 0f3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FGDEEIKF@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LD?I?$LJ?$KG@
CONST	SEGMENT
??_C@_0BG@FGDEEIKF@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LD?I?$LJ?$KG@ DB 'o'
	DB	'penfile ', 0b4H, 0f2H, 0bfH, 0aaH, 0ceH, 0c4H, 0bcH, 0feH, 0b3H
	DB	0c9H, 0b9H, 0a6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HIKJINGA@at?$CL@
CONST	SEGMENT
??_C@_03HIKJINGA@at?$CL@ DB 'at+', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMHKOMJJ@openfile?5?5?$CFs@
CONST	SEGMENT
??_C@_0N@LMHKOMJJ@openfile?5?5?$CFs@ DB 'openfile  %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MPGOOIFH@Log?1?1?$CFd?9?$CFd?9?$CFd?9ServerLog?4txt@
CONST	SEGMENT
??_C@_0BM@MPGOOIFH@Log?1?1?$CFd?9?$CFd?9?$CFd?9ServerLog?4txt@ DB 'Log//%'
	DB	'd-%d-%d-ServerLog.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GGEOLGBL@Log@
CONST	SEGMENT
??_C@_03GGEOLGBL@Log@ DB 'Log', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DCGNBEMB@?$CFd?9?$CFd?9?$CFd?9?$CFd?3?5?$CFs?5?$AN?6@
CONST	SEGMENT
??_C@_0BD@DCGNBEMB@?$CFd?9?$CFd?9?$CFd?9?$CFd?3?5?$CFs?5?$AN?6@ DB '%d-%d'
	DB	'-%d-%d: %s ', 0dH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LDDEPHLF@open?5?$CK?$CK?$CK?5?H?U?V?$LO?P?E?O?$KC?5?$CFs?5@
CONST	SEGMENT
??_C@_0BG@LDDEPHLF@open?5?$CK?$CK?$CK?5?H?U?V?$LO?P?E?O?$KC?5?$CFs?5@ DB 'o'
	DB	'pen *** ', 0c8H, 0d5H, 0d6H, 0beH, 0d0H, 0c5H, 0cfH, 0a2H, ' '
	DB	'%s ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA DD 025fH ; `ATL::CTime::GetLocalTm'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@ DB 'AtlThrow: hr = 0x'
	DB	'%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\atlexcept.h', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA DD 041H	; `ATL::AtlThrowImpl'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z$0
__ehfuncinfo$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z$0
__ehfuncinfo$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z$0
__unwindtable$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z$2
__ehfuncinfo$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z
	DD	01H
	DD	FLAT:__tryblocktable$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CTableFrame@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTableFrame@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTableFrame@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTableFrame@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CTableFrame@@QAE@XZ$2
__ehfuncinfo$??0CTableFrame@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CTableFrame@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KK_JAA_J@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KK_JAA_J@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KK_JAA_J@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KK_JAA_J@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KK_JAA_J@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0
__ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1
__ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
??m_GameScoreRecordBuffer$initializer$@CTableFrame@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ ; ??m_GameScoreRecordBuffer$initializer$@CTableFrame@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odsp /ZI
;	COMDAT ?QueryInterface@CTableFrame@@W3AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CTableFrame@@W3AEPAXABU_GUID@@K@Z PROC	; [thunk]:CTableFrame::QueryInterface`adjustor{4}', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CTableFrame@@UAEPAXABU_GUID@@K@Z ; CTableFrame::QueryInterface
?QueryInterface@CTableFrame@@W3AEPAXABU_GUID@@K@Z ENDP	; [thunk]:CTableFrame::QueryInterface`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odsp /ZI
;	COMDAT ?Release@CTableFrame@@W3AEXXZ
_TEXT	SEGMENT
?Release@CTableFrame@@W3AEXXZ PROC			; [thunk]:CTableFrame::Release`adjustor{4}', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?Release@CTableFrame@@UAEXXZ ; CTableFrame::Release
?Release@CTableFrame@@W3AEXXZ ENDP			; [thunk]:CTableFrame::Release`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@_J@@YGXAAVCDumpContext@@PB_JH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@_J@@YGXAAVCDumpContext@@PB_JH@Z PROC	; DumpElements<__int64>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 03	 shl	 eax, 3
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@_J@@YGXAAVCDumpContext@@PB_JH@Z ENDP	; DumpElements<__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@_J@@YGXAAVCArchive@@PA_JH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@_J@@YGXAAVCArchive@@PA_JH@Z PROC	; SerializeElements<__int64>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 03	 shl	 eax, 3
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 0f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 268435455 ; 0fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 0f		 mov	 DWORD PTR tv92[ebp], 268435455 ; 0fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 03	 shl	 eax, 3
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 0f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 268435455 ; 0fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 0f		 mov	 DWORD PTR tv134[ebp], 268435455 ; 0fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 03	 shl	 eax, 3
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@_J@@YGXAAVCArchive@@PA_JH@Z ENDP	; SerializeElements<__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KK_JAA_J@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KK_JAA_J@@QAE@K@Z PROC			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KK_JAA_J@@IAE@K@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KK_JAA_J@@QAE@K@Z ENDP			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KK_JAA_J@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KK_JAA_J@@IAE@K@Z PROC			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KK_JAA_J@@IAE@K@Z ENDP			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ PROC		; _snprintf_s<260>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 04 01 00 00	 push	 260			; 00000104H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ ENDP		; _snprintf_s<260>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__F?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CTableFrame::m_GameScoreRecordBuffer'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  0000e	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__F?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CTableFrame::m_GameScoreRecordBuffer''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ??__E?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ
text$di	SEGMENT
??__E?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ PROC ; `dynamic initializer for 'CTableFrame::m_GameScoreRecordBuffer'', COMDAT

; 13   : CGameScoreRecordArray				CTableFrame::m_GameScoreRecordBuffer;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  0000e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
  00013	68 00 00 00 00	 push	 OFFSET ??__F?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ ; `dynamic atexit destructor for 'CTableFrame::m_GameScoreRecordBuffer''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__E?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CTableFrame::m_GameScoreRecordBuffer''
text$di	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCTableFrame@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCTableFrame@@UAEPAXI@Z PROC				; CTableFrame::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CTableFrame@@UAE@XZ	; CTableFrame::~CTableFrame
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 20 4a 00 00	 push	 18976			; 00004a20H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCTableFrame@@UAEPAXI@Z ENDP				; CTableFrame::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetGameMode@CTableFrame@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMode@CTableFrame@@UAEEXZ PROC			; CTableFrame::GetGameMode, COMDAT
; _this$ = ecx

; 482  : 	virtual BYTE	GetGameMode() { return m_cbGameMode; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 d0 46 00
	00		 mov	 al, BYTE PTR [eax+18128]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameMode@CTableFrame@@UAEEXZ ENDP			; CTableFrame::GetGameMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetLoopCount@CTableFrame@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLoopCount@CTableFrame@@UAEEXZ PROC			; CTableFrame::GetLoopCount, COMDAT
; _this$ = ecx

; 480  : 	virtual BYTE GetLoopCount() { return m_cbLoopCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 9c 11 00
	00		 mov	 al, BYTE PTR [eax+4508]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetLoopCount@CTableFrame@@UAEEXZ ENDP			; CTableFrame::GetLoopCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetLoopCount@CTableFrame@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 1
?SetLoopCount@CTableFrame@@UAEXE@Z PROC			; CTableFrame::SetLoopCount, COMDAT
; _this$ = ecx

; 478  : 	virtual void SetLoopCount(BYTE val){ m_cbLoopCount = val; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _val$[ebp]
  00012	88 88 9c 11 00
	00		 mov	 BYTE PTR [eax+4508], cl
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetLoopCount@CTableFrame@@UAEXE@Z ENDP			; CTableFrame::SetLoopCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetCreatePersonalTime@CTableFrame@@UAEXU_SYSTEMTIME@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_tm$ = 8						; size = 16
?SetCreatePersonalTime@CTableFrame@@UAEXU_SYSTEMTIME@@@Z PROC ; CTableFrame::SetCreatePersonalTime, COMDAT
; _this$ = ecx

; 4234 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4235 : 	m_sysStartTime = tm;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 dc 46 00 00	 add	 eax, 18140		; 000046dcH
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _tm$[ebp]
  00017	89 08		 mov	 DWORD PTR [eax], ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR _tm$[ebp+4]
  0001c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001f	8b 4d 10	 mov	 ecx, DWORD PTR _tm$[ebp+8]
  00022	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR _tm$[ebp+12]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 4236 : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 10 00	 ret	 16			; 00000010H
?SetCreatePersonalTime@CTableFrame@@UAEXU_SYSTEMTIME@@@Z ENDP ; CTableFrame::SetCreatePersonalTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetDrawCountLimit@CTableFrame@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDrawCountLimit@CTableFrame@@UAEKXZ PROC		; CTableFrame::GetDrawCountLimit, COMDAT
; _this$ = ecx

; 474  : 	virtual DWORD  GetDrawCountLimit(){ return m_dwDrawCountLimit; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 18 10 00
	00		 mov	 eax, DWORD PTR [eax+4120]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetDrawCountLimit@CTableFrame@@UAEKXZ ENDP		; CTableFrame::GetDrawCountLimit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetHostAddr@CTableFrame@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHostAddr@CTableFrame@@UAEKXZ PROC			; CTableFrame::GetHostAddr, COMDAT
; _this$ = ecx

; 4228 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4229 : 	return m_dwRoomHostAddr;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 d4 46 00
	00		 mov	 eax, DWORD PTR [eax+18132]

; 4230 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetHostAddr@CTableFrame@@UAEKXZ ENDP			; CTableFrame::GetHostAddr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetHostAddr@CTableFrame@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwAddr$ = 8						; size = 4
?SetHostAddr@CTableFrame@@UAEXK@Z PROC			; CTableFrame::SetHostAddr, COMDAT
; _this$ = ecx

; 4222 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4223 : 	m_dwRoomHostAddr =  dwAddr;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _dwAddr$[ebp]
  00012	89 88 d4 46 00
	00		 mov	 DWORD PTR [eax+18132], ecx

; 4224 : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetHostAddr@CTableFrame@@UAEXK@Z ENDP			; CTableFrame::SetHostAddr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetPayRoomCardMode@CTableFrame@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPayRoomCardMode@CTableFrame@@UAEEXZ PROC		; CTableFrame::GetPayRoomCardMode, COMDAT
; _this$ = ecx

; 467  : 	virtual BYTE GetPayRoomCardMode(){ return m_cbPayMode; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 d1 46 00
	00		 mov	 al, BYTE PTR [eax+18129]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetPayRoomCardMode@CTableFrame@@UAEEXZ ENDP		; CTableFrame::GetPayRoomCardMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetPayRoomCardMode@CTableFrame@@UAEXEJE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbPayMode$ = 8						; size = 1
_lPayRoomCardCount$ = 12				; size = 4
_cbGameMode$ = 16					; size = 1
?SetPayRoomCardMode@CTableFrame@@UAEXEJE@Z PROC		; CTableFrame::SetPayRoomCardMode, COMDAT
; _this$ = ecx

; 465  : 	virtual void SetPayRoomCardMode(byte cbPayMode, LONG lPayRoomCardCount,BYTE cbGameMode){ m_cbPayMode = cbPayMode; m_lPayRoomCardCount = lPayRoomCardCount; m_cbGameMode = cbGameMode; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbPayMode$[ebp]
  00012	88 88 d1 46 00
	00		 mov	 BYTE PTR [eax+18129], cl
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _lPayRoomCardCount$[ebp]
  0001e	89 88 d8 46 00
	00		 mov	 DWORD PTR [eax+18136], ecx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8a 4d 10	 mov	 cl, BYTE PTR _cbGameMode$[ebp]
  0002a	88 88 d0 46 00
	00		 mov	 BYTE PTR [eax+18128], cl
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 0c 00	 ret	 12			; 0000000cH
?SetPayRoomCardMode@CTableFrame@@UAEXEJE@Z ENDP		; CTableFrame::SetPayRoomCardMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetPersonalRoomGUID@CTableFrame@@UAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPersonalRoomGUID@CTableFrame@@UAEPADXZ PROC		; CTableFrame::GetPersonalRoomGUID, COMDAT
; _this$ = ecx

; 4215 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4216 : 	return m_szRoomGUID;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 a8 46 00 00	 add	 eax, 18088		; 000046a8H

; 4217 : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetPersonalRoomGUID@CTableFrame@@UAEPADXZ ENDP		; CTableFrame::GetPersonalRoomGUID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetPersonalRoomGUID@CTableFrame@@UAEXPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_szInfo$ = 8						; size = 4
_nLen$ = 12						; size = 4
?SetPersonalRoomGUID@CTableFrame@@UAEXPADH@Z PROC	; CTableFrame::SetPersonalRoomGUID, COMDAT
; _this$ = ecx

; 4209 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4210 : 	lstrcpyn(m_szRoomGUID,  szInfo, nLen);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _nLen$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _szInfo$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	81 c2 a8 46 00
	00		 add	 edx, 18088		; 000046a8H
  0001d	52		 push	 edx
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4211 : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?SetPersonalRoomGUID@CTableFrame@@UAEXPADH@Z ENDP	; CTableFrame::SetPersonalRoomGUID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetDataBaseMode@CTableFrame@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDataBaseMode@CTableFrame@@UAEEXZ PROC		; CTableFrame::GetDataBaseMode, COMDAT
; _this$ = ecx

; 4180 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4181 : 	return m_cbDataBaseMode;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 1c 4a 00
	00		 mov	 al, BYTE PTR [eax+18972]

; 4182 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetDataBaseMode@CTableFrame@@UAEEXZ ENDP		; CTableFrame::GetDataBaseMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetDataBaseMode@CTableFrame@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbDataBaseMode$ = 8					; size = 1
?SetDataBaseMode@CTableFrame@@UAEXE@Z PROC		; CTableFrame::SetDataBaseMode, COMDAT
; _this$ = ecx

; 4174 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4175 : 		m_cbDataBaseMode = cbDataBaseMode;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbDataBaseMode$[ebp]
  00012	88 88 1c 4a 00
	00		 mov	 BYTE PTR [eax+18972], cl

; 4176 : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetDataBaseMode@CTableFrame@@UAEXE@Z ENDP		; CTableFrame::SetDataBaseMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?IsPersonalRoomDisumme@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPersonalRoomDisumme@CTableFrame@@UAE_NXZ PROC	; CTableFrame::IsPersonalRoomDisumme, COMDAT
; _this$ = ecx

; 4168 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4169 : 	return m_bIsDissumGame;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 34 11 00
	00		 mov	 al, BYTE PTR [eax+4404]

; 4170 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?IsPersonalRoomDisumme@CTableFrame@@UAE_NXZ ENDP	; CTableFrame::IsPersonalRoomDisumme
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetTableChairCount@CTableFrame@@UAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wChairCount$ = 8					; size = 2
?SetTableChairCount@CTableFrame@@UAEXG@Z PROC		; CTableFrame::SetTableChairCount, COMDAT
; _this$ = ecx

; 3971 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3972 : 	m_wChairCount = wChairCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _wChairCount$[ebp]
  00013	66 89 48 0a	 mov	 WORD PTR [eax+10], cx

; 3973 : 	m_pGameServiceAttrib->wChairCount = wChairCount;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00020	66 8b 55 08	 mov	 dx, WORD PTR _wChairCount$[ebp]
  00024	66 89 51 02	 mov	 WORD PTR [ecx+2], dx

; 3974 : 	m_PersonalTableParameter.wJoinGamePeopleCount = wChairCount;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	66 8b 4d 08	 mov	 cx, WORD PTR _wChairCount$[ebp]
  0002f	66 89 88 75 44
	00 00		 mov	 WORD PTR [eax+17525], cx

; 3975 : }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?SetTableChairCount@CTableFrame@@UAEXG@Z ENDP		; CTableFrame::SetTableChairCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetSpeicalInfo@CTableFrame@@UAEXPAEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbSpecialInfo$ = 8					; size = 4
_nSpecialLen$ = 12					; size = 4
?GetSpeicalInfo@CTableFrame@@UAEXPAEH@Z PROC		; CTableFrame::GetSpeicalInfo, COMDAT
; _this$ = ecx

; 4156 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4157 : 	memcpy(m_cbSpecialInfo, cbSpecialInfo, nSpecialLen);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _nSpecialLen$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _cbSpecialInfo$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	81 c2 7d 40 00
	00		 add	 edx, 16509		; 0000407dH
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 _memcpy
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4158 : 	m_nSpecialInfoLen = nSpecialLen;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _nSpecialLen$[ebp]
  0002c	89 88 68 44 00
	00		 mov	 DWORD PTR [eax+17512], ecx

; 4159 : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
?GetSpeicalInfo@CTableFrame@@UAEXPAEH@Z ENDP		; CTableFrame::GetSpeicalInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetGameRule@CTableFrame@@UAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameRule@CTableFrame@@UAEPAEXZ PROC			; CTableFrame::GetGameRule, COMDAT
; _this$ = ecx

; 4150 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4151 : 	return m_cbGanmeRule;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 35 11 00 00	 add	 eax, 4405		; 00001135H

; 4152 : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetGameRule@CTableFrame@@UAEPAEXZ ENDP			; CTableFrame::GetGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetGameRule@CTableFrame@@UAEXPAEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbRule$ = 8						; size = 4
_nLen$ = 12						; size = 4
?SetGameRule@CTableFrame@@UAEXPAEH@Z PROC		; CTableFrame::SetGameRule, COMDAT
; _this$ = ecx

; 4144 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4145 : 	memcpy(m_cbGanmeRule,  cbRule, sizeof(m_cbGanmeRule));

  0000c	6a 64		 push	 100			; 00000064H
  0000e	8b 45 08	 mov	 eax, DWORD PTR _cbRule$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 c1 35 11 00
	00		 add	 ecx, 4405		; 00001135H
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 _memcpy
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4146 : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 08 00	 ret	 8
?SetGameRule@CTableFrame@@UAEXPAEH@Z ENDP		; CTableFrame::SetGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetPersonalRoomID@CTableFrame@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPersonalRoomID@CTableFrame@@UAEKXZ PROC		; CTableFrame::GetPersonalRoomID, COMDAT
; _this$ = ecx

; 4204 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4205 : 	return m_dwPersonalRoomID;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 30 11 00
	00		 mov	 eax, DWORD PTR [eax+4400]

; 4206 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetPersonalRoomID@CTableFrame@@UAEKXZ ENDP		; CTableFrame::GetPersonalRoomID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?HostDissumeGame@CTableFrame@@UAEXH@Z
_TEXT	SEGMENT
_CancelTable$1 = -3180					; size = 132
_pUserItem$2 = -3048					; size = 4
_i$3 = -3044						; size = 4
_wDataSize$ = -3040					; size = 2
_szInfo$ = -3036					; size = 260
_i$4 = -2776						; size = 4
_PersonalTableEnd$ = -2772				; size = 2764
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bIsEnforce$ = 8					; size = 4
?HostDissumeGame@CTableFrame@@UAEXH@Z PROC		; CTableFrame::HostDissumeGame, COMDAT
; _this$ = ecx

; 4048 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 0e 00
	00		 sub	 esp, 3628		; 00000e2cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4049 : 	m_bIsDissumGame = true;

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c6 80 34 11 00
	00 01		 mov	 BYTE PTR [eax+4404], 1

; 4050 : 	if(m_bGameStarted == true)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  0002a	83 f9 01	 cmp	 ecx, 1
  0002d	75 0d		 jne	 SHORT $LN8@HostDissum

; 4051 : 	{
; 4052 : 		//解散游戏
; 4053 : 		DismissGame();

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 10		 mov	 edx, DWORD PTR [eax]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0003a	ff d0		 call	 eax
$LN8@HostDissum:

; 4054 : 	}
; 4055 : 	GetLocalTime(&m_sysEndTime);

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	05 ec 46 00 00	 add	 eax, 18156		; 000046ecH
  00044	50		 push	 eax
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 4056 : 	//结束消息
; 4057 : 	CMD_GR_PersonalTableEnd PersonalTableEnd;
; 4058 : 	ZeroMemory(&PersonalTableEnd, sizeof(CMD_GR_PersonalTableEnd));

  0004b	68 cc 0a 00 00	 push	 2764			; 00000accH
  00050	6a 00		 push	 0
  00052	8d 85 2c f5 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4059 : 	lstrcpyn(PersonalTableEnd.szDescribeString, TEXT("约战结束。"), CountArray(PersonalTableEnd.szDescribeString));

  00061	68 80 00 00 00	 push	 128			; 00000080H
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0L@INAKIJJF@?T?$LM?U?$LN?$LN?a?J?x?$KB?$KD@
  0006b	8d 85 2c f5 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$[ebp]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4060 : 	for(int i = 0; i < m_wChairCount; ++i)

  00078	c7 85 28 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$4[ebp], 0
  00082	eb 0f		 jmp	 SHORT $LN4@HostDissum
$LN2@HostDissum:
  00084	8b 85 28 f5 ff
	ff		 mov	 eax, DWORD PTR _i$4[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 85 28 f5 ff
	ff		 mov	 DWORD PTR _i$4[ebp], eax
$LN4@HostDissum:
  00093	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00096	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0009a	39 8d 28 f5 ff
	ff		 cmp	 DWORD PTR _i$4[ebp], ecx
  000a0	7d 2e		 jge	 SHORT $LN3@HostDissum

; 4061 : 	{
; 4062 : 		//IServerUserItem* pUserItem = m_TableUserItemArray[i];
; 4063 : 		//if(pUserItem == NULL) continue;
; 4064 : 		//PersonalTableEnd.lScore[i] = pUserItem->GetUserScore();
; 4065 : 		PersonalTableEnd.lScore[i] = m_PersonalUserScoreInfo[i].lScore;

  000a2	6b 85 28 f5 ff
	ff 3c		 imul	 eax, DWORD PTR _i$4[ebp], 60
  000a9	8b 8d 28 f5 ff
	ff		 mov	 ecx, DWORD PTR _i$4[ebp]
  000af	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b2	8b b4 02 c1 11
	00 00		 mov	 esi, DWORD PTR [edx+eax+4545]
  000b9	89 b4 cd ac f5
	ff ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+ecx*8+128], esi
  000c0	8b 84 02 c5 11
	00 00		 mov	 eax, DWORD PTR [edx+eax+4549]
  000c7	89 84 cd b0 f5
	ff ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+ecx*8+132], eax

; 4066 : 
; 4067 : 	}

  000ce	eb b4		 jmp	 SHORT $LN2@HostDissum
$LN3@HostDissum:

; 4068 : 	PersonalTableEnd.sysStartTime = m_sysStartTime;

  000d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	05 dc 46 00 00	 add	 eax, 18140		; 000046dcH
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	89 8d ec fb ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1728], ecx
  000e0	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000e3	89 95 f0 fb ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1732], edx
  000e9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ec	89 8d f4 fb ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1736], ecx
  000f2	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000f5	89 95 f8 fb ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1740], edx

; 4069 : 	PersonalTableEnd.sysEndTime = m_sysEndTime;

  000fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fe	05 ec 46 00 00	 add	 eax, 18156		; 000046ecH
  00103	8b 08		 mov	 ecx, DWORD PTR [eax]
  00105	89 8d fc fb ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1744], ecx
  0010b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0010e	89 95 00 fc ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1748], edx
  00114	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00117	89 8d 04 fc ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1752], ecx
  0011d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00120	89 95 08 fc ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1756], edx

; 4070 : 
; 4071 : 	//添加特殊信息
; 4072 : 	memcpy( PersonalTableEnd.cbSpecialInfo, m_cbSpecialInfo, m_nSpecialInfoLen);

  00126	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00129	8b 88 68 44 00
	00		 mov	 ecx, DWORD PTR [eax+17512]
  0012f	51		 push	 ecx
  00130	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00133	81 c2 7d 40 00
	00		 add	 edx, 16509		; 0000407dH
  00139	52		 push	 edx
  0013a	8d 85 10 fc ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$[ebp+1764]
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 _memcpy
  00146	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4073 : 	PersonalTableEnd.nSpecialInfoLen = m_nSpecialInfoLen;

  00149	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	8b 88 68 44 00
	00		 mov	 ecx, DWORD PTR [eax+17512]
  00152	89 8d 0c fc ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$[ebp+1760], ecx

; 4074 : 	TCHAR szInfo[260] = {0};

  00158	68 04 01 00 00	 push	 260			; 00000104H
  0015d	6a 00		 push	 0
  0015f	8d 85 24 f4 ff
	ff		 lea	 eax, DWORD PTR _szInfo$[ebp]
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 _memset
  0016b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4075 : 
; 4076 : 
; 4077 : 	WORD wDataSize = sizeof(CMD_GR_PersonalTableEnd) - sizeof(PersonalTableEnd.lScore) + sizeof(LONGLONG) * m_wChairCount;

  0016e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00171	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00175	8d 14 cd 8c 04
	00 00		 lea	 edx, DWORD PTR [ecx*8+1164]
  0017c	66 89 95 20 f4
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], dx

; 4078 : 	for(int i = 0; i < m_wChairCount; ++i)

  00183	c7 85 1c f4 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$3[ebp], 0
  0018d	eb 0f		 jmp	 SHORT $LN7@HostDissum
$LN5@HostDissum:
  0018f	8b 85 1c f4 ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  00195	83 c0 01	 add	 eax, 1
  00198	89 85 1c f4 ff
	ff		 mov	 DWORD PTR _i$3[ebp], eax
$LN7@HostDissum:
  0019e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a1	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  001a5	39 8d 1c f4 ff
	ff		 cmp	 DWORD PTR _i$3[ebp], ecx
  001ab	0f 8d 33 01 00
	00		 jge	 $LN6@HostDissum

; 4079 : 	{
; 4080 : 		IServerUserItem* pUserItem = m_TableUserItemArray[i];

  001b1	8b 85 1c f4 ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  001b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  001c1	89 95 18 f4 ff
	ff		 mov	 DWORD PTR _pUserItem$2[ebp], edx

; 4081 : 		if(pUserItem == NULL ) 

  001c7	83 bd 18 f4 ff
	ff 00		 cmp	 DWORD PTR _pUserItem$2[ebp], 0
  001ce	75 02		 jne	 SHORT $LN9@HostDissum

; 4082 : 		{
; 4083 : 			continue;

  001d0	eb bd		 jmp	 SHORT $LN5@HostDissum
$LN9@HostDissum:

; 4084 : 		}
; 4085 : 		
; 4086 : 		if (m_dwPersonalPlayCount != 0)

  001d2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d5	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  001dc	74 33		 je	 SHORT $LN10@HostDissum

; 4087 : 		{
; 4088 : 			//约战结果
; 4089 : 			m_pIMainServiceFrame->SendData(pUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_PERSONAL_TABLE_END, &PersonalTableEnd, sizeof(CMD_GR_PersonalTableEnd));

  001de	68 cc 0a 00 00	 push	 2764			; 00000accH
  001e3	8d 85 2c f5 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$[ebp]
  001e9	50		 push	 eax
  001ea	6a 0a		 push	 10			; 0000000aH
  001ec	68 d2 00 00 00	 push	 210			; 000000d2H
  001f1	8b 8d 18 f4 ff
	ff		 mov	 ecx, DWORD PTR _pUserItem$2[ebp]
  001f7	51		 push	 ecx
  001f8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001fb	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00201	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	8b 10		 mov	 edx, DWORD PTR [eax]
  00206	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0020c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0020f	ff d0		 call	 eax
$LN10@HostDissum:

; 4090 : 		}
; 4091 : 
; 4092 : 
; 4093 : 		//构造数据
; 4094 : 		CMD_GR_CancelTable CancelTable;
; 4095 : 		ZeroMemory(&CancelTable, sizeof(CMD_GR_CancelTable));

  00211	68 84 00 00 00	 push	 132			; 00000084H
  00216	6a 00		 push	 0
  00218	8d 85 94 f3 ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 _memset
  00224	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4096 : 		CancelTable.dwReason = CANCELTABLE_REASON_SYSTEM;

  00227	c7 85 94 f3 ff
	ff 01 00 00 00	 mov	 DWORD PTR _CancelTable$1[ebp], 1

; 4097 : 		if (bIsEnforce)

  00231	83 7d 08 00	 cmp	 DWORD PTR _bIsEnforce$[ebp], 0
  00235	74 23		 je	 SHORT $LN11@HostDissum

; 4098 : 		{
; 4099 : 			CancelTable.dwReason = CANCELTABLE_REASON_ENFOCE;

  00237	c7 85 94 f3 ff
	ff 02 00 00 00	 mov	 DWORD PTR _CancelTable$1[ebp], 2

; 4100 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("房主强制解散游戏！"), CountArray(CancelTable.szDescribeString));

  00241	68 80 00 00 00	 push	 128			; 00000080H
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HIPNDJBM@?$LH?$LP?V?w?G?$LP?V?F?$LN?b?I?$KC?S?N?O?$LH?$KD?$KB@
  0024b	8d 85 98 f3 ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  00251	50		 push	 eax
  00252	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4101 : 		}
; 4102 : 		else

  00258	eb 17		 jmp	 SHORT $LN12@HostDissum
$LN11@HostDissum:

; 4103 : 		{
; 4104 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("游戏自动解散！"), CountArray(CancelTable.szDescribeString));

  0025a	68 80 00 00 00	 push	 128			; 00000080H
  0025f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IHBJCBPJ@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KD?$KB@
  00264	8d 85 98 f3 ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  0026a	50		 push	 eax
  0026b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN12@HostDissum:

; 4105 : 		}
; 4106 : 
; 4107 : 
; 4108 : 		//解散消息
; 4109 : 		m_pIMainServiceFrame->SendData(pUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_CANCEL_TABLE, &CancelTable, sizeof(CMD_GR_CancelTable));

  00271	68 84 00 00 00	 push	 132			; 00000084H
  00276	8d 85 94 f3 ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp]
  0027c	50		 push	 eax
  0027d	6a 04		 push	 4
  0027f	68 d2 00 00 00	 push	 210			; 000000d2H
  00284	8b 8d 18 f4 ff
	ff		 mov	 ecx, DWORD PTR _pUserItem$2[ebp]
  0028a	51		 push	 ecx
  0028b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0028e	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00294	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00297	8b 10		 mov	 edx, DWORD PTR [eax]
  00299	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0029f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  002a2	ff d0		 call	 eax

; 4110 : 
; 4111 : 		//用户状态
; 4112 : 		PerformStandUpAction(pUserItem);

  002a4	6a 00		 push	 0
  002a6	8b 85 18 f4 ff
	ff		 mov	 eax, DWORD PTR _pUserItem$2[ebp]
  002ac	50		 push	 eax
  002ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  002b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b5	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  002bb	ff d0		 call	 eax

; 4113 : 		pUserItem->SetUserStatus(US_FREE, INVALID_TABLE, INVALID_CHAIR);

  002bd	68 ff ff 00 00	 push	 65535			; 0000ffffH
  002c2	68 ff ff 00 00	 push	 65535			; 0000ffffH
  002c7	6a 01		 push	 1
  002c9	8b 85 18 f4 ff
	ff		 mov	 eax, DWORD PTR _pUserItem$2[ebp]
  002cf	8b 10		 mov	 edx, DWORD PTR [eax]
  002d1	8b 8d 18 f4 ff
	ff		 mov	 ecx, DWORD PTR _pUserItem$2[ebp]
  002d7	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  002dd	ff d0		 call	 eax

; 4114 : 	}

  002df	e9 ab fe ff ff	 jmp	 $LN5@HostDissum
$LN6@HostDissum:

; 4115 : 
; 4116 : 	if(!bIsEnforce)

  002e4	83 7d 08 00	 cmp	 DWORD PTR _bIsEnforce$[ebp], 0
  002e8	0f 85 a4 00 00
	00		 jne	 $LN13@HostDissum

; 4117 : 	{
; 4118 : 		if (m_dwPersonalPlayCount == 0 )

  002ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f1	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  002f8	75 4d		 jne	 SHORT $LN14@HostDissum

; 4119 : 		{
; 4120 : 			m_pIMainServiceFrame->CancelCreateTable(m_dwTableOwnerID, m_dwDrawCountLimit, m_dwDrawTimeLimit, CANCELTABLE_REASON_ENFOCE, m_wTableID, m_dwPersonalRoomID);//CANCELTABLE_REASON_ENFOCE

  002fa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fd	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  00303	51		 push	 ecx
  00304	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00307	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  0030b	50		 push	 eax
  0030c	6a 02		 push	 2
  0030e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00311	8b 91 1c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4124]
  00317	52		 push	 edx
  00318	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0031b	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  00321	51		 push	 ecx
  00322	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00325	8b 82 40 07 00
	00		 mov	 eax, DWORD PTR [edx+1856]
  0032b	50		 push	 eax
  0032c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0032f	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  00335	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00338	8b 12		 mov	 edx, DWORD PTR [edx]
  0033a	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00340	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00343	ff d0		 call	 eax

; 4121 : 		}
; 4122 : 		else

  00345	eb 4b		 jmp	 SHORT $LN13@HostDissum
$LN14@HostDissum:

; 4123 : 		{
; 4124 : 			m_pIMainServiceFrame->CancelCreateTable(m_dwTableOwnerID, m_dwDrawCountLimit, m_dwDrawTimeLimit, CANCELTABLE_REASON_OVER_TIME, m_wTableID, m_dwPersonalRoomID);

  00347	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0034a	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  00350	51		 push	 ecx
  00351	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00354	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00358	50		 push	 eax
  00359	6a 05		 push	 5
  0035b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035e	8b 91 1c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4124]
  00364	52		 push	 edx
  00365	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00368	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  0036e	51		 push	 ecx
  0036f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00372	8b 82 40 07 00
	00		 mov	 eax, DWORD PTR [edx+1856]
  00378	50		 push	 eax
  00379	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0037c	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  00382	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00385	8b 12		 mov	 edx, DWORD PTR [edx]
  00387	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0038d	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00390	ff d0		 call	 eax
$LN13@HostDissum:

; 4125 : 		}
; 4126 : 	}
; 4127 : 
; 4128 : 	m_pTableOwnerUser = NULL;

  00392	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00395	c7 80 14 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4116], 0

; 4129 : 	m_dwTableOwnerID = 0;

  0039f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003a2	c7 80 40 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1856], 0

; 4130 : 	m_dwDrawCountLimit = 0;

  003ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003af	c7 80 18 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4120], 0

; 4131 : 	m_dwDrawTimeLimit = 0;

  003b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003bc	c7 80 1c 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4124], 0

; 4132 : 	m_dwTimeBegin = 0;

  003c6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c9	c7 80 30 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4144], 0

; 4133 : 	m_dwReplyCount = 0;

  003d3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003d6	c7 80 44 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4164], 0

; 4134 : 	ZeroMemory(m_cbRequestReply,sizeof(m_cbRequestReply));

  003e0	68 c8 00 00 00	 push	 200			; 000000c8H
  003e5	6a 00		 push	 0
  003e7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ea	05 48 10 00 00	 add	 eax, 4168		; 00001048H
  003ef	50		 push	 eax
  003f0	e8 00 00 00 00	 call	 _memset
  003f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4135 : 	m_MapPersonalTableScoreInfo.RemoveAll();

  003f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  00401	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll

; 4136 : 	m_dwPersonalPlayCount = 0;

  00406	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00409	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 4137 : 	m_cbLoopCount = 0;

  00413	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00416	c6 80 9c 11 00
	00 00		 mov	 BYTE PTR [eax+4508], 0

; 4138 : 	m_bIsEnfoceDissum = true;

  0041d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00420	c6 80 9b 11 00
	00 01		 mov	 BYTE PTR [eax+4507], 1

; 4139 : 	m_cbIsRequestOver = 0;

  00427	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0042a	c6 80 11 11 00
	00 00		 mov	 BYTE PTR [eax+4369], 0

; 4140 : }

  00431	5f		 pop	 edi
  00432	5e		 pop	 esi
  00433	5b		 pop	 ebx
  00434	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00437	33 cd		 xor	 ecx, ebp
  00439	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0043e	8b e5		 mov	 esp, ebp
  00440	5d		 pop	 ebp
  00441	c2 04 00	 ret	 4
?HostDissumeGame@CTableFrame@@UAEXH@Z ENDP		; CTableFrame::HostDissumeGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetPersonalRoomID@CTableFrame@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwRoomID$ = 8						; size = 4
?SetPersonalRoomID@CTableFrame@@UAEXK@Z PROC		; CTableFrame::SetPersonalRoomID, COMDAT
; _this$ = ecx

; 4186 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4187 : 	if (dwRoomID == 0)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _dwRoomID$[ebp], 0
  00010	75 0f		 jne	 SHORT $LN2@SetPersona

; 4188 : 	{
; 4189 : 		m_dwPersonalRoomID = 0;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 80 30 11 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4400], 0

; 4190 : 	}
; 4191 : 	else

  0001f	eb 38		 jmp	 SHORT $LN1@SetPersona
$LN2@SetPersona:

; 4192 : 	{
; 4193 : 		m_dwPersonalRoomID = dwRoomID;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _dwRoomID$[ebp]
  00027	89 88 30 11 00
	00		 mov	 DWORD PTR [eax+4400], ecx

; 4194 : 		m_bIsAllRequstCancel = false;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c6 80 99 11 00
	00 00		 mov	 BYTE PTR [eax+4505], 0

; 4195 : 		memset(m_bBeOut, 0, sizeof(m_bBeOut));

  00037	68 c8 00 00 00	 push	 200			; 000000c8H
  0003c	6a 00		 push	 0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	05 14 45 00 00	 add	 eax, 17684		; 00004514H
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4196 : 		m_bIsDissumGame = false;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c6 80 34 11 00
	00 00		 mov	 BYTE PTR [eax+4404], 0
$LN1@SetPersona:

; 4197 : 	}
; 4198 : 
; 4199 : 	return;
; 4200 : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?SetPersonalRoomID@CTableFrame@@UAEXK@Z ENDP		; CTableFrame::SetPersonalRoomID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?CancelTableRequestReply@CTableFrame@@UAE_NKE@Z
_TEXT	SEGMENT
tv274 = -3840						; size = 4
_pTableUserItem$1 = -3388				; size = 4
_i$2 = -3384						; size = 4
_pTableUserItem$3 = -3380				; size = 4
_i$4 = -3376						; size = 4
_wDataSize$5 = -3372					; size = 2
_i$6 = -3368						; size = 4
_PersonalTableEnd$7 = -3364				; size = 2764
_szInfo$8 = -600					; size = 260
_pTableUserItem$9 = -340				; size = 4
_i$10 = -336						; size = 4
_RequestResult$ = -332					; size = 5
_szInfo$11 = -324					; size = 260
_pTableUserItem$12 = -64				; size = 4
_i$13 = -60						; size = 4
_RequestResult$14 = -56					; size = 5
_i$15 = -48						; size = 4
_nCancelCount$ = -44					; size = 4
_nDealCancelCount$ = -40				; size = 4
_pIServerUserItem$16 = -36				; size = 4
_i$17 = -32						; size = 4
_wAgreeCount$ = -28					; size = 2
_wOnlineCount$ = -24					; size = 2
_bCancel$ = -17						; size = 1
_wChairID$ = -16					; size = 2
_pUserItem$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwUserID$ = 8						; size = 4
_cbAgree$ = 12						; size = 1
?CancelTableRequestReply@CTableFrame@@UAE_NKE@Z PROC	; CTableFrame::CancelTableRequestReply, COMDAT
; _this$ = ecx

; 3780 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 0f 00
	00		 sub	 esp, 3840		; 00000f00H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3781 : 	//查找用户
; 3782 : 	IServerUserItem* pUserItem = SearchUserItem(dwUserID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  0002b	ff d0		 call	 eax
  0002d	89 45 f4	 mov	 DWORD PTR _pUserItem$[ebp], eax

; 3783 : 	if(pUserItem == NULL) return false;

  00030	83 7d f4 00	 cmp	 DWORD PTR _pUserItem$[ebp], 0
  00034	75 07		 jne	 SHORT $LN23@CancelTabl
  00036	32 c0		 xor	 al, al
  00038	e9 ac 07 00 00	 jmp	 $LN1@CancelTabl
$LN23@CancelTabl:

; 3784 : 
; 3785 : 	//答复设置
; 3786 : 	WORD wChairID = pUserItem->GetChairID();

  0003d	8b 45 f4	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b 4d f4	 mov	 ecx, DWORD PTR _pUserItem$[ebp]
  00045	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00048	ff d0		 call	 eax
  0004a	66 89 45 f0	 mov	 WORD PTR _wChairID$[ebp], ax

; 3787 : 	if(cbAgree == 0)

  0004e	0f b6 45 0c	 movzx	 eax, BYTE PTR _cbAgree$[ebp]
  00052	85 c0		 test	 eax, eax
  00054	75 11		 jne	 SHORT $LN24@CancelTabl

; 3788 : 	{
; 3789 : 		m_cbRequestReply[wChairID] = 2;			//不同意

  00056	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	c6 84 01 48 10
	00 00 02	 mov	 BYTE PTR [ecx+eax+4168], 2

; 3790 : 	}
; 3791 : 	else

  00065	eb 0f		 jmp	 SHORT $LN25@CancelTabl
$LN24@CancelTabl:

; 3792 : 	{
; 3793 : 		m_cbRequestReply[wChairID] = 1;			//同意

  00067	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	c6 84 01 48 10
	00 00 01	 mov	 BYTE PTR [ecx+eax+4168], 1
$LN25@CancelTabl:

; 3794 : 	}
; 3795 : 	m_dwReplyCount++;

  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 88 44 10 00
	00		 mov	 ecx, DWORD PTR [eax+4164]
  0007f	83 c1 01	 add	 ecx, 1
  00082	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00085	89 8a 44 10 00
	00		 mov	 DWORD PTR [edx+4164], ecx

; 3796 : 
; 3797 : 	//结果判断
; 3798 : 	bool bCancel = false;

  0008b	c6 45 ef 00	 mov	 BYTE PTR _bCancel$[ebp], 0

; 3799 : 	WORD wOnlineCount = 0;

  0008f	33 c0		 xor	 eax, eax
  00091	66 89 45 e8	 mov	 WORD PTR _wOnlineCount$[ebp], ax

; 3800 : 	WORD wAgreeCount = 0;

  00095	33 c0		 xor	 eax, eax
  00097	66 89 45 e4	 mov	 WORD PTR _wAgreeCount$[ebp], ax

; 3801 : 	for(int i = 0; i < m_wChairCount; ++i)

  0009b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$17[ebp], 0
  000a2	eb 09		 jmp	 SHORT $LN4@CancelTabl
$LN2@CancelTabl:
  000a4	8b 45 e0	 mov	 eax, DWORD PTR _i$17[ebp]
  000a7	83 c0 01	 add	 eax, 1
  000aa	89 45 e0	 mov	 DWORD PTR _i$17[ebp], eax
$LN4@CancelTabl:
  000ad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  000b4	39 4d e0	 cmp	 DWORD PTR _i$17[ebp], ecx
  000b7	7d 43		 jge	 SHORT $LN3@CancelTabl

; 3802 : 	{
; 3803 : 		IServerUserItem* pIServerUserItem = GetTableUserItem(i);

  000b9	0f b7 45 e0	 movzx	 eax, WORD PTR _i$17[ebp]
  000bd	50		 push	 eax
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000cc	ff d0		 call	 eax
  000ce	89 45 dc	 mov	 DWORD PTR _pIServerUserItem$16[ebp], eax

; 3804 : 		if(pIServerUserItem == NULL) continue;

  000d1	83 7d dc 00	 cmp	 DWORD PTR _pIServerUserItem$16[ebp], 0
  000d5	75 02		 jne	 SHORT $LN26@CancelTabl
  000d7	eb cb		 jmp	 SHORT $LN2@CancelTabl
$LN26@CancelTabl:

; 3805 : 		if(pIServerUserItem->GetUserStatus() != US_OFFLINE) wOnlineCount++;

  000d9	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$16[ebp]
  000dc	8b 10		 mov	 edx, DWORD PTR [eax]
  000de	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  000e1	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000e4	ff d0		 call	 eax
  000e6	0f b6 c8	 movzx	 ecx, al
  000e9	83 f9 06	 cmp	 ecx, 6
  000ec	74 0c		 je	 SHORT $LN27@CancelTabl
  000ee	66 8b 45 e8	 mov	 ax, WORD PTR _wOnlineCount$[ebp]
  000f2	66 83 c0 01	 add	 ax, 1
  000f6	66 89 45 e8	 mov	 WORD PTR _wOnlineCount$[ebp], ax
$LN27@CancelTabl:

; 3806 : 	}

  000fa	eb a8		 jmp	 SHORT $LN2@CancelTabl
$LN3@CancelTabl:

; 3807 : 	
; 3808 : 	int nDealCancelCount = 0;

  000fc	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _nDealCancelCount$[ebp], 0

; 3809 : 	int nCancelCount = 0;

  00103	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _nCancelCount$[ebp], 0

; 3810 : 
; 3811 : 	for(int i = 0; i <m_wChairCount; ++i)

  0010a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$15[ebp], 0
  00111	eb 09		 jmp	 SHORT $LN7@CancelTabl
$LN5@CancelTabl:
  00113	8b 45 d0	 mov	 eax, DWORD PTR _i$15[ebp]
  00116	83 c0 01	 add	 eax, 1
  00119	89 45 d0	 mov	 DWORD PTR _i$15[ebp], eax
$LN7@CancelTabl:
  0011c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00123	39 4d d0	 cmp	 DWORD PTR _i$15[ebp], ecx
  00126	7d 55		 jge	 SHORT $LN6@CancelTabl

; 3812 : 	{
; 3813 : 		if(m_cbRequestReply[i] == 1)

  00128	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012b	03 45 d0	 add	 eax, DWORD PTR _i$15[ebp]
  0012e	0f b6 88 48 10
	00 00		 movzx	 ecx, BYTE PTR [eax+4168]
  00135	83 f9 01	 cmp	 ecx, 1
  00138	75 0c		 jne	 SHORT $LN28@CancelTabl

; 3814 : 		{
; 3815 : 			wAgreeCount++;

  0013a	66 8b 45 e4	 mov	 ax, WORD PTR _wAgreeCount$[ebp]
  0013e	66 83 c0 01	 add	 ax, 1
  00142	66 89 45 e4	 mov	 WORD PTR _wAgreeCount$[ebp], ax
$LN28@CancelTabl:

; 3816 : 		}
; 3817 : 
; 3818 : 		if(m_cbRequestReply[i] == 2)

  00146	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00149	03 45 d0	 add	 eax, DWORD PTR _i$15[ebp]
  0014c	0f b6 88 48 10
	00 00		 movzx	 ecx, BYTE PTR [eax+4168]
  00153	83 f9 02	 cmp	 ecx, 2
  00156	75 09		 jne	 SHORT $LN29@CancelTabl

; 3819 : 		{
; 3820 : 			nCancelCount++;

  00158	8b 45 d4	 mov	 eax, DWORD PTR _nCancelCount$[ebp]
  0015b	83 c0 01	 add	 eax, 1
  0015e	89 45 d4	 mov	 DWORD PTR _nCancelCount$[ebp], eax
$LN29@CancelTabl:

; 3821 : 		}
; 3822 : 
; 3823 : 		if(m_cbRequestReply[i] != 0)

  00161	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00164	03 45 d0	 add	 eax, DWORD PTR _i$15[ebp]
  00167	0f b6 88 48 10
	00 00		 movzx	 ecx, BYTE PTR [eax+4168]
  0016e	85 c9		 test	 ecx, ecx
  00170	74 09		 je	 SHORT $LN30@CancelTabl

; 3824 : 		{
; 3825 : 			nDealCancelCount++;

  00172	8b 45 d8	 mov	 eax, DWORD PTR _nDealCancelCount$[ebp]
  00175	83 c0 01	 add	 eax, 1
  00178	89 45 d8	 mov	 DWORD PTR _nDealCancelCount$[ebp], eax
$LN30@CancelTabl:

; 3826 : 		}
; 3827 : 	}

  0017b	eb 96		 jmp	 SHORT $LN5@CancelTabl
$LN6@CancelTabl:

; 3828 : 
; 3829 : 	if(m_cbIsRequestOver == 0)

  0017d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00180	0f b6 88 11 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4369]
  00187	85 c9		 test	 ecx, ecx
  00189	75 07		 jne	 SHORT $LN31@CancelTabl

; 3830 : 	{
; 3831 : 		return true;

  0018b	b0 01		 mov	 al, 1
  0018d	e9 57 06 00 00	 jmp	 $LN1@CancelTabl
$LN31@CancelTabl:

; 3832 : 	}
; 3833 : 
; 3834 : 	if(nCancelCount > ((m_wChairCount )/2 ) )

  00192	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00195	0f b7 40 0a	 movzx	 eax, WORD PTR [eax+10]
  00199	99		 cdq
  0019a	2b c2		 sub	 eax, edx
  0019c	d1 f8		 sar	 eax, 1
  0019e	39 45 d4	 cmp	 DWORD PTR _nCancelCount$[ebp], eax
  001a1	0f 8e f4 00 00
	00		 jle	 $LN32@CancelTabl

; 3835 : 	{
; 3836 : 		m_cbIsRequestOver = 0;

  001a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001aa	c6 80 11 11 00
	00 00		 mov	 BYTE PTR [eax+4369], 0

; 3837 : 		CMD_GR_RequestResult RequestResult;
; 3838 : 		ZeroMemory(&RequestResult, sizeof(CMD_GR_RequestResult));

  001b1	6a 05		 push	 5
  001b3	6a 00		 push	 0
  001b5	8d 45 c8	 lea	 eax, DWORD PTR _RequestResult$14[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 _memset
  001be	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3839 : 		RequestResult.dwTableID = m_wTableID;

  001c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c4	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  001c8	89 4d c8	 mov	 DWORD PTR _RequestResult$14[ebp], ecx

; 3840 : 		RequestResult.cbResult = 0;	//1 ： 解散桌子 0 ： 继续游戏

  001cb	c6 45 cc 00	 mov	 BYTE PTR _RequestResult$14[ebp+4], 0

; 3841 : 		for(int i = 0; i < m_wChairCount; ++i)

  001cf	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$13[ebp], 0
  001d6	eb 09		 jmp	 SHORT $LN10@CancelTabl
$LN8@CancelTabl:
  001d8	8b 45 c4	 mov	 eax, DWORD PTR _i$13[ebp]
  001db	83 c0 01	 add	 eax, 1
  001de	89 45 c4	 mov	 DWORD PTR _i$13[ebp], eax
$LN10@CancelTabl:
  001e1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e4	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  001e8	39 4d c4	 cmp	 DWORD PTR _i$13[ebp], ecx
  001eb	0f 8d a3 00 00
	00		 jge	 $LN9@CancelTabl

; 3842 : 		{
; 3843 : 			IServerUserItem* pTableUserItem = GetTableUserItem(i);

  001f1	0f b7 45 c4	 movzx	 eax, WORD PTR _i$13[ebp]
  001f5	50		 push	 eax
  001f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00204	ff d0		 call	 eax
  00206	89 45 c0	 mov	 DWORD PTR _pTableUserItem$12[ebp], eax

; 3844 : 			if(pTableUserItem == NULL) continue;

  00209	83 7d c0 00	 cmp	 DWORD PTR _pTableUserItem$12[ebp], 0
  0020d	75 02		 jne	 SHORT $LN33@CancelTabl
  0020f	eb c7		 jmp	 SHORT $LN8@CancelTabl
$LN33@CancelTabl:

; 3845 : 			TCHAR szInfo[260] = {0};

  00211	68 04 01 00 00	 push	 260			; 00000104H
  00216	6a 00		 push	 0
  00218	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$11[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 _memset
  00224	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3846 : 			wsprintf(szInfo, TEXT("ptdtjs *** 向 UserID = %d   Nicname = %s  发送消息"), pTableUserItem->GetUserID(),  pTableUserItem->GetNickName());

  00227	8b 45 c0	 mov	 eax, DWORD PTR _pTableUserItem$12[ebp]
  0022a	8b 10		 mov	 edx, DWORD PTR [eax]
  0022c	8b 4d c0	 mov	 ecx, DWORD PTR _pTableUserItem$12[ebp]
  0022f	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00232	ff d0		 call	 eax
  00234	50		 push	 eax
  00235	8b 4d c0	 mov	 ecx, DWORD PTR _pTableUserItem$12[ebp]
  00238	8b 11		 mov	 edx, DWORD PTR [ecx]
  0023a	8b 4d c0	 mov	 ecx, DWORD PTR _pTableUserItem$12[ebp]
  0023d	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00240	ff d0		 call	 eax
  00242	50		 push	 eax
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@NAIKEGDD@ptdtjs?5?$CK?$CK?$CK?5?O?r?5UserID?5?$DN?5?$CFd?5?5?5Nic@
  00248	8d 8d bc fe ff
	ff		 lea	 ecx, DWORD PTR _szInfo$11[ebp]
  0024e	51		 push	 ecx
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00255	83 c4 10	 add	 esp, 16			; 00000010H

; 3847 : 			OutputDebugString(szInfo);

  00258	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$11[ebp]
  0025e	50		 push	 eax
  0025f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4

; 3848 : 			m_pIMainServiceFrame->SendData(pTableUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_REQUEST_RESULT, &RequestResult, sizeof(CMD_GR_RequestResult));

  00265	6a 05		 push	 5
  00267	8d 45 c8	 lea	 eax, DWORD PTR _RequestResult$14[ebp]
  0026a	50		 push	 eax
  0026b	6a 07		 push	 7
  0026d	68 d2 00 00 00	 push	 210			; 000000d2H
  00272	8b 4d c0	 mov	 ecx, DWORD PTR _pTableUserItem$12[ebp]
  00275	51		 push	 ecx
  00276	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00279	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  0027f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	8b 10		 mov	 edx, DWORD PTR [eax]
  00284	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0028a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0028d	ff d0		 call	 eax

; 3849 : 		}

  0028f	e9 44 ff ff ff	 jmp	 $LN8@CancelTabl
$LN9@CancelTabl:

; 3850 : 
; 3851 : 		return true;

  00294	b0 01		 mov	 al, 1
  00296	e9 4e 05 00 00	 jmp	 $LN1@CancelTabl
$LN32@CancelTabl:

; 3852 : 	}
; 3853 : 
; 3854 : 	//所有玩家都处理了，关闭解散超时定时器
; 3855 : 	if (nDealCancelCount == m_wChairCount)

  0029b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0029e	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  002a2	39 4d d8	 cmp	 DWORD PTR _nDealCancelCount$[ebp], ecx
  002a5	75 12		 jne	 SHORT $LN34@CancelTabl

; 3856 : 	{
; 3857 : 		KillGameTimer(IDI_TIME_CANCEL);

  002a7	6a 2e		 push	 46			; 0000002eH
  002a9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ac	8b 10		 mov	 edx, DWORD PTR [eax]
  002ae	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  002b7	ff d0		 call	 eax
$LN34@CancelTabl:

; 3858 : 	}
; 3859 : 
; 3860 : 	if(m_dwReplyCount < wOnlineCount && m_cbRequestReply[wChairID] == 2 ) return true;

  002b9	0f b7 45 e8	 movzx	 eax, WORD PTR _wOnlineCount$[ebp]
  002bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c0	39 81 44 10 00
	00		 cmp	 DWORD PTR [ecx+4164], eax
  002c6	73 1b		 jae	 SHORT $LN35@CancelTabl
  002c8	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  002cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002cf	0f b6 94 01 48
	10 00 00	 movzx	 edx, BYTE PTR [ecx+eax+4168]
  002d7	83 fa 02	 cmp	 edx, 2
  002da	75 07		 jne	 SHORT $LN35@CancelTabl
  002dc	b0 01		 mov	 al, 1
  002de	e9 06 05 00 00	 jmp	 $LN1@CancelTabl
$LN35@CancelTabl:

; 3861 : 	if(m_dwReplyCount < wOnlineCount && wAgreeCount <  ((m_wChairCount )/2  + 1 )&& m_wChairCount != 2)

  002e3	0f b7 45 e8	 movzx	 eax, WORD PTR _wOnlineCount$[ebp]
  002e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002ea	39 81 44 10 00
	00		 cmp	 DWORD PTR [ecx+4164], eax
  002f0	73 2a		 jae	 SHORT $LN36@CancelTabl
  002f2	0f b7 4d e4	 movzx	 ecx, WORD PTR _wAgreeCount$[ebp]
  002f6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002f9	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  002fd	99		 cdq
  002fe	2b c2		 sub	 eax, edx
  00300	d1 f8		 sar	 eax, 1
  00302	83 c0 01	 add	 eax, 1
  00305	3b c8		 cmp	 ecx, eax
  00307	7d 13		 jge	 SHORT $LN36@CancelTabl
  00309	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0030c	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00310	83 f9 02	 cmp	 ecx, 2
  00313	74 07		 je	 SHORT $LN36@CancelTabl

; 3862 : 	{
; 3863 : 		return true;

  00315	b0 01		 mov	 al, 1
  00317	e9 cd 04 00 00	 jmp	 $LN1@CancelTabl
$LN36@CancelTabl:

; 3864 : 	}
; 3865 : 
; 3866 : 	if(wAgreeCount >= wOnlineCount || wAgreeCount >= ((m_wChairCount )/2  + 1 )&& m_wChairCount != 2) 

  0031c	0f b7 45 e4	 movzx	 eax, WORD PTR _wAgreeCount$[ebp]
  00320	0f b7 4d e8	 movzx	 ecx, WORD PTR _wOnlineCount$[ebp]
  00324	3b c1		 cmp	 eax, ecx
  00326	7d 23		 jge	 SHORT $LN38@CancelTabl
  00328	0f b7 4d e4	 movzx	 ecx, WORD PTR _wAgreeCount$[ebp]
  0032c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0032f	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00333	99		 cdq
  00334	2b c2		 sub	 eax, edx
  00336	d1 f8		 sar	 eax, 1
  00338	83 c0 01	 add	 eax, 1
  0033b	3b c8		 cmp	 ecx, eax
  0033d	7c 10		 jl	 SHORT $LN37@CancelTabl
  0033f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00342	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00346	83 f9 02	 cmp	 ecx, 2
  00349	74 04		 je	 SHORT $LN37@CancelTabl
$LN38@CancelTabl:

; 3867 : 	{
; 3868 : 		bCancel = true;

  0034b	c6 45 ef 01	 mov	 BYTE PTR _bCancel$[ebp], 1
$LN37@CancelTabl:

; 3869 : 	}
; 3870 : 
; 3871 : 	m_cbIsRequestOver = 0;

  0034f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00352	c6 80 11 11 00
	00 00		 mov	 BYTE PTR [eax+4369], 0

; 3872 : 
; 3873 : 
; 3874 : 	//请求结果
; 3875 : 	CMD_GR_RequestResult RequestResult;
; 3876 : 	ZeroMemory(&RequestResult, sizeof(CMD_GR_RequestResult));

  00359	6a 05		 push	 5
  0035b	6a 00		 push	 0
  0035d	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _RequestResult$[ebp]
  00363	50		 push	 eax
  00364	e8 00 00 00 00	 call	 _memset
  00369	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3877 : 	RequestResult.dwTableID = m_wTableID;

  0036c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0036f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00373	89 8d b4 fe ff
	ff		 mov	 DWORD PTR _RequestResult$[ebp], ecx

; 3878 : 	RequestResult.cbResult = bCancel?1:0;	//1 ： 解散桌子 0 ： 继续游戏

  00379	0f b6 45 ef	 movzx	 eax, BYTE PTR _bCancel$[ebp]
  0037d	85 c0		 test	 eax, eax
  0037f	74 0c		 je	 SHORT $LN48@CancelTabl
  00381	c7 85 00 f1 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv274[ebp], 1
  0038b	eb 0a		 jmp	 SHORT $LN49@CancelTabl
$LN48@CancelTabl:
  0038d	c7 85 00 f1 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv274[ebp], 0
$LN49@CancelTabl:
  00397	8a 8d 00 f1 ff
	ff		 mov	 cl, BYTE PTR tv274[ebp]
  0039d	88 8d b8 fe ff
	ff		 mov	 BYTE PTR _RequestResult$[ebp+4], cl

; 3879 : 	for(int i = 0; i < m_wChairCount; ++i)

  003a3	c7 85 b0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$10[ebp], 0
  003ad	eb 0f		 jmp	 SHORT $LN13@CancelTabl
$LN11@CancelTabl:
  003af	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _i$10[ebp]
  003b5	83 c0 01	 add	 eax, 1
  003b8	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _i$10[ebp], eax
$LN13@CancelTabl:
  003be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c1	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  003c5	39 8d b0 fe ff
	ff		 cmp	 DWORD PTR _i$10[ebp], ecx
  003cb	7d 5b		 jge	 SHORT $LN12@CancelTabl

; 3880 : 	{
; 3881 : 		IServerUserItem* pTableUserItem = GetTableUserItem(i);

  003cd	0f b7 85 b0 fe
	ff ff		 movzx	 eax, WORD PTR _i$10[ebp]
  003d4	50		 push	 eax
  003d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003d8	8b 11		 mov	 edx, DWORD PTR [ecx]
  003da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003dd	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  003e3	ff d0		 call	 eax
  003e5	89 85 ac fe ff
	ff		 mov	 DWORD PTR _pTableUserItem$9[ebp], eax

; 3882 : 		if(pTableUserItem == NULL) continue;

  003eb	83 bd ac fe ff
	ff 00		 cmp	 DWORD PTR _pTableUserItem$9[ebp], 0
  003f2	75 02		 jne	 SHORT $LN39@CancelTabl
  003f4	eb b9		 jmp	 SHORT $LN11@CancelTabl
$LN39@CancelTabl:

; 3883 : 		m_pIMainServiceFrame->SendData(pTableUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_REQUEST_RESULT, &RequestResult, sizeof(CMD_GR_RequestResult));

  003f6	6a 05		 push	 5
  003f8	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _RequestResult$[ebp]
  003fe	50		 push	 eax
  003ff	6a 07		 push	 7
  00401	68 d2 00 00 00	 push	 210			; 000000d2H
  00406	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _pTableUserItem$9[ebp]
  0040c	51		 push	 ecx
  0040d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00410	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00416	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00419	8b 10		 mov	 edx, DWORD PTR [eax]
  0041b	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00421	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00424	ff d0		 call	 eax

; 3884 : 	}

  00426	eb 87		 jmp	 SHORT $LN11@CancelTabl
$LN12@CancelTabl:

; 3885 : 
; 3886 : 	//解散桌子
; 3887 : 	if(bCancel == true)

  00428	0f b6 45 ef	 movzx	 eax, BYTE PTR _bCancel$[ebp]
  0042c	83 f8 01	 cmp	 eax, 1
  0042f	0f 85 b2 03 00
	00		 jne	 $LN40@CancelTabl

; 3888 : 	{
; 3889 : 		m_bIsAllRequstCancel = true;

  00435	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00438	c6 80 99 11 00
	00 01		 mov	 BYTE PTR [eax+4505], 1

; 3890 : 		m_bIsDissumGame = true;

  0043f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00442	c6 80 34 11 00
	00 01		 mov	 BYTE PTR [eax+4404], 1

; 3891 : 
; 3892 : 
; 3893 : 		if(m_bGameStarted == true)

  00449	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0044c	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00450	83 f9 01	 cmp	 ecx, 1
  00453	75 23		 jne	 SHORT $LN41@CancelTabl

; 3894 : 		{
; 3895 : 			if(m_dwPersonalPlayCount == 1)

  00455	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00458	83 b8 20 10 00
	00 01		 cmp	 DWORD PTR [eax+4128], 1
  0045f	75 0a		 jne	 SHORT $LN42@CancelTabl

; 3896 : 			{
; 3897 : 				m_bIsCancelBeforeOneTurn = true;

  00461	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00464	c6 80 c8 46 00
	00 01		 mov	 BYTE PTR [eax+18120], 1
$LN42@CancelTabl:

; 3898 : 			}
; 3899 : 
; 3900 : 			//解散游戏
; 3901 : 			DismissGame();

  0046b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0046e	8b 10		 mov	 edx, DWORD PTR [eax]
  00470	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00473	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00476	ff d0		 call	 eax
$LN41@CancelTabl:

; 3902 : 		}
; 3903 : 		KillGameTimer(IDI_TIME_CANCEL);

  00478	6a 2e		 push	 46			; 0000002eH
  0047a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0047d	8b 10		 mov	 edx, DWORD PTR [eax]
  0047f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00488	ff d0		 call	 eax

; 3904 : 		KillGameTimer(IDI_PERSONAL_BEFORE_BEGAIN_TIME);

  0048a	6a 2b		 push	 43			; 0000002bH
  0048c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0048f	8b 10		 mov	 edx, DWORD PTR [eax]
  00491	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00494	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  0049a	ff d0		 call	 eax

; 3905 : 		OutputDebugStringA("ptdtcs ****  kill   IDI_PERSONAL_BEFORE_BEGAIN_TIME 4");

  0049c	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@JDEJHMNA@ptdtcs?5?$CK?$CK?$CK?$CK?5?5kill?5?5?5IDI_PERSONA@
  004a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4

; 3906 : 		GetLocalTime(&m_sysEndTime);

  004a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004aa	05 ec 46 00 00	 add	 eax, 18156		; 000046ecH
  004af	50		 push	 eax
  004b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 3907 : 		TCHAR szInfo[260] = {0};	

  004b6	68 04 01 00 00	 push	 260			; 00000104H
  004bb	6a 00		 push	 0
  004bd	8d 85 a8 fd ff
	ff		 lea	 eax, DWORD PTR _szInfo$8[ebp]
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 _memset
  004c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3908 : 		//用户成绩
; 3909 : 		CMD_GR_PersonalTableEnd PersonalTableEnd;
; 3910 : 		ZeroMemory(&PersonalTableEnd, sizeof(CMD_GR_PersonalTableEnd));

  004cc	68 cc 0a 00 00	 push	 2764			; 00000accH
  004d1	6a 00		 push	 0
  004d3	8d 85 dc f2 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$7[ebp]
  004d9	50		 push	 eax
  004da	e8 00 00 00 00	 call	 _memset
  004df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3911 : 
; 3912 : 		lstrcpyn(PersonalTableEnd.szDescribeString, TEXT("玩家申请解散，游戏提前结束！"), CountArray(PersonalTableEnd.szDescribeString));

  004e2	68 80 00 00 00	 push	 128			; 00000080H
  004e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@OELOPBKB@?M?f?$LM?R?I?j?G?k?$LN?b?I?$KC?$KD?$KM?S?N?O?$LH?L?a?G?$LA?$LN?a?J?x?$KD?$KB@
  004ec	8d 85 dc f2 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$7[ebp]
  004f2	50		 push	 eax
  004f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3913 : 		for(int i = 0; i < m_wChairCount; ++i)

  004f9	c7 85 d8 f2 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$6[ebp], 0
  00503	eb 0f		 jmp	 SHORT $LN16@CancelTabl
$LN14@CancelTabl:
  00505	8b 85 d8 f2 ff
	ff		 mov	 eax, DWORD PTR _i$6[ebp]
  0050b	83 c0 01	 add	 eax, 1
  0050e	89 85 d8 f2 ff
	ff		 mov	 DWORD PTR _i$6[ebp], eax
$LN16@CancelTabl:
  00514	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00517	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0051b	39 8d d8 f2 ff
	ff		 cmp	 DWORD PTR _i$6[ebp], ecx
  00521	7d 2e		 jge	 SHORT $LN15@CancelTabl

; 3914 : 		{
; 3915 : 			PersonalTableEnd.lScore[i] = m_PersonalUserScoreInfo[i].lScore;

  00523	6b 85 d8 f2 ff
	ff 3c		 imul	 eax, DWORD PTR _i$6[ebp], 60
  0052a	8b 8d d8 f2 ff
	ff		 mov	 ecx, DWORD PTR _i$6[ebp]
  00530	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00533	8b b4 02 c1 11
	00 00		 mov	 esi, DWORD PTR [edx+eax+4545]
  0053a	89 b4 cd 5c f3
	ff ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+ecx*8+128], esi
  00541	8b 84 02 c5 11
	00 00		 mov	 eax, DWORD PTR [edx+eax+4549]
  00548	89 84 cd 60 f3
	ff ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+ecx*8+132], eax

; 3916 : 		}

  0054f	eb b4		 jmp	 SHORT $LN14@CancelTabl
$LN15@CancelTabl:

; 3917 : 		PersonalTableEnd.sysStartTime = m_sysStartTime;

  00551	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00554	05 dc 46 00 00	 add	 eax, 18140		; 000046dcH
  00559	8b 08		 mov	 ecx, DWORD PTR [eax]
  0055b	89 8d 9c f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1728], ecx
  00561	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00564	89 95 a0 f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1732], edx
  0056a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0056d	89 8d a4 f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1736], ecx
  00573	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00576	89 95 a8 f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1740], edx

; 3918 : 		PersonalTableEnd.sysEndTime = m_sysEndTime;

  0057c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0057f	05 ec 46 00 00	 add	 eax, 18156		; 000046ecH
  00584	8b 08		 mov	 ecx, DWORD PTR [eax]
  00586	89 8d ac f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1744], ecx
  0058c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0058f	89 95 b0 f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1748], edx
  00595	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00598	89 8d b4 f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1752], ecx
  0059e	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  005a1	89 95 b8 f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1756], edx

; 3919 : 		//添加特殊信息
; 3920 : 		memcpy( PersonalTableEnd.cbSpecialInfo, m_cbSpecialInfo, m_nSpecialInfoLen);

  005a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005aa	8b 88 68 44 00
	00		 mov	 ecx, DWORD PTR [eax+17512]
  005b0	51		 push	 ecx
  005b1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005b4	81 c2 7d 40 00
	00		 add	 edx, 16509		; 0000407dH
  005ba	52		 push	 edx
  005bb	8d 85 c0 f9 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$7[ebp+1764]
  005c1	50		 push	 eax
  005c2	e8 00 00 00 00	 call	 _memcpy
  005c7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3921 : 		PersonalTableEnd.nSpecialInfoLen = m_nSpecialInfoLen;

  005ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005cd	8b 88 68 44 00
	00		 mov	 ecx, DWORD PTR [eax+17512]
  005d3	89 8d bc f9 ff
	ff		 mov	 DWORD PTR _PersonalTableEnd$7[ebp+1760], ecx

; 3922 : 
; 3923 : 
; 3924 : 		if(m_dwPersonalPlayCount == 0)		//游戏未开始

  005d9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005dc	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  005e3	75 50		 jne	 SHORT $LN43@CancelTabl

; 3925 : 		{
; 3926 : 			m_pIMainServiceFrame->CancelCreateTable(m_dwTableOwnerID, m_dwDrawCountLimit, m_dwDrawTimeLimit, CANCELTABLE_REASON_ENFOCE, m_wTableID, m_dwPersonalRoomID);

  005e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005e8	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  005ee	51		 push	 ecx
  005ef	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005f2	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  005f6	50		 push	 eax
  005f7	6a 02		 push	 2
  005f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005fc	8b 91 1c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4124]
  00602	52		 push	 edx
  00603	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00606	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  0060c	51		 push	 ecx
  0060d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00610	8b 82 40 07 00
	00		 mov	 eax, DWORD PTR [edx+1856]
  00616	50		 push	 eax
  00617	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0061a	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  00620	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00623	8b 12		 mov	 edx, DWORD PTR [edx]
  00625	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0062b	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0062e	ff d0		 call	 eax

; 3927 : 		}
; 3928 : 		else	//游戏开始

  00630	e9 51 01 00 00	 jmp	 $LN44@CancelTabl
$LN43@CancelTabl:

; 3929 : 		{
; 3930 : 			m_dwPersonalPlayCount = 0;

  00635	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00638	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 3931 : 			m_cbLoopCount = 0;

  00642	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00645	c6 80 9c 11 00
	00 00		 mov	 BYTE PTR [eax+4508], 0

; 3932 : 			WORD wDataSize = sizeof(CMD_GR_PersonalTableEnd) - sizeof(PersonalTableEnd.lScore) + sizeof(LONGLONG) * m_wChairCount;

  0064c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0064f	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00653	8d 14 cd 8c 04
	00 00		 lea	 edx, DWORD PTR [ecx*8+1164]
  0065a	66 89 95 d4 f2
	ff ff		 mov	 WORD PTR _wDataSize$5[ebp], dx

; 3933 : 			for(int i = 0; i < m_wChairCount; ++i)

  00661	c7 85 d0 f2 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$4[ebp], 0
  0066b	eb 0f		 jmp	 SHORT $LN19@CancelTabl
$LN17@CancelTabl:
  0066d	8b 85 d0 f2 ff
	ff		 mov	 eax, DWORD PTR _i$4[ebp]
  00673	83 c0 01	 add	 eax, 1
  00676	89 85 d0 f2 ff
	ff		 mov	 DWORD PTR _i$4[ebp], eax
$LN19@CancelTabl:
  0067c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0067f	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00683	39 8d d0 f2 ff
	ff		 cmp	 DWORD PTR _i$4[ebp], ecx
  00689	7d 5e		 jge	 SHORT $LN18@CancelTabl

; 3934 : 			{
; 3935 : 				IServerUserItem* pTableUserItem = GetTableUserItem(i);

  0068b	0f b7 85 d0 f2
	ff ff		 movzx	 eax, WORD PTR _i$4[ebp]
  00692	50		 push	 eax
  00693	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00696	8b 11		 mov	 edx, DWORD PTR [ecx]
  00698	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069b	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  006a1	ff d0		 call	 eax
  006a3	89 85 cc f2 ff
	ff		 mov	 DWORD PTR _pTableUserItem$3[ebp], eax

; 3936 : 				if(pTableUserItem == NULL) continue;

  006a9	83 bd cc f2 ff
	ff 00		 cmp	 DWORD PTR _pTableUserItem$3[ebp], 0
  006b0	75 02		 jne	 SHORT $LN45@CancelTabl
  006b2	eb b9		 jmp	 SHORT $LN17@CancelTabl
$LN45@CancelTabl:

; 3937 : 
; 3938 : 				m_pIMainServiceFrame->SendData(pTableUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_PERSONAL_TABLE_END, &PersonalTableEnd, sizeof(CMD_GR_PersonalTableEnd));

  006b4	68 cc 0a 00 00	 push	 2764			; 00000accH
  006b9	8d 85 dc f2 ff
	ff		 lea	 eax, DWORD PTR _PersonalTableEnd$7[ebp]
  006bf	50		 push	 eax
  006c0	6a 0a		 push	 10			; 0000000aH
  006c2	68 d2 00 00 00	 push	 210			; 000000d2H
  006c7	8b 8d cc f2 ff
	ff		 mov	 ecx, DWORD PTR _pTableUserItem$3[ebp]
  006cd	51		 push	 ecx
  006ce	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006d1	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  006d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006da	8b 10		 mov	 edx, DWORD PTR [eax]
  006dc	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  006e2	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  006e5	ff d0		 call	 eax

; 3939 : 
; 3940 : 				//	PerformStandUpAction(pTableUserItem);
; 3941 : 			}

  006e7	eb 84		 jmp	 SHORT $LN17@CancelTabl
$LN18@CancelTabl:

; 3942 : 
; 3943 : 			//防止客户端因为状态为free获取不到用户指针
; 3944 : 			for(int i = 0; i < m_wChairCount; ++i)

  006e9	c7 85 c8 f2 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  006f3	eb 0f		 jmp	 SHORT $LN22@CancelTabl
$LN20@CancelTabl:
  006f5	8b 85 c8 f2 ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  006fb	83 c0 01	 add	 eax, 1
  006fe	89 85 c8 f2 ff
	ff		 mov	 DWORD PTR _i$2[ebp], eax
$LN22@CancelTabl:
  00704	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00707	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0070b	39 8d c8 f2 ff
	ff		 cmp	 DWORD PTR _i$2[ebp], ecx
  00711	7d 44		 jge	 SHORT $LN21@CancelTabl

; 3945 : 			{
; 3946 : 				IServerUserItem* pTableUserItem = GetTableUserItem(i);

  00713	0f b7 85 c8 f2
	ff ff		 movzx	 eax, WORD PTR _i$2[ebp]
  0071a	50		 push	 eax
  0071b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0071e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00720	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00723	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00729	ff d0		 call	 eax
  0072b	89 85 c4 f2 ff
	ff		 mov	 DWORD PTR _pTableUserItem$1[ebp], eax

; 3947 : 				if(pTableUserItem == NULL) continue;

  00731	83 bd c4 f2 ff
	ff 00		 cmp	 DWORD PTR _pTableUserItem$1[ebp], 0
  00738	75 02		 jne	 SHORT $LN46@CancelTabl
  0073a	eb b9		 jmp	 SHORT $LN20@CancelTabl
$LN46@CancelTabl:

; 3948 : 
; 3949 : 				PerformStandUpAction(pTableUserItem);

  0073c	6a 00		 push	 0
  0073e	8b 85 c4 f2 ff
	ff		 mov	 eax, DWORD PTR _pTableUserItem$1[ebp]
  00744	50		 push	 eax
  00745	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00748	8b 11		 mov	 edx, DWORD PTR [ecx]
  0074a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0074d	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00753	ff d0		 call	 eax

; 3950 : 			}

  00755	eb 9e		 jmp	 SHORT $LN20@CancelTabl
$LN21@CancelTabl:

; 3951 : 			m_pIMainServiceFrame->DismissPersonalTable(m_pGameServiceOption->wServerID, m_wTableID);

  00757	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0075a	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0075e	51		 push	 ecx
  0075f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00762	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  00768	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  0076c	51		 push	 ecx
  0076d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00770	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00776	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00779	8b 10		 mov	 edx, DWORD PTR [eax]
  0077b	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00781	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00784	ff d0		 call	 eax
$LN44@CancelTabl:

; 3952 : 		}
; 3953 : 
; 3954 : 		//桌子设置
; 3955 : 		m_pTableOwnerUser = NULL;

  00786	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00789	c7 80 14 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4116], 0

; 3956 : 		//m_bPersonalLock = false;
; 3957 : 		m_dwTimeBegin = 0;

  00793	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00796	c7 80 30 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4144], 0

; 3958 : 		m_dwReplyCount = 0;

  007a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007a3	c7 80 44 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4164], 0

; 3959 : 		m_cbIsRequestOver = 0;

  007ad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007b0	c6 80 11 11 00
	00 00		 mov	 BYTE PTR [eax+4369], 0

; 3960 : 		m_cbRequestUser = 0;

  007b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007ba	c6 80 10 11 00
	00 00		 mov	 BYTE PTR [eax+4368], 0

; 3961 : 		ZeroMemory(m_cbRequestReply,sizeof(m_cbRequestReply));

  007c1	68 c8 00 00 00	 push	 200			; 000000c8H
  007c6	6a 00		 push	 0
  007c8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007cb	05 48 10 00 00	 add	 eax, 4168		; 00001048H
  007d0	50		 push	 eax
  007d1	e8 00 00 00 00	 call	 _memset
  007d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3962 : 		m_MapPersonalTableScoreInfo.RemoveAll();

  007d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007dc	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  007e2	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll
$LN40@CancelTabl:

; 3963 : 
; 3964 : 	}
; 3965 : 
; 3966 : 	return true;

  007e7	b0 01		 mov	 al, 1
$LN1@CancelTabl:

; 3967 : }

  007e9	5f		 pop	 edi
  007ea	5e		 pop	 esi
  007eb	5b		 pop	 ebx
  007ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007ef	33 cd		 xor	 ecx, ebp
  007f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007f6	8b e5		 mov	 esp, ebp
  007f8	5d		 pop	 ebp
  007f9	c2 08 00	 ret	 8
?CancelTableRequestReply@CTableFrame@@UAE_NKE@Z ENDP	; CTableFrame::CancelTableRequestReply
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?CancelTableRequest@CTableFrame@@UAE_NKG@Z
_TEXT	SEGMENT
_pUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_dwChairID$ = 12					; size = 2
?CancelTableRequest@CTableFrame@@UAE_NKG@Z PROC		; CTableFrame::CancelTableRequest, COMDAT
; _this$ = ecx

; 3745 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3746 : 	if (m_cbIsRequestOver)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 88 11 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4369]
  00016	85 c9		 test	 ecx, ecx
  00018	74 07		 je	 SHORT $LN2@CancelTabl

; 3747 : 	{
; 3748 : 		return false;

  0001a	32 c0		 xor	 al, al
  0001c	e9 54 01 00 00	 jmp	 $LN1@CancelTabl
$LN2@CancelTabl:

; 3749 : 	}
; 3750 : 
; 3751 : 	//校验用户
; 3752 : 	IServerUserItem* pUserItem = GetTableUserItem(dwChairID);

  00021	0f b7 45 0c	 movzx	 eax, WORD PTR _dwChairID$[ebp]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00034	ff d0		 call	 eax
  00036	89 45 f8	 mov	 DWORD PTR _pUserItem$[ebp], eax

; 3753 : 	if(pUserItem == NULL) return false;

  00039	83 7d f8 00	 cmp	 DWORD PTR _pUserItem$[ebp], 0
  0003d	75 07		 jne	 SHORT $LN3@CancelTabl
  0003f	32 c0		 xor	 al, al
  00041	e9 2f 01 00 00	 jmp	 $LN1@CancelTabl
$LN3@CancelTabl:

; 3754 : 	if(pUserItem->GetUserID() != dwUserID) return false;

  00046	8b 45 f8	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  00049	8b 10		 mov	 edx, DWORD PTR [eax]
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _pUserItem$[ebp]
  0004e	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00051	ff d0		 call	 eax
  00053	3b 45 08	 cmp	 eax, DWORD PTR _dwUserID$[ebp]
  00056	74 07		 je	 SHORT $LN4@CancelTabl
  00058	32 c0		 xor	 al, al
  0005a	e9 16 01 00 00	 jmp	 $LN1@CancelTabl
$LN4@CancelTabl:

; 3755 : 
; 3756 : 	if(m_wUserCount == 1 && pUserItem->GetUserID() == m_dwTableOwnerID)//m_PersonalTableParameter.cbIsJoinGame)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	0f b7 48 0e	 movzx	 ecx, WORD PTR [eax+14]
  00066	83 f9 01	 cmp	 ecx, 1
  00069	0f 85 90 00 00
	00		 jne	 $LN5@CancelTabl
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  00072	8b 10		 mov	 edx, DWORD PTR [eax]
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _pUserItem$[ebp]
  00077	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0007a	ff d0		 call	 eax
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	3b 81 40 07 00
	00		 cmp	 eax, DWORD PTR [ecx+1856]
  00085	75 78		 jne	 SHORT $LN5@CancelTabl

; 3757 : 	{
; 3758 : 		//退还费用
; 3759 : 		KillGameTimer(IDI_PERSONAL_BEFORE_BEGAIN_TIME);

  00087	6a 2b		 push	 43			; 0000002bH
  00089	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 10		 mov	 edx, DWORD PTR [eax]
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00097	ff d0		 call	 eax

; 3760 : 
; 3761 : 		m_pIMainServiceFrame->CancelCreateTable(m_dwTableOwnerID, m_dwDrawCountLimit, m_dwDrawTimeLimit, CANCELTABLE_REASON_ENFOCE, m_wTableID, m_dwPersonalRoomID);

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  000a2	51		 push	 ecx
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  000aa	50		 push	 eax
  000ab	6a 02		 push	 2
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b 91 1c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4124]
  000b6	52		 push	 edx
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  000c0	51		 push	 ecx
  000c1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	8b 82 40 07 00
	00		 mov	 eax, DWORD PTR [edx+1856]
  000ca	50		 push	 eax
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 12		 mov	 edx, DWORD PTR [edx]
  000d9	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000df	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000e2	ff d0		 call	 eax

; 3762 : 		m_dwPersonalPlayCount = 0;

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 3763 : 		m_cbLoopCount = 0;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	c6 80 9c 11 00
	00 00		 mov	 BYTE PTR [eax+4508], 0

; 3764 : 		return true;

  000fb	b0 01		 mov	 al, 1
  000fd	eb 76		 jmp	 SHORT $LN1@CancelTabl
$LN5@CancelTabl:

; 3765 : 	}
; 3766 : 	m_dwReplyCount = 1;

  000ff	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00102	c7 80 44 10 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+4164], 1

; 3767 : 	m_cbIsRequestOver = 1;

  0010c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	c6 80 11 11 00
	00 01		 mov	 BYTE PTR [eax+4369], 1

; 3768 : 	m_cbRequestUser = (BYTE)dwChairID;

  00116	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00119	8a 4d 0c	 mov	 cl, BYTE PTR _dwChairID$[ebp]
  0011c	88 88 10 11 00
	00		 mov	 BYTE PTR [eax+4368], cl

; 3769 : 	ZeroMemory(m_cbRequestReply,sizeof(m_cbRequestReply));

  00122	68 c8 00 00 00	 push	 200			; 000000c8H
  00127	6a 00		 push	 0
  00129	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	05 48 10 00 00	 add	 eax, 4168		; 00001048H
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 _memset
  00137	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3770 : 	m_cbRequestReply[dwChairID] = 1;

  0013a	0f b7 45 0c	 movzx	 eax, WORD PTR _dwChairID$[ebp]
  0013e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	c6 84 01 48 10
	00 00 01	 mov	 BYTE PTR [ecx+eax+4168], 1

; 3771 : 	m_dwDealCancel = GetTickCount();

  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	89 81 cc 46 00
	00		 mov	 DWORD PTR [ecx+18124], eax

; 3772 : 
; 3773 : 	SetGameTimer(IDI_TIME_CANCEL, TIME_CANCEL,1,NULL);

  00158	6a 00		 push	 0
  0015a	6a 01		 push	 1
  0015c	68 f0 49 02 00	 push	 150000			; 000249f0H
  00161	6a 2e		 push	 46			; 0000002eH
  00163	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00166	8b 10		 mov	 edx, DWORD PTR [eax]
  00168	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00171	ff d0		 call	 eax

; 3774 : 
; 3775 : 	return true;

  00173	b0 01		 mov	 al, 1
$LN1@CancelTabl:

; 3776 : }

  00175	5f		 pop	 edi
  00176	5e		 pop	 esi
  00177	5b		 pop	 ebx
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 08 00	 ret	 8
?CancelTableRequest@CTableFrame@@UAE_NKG@Z ENDP		; CTableFrame::CancelTableRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetTimerNotBeginAfterCreate@CTableFrame@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetTimerNotBeginAfterCreate@CTableFrame@@UAEXXZ PROC	; CTableFrame::SetTimerNotBeginAfterCreate, COMDAT
; _this$ = ecx

; 4037 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4038 : 	if (m_PersonalTableParameter.cbIsJoinGame)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 88 87 44
	00 00		 movzx	 ecx, BYTE PTR [eax+17543]
  00016	85 c9		 test	 ecx, ecx
  00018	74 02		 je	 SHORT $LN2@SetTimerNo

; 4039 : 	{
; 4040 : 		return;

  0001a	eb 27		 jmp	 SHORT $LN1@SetTimerNo
$LN2@SetTimerNo:

; 4041 : 	}
; 4042 : 
; 4043 : 	SetGameTimer(IDI_PERSONAL_AFTER_CREATE_ROOM_TIME, m_PersonalTableParameter.dwTimeAfterCreateRoom * 60 * 1000,1,NULL);

  0001c	6a 00		 push	 0
  0001e	6a 01		 push	 1
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	6b 88 94 44 00
	00 3c		 imul	 ecx, DWORD PTR [eax+17556], 60
  0002a	69 d1 e8 03 00
	00		 imul	 edx, ecx, 1000
  00030	52		 push	 edx
  00031	6a 2d		 push	 45			; 0000002dH
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00041	ff d0		 call	 eax
$LN1@SetTimerNo:

; 4044 : }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
?SetTimerNotBeginAfterCreate@CTableFrame@@UAEXXZ ENDP	; CTableFrame::SetTimerNotBeginAfterCreate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetPersonalTableParameter@CTableFrame@@UAEXUtagPersonalTableParameter@@UtagPersonalRoomOption@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PersonalTableParameter$ = 8				; size = 48
_PersonalRoomOption$ = 56				; size = 113
?SetPersonalTableParameter@CTableFrame@@UAEXUtagPersonalTableParameter@@UtagPersonalRoomOption@@@Z PROC ; CTableFrame::SetPersonalTableParameter, COMDAT
; _this$ = ecx

; 3989 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3990 : 	m_PersonalTableParameter = PersonalTableParameter;

  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 6c 44 00
	00		 add	 edi, 17516		; 0000446cH
  00015	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0001a	8d 75 08	 lea	 esi, DWORD PTR _PersonalTableParameter$[ebp]
  0001d	f3 a5		 rep movsd

; 3991 : 	m_dwDrawCountLimit = PersonalTableParameter.dwPlayTurnCount;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 4d 1b	 mov	 ecx, DWORD PTR _PersonalTableParameter$[ebp+19]
  00025	89 88 18 10 00
	00		 mov	 DWORD PTR [eax+4120], ecx

; 3992 : 	m_dwDrawTimeLimit = PersonalTableParameter.dwPlayTimeLimit;

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 1f	 mov	 ecx, DWORD PTR _PersonalTableParameter$[ebp+23]
  00031	89 88 1c 10 00
	00		 mov	 DWORD PTR [eax+4124], ecx

; 3993 : 	m_PersonalRoomOption = PersonalRoomOption;

  00037	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0003a	81 c7 9c 44 00
	00		 add	 edi, 17564		; 0000449cH
  00040	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00045	8d 75 38	 lea	 esi, DWORD PTR _PersonalRoomOption$[ebp]
  00048	f3 a5		 rep movsd
  0004a	a4		 movsb

; 3994 : 
; 3995 : 	m_cbGameMode = PersonalTableParameter.cbGameMode;

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8a 4d 08	 mov	 cl, BYTE PTR _PersonalTableParameter$[ebp]
  00051	88 88 d0 46 00
	00		 mov	 BYTE PTR [eax+18128], cl

; 3996 : 	m_dwPersonalPlayCount = 0; 

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 3997 : 	m_cbLoopCount = 0;

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	c6 80 9c 11 00
	00 00		 mov	 BYTE PTR [eax+4508], 0

; 3998 : 	m_bIsEnfoceDissum = false;

  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	c6 80 9b 11 00
	00 00		 mov	 BYTE PTR [eax+4507], 0

; 3999 : 	m_bGameStarted = false;

  00078	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 4000 : 	m_cbGameStatus=GAME_STATUS_FREE;

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	c6 80 24 07 00
	00 00		 mov	 BYTE PTR [eax+1828], 0

; 4001 : 	memset(&m_PersonalUserScoreInfo, 0, sizeof(m_PersonalUserScoreInfo));

  00089	68 e0 2e 00 00	 push	 12000			; 00002ee0H
  0008e	6a 00		 push	 0
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	05 9d 11 00 00	 add	 eax, 4509		; 0000119dH
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 _memset
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4002 : 	m_bIsCancelBeforeOneTurn = false;

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	c6 80 c8 46 00
	00 00		 mov	 BYTE PTR [eax+18120], 0

; 4003 : 	ZeroMemory(m_dwPlayingUserID,sizeof(m_dwPlayingUserID));

  000ab	68 20 03 00 00	 push	 800			; 00000320H
  000b0	6a 00		 push	 0
  000b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	05 fc 46 00 00	 add	 eax, 18172		; 000046fcH
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 _memset
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4004 : 
; 4005 : 	memset(&m_sysStartTime, 0, sizeof(m_sysStartTime));

  000c3	6a 10		 push	 16			; 00000010H
  000c5	6a 00		 push	 0
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	05 dc 46 00 00	 add	 eax, 18140		; 000046dcH
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 _memset
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4006 : 	memset(&m_sysEndTime, 0, sizeof(m_sysEndTime));

  000d8	6a 10		 push	 16			; 00000010H
  000da	6a 00		 push	 0
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	05 ec 46 00 00	 add	 eax, 18156		; 000046ecH
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 _memset
  000ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4007 : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 a4 00	 ret	 164			; 000000a4H
?SetPersonalTableParameter@CTableFrame@@UAEXUtagPersonalTableParameter@@UtagPersonalRoomOption@@@Z ENDP ; CTableFrame::SetPersonalTableParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetPersonalTable@CTableFrame@@UAEXKK_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwDrawCountLimit$ = 8					; size = 4
_dwDrawTimeLimit$ = 12					; size = 4
_lIniScore$ = 16					; size = 8
?SetPersonalTable@CTableFrame@@UAEXKK_J@Z PROC		; CTableFrame::SetPersonalTable, COMDAT
; _this$ = ecx

; 3979 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3980 : 	m_dwDrawCountLimit = dwDrawCountLimit;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _dwDrawCountLimit$[ebp]
  00012	89 88 18 10 00
	00		 mov	 DWORD PTR [eax+4120], ecx

; 3981 : 	m_dwDrawTimeLimit = dwDrawTimeLimit;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _dwDrawTimeLimit$[ebp]
  0001e	89 88 1c 10 00
	00		 mov	 DWORD PTR [eax+4124], ecx

; 3982 : 	m_lIniScore = lIniScore;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 10	 mov	 ecx, DWORD PTR _lIniScore$[ebp]
  0002a	89 88 28 10 00
	00		 mov	 DWORD PTR [eax+4136], ecx
  00030	8b 55 14	 mov	 edx, DWORD PTR _lIniScore$[ebp+4]
  00033	89 90 2c 10 00
	00		 mov	 DWORD PTR [eax+4140], edx

; 3983 : 
; 3984 : 	return;
; 3985 : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?SetPersonalTable@CTableFrame@@UAEXKK_J@Z ENDP		; CTableFrame::SetPersonalTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetRecordTableOwner@CTableFrame@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRecordTableOwner@CTableFrame@@UAEKXZ PROC		; CTableFrame::GetRecordTableOwner, COMDAT
; _this$ = ecx

; 4162 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4163 : 		return  m_dwRecordTableID; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 10 45 00
	00		 mov	 eax, DWORD PTR [eax+17680]

; 4164 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetRecordTableOwner@CTableFrame@@UAEKXZ ENDP		; CTableFrame::GetRecordTableOwner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetTableOwner@CTableFrame@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTableOwner@CTableFrame@@UAEKXZ PROC			; CTableFrame::GetTableOwner, COMDAT
; _this$ = ecx

; 413  : 	virtual DWORD GetTableOwner() { return m_dwTableOwnerID; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 40 07 00
	00		 mov	 eax, DWORD PTR [eax+1856]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetTableOwner@CTableFrame@@UAEKXZ ENDP			; CTableFrame::GetTableOwner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetTableOwner@CTableFrame@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SetTableOwner@CTableFrame@@UAEXK@Z PROC		; CTableFrame::SetTableOwner, COMDAT
; _this$ = ecx

; 411  : 	virtual VOID SetTableOwner(DWORD dwUserID) { m_dwTableOwnerID = dwUserID; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  00012	89 88 40 07 00
	00		 mov	 DWORD PTR [eax+1856], ecx
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetTableOwner@CTableFrame@@UAEXK@Z ENDP		; CTableFrame::SetTableOwner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetPersonalTableParameter@CTableFrame@@UAE?AUtagPersonalTableParameter@@XZ
_TEXT	SEGMENT
_PersonalTableParameter$ = -56				; size = 48
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPersonalTableParameter@CTableFrame@@UAE?AUtagPersonalTableParameter@@XZ PROC ; CTableFrame::GetPersonalTableParameter, COMDAT
; _this$ = ecx

; 4024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4025 : 	tagPersonalTableParameter PersonalTableParameter;
; 4026 : 	ZeroMemory(&PersonalTableParameter, sizeof(tagPersonalTableParameter));

  00016	6a 30		 push	 48			; 00000030H
  00018	6a 00		 push	 0
  0001a	8d 45 c8	 lea	 eax, DWORD PTR _PersonalTableParameter$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4027 : 
; 4028 : 	PersonalTableParameter.dwPlayTimeLimit = m_dwDrawTimeLimit;

  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 88 1c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4124]
  0002f	89 4d df	 mov	 DWORD PTR _PersonalTableParameter$[ebp+23], ecx

; 4029 : 	PersonalTableParameter.dwPlayTurnCount = m_dwDrawCountLimit;

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  0003b	89 4d db	 mov	 DWORD PTR _PersonalTableParameter$[ebp+19], ecx

; 4030 : 	PersonalTableParameter.lIniScore = m_lIniScore;

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 88 28 10 00
	00		 mov	 ecx, DWORD PTR [eax+4136]
  00047	89 4d c9	 mov	 DWORD PTR _PersonalTableParameter$[ebp+1], ecx
  0004a	8b 90 2c 10 00
	00		 mov	 edx, DWORD PTR [eax+4140]
  00050	89 55 cd	 mov	 DWORD PTR _PersonalTableParameter$[ebp+5], edx

; 4031 : 
; 4032 : 	return PersonalTableParameter;

  00053	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00058	8d 75 c8	 lea	 esi, DWORD PTR _PersonalTableParameter$[ebp]
  0005b	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0005e	f3 a5		 rep movsd
  00060	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4033 : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00069	33 cd		 xor	 ecx, ebp
  0006b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?GetPersonalTableParameter@CTableFrame@@UAE?AUtagPersonalTableParameter@@XZ ENDP ; CTableFrame::GetPersonalTableParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetPersonalScore@CTableFrame@@UAE_NKAA_J@Z
_TEXT	SEGMENT
_lScoretmp$ = -12					; size = 8
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_lScore$ = 12						; size = 4
?GetPersonalScore@CTableFrame@@UAE_NKAA_J@Z PROC	; CTableFrame::GetPersonalScore, COMDAT
; _this$ = ecx

; 4011 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4012 : 	LONGLONG lScoretmp = 0;

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	66 0f 13 45 f4	 movlpd	 QWORD PTR _lScoretmp$[ebp], xmm0

; 4013 : 	lScore = 0;

  00014	8b 45 0c	 mov	 eax, DWORD PTR _lScore$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0001d	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 4014 : 	if(m_MapPersonalTableScoreInfo.Lookup(dwUserID, lScoretmp) == TRUE)

  00024	8d 45 f4	 lea	 eax, DWORD PTR _lScoretmp$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  00035	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KK_JAA_J@@QBEHKAA_J@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::Lookup
  0003a	83 f8 01	 cmp	 eax, 1
  0003d	75 12		 jne	 SHORT $LN2@GetPersona

; 4015 : 	{
; 4016 : 		lScore = lScoretmp;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _lScore$[ebp]
  00042	8b 4d f4	 mov	 ecx, DWORD PTR _lScoretmp$[ebp]
  00045	89 08		 mov	 DWORD PTR [eax], ecx
  00047	8b 55 f8	 mov	 edx, DWORD PTR _lScoretmp$[ebp+4]
  0004a	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 4017 : 		return true;

  0004d	b0 01		 mov	 al, 1
  0004f	eb 02		 jmp	 SHORT $LN1@GetPersona
$LN2@GetPersona:

; 4018 : 	}
; 4019 : 	return false;

  00051	32 c0		 xor	 al, al
$LN1@GetPersona:

; 4020 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 08 00	 ret	 8
?GetPersonalScore@CTableFrame@@UAE_NKAA_J@Z ENDP	; CTableFrame::GetPersonalScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetPersonalTableLocked@CTableFrame@@UAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bLocked$ = 8						; size = 1
?SetPersonalTableLocked@CTableFrame@@UAEX_N@Z PROC	; CTableFrame::SetPersonalTableLocked, COMDAT
; _this$ = ecx

; 402  : 	virtual VOID SetPersonalTableLocked(bool bLocked) { m_bPersonalLock = bLocked; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _bLocked$[ebp]
  00012	88 88 9a 11 00
	00		 mov	 BYTE PTR [eax+4506], cl
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetPersonalTableLocked@CTableFrame@@UAEX_N@Z ENDP	; CTableFrame::SetPersonalTableLocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?IsPersonalTableLocked@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPersonalTableLocked@CTableFrame@@UAE_NXZ PROC	; CTableFrame::IsPersonalTableLocked, COMDAT
; _this$ = ecx

; 400  : 	virtual bool IsPersonalTableLocked() { return m_bPersonalLock; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 9a 11 00
	00		 mov	 al, BYTE PTR [eax+4506]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?IsPersonalTableLocked@CTableFrame@@UAE_NXZ ENDP	; CTableFrame::IsPersonalTableLocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?RecordGameScore@CTableFrame@@QAEX_NK@Z
_TEXT	SEGMENT
tv83 = -10224						; size = 4
_wDataSize$1 = -9708					; size = 2
_wHeadSize$2 = -9704					; size = 2
_wIndex$3 = -9700					; size = 2
_pGameScoreRecord$4 = -9696				; size = 4
_i$5 = -9692						; size = 4
_startTime$6 = -9688					; size = 8
_GameScoreRecord$7 = -9680				; size = 9672
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bDrawStarted$ = 8					; size = 1
_dwStartGameTime$ = 12					; size = 4
?RecordGameScore@CTableFrame@@QAEX_NK@Z PROC		; CTableFrame::RecordGameScore, COMDAT
; _this$ = ecx

; 3663 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 f0 27 00 00	 mov	 eax, 10224		; 000027f0H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3664 : 	if (bDrawStarted==true)

  0001d	0f b6 45 08	 movzx	 eax, BYTE PTR _bDrawStarted$[ebp]
  00021	83 f8 01	 cmp	 eax, 1
  00024	0f 85 00 03 00
	00		 jne	 $LN1@RecordGame

; 3665 : 	{
; 3666 : 		//写入记录
; 3667 : 		if (CServerRule::IsRecordGameScore(m_pGameServiceOption->dwServerRule)==true)

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00033	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?IsRecordGameScore@CServerRule@@SA_NK@Z ; CServerRule::IsRecordGameScore
  0003c	83 c4 04	 add	 esp, 4
  0003f	0f b6 c0	 movzx	 eax, al
  00042	83 f8 01	 cmp	 eax, 1
  00045	0f 85 ac 02 00
	00		 jne	 $LN6@RecordGame

; 3668 : 		{
; 3669 : 			//变量定义
; 3670 : 			DBR_GR_GameScoreRecord GameScoreRecord;
; 3671 : 			ZeroMemory(&GameScoreRecord,sizeof(GameScoreRecord));

  0004b	68 c8 25 00 00	 push	 9672			; 000025c8H
  00050	6a 00		 push	 0
  00052	8d 85 30 da ff
	ff		 lea	 eax, DWORD PTR _GameScoreRecord$7[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3672 : 
; 3673 : 			//设置变量
; 3674 : 			GameScoreRecord.wTableID=m_wTableID;

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00068	66 89 8d 30 da
	ff ff		 mov	 WORD PTR _GameScoreRecord$7[ebp], cx

; 3675 : 			GameScoreRecord.dwPlayTimeCount=(bDrawStarted==true)?(DWORD)time(NULL)-m_dwDrawStartTime:0;

  0006f	0f b6 45 08	 movzx	 eax, BYTE PTR _bDrawStarted$[ebp]
  00073	83 f8 01	 cmp	 eax, 1
  00076	75 1b		 jne	 SHORT $LN16@RecordGame
  00078	6a 00		 push	 0
  0007a	e8 00 00 00 00	 call	 _time
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	2b 81 28 07 00
	00		 sub	 eax, DWORD PTR [ecx+1832]
  0008b	89 85 10 d8 ff
	ff		 mov	 DWORD PTR tv83[ebp], eax
  00091	eb 0a		 jmp	 SHORT $LN17@RecordGame
$LN16@RecordGame:
  00093	c7 85 10 d8 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN17@RecordGame:
  0009d	8b 95 10 d8 ff
	ff		 mov	 edx, DWORD PTR tv83[ebp]
  000a3	89 95 4c da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+28], edx

; 3676 : 
; 3677 : 			//游戏时间
; 3678 : 			if(dwStartGameTime!=INVALID_DWORD)

  000a9	83 7d 0c ff	 cmp	 DWORD PTR _dwStartGameTime$[ebp], -1
  000ad	74 26		 je	 SHORT $LN7@RecordGame

; 3679 : 			{
; 3680 : 				CTime startTime(dwStartGameTime);

  000af	8b 45 0c	 mov	 eax, DWORD PTR _dwStartGameTime$[ebp]
  000b2	33 c9		 xor	 ecx, ecx
  000b4	51		 push	 ecx
  000b5	50		 push	 eax
  000b6	8d 8d 28 da ff
	ff		 lea	 ecx, DWORD PTR _startTime$6[ebp]
  000bc	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@_J@Z	; ATL::CTime::CTime

; 3681 : 				startTime.GetAsSystemTime(GameScoreRecord.SystemTimeStart);

  000c1	8d 85 50 da ff
	ff		 lea	 eax, DWORD PTR _GameScoreRecord$7[ebp+32]
  000c7	50		 push	 eax
  000c8	8d 8d 28 da ff
	ff		 lea	 ecx, DWORD PTR _startTime$6[ebp]
  000ce	e8 00 00 00 00	 call	 ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime

; 3682 : 			}
; 3683 : 			else

  000d3	eb 2b		 jmp	 SHORT $LN8@RecordGame
$LN7@RecordGame:

; 3684 : 			{
; 3685 : 				GameScoreRecord.SystemTimeStart=m_SystemTimeStart;

  000d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	05 2c 07 00 00	 add	 eax, 1836		; 0000072cH
  000dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000df	89 8d 50 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+32], ecx
  000e5	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000e8	89 95 54 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+36], edx
  000ee	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f1	89 8d 58 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+40], ecx
  000f7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000fa	89 95 5c da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+44], edx
$LN8@RecordGame:

; 3686 : 			}
; 3687 : 			GetLocalTime(&GameScoreRecord.SystemTimeConclude);

  00100	8d 85 60 da ff
	ff		 lea	 eax, DWORD PTR _GameScoreRecord$7[ebp+48]
  00106	50		 push	 eax
  00107	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 3688 : 
; 3689 : 			//用户积分
; 3690 : 			for (INT_PTR i=0;i<m_GameScoreRecordActive.GetCount();i++)

  0010d	c7 85 24 da ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$5[ebp], 0
  00117	eb 0f		 jmp	 SHORT $LN4@RecordGame
$LN2@RecordGame:
  00119	8b 85 24 da ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  0011f	83 c0 01	 add	 eax, 1
  00122	89 85 24 da ff
	ff		 mov	 DWORD PTR _i$5[ebp], eax
$LN4@RecordGame:
  00128	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  00131	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount
  00136	39 85 24 da ff
	ff		 cmp	 DWORD PTR _i$5[ebp], eax
  0013c	0f 8d 55 01 00
	00		 jge	 $LN3@RecordGame

; 3691 : 			{
; 3692 : 				//获取对象
; 3693 : 				ASSERT(m_GameScoreRecordActive[i]!=NULL);

  00142	8b 85 24 da ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  00148	50		 push	 eax
  00149	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  00152	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::operator[]
  00157	83 38 00	 cmp	 DWORD PTR [eax], 0
  0015a	75 19		 jne	 SHORT $LN18@RecordGame
  0015c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??RecordGameScore@CTableFrame@@QAEX_NK@Z@4JA
  00162	83 c1 1e	 add	 ecx, 30			; 0000001eH
  00165	51		 push	 ecx
  00166	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0016b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00170	85 c0		 test	 eax, eax
  00172	74 01		 je	 SHORT $LN18@RecordGame
  00174	cc		 int	 3
$LN18@RecordGame:

; 3694 : 				tagGameScoreRecord * pGameScoreRecord=m_GameScoreRecordActive[i];

  00175	8b 85 24 da ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  0017b	50		 push	 eax
  0017c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  00185	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::operator[]
  0018a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018c	89 8d 20 da ff
	ff		 mov	 DWORD PTR _pGameScoreRecord$4[ebp], ecx

; 3695 : 
; 3696 : 				//用户数目
; 3697 : 				if (pGameScoreRecord->cbAndroid==FALSE)

  00192	8b 85 20 da ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$4[ebp]
  00198	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  0019c	85 c9		 test	 ecx, ecx
  0019e	75 14		 jne	 SHORT $LN9@RecordGame

; 3698 : 				{
; 3699 : 					GameScoreRecord.wUserCount++;

  001a0	66 8b 85 32 da
	ff ff		 mov	 ax, WORD PTR _GameScoreRecord$7[ebp+2]
  001a7	66 83 c0 01	 add	 ax, 1
  001ab	66 89 85 32 da
	ff ff		 mov	 WORD PTR _GameScoreRecord$7[ebp+2], ax

; 3700 : 				}
; 3701 : 				else

  001b2	eb 12		 jmp	 SHORT $LN10@RecordGame
$LN9@RecordGame:

; 3702 : 				{
; 3703 : 					GameScoreRecord.wAndroidCount++;

  001b4	66 8b 85 34 da
	ff ff		 mov	 ax, WORD PTR _GameScoreRecord$7[ebp+4]
  001bb	66 83 c0 01	 add	 ax, 1
  001bf	66 89 85 34 da
	ff ff		 mov	 WORD PTR _GameScoreRecord$7[ebp+4], ax
$LN10@RecordGame:

; 3704 : 				}
; 3705 : 
; 3706 : 				//奖牌统计
; 3707 : 				GameScoreRecord.dwUserMemal+=pGameScoreRecord->dwUserMemal;

  001c6	8b 85 20 da ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$4[ebp]
  001cc	8b 8d 48 da ff
	ff		 mov	 ecx, DWORD PTR _GameScoreRecord$7[ebp+24]
  001d2	03 48 28	 add	 ecx, DWORD PTR [eax+40]
  001d5	89 8d 48 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+24], ecx

; 3708 : 
; 3709 : 				//统计信息
; 3710 : 				if (pGameScoreRecord->cbAndroid==FALSE)

  001db	8b 85 20 da ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$4[ebp]
  001e1	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  001e5	85 c9		 test	 ecx, ecx
  001e7	75 58		 jne	 SHORT $LN11@RecordGame

; 3711 : 				{
; 3712 : 					GameScoreRecord.lWasteCount-=(pGameScoreRecord->lScore+pGameScoreRecord->lRevenue);

  001e9	8b 85 20 da ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$4[ebp]
  001ef	8b 8d 20 da ff
	ff		 mov	 ecx, DWORD PTR _pGameScoreRecord$4[ebp]
  001f5	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001f8	03 51 18	 add	 edx, DWORD PTR [ecx+24]
  001fb	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  001fe	13 41 1c	 adc	 eax, DWORD PTR [ecx+28]
  00201	8b 8d 38 da ff
	ff		 mov	 ecx, DWORD PTR _GameScoreRecord$7[ebp+8]
  00207	2b ca		 sub	 ecx, edx
  00209	8b 95 3c da ff
	ff		 mov	 edx, DWORD PTR _GameScoreRecord$7[ebp+12]
  0020f	1b d0		 sbb	 edx, eax
  00211	89 8d 38 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+8], ecx
  00217	89 95 3c da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+12], edx

; 3713 : 					GameScoreRecord.lRevenueCount+=pGameScoreRecord->lRevenue;

  0021d	8b 85 20 da ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$4[ebp]
  00223	8b 8d 40 da ff
	ff		 mov	 ecx, DWORD PTR _GameScoreRecord$7[ebp+16]
  00229	03 48 18	 add	 ecx, DWORD PTR [eax+24]
  0022c	8b 95 44 da ff
	ff		 mov	 edx, DWORD PTR _GameScoreRecord$7[ebp+20]
  00232	13 50 1c	 adc	 edx, DWORD PTR [eax+28]
  00235	89 8d 40 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+16], ecx
  0023b	89 95 44 da ff
	ff		 mov	 DWORD PTR _GameScoreRecord$7[ebp+20], edx
$LN11@RecordGame:

; 3714 : 				}
; 3715 : 
; 3716 : 				//成绩信息
; 3717 : 				if (GameScoreRecord.wRecordCount<CountArray(GameScoreRecord.GameScoreRecord))

  00241	0f b7 85 70 da
	ff ff		 movzx	 eax, WORD PTR _GameScoreRecord$7[ebp+64]
  00248	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  0024d	73 43		 jae	 SHORT $LN12@RecordGame

; 3718 : 				{
; 3719 : 					WORD wIndex=GameScoreRecord.wRecordCount++;

  0024f	66 8b 85 70 da
	ff ff		 mov	 ax, WORD PTR _GameScoreRecord$7[ebp+64]
  00256	66 89 85 1c da
	ff ff		 mov	 WORD PTR _wIndex$3[ebp], ax
  0025d	66 8b 8d 70 da
	ff ff		 mov	 cx, WORD PTR _GameScoreRecord$7[ebp+64]
  00264	66 83 c1 01	 add	 cx, 1
  00268	66 89 8d 70 da
	ff ff		 mov	 WORD PTR _GameScoreRecord$7[ebp+64], cx

; 3720 : 					CopyMemory(&GameScoreRecord.GameScoreRecord[wIndex],pGameScoreRecord,sizeof(tagGameScoreRecord));

  0026f	6a 30		 push	 48			; 00000030H
  00271	8b 85 20 da ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$4[ebp]
  00277	50		 push	 eax
  00278	0f b7 8d 1c da
	ff ff		 movzx	 ecx, WORD PTR _wIndex$3[ebp]
  0027f	6b d1 30	 imul	 edx, ecx, 48
  00282	8d 84 15 78 da
	ff ff		 lea	 eax, DWORD PTR _GameScoreRecord$7[ebp+edx+72]
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 _memcpy
  0028f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@RecordGame:

; 3721 : 				}
; 3722 : 			}

  00292	e9 82 fe ff ff	 jmp	 $LN2@RecordGame
$LN3@RecordGame:

; 3723 : 
; 3724 : 			//投递数据
; 3725 : 			if(GameScoreRecord.wUserCount > 0)

  00297	0f b7 85 32 da
	ff ff		 movzx	 eax, WORD PTR _GameScoreRecord$7[ebp+2]
  0029e	85 c0		 test	 eax, eax
  002a0	7e 55		 jle	 SHORT $LN6@RecordGame

; 3726 : 			{
; 3727 : 				WORD wHeadSize=sizeof(GameScoreRecord)-sizeof(GameScoreRecord.GameScoreRecord);

  002a2	b8 48 00 00 00	 mov	 eax, 72			; 00000048H
  002a7	66 89 85 18 da
	ff ff		 mov	 WORD PTR _wHeadSize$2[ebp], ax

; 3728 : 				WORD wDataSize=sizeof(GameScoreRecord.GameScoreRecord[0])*GameScoreRecord.wRecordCount;

  002ae	0f b7 85 70 da
	ff ff		 movzx	 eax, WORD PTR _GameScoreRecord$7[ebp+64]
  002b5	6b c8 30	 imul	 ecx, eax, 48
  002b8	66 89 8d 14 da
	ff ff		 mov	 WORD PTR _wDataSize$1[ebp], cx

; 3729 : 				m_pIRecordDataBaseEngine->PostDataBaseRequest(DBR_GR_GAME_SCORE_RECORD,0,&GameScoreRecord,wHeadSize+wDataSize);

  002bf	0f b7 85 18 da
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$2[ebp]
  002c6	0f b7 8d 14 da
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$1[ebp]
  002cd	03 c1		 add	 eax, ecx
  002cf	50		 push	 eax
  002d0	8d 95 30 da ff
	ff		 lea	 edx, DWORD PTR _GameScoreRecord$7[ebp]
  002d6	52		 push	 edx
  002d7	6a 00		 push	 0
  002d9	68 ca 00 00 00	 push	 202			; 000000caH
  002de	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002e1	8b 88 e0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4064]
  002e7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002ea	8b 01		 mov	 eax, DWORD PTR [ecx]
  002ec	8b 8a e0 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4064]
  002f2	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  002f5	ff d2		 call	 edx
$LN6@RecordGame:

; 3730 : 			}
; 3731 : 		}
; 3732 : 
; 3733 : 		//清理记录
; 3734 : 		if (m_GameScoreRecordActive.GetCount()>0L)

  002f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002fa	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  00300	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount
  00305	85 c0		 test	 eax, eax
  00307	7e 21		 jle	 SHORT $LN1@RecordGame

; 3735 : 		{
; 3736 : 			m_GameScoreRecordBuffer.Append(m_GameScoreRecordActive);

  00309	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0030c	05 f4 0f 00 00	 add	 eax, 4084		; 00000ff4H
  00311	50		 push	 eax
  00312	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  00317	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Append

; 3737 : 			m_GameScoreRecordActive.RemoveAll();

  0031c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0031f	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  00325	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAll
$LN1@RecordGame:

; 3738 : 		}
; 3739 : 	}
; 3740 : 
; 3741 : }

  0032a	5f		 pop	 edi
  0032b	5e		 pop	 esi
  0032c	5b		 pop	 ebx
  0032d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00330	33 cd		 xor	 ecx, ebp
  00332	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00337	8b e5		 mov	 esp, ebp
  00339	5d		 pop	 ebp
  0033a	c2 08 00	 ret	 8
?RecordGameScore@CTableFrame@@QAEX_NK@Z ENDP		; CTableFrame::RecordGameScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?CheckDistribute@CTableFrame@@QAE_NXZ
_TEXT	SEGMENT
_wUserSitCount$1 = -16					; size = 2
_TableUserInfo$2 = -12					; size = 8
_this$ = -4						; size = 4
?CheckDistribute@CTableFrame@@QAE_NXZ PROC		; CTableFrame::CheckDistribute, COMDAT
; _this$ = ecx

; 3643 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3644 : 	//防作弊
; 3645 : 	if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00015	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0001e	83 c4 04	 add	 esp, 4
  00021	0f b6 c0	 movzx	 eax, al
  00024	85 c0		 test	 eax, eax
  00026	74 20		 je	 SHORT $LN2@CheckDistr

; 3646 : 	{
; 3647 : 		//桌子状况
; 3648 : 		tagTableUserInfo TableUserInfo;
; 3649 : 		WORD wUserSitCount=GetTableUserInfo(TableUserInfo);

  00028	8d 45 f4	 lea	 eax, DWORD PTR _TableUserInfo$2[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  00034	66 89 45 f0	 mov	 WORD PTR _wUserSitCount$1[ebp], ax

; 3650 : 
; 3651 : 		//用户起立
; 3652 : 		if(wUserSitCount < TableUserInfo.wMinUserCount)

  00038	0f b7 45 f0	 movzx	 eax, WORD PTR _wUserSitCount$1[ebp]
  0003c	0f b7 4d f4	 movzx	 ecx, WORD PTR _TableUserInfo$2[ebp]
  00040	3b c1		 cmp	 eax, ecx
  00042	7d 04		 jge	 SHORT $LN2@CheckDistr

; 3653 : 		{
; 3654 : 			return true;

  00044	b0 01		 mov	 al, 1
  00046	eb 02		 jmp	 SHORT $LN1@CheckDistr
$LN2@CheckDistr:

; 3655 : 		}
; 3656 : 	}
; 3657 : 
; 3658 : 	return false;

  00048	32 c0		 xor	 al, al
$LN1@CheckDistr:

; 3659 : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?CheckDistribute@CTableFrame@@QAE_NXZ ENDP		; CTableFrame::CheckDistribute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv150 = -232						; size = 8
tv140 = -232						; size = 8
tv130 = -232						; size = 8
_szDescribe$1 = -160					; size = 128
_lLessEnterScore$ = -32					; size = 8
_lMinTableScore$ = -24					; size = 8
_lUserScore$ = -16					; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wChairID$ = 8						; size = 2
_pIServerUserItem$ = 12					; size = 4
?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z PROC ; CTableFrame::EfficacyEnterTableScoreRule, COMDAT
; _this$ = ecx

; 3604 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3605 : 	//积分变量
; 3606 : 	SCORE lUserScore=pIServerUserItem->GetUserScore();

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0001c	8b 10		 mov	 edx, DWORD PTR [eax]
  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00021	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00027	ff d0		 call	 eax
  00029	89 45 f0	 mov	 DWORD PTR _lUserScore$[ebp], eax
  0002c	89 55 f4	 mov	 DWORD PTR _lUserScore$[ebp+4], edx

; 3607 : 	SCORE lMinTableScore=m_pGameServiceOption->lMinTableScore;

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00038	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0003b	89 55 e8	 mov	 DWORD PTR _lMinTableScore$[ebp], edx
  0003e	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00041	89 45 ec	 mov	 DWORD PTR _lMinTableScore$[ebp+4], eax

; 3608 : 	SCORE lLessEnterScore=m_pITableFrameSink->QueryLessEnterScore(wChairID,pIServerUserItem);

  00044	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00047	50		 push	 eax
  00048	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00050	8b 82 c8 0f 00
	00		 mov	 eax, DWORD PTR [edx+4040]
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 89 c8 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4040]
  00061	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00064	ff d0		 call	 eax
  00066	89 45 e0	 mov	 DWORD PTR _lLessEnterScore$[ebp], eax
  00069	89 55 e4	 mov	 DWORD PTR _lLessEnterScore$[ebp+4], edx

; 3609 : 
; 3610 : 	if (((lMinTableScore!=0L)&&(lUserScore<lMinTableScore))||((lLessEnterScore!=0L)&&(lUserScore<lLessEnterScore)))

  0006c	8b 45 e8	 mov	 eax, DWORD PTR _lMinTableScore$[ebp]
  0006f	0b 45 ec	 or	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  00072	74 12		 je	 SHORT $LN4@EfficacyEn
  00074	8b 45 f4	 mov	 eax, DWORD PTR _lUserScore$[ebp+4]
  00077	3b 45 ec	 cmp	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  0007a	7c 30		 jl	 SHORT $LN3@EfficacyEn
  0007c	7f 08		 jg	 SHORT $LN4@EfficacyEn
  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _lUserScore$[ebp]
  00081	3b 4d e8	 cmp	 ecx, DWORD PTR _lMinTableScore$[ebp]
  00084	72 26		 jb	 SHORT $LN3@EfficacyEn
$LN4@EfficacyEn:
  00086	8b 45 e0	 mov	 eax, DWORD PTR _lLessEnterScore$[ebp]
  00089	0b 45 e4	 or	 eax, DWORD PTR _lLessEnterScore$[ebp+4]
  0008c	0f 84 b1 01 00
	00		 je	 $LN2@EfficacyEn
  00092	8b 45 f4	 mov	 eax, DWORD PTR _lUserScore$[ebp+4]
  00095	3b 45 e4	 cmp	 eax, DWORD PTR _lLessEnterScore$[ebp+4]
  00098	0f 8f a5 01 00
	00		 jg	 $LN2@EfficacyEn
  0009e	7c 0c		 jl	 SHORT $LN3@EfficacyEn
  000a0	8b 4d f0	 mov	 ecx, DWORD PTR _lUserScore$[ebp]
  000a3	3b 4d e0	 cmp	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  000a6	0f 83 97 01 00
	00		 jae	 $LN2@EfficacyEn
$LN3@EfficacyEn:

; 3611 : 	{
; 3612 : 		//构造信息
; 3613 : 		TCHAR szDescribe[128]=TEXT("");

  000ac	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  000b1	88 85 60 ff ff
	ff		 mov	 BYTE PTR _szDescribe$1[ebp], al
  000b7	6a 7f		 push	 127			; 0000007fH
  000b9	6a 00		 push	 0
  000bb	8d 85 61 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp+1]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 _memset
  000c7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3614 : 		if(m_pGameServiceOption->wServerType==GAME_GENRE_GOLD)

  000ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000d3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000d7	83 fa 01	 cmp	 edx, 1
  000da	75 64		 jne	 SHORT $LN5@EfficacyEn

; 3615 : 			_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("加入游戏至少需要 ") SCORE_STRING TEXT(" 的游戏币，您的游戏币不够，不能加入！"),__max(lMinTableScore,lLessEnterScore));

  000dc	8b 45 ec	 mov	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  000df	3b 45 e4	 cmp	 eax, DWORD PTR _lLessEnterScore$[ebp+4]
  000e2	7c 1e		 jl	 SHORT $LN12@EfficacyEn
  000e4	7f 08		 jg	 SHORT $LN20@EfficacyEn
  000e6	8b 4d e8	 mov	 ecx, DWORD PTR _lMinTableScore$[ebp]
  000e9	3b 4d e0	 cmp	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  000ec	76 14		 jbe	 SHORT $LN12@EfficacyEn
$LN20@EfficacyEn:
  000ee	8b 55 e8	 mov	 edx, DWORD PTR _lMinTableScore$[ebp]
  000f1	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv130[ebp], edx
  000f7	8b 45 ec	 mov	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  000fa	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv130[ebp+4], eax
  00100	eb 12		 jmp	 SHORT $LN13@EfficacyEn
$LN12@EfficacyEn:
  00102	8b 4d e0	 mov	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  00105	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv130[ebp], ecx
  0010b	8b 55 e4	 mov	 edx, DWORD PTR _lLessEnterScore$[ebp+4]
  0010e	89 95 1c ff ff
	ff		 mov	 DWORD PTR tv130[ebp+4], edx
$LN13@EfficacyEn:
  00114	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp+4]
  0011a	50		 push	 eax
  0011b	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv130[ebp]
  00121	51		 push	 ecx
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@HLIDKABO@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LB?R@
  00127	68 80 00 00 00	 push	 128			; 00000080H
  0012c	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _szDescribe$1[ebp]
  00132	52		 push	 edx
  00133	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00138	83 c4 14	 add	 esp, 20			; 00000014H
  0013b	e9 ea 00 00 00	 jmp	 $LN6@EfficacyEn
$LN5@EfficacyEn:

; 3616 : 		else if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH)

  00140	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00143	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00149	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0014d	83 fa 04	 cmp	 edx, 4
  00150	75 61		 jne	 SHORT $LN7@EfficacyEn

; 3617 : 			_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("加入游戏至少需要 ") SCORE_STRING TEXT(" 的比赛币，您的比赛币不够，不能加入！"),__max(lMinTableScore,lLessEnterScore));

  00152	8b 45 ec	 mov	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  00155	3b 45 e4	 cmp	 eax, DWORD PTR _lLessEnterScore$[ebp+4]
  00158	7c 1e		 jl	 SHORT $LN14@EfficacyEn
  0015a	7f 08		 jg	 SHORT $LN21@EfficacyEn
  0015c	8b 4d e8	 mov	 ecx, DWORD PTR _lMinTableScore$[ebp]
  0015f	3b 4d e0	 cmp	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  00162	76 14		 jbe	 SHORT $LN14@EfficacyEn
$LN21@EfficacyEn:
  00164	8b 55 e8	 mov	 edx, DWORD PTR _lMinTableScore$[ebp]
  00167	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv140[ebp], edx
  0016d	8b 45 ec	 mov	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  00170	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv140[ebp+4], eax
  00176	eb 12		 jmp	 SHORT $LN15@EfficacyEn
$LN14@EfficacyEn:
  00178	8b 4d e0	 mov	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  0017b	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv140[ebp], ecx
  00181	8b 55 e4	 mov	 edx, DWORD PTR _lLessEnterScore$[ebp+4]
  00184	89 95 1c ff ff
	ff		 mov	 DWORD PTR tv140[ebp+4], edx
$LN15@EfficacyEn:
  0018a	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv140[ebp+4]
  00190	50		 push	 eax
  00191	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv140[ebp]
  00197	51		 push	 ecx
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@LGDJKEOB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?$LB?H?H?$PM?$LB?R@
  0019d	68 80 00 00 00	 push	 128			; 00000080H
  001a2	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _szDescribe$1[ebp]
  001a8	52		 push	 edx
  001a9	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001ae	83 c4 14	 add	 esp, 20			; 00000014H

; 3618 : 		else

  001b1	eb 77		 jmp	 SHORT $LN6@EfficacyEn
$LN7@EfficacyEn:

; 3619 : 		{
; 3620 : 			if (m_pGameServiceOption->wServerType != GAME_GENRE_PERSONAL)

  001b3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001b6	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001bc	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  001c0	83 fa 10	 cmp	 edx, 16			; 00000010H
  001c3	74 61		 je	 SHORT $LN9@EfficacyEn

; 3621 : 			{
; 3622 : 				_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("加入游戏至少需要 ") SCORE_STRING TEXT(" 的游戏积分，您的积分不够，不能加入！"),__max(lMinTableScore,lLessEnterScore));

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  001c8	3b 45 e4	 cmp	 eax, DWORD PTR _lLessEnterScore$[ebp+4]
  001cb	7c 1e		 jl	 SHORT $LN16@EfficacyEn
  001cd	7f 08		 jg	 SHORT $LN22@EfficacyEn
  001cf	8b 4d e8	 mov	 ecx, DWORD PTR _lMinTableScore$[ebp]
  001d2	3b 4d e0	 cmp	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  001d5	76 14		 jbe	 SHORT $LN16@EfficacyEn
$LN22@EfficacyEn:
  001d7	8b 55 e8	 mov	 edx, DWORD PTR _lMinTableScore$[ebp]
  001da	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv150[ebp], edx
  001e0	8b 45 ec	 mov	 eax, DWORD PTR _lMinTableScore$[ebp+4]
  001e3	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv150[ebp+4], eax
  001e9	eb 12		 jmp	 SHORT $LN17@EfficacyEn
$LN16@EfficacyEn:
  001eb	8b 4d e0	 mov	 ecx, DWORD PTR _lLessEnterScore$[ebp]
  001ee	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv150[ebp], ecx
  001f4	8b 55 e4	 mov	 edx, DWORD PTR _lLessEnterScore$[ebp+4]
  001f7	89 95 1c ff ff
	ff		 mov	 DWORD PTR tv150[ebp+4], edx
$LN17@EfficacyEn:
  001fd	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv150[ebp+4]
  00203	50		 push	 eax
  00204	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv150[ebp]
  0020a	51		 push	 ecx
  0020b	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@NJICMNBB@?$LM?S?H?k?S?N?O?$LH?V?A?I?Y?P?h?R?$KK?5?$CFI64d?5?$LF?D?S?N?O?$LH?$LL?$PN@
  00210	68 80 00 00 00	 push	 128			; 00000080H
  00215	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _szDescribe$1[ebp]
  0021b	52		 push	 edx
  0021c	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00221	83 c4 14	 add	 esp, 20			; 00000014H

; 3623 : 
; 3624 : 			}
; 3625 : 			else

  00224	eb 04		 jmp	 SHORT $LN6@EfficacyEn
$LN9@EfficacyEn:

; 3626 : 			{
; 3627 : 				return true;

  00226	b0 01		 mov	 al, 1
  00228	eb 1b		 jmp	 SHORT $LN1@EfficacyEn
$LN6@EfficacyEn:

; 3628 : 			}
; 3629 : 		}
; 3630 : 
; 3631 : 		//发送信息
; 3632 : 		SendRequestFailure(pIServerUserItem,szDescribe,REQUEST_FAILURE_NOSCORE);

  0022a	6a 02		 push	 2
  0022c	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp]
  00232	50		 push	 eax
  00233	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00236	51		 push	 ecx
  00237	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023a	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3633 : 
; 3634 : 		return false;

  0023f	32 c0		 xor	 al, al
  00241	eb 02		 jmp	 SHORT $LN1@EfficacyEn
$LN2@EfficacyEn:

; 3635 : 	}
; 3636 : 
; 3637 : 	return true;

  00243	b0 01		 mov	 al, 1
$LN1@EfficacyEn:

; 3638 : }

  00245	5f		 pop	 edi
  00246	5e		 pop	 esi
  00247	5b		 pop	 ebx
  00248	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024b	33 cd		 xor	 ecx, ebp
  0024d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00252	8b e5		 mov	 esp, ebp
  00254	5d		 pop	 ebp
  00255	c2 08 00	 ret	 8
?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z ENDP ; CTableFrame::EfficacyEnterTableScoreRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?EfficacyScoreRule@CTableFrame@@QAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv373 = -684						; size = 8
tv340 = -684						; size = 8
tv370 = -676						; size = 8
tv337 = -676						; size = 8
_szDescribe$1 = -540					; size = 128
_szDescribe$2 = -412					; size = 128
_szDescribe$3 = -284					; size = 128
_szDescribe$4 = -156					; size = 128
_pTableUserRule$5 = -28					; size = 4
_pITableUserItem$6 = -24				; size = 4
_i$7 = -20						; size = 2
_wFleeRate$ = -16					; size = 2
_wWinRate$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
?EfficacyScoreRule@CTableFrame@@QAE_NPAUIServerUserItem@@@Z PROC ; CTableFrame::EfficacyScoreRule, COMDAT
; _this$ = ecx

; 3512 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 02 00
	00		 sub	 esp, 684		; 000002acH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3513 : 	//管理员不受限制
; 3514 : 	if(pIServerUserItem->GetMasterOrder()!=0) return true;

  00019	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0001c	8b 10		 mov	 edx, DWORD PTR [eax]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00021	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00027	ff d0		 call	 eax
  00029	0f b6 c8	 movzx	 ecx, al
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 07		 je	 SHORT $LN5@EfficacySc
  00030	b0 01		 mov	 al, 1
  00032	e9 4c 03 00 00	 jmp	 $LN1@EfficacySc
$LN5@EfficacySc:

; 3515 : 
; 3516 : 	//规则判断
; 3517 : 	if (CServerRule::IsForfendGameRule(m_pGameServiceOption->dwServerRule)==true) return true;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00040	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?IsForfendGameRule@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameRule
  00049	83 c4 04	 add	 esp, 4
  0004c	0f b6 c0	 movzx	 eax, al
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 07		 jne	 SHORT $LN6@EfficacySc
  00054	b0 01		 mov	 al, 1
  00056	e9 28 03 00 00	 jmp	 $LN1@EfficacySc
$LN6@EfficacySc:

; 3518 : 
; 3519 : 	//防作弊
; 3520 : 	if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)) return true;

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00064	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 c0	 movzx	 eax, al
  00073	85 c0		 test	 eax, eax
  00075	74 07		 je	 SHORT $LN7@EfficacySc
  00077	b0 01		 mov	 al, 1
  00079	e9 05 03 00 00	 jmp	 $LN1@EfficacySc
$LN7@EfficacySc:

; 3521 : 
; 3522 : 	//百人不限制
; 3523 : 	if(m_wChairCount >= MAX_CHAIR) return true;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00081	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00085	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  0008b	7c 07		 jl	 SHORT $LN8@EfficacySc
  0008d	b0 01		 mov	 al, 1
  0008f	e9 ef 02 00 00	 jmp	 $LN1@EfficacySc
$LN8@EfficacySc:

; 3524 : 
; 3525 : 	//变量定义
; 3526 : 	WORD wWinRate=pIServerUserItem->GetUserWinRate();

  00094	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00097	8b 10		 mov	 edx, DWORD PTR [eax]
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0009c	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000a2	ff d0		 call	 eax
  000a4	66 89 45 f4	 mov	 WORD PTR _wWinRate$[ebp], ax

; 3527 : 	WORD wFleeRate=pIServerUserItem->GetUserFleeRate();

  000a8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000b0	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  000b6	ff d0		 call	 eax
  000b8	66 89 45 f0	 mov	 WORD PTR _wFleeRate$[ebp], ax

; 3528 : 
; 3529 : 	//积分范围
; 3530 : 	for (WORD i=0;i<m_wChairCount;i++)

  000bc	33 c0		 xor	 eax, eax
  000be	66 89 45 ec	 mov	 WORD PTR _i$7[ebp], ax
  000c2	eb 0c		 jmp	 SHORT $LN4@EfficacySc
$LN2@EfficacySc:
  000c4	66 8b 45 ec	 mov	 ax, WORD PTR _i$7[ebp]
  000c8	66 83 c0 01	 add	 ax, 1
  000cc	66 89 45 ec	 mov	 WORD PTR _i$7[ebp], ax
$LN4@EfficacySc:
  000d0	0f b7 45 ec	 movzx	 eax, WORD PTR _i$7[ebp]
  000d4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  000db	3b c2		 cmp	 eax, edx
  000dd	0f 8d 9e 02 00
	00		 jge	 $LN3@EfficacySc

; 3531 : 	{
; 3532 : 		//获取用户
; 3533 : 		IServerUserItem * pITableUserItem=GetTableUserItem(i);

  000e3	0f b7 45 ec	 movzx	 eax, WORD PTR _i$7[ebp]
  000e7	50		 push	 eax
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000f6	ff d0		 call	 eax
  000f8	89 45 e8	 mov	 DWORD PTR _pITableUserItem$6[ebp], eax

; 3534 : 
; 3535 : 		//规则效验
; 3536 : 		if (pITableUserItem!=NULL)

  000fb	83 7d e8 00	 cmp	 DWORD PTR _pITableUserItem$6[ebp], 0
  000ff	0f 84 77 02 00
	00		 je	 $LN9@EfficacySc

; 3537 : 		{
; 3538 : 			//获取规则
; 3539 : 			tagUserRule * pTableUserRule=pITableUserItem->GetUserRule();

  00105	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$6[ebp]
  00108	8b 10		 mov	 edx, DWORD PTR [eax]
  0010a	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$6[ebp]
  0010d	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00110	ff d0		 call	 eax
  00112	89 45 e4	 mov	 DWORD PTR _pTableUserRule$5[ebp], eax

; 3540 : 
; 3541 : 			//逃率效验
; 3542 : 			if ((pTableUserRule->bLimitFleeRate)&&(wFleeRate>pTableUserRule->wMaxFleeRate))

  00115	8b 45 e4	 mov	 eax, DWORD PTR _pTableUserRule$5[ebp]
  00118	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  0011c	85 c9		 test	 ecx, ecx
  0011e	74 70		 je	 SHORT $LN10@EfficacySc
  00120	0f b7 45 f0	 movzx	 eax, WORD PTR _wFleeRate$[ebp]
  00124	8b 4d e4	 mov	 ecx, DWORD PTR _pTableUserRule$5[ebp]
  00127	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0012b	3b c2		 cmp	 eax, edx
  0012d	7e 61		 jle	 SHORT $LN10@EfficacySc

; 3543 : 			{
; 3544 : 				//构造信息
; 3545 : 				TCHAR szDescribe[128]=TEXT("");

  0012f	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00134	88 85 64 ff ff
	ff		 mov	 BYTE PTR _szDescribe$4[ebp], al
  0013a	6a 7f		 push	 127			; 0000007fH
  0013c	6a 00		 push	 0
  0013e	8d 85 65 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$4[ebp+1]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 _memset
  0014a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3546 : 				_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("您的逃跑率太高，与 %s 设置的设置不符，不能加入游戏！"),pITableUserItem->GetNickName());

  0014d	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$6[ebp]
  00150	8b 10		 mov	 edx, DWORD PTR [eax]
  00152	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$6[ebp]
  00155	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00158	ff d0		 call	 eax
  0015a	50		 push	 eax
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OLOBDEEC@?D?z?$LF?D?L?S?E?$NM?B?J?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V@
  00160	68 80 00 00 00	 push	 128			; 00000080H
  00165	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$4[ebp]
  0016b	51		 push	 ecx
  0016c	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00171	83 c4 10	 add	 esp, 16			; 00000010H

; 3547 : 
; 3548 : 				//发送信息
; 3549 : 				SendRequestFailure(pIServerUserItem,szDescribe,REQUEST_FAILURE_NORMAL);

  00174	6a 00		 push	 0
  00176	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$4[ebp]
  0017c	50		 push	 eax
  0017d	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00180	51		 push	 ecx
  00181	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00184	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3550 : 
; 3551 : 				return false;

  00189	32 c0		 xor	 al, al
  0018b	e9 f3 01 00 00	 jmp	 $LN1@EfficacySc
$LN10@EfficacySc:

; 3552 : 			}
; 3553 : 
; 3554 : 			//胜率效验
; 3555 : 			if ((pTableUserRule->bLimitWinRate)&&(wWinRate<pTableUserRule->wMinWinRate))

  00190	8b 45 e4	 mov	 eax, DWORD PTR _pTableUserRule$5[ebp]
  00193	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00197	85 c9		 test	 ecx, ecx
  00199	74 70		 je	 SHORT $LN11@EfficacySc
  0019b	0f b7 45 f4	 movzx	 eax, WORD PTR _wWinRate$[ebp]
  0019f	8b 4d e4	 mov	 ecx, DWORD PTR _pTableUserRule$5[ebp]
  001a2	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  001a6	3b c2		 cmp	 eax, edx
  001a8	7d 61		 jge	 SHORT $LN11@EfficacySc

; 3556 : 			{
; 3557 : 				//构造信息
; 3558 : 				TCHAR szDescribe[128]=TEXT("");

  001aa	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  001af	88 85 e4 fe ff
	ff		 mov	 BYTE PTR _szDescribe$3[ebp], al
  001b5	6a 7f		 push	 127			; 0000007fH
  001b7	6a 00		 push	 0
  001b9	8d 85 e5 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$3[ebp+1]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 _memset
  001c5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3559 : 				_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("您的胜率太低，与 %s 设置的设置不符，不能加入游戏！"),pITableUserItem->GetNickName());

  001c8	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$6[ebp]
  001cb	8b 10		 mov	 edx, DWORD PTR [eax]
  001cd	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$6[ebp]
  001d0	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  001d3	ff d0		 call	 eax
  001d5	50		 push	 eax
  001d6	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KCKDKCBH@?D?z?$LF?D?J?$KE?B?J?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@
  001db	68 80 00 00 00	 push	 128			; 00000080H
  001e0	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$3[ebp]
  001e6	51		 push	 ecx
  001e7	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001ec	83 c4 10	 add	 esp, 16			; 00000010H

; 3560 : 
; 3561 : 				//发送信息
; 3562 : 				SendRequestFailure(pIServerUserItem,szDescribe,REQUEST_FAILURE_NORMAL);

  001ef	6a 00		 push	 0
  001f1	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$3[ebp]
  001f7	50		 push	 eax
  001f8	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001fb	51		 push	 ecx
  001fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ff	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3563 : 
; 3564 : 				return false;

  00204	32 c0		 xor	 al, al
  00206	e9 78 01 00 00	 jmp	 $LN1@EfficacySc
$LN11@EfficacySc:

; 3565 : 			}
; 3566 : 
; 3567 : 			//积分效验
; 3568 : 			if (pTableUserRule->bLimitGameScore==true)

  0020b	8b 45 e4	 mov	 eax, DWORD PTR _pTableUserRule$5[ebp]
  0020e	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00212	83 f9 01	 cmp	 ecx, 1
  00215	0f 85 61 01 00
	00		 jne	 $LN9@EfficacySc

; 3569 : 			{
; 3570 : 				//最高积分
; 3571 : 				if (pIServerUserItem->GetUserScore()>pTableUserRule->lMaxGameScore)

  0021b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0021e	8b 10		 mov	 edx, DWORD PTR [eax]
  00220	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00223	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00229	ff d0		 call	 eax
  0022b	8b c8		 mov	 ecx, eax
  0022d	8b f2		 mov	 esi, edx
  0022f	8b 55 e4	 mov	 edx, DWORD PTR _pTableUserRule$5[ebp]
  00232	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00235	99		 cdq
  00236	89 8d 5c fd ff
	ff		 mov	 DWORD PTR tv337[ebp], ecx
  0023c	89 b5 60 fd ff
	ff		 mov	 DWORD PTR tv337[ebp+4], esi
  00242	89 85 54 fd ff
	ff		 mov	 DWORD PTR tv340[ebp], eax
  00248	89 95 58 fd ff
	ff		 mov	 DWORD PTR tv340[ebp+4], edx
  0024e	8b 85 60 fd ff
	ff		 mov	 eax, DWORD PTR tv337[ebp+4]
  00254	3b 85 58 fd ff
	ff		 cmp	 eax, DWORD PTR tv340[ebp+4]
  0025a	7c 71		 jl	 SHORT $LN13@EfficacySc
  0025c	7f 0e		 jg	 SHORT $LN16@EfficacySc
  0025e	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR tv337[ebp]
  00264	3b 8d 54 fd ff
	ff		 cmp	 ecx, DWORD PTR tv340[ebp]
  0026a	76 61		 jbe	 SHORT $LN13@EfficacySc
$LN16@EfficacySc:

; 3572 : 				{
; 3573 : 					//构造信息
; 3574 : 					TCHAR szDescribe[128]=TEXT("");

  0026c	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00271	88 85 64 fe ff
	ff		 mov	 BYTE PTR _szDescribe$2[ebp], al
  00277	6a 7f		 push	 127			; 0000007fH
  00279	6a 00		 push	 0
  0027b	8d 85 65 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$2[ebp+1]
  00281	50		 push	 eax
  00282	e8 00 00 00 00	 call	 _memset
  00287	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3575 : 					_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("您的积分太高，与 %s 设置的设置不符，不能加入游戏！"),pITableUserItem->GetNickName());

  0028a	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$6[ebp]
  0028d	8b 10		 mov	 edx, DWORD PTR [eax]
  0028f	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$6[ebp]
  00292	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00295	ff d0		 call	 eax
  00297	50		 push	 eax
  00298	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@ILLHEC@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LI?$NP?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@
  0029d	68 80 00 00 00	 push	 128			; 00000080H
  002a2	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$2[ebp]
  002a8	51		 push	 ecx
  002a9	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  002ae	83 c4 10	 add	 esp, 16			; 00000010H

; 3576 : 
; 3577 : 					//发送信息
; 3578 : 					SendRequestFailure(pIServerUserItem,szDescribe,REQUEST_FAILURE_NORMAL);

  002b1	6a 00		 push	 0
  002b3	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$2[ebp]
  002b9	50		 push	 eax
  002ba	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002bd	51		 push	 ecx
  002be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c1	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3579 : 
; 3580 : 					return false;

  002c6	32 c0		 xor	 al, al
  002c8	e9 b6 00 00 00	 jmp	 $LN1@EfficacySc
$LN13@EfficacySc:

; 3581 : 				}
; 3582 : 
; 3583 : 				//最低积分
; 3584 : 				if (pIServerUserItem->GetUserScore()<pTableUserRule->lMinGameScore)

  002cd	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002d0	8b 10		 mov	 edx, DWORD PTR [eax]
  002d2	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002d5	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  002db	ff d0		 call	 eax
  002dd	8b c8		 mov	 ecx, eax
  002df	8b f2		 mov	 esi, edx
  002e1	8b 55 e4	 mov	 edx, DWORD PTR _pTableUserRule$5[ebp]
  002e4	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002e7	99		 cdq
  002e8	89 8d 5c fd ff
	ff		 mov	 DWORD PTR tv370[ebp], ecx
  002ee	89 b5 60 fd ff
	ff		 mov	 DWORD PTR tv370[ebp+4], esi
  002f4	89 85 54 fd ff
	ff		 mov	 DWORD PTR tv373[ebp], eax
  002fa	89 95 58 fd ff
	ff		 mov	 DWORD PTR tv373[ebp+4], edx
  00300	8b 85 60 fd ff
	ff		 mov	 eax, DWORD PTR tv370[ebp+4]
  00306	3b 85 58 fd ff
	ff		 cmp	 eax, DWORD PTR tv373[ebp+4]
  0030c	7f 6e		 jg	 SHORT $LN9@EfficacySc
  0030e	7c 0e		 jl	 SHORT $LN17@EfficacySc
  00310	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR tv370[ebp]
  00316	3b 8d 54 fd ff
	ff		 cmp	 ecx, DWORD PTR tv373[ebp]
  0031c	73 5e		 jae	 SHORT $LN9@EfficacySc
$LN17@EfficacySc:

; 3585 : 				{
; 3586 : 					//构造信息
; 3587 : 					TCHAR szDescribe[128]=TEXT("");

  0031e	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00323	88 85 e4 fd ff
	ff		 mov	 BYTE PTR _szDescribe$1[ebp], al
  00329	6a 7f		 push	 127			; 0000007fH
  0032b	6a 00		 push	 0
  0032d	8d 85 e5 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp+1]
  00333	50		 push	 eax
  00334	e8 00 00 00 00	 call	 _memset
  00339	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3588 : 					_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("您的积分太低，与 %s 设置的设置不符，不能加入游戏！"),pITableUserItem->GetNickName());

  0033c	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$6[ebp]
  0033f	8b 10		 mov	 edx, DWORD PTR [eax]
  00341	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$6[ebp]
  00344	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00347	ff d0		 call	 eax
  00349	50		 push	 eax
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KCEHNENI@?D?z?$LF?D?$LL?$PN?$LH?V?L?$KL?$LF?M?$KD?$KM?S?k?5?$CFs?5?I?h?V?C?$LF?D?I?h?V?C?$LC@
  0034f	68 80 00 00 00	 push	 128			; 00000080H
  00354	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$1[ebp]
  0035a	51		 push	 ecx
  0035b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00360	83 c4 10	 add	 esp, 16			; 00000010H

; 3589 : 
; 3590 : 					//发送信息
; 3591 : 					SendRequestFailure(pIServerUserItem,szDescribe,REQUEST_FAILURE_NORMAL);

  00363	6a 00		 push	 0
  00365	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp]
  0036b	50		 push	 eax
  0036c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0036f	51		 push	 ecx
  00370	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00373	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3592 : 
; 3593 : 					return false;

  00378	32 c0		 xor	 al, al
  0037a	eb 07		 jmp	 SHORT $LN1@EfficacySc
$LN9@EfficacySc:

; 3594 : 				}
; 3595 : 			}
; 3596 : 		}
; 3597 : 	}

  0037c	e9 43 fd ff ff	 jmp	 $LN2@EfficacySc
$LN3@EfficacySc:

; 3598 : 
; 3599 : 	return true;

  00381	b0 01		 mov	 al, 1
$LN1@EfficacySc:

; 3600 : }

  00383	5f		 pop	 edi
  00384	5e		 pop	 esi
  00385	5b		 pop	 ebx
  00386	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00389	33 cd		 xor	 ecx, ebp
  0038b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00390	8b e5		 mov	 esp, ebp
  00392	5d		 pop	 ebp
  00393	c2 04 00	 ret	 4
?EfficacyScoreRule@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ENDP ; CTableFrame::EfficacyScoreRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?EfficacyIPAddress@CTableFrame@@QAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
_pszDescribe$1 = -64					; size = 4
_pITableNextUserItem$2 = -60				; size = 4
_j$3 = -56						; size = 2
_pITableUserItem$4 = -52				; size = 4
_i$5 = -48						; size = 2
_pszDescribe$6 = -44					; size = 4
_pszDescribe$7 = -40					; size = 4
_pITableUserItem$8 = -36				; size = 4
_i$9 = -32						; size = 2
_dwUserIP$10 = -28					; size = 4
_pITableUserItem$11 = -24				; size = 4
_i$12 = -20						; size = 2
_bCheckSameIP$ = -13					; size = 1
_pTableUserRule$ = -12					; size = 4
_pUserRule$ = -8					; size = 4
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?EfficacyIPAddress@CTableFrame@@QAE_NPAUIServerUserItem@@@Z PROC ; CTableFrame::EfficacyIPAddress, COMDAT
; _this$ = ecx

; 3430 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3431 : 	//管理员不受限制
; 3432 : 	if(pIServerUserItem->GetMasterOrder()!=0) return true;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00012	8b 10		 mov	 edx, DWORD PTR [eax]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00017	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0001d	ff d0		 call	 eax
  0001f	0f b6 c8	 movzx	 ecx, al
  00022	85 c9		 test	 ecx, ecx
  00024	74 07		 je	 SHORT $LN14@EfficacyIP
  00026	b0 01		 mov	 al, 1
  00028	e9 57 03 00 00	 jmp	 $LN1@EfficacyIP
$LN14@EfficacyIP:

; 3433 : 
; 3434 : 	//规则判断
; 3435 : 	if (CServerRule::IsForfendGameRule(m_pGameServiceOption->dwServerRule)==true) return true;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00036	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00039	52		 push	 edx
  0003a	e8 00 00 00 00	 call	 ?IsForfendGameRule@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameRule
  0003f	83 c4 04	 add	 esp, 4
  00042	0f b6 c0	 movzx	 eax, al
  00045	83 f8 01	 cmp	 eax, 1
  00048	75 07		 jne	 SHORT $LN15@EfficacyIP
  0004a	b0 01		 mov	 al, 1
  0004c	e9 33 03 00 00	 jmp	 $LN1@EfficacyIP
$LN15@EfficacyIP:

; 3436 : 
; 3437 : 	//防作弊
; 3438 : 	if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)) return true;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0005a	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  00063	83 c4 04	 add	 esp, 4
  00066	0f b6 c0	 movzx	 eax, al
  00069	85 c0		 test	 eax, eax
  0006b	74 07		 je	 SHORT $LN16@EfficacyIP
  0006d	b0 01		 mov	 al, 1
  0006f	e9 10 03 00 00	 jmp	 $LN1@EfficacyIP
$LN16@EfficacyIP:

; 3439 : 
; 3440 : 	//百人不限制
; 3441 : 	if(m_wChairCount >= MAX_CHAIR) return true;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0007b	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00081	7c 07		 jl	 SHORT $LN17@EfficacyIP
  00083	b0 01		 mov	 al, 1
  00085	e9 fa 02 00 00	 jmp	 $LN1@EfficacyIP
$LN17@EfficacyIP:

; 3442 : 
; 3443 : 	//地址效验
; 3444 : 	const tagUserRule * pUserRule=pIServerUserItem->GetUserRule(),*pTableUserRule=NULL;

  0008a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0008d	8b 10		 mov	 edx, DWORD PTR [eax]
  0008f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00092	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00095	ff d0		 call	 eax
  00097	89 45 f8	 mov	 DWORD PTR _pUserRule$[ebp], eax
  0009a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pTableUserRule$[ebp], 0

; 3445 : 	bool bCheckSameIP=pUserRule->bLimitSameIP;

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  000a4	8a 08		 mov	 cl, BYTE PTR [eax]
  000a6	88 4d f3	 mov	 BYTE PTR _bCheckSameIP$[ebp], cl

; 3446 : 	for (WORD i=0;i<m_wChairCount;i++)

  000a9	33 c0		 xor	 eax, eax
  000ab	66 89 45 ec	 mov	 WORD PTR _i$12[ebp], ax
  000af	eb 0c		 jmp	 SHORT $LN4@EfficacyIP
$LN2@EfficacyIP:
  000b1	66 8b 45 ec	 mov	 ax, WORD PTR _i$12[ebp]
  000b5	66 83 c0 01	 add	 ax, 1
  000b9	66 89 45 ec	 mov	 WORD PTR _i$12[ebp], ax
$LN4@EfficacyIP:
  000bd	0f b7 45 ec	 movzx	 eax, WORD PTR _i$12[ebp]
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  000c8	3b c2		 cmp	 eax, edx
  000ca	7d 72		 jge	 SHORT $LN3@EfficacyIP

; 3447 : 	{
; 3448 : 		//获取用户
; 3449 : 		IServerUserItem * pITableUserItem=GetTableUserItem(i);

  000cc	0f b7 45 ec	 movzx	 eax, WORD PTR _i$12[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000df	ff d0		 call	 eax
  000e1	89 45 e8	 mov	 DWORD PTR _pITableUserItem$11[ebp], eax

; 3450 : 		if (pITableUserItem!=NULL && (!pITableUserItem->IsAndroidUser()) && (pITableUserItem->GetMasterOrder()==0))

  000e4	83 7d e8 00	 cmp	 DWORD PTR _pITableUserItem$11[ebp], 0
  000e8	74 4f		 je	 SHORT $LN18@EfficacyIP
  000ea	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$11[ebp]
  000ed	8b 10		 mov	 edx, DWORD PTR [eax]
  000ef	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$11[ebp]
  000f2	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  000f8	ff d0		 call	 eax
  000fa	0f b6 c8	 movzx	 ecx, al
  000fd	85 c9		 test	 ecx, ecx
  000ff	75 38		 jne	 SHORT $LN18@EfficacyIP
  00101	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$11[ebp]
  00104	8b 10		 mov	 edx, DWORD PTR [eax]
  00106	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$11[ebp]
  00109	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0010f	ff d0		 call	 eax
  00111	0f b6 c8	 movzx	 ecx, al
  00114	85 c9		 test	 ecx, ecx
  00116	75 21		 jne	 SHORT $LN18@EfficacyIP

; 3451 : 		{
; 3452 : 			pTableUserRule=pITableUserItem->GetUserRule();

  00118	8b 45 e8	 mov	 eax, DWORD PTR _pITableUserItem$11[ebp]
  0011b	8b 10		 mov	 edx, DWORD PTR [eax]
  0011d	8b 4d e8	 mov	 ecx, DWORD PTR _pITableUserItem$11[ebp]
  00120	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00123	ff d0		 call	 eax
  00125	89 45 f4	 mov	 DWORD PTR _pTableUserRule$[ebp], eax

; 3453 : 			if (pTableUserRule->bLimitSameIP==true) 

  00128	8b 45 f4	 mov	 eax, DWORD PTR _pTableUserRule$[ebp]
  0012b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0012e	83 f9 01	 cmp	 ecx, 1
  00131	75 06		 jne	 SHORT $LN18@EfficacyIP

; 3454 : 			{
; 3455 : 				bCheckSameIP=true;

  00133	c6 45 f3 01	 mov	 BYTE PTR _bCheckSameIP$[ebp], 1

; 3456 : 				break;

  00137	eb 05		 jmp	 SHORT $LN3@EfficacyIP
$LN18@EfficacyIP:

; 3457 : 			}
; 3458 : 		}
; 3459 : 	}

  00139	e9 73 ff ff ff	 jmp	 $LN2@EfficacyIP
$LN3@EfficacyIP:

; 3460 : 
; 3461 : 	//地址效验
; 3462 : 	if (bCheckSameIP==true)

  0013e	0f b6 45 f3	 movzx	 eax, BYTE PTR _bCheckSameIP$[ebp]
  00142	83 f8 01	 cmp	 eax, 1
  00145	0f 85 37 02 00
	00		 jne	 $LN20@EfficacyIP

; 3463 : 	{
; 3464 : 		DWORD dwUserIP=pIServerUserItem->GetClientAddr();

  0014b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0014e	8b 10		 mov	 edx, DWORD PTR [eax]
  00150	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00153	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00156	ff d0		 call	 eax
  00158	89 45 e4	 mov	 DWORD PTR _dwUserIP$10[ebp], eax

; 3465 : 		for (WORD i=0;i<m_wChairCount;i++)

  0015b	33 c0		 xor	 eax, eax
  0015d	66 89 45 e0	 mov	 WORD PTR _i$9[ebp], ax
  00161	eb 0c		 jmp	 SHORT $LN7@EfficacyIP
$LN5@EfficacyIP:
  00163	66 8b 45 e0	 mov	 ax, WORD PTR _i$9[ebp]
  00167	66 83 c0 01	 add	 ax, 1
  0016b	66 89 45 e0	 mov	 WORD PTR _i$9[ebp], ax
$LN7@EfficacyIP:
  0016f	0f b7 45 e0	 movzx	 eax, WORD PTR _i$9[ebp]
  00173	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00176	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0017a	3b c2		 cmp	 eax, edx
  0017c	0f 8d bf 00 00
	00		 jge	 $LN6@EfficacyIP

; 3466 : 		{
; 3467 : 			//获取用户
; 3468 : 			IServerUserItem * pITableUserItem=GetTableUserItem(i);

  00182	0f b7 45 e0	 movzx	 eax, WORD PTR _i$9[ebp]
  00186	50		 push	 eax
  00187	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00195	ff d0		 call	 eax
  00197	89 45 dc	 mov	 DWORD PTR _pITableUserItem$8[ebp], eax

; 3469 : 			if ((pITableUserItem!=NULL)&&(pITableUserItem != pIServerUserItem)&&(!pITableUserItem->IsAndroidUser())&&(pITableUserItem->GetMasterOrder()==0)&&(pITableUserItem->GetClientAddr()==dwUserIP))

  0019a	83 7d dc 00	 cmp	 DWORD PTR _pITableUserItem$8[ebp], 0
  0019e	0f 84 98 00 00
	00		 je	 $LN21@EfficacyIP
  001a4	8b 45 dc	 mov	 eax, DWORD PTR _pITableUserItem$8[ebp]
  001a7	3b 45 08	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001aa	0f 84 8c 00 00
	00		 je	 $LN21@EfficacyIP
  001b0	8b 45 dc	 mov	 eax, DWORD PTR _pITableUserItem$8[ebp]
  001b3	8b 10		 mov	 edx, DWORD PTR [eax]
  001b5	8b 4d dc	 mov	 ecx, DWORD PTR _pITableUserItem$8[ebp]
  001b8	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  001be	ff d0		 call	 eax
  001c0	0f b6 c8	 movzx	 ecx, al
  001c3	85 c9		 test	 ecx, ecx
  001c5	75 75		 jne	 SHORT $LN21@EfficacyIP
  001c7	8b 45 dc	 mov	 eax, DWORD PTR _pITableUserItem$8[ebp]
  001ca	8b 10		 mov	 edx, DWORD PTR [eax]
  001cc	8b 4d dc	 mov	 ecx, DWORD PTR _pITableUserItem$8[ebp]
  001cf	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001d5	ff d0		 call	 eax
  001d7	0f b6 c8	 movzx	 ecx, al
  001da	85 c9		 test	 ecx, ecx
  001dc	75 5e		 jne	 SHORT $LN21@EfficacyIP
  001de	8b 45 dc	 mov	 eax, DWORD PTR _pITableUserItem$8[ebp]
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	8b 4d dc	 mov	 ecx, DWORD PTR _pITableUserItem$8[ebp]
  001e6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001e9	ff d0		 call	 eax
  001eb	3b 45 e4	 cmp	 eax, DWORD PTR _dwUserIP$10[ebp]
  001ee	75 4c		 jne	 SHORT $LN21@EfficacyIP

; 3470 : 			{
; 3471 : 				if (!pUserRule->bLimitSameIP)

  001f0	8b 45 f8	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  001f3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001f6	85 c9		 test	 ecx, ecx
  001f8	75 22		 jne	 SHORT $LN22@EfficacyIP

; 3472 : 				{
; 3473 : 					//发送信息
; 3474 : 					LPCTSTR pszDescribe=TEXT("此游戏桌玩家设置了不跟相同 IP 地址的玩家游戏，您 IP 地址与此玩家的 IP 地址相同，不能加入游戏！");

  001fa	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pszDescribe$7[ebp], OFFSET ??_C@_0FP@HJKNBJDK@?$LE?K?S?N?O?$LH?W?$MA?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF@

; 3475 : 					SendRequestFailure(pIServerUserItem,pszDescribe,REQUEST_FAILURE_NORMAL);

  00201	6a 00		 push	 0
  00203	8b 45 d8	 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  00206	50		 push	 eax
  00207	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0020a	51		 push	 ecx
  0020b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020e	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3476 : 					return false;

  00213	32 c0		 xor	 al, al
  00215	e9 6a 01 00 00	 jmp	 $LN1@EfficacyIP

; 3477 : 				}
; 3478 : 				else

  0021a	eb 20		 jmp	 SHORT $LN21@EfficacyIP
$LN22@EfficacyIP:

; 3479 : 				{
; 3480 : 					//发送信息
; 3481 : 					LPCTSTR pszDescribe=TEXT("您设置了不跟相同 IP 地址的玩家游戏，此游戏桌存在与您 IP 地址相同的玩家，不能加入游戏！");

  0021c	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pszDescribe$6[ebp], OFFSET ??_C@_0FH@GMPNLGDP@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@

; 3482 : 					SendRequestFailure(pIServerUserItem,pszDescribe,REQUEST_FAILURE_NORMAL);

  00223	6a 00		 push	 0
  00225	8b 45 d4	 mov	 eax, DWORD PTR _pszDescribe$6[ebp]
  00228	50		 push	 eax
  00229	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0022c	51		 push	 ecx
  0022d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00230	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3483 : 					return false;

  00235	32 c0		 xor	 al, al
  00237	e9 48 01 00 00	 jmp	 $LN1@EfficacyIP
$LN21@EfficacyIP:

; 3484 : 				}
; 3485 : 			}
; 3486 : 		}

  0023c	e9 22 ff ff ff	 jmp	 $LN5@EfficacyIP
$LN6@EfficacyIP:

; 3487 : 		for (WORD i=0;i<m_wChairCount-1;i++)

  00241	33 c0		 xor	 eax, eax
  00243	66 89 45 d0	 mov	 WORD PTR _i$5[ebp], ax
  00247	eb 0c		 jmp	 SHORT $LN10@EfficacyIP
$LN8@EfficacyIP:
  00249	66 8b 45 d0	 mov	 ax, WORD PTR _i$5[ebp]
  0024d	66 83 c0 01	 add	 ax, 1
  00251	66 89 45 d0	 mov	 WORD PTR _i$5[ebp], ax
$LN10@EfficacyIP:
  00255	0f b7 45 d0	 movzx	 eax, WORD PTR _i$5[ebp]
  00259	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025c	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00260	83 ea 01	 sub	 edx, 1
  00263	3b c2		 cmp	 eax, edx
  00265	0f 8d 17 01 00
	00		 jge	 $LN20@EfficacyIP

; 3488 : 		{
; 3489 : 			//获取用户
; 3490 : 			IServerUserItem * pITableUserItem=GetTableUserItem(i);

  0026b	0f b7 45 d0	 movzx	 eax, WORD PTR _i$5[ebp]
  0026f	50		 push	 eax
  00270	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00273	8b 11		 mov	 edx, DWORD PTR [ecx]
  00275	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0027e	ff d0		 call	 eax
  00280	89 45 cc	 mov	 DWORD PTR _pITableUserItem$4[ebp], eax

; 3491 : 			if (pITableUserItem!=NULL && (!pITableUserItem->IsAndroidUser()) && (pITableUserItem->GetMasterOrder()==0))

  00283	83 7d cc 00	 cmp	 DWORD PTR _pITableUserItem$4[ebp], 0
  00287	0f 84 f0 00 00
	00		 je	 $LN24@EfficacyIP
  0028d	8b 45 cc	 mov	 eax, DWORD PTR _pITableUserItem$4[ebp]
  00290	8b 10		 mov	 edx, DWORD PTR [eax]
  00292	8b 4d cc	 mov	 ecx, DWORD PTR _pITableUserItem$4[ebp]
  00295	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0029b	ff d0		 call	 eax
  0029d	0f b6 c8	 movzx	 ecx, al
  002a0	85 c9		 test	 ecx, ecx
  002a2	0f 85 d5 00 00
	00		 jne	 $LN24@EfficacyIP
  002a8	8b 45 cc	 mov	 eax, DWORD PTR _pITableUserItem$4[ebp]
  002ab	8b 10		 mov	 edx, DWORD PTR [eax]
  002ad	8b 4d cc	 mov	 ecx, DWORD PTR _pITableUserItem$4[ebp]
  002b0	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  002b6	ff d0		 call	 eax
  002b8	0f b6 c8	 movzx	 ecx, al
  002bb	85 c9		 test	 ecx, ecx
  002bd	0f 85 ba 00 00
	00		 jne	 $LN24@EfficacyIP

; 3492 : 			{
; 3493 : 				for (WORD j=i+1;j<m_wChairCount;j++)

  002c3	0f b7 45 d0	 movzx	 eax, WORD PTR _i$5[ebp]
  002c7	83 c0 01	 add	 eax, 1
  002ca	66 89 45 c8	 mov	 WORD PTR _j$3[ebp], ax
  002ce	eb 0c		 jmp	 SHORT $LN13@EfficacyIP
$LN11@EfficacyIP:
  002d0	66 8b 45 c8	 mov	 ax, WORD PTR _j$3[ebp]
  002d4	66 83 c0 01	 add	 ax, 1
  002d8	66 89 45 c8	 mov	 WORD PTR _j$3[ebp], ax
$LN13@EfficacyIP:
  002dc	0f b7 45 c8	 movzx	 eax, WORD PTR _j$3[ebp]
  002e0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e3	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  002e7	3b c2		 cmp	 eax, edx
  002e9	0f 8d 8e 00 00
	00		 jge	 $LN24@EfficacyIP

; 3494 : 				{
; 3495 : 					//获取用户
; 3496 : 					IServerUserItem * pITableNextUserItem=GetTableUserItem(j);

  002ef	0f b7 45 c8	 movzx	 eax, WORD PTR _j$3[ebp]
  002f3	50		 push	 eax
  002f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f7	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fc	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00302	ff d0		 call	 eax
  00304	89 45 c4	 mov	 DWORD PTR _pITableNextUserItem$2[ebp], eax

; 3497 : 					if ((pITableNextUserItem!=NULL) && (!pITableNextUserItem->IsAndroidUser()) && (pITableNextUserItem->GetMasterOrder()==0)&&(pITableUserItem->GetClientAddr()==pITableNextUserItem->GetClientAddr()))

  00307	83 7d c4 00	 cmp	 DWORD PTR _pITableNextUserItem$2[ebp], 0
  0030b	74 6b		 je	 SHORT $LN25@EfficacyIP
  0030d	8b 45 c4	 mov	 eax, DWORD PTR _pITableNextUserItem$2[ebp]
  00310	8b 10		 mov	 edx, DWORD PTR [eax]
  00312	8b 4d c4	 mov	 ecx, DWORD PTR _pITableNextUserItem$2[ebp]
  00315	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0031b	ff d0		 call	 eax
  0031d	0f b6 c8	 movzx	 ecx, al
  00320	85 c9		 test	 ecx, ecx
  00322	75 54		 jne	 SHORT $LN25@EfficacyIP
  00324	8b 45 c4	 mov	 eax, DWORD PTR _pITableNextUserItem$2[ebp]
  00327	8b 10		 mov	 edx, DWORD PTR [eax]
  00329	8b 4d c4	 mov	 ecx, DWORD PTR _pITableNextUserItem$2[ebp]
  0032c	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00332	ff d0		 call	 eax
  00334	0f b6 c8	 movzx	 ecx, al
  00337	85 c9		 test	 ecx, ecx
  00339	75 3d		 jne	 SHORT $LN25@EfficacyIP
  0033b	8b 45 cc	 mov	 eax, DWORD PTR _pITableUserItem$4[ebp]
  0033e	8b 10		 mov	 edx, DWORD PTR [eax]
  00340	8b 4d cc	 mov	 ecx, DWORD PTR _pITableUserItem$4[ebp]
  00343	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00346	ff d0		 call	 eax
  00348	8b f0		 mov	 esi, eax
  0034a	8b 4d c4	 mov	 ecx, DWORD PTR _pITableNextUserItem$2[ebp]
  0034d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0034f	8b 4d c4	 mov	 ecx, DWORD PTR _pITableNextUserItem$2[ebp]
  00352	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00355	ff d0		 call	 eax
  00357	3b f0		 cmp	 esi, eax
  00359	75 1d		 jne	 SHORT $LN25@EfficacyIP

; 3498 : 					{
; 3499 : 						LPCTSTR pszDescribe=TEXT("您设置了不跟相同 IP 地址的玩家游戏，此游戏桌存在 IP 地址相同的玩家，不能加入游戏！");

  0035b	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pszDescribe$1[ebp], OFFSET ??_C@_0FD@FJCGPGNB@?D?z?I?h?V?C?A?K?$LC?$LL?$LI?z?O?$OA?M?$KM?5IP?5?$LF?X?V?$LH?$LF?D?M?f?$LM?R?S@

; 3500 : 						SendRequestFailure(pIServerUserItem,pszDescribe,REQUEST_FAILURE_NORMAL);

  00362	6a 00		 push	 0
  00364	8b 45 c0	 mov	 eax, DWORD PTR _pszDescribe$1[ebp]
  00367	50		 push	 eax
  00368	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0036b	51		 push	 ecx
  0036c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036f	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3501 : 						return false;

  00374	32 c0		 xor	 al, al
  00376	eb 0c		 jmp	 SHORT $LN1@EfficacyIP
$LN25@EfficacyIP:

; 3502 : 					}
; 3503 : 				}

  00378	e9 53 ff ff ff	 jmp	 $LN11@EfficacyIP
$LN24@EfficacyIP:

; 3504 : 			}
; 3505 : 		}

  0037d	e9 c7 fe ff ff	 jmp	 $LN8@EfficacyIP
$LN20@EfficacyIP:

; 3506 : 	}
; 3507 : 	return true;

  00382	b0 01		 mov	 al, 1
$LN1@EfficacyIP:

; 3508 : }

  00384	5f		 pop	 edi
  00385	5e		 pop	 esi
  00386	5b		 pop	 ebx
  00387	8b e5		 mov	 esp, ebp
  00389	5d		 pop	 ebp
  0038a	c2 04 00	 ret	 4
?EfficacyIPAddress@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ENDP ; CTableFrame::EfficacyIPAddress
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?EfficacyStartGame@CTableFrame@@QAE_NG@Z
_TEXT	SEGMENT
tv139 = -96						; size = 4
_pITowardsUserItem$1 = -28				; size = 4
_pICurrentUserItem$2 = -24				; size = 4
_i$3 = -20						; size = 2
_pITableUserItem$4 = -16				; size = 4
_i$5 = -12						; size = 2
_wReadyUserCount$ = -8					; size = 2
_this$ = -4						; size = 4
_wReadyChairID$ = 8					; size = 2
?EfficacyStartGame@CTableFrame@@QAE_NG@Z PROC		; CTableFrame::EfficacyStartGame, COMDAT
; _this$ = ecx

; 3340 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3341 : 	//状态判断
; 3342 : 	if (m_bGameStarted==true) return false;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00013	83 f9 01	 cmp	 ecx, 1
  00016	75 07		 jne	 SHORT $LN10@EfficacySt
  00018	32 c0		 xor	 al, al
  0001a	e9 3f 02 00 00	 jmp	 $LN1@EfficacySt
$LN10@EfficacySt:

; 3343 : 
; 3344 : 	//模式过滤
; 3345 : 	if (m_cbStartMode==START_MODE_TIME_CONTROL) return false;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00026	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00029	75 07		 jne	 SHORT $LN11@EfficacySt
  0002b	32 c0		 xor	 al, al
  0002d	e9 2c 02 00 00	 jmp	 $LN1@EfficacySt
$LN11@EfficacySt:

; 3346 : 	if (m_cbStartMode==START_MODE_MASTER_CONTROL) return false;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00039	83 f9 11	 cmp	 ecx, 17			; 00000011H
  0003c	75 07		 jne	 SHORT $LN12@EfficacySt
  0003e	32 c0		 xor	 al, al
  00040	e9 19 02 00 00	 jmp	 $LN1@EfficacySt
$LN12@EfficacySt:

; 3347 : 
; 3348 : 	//准备人数
; 3349 : 	WORD wReadyUserCount=0;

  00045	33 c0		 xor	 eax, eax
  00047	66 89 45 f8	 mov	 WORD PTR _wReadyUserCount$[ebp], ax

; 3350 : 	for (WORD i=0;i<m_wChairCount;i++)

  0004b	33 c0		 xor	 eax, eax
  0004d	66 89 45 f4	 mov	 WORD PTR _i$5[ebp], ax
  00051	eb 0c		 jmp	 SHORT $LN4@EfficacySt
$LN2@EfficacySt:
  00053	66 8b 45 f4	 mov	 ax, WORD PTR _i$5[ebp]
  00057	66 83 c0 01	 add	 ax, 1
  0005b	66 89 45 f4	 mov	 WORD PTR _i$5[ebp], ax
$LN4@EfficacySt:
  0005f	0f b7 45 f4	 movzx	 eax, WORD PTR _i$5[ebp]
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0006a	3b c2		 cmp	 eax, edx
  0006c	7d 7d		 jge	 SHORT $LN3@EfficacySt

; 3351 : 	{
; 3352 : 		//获取用户
; 3353 : 		IServerUserItem * pITableUserItem=GetTableUserItem(i);

  0006e	0f b7 45 f4	 movzx	 eax, WORD PTR _i$5[ebp]
  00072	50		 push	 eax
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00081	ff d0		 call	 eax
  00083	89 45 f0	 mov	 DWORD PTR _pITableUserItem$4[ebp], eax

; 3354 : 		if (pITableUserItem==NULL) continue;

  00086	83 7d f0 00	 cmp	 DWORD PTR _pITableUserItem$4[ebp], 0
  0008a	75 02		 jne	 SHORT $LN13@EfficacySt
  0008c	eb c5		 jmp	 SHORT $LN2@EfficacySt
$LN13@EfficacySt:

; 3355 : 
; 3356 : 		//用户统计
; 3357 : 		if (pITableUserItem!=NULL)

  0008e	83 7d f0 00	 cmp	 DWORD PTR _pITableUserItem$4[ebp], 0
  00092	74 52		 je	 SHORT $LN14@EfficacySt

; 3358 : 		{
; 3359 : 			//状态判断
; 3360 : 			if (pITableUserItem->IsClientReady()==false) return false;

  00094	8b 45 f0	 mov	 eax, DWORD PTR _pITableUserItem$4[ebp]
  00097	8b 10		 mov	 edx, DWORD PTR [eax]
  00099	8b 4d f0	 mov	 ecx, DWORD PTR _pITableUserItem$4[ebp]
  0009c	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  000a2	ff d0		 call	 eax
  000a4	0f b6 c8	 movzx	 ecx, al
  000a7	85 c9		 test	 ecx, ecx
  000a9	75 07		 jne	 SHORT $LN15@EfficacySt
  000ab	32 c0		 xor	 al, al
  000ad	e9 ac 01 00 00	 jmp	 $LN1@EfficacySt
$LN15@EfficacySt:

; 3361 : 			if ((wReadyChairID!=i)&&(pITableUserItem->GetUserStatus()!=US_READY)) return false;

  000b2	0f b7 45 08	 movzx	 eax, WORD PTR _wReadyChairID$[ebp]
  000b6	0f b7 4d f4	 movzx	 ecx, WORD PTR _i$5[ebp]
  000ba	3b c1		 cmp	 eax, ecx
  000bc	74 1c		 je	 SHORT $LN16@EfficacySt
  000be	8b 45 f0	 mov	 eax, DWORD PTR _pITableUserItem$4[ebp]
  000c1	8b 10		 mov	 edx, DWORD PTR [eax]
  000c3	8b 4d f0	 mov	 ecx, DWORD PTR _pITableUserItem$4[ebp]
  000c6	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000c9	ff d0		 call	 eax
  000cb	0f b6 c8	 movzx	 ecx, al
  000ce	83 f9 03	 cmp	 ecx, 3
  000d1	74 07		 je	 SHORT $LN16@EfficacySt
  000d3	32 c0		 xor	 al, al
  000d5	e9 84 01 00 00	 jmp	 $LN1@EfficacySt
$LN16@EfficacySt:

; 3362 : 
; 3363 : 			//用户计数
; 3364 : 			wReadyUserCount++;

  000da	66 8b 45 f8	 mov	 ax, WORD PTR _wReadyUserCount$[ebp]
  000de	66 83 c0 01	 add	 ax, 1
  000e2	66 89 45 f8	 mov	 WORD PTR _wReadyUserCount$[ebp], ax
$LN14@EfficacySt:

; 3365 : 		}
; 3366 : 	}

  000e6	e9 68 ff ff ff	 jmp	 $LN2@EfficacySt
$LN3@EfficacySt:

; 3367 : 
; 3368 : 	//开始处理
; 3369 : 	switch (m_cbStartMode)

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  000f1	88 4d a0	 mov	 BYTE PTR tv139[ebp], cl
  000f4	80 7d a0 00	 cmp	 BYTE PTR tv139[ebp], 0
  000f8	74 11		 je	 SHORT $LN17@EfficacySt
  000fa	80 7d a0 01	 cmp	 BYTE PTR tv139[ebp], 1
  000fe	74 58		 je	 SHORT $LN22@EfficacySt
  00100	80 7d a0 02	 cmp	 BYTE PTR tv139[ebp], 2
  00104	74 6f		 je	 SHORT $LN24@EfficacySt
  00106	e9 30 01 00 00	 jmp	 $LN30@EfficacySt
$LN17@EfficacySt:

; 3370 : 	{
; 3371 : 	case START_MODE_ALL_READY:			//所有准备
; 3372 : 		{
; 3373 : 			//数目判断
; 3374 : 		if(m_pGameServiceOption->wServerType==GAME_GENRE_PERSONAL && m_dwPersonalPlayCount >= 1 )

  0010b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00114	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00118	83 fa 10	 cmp	 edx, 16			; 00000010H
  0011b	75 24		 jne	 SHORT $LN18@EfficacySt
  0011d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00120	83 b8 20 10 00
	00 01		 cmp	 DWORD PTR [eax+4128], 1
  00127	72 18		 jb	 SHORT $LN18@EfficacySt

; 3375 : 		{
; 3376 : 			if (wReadyUserCount == m_nPersonalRoomPlayerCount)

  00129	0f b7 45 f8	 movzx	 eax, WORD PTR _wReadyUserCount$[ebp]
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	3b 81 a4 46 00
	00		 cmp	 eax, DWORD PTR [ecx+18084]
  00136	75 07		 jne	 SHORT $LN20@EfficacySt

; 3377 : 			{
; 3378 : 				return true ;

  00138	b0 01		 mov	 al, 1
  0013a	e9 1f 01 00 00	 jmp	 $LN1@EfficacySt
$LN20@EfficacySt:

; 3379 : 			}
; 3380 : 		}
; 3381 : 		else

  0013f	eb 10		 jmp	 SHORT $LN19@EfficacySt
$LN18@EfficacySt:

; 3382 : 		{
; 3383 : 			if (wReadyUserCount>=2L)

  00141	0f b7 45 f8	 movzx	 eax, WORD PTR _wReadyUserCount$[ebp]
  00145	83 f8 02	 cmp	 eax, 2
  00148	7c 07		 jl	 SHORT $LN19@EfficacySt

; 3384 : 			{
; 3385 : 				return true;

  0014a	b0 01		 mov	 al, 1
  0014c	e9 0d 01 00 00	 jmp	 $LN1@EfficacySt
$LN19@EfficacySt:

; 3386 : 			}
; 3387 : 		}
; 3388 : 
; 3389 : 		return false;

  00151	32 c0		 xor	 al, al
  00153	e9 06 01 00 00	 jmp	 $LN1@EfficacySt
$LN22@EfficacySt:

; 3390 : 		}
; 3391 : 	case START_MODE_FULL_READY:			//满人开始
; 3392 : 		{
; 3393 : 			//人数判断
; 3394 : 			if (wReadyUserCount==m_wChairCount) return true;

  00158	0f b7 45 f8	 movzx	 eax, WORD PTR _wReadyUserCount$[ebp]
  0015c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00163	3b c2		 cmp	 eax, edx
  00165	75 07		 jne	 SHORT $LN23@EfficacySt
  00167	b0 01		 mov	 al, 1
  00169	e9 f0 00 00 00	 jmp	 $LN1@EfficacySt
$LN23@EfficacySt:

; 3395 : 
; 3396 : 			return false;

  0016e	32 c0		 xor	 al, al
  00170	e9 e9 00 00 00	 jmp	 $LN1@EfficacySt
$LN24@EfficacySt:

; 3397 : 		}
; 3398 : 	case START_MODE_PAIR_READY:			//配对开始
; 3399 : 		{
; 3400 : 			//数目判断
; 3401 : 			if (wReadyUserCount==m_wChairCount) return true;

  00175	0f b7 45 f8	 movzx	 eax, WORD PTR _wReadyUserCount$[ebp]
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00180	3b c2		 cmp	 eax, edx
  00182	75 07		 jne	 SHORT $LN25@EfficacySt
  00184	b0 01		 mov	 al, 1
  00186	e9 d3 00 00 00	 jmp	 $LN1@EfficacySt
$LN25@EfficacySt:

; 3402 : 			if ((wReadyUserCount<2L)||(wReadyUserCount%2)!=0) return false;

  0018b	0f b7 45 f8	 movzx	 eax, WORD PTR _wReadyUserCount$[ebp]
  0018f	83 f8 02	 cmp	 eax, 2
  00192	7c 14		 jl	 SHORT $LN27@EfficacySt
  00194	0f b7 45 f8	 movzx	 eax, WORD PTR _wReadyUserCount$[ebp]
  00198	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  0019d	79 05		 jns	 SHORT $LN33@EfficacySt
  0019f	48		 dec	 eax
  001a0	83 c8 fe	 or	 eax, -2			; fffffffeH
  001a3	40		 inc	 eax
$LN33@EfficacySt:
  001a4	85 c0		 test	 eax, eax
  001a6	74 07		 je	 SHORT $LN26@EfficacySt
$LN27@EfficacySt:
  001a8	32 c0		 xor	 al, al
  001aa	e9 af 00 00 00	 jmp	 $LN1@EfficacySt
$LN26@EfficacySt:

; 3403 : 
; 3404 : 			//位置判断
; 3405 : 			for (WORD i=0;i<m_wChairCount/2;i++)

  001af	33 c0		 xor	 eax, eax
  001b1	66 89 45 ec	 mov	 WORD PTR _i$3[ebp], ax
  001b5	eb 0c		 jmp	 SHORT $LN9@EfficacySt
$LN7@EfficacySt:
  001b7	66 8b 45 ec	 mov	 ax, WORD PTR _i$3[ebp]
  001bb	66 83 c0 01	 add	 ax, 1
  001bf	66 89 45 ec	 mov	 WORD PTR _i$3[ebp], ax
$LN9@EfficacySt:
  001c3	0f b7 4d ec	 movzx	 ecx, WORD PTR _i$3[ebp]
  001c7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001ca	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  001ce	99		 cdq
  001cf	2b c2		 sub	 eax, edx
  001d1	d1 f8		 sar	 eax, 1
  001d3	3b c8		 cmp	 ecx, eax
  001d5	7d 60		 jge	 SHORT $LN8@EfficacySt

; 3406 : 			{
; 3407 : 				//获取用户
; 3408 : 				IServerUserItem * pICurrentUserItem=GetTableUserItem(i);

  001d7	0f b7 45 ec	 movzx	 eax, WORD PTR _i$3[ebp]
  001db	50		 push	 eax
  001dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001df	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e4	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  001ea	ff d0		 call	 eax
  001ec	89 45 e8	 mov	 DWORD PTR _pICurrentUserItem$2[ebp], eax

; 3409 : 				IServerUserItem * pITowardsUserItem=GetTableUserItem(i+m_wChairCount/2);

  001ef	0f b7 4d ec	 movzx	 ecx, WORD PTR _i$3[ebp]
  001f3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001f6	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  001fa	99		 cdq
  001fb	2b c2		 sub	 eax, edx
  001fd	d1 f8		 sar	 eax, 1
  001ff	03 c8		 add	 ecx, eax
  00201	51		 push	 ecx
  00202	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 10		 mov	 edx, DWORD PTR [eax]
  00207	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020a	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00210	ff d0		 call	 eax
  00212	89 45 e4	 mov	 DWORD PTR _pITowardsUserItem$1[ebp], eax

; 3410 : 
; 3411 : 				//位置过滤
; 3412 : 				if ((pICurrentUserItem==NULL)&&(pITowardsUserItem!=NULL)) return false;

  00215	83 7d e8 00	 cmp	 DWORD PTR _pICurrentUserItem$2[ebp], 0
  00219	75 0a		 jne	 SHORT $LN28@EfficacySt
  0021b	83 7d e4 00	 cmp	 DWORD PTR _pITowardsUserItem$1[ebp], 0
  0021f	74 04		 je	 SHORT $LN28@EfficacySt
  00221	32 c0		 xor	 al, al
  00223	eb 39		 jmp	 SHORT $LN1@EfficacySt
$LN28@EfficacySt:

; 3413 : 				if ((pICurrentUserItem!=NULL)&&(pITowardsUserItem==NULL)) return false;

  00225	83 7d e8 00	 cmp	 DWORD PTR _pICurrentUserItem$2[ebp], 0
  00229	74 0a		 je	 SHORT $LN29@EfficacySt
  0022b	83 7d e4 00	 cmp	 DWORD PTR _pITowardsUserItem$1[ebp], 0
  0022f	75 04		 jne	 SHORT $LN29@EfficacySt
  00231	32 c0		 xor	 al, al
  00233	eb 29		 jmp	 SHORT $LN1@EfficacySt
$LN29@EfficacySt:

; 3414 : 			}

  00235	eb 80		 jmp	 SHORT $LN7@EfficacySt
$LN8@EfficacySt:

; 3415 : 
; 3416 : 			return true;

  00237	b0 01		 mov	 al, 1
  00239	eb 23		 jmp	 SHORT $LN1@EfficacySt
$LN30@EfficacySt:

; 3417 : 		}
; 3418 : 	default:
; 3419 : 		{
; 3420 : 			ASSERT(FALSE);

  0023b	33 c0		 xor	 eax, eax
  0023d	75 19		 jne	 SHORT $LN32@EfficacySt
  0023f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??EfficacyStartGame@CTableFrame@@QAE_NG@Z@4JA
  00245	83 c1 50	 add	 ecx, 80			; 00000050H
  00248	51		 push	 ecx
  00249	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0024e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00253	85 c0		 test	 eax, eax
  00255	74 01		 je	 SHORT $LN32@EfficacySt
  00257	cc		 int	 3
$LN32@EfficacySt:

; 3421 : 			return false;

  00258	32 c0		 xor	 al, al
  0025a	eb 02		 jmp	 SHORT $LN1@EfficacySt

; 3422 : 		}
; 3423 : 	}
; 3424 : 
; 3425 : 	return false;

  0025c	32 c0		 xor	 al, al
$LN1@EfficacySt:

; 3426 : }

  0025e	5f		 pop	 edi
  0025f	5e		 pop	 esi
  00260	5b		 pop	 ebx
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c2 04 00	 ret	 4
?EfficacyStartGame@CTableFrame@@QAE_NG@Z ENDP		; CTableFrame::EfficacyStartGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z
_TEXT	SEGMENT
_wHeadSize$ = -276					; size = 2
_wDataSize$ = -272					; size = 2
_RequestFailure$ = -268					; size = 260
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pszDescribe$ = 12					; size = 4
_lErrorCode$ = 16					; size = 4
?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z PROC ; CTableFrame::SendRequestFailure, COMDAT
; _this$ = ecx

; 3321 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3322 : 	//变量定义
; 3323 : 	CMD_GR_RequestFailure RequestFailure;
; 3324 : 	ZeroMemory(&RequestFailure,sizeof(RequestFailure));

  00019	68 04 01 00 00	 push	 260			; 00000104H
  0001e	6a 00		 push	 0
  00020	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _RequestFailure$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3325 : 
; 3326 : 	//构造数据
; 3327 : 	RequestFailure.lErrorCode=lErrorCode;

  0002f	8b 45 10	 mov	 eax, DWORD PTR _lErrorCode$[ebp]
  00032	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _RequestFailure$[ebp], eax

; 3328 : 	lstrcpyn(RequestFailure.szDescribeString,pszDescribe,CountArray(RequestFailure.szDescribeString));

  00038	68 00 01 00 00	 push	 256			; 00000100H
  0003d	8b 45 0c	 mov	 eax, DWORD PTR _pszDescribe$[ebp]
  00040	50		 push	 eax
  00041	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _RequestFailure$[ebp+4]
  00047	51		 push	 ecx
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3329 : 
; 3330 : 	//发送数据
; 3331 : 	WORD wDataSize=CountStringBuffer(RequestFailure.szDescribeString);

  0004e	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _RequestFailure$[ebp+4]
  00054	50		 push	 eax
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0005b	83 c0 01	 add	 eax, 1
  0005e	66 89 85 f0 fe
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 3332 : 	WORD wHeadSize=sizeof(RequestFailure)-sizeof(RequestFailure.szDescribeString);

  00065	b8 04 00 00 00	 mov	 eax, 4
  0006a	66 89 85 ec fe
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 3333 : 	m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_REQUEST_FAILURE,&RequestFailure,wHeadSize+wDataSize);

  00071	0f b7 85 ec fe
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00078	0f b7 8d f0 fe
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0007f	03 c1		 add	 eax, ecx
  00081	50		 push	 eax
  00082	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _RequestFailure$[ebp]
  00088	52		 push	 edx
  00089	6a 67		 push	 103			; 00000067H
  0008b	6a 03		 push	 3
  0008d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  0009a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 12		 mov	 edx, DWORD PTR [edx]
  0009f	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000a5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000a8	ff d0		 call	 eax

; 3334 : 
; 3335 : 	return true;

  000aa	b0 01		 mov	 al, 1

; 3336 : }

  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b2	33 cd		 xor	 ecx, ebp
  000b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 0c 00	 ret	 12			; 0000000cH
?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ENDP ; CTableFrame::SendRequestFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendTableStatus@CTableFrame@@QAE_NXZ
_TEXT	SEGMENT
tv91 = -80						; size = 4
tv79 = -80						; size = 4
_TableStatus$ = -12					; size = 8
_this$ = -4						; size = 4
?SendTableStatus@CTableFrame@@QAE_NXZ PROC		; CTableFrame::SendTableStatus, COMDAT
; _this$ = ecx

; 3299 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3300 : 	//变量定义
; 3301 : 	CMD_GR_TableStatus TableStatus;
; 3302 : 	ZeroMemory(&TableStatus,sizeof(TableStatus));

  0000c	6a 08		 push	 8
  0000e	6a 00		 push	 0
  00010	8d 45 f4	 lea	 eax, DWORD PTR _TableStatus$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3303 : 
; 3304 : 	//构造数据
; 3305 : 	TableStatus.wTableID=m_wTableID;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00023	66 89 4d f4	 mov	 WORD PTR _TableStatus$[ebp], cx

; 3306 : 	TableStatus.TableStatus.lCellScore=m_lCellScore;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 88 20 07 00
	00		 mov	 ecx, DWORD PTR [eax+1824]
  00030	89 4d f8	 mov	 DWORD PTR _TableStatus$[ebp+4], ecx

; 3307 : 	TableStatus.TableStatus.cbTableLock=IsTableLocked()?TRUE:FALSE;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0003e	ff d0		 call	 eax
  00040	0f b6 c8	 movzx	 ecx, al
  00043	85 c9		 test	 ecx, ecx
  00045	74 09		 je	 SHORT $LN3@SendTableS
  00047	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
  0004e	eb 07		 jmp	 SHORT $LN4@SendTableS
$LN3@SendTableS:
  00050	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN4@SendTableS:
  00057	8a 55 b0	 mov	 dl, BYTE PTR tv79[ebp]
  0005a	88 55 f6	 mov	 BYTE PTR _TableStatus$[ebp+2], dl

; 3308 : 	TableStatus.TableStatus.cbPlayStatus=IsTableStarted()?TRUE:FALSE;

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00068	ff d0		 call	 eax
  0006a	0f b6 c8	 movzx	 ecx, al
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 09		 je	 SHORT $LN5@SendTableS
  00071	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv91[ebp], 1
  00078	eb 07		 jmp	 SHORT $LN6@SendTableS
$LN5@SendTableS:
  0007a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN6@SendTableS:
  00081	8a 55 b0	 mov	 dl, BYTE PTR tv91[ebp]
  00084	88 55 f7	 mov	 BYTE PTR _TableStatus$[ebp+3], dl

; 3309 : 
; 3310 : 	//电脑数据
; 3311 : 	m_pIMainServiceFrame->SendData(BG_COMPUTER,MDM_GR_STATUS,SUB_GR_TABLE_STATUS,&TableStatus,sizeof(TableStatus));

  00087	6a 08		 push	 8
  00089	8d 45 f4	 lea	 eax, DWORD PTR _TableStatus$[ebp]
  0008c	50		 push	 eax
  0008d	6a 65		 push	 101			; 00000065H
  0008f	6a 04		 push	 4
  00091	6a 02		 push	 2
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 12		 mov	 edx, DWORD PTR [edx]
  000a1	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000a7	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000aa	ff d0		 call	 eax

; 3312 : 
; 3313 : 	//手机数据
; 3314 : 	m_pIMainServiceFrame->SendData(BG_MOBILE,MDM_GR_STATUS,SUB_GR_TABLE_STATUS,&TableStatus,sizeof(TableStatus));

  000ac	6a 08		 push	 8
  000ae	8d 45 f4	 lea	 eax, DWORD PTR _TableStatus$[ebp]
  000b1	50		 push	 eax
  000b2	6a 65		 push	 101			; 00000065H
  000b4	6a 04		 push	 4
  000b6	6a 01		 push	 1
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  000c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 12		 mov	 edx, DWORD PTR [edx]
  000c6	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000cc	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000cf	ff d0		 call	 eax

; 3315 : 
; 3316 : 	return true;

  000d1	b0 01		 mov	 al, 1

; 3317 : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
?SendTableStatus@CTableFrame@@QAE_NXZ ENDP		; CTableFrame::SendTableStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv1593 = -16564						; size = 8
tv1590 = -16556						; size = 8
tv1537 = -16552						; size = 4
tv1133 = -16552						; size = 4
tv406 = -16552						; size = 4
tv283 = -16552						; size = 4
tv95 = -16552						; size = 4
tv1215 = -16550						; size = 2
tv1006 = -16550						; size = 2
tv863 = -16550						; size = 2
tv1337 = -16549						; size = 1
tv275 = -16549						; size = 1
_pILookonUserItem$1 = -16036				; size = 4
_i$2 = -16032						; size = 4
_LookonStatus$3 = -16027				; size = 1
_bAllowLookon$4 = -16026				; size = 1
_LookonStatus$5 = -16025				; size = 1
_pILookonUserItem$6 = -16024				; size = 4
_i$7 = -16020						; size = 4
_pLookonConfig$8 = -16016				; size = 4
_pIServerUserItem$9 = -16012				; size = 4
_wEnumIndex$10 = -16008					; size = 2
_pIServerUserItem$11 = -16004				; size = 4
_i$12 = -16000						; size = 2
_wSendSize$13 = -15996					; size = 2
_wHeadSize$14 = -15992					; size = 2
_UserVoice$15 = -15988					; size = 15012
_pUserVoice$16 = -976					; size = 4
_pIServerUserItem$17 = -972				; size = 4
_wEnumIndex$18 = -968					; size = 2
_pIServerUserItem$19 = -964				; size = 4
_i$20 = -960						; size = 2
_UserExpression$21 = -956				; size = 10
_pUserExpression$22 = -944				; size = 4
_pIServerUserItem$23 = -940				; size = 4
_wEnumIndex$24 = -936					; size = 2
_pIServerUserItem$25 = -932				; size = 4
_i$26 = -928						; size = 2
_wSendSize$27 = -924					; size = 2
_wHeadSize$28 = -920					; size = 2
_UserChat$29 = -916					; size = 142
_pUserChat$30 = -772					; size = 4
_pszMessage$31 = -768					; size = 4
_cbUserStatus$32 = -761					; size = 1
_wChairID$33 = -760					; size = 2
_i$34 = -756						; size = 4
_dealCancelInfo$35 = -752				; size = 14
_bSendSecret$36 = -733					; size = 1
_szMessage$37 = -732					; size = 128
_PersonalTableTip$38 = -604				; size = 46
_GameStatus$39 = -556					; size = 2
_wOffLineCount$40 = -552				; size = 2
_cbUserStatus$41 = -545					; size = 1
_wChairID$42 = -544					; size = 2
_pGameOption$43 = -540					; size = 4
_personalRoomMessage$44 = -536				; size = 261
_personalRoomMessage$45 = -272				; size = 261
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_pIServerUserItem$ = 20					; size = 4
?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z PROC ; CTableFrame::OnEventSocketFrame, COMDAT
; _this$ = ecx

; 1719 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 b4 40 00 00	 mov	 eax, 16564		; 000040b4H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1720 : 	//游戏处理
; 1721 : 	if (wSubCmdID >= SUB_GF_FRAME_MESSAG_GAME_MIN && wSubCmdID <= SUB_GF_FRAME_MESSAG_GAME_MAX)

  0001d	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00021	3d 58 02 00 00	 cmp	 eax, 600		; 00000258H
  00026	7c 3b		 jl	 SHORT $LN31@OnEventSoc
  00028	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0002c	3d bc 02 00 00	 cmp	 eax, 700		; 000002bcH
  00031	7f 30		 jg	 SHORT $LN31@OnEventSoc

; 1722 : 		return m_pITableFrameSink->OnFrameMessage(wSubCmdID, pData, wDataSize, pIServerUserItem);

  00033	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00036	50		 push	 eax
  00037	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0003b	51		 push	 ecx
  0003c	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0003f	52		 push	 edx
  00040	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00044	50		 push	 eax
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 12		 mov	 edx, DWORD PTR [edx]
  00053	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00059	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0005c	ff d0		 call	 eax
  0005e	e9 6b 18 00 00	 jmp	 $LN1@OnEventSoc
$LN31@OnEventSoc:

; 1723 : 
; 1724 : 	//游戏处理
; 1725 : 	if (m_pITableFrameSink->OnFrameMessage(wSubCmdID,pData,wDataSize,pIServerUserItem)==true) return true;

  00063	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00066	50		 push	 eax
  00067	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0006f	52		 push	 edx
  00070	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00074	50		 push	 eax
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  0007e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 12		 mov	 edx, DWORD PTR [edx]
  00083	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00089	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0008c	ff d0		 call	 eax
  0008e	0f b6 c8	 movzx	 ecx, al
  00091	83 f9 01	 cmp	 ecx, 1
  00094	75 07		 jne	 SHORT $LN32@OnEventSoc
  00096	b0 01		 mov	 al, 1
  00098	e9 31 18 00 00	 jmp	 $LN1@OnEventSoc
$LN32@OnEventSoc:

; 1726 : 
; 1727 : 	//默认处理
; 1728 : 	switch (wSubCmdID)

  0009d	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000a1	89 85 58 bf ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000a7	8b 8d 58 bf ff
	ff		 mov	 ecx, DWORD PTR tv95[ebp]
  000ad	83 e9 01	 sub	 ecx, 1
  000b0	89 8d 58 bf ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000b6	83 bd 58 bf ff
	ff 0b		 cmp	 DWORD PTR tv95[ebp], 11	; 0000000bH
  000bd	0f 87 09 18 00
	00		 ja	 $LN2@OnEventSoc
  000c3	8b 95 58 bf ff
	ff		 mov	 edx, DWORD PTR tv95[ebp]
  000c9	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN137@OnEventSoc[edx*4]
$LN33@OnEventSoc:

; 1729 : 	{
; 1730 : 	case SUB_GF_GAME_OPTION:	//游戏配置
; 1731 : 		{
; 1732 : 			//效验参数
; 1733 : 			ASSERT(wDataSize==sizeof(CMD_GF_GameOption));

  000d0	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000d4	83 f8 09	 cmp	 eax, 9
  000d7	74 19		 je	 SHORT $LN109@OnEventSoc
  000d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  000df	83 c1 0e	 add	 ecx, 14			; 0000000eH
  000e2	51		 push	 ecx
  000e3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000e8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ed	85 c0		 test	 eax, eax
  000ef	74 01		 je	 SHORT $LN109@OnEventSoc
  000f1	cc		 int	 3
$LN109@OnEventSoc:

; 1734 : 			if (wDataSize!=sizeof(CMD_GF_GameOption)) return false;

  000f2	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000f6	83 f8 09	 cmp	 eax, 9
  000f9	74 07		 je	 SHORT $LN34@OnEventSoc
  000fb	32 c0		 xor	 al, al
  000fd	e9 cc 17 00 00	 jmp	 $LN1@OnEventSoc
$LN34@OnEventSoc:

; 1735 : 
; 1736 : 			if (m_pGameServiceOption->lCellScore < 1)

  00102	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00105	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0010b	83 79 08 01	 cmp	 DWORD PTR [ecx+8], 1
  0010f	7d 10		 jge	 SHORT $LN35@OnEventSoc

; 1737 : 			{
; 1738 : 				m_pGameServiceOption->lCellScore  = 1;

  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0011a	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
$LN35@OnEventSoc:

; 1739 : 			}
; 1740 : 
; 1741 : 			if (((m_pGameServiceOption->lMinTableScore!=0L) && pIServerUserItem->GetUserScore()<m_pGameServiceOption->lMinTableScore * m_lCellScore/m_pGameServiceOption->lCellScore) && ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0))

  00121	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00124	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0012a	89 8d 58 bf ff
	ff		 mov	 DWORD PTR tv1537[ebp], ecx
  00130	8b 95 58 bf ff
	ff		 mov	 edx, DWORD PTR tv1537[ebp]
  00136	8b 85 58 bf ff
	ff		 mov	 eax, DWORD PTR tv1537[ebp]
  0013c	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0013f	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  00142	0f 84 5c 01 00
	00		 je	 $LN36@OnEventSoc
  00148	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0014b	8b 10		 mov	 edx, DWORD PTR [eax]
  0014d	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00150	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00156	ff d0		 call	 eax
  00158	8b f0		 mov	 esi, eax
  0015a	8b fa		 mov	 edi, edx
  0015c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	8b 89 f0 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4080]
  00165	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00168	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  0016e	99		 cdq
  0016f	52		 push	 edx
  00170	50		 push	 eax
  00171	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00174	50		 push	 eax
  00175	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00178	51		 push	 ecx
  00179	e8 00 00 00 00	 call	 __allmul
  0017e	8b c8		 mov	 ecx, eax
  00180	8b da		 mov	 ebx, edx
  00182	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00185	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  0018b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0018e	99		 cdq
  0018f	52		 push	 edx
  00190	50		 push	 eax
  00191	53		 push	 ebx
  00192	51		 push	 ecx
  00193	e8 00 00 00 00	 call	 __alldiv
  00198	89 b5 54 bf ff
	ff		 mov	 DWORD PTR tv1590[ebp], esi
  0019e	89 bd 58 bf ff
	ff		 mov	 DWORD PTR tv1590[ebp+4], edi
  001a4	89 85 4c bf ff
	ff		 mov	 DWORD PTR tv1593[ebp], eax
  001aa	89 95 50 bf ff
	ff		 mov	 DWORD PTR tv1593[ebp+4], edx
  001b0	8b 8d 58 bf ff
	ff		 mov	 ecx, DWORD PTR tv1590[ebp+4]
  001b6	3b 8d 50 bf ff
	ff		 cmp	 ecx, DWORD PTR tv1593[ebp+4]
  001bc	0f 8f e2 00 00
	00		 jg	 $LN36@OnEventSoc
  001c2	7c 12		 jl	 SHORT $LN136@OnEventSoc
  001c4	8b 95 54 bf ff
	ff		 mov	 edx, DWORD PTR tv1590[ebp]
  001ca	3b 95 4c bf ff
	ff		 cmp	 edx, DWORD PTR tv1593[ebp]
  001d0	0f 83 ce 00 00
	00		 jae	 $LN36@OnEventSoc
$LN136@OnEventSoc:
  001d6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d9	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001df	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  001e3	83 e2 10	 and	 edx, 16			; 00000010H
  001e6	0f 84 b8 00 00
	00		 je	 $LN36@OnEventSoc

; 1742 : 			{
; 1743 : 				//构造提示
; 1744 : 				Personal_Room_Message personalRoomMessage;
; 1745 : 				if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  001ec	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  001f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f4	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001fa	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00200	51		 push	 ecx
  00201	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00207	85 c0		 test	 eax, eax
  00209	0f 85 95 00 00
	00		 jne	 $LN36@OnEventSoc

; 1746 : 				{
; 1747 : 					_sntprintf(personalRoomMessage.szMessage,CountArray(personalRoomMessage.szMessage),TEXT("您的游戏币少于 ") SCORE_STRING TEXT("，不能继续游戏！"),m_pGameServiceOption->lMinTableScore* m_lCellScore/m_pGameServiceOption->lCellScore);

  0020f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00212	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00218	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0021b	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  00221	99		 cdq
  00222	52		 push	 edx
  00223	50		 push	 eax
  00224	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00227	50		 push	 eax
  00228	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0022b	51		 push	 ecx
  0022c	e8 00 00 00 00	 call	 __allmul
  00231	8b c8		 mov	 ecx, eax
  00233	8b f2		 mov	 esi, edx
  00235	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00238	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  0023e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00241	99		 cdq
  00242	52		 push	 edx
  00243	50		 push	 eax
  00244	56		 push	 esi
  00245	51		 push	 ecx
  00246	e8 00 00 00 00	 call	 __alldiv
  0024b	52		 push	 edx
  0024c	50		 push	 eax
  0024d	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@
  00252	68 04 01 00 00	 push	 260			; 00000104H
  00257	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _personalRoomMessage$45[ebp]
  0025d	51		 push	 ecx
  0025e	e8 00 00 00 00	 call	 __snprintf
  00263	83 c4 14	 add	 esp, 20			; 00000014H

; 1748 : 					personalRoomMessage.cbMessageType = 1;

  00266	c6 45 f4 01	 mov	 BYTE PTR _personalRoomMessage$45[ebp+260], 1

; 1749 : 					m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_PERSONAL_TABLE,SUB_GF_PERSONAL_MESSAGE,&personalRoomMessage,sizeof(personalRoomMessage));

  0026a	68 05 01 00 00	 push	 261			; 00000105H
  0026f	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$45[ebp]
  00275	50		 push	 eax
  00276	68 f5 01 00 00	 push	 501			; 000001f5H
  0027b	68 d2 00 00 00	 push	 210			; 000000d2H
  00280	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00283	51		 push	 ecx
  00284	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00287	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  0028d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00290	8b 10		 mov	 edx, DWORD PTR [eax]
  00292	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00298	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0029b	ff d0		 call	 eax

; 1750 : 					return true;

  0029d	b0 01		 mov	 al, 1
  0029f	e9 2a 16 00 00	 jmp	 $LN1@OnEventSoc
$LN36@OnEventSoc:

; 1751 : 				}
; 1752 : 
; 1753 : 			}
; 1754 : 
; 1755 : 			if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  002a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a7	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  002ad	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  002b1	83 e2 10	 and	 edx, 16			; 00000010H
  002b4	74 76		 je	 SHORT $LN38@OnEventSoc

; 1756 : 			{
; 1757 : 				if(m_bPersonalLock == false)

  002b6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002b9	0f b6 88 9a 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4506]
  002c0	85 c9		 test	 ecx, ecx
  002c2	75 68		 jne	 SHORT $LN38@OnEventSoc

; 1758 : 				{
; 1759 : 					//发送信息
; 1760 : 					SendRequestFailure(pIServerUserItem,TEXT("房间还未创建，无法进入！"),REQUEST_FAILURE_NORMAL);

  002c4	6a 00		 push	 0
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BFEPDGOK@?$LH?$LP?$LM?d?$LL?$LJ?N?$LE?$LE?$LE?$LN?$KI?$KD?$KM?N?$NO?$LH?$KI?$LN?x?H?k?$KD?$KB@
  002cb	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002ce	50		 push	 eax
  002cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d2	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 1761 : 
; 1762 : 					Personal_Room_Message personalRoomMessage;
; 1763 : 					lstrcpyn(personalRoomMessage.szMessage, TEXT("房间已经解散") , sizeof(TCHAR) * 7);

  002d7	6a 07		 push	 7
  002d9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PEOJOPIF@?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC@
  002de	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$44[ebp]
  002e4	50		 push	 eax
  002e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1764 : 					personalRoomMessage.cbMessageType = 1;

  002eb	c6 85 ec fe ff
	ff 01		 mov	 BYTE PTR _personalRoomMessage$44[ebp+260], 1

; 1765 : 					m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_PERSONAL_TABLE,SUB_GF_PERSONAL_MESSAGE,&personalRoomMessage,sizeof(personalRoomMessage));

  002f2	68 05 01 00 00	 push	 261			; 00000105H
  002f7	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$44[ebp]
  002fd	50		 push	 eax
  002fe	68 f5 01 00 00	 push	 501			; 000001f5H
  00303	68 d2 00 00 00	 push	 210			; 000000d2H
  00308	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0030b	51		 push	 ecx
  0030c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0030f	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00315	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00318	8b 10		 mov	 edx, DWORD PTR [eax]
  0031a	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00320	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00323	ff d0		 call	 eax

; 1766 : 					return true;

  00325	b0 01		 mov	 al, 1
  00327	e9 a2 15 00 00	 jmp	 $LN1@OnEventSoc
$LN38@OnEventSoc:

; 1767 : 				}
; 1768 : 			}
; 1769 : 
; 1770 : 			//变量定义
; 1771 : 			CMD_GF_GameOption * pGameOption=(CMD_GF_GameOption *)pData;

  0032c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0032f	89 85 e4 fd ff
	ff		 mov	 DWORD PTR _pGameOption$43[ebp], eax

; 1772 : 
; 1773 : 			//获取属性
; 1774 : 			WORD wChairID=pIServerUserItem->GetChairID();

  00335	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00338	8b 10		 mov	 edx, DWORD PTR [eax]
  0033a	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0033d	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00340	ff d0		 call	 eax
  00342	66 89 85 e0 fd
	ff ff		 mov	 WORD PTR _wChairID$42[ebp], ax

; 1775 : 			BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  00349	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0034c	8b 10		 mov	 edx, DWORD PTR [eax]
  0034e	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00351	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00354	ff d0		 call	 eax
  00356	88 85 df fd ff
	ff		 mov	 BYTE PTR _cbUserStatus$41[ebp], al

; 1776 : 
; 1777 : 			//断线清理
; 1778 : 			if ((cbUserStatus!=US_LOOKON)&&((m_dwOffLineTime[wChairID]!=0L)))

  0035c	0f b6 85 df fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$41[ebp]
  00363	83 f8 04	 cmp	 eax, 4
  00366	74 67		 je	 SHORT $LN40@OnEventSoc
  00368	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$42[ebp]
  0036f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00372	83 bc 81 70 09
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+2416], 0
  0037a	74 53		 je	 SHORT $LN40@OnEventSoc

; 1779 : 			{
; 1780 : 				//设置变量
; 1781 : 				m_dwOffLineTime[wChairID]=0L;

  0037c	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$42[ebp]
  00383	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00386	c7 84 81 70 09
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+2416], 0

; 1782 : 
; 1783 : 				//删除时间
; 1784 : 				WORD wOffLineCount=GetOffLineUserCount();

  00391	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00394	e8 00 00 00 00	 call	 ?GetOffLineUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetOffLineUserCount
  00399	66 89 85 d8 fd
	ff ff		 mov	 WORD PTR _wOffLineCount$40[ebp], ax

; 1785 : 				if (wOffLineCount==0)

  003a0	0f b7 85 d8 fd
	ff ff		 movzx	 eax, WORD PTR _wOffLineCount$40[ebp]
  003a7	85 c0		 test	 eax, eax
  003a9	75 24		 jne	 SHORT $LN40@OnEventSoc

; 1786 : 				{
; 1787 : 					KillGameTimer(IDI_OFF_LINE);

  003ab	6a 15		 push	 21			; 00000015H
  003ad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003b0	8b 10		 mov	 edx, DWORD PTR [eax]
  003b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003b5	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  003bb	ff d0		 call	 eax

; 1788 : 					KillGameTimer(IDI_PERSONAL_BEFORE_BEGAIN_TIME);

  003bd	6a 2b		 push	 43			; 0000002bH
  003bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c2	8b 10		 mov	 edx, DWORD PTR [eax]
  003c4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c7	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  003cd	ff d0		 call	 eax
$LN40@OnEventSoc:

; 1789 : 				}
; 1790 : 			}
; 1791 : 
; 1792 : 			//设置状态
; 1793 : 			pIServerUserItem->SetClientReady(true);

  003cf	6a 01		 push	 1
  003d1	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003d4	8b 10		 mov	 edx, DWORD PTR [eax]
  003d6	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003d9	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  003df	ff d0		 call	 eax

; 1794 : 			if (cbUserStatus!=US_LOOKON) m_bAllowLookon[wChairID]=pGameOption->cbAllowLookon?true:false;

  003e1	0f b6 85 df fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$41[ebp]
  003e8	83 f8 04	 cmp	 eax, 4
  003eb	74 31		 je	 SHORT $LN42@OnEventSoc
  003ed	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR _pGameOption$43[ebp]
  003f3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003f6	85 c9		 test	 ecx, ecx
  003f8	74 09		 je	 SHORT $LN110@OnEventSoc
  003fa	c6 85 5b bf ff
	ff 01		 mov	 BYTE PTR tv275[ebp], 1
  00401	eb 07		 jmp	 SHORT $LN111@OnEventSoc
$LN110@OnEventSoc:
  00403	c6 85 5b bf ff
	ff 00		 mov	 BYTE PTR tv275[ebp], 0
$LN111@OnEventSoc:
  0040a	0f b7 95 e0 fd
	ff ff		 movzx	 edx, WORD PTR _wChairID$42[ebp]
  00411	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00414	8a 8d 5b bf ff
	ff		 mov	 cl, BYTE PTR tv275[ebp]
  0041a	88 4c 10 14	 mov	 BYTE PTR [eax+edx+20], cl
$LN42@OnEventSoc:

; 1795 : 
; 1796 : 			//发送状态
; 1797 : 			CMD_GF_GameStatus GameStatus;
; 1798 : 			GameStatus.cbGameStatus=m_cbGameStatus;

  0041e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00421	8a 88 24 07 00
	00		 mov	 cl, BYTE PTR [eax+1828]
  00427	88 8d d4 fd ff
	ff		 mov	 BYTE PTR _GameStatus$39[ebp], cl

; 1799 : 			GameStatus.cbAllowLookon=m_bAllowLookon[wChairID]?TRUE:FALSE;

  0042d	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$42[ebp]
  00434	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00437	0f b6 54 01 14	 movzx	 edx, BYTE PTR [ecx+eax+20]
  0043c	85 d2		 test	 edx, edx
  0043e	74 0c		 je	 SHORT $LN112@OnEventSoc
  00440	c7 85 58 bf ff
	ff 01 00 00 00	 mov	 DWORD PTR tv283[ebp], 1
  0044a	eb 0a		 jmp	 SHORT $LN113@OnEventSoc
$LN112@OnEventSoc:
  0044c	c7 85 58 bf ff
	ff 00 00 00 00	 mov	 DWORD PTR tv283[ebp], 0
$LN113@OnEventSoc:
  00456	8a 85 58 bf ff
	ff		 mov	 al, BYTE PTR tv283[ebp]
  0045c	88 85 d5 fd ff
	ff		 mov	 BYTE PTR _GameStatus$39[ebp+1], al

; 1800 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_GAME_STATUS,&GameStatus,sizeof(GameStatus));

  00462	6a 02		 push	 2
  00464	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _GameStatus$39[ebp]
  0046a	50		 push	 eax
  0046b	6a 64		 push	 100			; 00000064H
  0046d	6a 64		 push	 100			; 00000064H
  0046f	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00472	51		 push	 ecx
  00473	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00476	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  0047c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0047f	8b 10		 mov	 edx, DWORD PTR [eax]
  00481	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00487	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0048a	ff d0		 call	 eax

; 1801 : 
; 1802 : 			//提示信息
; 1803 : 			CMD_GR_PersonalTableTip PersonalTableTip;
; 1804 : 			ZeroMemory(&PersonalTableTip, sizeof(CMD_GR_PersonalTableTip));

  0048c	6a 2e		 push	 46			; 0000002eH
  0048e	6a 00		 push	 0
  00490	8d 85 a4 fd ff
	ff		 lea	 eax, DWORD PTR _PersonalTableTip$38[ebp]
  00496	50		 push	 eax
  00497	e8 00 00 00 00	 call	 _memset
  0049c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1805 : 
; 1806 : 			PersonalTableTip.dwTableOwnerUserID = m_dwTableOwnerID;

  0049f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004a2	8b 88 40 07 00
	00		 mov	 ecx, DWORD PTR [eax+1856]
  004a8	89 8d a4 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp], ecx

; 1807 : 			PersonalTableTip.dwDrawCountLimit = m_dwDrawCountLimit;

  004ae	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004b1	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  004b7	89 8d a8 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+4], ecx

; 1808 : 			PersonalTableTip.dwDrawTimeLimit = m_dwDrawTimeLimit;

  004bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004c0	8b 88 1c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4124]
  004c6	89 8d ac fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+8], ecx

; 1809 : 			PersonalTableTip.dwPlayCount = m_dwPersonalPlayCount;

  004cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004cf	8b 88 20 10 00
	00		 mov	 ecx, DWORD PTR [eax+4128]
  004d5	89 8d b0 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+12], ecx

; 1810 : 			PersonalTableTip.dwPlayTime = (DWORD)time(NULL) - m_dwTimeBegin;

  004db	6a 00		 push	 0
  004dd	e8 00 00 00 00	 call	 _time
  004e2	83 c4 04	 add	 esp, 4
  004e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e8	2b 81 30 10 00
	00		 sub	 eax, DWORD PTR [ecx+4144]
  004ee	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+16], eax

; 1811 : 			PersonalTableTip.lCellScore = m_lCellScore;

  004f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004f7	8b 80 20 07 00
	00		 mov	 eax, DWORD PTR [eax+1824]
  004fd	99		 cdq
  004fe	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+20], eax
  00504	89 95 bc fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+24], edx

; 1812 : 			PersonalTableTip.lIniScore = m_lIniScore;

  0050a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0050d	8b 88 28 10 00
	00		 mov	 ecx, DWORD PTR [eax+4136]
  00513	89 8d c0 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+28], ecx
  00519	8b 90 2c 10 00
	00		 mov	 edx, DWORD PTR [eax+4140]
  0051f	89 95 c4 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+32], edx

; 1813 : 			PersonalTableTip.dwPersonalRoomID  = m_dwPersonalRoomID;

  00525	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00528	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  0052e	89 8d c8 fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+36], ecx

; 1814 : 			PersonalTableTip.cbIsJoinGame = m_PersonalTableParameter.cbIsJoinGame;

  00534	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00537	8a 88 87 44 00
	00		 mov	 cl, BYTE PTR [eax+17543]
  0053d	88 8d cc fd ff
	ff		 mov	 BYTE PTR _PersonalTableTip$38[ebp+40], cl

; 1815 : 			PersonalTableTip.bRoomPwd = IsTableLocked();

  00543	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00546	8b 10		 mov	 edx, DWORD PTR [eax]
  00548	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0054b	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0054e	ff d0		 call	 eax
  00550	0f b6 c8	 movzx	 ecx, al
  00553	89 8d ce fd ff
	ff		 mov	 DWORD PTR _PersonalTableTip$38[ebp+42], ecx

; 1816 : 
; 1817 : 			//如果使用的是金币数据库
; 1818 : 			if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  00559	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  0055e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00561	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00567	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0056d	51		 push	 ecx
  0056e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00574	85 c0		 test	 eax, eax
  00576	75 09		 jne	 SHORT $LN43@OnEventSoc

; 1819 : 			{
; 1820 : 				PersonalTableTip.cbIsGoldOrGameScore = 0;

  00578	c6 85 cd fd ff
	ff 00		 mov	 BYTE PTR _PersonalTableTip$38[ebp+41], 0

; 1821 : 			}
; 1822 : 			else

  0057f	eb 07		 jmp	 SHORT $LN44@OnEventSoc
$LN43@OnEventSoc:

; 1823 : 			{
; 1824 : 				PersonalTableTip.cbIsGoldOrGameScore = 1;

  00581	c6 85 cd fd ff
	ff 01		 mov	 BYTE PTR _PersonalTableTip$38[ebp+41], 1
$LN44@OnEventSoc:

; 1825 : 			}
; 1826 : 
; 1827 : 
; 1828 : 			m_pIMainServiceFrame->SendData(pIServerUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_PERSONAL_TABLE_TIP, &PersonalTableTip, sizeof(CMD_GR_PersonalTableTip));

  00588	6a 2e		 push	 46			; 0000002eH
  0058a	8d 85 a4 fd ff
	ff		 lea	 eax, DWORD PTR _PersonalTableTip$38[ebp]
  00590	50		 push	 eax
  00591	6a 09		 push	 9
  00593	68 d2 00 00 00	 push	 210			; 000000d2H
  00598	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0059b	51		 push	 ecx
  0059c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0059f	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  005a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005a8	8b 10		 mov	 edx, DWORD PTR [eax]
  005aa	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  005b0	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  005b3	ff d0		 call	 eax

; 1829 : 
; 1830 : 			//发送消息
; 1831 : 			TCHAR szMessage[128]=TEXT("");

  005b5	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  005ba	88 85 24 fd ff
	ff		 mov	 BYTE PTR _szMessage$37[ebp], al
  005c0	6a 7f		 push	 127			; 0000007fH
  005c2	6a 00		 push	 0
  005c4	8d 85 25 fd ff
	ff		 lea	 eax, DWORD PTR _szMessage$37[ebp+1]
  005ca	50		 push	 eax
  005cb	e8 00 00 00 00	 call	 _memset
  005d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1832 : 			_sntprintf_s(szMessage,CountArray(szMessage),TEXT("欢迎您进入“%s”游戏，祝您游戏愉快！"),m_pGameServiceAttrib->szGameName);

  005d3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005d6	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  005dc	83 c1 06	 add	 ecx, 6
  005df	51		 push	 ecx
  005e0	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@IEAHKEDO@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$KD?$KM?W?$KD?D?z?S?N?O?$LH?S@
  005e5	68 80 00 00 00	 push	 128			; 00000080H
  005ea	8d 95 24 fd ff
	ff		 lea	 edx, DWORD PTR _szMessage$37[ebp]
  005f0	52		 push	 edx
  005f1	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  005f6	83 c4 10	 add	 esp, 16			; 00000010H

; 1833 : 			m_pIMainServiceFrame->SendGameMessage(pIServerUserItem,szMessage,SMT_CHAT);

  005f9	6a 01		 push	 1
  005fb	8d 85 24 fd ff
	ff		 lea	 eax, DWORD PTR _szMessage$37[ebp]
  00601	50		 push	 eax
  00602	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00605	51		 push	 ecx
  00606	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00609	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  0060f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00612	8b 10		 mov	 edx, DWORD PTR [eax]
  00614	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0061a	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0061d	ff d0		 call	 eax

; 1834 : 
; 1835 : 			//发送场景
; 1836 : 			bool bSendSecret=((cbUserStatus!=US_LOOKON)||(m_bAllowLookon[wChairID]==true));

  0061f	0f b6 85 df fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$41[ebp]
  00626	83 f8 04	 cmp	 eax, 4
  00629	75 20		 jne	 SHORT $LN114@OnEventSoc
  0062b	0f b7 8d e0 fd
	ff ff		 movzx	 ecx, WORD PTR _wChairID$42[ebp]
  00632	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00635	0f b6 44 0a 14	 movzx	 eax, BYTE PTR [edx+ecx+20]
  0063a	83 f8 01	 cmp	 eax, 1
  0063d	74 0c		 je	 SHORT $LN114@OnEventSoc
  0063f	c7 85 58 bf ff
	ff 00 00 00 00	 mov	 DWORD PTR tv406[ebp], 0
  00649	eb 0a		 jmp	 SHORT $LN115@OnEventSoc
$LN114@OnEventSoc:
  0064b	c7 85 58 bf ff
	ff 01 00 00 00	 mov	 DWORD PTR tv406[ebp], 1
$LN115@OnEventSoc:
  00655	8a 8d 58 bf ff
	ff		 mov	 cl, BYTE PTR tv406[ebp]
  0065b	88 8d 23 fd ff
	ff		 mov	 BYTE PTR _bSendSecret$36[ebp], cl

; 1837 : 
; 1838 : 			m_bEscapeStatus[wChairID] = false;

  00661	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$42[ebp]
  00668	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0066b	c6 84 01 dc 45
	00 00 00	 mov	 BYTE PTR [ecx+eax+17884], 0

; 1839 : 			m_pITableFrameSink->OnEventSendGameScene(wChairID,pIServerUserItem,m_cbGameStatus,bSendSecret);

  00673	0f b6 85 23 fd
	ff ff		 movzx	 eax, BYTE PTR _bSendSecret$36[ebp]
  0067a	50		 push	 eax
  0067b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0067e	0f b6 91 24 07
	00 00		 movzx	 edx, BYTE PTR [ecx+1828]
  00685	52		 push	 edx
  00686	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00689	50		 push	 eax
  0068a	0f b7 8d e0 fd
	ff ff		 movzx	 ecx, WORD PTR _wChairID$42[ebp]
  00691	51		 push	 ecx
  00692	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00695	8b 82 c8 0f 00
	00		 mov	 eax, DWORD PTR [edx+4040]
  0069b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069e	8b 10		 mov	 edx, DWORD PTR [eax]
  006a0	8b 89 c8 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4040]
  006a6	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  006a9	ff d0		 call	 eax

; 1840 : 
; 1841 : 			//发送请求解散处理消息 +++++++
; 1842 : 			CMD_GR_DealCancelInfo dealCancelInfo;
; 1843 : 			ZeroMemory(&dealCancelInfo, sizeof(dealCancelInfo));

  006ab	6a 0e		 push	 14			; 0000000eH
  006ad	6a 00		 push	 0
  006af	8d 85 10 fd ff
	ff		 lea	 eax, DWORD PTR _dealCancelInfo$35[ebp]
  006b5	50		 push	 eax
  006b6	e8 00 00 00 00	 call	 _memset
  006bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1844 : 			dealCancelInfo.cbIsDeal = m_cbIsRequestOver;

  006be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006c1	8a 88 11 11 00
	00		 mov	 cl, BYTE PTR [eax+4369]
  006c7	88 8d 18 fd ff
	ff		 mov	 BYTE PTR _dealCancelInfo$35[ebp+8], cl

; 1845 : 			dealCancelInfo.cbRequestUser=m_cbRequestUser;

  006cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006d0	8a 88 10 11 00
	00		 mov	 cl, BYTE PTR [eax+4368]
  006d6	88 8d 19 fd ff
	ff		 mov	 BYTE PTR _dealCancelInfo$35[ebp+9], cl

; 1846 : 			dealCancelInfo.dwRemainTime = TIME_CANCEL / 1000 - (GetTickCount() - m_dwDealCancel)/1000;

  006dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  006e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006e5	2b 81 cc 46 00
	00		 sub	 eax, DWORD PTR [ecx+18124]
  006eb	33 d2		 xor	 edx, edx
  006ed	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  006f2	f7 f1		 div	 ecx
  006f4	ba 96 00 00 00	 mov	 edx, 150		; 00000096H
  006f9	2b d0		 sub	 edx, eax
  006fb	89 95 1a fd ff
	ff		 mov	 DWORD PTR _dealCancelInfo$35[ebp+10], edx

; 1847 : 			if(dealCancelInfo.dwRemainTime > TIME_CANCEL / 1000)

  00701	81 bd 1a fd ff
	ff 96 00 00 00	 cmp	 DWORD PTR _dealCancelInfo$35[ebp+10], 150 ; 00000096H
  0070b	76 0a		 jbe	 SHORT $LN45@OnEventSoc

; 1848 : 			{
; 1849 : 				dealCancelInfo.dwRemainTime  = 0;

  0070d	c7 85 1a fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _dealCancelInfo$35[ebp+10], 0
$LN45@OnEventSoc:

; 1850 : 			}
; 1851 : 			if (m_cbIsRequestOver)

  00717	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0071a	0f b6 88 11 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4369]
  00721	85 c9		 test	 ecx, ecx
  00723	74 48		 je	 SHORT $LN46@OnEventSoc

; 1852 : 			{
; 1853 : 				for (int i = 0; i < m_wChairCount; i++)

  00725	c7 85 0c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$34[ebp], 0
  0072f	eb 0f		 jmp	 SHORT $LN6@OnEventSoc
$LN4@OnEventSoc:
  00731	8b 85 0c fd ff
	ff		 mov	 eax, DWORD PTR _i$34[ebp]
  00737	83 c0 01	 add	 eax, 1
  0073a	89 85 0c fd ff
	ff		 mov	 DWORD PTR _i$34[ebp], eax
$LN6@OnEventSoc:
  00740	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00743	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00747	39 8d 0c fd ff
	ff		 cmp	 DWORD PTR _i$34[ebp], ecx
  0074d	7d 1e		 jge	 SHORT $LN46@OnEventSoc

; 1854 : 				{
; 1855 : 					dealCancelInfo.cbUserDealInfo[i] =  m_cbRequestReply[i];

  0074f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00752	03 85 0c fd ff
	ff		 add	 eax, DWORD PTR _i$34[ebp]
  00758	8b 8d 0c fd ff
	ff		 mov	 ecx, DWORD PTR _i$34[ebp]
  0075e	8a 90 48 10 00
	00		 mov	 dl, BYTE PTR [eax+4168]
  00764	88 94 0d 10 fd
	ff ff		 mov	 BYTE PTR _dealCancelInfo$35[ebp+ecx], dl

; 1856 : 				}

  0076b	eb c4		 jmp	 SHORT $LN4@OnEventSoc
$LN46@OnEventSoc:

; 1857 : 			}
; 1858 : 			m_pIMainServiceFrame->SendData(pIServerUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_DEAL_CANCEL_INFO, &dealCancelInfo, sizeof(CMD_GR_DealCancelInfo));

  0076d	6a 0e		 push	 14			; 0000000eH
  0076f	8d 85 10 fd ff
	ff		 lea	 eax, DWORD PTR _dealCancelInfo$35[ebp]
  00775	50		 push	 eax
  00776	6a 12		 push	 18			; 00000012H
  00778	68 d2 00 00 00	 push	 210			; 000000d2H
  0077d	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00780	51		 push	 ecx
  00781	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00784	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  0078a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0078d	8b 10		 mov	 edx, DWORD PTR [eax]
  0078f	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00795	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00798	ff d0		 call	 eax

; 1859 : 
; 1860 : 			//取消托管
; 1861 : 			if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  0079a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0079d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  007a3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  007a7	83 fa 04	 cmp	 edx, 4
  007aa	0f 85 c4 00 00
	00		 jne	 $LN47@OnEventSoc
  007b0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007b3	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  007b9	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  007bd	83 fa 01	 cmp	 edx, 1
  007c0	0f 85 ae 00 00
	00		 jne	 $LN47@OnEventSoc

; 1862 : 			{
; 1863 : 				if(pIServerUserItem->IsTrusteeUser()==true)

  007c6	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007c9	8b 10		 mov	 edx, DWORD PTR [eax]
  007cb	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007ce	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  007d4	ff d0		 call	 eax
  007d6	0f b6 c8	 movzx	 ecx, al
  007d9	83 f9 01	 cmp	 ecx, 1
  007dc	75 12		 jne	 SHORT $LN48@OnEventSoc

; 1864 : 				{
; 1865 : 					//设置托管
; 1866 : 					pIServerUserItem->SetTrusteeUser(false);

  007de	6a 00		 push	 0
  007e0	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007e3	8b 10		 mov	 edx, DWORD PTR [eax]
  007e5	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007e8	8b 82 bc 00 00
	00		 mov	 eax, DWORD PTR [edx+188]
  007ee	ff d0		 call	 eax
$LN48@OnEventSoc:

; 1867 : 				}
; 1868 : 
; 1869 : 				//回归通知
; 1870 : 				if (cbUserStatus==US_PLAYING || cbUserStatus==US_OFFLINE)

  007f0	0f b6 85 df fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$41[ebp]
  007f7	83 f8 05	 cmp	 eax, 5
  007fa	74 0c		 je	 SHORT $LN50@OnEventSoc
  007fc	0f b6 85 df fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$41[ebp]
  00803	83 f8 06	 cmp	 eax, 6
  00806	75 6c		 jne	 SHORT $LN47@OnEventSoc
$LN50@OnEventSoc:

; 1871 : 				{
; 1872 : 					if(m_pITableUserAction!=NULL) m_pITableUserAction->OnActionUserConnect(wChairID,pIServerUserItem);

  00808	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0080b	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  00812	74 25		 je	 SHORT $LN51@OnEventSoc
  00814	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00817	50		 push	 eax
  00818	0f b7 8d e0 fd
	ff ff		 movzx	 ecx, WORD PTR _wChairID$42[ebp]
  0081f	51		 push	 ecx
  00820	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00823	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  00829	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0082c	8b 10		 mov	 edx, DWORD PTR [eax]
  0082e	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  00834	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00837	ff d0		 call	 eax
$LN51@OnEventSoc:

; 1873 : 					if ((m_pGameServiceOption->wServerType&GAME_GENRE_PERSONAL)==0 )

  00839	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0083c	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00842	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00846	83 e2 10	 and	 edx, 16			; 00000010H
  00849	75 29		 jne	 SHORT $LN47@OnEventSoc

; 1874 : 					{
; 1875 : 						if(m_pITableFrameHook) m_pITableFrameHook->OnEventUserReturnMatch(pIServerUserItem);

  0084b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0084e	83 b8 08 10 00
	00 00		 cmp	 DWORD PTR [eax+4104], 0
  00855	74 1d		 je	 SHORT $LN47@OnEventSoc
  00857	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0085a	50		 push	 eax
  0085b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0085e	8b 91 08 10 00
	00		 mov	 edx, DWORD PTR [ecx+4104]
  00864	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00867	8b 12		 mov	 edx, DWORD PTR [edx]
  00869	8b 88 08 10 00
	00		 mov	 ecx, DWORD PTR [eax+4104]
  0086f	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00872	ff d0		 call	 eax
$LN47@OnEventSoc:

; 1876 : 					}
; 1877 : 					
; 1878 : 				}
; 1879 : 			}
; 1880 : 
; 1881 : 			//开始判断
; 1882 : 			if ((cbUserStatus==US_READY)&&(EfficacyStartGame(wChairID)==true))

  00874	0f b6 85 df fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$41[ebp]
  0087b	83 f8 03	 cmp	 eax, 3
  0087e	75 25		 jne	 SHORT $LN54@OnEventSoc
  00880	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$42[ebp]
  00887	50		 push	 eax
  00888	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0088b	e8 00 00 00 00	 call	 ?EfficacyStartGame@CTableFrame@@QAE_NG@Z ; CTableFrame::EfficacyStartGame
  00890	0f b6 c8	 movzx	 ecx, al
  00893	83 f9 01	 cmp	 ecx, 1
  00896	75 0d		 jne	 SHORT $LN54@OnEventSoc

; 1883 : 			{
; 1884 : 				StartGame(); 

  00898	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0089b	8b 10		 mov	 edx, DWORD PTR [eax]
  0089d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008a0	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  008a3	ff d0		 call	 eax
$LN54@OnEventSoc:

; 1885 : 			}
; 1886 : 
; 1887 : 			return true;

  008a5	b0 01		 mov	 al, 1
  008a7	e9 22 10 00 00	 jmp	 $LN1@OnEventSoc
$LN55@OnEventSoc:

; 1888 : 		}
; 1889 : 	case SUB_GF_USER_READY:		//用户准备
; 1890 : 		{
; 1891 : 			//获取属性
; 1892 : 			WORD wChairID=pIServerUserItem->GetChairID();

  008ac	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008af	8b 10		 mov	 edx, DWORD PTR [eax]
  008b1	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  008b4	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  008b7	ff d0		 call	 eax
  008b9	66 89 85 08 fd
	ff ff		 mov	 WORD PTR _wChairID$33[ebp], ax

; 1893 : 			BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  008c0	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008c3	8b 10		 mov	 edx, DWORD PTR [eax]
  008c5	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  008c8	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  008cb	ff d0		 call	 eax
  008cd	88 85 07 fd ff
	ff		 mov	 BYTE PTR _cbUserStatus$32[ebp], al

; 1894 : 
; 1895 : 			//效验状态
; 1896 : 			ASSERT(GetTableUserItem(wChairID)==pIServerUserItem);

  008d3	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  008da	50		 push	 eax
  008db	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008de	8b 11		 mov	 edx, DWORD PTR [ecx]
  008e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008e3	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  008e9	ff d0		 call	 eax
  008eb	3b 45 14	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008ee	74 1c		 je	 SHORT $LN116@OnEventSoc
  008f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  008f6	81 c1 b1 00 00
	00		 add	 ecx, 177		; 000000b1H
  008fc	51		 push	 ecx
  008fd	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00902	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00907	85 c0		 test	 eax, eax
  00909	74 01		 je	 SHORT $LN116@OnEventSoc
  0090b	cc		 int	 3
$LN116@OnEventSoc:

; 1897 : 			if (GetTableUserItem(wChairID)!=pIServerUserItem) return false;

  0090c	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  00913	50		 push	 eax
  00914	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00917	8b 11		 mov	 edx, DWORD PTR [ecx]
  00919	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0091c	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00922	ff d0		 call	 eax
  00924	3b 45 14	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00927	74 07		 je	 SHORT $LN56@OnEventSoc
  00929	32 c0		 xor	 al, al
  0092b	e9 9e 0f 00 00	 jmp	 $LN1@OnEventSoc
$LN56@OnEventSoc:

; 1898 : 
; 1899 : 			//效验状态
; 1900 : 			//ASSERT(cbUserStatus==US_SIT);
; 1901 : 			if (cbUserStatus!=US_SIT) return true;

  00930	0f b6 85 07 fd
	ff ff		 movzx	 eax, BYTE PTR _cbUserStatus$32[ebp]
  00937	83 f8 02	 cmp	 eax, 2
  0093a	74 07		 je	 SHORT $LN57@OnEventSoc
  0093c	b0 01		 mov	 al, 1
  0093e	e9 8b 0f 00 00	 jmp	 $LN1@OnEventSoc
$LN57@OnEventSoc:

; 1902 : 
; 1903 : 			if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00943	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00946	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0094c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00950	83 fa 10	 cmp	 edx, 16			; 00000010H
  00953	75 15		 jne	 SHORT $LN58@OnEventSoc

; 1904 : 			{
; 1905 : 				if (m_bIsDissumGame)

  00955	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00958	0f b6 88 34 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4404]
  0095f	85 c9		 test	 ecx, ecx
  00961	74 07		 je	 SHORT $LN58@OnEventSoc

; 1906 : 				{
; 1907 : 					return true;

  00963	b0 01		 mov	 al, 1
  00965	e9 64 0f 00 00	 jmp	 $LN1@OnEventSoc
$LN58@OnEventSoc:

; 1908 : 				}
; 1909 : 			}
; 1910 : 
; 1911 : 			//防作弊分组判断
; 1912 : 			if((CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)&&(m_pGameServiceAttrib->wChairCount < MAX_CHAIR))
; 1913 : 				&& (m_wDrawCount >= m_pGameServiceOption->wDistributeDrawCount || CheckDistribute()))

  0096a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0096d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00973	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00976	52		 push	 edx
  00977	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0097c	83 c4 04	 add	 esp, 4
  0097f	0f b6 c0	 movzx	 eax, al
  00982	85 c0		 test	 eax, eax
  00984	0f 84 8d 00 00
	00		 je	 $LN60@OnEventSoc
  0098a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0098d	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00993	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00997	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  0099d	7d 78		 jge	 SHORT $LN60@OnEventSoc
  0099f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009a2	0f b7 88 3c 07
	00 00		 movzx	 ecx, WORD PTR [eax+1852]
  009a9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009ac	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  009b2	0f b7 90 96 00
	00 00		 movzx	 edx, WORD PTR [eax+150]
  009b9	3b ca		 cmp	 ecx, edx
  009bb	7d 0f		 jge	 SHORT $LN61@OnEventSoc
  009bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009c0	e8 00 00 00 00	 call	 ?CheckDistribute@CTableFrame@@QAE_NXZ ; CTableFrame::CheckDistribute
  009c5	0f b6 c0	 movzx	 eax, al
  009c8	85 c0		 test	 eax, eax
  009ca	74 4b		 je	 SHORT $LN60@OnEventSoc
$LN61@OnEventSoc:

; 1914 : 			{
; 1915 : 				//发送消息
; 1916 : 				LPCTSTR pszMessage=TEXT("系统重新分配桌子，请稍后！");

  009cc	c7 85 00 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pszMessage$31[ebp], OFFSET ??_C@_0BL@FDDKLKIA@?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G?k?I?T?$LK?s?$KD?$KB@

; 1917 : 				SendGameMessage(pIServerUserItem,pszMessage,SMT_CHAT);

  009d6	6a 01		 push	 1
  009d8	8b 85 00 fd ff
	ff		 mov	 eax, DWORD PTR _pszMessage$31[ebp]
  009de	50		 push	 eax
  009df	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  009e2	51		 push	 ecx
  009e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009e6	8b 02		 mov	 eax, DWORD PTR [edx]
  009e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009eb	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  009f1	ff d2		 call	 edx

; 1918 : 
; 1919 : 				//发送消息
; 1920 : 				m_pIMainServiceFrame->InsertDistribute(pIServerUserItem);

  009f3	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  009f6	50		 push	 eax
  009f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009fa	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  00a00	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a03	8b 12		 mov	 edx, DWORD PTR [edx]
  00a05	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00a0b	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00a0e	ff d0		 call	 eax

; 1921 : 
; 1922 : 				////用户起立
; 1923 : 				//PerformStandUpAction(pIServerUserItem);
; 1924 : 
; 1925 : 				return true;

  00a10	b0 01		 mov	 al, 1
  00a12	e9 b7 0e 00 00	 jmp	 $LN1@OnEventSoc
$LN60@OnEventSoc:

; 1926 : 			}
; 1927 : 
; 1928 : 			//事件通知
; 1929 : 			if(m_pIMatchTableAction!=NULL && !m_pIMatchTableAction->OnActionUserOnReady(wChairID,pIServerUserItem, pData,wDataSize))

  00a17	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a1a	83 b8 0c 10 00
	00 00		 cmp	 DWORD PTR [eax+4108], 0
  00a21	74 3c		 je	 SHORT $LN62@OnEventSoc
  00a23	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00a27	50		 push	 eax
  00a28	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00a2b	51		 push	 ecx
  00a2c	8b 55 14	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00a2f	52		 push	 edx
  00a30	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  00a37	50		 push	 eax
  00a38	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a3b	8b 91 0c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4108]
  00a41	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a44	8b 12		 mov	 edx, DWORD PTR [edx]
  00a46	8b 88 0c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4108]
  00a4c	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00a4f	ff d0		 call	 eax
  00a51	0f b6 c8	 movzx	 ecx, al
  00a54	85 c9		 test	 ecx, ecx
  00a56	75 07		 jne	 SHORT $LN62@OnEventSoc

; 1930 : 			{
; 1931 : 				return true;

  00a58	b0 01		 mov	 al, 1
  00a5a	e9 6f 0e 00 00	 jmp	 $LN1@OnEventSoc
$LN62@OnEventSoc:

; 1932 : 			}
; 1933 : 
; 1934 : 			//事件通知
; 1935 : 			if (m_pITableUserAction!=NULL)

  00a5f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a62	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  00a69	74 2e		 je	 SHORT $LN63@OnEventSoc

; 1936 : 			{
; 1937 : 				m_pITableUserAction->OnActionUserOnReady(wChairID,pIServerUserItem,pData,wDataSize);

  00a6b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00a6f	50		 push	 eax
  00a70	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00a73	51		 push	 ecx
  00a74	8b 55 14	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00a77	52		 push	 edx
  00a78	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  00a7f	50		 push	 eax
  00a80	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a83	8b 91 d4 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4052]
  00a89	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a8c	8b 12		 mov	 edx, DWORD PTR [edx]
  00a8e	8b 88 d4 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4052]
  00a94	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00a97	ff d0		 call	 eax
$LN63@OnEventSoc:

; 1938 : 			}
; 1939 : 
; 1940 : 			//删除定时
; 1941 : 			if(m_pGameServiceAttrib->wChairCount < MAX_CHAIR) KillGameTimer(IDI_START_OVERTIME+wChairID);

  00a99	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a9c	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00aa2	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00aa6	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00aac	7d 1b		 jge	 SHORT $LN64@OnEventSoc
  00aae	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  00ab5	83 c0 16	 add	 eax, 22			; 00000016H
  00ab8	50		 push	 eax
  00ab9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00abc	8b 11		 mov	 edx, DWORD PTR [ecx]
  00abe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac1	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00ac7	ff d0		 call	 eax
$LN64@OnEventSoc:

; 1942 : 
; 1943 : 			//开始判断
; 1944 : 			if (EfficacyStartGame(wChairID)==false)

  00ac9	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  00ad0	50		 push	 eax
  00ad1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad4	e8 00 00 00 00	 call	 ?EfficacyStartGame@CTableFrame@@QAE_NG@Z ; CTableFrame::EfficacyStartGame
  00ad9	0f b6 c8	 movzx	 ecx, al
  00adc	85 c9		 test	 ecx, ecx
  00ade	75 24		 jne	 SHORT $LN65@OnEventSoc

; 1945 : 			{
; 1946 : 				//设置状态
; 1947 : 				pIServerUserItem->SetUserStatus(US_READY,m_wTableID,wChairID);

  00ae0	0f b7 85 08 fd
	ff ff		 movzx	 eax, WORD PTR _wChairID$33[ebp]
  00ae7	50		 push	 eax
  00ae8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00aeb	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00aef	52		 push	 edx
  00af0	6a 03		 push	 3
  00af2	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00af5	8b 10		 mov	 edx, DWORD PTR [eax]
  00af7	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00afa	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00b00	ff d0		 call	 eax

; 1948 : 			}
; 1949 : 			else

  00b02	eb 0d		 jmp	 SHORT $LN66@OnEventSoc
$LN65@OnEventSoc:

; 1950 : 			{
; 1951 : 				StartGame(); 

  00b04	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b07	8b 10		 mov	 edx, DWORD PTR [eax]
  00b09	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0c	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00b0f	ff d0		 call	 eax
$LN66@OnEventSoc:

; 1952 : 			}
; 1953 : 
; 1954 : 			return true;

  00b11	b0 01		 mov	 al, 1
  00b13	e9 b6 0d 00 00	 jmp	 $LN1@OnEventSoc
$LN67@OnEventSoc:

; 1955 : 		}
; 1956 : 	case SUB_GF_USER_CHAT:		//用户聊天
; 1957 : 		{
; 1958 : 			//变量定义
; 1959 : 			CMD_GF_C_UserChat * pUserChat=(CMD_GF_C_UserChat *)pData;

  00b18	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00b1b	89 85 fc fc ff
	ff		 mov	 DWORD PTR _pUserChat$30[ebp], eax

; 1960 : 
; 1961 : 			//效验参数
; 1962 : 			ASSERT(wDataSize<=sizeof(CMD_GF_C_UserChat));

  00b21	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00b25	3d 8a 00 00 00	 cmp	 eax, 138		; 0000008aH
  00b2a	76 1c		 jbe	 SHORT $LN117@OnEventSoc
  00b2c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00b32	81 c1 f3 00 00
	00		 add	 ecx, 243		; 000000f3H
  00b38	51		 push	 ecx
  00b39	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00b3e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00b43	85 c0		 test	 eax, eax
  00b45	74 01		 je	 SHORT $LN117@OnEventSoc
  00b47	cc		 int	 3
$LN117@OnEventSoc:

; 1963 : 			ASSERT(wDataSize>=(sizeof(CMD_GF_C_UserChat)-sizeof(pUserChat->szChatString)));

  00b48	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00b4c	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00b4f	73 1c		 jae	 SHORT $LN118@OnEventSoc
  00b51	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00b57	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  00b5d	51		 push	 ecx
  00b5e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00b63	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00b68	85 c0		 test	 eax, eax
  00b6a	74 01		 je	 SHORT $LN118@OnEventSoc
  00b6c	cc		 int	 3
$LN118@OnEventSoc:

; 1964 : 			ASSERT(wDataSize==(sizeof(CMD_GF_C_UserChat)-sizeof(pUserChat->szChatString)+pUserChat->wChatLength*sizeof(pUserChat->szChatString[0])));

  00b6d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00b71	8b 8d fc fc ff
	ff		 mov	 ecx, DWORD PTR _pUserChat$30[ebp]
  00b77	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00b7a	83 c2 0a	 add	 edx, 10			; 0000000aH
  00b7d	3b c2		 cmp	 eax, edx
  00b7f	74 1a		 je	 SHORT $LN119@OnEventSoc
  00b81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00b86	05 f5 00 00 00	 add	 eax, 245		; 000000f5H
  00b8b	50		 push	 eax
  00b8c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00b91	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00b96	85 c0		 test	 eax, eax
  00b98	74 01		 je	 SHORT $LN119@OnEventSoc
  00b9a	cc		 int	 3
$LN119@OnEventSoc:

; 1965 : 
; 1966 : 			//效验参数
; 1967 : 			if (wDataSize>sizeof(CMD_GF_C_UserChat)) return false;

  00b9b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00b9f	3d 8a 00 00 00	 cmp	 eax, 138		; 0000008aH
  00ba4	76 07		 jbe	 SHORT $LN68@OnEventSoc
  00ba6	32 c0		 xor	 al, al
  00ba8	e9 21 0d 00 00	 jmp	 $LN1@OnEventSoc
$LN68@OnEventSoc:

; 1968 : 			if (wDataSize<(sizeof(CMD_GF_C_UserChat)-sizeof(pUserChat->szChatString))) return false;

  00bad	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00bb1	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00bb4	73 07		 jae	 SHORT $LN69@OnEventSoc
  00bb6	32 c0		 xor	 al, al
  00bb8	e9 11 0d 00 00	 jmp	 $LN1@OnEventSoc
$LN69@OnEventSoc:

; 1969 : 			if (wDataSize!=(sizeof(CMD_GF_C_UserChat)-sizeof(pUserChat->szChatString)+pUserChat->wChatLength*sizeof(pUserChat->szChatString[0]))) return false;

  00bbd	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00bc1	8b 8d fc fc ff
	ff		 mov	 ecx, DWORD PTR _pUserChat$30[ebp]
  00bc7	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00bca	83 c2 0a	 add	 edx, 10			; 0000000aH
  00bcd	3b c2		 cmp	 eax, edx
  00bcf	74 07		 je	 SHORT $LN70@OnEventSoc
  00bd1	32 c0		 xor	 al, al
  00bd3	e9 f6 0c 00 00	 jmp	 $LN1@OnEventSoc
$LN70@OnEventSoc:

; 1970 : 
; 1971 : 			//目标用户
; 1972 : 			if ((pUserChat->dwTargetUserID!=0)&&(SearchUserItem(pUserChat->dwTargetUserID)==NULL))

  00bd8	8b 85 fc fc ff
	ff		 mov	 eax, DWORD PTR _pUserChat$30[ebp]
  00bde	83 78 06 00	 cmp	 DWORD PTR [eax+6], 0
  00be2	74 45		 je	 SHORT $LN71@OnEventSoc
  00be4	8b 85 fc fc ff
	ff		 mov	 eax, DWORD PTR _pUserChat$30[ebp]
  00bea	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  00bed	51		 push	 ecx
  00bee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00bf1	8b 02		 mov	 eax, DWORD PTR [edx]
  00bf3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf6	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  00bfc	ff d2		 call	 edx
  00bfe	85 c0		 test	 eax, eax
  00c00	75 27		 jne	 SHORT $LN71@OnEventSoc

; 1973 : 			{
; 1974 : 				ASSERT(FALSE);

  00c02	33 c0		 xor	 eax, eax
  00c04	75 1c		 jne	 SHORT $LN120@OnEventSoc
  00c06	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00c0c	81 c1 ff 00 00
	00		 add	 ecx, 255		; 000000ffH
  00c12	51		 push	 ecx
  00c13	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00c18	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00c1d	85 c0		 test	 eax, eax
  00c1f	74 01		 je	 SHORT $LN120@OnEventSoc
  00c21	cc		 int	 3
$LN120@OnEventSoc:

; 1975 : 				return true;

  00c22	b0 01		 mov	 al, 1
  00c24	e9 a5 0c 00 00	 jmp	 $LN1@OnEventSoc
$LN71@OnEventSoc:

; 1976 : 			}
; 1977 : 
; 1978 : 			//状态判断
; 1979 : 			if ((CServerRule::IsForfendGameChat(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0L))

  00c29	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c2c	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00c32	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00c35	52		 push	 edx
  00c36	e8 00 00 00 00	 call	 ?IsForfendGameChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameChat
  00c3b	83 c4 04	 add	 esp, 4
  00c3e	0f b6 c0	 movzx	 eax, al
  00c41	83 f8 01	 cmp	 eax, 1
  00c44	75 39		 jne	 SHORT $LN72@OnEventSoc
  00c46	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c49	8b 10		 mov	 edx, DWORD PTR [eax]
  00c4b	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c4e	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00c54	ff d0		 call	 eax
  00c56	0f b6 c8	 movzx	 ecx, al
  00c59	85 c9		 test	 ecx, ecx
  00c5b	75 22		 jne	 SHORT $LN72@OnEventSoc

; 1980 : 			{
; 1981 : 				SendGameMessage(pIServerUserItem,TEXT("抱歉，当前游戏房间禁止游戏聊天！"),SMT_CHAT);

  00c5d	6a 01		 push	 1
  00c5f	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@
  00c64	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c67	50		 push	 eax
  00c68	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c6b	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c6d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c70	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  00c76	ff d0		 call	 eax

; 1982 : 				return true;

  00c78	b0 01		 mov	 al, 1
  00c7a	e9 4f 0c 00 00	 jmp	 $LN1@OnEventSoc
$LN72@OnEventSoc:

; 1983 : 			}
; 1984 : 
; 1985 : 			//权限判断
; 1986 : 			if (CUserRight::CanRoomChat(pIServerUserItem->GetUserRight())==false)

  00c7f	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c82	8b 10		 mov	 edx, DWORD PTR [eax]
  00c84	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c87	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00c8a	ff d0		 call	 eax
  00c8c	50		 push	 eax
  00c8d	e8 00 00 00 00	 call	 ?CanRoomChat@CUserRight@@SA_NK@Z ; CUserRight::CanRoomChat
  00c92	83 c4 04	 add	 esp, 4
  00c95	0f b6 c8	 movzx	 ecx, al
  00c98	85 c9		 test	 ecx, ecx
  00c9a	75 22		 jne	 SHORT $LN73@OnEventSoc

; 1987 : 			{
; 1988 : 				SendGameMessage(pIServerUserItem,TEXT("抱歉，您没有游戏聊天的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  00c9c	6a 03		 push	 3
  00c9e	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  00ca3	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00ca6	50		 push	 eax
  00ca7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00caa	8b 11		 mov	 edx, DWORD PTR [ecx]
  00cac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00caf	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  00cb5	ff d0		 call	 eax

; 1989 : 				return true;

  00cb7	b0 01		 mov	 al, 1
  00cb9	e9 10 0c 00 00	 jmp	 $LN1@OnEventSoc
$LN73@OnEventSoc:

; 1990 : 			}
; 1991 : 
; 1992 : 			//构造消息
; 1993 : 			CMD_GF_S_UserChat UserChat;
; 1994 : 			ZeroMemory(&UserChat,sizeof(UserChat));

  00cbe	68 8e 00 00 00	 push	 142			; 0000008eH
  00cc3	6a 00		 push	 0
  00cc5	8d 85 6c fc ff
	ff		 lea	 eax, DWORD PTR _UserChat$29[ebp]
  00ccb	50		 push	 eax
  00ccc	e8 00 00 00 00	 call	 _memset
  00cd1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1995 : 
; 1996 : 			//字符过滤
; 1997 : 			m_pIMainServiceFrame->SensitiveWordFilter(pUserChat->szChatString,UserChat.szChatString,CountArray(UserChat.szChatString));

  00cd4	68 80 00 00 00	 push	 128			; 00000080H
  00cd9	8d 85 7a fc ff
	ff		 lea	 eax, DWORD PTR _UserChat$29[ebp+14]
  00cdf	50		 push	 eax
  00ce0	8b 8d fc fc ff
	ff		 mov	 ecx, DWORD PTR _pUserChat$30[ebp]
  00ce6	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00ce9	51		 push	 ecx
  00cea	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00ced	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00cf3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00cf6	8b 10		 mov	 edx, DWORD PTR [eax]
  00cf8	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00cfe	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00d01	ff d0		 call	 eax

; 1998 : 
; 1999 : 			//构造数据
; 2000 : 			UserChat.dwChatColor=pUserChat->dwChatColor;

  00d03	8b 85 fc fc ff
	ff		 mov	 eax, DWORD PTR _pUserChat$30[ebp]
  00d09	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00d0c	89 8d 6e fc ff
	ff		 mov	 DWORD PTR _UserChat$29[ebp+2], ecx

; 2001 : 			UserChat.wChatLength=pUserChat->wChatLength;

  00d12	8b 85 fc fc ff
	ff		 mov	 eax, DWORD PTR _pUserChat$30[ebp]
  00d18	66 8b 08	 mov	 cx, WORD PTR [eax]
  00d1b	66 89 8d 6c fc
	ff ff		 mov	 WORD PTR _UserChat$29[ebp], cx

; 2002 : 			UserChat.dwTargetUserID=pUserChat->dwTargetUserID;

  00d22	8b 85 fc fc ff
	ff		 mov	 eax, DWORD PTR _pUserChat$30[ebp]
  00d28	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  00d2b	89 8d 76 fc ff
	ff		 mov	 DWORD PTR _UserChat$29[ebp+10], ecx

; 2003 : 			UserChat.dwSendUserID=pIServerUserItem->GetUserID();

  00d31	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00d34	8b 10		 mov	 edx, DWORD PTR [eax]
  00d36	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00d39	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00d3c	ff d0		 call	 eax
  00d3e	89 85 72 fc ff
	ff		 mov	 DWORD PTR _UserChat$29[ebp+6], eax

; 2004 : 			UserChat.wChatLength=CountStringBuffer(UserChat.szChatString);

  00d44	8d 85 7a fc ff
	ff		 lea	 eax, DWORD PTR _UserChat$29[ebp+14]
  00d4a	50		 push	 eax
  00d4b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00d51	83 c0 01	 add	 eax, 1
  00d54	66 89 85 6c fc
	ff ff		 mov	 WORD PTR _UserChat$29[ebp], ax

; 2005 : 
; 2006 : 			//发送数据
; 2007 : 			WORD wHeadSize=sizeof(UserChat)-sizeof(UserChat.szChatString);

  00d5b	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00d60	66 89 85 68 fc
	ff ff		 mov	 WORD PTR _wHeadSize$28[ebp], ax

; 2008 : 			WORD wSendSize=wHeadSize+UserChat.wChatLength*sizeof(UserChat.szChatString[0]);

  00d67	0f b7 85 68 fc
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$28[ebp]
  00d6e	0f b7 8d 6c fc
	ff ff		 movzx	 ecx, WORD PTR _UserChat$29[ebp]
  00d75	03 c1		 add	 eax, ecx
  00d77	66 89 85 64 fc
	ff ff		 mov	 WORD PTR _wSendSize$27[ebp], ax

; 2009 : 
; 2010 : 			//游戏用户
; 2011 : 			for (WORD i=0;i<m_wChairCount;i++)

  00d7e	33 c0		 xor	 eax, eax
  00d80	66 89 85 60 fc
	ff ff		 mov	 WORD PTR _i$26[ebp], ax
  00d87	eb 12		 jmp	 SHORT $LN9@OnEventSoc
$LN7@OnEventSoc:
  00d89	66 8b 85 60 fc
	ff ff		 mov	 ax, WORD PTR _i$26[ebp]
  00d90	66 83 c0 01	 add	 ax, 1
  00d94	66 89 85 60 fc
	ff ff		 mov	 WORD PTR _i$26[ebp], ax
$LN9@OnEventSoc:
  00d9b	0f b7 85 60 fc
	ff ff		 movzx	 eax, WORD PTR _i$26[ebp]
  00da2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00da5	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00da9	3b c2		 cmp	 eax, edx
  00dab	7d 7e		 jge	 SHORT $LN8@OnEventSoc

; 2012 : 			{
; 2013 : 				//获取用户
; 2014 : 				IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  00dad	0f b7 85 60 fc
	ff ff		 movzx	 eax, WORD PTR _i$26[ebp]
  00db4	50		 push	 eax
  00db5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00db8	8b 11		 mov	 edx, DWORD PTR [ecx]
  00dba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00dbd	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00dc3	ff d0		 call	 eax
  00dc5	89 85 5c fc ff
	ff		 mov	 DWORD PTR _pIServerUserItem$25[ebp], eax

; 2015 : 				if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) continue;

  00dcb	83 bd 5c fc ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$25[ebp], 0
  00dd2	74 1d		 je	 SHORT $LN75@OnEventSoc
  00dd4	8b 85 5c fc ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$25[ebp]
  00dda	8b 10		 mov	 edx, DWORD PTR [eax]
  00ddc	8b 8d 5c fc ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$25[ebp]
  00de2	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00de8	ff d0		 call	 eax
  00dea	0f b6 c8	 movzx	 ecx, al
  00ded	85 c9		 test	 ecx, ecx
  00def	75 02		 jne	 SHORT $LN74@OnEventSoc
$LN75@OnEventSoc:
  00df1	eb 96		 jmp	 SHORT $LN7@OnEventSoc
$LN74@OnEventSoc:

; 2016 : 
; 2017 : 				m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_CHAT,&UserChat,wSendSize);

  00df3	0f b7 85 64 fc
	ff ff		 movzx	 eax, WORD PTR _wSendSize$27[ebp]
  00dfa	50		 push	 eax
  00dfb	8d 8d 6c fc ff
	ff		 lea	 ecx, DWORD PTR _UserChat$29[ebp]
  00e01	51		 push	 ecx
  00e02	6a 0a		 push	 10			; 0000000aH
  00e04	6a 64		 push	 100			; 00000064H
  00e06	8b 95 5c fc ff
	ff		 mov	 edx, DWORD PTR _pIServerUserItem$25[ebp]
  00e0c	52		 push	 edx
  00e0d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00e10	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00e16	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00e19	8b 01		 mov	 eax, DWORD PTR [ecx]
  00e1b	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00e21	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00e24	ff d2		 call	 edx

; 2018 : 			}

  00e26	e9 5e ff ff ff	 jmp	 $LN7@OnEventSoc
$LN8@OnEventSoc:

; 2019 : 
; 2020 : 			//旁观用户
; 2021 : 			WORD wEnumIndex=0;

  00e2b	33 c0		 xor	 eax, eax
  00e2d	66 89 85 58 fc
	ff ff		 mov	 WORD PTR _wEnumIndex$24[ebp], ax

; 2022 : 			IServerUserItem * pIServerUserItem=NULL;

  00e34	c7 85 54 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItem$23[ebp], 0
$LN12@OnEventSoc:

; 2023 : 
; 2024 : 			//枚举用户
; 2025 : 			do
; 2026 : 			{
; 2027 : 				//获取用户
; 2028 : 				pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  00e3e	66 8b 85 58 fc
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$24[ebp]
  00e45	66 89 85 5a bf
	ff ff		 mov	 WORD PTR tv863[ebp], ax
  00e4c	0f b7 8d 5a bf
	ff ff		 movzx	 ecx, WORD PTR tv863[ebp]
  00e53	51		 push	 ecx
  00e54	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00e57	8b 02		 mov	 eax, DWORD PTR [edx]
  00e59	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e5c	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  00e62	ff d2		 call	 edx
  00e64	89 85 54 fc ff
	ff		 mov	 DWORD PTR _pIServerUserItem$23[ebp], eax
  00e6a	66 8b 85 58 fc
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$24[ebp]
  00e71	66 83 c0 01	 add	 ax, 1
  00e75	66 89 85 58 fc
	ff ff		 mov	 WORD PTR _wEnumIndex$24[ebp], ax

; 2029 : 				if (pIServerUserItem==NULL) break;

  00e7c	83 bd 54 fc ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$23[ebp], 0
  00e83	75 02		 jne	 SHORT $LN76@OnEventSoc
  00e85	eb 5e		 jmp	 SHORT $LN11@OnEventSoc
$LN76@OnEventSoc:

; 2030 : 
; 2031 : 				//发送数据
; 2032 : 				if (pIServerUserItem->IsClientReady()==true)

  00e87	8b 85 54 fc ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$23[ebp]
  00e8d	8b 10		 mov	 edx, DWORD PTR [eax]
  00e8f	8b 8d 54 fc ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$23[ebp]
  00e95	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00e9b	ff d0		 call	 eax
  00e9d	0f b6 c8	 movzx	 ecx, al
  00ea0	83 f9 01	 cmp	 ecx, 1
  00ea3	75 33		 jne	 SHORT $LN10@OnEventSoc

; 2033 : 				{
; 2034 : 					m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_CHAT,&UserChat,wSendSize);

  00ea5	0f b7 85 64 fc
	ff ff		 movzx	 eax, WORD PTR _wSendSize$27[ebp]
  00eac	50		 push	 eax
  00ead	8d 8d 6c fc ff
	ff		 lea	 ecx, DWORD PTR _UserChat$29[ebp]
  00eb3	51		 push	 ecx
  00eb4	6a 0a		 push	 10			; 0000000aH
  00eb6	6a 64		 push	 100			; 00000064H
  00eb8	8b 95 54 fc ff
	ff		 mov	 edx, DWORD PTR _pIServerUserItem$23[ebp]
  00ebe	52		 push	 edx
  00ebf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ec2	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00ec8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00ecb	8b 01		 mov	 eax, DWORD PTR [ecx]
  00ecd	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00ed3	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00ed6	ff d2		 call	 edx
$LN10@OnEventSoc:

; 2035 : 				}
; 2036 : 			} while (true);

  00ed8	b8 01 00 00 00	 mov	 eax, 1
  00edd	85 c0		 test	 eax, eax
  00edf	0f 85 59 ff ff
	ff		 jne	 $LN12@OnEventSoc
$LN11@OnEventSoc:

; 2037 : 
; 2038 : 			return true;

  00ee5	b0 01		 mov	 al, 1
  00ee7	e9 e2 09 00 00	 jmp	 $LN1@OnEventSoc
$LN78@OnEventSoc:

; 2039 : 		}
; 2040 : 	case SUB_GF_USER_EXPRESSION:	//用户表情
; 2041 : 		{
; 2042 : 			//效验参数
; 2043 : 			ASSERT(wDataSize==sizeof(CMD_GF_C_UserExpression));

  00eec	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00ef0	83 f8 06	 cmp	 eax, 6
  00ef3	74 1c		 je	 SHORT $LN121@OnEventSoc
  00ef5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00efb	81 c1 44 01 00
	00		 add	 ecx, 324		; 00000144H
  00f01	51		 push	 ecx
  00f02	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00f07	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00f0c	85 c0		 test	 eax, eax
  00f0e	74 01		 je	 SHORT $LN121@OnEventSoc
  00f10	cc		 int	 3
$LN121@OnEventSoc:

; 2044 : 			if (wDataSize!=sizeof(CMD_GF_C_UserExpression)) return false;

  00f11	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00f15	83 f8 06	 cmp	 eax, 6
  00f18	74 07		 je	 SHORT $LN79@OnEventSoc
  00f1a	32 c0		 xor	 al, al
  00f1c	e9 ad 09 00 00	 jmp	 $LN1@OnEventSoc
$LN79@OnEventSoc:

; 2045 : 
; 2046 : 			//变量定义
; 2047 : 			CMD_GF_C_UserExpression * pUserExpression=(CMD_GF_C_UserExpression *)pData;

  00f21	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00f24	89 85 50 fc ff
	ff		 mov	 DWORD PTR _pUserExpression$22[ebp], eax

; 2048 : 
; 2049 : 			//目标用户
; 2050 : 			if ((pUserExpression->dwTargetUserID!=0)&&(SearchUserItem(pUserExpression->dwTargetUserID)==NULL))

  00f2a	8b 85 50 fc ff
	ff		 mov	 eax, DWORD PTR _pUserExpression$22[ebp]
  00f30	83 78 02 00	 cmp	 DWORD PTR [eax+2], 0
  00f34	74 45		 je	 SHORT $LN80@OnEventSoc
  00f36	8b 85 50 fc ff
	ff		 mov	 eax, DWORD PTR _pUserExpression$22[ebp]
  00f3c	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00f3f	51		 push	 ecx
  00f40	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00f43	8b 02		 mov	 eax, DWORD PTR [edx]
  00f45	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f48	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  00f4e	ff d2		 call	 edx
  00f50	85 c0		 test	 eax, eax
  00f52	75 27		 jne	 SHORT $LN80@OnEventSoc

; 2051 : 			{
; 2052 : 				ASSERT(FALSE);

  00f54	33 c0		 xor	 eax, eax
  00f56	75 1c		 jne	 SHORT $LN122@OnEventSoc
  00f58	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00f5e	81 c1 4d 01 00
	00		 add	 ecx, 333		; 0000014dH
  00f64	51		 push	 ecx
  00f65	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00f6a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00f6f	85 c0		 test	 eax, eax
  00f71	74 01		 je	 SHORT $LN122@OnEventSoc
  00f73	cc		 int	 3
$LN122@OnEventSoc:

; 2053 : 				return true;

  00f74	b0 01		 mov	 al, 1
  00f76	e9 53 09 00 00	 jmp	 $LN1@OnEventSoc
$LN80@OnEventSoc:

; 2054 : 			}
; 2055 : 
; 2056 : 			//状态判断
; 2057 : 			if ((CServerRule::IsForfendGameChat(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0L))

  00f7b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f7e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00f84	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00f87	52		 push	 edx
  00f88	e8 00 00 00 00	 call	 ?IsForfendGameChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameChat
  00f8d	83 c4 04	 add	 esp, 4
  00f90	0f b6 c0	 movzx	 eax, al
  00f93	83 f8 01	 cmp	 eax, 1
  00f96	75 39		 jne	 SHORT $LN81@OnEventSoc
  00f98	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00f9b	8b 10		 mov	 edx, DWORD PTR [eax]
  00f9d	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00fa0	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00fa6	ff d0		 call	 eax
  00fa8	0f b6 c8	 movzx	 ecx, al
  00fab	85 c9		 test	 ecx, ecx
  00fad	75 22		 jne	 SHORT $LN81@OnEventSoc

; 2058 : 			{
; 2059 : 				SendGameMessage(pIServerUserItem,TEXT("抱歉，当前游戏房间禁止游戏聊天！"),SMT_CHAT);

  00faf	6a 01		 push	 1
  00fb1	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@
  00fb6	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00fb9	50		 push	 eax
  00fba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00fbd	8b 11		 mov	 edx, DWORD PTR [ecx]
  00fbf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00fc2	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  00fc8	ff d0		 call	 eax

; 2060 : 				return true;

  00fca	b0 01		 mov	 al, 1
  00fcc	e9 fd 08 00 00	 jmp	 $LN1@OnEventSoc
$LN81@OnEventSoc:

; 2061 : 			}
; 2062 : 
; 2063 : 			//权限判断
; 2064 : 			if (CUserRight::CanRoomChat(pIServerUserItem->GetUserRight())==false)

  00fd1	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00fd4	8b 10		 mov	 edx, DWORD PTR [eax]
  00fd6	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00fd9	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00fdc	ff d0		 call	 eax
  00fde	50		 push	 eax
  00fdf	e8 00 00 00 00	 call	 ?CanRoomChat@CUserRight@@SA_NK@Z ; CUserRight::CanRoomChat
  00fe4	83 c4 04	 add	 esp, 4
  00fe7	0f b6 c8	 movzx	 ecx, al
  00fea	85 c9		 test	 ecx, ecx
  00fec	75 22		 jne	 SHORT $LN82@OnEventSoc

; 2065 : 			{
; 2066 : 				SendGameMessage(pIServerUserItem,TEXT("抱歉，您没有游戏聊天的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  00fee	6a 03		 push	 3
  00ff0	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  00ff5	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00ff8	50		 push	 eax
  00ff9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ffc	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ffe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01001	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  01007	ff d0		 call	 eax

; 2067 : 				return true;

  01009	b0 01		 mov	 al, 1
  0100b	e9 be 08 00 00	 jmp	 $LN1@OnEventSoc
$LN82@OnEventSoc:

; 2068 : 			}
; 2069 : 
; 2070 : 			//构造消息
; 2071 : 			CMD_GR_S_UserExpression UserExpression;
; 2072 : 			ZeroMemory(&UserExpression,sizeof(UserExpression));

  01010	6a 0a		 push	 10			; 0000000aH
  01012	6a 00		 push	 0
  01014	8d 85 44 fc ff
	ff		 lea	 eax, DWORD PTR _UserExpression$21[ebp]
  0101a	50		 push	 eax
  0101b	e8 00 00 00 00	 call	 _memset
  01020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2073 : 
; 2074 : 			//构造数据
; 2075 : 			UserExpression.wItemIndex=pUserExpression->wItemIndex;

  01023	8b 85 50 fc ff
	ff		 mov	 eax, DWORD PTR _pUserExpression$22[ebp]
  01029	66 8b 08	 mov	 cx, WORD PTR [eax]
  0102c	66 89 8d 44 fc
	ff ff		 mov	 WORD PTR _UserExpression$21[ebp], cx

; 2076 : 			UserExpression.dwSendUserID=pIServerUserItem->GetUserID();

  01033	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01036	8b 10		 mov	 edx, DWORD PTR [eax]
  01038	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0103b	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0103e	ff d0		 call	 eax
  01040	89 85 46 fc ff
	ff		 mov	 DWORD PTR _UserExpression$21[ebp+2], eax

; 2077 : 			UserExpression.dwTargetUserID=pUserExpression->dwTargetUserID;

  01046	8b 85 50 fc ff
	ff		 mov	 eax, DWORD PTR _pUserExpression$22[ebp]
  0104c	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  0104f	89 8d 4a fc ff
	ff		 mov	 DWORD PTR _UserExpression$21[ebp+6], ecx

; 2078 : 
; 2079 : 			//游戏用户
; 2080 : 			for (WORD i=0;i<m_wChairCount;i++)

  01055	33 c0		 xor	 eax, eax
  01057	66 89 85 40 fc
	ff ff		 mov	 WORD PTR _i$20[ebp], ax
  0105e	eb 12		 jmp	 SHORT $LN15@OnEventSoc
$LN13@OnEventSoc:
  01060	66 8b 85 40 fc
	ff ff		 mov	 ax, WORD PTR _i$20[ebp]
  01067	66 83 c0 01	 add	 ax, 1
  0106b	66 89 85 40 fc
	ff ff		 mov	 WORD PTR _i$20[ebp], ax
$LN15@OnEventSoc:
  01072	0f b7 85 40 fc
	ff ff		 movzx	 eax, WORD PTR _i$20[ebp]
  01079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0107c	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  01080	3b c2		 cmp	 eax, edx
  01082	7d 78		 jge	 SHORT $LN14@OnEventSoc

; 2081 : 			{
; 2082 : 				//获取用户
; 2083 : 				IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  01084	0f b7 85 40 fc
	ff ff		 movzx	 eax, WORD PTR _i$20[ebp]
  0108b	50		 push	 eax
  0108c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0108f	8b 11		 mov	 edx, DWORD PTR [ecx]
  01091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01094	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0109a	ff d0		 call	 eax
  0109c	89 85 3c fc ff
	ff		 mov	 DWORD PTR _pIServerUserItem$19[ebp], eax

; 2084 : 				if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) continue;

  010a2	83 bd 3c fc ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$19[ebp], 0
  010a9	74 1d		 je	 SHORT $LN84@OnEventSoc
  010ab	8b 85 3c fc ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$19[ebp]
  010b1	8b 10		 mov	 edx, DWORD PTR [eax]
  010b3	8b 8d 3c fc ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$19[ebp]
  010b9	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  010bf	ff d0		 call	 eax
  010c1	0f b6 c8	 movzx	 ecx, al
  010c4	85 c9		 test	 ecx, ecx
  010c6	75 02		 jne	 SHORT $LN83@OnEventSoc
$LN84@OnEventSoc:
  010c8	eb 96		 jmp	 SHORT $LN13@OnEventSoc
$LN83@OnEventSoc:

; 2085 : 
; 2086 : 				//发送数据
; 2087 : 				m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_EXPRESSION,&UserExpression,sizeof(UserExpression));

  010ca	6a 0a		 push	 10			; 0000000aH
  010cc	8d 85 44 fc ff
	ff		 lea	 eax, DWORD PTR _UserExpression$21[ebp]
  010d2	50		 push	 eax
  010d3	6a 0b		 push	 11			; 0000000bH
  010d5	6a 64		 push	 100			; 00000064H
  010d7	8b 8d 3c fc ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$19[ebp]
  010dd	51		 push	 ecx
  010de	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  010e1	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  010e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  010ea	8b 10		 mov	 edx, DWORD PTR [eax]
  010ec	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  010f2	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  010f5	ff d0		 call	 eax

; 2088 : 			}

  010f7	e9 64 ff ff ff	 jmp	 $LN13@OnEventSoc
$LN14@OnEventSoc:

; 2089 : 
; 2090 : 			//旁观用户
; 2091 : 			WORD wEnumIndex=0;

  010fc	33 c0		 xor	 eax, eax
  010fe	66 89 85 38 fc
	ff ff		 mov	 WORD PTR _wEnumIndex$18[ebp], ax

; 2092 : 			IServerUserItem * pIServerUserItem=NULL;

  01105	c7 85 34 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItem$17[ebp], 0
$LN18@OnEventSoc:

; 2093 : 
; 2094 : 			//枚举用户
; 2095 : 			do
; 2096 : 			{
; 2097 : 				//获取用户
; 2098 : 				pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  0110f	66 8b 85 38 fc
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$18[ebp]
  01116	66 89 85 5a bf
	ff ff		 mov	 WORD PTR tv1006[ebp], ax
  0111d	0f b7 8d 5a bf
	ff ff		 movzx	 ecx, WORD PTR tv1006[ebp]
  01124	51		 push	 ecx
  01125	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01128	8b 02		 mov	 eax, DWORD PTR [edx]
  0112a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0112d	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  01133	ff d2		 call	 edx
  01135	89 85 34 fc ff
	ff		 mov	 DWORD PTR _pIServerUserItem$17[ebp], eax
  0113b	66 8b 85 38 fc
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$18[ebp]
  01142	66 83 c0 01	 add	 ax, 1
  01146	66 89 85 38 fc
	ff ff		 mov	 WORD PTR _wEnumIndex$18[ebp], ax

; 2099 : 				if (pIServerUserItem==NULL) break;

  0114d	83 bd 34 fc ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$17[ebp], 0
  01154	75 02		 jne	 SHORT $LN85@OnEventSoc
  01156	eb 58		 jmp	 SHORT $LN17@OnEventSoc
$LN85@OnEventSoc:

; 2100 : 
; 2101 : 				//发送数据
; 2102 : 				if (pIServerUserItem->IsClientReady()==true)

  01158	8b 85 34 fc ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$17[ebp]
  0115e	8b 10		 mov	 edx, DWORD PTR [eax]
  01160	8b 8d 34 fc ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$17[ebp]
  01166	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0116c	ff d0		 call	 eax
  0116e	0f b6 c8	 movzx	 ecx, al
  01171	83 f9 01	 cmp	 ecx, 1
  01174	75 2d		 jne	 SHORT $LN16@OnEventSoc

; 2103 : 				{
; 2104 : 					m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_EXPRESSION,&UserExpression,sizeof(UserExpression));

  01176	6a 0a		 push	 10			; 0000000aH
  01178	8d 85 44 fc ff
	ff		 lea	 eax, DWORD PTR _UserExpression$21[ebp]
  0117e	50		 push	 eax
  0117f	6a 0b		 push	 11			; 0000000bH
  01181	6a 64		 push	 100			; 00000064H
  01183	8b 8d 34 fc ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$17[ebp]
  01189	51		 push	 ecx
  0118a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0118d	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  01193	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01196	8b 10		 mov	 edx, DWORD PTR [eax]
  01198	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0119e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  011a1	ff d0		 call	 eax
$LN16@OnEventSoc:

; 2105 : 				}
; 2106 : 			} while (true);

  011a3	b8 01 00 00 00	 mov	 eax, 1
  011a8	85 c0		 test	 eax, eax
  011aa	0f 85 5f ff ff
	ff		 jne	 $LN18@OnEventSoc
$LN17@OnEventSoc:

; 2107 : 
; 2108 : 			return true;

  011b0	b0 01		 mov	 al, 1
  011b2	e9 17 07 00 00	 jmp	 $LN1@OnEventSoc
$LN87@OnEventSoc:

; 2109 : 		}
; 2110 : 	case SUB_GF_USER_VOICE:	//用户语音
; 2111 : 		{
; 2112 : 			//变量定义
; 2113 : 			CMD_GF_C_UserVoice * pUserVoice=(CMD_GF_C_UserVoice *)pData;

  011b7	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  011ba	89 85 30 fc ff
	ff		 mov	 DWORD PTR _pUserVoice$16[ebp], eax

; 2114 : 
; 2115 : 			//效验参数
; 2116 : 			ASSERT(wDataSize<=sizeof(CMD_GF_C_UserVoice));

  011c0	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  011c4	3d a0 3a 00 00	 cmp	 eax, 15008		; 00003aa0H
  011c9	76 1c		 jbe	 SHORT $LN123@OnEventSoc
  011cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  011d1	81 c1 8d 01 00
	00		 add	 ecx, 397		; 0000018dH
  011d7	51		 push	 ecx
  011d8	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  011dd	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  011e2	85 c0		 test	 eax, eax
  011e4	74 01		 je	 SHORT $LN123@OnEventSoc
  011e6	cc		 int	 3
$LN123@OnEventSoc:

; 2117 : 			ASSERT(wDataSize>=(sizeof(CMD_GF_C_UserVoice)-sizeof(pUserVoice->byVoiceData)));

  011e7	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  011eb	83 f8 08	 cmp	 eax, 8
  011ee	73 1c		 jae	 SHORT $LN124@OnEventSoc
  011f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  011f6	81 c1 8e 01 00
	00		 add	 ecx, 398		; 0000018eH
  011fc	51		 push	 ecx
  011fd	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  01202	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  01207	85 c0		 test	 eax, eax
  01209	74 01		 je	 SHORT $LN124@OnEventSoc
  0120b	cc		 int	 3
$LN124@OnEventSoc:

; 2118 : 			ASSERT(wDataSize==(sizeof(CMD_GF_C_UserVoice)-sizeof(pUserVoice->byVoiceData)+pUserVoice->dwVoiceLength*sizeof(pUserVoice->byVoiceData[0])));

  0120c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  01210	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR _pUserVoice$16[ebp]
  01216	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01219	83 c2 08	 add	 edx, 8
  0121c	3b c2		 cmp	 eax, edx
  0121e	74 1a		 je	 SHORT $LN125@OnEventSoc
  01220	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  01225	05 8f 01 00 00	 add	 eax, 399		; 0000018fH
  0122a	50		 push	 eax
  0122b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  01230	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  01235	85 c0		 test	 eax, eax
  01237	74 01		 je	 SHORT $LN125@OnEventSoc
  01239	cc		 int	 3
$LN125@OnEventSoc:

; 2119 : 
; 2120 : 			//效验参数
; 2121 : 			if (wDataSize>sizeof(CMD_GF_C_UserVoice)) return false;

  0123a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0123e	3d a0 3a 00 00	 cmp	 eax, 15008		; 00003aa0H
  01243	76 07		 jbe	 SHORT $LN88@OnEventSoc
  01245	32 c0		 xor	 al, al
  01247	e9 82 06 00 00	 jmp	 $LN1@OnEventSoc
$LN88@OnEventSoc:

; 2122 : 			if (wDataSize<(sizeof(CMD_GF_C_UserVoice)-sizeof(pUserVoice->byVoiceData))) return false;

  0124c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  01250	83 f8 08	 cmp	 eax, 8
  01253	73 07		 jae	 SHORT $LN89@OnEventSoc
  01255	32 c0		 xor	 al, al
  01257	e9 72 06 00 00	 jmp	 $LN1@OnEventSoc
$LN89@OnEventSoc:

; 2123 : 			if (wDataSize!=(sizeof(CMD_GF_C_UserVoice)-sizeof(pUserVoice->byVoiceData)+pUserVoice->dwVoiceLength*sizeof(pUserVoice->byVoiceData[0]))) return false;

  0125c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  01260	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR _pUserVoice$16[ebp]
  01266	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01269	83 c2 08	 add	 edx, 8
  0126c	3b c2		 cmp	 eax, edx
  0126e	74 07		 je	 SHORT $LN90@OnEventSoc
  01270	32 c0		 xor	 al, al
  01272	e9 57 06 00 00	 jmp	 $LN1@OnEventSoc
$LN90@OnEventSoc:

; 2124 : 
; 2125 : 			//目标用户
; 2126 : 			if ((pUserVoice->dwTargetUserID!=0)&&(SearchUserItem(pUserVoice->dwTargetUserID)==NULL))

  01277	8b 85 30 fc ff
	ff		 mov	 eax, DWORD PTR _pUserVoice$16[ebp]
  0127d	83 38 00	 cmp	 DWORD PTR [eax], 0
  01280	74 44		 je	 SHORT $LN91@OnEventSoc
  01282	8b 85 30 fc ff
	ff		 mov	 eax, DWORD PTR _pUserVoice$16[ebp]
  01288	8b 08		 mov	 ecx, DWORD PTR [eax]
  0128a	51		 push	 ecx
  0128b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0128e	8b 02		 mov	 eax, DWORD PTR [edx]
  01290	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01293	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  01299	ff d2		 call	 edx
  0129b	85 c0		 test	 eax, eax
  0129d	75 27		 jne	 SHORT $LN91@OnEventSoc

; 2127 : 			{
; 2128 : 				ASSERT(FALSE);

  0129f	33 c0		 xor	 eax, eax
  012a1	75 1c		 jne	 SHORT $LN126@OnEventSoc
  012a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  012a9	81 c1 99 01 00
	00		 add	 ecx, 409		; 00000199H
  012af	51		 push	 ecx
  012b0	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  012b5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  012ba	85 c0		 test	 eax, eax
  012bc	74 01		 je	 SHORT $LN126@OnEventSoc
  012be	cc		 int	 3
$LN126@OnEventSoc:

; 2129 : 				return true;

  012bf	b0 01		 mov	 al, 1
  012c1	e9 08 06 00 00	 jmp	 $LN1@OnEventSoc
$LN91@OnEventSoc:

; 2130 : 			}
; 2131 : 
; 2132 : 			//状态判断
; 2133 : 			if ((CServerRule::IsForfendGameChat(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0L))

  012c6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  012c9	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  012cf	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  012d2	52		 push	 edx
  012d3	e8 00 00 00 00	 call	 ?IsForfendGameChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameChat
  012d8	83 c4 04	 add	 esp, 4
  012db	0f b6 c0	 movzx	 eax, al
  012de	83 f8 01	 cmp	 eax, 1
  012e1	75 39		 jne	 SHORT $LN92@OnEventSoc
  012e3	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  012e6	8b 10		 mov	 edx, DWORD PTR [eax]
  012e8	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  012eb	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  012f1	ff d0		 call	 eax
  012f3	0f b6 c8	 movzx	 ecx, al
  012f6	85 c9		 test	 ecx, ecx
  012f8	75 22		 jne	 SHORT $LN92@OnEventSoc

; 2134 : 			{
; 2135 : 				SendGameMessage(pIServerUserItem,TEXT("抱歉，当前游戏房间禁止游戏聊天！"),SMT_CHAT);

  012fa	6a 01		 push	 1
  012fc	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@
  01301	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01304	50		 push	 eax
  01305	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01308	8b 11		 mov	 edx, DWORD PTR [ecx]
  0130a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0130d	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  01313	ff d0		 call	 eax

; 2136 : 				return true;

  01315	b0 01		 mov	 al, 1
  01317	e9 b2 05 00 00	 jmp	 $LN1@OnEventSoc
$LN92@OnEventSoc:

; 2137 : 			}
; 2138 : 
; 2139 : 			//权限判断
; 2140 : 			if (CUserRight::CanRoomChat(pIServerUserItem->GetUserRight())==false)

  0131c	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0131f	8b 10		 mov	 edx, DWORD PTR [eax]
  01321	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  01324	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  01327	ff d0		 call	 eax
  01329	50		 push	 eax
  0132a	e8 00 00 00 00	 call	 ?CanRoomChat@CUserRight@@SA_NK@Z ; CUserRight::CanRoomChat
  0132f	83 c4 04	 add	 esp, 4
  01332	0f b6 c8	 movzx	 ecx, al
  01335	85 c9		 test	 ecx, ecx
  01337	75 22		 jne	 SHORT $LN93@OnEventSoc

; 2141 : 			{
; 2142 : 				SendGameMessage(pIServerUserItem,TEXT("抱歉，您没有游戏聊天的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  01339	6a 03		 push	 3
  0133b	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  01340	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01343	50		 push	 eax
  01344	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01347	8b 11		 mov	 edx, DWORD PTR [ecx]
  01349	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0134c	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  01352	ff d0		 call	 eax

; 2143 : 				return true;

  01354	b0 01		 mov	 al, 1
  01356	e9 73 05 00 00	 jmp	 $LN1@OnEventSoc
$LN93@OnEventSoc:

; 2144 : 			}
; 2145 : 
; 2146 : 			//构造消息
; 2147 : 			CMD_GF_S_UserVoice UserVoice;
; 2148 : 			ZeroMemory(&UserVoice,sizeof(UserVoice));

  0135b	68 a4 3a 00 00	 push	 15012			; 00003aa4H
  01360	6a 00		 push	 0
  01362	8d 85 8c c1 ff
	ff		 lea	 eax, DWORD PTR _UserVoice$15[ebp]
  01368	50		 push	 eax
  01369	e8 00 00 00 00	 call	 _memset
  0136e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2149 : 
; 2150 : 			//构造数据
; 2151 : 			UserVoice.dwSendUserID=pIServerUserItem->GetUserID();

  01371	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01374	8b 10		 mov	 edx, DWORD PTR [eax]
  01376	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  01379	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0137c	ff d0		 call	 eax
  0137e	89 85 8c c1 ff
	ff		 mov	 DWORD PTR _UserVoice$15[ebp], eax

; 2152 : 			UserVoice.dwTargetUserID=pUserVoice->dwTargetUserID;

  01384	8b 85 30 fc ff
	ff		 mov	 eax, DWORD PTR _pUserVoice$16[ebp]
  0138a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0138c	89 8d 90 c1 ff
	ff		 mov	 DWORD PTR _UserVoice$15[ebp+4], ecx

; 2153 : 			UserVoice.dwVoiceLength = pUserVoice->dwVoiceLength>MAXT_VOICE_LENGTH?MAXT_VOICE_LENGTH:pUserVoice->dwVoiceLength;

  01392	8b 85 30 fc ff
	ff		 mov	 eax, DWORD PTR _pUserVoice$16[ebp]
  01398	81 78 04 98 3a
	00 00		 cmp	 DWORD PTR [eax+4], 15000 ; 00003a98H
  0139f	76 0c		 jbe	 SHORT $LN127@OnEventSoc
  013a1	c7 85 58 bf ff
	ff 98 3a 00 00	 mov	 DWORD PTR tv1133[ebp], 15000 ; 00003a98H
  013ab	eb 0f		 jmp	 SHORT $LN128@OnEventSoc
$LN127@OnEventSoc:
  013ad	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR _pUserVoice$16[ebp]
  013b3	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  013b6	89 95 58 bf ff
	ff		 mov	 DWORD PTR tv1133[ebp], edx
$LN128@OnEventSoc:
  013bc	8b 85 58 bf ff
	ff		 mov	 eax, DWORD PTR tv1133[ebp]
  013c2	89 85 94 c1 ff
	ff		 mov	 DWORD PTR _UserVoice$15[ebp+8], eax

; 2154 : 			CopyMemory(UserVoice.byVoiceData,pUserVoice->byVoiceData,UserVoice.dwVoiceLength);

  013c8	8b 85 94 c1 ff
	ff		 mov	 eax, DWORD PTR _UserVoice$15[ebp+8]
  013ce	50		 push	 eax
  013cf	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR _pUserVoice$16[ebp]
  013d5	83 c1 08	 add	 ecx, 8
  013d8	51		 push	 ecx
  013d9	8d 95 98 c1 ff
	ff		 lea	 edx, DWORD PTR _UserVoice$15[ebp+12]
  013df	52		 push	 edx
  013e0	e8 00 00 00 00	 call	 _memcpy
  013e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2155 : 
; 2156 : 			//发送数据
; 2157 : 			WORD wHeadSize=sizeof(UserVoice)-sizeof(UserVoice.byVoiceData);

  013e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  013ed	66 89 85 88 c1
	ff ff		 mov	 WORD PTR _wHeadSize$14[ebp], ax

; 2158 : 			WORD wSendSize=(WORD)(wHeadSize+UserVoice.dwVoiceLength*sizeof(UserVoice.byVoiceData[0]));

  013f4	0f b7 85 88 c1
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$14[ebp]
  013fb	03 85 94 c1 ff
	ff		 add	 eax, DWORD PTR _UserVoice$15[ebp+8]
  01401	66 89 85 84 c1
	ff ff		 mov	 WORD PTR _wSendSize$13[ebp], ax

; 2159 : 
; 2160 : 			//游戏用户
; 2161 : 			for (WORD i=0;i<m_wChairCount;i++)

  01408	33 c0		 xor	 eax, eax
  0140a	66 89 85 80 c1
	ff ff		 mov	 WORD PTR _i$12[ebp], ax
  01411	eb 12		 jmp	 SHORT $LN21@OnEventSoc
$LN19@OnEventSoc:
  01413	66 8b 85 80 c1
	ff ff		 mov	 ax, WORD PTR _i$12[ebp]
  0141a	66 83 c0 01	 add	 ax, 1
  0141e	66 89 85 80 c1
	ff ff		 mov	 WORD PTR _i$12[ebp], ax
$LN21@OnEventSoc:
  01425	0f b7 85 80 c1
	ff ff		 movzx	 eax, WORD PTR _i$12[ebp]
  0142c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0142f	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  01433	3b c2		 cmp	 eax, edx
  01435	7d 7e		 jge	 SHORT $LN20@OnEventSoc

; 2162 : 			{
; 2163 : 				//获取用户
; 2164 : 				IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  01437	0f b7 85 80 c1
	ff ff		 movzx	 eax, WORD PTR _i$12[ebp]
  0143e	50		 push	 eax
  0143f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01442	8b 11		 mov	 edx, DWORD PTR [ecx]
  01444	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01447	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0144d	ff d0		 call	 eax
  0144f	89 85 7c c1 ff
	ff		 mov	 DWORD PTR _pIServerUserItem$11[ebp], eax

; 2165 : 				if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) continue;

  01455	83 bd 7c c1 ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$11[ebp], 0
  0145c	74 1d		 je	 SHORT $LN95@OnEventSoc
  0145e	8b 85 7c c1 ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$11[ebp]
  01464	8b 10		 mov	 edx, DWORD PTR [eax]
  01466	8b 8d 7c c1 ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$11[ebp]
  0146c	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  01472	ff d0		 call	 eax
  01474	0f b6 c8	 movzx	 ecx, al
  01477	85 c9		 test	 ecx, ecx
  01479	75 02		 jne	 SHORT $LN94@OnEventSoc
$LN95@OnEventSoc:
  0147b	eb 96		 jmp	 SHORT $LN19@OnEventSoc
$LN94@OnEventSoc:

; 2166 : 
; 2167 : 				//发送数据
; 2168 : 				m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_VOICE,&UserVoice,wSendSize);

  0147d	0f b7 85 84 c1
	ff ff		 movzx	 eax, WORD PTR _wSendSize$13[ebp]
  01484	50		 push	 eax
  01485	8d 8d 8c c1 ff
	ff		 lea	 ecx, DWORD PTR _UserVoice$15[ebp]
  0148b	51		 push	 ecx
  0148c	6a 0c		 push	 12			; 0000000cH
  0148e	6a 64		 push	 100			; 00000064H
  01490	8b 95 7c c1 ff
	ff		 mov	 edx, DWORD PTR _pIServerUserItem$11[ebp]
  01496	52		 push	 edx
  01497	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0149a	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  014a0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  014a3	8b 01		 mov	 eax, DWORD PTR [ecx]
  014a5	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  014ab	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  014ae	ff d2		 call	 edx

; 2169 : 			}

  014b0	e9 5e ff ff ff	 jmp	 $LN19@OnEventSoc
$LN20@OnEventSoc:

; 2170 : 
; 2171 : 			//旁观用户
; 2172 : 			WORD wEnumIndex=0;

  014b5	33 c0		 xor	 eax, eax
  014b7	66 89 85 78 c1
	ff ff		 mov	 WORD PTR _wEnumIndex$10[ebp], ax

; 2173 : 			IServerUserItem * pIServerUserItem=NULL;

  014be	c7 85 74 c1 ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItem$9[ebp], 0
$LN24@OnEventSoc:

; 2174 : 
; 2175 : 			//枚举用户
; 2176 : 			do
; 2177 : 			{
; 2178 : 				//获取用户
; 2179 : 				pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  014c8	66 8b 85 78 c1
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$10[ebp]
  014cf	66 89 85 5a bf
	ff ff		 mov	 WORD PTR tv1215[ebp], ax
  014d6	0f b7 8d 5a bf
	ff ff		 movzx	 ecx, WORD PTR tv1215[ebp]
  014dd	51		 push	 ecx
  014de	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  014e1	8b 02		 mov	 eax, DWORD PTR [edx]
  014e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  014e6	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  014ec	ff d2		 call	 edx
  014ee	89 85 74 c1 ff
	ff		 mov	 DWORD PTR _pIServerUserItem$9[ebp], eax
  014f4	66 8b 85 78 c1
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$10[ebp]
  014fb	66 83 c0 01	 add	 ax, 1
  014ff	66 89 85 78 c1
	ff ff		 mov	 WORD PTR _wEnumIndex$10[ebp], ax

; 2180 : 				if (pIServerUserItem==NULL) break;

  01506	83 bd 74 c1 ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$9[ebp], 0
  0150d	75 02		 jne	 SHORT $LN96@OnEventSoc
  0150f	eb 5e		 jmp	 SHORT $LN23@OnEventSoc
$LN96@OnEventSoc:

; 2181 : 
; 2182 : 				//发送数据
; 2183 : 				if (pIServerUserItem->IsClientReady()==true)

  01511	8b 85 74 c1 ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$9[ebp]
  01517	8b 10		 mov	 edx, DWORD PTR [eax]
  01519	8b 8d 74 c1 ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$9[ebp]
  0151f	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  01525	ff d0		 call	 eax
  01527	0f b6 c8	 movzx	 ecx, al
  0152a	83 f9 01	 cmp	 ecx, 1
  0152d	75 33		 jne	 SHORT $LN22@OnEventSoc

; 2184 : 				{
; 2185 : 					m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_VOICE,&UserVoice,wSendSize);

  0152f	0f b7 85 84 c1
	ff ff		 movzx	 eax, WORD PTR _wSendSize$13[ebp]
  01536	50		 push	 eax
  01537	8d 8d 8c c1 ff
	ff		 lea	 ecx, DWORD PTR _UserVoice$15[ebp]
  0153d	51		 push	 ecx
  0153e	6a 0c		 push	 12			; 0000000cH
  01540	6a 64		 push	 100			; 00000064H
  01542	8b 95 74 c1 ff
	ff		 mov	 edx, DWORD PTR _pIServerUserItem$9[ebp]
  01548	52		 push	 edx
  01549	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0154c	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  01552	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01555	8b 01		 mov	 eax, DWORD PTR [ecx]
  01557	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  0155d	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  01560	ff d2		 call	 edx
$LN22@OnEventSoc:

; 2186 : 				}
; 2187 : 			} while (true);

  01562	b8 01 00 00 00	 mov	 eax, 1
  01567	85 c0		 test	 eax, eax
  01569	0f 85 59 ff ff
	ff		 jne	 $LN24@OnEventSoc
$LN23@OnEventSoc:

; 2188 : 
; 2189 : 			return true;

  0156f	b0 01		 mov	 al, 1
  01571	e9 58 03 00 00	 jmp	 $LN1@OnEventSoc
$LN98@OnEventSoc:

; 2190 : 		}
; 2191 : 	case SUB_GF_LOOKON_CONFIG:		//旁观配置
; 2192 : 		{
; 2193 : 			//效验参数
; 2194 : 			ASSERT(wDataSize==sizeof(CMD_GF_LookonConfig));

  01576	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0157a	83 f8 05	 cmp	 eax, 5
  0157d	74 1c		 je	 SHORT $LN129@OnEventSoc
  0157f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  01585	81 c1 db 01 00
	00		 add	 ecx, 475		; 000001dbH
  0158b	51		 push	 ecx
  0158c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  01591	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  01596	85 c0		 test	 eax, eax
  01598	74 01		 je	 SHORT $LN129@OnEventSoc
  0159a	cc		 int	 3
$LN129@OnEventSoc:

; 2195 : 			if (wDataSize<sizeof(CMD_GF_LookonConfig)) return false;

  0159b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0159f	83 f8 05	 cmp	 eax, 5
  015a2	73 07		 jae	 SHORT $LN99@OnEventSoc
  015a4	32 c0		 xor	 al, al
  015a6	e9 23 03 00 00	 jmp	 $LN1@OnEventSoc
$LN99@OnEventSoc:

; 2196 : 
; 2197 : 			//变量定义
; 2198 : 			CMD_GF_LookonConfig * pLookonConfig=(CMD_GF_LookonConfig *)pData;

  015ab	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  015ae	89 85 70 c1 ff
	ff		 mov	 DWORD PTR _pLookonConfig$8[ebp], eax

; 2199 : 
; 2200 : 			//目标用户
; 2201 : 			if ((pLookonConfig->dwUserID!=0)&&(SearchUserItem(pLookonConfig->dwUserID)==NULL))

  015b4	8b 85 70 c1 ff
	ff		 mov	 eax, DWORD PTR _pLookonConfig$8[ebp]
  015ba	83 38 00	 cmp	 DWORD PTR [eax], 0
  015bd	74 44		 je	 SHORT $LN100@OnEventSoc
  015bf	8b 85 70 c1 ff
	ff		 mov	 eax, DWORD PTR _pLookonConfig$8[ebp]
  015c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  015c7	51		 push	 ecx
  015c8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  015cb	8b 02		 mov	 eax, DWORD PTR [edx]
  015cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  015d0	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  015d6	ff d2		 call	 edx
  015d8	85 c0		 test	 eax, eax
  015da	75 27		 jne	 SHORT $LN100@OnEventSoc

; 2202 : 			{
; 2203 : 				ASSERT(FALSE);

  015dc	33 c0		 xor	 eax, eax
  015de	75 1c		 jne	 SHORT $LN130@OnEventSoc
  015e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  015e6	81 c1 e4 01 00
	00		 add	 ecx, 484		; 000001e4H
  015ec	51		 push	 ecx
  015ed	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  015f2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  015f7	85 c0		 test	 eax, eax
  015f9	74 01		 je	 SHORT $LN130@OnEventSoc
  015fb	cc		 int	 3
$LN130@OnEventSoc:

; 2204 : 				return true;

  015fc	b0 01		 mov	 al, 1
  015fe	e9 cb 02 00 00	 jmp	 $LN1@OnEventSoc
$LN100@OnEventSoc:

; 2205 : 			}
; 2206 : 
; 2207 : 			//用户效验
; 2208 : 			ASSERT(pIServerUserItem->GetUserStatus()!=US_LOOKON);

  01603	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01606	8b 10		 mov	 edx, DWORD PTR [eax]
  01608	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0160b	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0160e	ff d0		 call	 eax
  01610	0f b6 c8	 movzx	 ecx, al
  01613	83 f9 04	 cmp	 ecx, 4
  01616	75 1c		 jne	 SHORT $LN131@OnEventSoc
  01618	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  0161e	81 c2 e9 01 00
	00		 add	 edx, 489		; 000001e9H
  01624	52		 push	 edx
  01625	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0162a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0162f	85 c0		 test	 eax, eax
  01631	74 01		 je	 SHORT $LN131@OnEventSoc
  01633	cc		 int	 3
$LN131@OnEventSoc:

; 2209 : 			if (pIServerUserItem->GetUserStatus()==US_LOOKON) return false;

  01634	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01637	8b 10		 mov	 edx, DWORD PTR [eax]
  01639	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0163c	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0163f	ff d0		 call	 eax
  01641	0f b6 c8	 movzx	 ecx, al
  01644	83 f9 04	 cmp	 ecx, 4
  01647	75 07		 jne	 SHORT $LN101@OnEventSoc
  01649	32 c0		 xor	 al, al
  0164b	e9 7e 02 00 00	 jmp	 $LN1@OnEventSoc
$LN101@OnEventSoc:

; 2210 : 
; 2211 : 			//旁观处理
; 2212 : 			if (pLookonConfig->dwUserID!=0L)

  01650	8b 85 70 c1 ff
	ff		 mov	 eax, DWORD PTR _pLookonConfig$8[ebp]
  01656	83 38 00	 cmp	 DWORD PTR [eax], 0
  01659	0f 84 10 01 00
	00		 je	 $LN102@OnEventSoc

; 2213 : 			{
; 2214 : 				for (INT_PTR i=0;i<m_LookonUserItemArray.GetCount();i++)

  0165f	c7 85 6c c1 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$7[ebp], 0
  01669	eb 0f		 jmp	 SHORT $LN27@OnEventSoc
$LN25@OnEventSoc:
  0166b	8b 85 6c c1 ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  01671	83 c0 01	 add	 eax, 1
  01674	89 85 6c c1 ff
	ff		 mov	 DWORD PTR _i$7[ebp], eax
$LN27@OnEventSoc:
  0167a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0167d	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  01683	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
  01688	39 85 6c c1 ff
	ff		 cmp	 DWORD PTR _i$7[ebp], eax
  0168e	0f 8d d6 00 00
	00		 jge	 $LN26@OnEventSoc

; 2215 : 				{
; 2216 : 					//获取用户
; 2217 : 					IServerUserItem * pILookonUserItem=m_LookonUserItemArray[i];

  01694	8b 85 6c c1 ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  0169a	50		 push	 eax
  0169b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0169e	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  016a4	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
  016a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  016ab	89 8d 68 c1 ff
	ff		 mov	 DWORD PTR _pILookonUserItem$6[ebp], ecx

; 2218 : 					if (pILookonUserItem->GetUserID()!=pLookonConfig->dwUserID) continue;

  016b1	8b 85 68 c1 ff
	ff		 mov	 eax, DWORD PTR _pILookonUserItem$6[ebp]
  016b7	8b 10		 mov	 edx, DWORD PTR [eax]
  016b9	8b 8d 68 c1 ff
	ff		 mov	 ecx, DWORD PTR _pILookonUserItem$6[ebp]
  016bf	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  016c2	ff d0		 call	 eax
  016c4	8b 8d 70 c1 ff
	ff		 mov	 ecx, DWORD PTR _pLookonConfig$8[ebp]
  016ca	3b 01		 cmp	 eax, DWORD PTR [ecx]
  016cc	74 02		 je	 SHORT $LN104@OnEventSoc
  016ce	eb 9b		 jmp	 SHORT $LN25@OnEventSoc
$LN104@OnEventSoc:

; 2219 : 					if (pILookonUserItem->GetChairID()!=pIServerUserItem->GetChairID()) continue;

  016d0	8b 85 68 c1 ff
	ff		 mov	 eax, DWORD PTR _pILookonUserItem$6[ebp]
  016d6	8b 10		 mov	 edx, DWORD PTR [eax]
  016d8	8b 8d 68 c1 ff
	ff		 mov	 ecx, DWORD PTR _pILookonUserItem$6[ebp]
  016de	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  016e1	ff d0		 call	 eax
  016e3	0f b7 f0	 movzx	 esi, ax
  016e6	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  016e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  016eb	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  016ee	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  016f1	ff d0		 call	 eax
  016f3	0f b7 c8	 movzx	 ecx, ax
  016f6	3b f1		 cmp	 esi, ecx
  016f8	74 05		 je	 SHORT $LN105@OnEventSoc
  016fa	e9 6c ff ff ff	 jmp	 $LN25@OnEventSoc
$LN105@OnEventSoc:

; 2220 : 
; 2221 : 					//构造消息
; 2222 : 					CMD_GF_LookonStatus LookonStatus;
; 2223 : 					LookonStatus.cbAllowLookon=pLookonConfig->cbAllowLookon;

  016ff	8b 85 70 c1 ff
	ff		 mov	 eax, DWORD PTR _pLookonConfig$8[ebp]
  01705	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  01708	88 8d 67 c1 ff
	ff		 mov	 BYTE PTR _LookonStatus$5[ebp], cl

; 2224 : 
; 2225 : 					//发送消息
; 2226 : 					ASSERT(m_pIMainServiceFrame!=NULL);

  0170e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01711	83 b8 cc 0f 00
	00 00		 cmp	 DWORD PTR [eax+4044], 0
  01718	75 1c		 jne	 SHORT $LN132@OnEventSoc
  0171a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  01720	81 c1 fb 01 00
	00		 add	 ecx, 507		; 000001fbH
  01726	51		 push	 ecx
  01727	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0172c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  01731	85 c0		 test	 eax, eax
  01733	74 01		 je	 SHORT $LN132@OnEventSoc
  01735	cc		 int	 3
$LN132@OnEventSoc:

; 2227 : 					m_pIMainServiceFrame->SendData(pILookonUserItem,MDM_GF_FRAME,SUB_GF_LOOKON_STATUS,&LookonStatus,sizeof(LookonStatus));

  01736	6a 01		 push	 1
  01738	8d 85 67 c1 ff
	ff		 lea	 eax, DWORD PTR _LookonStatus$5[ebp]
  0173e	50		 push	 eax
  0173f	6a 66		 push	 102			; 00000066H
  01741	6a 64		 push	 100			; 00000064H
  01743	8b 8d 68 c1 ff
	ff		 mov	 ecx, DWORD PTR _pILookonUserItem$6[ebp]
  01749	51		 push	 ecx
  0174a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0174d	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  01753	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01756	8b 10		 mov	 edx, DWORD PTR [eax]
  01758	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0175e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  01761	ff d0		 call	 eax

; 2228 : 
; 2229 : 					break;

  01763	eb 05		 jmp	 SHORT $LN26@OnEventSoc

; 2230 : 				}

  01765	e9 01 ff ff ff	 jmp	 $LN25@OnEventSoc
$LN26@OnEventSoc:

; 2231 : 			}
; 2232 : 			else

  0176a	e9 59 01 00 00	 jmp	 $LN103@OnEventSoc
$LN102@OnEventSoc:

; 2233 : 			{
; 2234 : 				//设置判断
; 2235 : 				bool bAllowLookon=(pLookonConfig->cbAllowLookon==TRUE)?true:false;

  0176f	8b 85 70 c1 ff
	ff		 mov	 eax, DWORD PTR _pLookonConfig$8[ebp]
  01775	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  01779	83 f9 01	 cmp	 ecx, 1
  0177c	75 09		 jne	 SHORT $LN133@OnEventSoc
  0177e	c6 85 5b bf ff
	ff 01		 mov	 BYTE PTR tv1337[ebp], 1
  01785	eb 07		 jmp	 SHORT $LN134@OnEventSoc
$LN133@OnEventSoc:
  01787	c6 85 5b bf ff
	ff 00		 mov	 BYTE PTR tv1337[ebp], 0
$LN134@OnEventSoc:
  0178e	8a 95 5b bf ff
	ff		 mov	 dl, BYTE PTR tv1337[ebp]
  01794	88 95 66 c1 ff
	ff		 mov	 BYTE PTR _bAllowLookon$4[ebp], dl

; 2236 : 				if (bAllowLookon==m_bAllowLookon[pIServerUserItem->GetChairID()]) return true;

  0179a	0f b6 b5 66 c1
	ff ff		 movzx	 esi, BYTE PTR _bAllowLookon$4[ebp]
  017a1	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  017a4	8b 10		 mov	 edx, DWORD PTR [eax]
  017a6	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  017a9	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  017ac	ff d0		 call	 eax
  017ae	0f b7 c8	 movzx	 ecx, ax
  017b1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  017b4	0f b6 44 0a 14	 movzx	 eax, BYTE PTR [edx+ecx+20]
  017b9	3b f0		 cmp	 esi, eax
  017bb	75 07		 jne	 SHORT $LN106@OnEventSoc
  017bd	b0 01		 mov	 al, 1
  017bf	e9 0a 01 00 00	 jmp	 $LN1@OnEventSoc
$LN106@OnEventSoc:

; 2237 : 
; 2238 : 				//设置变量
; 2239 : 				m_bAllowLookon[pIServerUserItem->GetChairID()]=bAllowLookon;

  017c4	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  017c7	8b 10		 mov	 edx, DWORD PTR [eax]
  017c9	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  017cc	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  017cf	ff d0		 call	 eax
  017d1	0f b7 c8	 movzx	 ecx, ax
  017d4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  017d7	8a 85 66 c1 ff
	ff		 mov	 al, BYTE PTR _bAllowLookon$4[ebp]
  017dd	88 44 0a 14	 mov	 BYTE PTR [edx+ecx+20], al

; 2240 : 
; 2241 : 				//构造消息
; 2242 : 				CMD_GF_LookonStatus LookonStatus;
; 2243 : 				LookonStatus.cbAllowLookon=pLookonConfig->cbAllowLookon;

  017e1	8b 85 70 c1 ff
	ff		 mov	 eax, DWORD PTR _pLookonConfig$8[ebp]
  017e7	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  017ea	88 8d 65 c1 ff
	ff		 mov	 BYTE PTR _LookonStatus$3[ebp], cl

; 2244 : 
; 2245 : 				//发送消息
; 2246 : 				for (INT_PTR i=0;i<m_LookonUserItemArray.GetCount();i++)

  017f0	c7 85 60 c1 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  017fa	eb 0f		 jmp	 SHORT $LN30@OnEventSoc
$LN28@OnEventSoc:
  017fc	8b 85 60 c1 ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  01802	83 c0 01	 add	 eax, 1
  01805	89 85 60 c1 ff
	ff		 mov	 DWORD PTR _i$2[ebp], eax
$LN30@OnEventSoc:
  0180b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0180e	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  01814	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
  01819	39 85 60 c1 ff
	ff		 cmp	 DWORD PTR _i$2[ebp], eax
  0181f	0f 8d a3 00 00
	00		 jge	 $LN103@OnEventSoc

; 2247 : 				{
; 2248 : 					//获取用户
; 2249 : 					IServerUserItem * pILookonUserItem=m_LookonUserItemArray[i];

  01825	8b 85 60 c1 ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  0182b	50		 push	 eax
  0182c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0182f	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  01835	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
  0183a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0183c	89 8d 5c c1 ff
	ff		 mov	 DWORD PTR _pILookonUserItem$1[ebp], ecx

; 2250 : 					if (pILookonUserItem->GetChairID()!=pIServerUserItem->GetChairID()) continue;

  01842	8b 85 5c c1 ff
	ff		 mov	 eax, DWORD PTR _pILookonUserItem$1[ebp]
  01848	8b 10		 mov	 edx, DWORD PTR [eax]
  0184a	8b 8d 5c c1 ff
	ff		 mov	 ecx, DWORD PTR _pILookonUserItem$1[ebp]
  01850	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  01853	ff d0		 call	 eax
  01855	0f b7 f0	 movzx	 esi, ax
  01858	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0185b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0185d	8b 4d 14	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  01860	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  01863	ff d0		 call	 eax
  01865	0f b7 c8	 movzx	 ecx, ax
  01868	3b f1		 cmp	 esi, ecx
  0186a	74 02		 je	 SHORT $LN107@OnEventSoc
  0186c	eb 8e		 jmp	 SHORT $LN28@OnEventSoc
$LN107@OnEventSoc:

; 2251 : 
; 2252 : 					//发送消息
; 2253 : 					ASSERT(m_pIMainServiceFrame!=NULL);

  0186e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01871	83 b8 cc 0f 00
	00 00		 cmp	 DWORD PTR [eax+4044], 0
  01878	75 1c		 jne	 SHORT $LN135@OnEventSoc
  0187a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  01880	81 c1 16 02 00
	00		 add	 ecx, 534		; 00000216H
  01886	51		 push	 ecx
  01887	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0188c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  01891	85 c0		 test	 eax, eax
  01893	74 01		 je	 SHORT $LN135@OnEventSoc
  01895	cc		 int	 3
$LN135@OnEventSoc:

; 2254 : 					m_pIMainServiceFrame->SendData(pILookonUserItem,MDM_GF_FRAME,SUB_GF_LOOKON_STATUS,&LookonStatus,sizeof(LookonStatus));

  01896	6a 01		 push	 1
  01898	8d 85 65 c1 ff
	ff		 lea	 eax, DWORD PTR _LookonStatus$3[ebp]
  0189e	50		 push	 eax
  0189f	6a 66		 push	 102			; 00000066H
  018a1	6a 64		 push	 100			; 00000064H
  018a3	8b 8d 5c c1 ff
	ff		 mov	 ecx, DWORD PTR _pILookonUserItem$1[ebp]
  018a9	51		 push	 ecx
  018aa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  018ad	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  018b3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  018b6	8b 10		 mov	 edx, DWORD PTR [eax]
  018b8	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  018be	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  018c1	ff d0		 call	 eax

; 2255 : 				}

  018c3	e9 34 ff ff ff	 jmp	 $LN28@OnEventSoc
$LN103@OnEventSoc:

; 2256 : 			}
; 2257 : 
; 2258 : 			return true;

  018c8	b0 01		 mov	 al, 1
  018ca	eb 02		 jmp	 SHORT $LN1@OnEventSoc
$LN2@OnEventSoc:

; 2259 : 		}
; 2260 : 	}
; 2261 : 
; 2262 : 	return false;

  018cc	32 c0		 xor	 al, al
$LN1@OnEventSoc:

; 2263 : }

  018ce	5f		 pop	 edi
  018cf	5e		 pop	 esi
  018d0	5b		 pop	 ebx
  018d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  018d4	33 cd		 xor	 ecx, ebp
  018d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  018db	8b e5		 mov	 esp, ebp
  018dd	5d		 pop	 ebp
  018de	c2 10 00	 ret	 16			; 00000010H
  018e1	0f 1f 00	 npad	 3
$LN137@OnEventSoc:
  018e4	00 00 00 00	 DD	 $LN33@OnEventSoc
  018e8	00 00 00 00	 DD	 $LN55@OnEventSoc
  018ec	00 00 00 00	 DD	 $LN98@OnEventSoc
  018f0	00 00 00 00	 DD	 $LN2@OnEventSoc
  018f4	00 00 00 00	 DD	 $LN2@OnEventSoc
  018f8	00 00 00 00	 DD	 $LN2@OnEventSoc
  018fc	00 00 00 00	 DD	 $LN2@OnEventSoc
  01900	00 00 00 00	 DD	 $LN2@OnEventSoc
  01904	00 00 00 00	 DD	 $LN2@OnEventSoc
  01908	00 00 00 00	 DD	 $LN67@OnEventSoc
  0190c	00 00 00 00	 DD	 $LN78@OnEventSoc
  01910	00 00 00 00	 DD	 $LN87@OnEventSoc
?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ENDP ; CTableFrame::OnEventSocketFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_pIServerUserItem$ = 20					; size = 4
?OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z PROC ; CTableFrame::OnEventSocketGame, COMDAT
; _this$ = ecx

; 1708 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1709 : 	//效验参数
; 1710 : 	ASSERT(pIServerUserItem!=NULL);

  0000c	83 7d 14 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN3@OnEventSoc
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN3@OnEventSoc
  00029	cc		 int	 3
$LN3@OnEventSoc:

; 1711 : 	ASSERT(m_pITableFrameSink!=NULL);

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  00034	75 19		 jne	 SHORT $LN4@OnEventSoc
  00036	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z@4JA
  0003c	83 c1 03	 add	 ecx, 3
  0003f	51		 push	 ecx
  00040	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00045	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004a	85 c0		 test	 eax, eax
  0004c	74 01		 je	 SHORT $LN4@OnEventSoc
  0004e	cc		 int	 3
$LN4@OnEventSoc:

; 1712 : 
; 1713 : 	//消息处理
; 1714 : 	return m_pITableFrameSink->OnGameMessage(wSubCmdID,pData,wDataSize,pIServerUserItem);

  0004f	8b 45 14	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00052	50		 push	 eax
  00053	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00057	51		 push	 ecx
  00058	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0005b	52		 push	 edx
  0005c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00060	50		 push	 eax
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 12		 mov	 edx, DWORD PTR [edx]
  0006f	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00075	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00078	ff d0		 call	 eax

; 1715 : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 10 00	 ret	 16			; 00000010H
?OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ENDP ; CTableFrame::OnEventSocketGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?OnEventTimer@CTableFrame@@QAE_NKI@Z
_TEXT	SEGMENT
tv290 = -160						; size = 4
tv200 = -160						; size = 4
tv84 = -160						; size = 4
_pTableUserItem$1 = -92					; size = 4
_j$2 = -88						; size = 4
_RequestReply$3 = -84					; size = 9
_pUserItem$4 = -72					; size = 4
_i$5 = -68						; size = 4
_pIServerUserItem$6 = -64				; size = 4
_wChair$7 = -60						; size = 2
_dwLapseTime$8 = -56					; size = 4
_dwCurrentTime$9 = -52					; size = 4
_i$10 = -48						; size = 2
_wOffLineChair$11 = -44					; size = 2
_dwOffLineTime$12 = -40					; size = 4
_pIServerUserItem$13 = -36				; size = 4
_dwLapseTime$14 = -32					; size = 4
_dwCurrentTime$15 = -28					; size = 4
_dwElapse$16 = -24					; size = 4
_i$17 = -20						; size = 2
_wOffLineChair$18 = -16					; size = 2
_dwOffLineTime$19 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwTimerID$ = 8						; size = 4
_dwBindParameter$ = 12					; size = 4
?OnEventTimer@CTableFrame@@QAE_NKI@Z PROC		; CTableFrame::OnEventTimer, COMDAT
; _this$ = ecx

; 1513 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1514 : 	//回调事件
; 1515 : 	if ((dwTimerID>=0)&&(dwTimerID<TIME_TABLE_SINK_RANGE))

  00019	83 7d 08 00	 cmp	 DWORD PTR _dwTimerID$[ebp], 0
  0001d	72 51		 jb	 SHORT $LN16@OnEventTim
  0001f	83 7d 08 14	 cmp	 DWORD PTR _dwTimerID$[ebp], 20 ; 00000014H
  00023	73 4b		 jae	 SHORT $LN16@OnEventTim

; 1516 : 	{
; 1517 : 		ASSERT(m_pITableFrameSink!=NULL);

  00025	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00028	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  0002f	75 19		 jne	 SHORT $LN43@OnEventTim
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
  00037	83 c1 04	 add	 ecx, 4
  0003a	51		 push	 ecx
  0003b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00040	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00045	85 c0		 test	 eax, eax
  00047	74 01		 je	 SHORT $LN43@OnEventTim
  00049	cc		 int	 3
$LN43@OnEventTim:

; 1518 : 		return m_pITableFrameSink->OnTimerMessage(dwTimerID,dwBindParameter);

  0004a	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  00051	51		 push	 ecx
  00052	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 82 c8 0f 00
	00		 mov	 eax, DWORD PTR [edx+4040]
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 89 c8 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4040]
  00066	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00069	ff d0		 call	 eax
  0006b	e9 05 06 00 00	 jmp	 $LN1@OnEventTim
$LN16@OnEventTim:

; 1519 : 	}
; 1520 : 
; 1521 : 	//事件处理
; 1522 : 	switch (dwTimerID)

  00070	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  00073	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  00079	83 bd 60 ff ff
	ff 15		 cmp	 DWORD PTR tv84[ebp], 21	; 00000015H
  00080	74 05		 je	 SHORT $LN17@OnEventTim
  00082	e9 76 03 00 00	 jmp	 $LN2@OnEventTim
$LN17@OnEventTim:

; 1523 : 	{
; 1524 : 	case IDI_OFF_LINE:	//断线事件
; 1525 : 		{
; 1526 : 			//效验状态
; 1527 : 			ASSERT(m_bGameStarted==true || m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL);

  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  0008e	83 f9 01	 cmp	 ecx, 1
  00091	74 2b		 je	 SHORT $LN44@OnEventTim
  00093	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00096	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  0009c	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  000a0	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000a3	74 19		 je	 SHORT $LN44@OnEventTim
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
  000ab	83 c2 0e	 add	 edx, 14			; 0000000eH
  000ae	52		 push	 edx
  000af	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b4	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b9	85 c0		 test	 eax, eax
  000bb	74 01		 je	 SHORT $LN44@OnEventTim
  000bd	cc		 int	 3
$LN44@OnEventTim:

; 1528 : 			if (m_bGameStarted==false && m_pGameServiceOption->wServerType != GAME_GENRE_PERSONAL) return false;

  000be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  000c5	85 c9		 test	 ecx, ecx
  000c7	75 19		 jne	 SHORT $LN18@OnEventTim
  000c9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000d2	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000d6	83 fa 10	 cmp	 edx, 16			; 00000010H
  000d9	74 07		 je	 SHORT $LN18@OnEventTim
  000db	32 c0		 xor	 al, al
  000dd	e9 93 05 00 00	 jmp	 $LN1@OnEventTim
$LN18@OnEventTim:

; 1529 : 
; 1530 : 			//变量定义
; 1531 : 			DWORD dwOffLineTime=0L;

  000e2	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwOffLineTime$19[ebp], 0

; 1532 : 			WORD wOffLineChair=INVALID_CHAIR;

  000e9	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  000ee	66 89 45 f0	 mov	 WORD PTR _wOffLineChair$18[ebp], ax

; 1533 : 
; 1534 : 			//寻找用户
; 1535 : 			for (WORD i=0;i<m_wChairCount;i++)

  000f2	33 c0		 xor	 eax, eax
  000f4	66 89 45 ec	 mov	 WORD PTR _i$17[ebp], ax
  000f8	eb 0c		 jmp	 SHORT $LN6@OnEventTim
$LN4@OnEventTim:
  000fa	66 8b 45 ec	 mov	 ax, WORD PTR _i$17[ebp]
  000fe	66 83 c0 01	 add	 ax, 1
  00102	66 89 45 ec	 mov	 WORD PTR _i$17[ebp], ax
$LN6@OnEventTim:
  00106	0f b7 45 ec	 movzx	 eax, WORD PTR _i$17[ebp]
  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00111	3b c2		 cmp	 eax, edx
  00113	7d 4a		 jge	 SHORT $LN5@OnEventTim

; 1536 : 			{
; 1537 : 				if ((m_dwOffLineTime[i]!=0L)&&((m_dwOffLineTime[i]<dwOffLineTime)||(wOffLineChair==INVALID_CHAIR)))

  00115	0f b7 45 ec	 movzx	 eax, WORD PTR _i$17[ebp]
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	83 bc 81 70 09
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+2416], 0
  00124	74 37		 je	 SHORT $LN19@OnEventTim
  00126	0f b7 45 ec	 movzx	 eax, WORD PTR _i$17[ebp]
  0012a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	8b 94 81 70 09
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+2416]
  00134	3b 55 f4	 cmp	 edx, DWORD PTR _dwOffLineTime$19[ebp]
  00137	72 0b		 jb	 SHORT $LN20@OnEventTim
  00139	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  0013d	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00142	75 19		 jne	 SHORT $LN19@OnEventTim
$LN20@OnEventTim:

; 1538 : 				{
; 1539 : 					wOffLineChair=i;

  00144	66 8b 45 ec	 mov	 ax, WORD PTR _i$17[ebp]
  00148	66 89 45 f0	 mov	 WORD PTR _wOffLineChair$18[ebp], ax

; 1540 : 					dwOffLineTime=m_dwOffLineTime[i];

  0014c	0f b7 45 ec	 movzx	 eax, WORD PTR _i$17[ebp]
  00150	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	8b 94 81 70 09
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+2416]
  0015a	89 55 f4	 mov	 DWORD PTR _dwOffLineTime$19[ebp], edx
$LN19@OnEventTim:

; 1541 : 				}
; 1542 : 			}

  0015d	eb 9b		 jmp	 SHORT $LN4@OnEventTim
$LN5@OnEventTim:

; 1543 : 
; 1544 : 			//位置判断
; 1545 : 			ASSERT(wOffLineChair!=INVALID_CHAIR);

  0015f	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  00163	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00168	75 19		 jne	 SHORT $LN45@OnEventTim
  0016a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
  00170	83 c1 20	 add	 ecx, 32			; 00000020H
  00173	51		 push	 ecx
  00174	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00179	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0017e	85 c0		 test	 eax, eax
  00180	74 01		 je	 SHORT $LN45@OnEventTim
  00182	cc		 int	 3
$LN45@OnEventTim:

; 1546 : 			if (wOffLineChair==INVALID_CHAIR) return false;

  00183	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  00187	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0018c	75 07		 jne	 SHORT $LN21@OnEventTim
  0018e	32 c0		 xor	 al, al
  00190	e9 e0 04 00 00	 jmp	 $LN1@OnEventTim
$LN21@OnEventTim:

; 1547 : 
; 1548 : 			//用户判断
; 1549 : 			ASSERT(dwBindParameter<m_wChairCount);

  00195	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00198	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0019c	39 4d 0c	 cmp	 DWORD PTR _dwBindParameter$[ebp], ecx
  0019f	72 19		 jb	 SHORT $LN46@OnEventTim
  001a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
  001a7	83 c2 24	 add	 edx, 36			; 00000024H
  001aa	52		 push	 edx
  001ab	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  001b0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001b5	85 c0		 test	 eax, eax
  001b7	74 01		 je	 SHORT $LN46@OnEventTim
  001b9	cc		 int	 3
$LN46@OnEventTim:

; 1550 : 
; 1551 : 			//约战房间断线超时跳过，在下面处理
; 1552 : 			if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  001ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001bd	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001c3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  001c7	83 fa 10	 cmp	 edx, 16			; 00000010H
  001ca	75 05		 jne	 SHORT $LN22@OnEventTim

; 1553 : 			{
; 1554 : 				break;

  001cc	e9 2c 02 00 00	 jmp	 $LN2@OnEventTim
$LN22@OnEventTim:

; 1555 : 				//return true;
; 1556 : 			}
; 1557 : 
; 1558 : 			DWORD dwElapse = TIME_OFF_LINE;

  001d1	c7 45 e8 60 ea
	00 00		 mov	 DWORD PTR _dwElapse$16[ebp], 60000 ; 0000ea60H

; 1559 : 			if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)	dwElapse = TIME_OFF_LINE_PERSONAL;

  001d8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001db	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001e1	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  001e5	83 e2 10	 and	 edx, 16			; 00000010H
  001e8	74 07		 je	 SHORT $LN23@OnEventTim
  001ea	c7 45 e8 e0 93
	04 00		 mov	 DWORD PTR _dwElapse$16[ebp], 300000 ; 000493e0H
$LN23@OnEventTim:

; 1560 : 
; 1561 : 			if (wOffLineChair!=(WORD)dwBindParameter)

  001f1	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  001f5	0f b7 4d 0c	 movzx	 ecx, WORD PTR _dwBindParameter$[ebp]
  001f9	3b c1		 cmp	 eax, ecx
  001fb	74 78		 je	 SHORT $LN24@OnEventTim

; 1562 : 			{
; 1563 : 				//时间计算
; 1564 : 				DWORD dwCurrentTime=(DWORD)time(NULL);

  001fd	6a 00		 push	 0
  001ff	e8 00 00 00 00	 call	 _time
  00204	83 c4 04	 add	 esp, 4
  00207	89 45 e4	 mov	 DWORD PTR _dwCurrentTime$15[ebp], eax

; 1565 : 				DWORD dwLapseTime=dwCurrentTime-m_dwOffLineTime[wOffLineChair];

  0020a	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  0020e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00211	8b 55 e4	 mov	 edx, DWORD PTR _dwCurrentTime$15[ebp]
  00214	2b 94 81 70 09
	00 00		 sub	 edx, DWORD PTR [ecx+eax*4+2416]
  0021b	89 55 e0	 mov	 DWORD PTR _dwLapseTime$14[ebp], edx

; 1566 : 
; 1567 : 				//设置时间
; 1568 : 				dwLapseTime=__min(dwLapseTime,dwElapse-2000L);

  0021e	8b 45 e8	 mov	 eax, DWORD PTR _dwElapse$16[ebp]
  00221	2d d0 07 00 00	 sub	 eax, 2000		; 000007d0H
  00226	39 45 e0	 cmp	 DWORD PTR _dwLapseTime$14[ebp], eax
  00229	73 0b		 jae	 SHORT $LN47@OnEventTim
  0022b	8b 4d e0	 mov	 ecx, DWORD PTR _dwLapseTime$14[ebp]
  0022e	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv200[ebp], ecx
  00234	eb 0f		 jmp	 SHORT $LN48@OnEventTim
$LN47@OnEventTim:
  00236	8b 55 e8	 mov	 edx, DWORD PTR _dwElapse$16[ebp]
  00239	81 ea d0 07 00
	00		 sub	 edx, 2000		; 000007d0H
  0023f	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv200[ebp], edx
$LN48@OnEventTim:
  00245	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  0024b	89 45 e0	 mov	 DWORD PTR _dwLapseTime$14[ebp], eax

; 1569 : 				SetGameTimer(IDI_OFF_LINE,dwElapse-dwLapseTime,1,wOffLineChair);

  0024e	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  00252	50		 push	 eax
  00253	6a 01		 push	 1
  00255	8b 4d e8	 mov	 ecx, DWORD PTR _dwElapse$16[ebp]
  00258	2b 4d e0	 sub	 ecx, DWORD PTR _dwLapseTime$14[ebp]
  0025b	51		 push	 ecx
  0025c	6a 15		 push	 21			; 00000015H
  0025e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00261	8b 02		 mov	 eax, DWORD PTR [edx]
  00263	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00266	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0026c	ff d2		 call	 edx

; 1570 : 
; 1571 : 				return true;

  0026e	b0 01		 mov	 al, 1
  00270	e9 00 04 00 00	 jmp	 $LN1@OnEventTim
$LN24@OnEventTim:

; 1572 : 			}
; 1573 : 
; 1574 : 			//获取用户
; 1575 : 			ASSERT(GetTableUserItem(wOffLineChair)!=NULL);

  00275	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  00279	50		 push	 eax
  0027a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0027d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00288	ff d0		 call	 eax
  0028a	85 c0		 test	 eax, eax
  0028c	75 19		 jne	 SHORT $LN49@OnEventTim
  0028e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
  00294	83 c1 3e	 add	 ecx, 62			; 0000003eH
  00297	51		 push	 ecx
  00298	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0029d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002a2	85 c0		 test	 eax, eax
  002a4	74 01		 je	 SHORT $LN49@OnEventTim
  002a6	cc		 int	 3
$LN49@OnEventTim:

; 1576 : 			IServerUserItem * pIServerUserItem=GetTableUserItem(wOffLineChair);

  002a7	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  002ab	50		 push	 eax
  002ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002af	8b 11		 mov	 edx, DWORD PTR [ecx]
  002b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b4	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  002ba	ff d0		 call	 eax
  002bc	89 45 dc	 mov	 DWORD PTR _pIServerUserItem$13[ebp], eax

; 1577 : 
; 1578 : 			//结束游戏
; 1579 : 			if (pIServerUserItem!=NULL)

  002bf	83 7d dc 00	 cmp	 DWORD PTR _pIServerUserItem$13[ebp], 0
  002c3	74 28		 je	 SHORT $LN25@OnEventTim

; 1580 : 			{
; 1581 : 				//设置变量
; 1582 : 				m_dwOffLineTime[wOffLineChair]=0L;

  002c5	0f b7 45 f0	 movzx	 eax, WORD PTR _wOffLineChair$18[ebp]
  002c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002cc	c7 84 81 70 09
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+2416], 0

; 1583 : 
; 1584 : 				//用户起立
; 1585 : 				PerformStandUpAction(pIServerUserItem,true);

  002d7	6a 01		 push	 1
  002d9	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$13[ebp]
  002dc	50		 push	 eax
  002dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  002e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e5	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  002eb	ff d0		 call	 eax
$LN25@OnEventTim:

; 1586 : 			}
; 1587 : 
; 1588 : 			//继续时间
; 1589 : 			if (m_bGameStarted==true)

  002ed	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f0	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  002f4	83 f9 01	 cmp	 ecx, 1
  002f7	0f 85 f9 00 00
	00		 jne	 $LN26@OnEventTim

; 1590 : 			{
; 1591 : 				//变量定义
; 1592 : 				DWORD dwOffLineTime=0L;

  002fd	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _dwOffLineTime$12[ebp], 0

; 1593 : 				WORD wOffLineChair=INVALID_CHAIR;

  00304	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00309	66 89 45 d4	 mov	 WORD PTR _wOffLineChair$11[ebp], ax

; 1594 : 
; 1595 : 				//寻找用户
; 1596 : 				for (WORD i=0;i<m_wChairCount;i++)

  0030d	33 c0		 xor	 eax, eax
  0030f	66 89 45 d0	 mov	 WORD PTR _i$10[ebp], ax
  00313	eb 0c		 jmp	 SHORT $LN9@OnEventTim
$LN7@OnEventTim:
  00315	66 8b 45 d0	 mov	 ax, WORD PTR _i$10[ebp]
  00319	66 83 c0 01	 add	 ax, 1
  0031d	66 89 45 d0	 mov	 WORD PTR _i$10[ebp], ax
$LN9@OnEventTim:
  00321	0f b7 45 d0	 movzx	 eax, WORD PTR _i$10[ebp]
  00325	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00328	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0032c	3b c2		 cmp	 eax, edx
  0032e	7d 4a		 jge	 SHORT $LN8@OnEventTim

; 1597 : 				{
; 1598 : 					if ((m_dwOffLineTime[i]!=0L)&&((m_dwOffLineTime[i]<dwOffLineTime)||(wOffLineChair==INVALID_CHAIR)))

  00330	0f b7 45 d0	 movzx	 eax, WORD PTR _i$10[ebp]
  00334	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	83 bc 81 70 09
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+2416], 0
  0033f	74 37		 je	 SHORT $LN27@OnEventTim
  00341	0f b7 45 d0	 movzx	 eax, WORD PTR _i$10[ebp]
  00345	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00348	8b 94 81 70 09
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+2416]
  0034f	3b 55 d8	 cmp	 edx, DWORD PTR _dwOffLineTime$12[ebp]
  00352	72 0b		 jb	 SHORT $LN28@OnEventTim
  00354	0f b7 45 d4	 movzx	 eax, WORD PTR _wOffLineChair$11[ebp]
  00358	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0035d	75 19		 jne	 SHORT $LN27@OnEventTim
$LN28@OnEventTim:

; 1599 : 					{
; 1600 : 						wOffLineChair=i;

  0035f	66 8b 45 d0	 mov	 ax, WORD PTR _i$10[ebp]
  00363	66 89 45 d4	 mov	 WORD PTR _wOffLineChair$11[ebp], ax

; 1601 : 						dwOffLineTime=m_dwOffLineTime[i];

  00367	0f b7 45 d0	 movzx	 eax, WORD PTR _i$10[ebp]
  0036b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0036e	8b 94 81 70 09
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+2416]
  00375	89 55 d8	 mov	 DWORD PTR _dwOffLineTime$12[ebp], edx
$LN27@OnEventTim:

; 1602 : 					}
; 1603 : 				}

  00378	eb 9b		 jmp	 SHORT $LN7@OnEventTim
$LN8@OnEventTim:

; 1604 : 
; 1605 : 				//设置时间
; 1606 : 				if (wOffLineChair!=INVALID_CHAIR)

  0037a	0f b7 45 d4	 movzx	 eax, WORD PTR _wOffLineChair$11[ebp]
  0037e	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00383	74 71		 je	 SHORT $LN26@OnEventTim

; 1607 : 				{
; 1608 : 					//时间计算
; 1609 : 					DWORD dwCurrentTime=(DWORD)time(NULL);

  00385	6a 00		 push	 0
  00387	e8 00 00 00 00	 call	 _time
  0038c	83 c4 04	 add	 esp, 4
  0038f	89 45 cc	 mov	 DWORD PTR _dwCurrentTime$9[ebp], eax

; 1610 : 					DWORD dwLapseTime=dwCurrentTime-m_dwOffLineTime[wOffLineChair];

  00392	0f b7 45 d4	 movzx	 eax, WORD PTR _wOffLineChair$11[ebp]
  00396	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00399	8b 55 cc	 mov	 edx, DWORD PTR _dwCurrentTime$9[ebp]
  0039c	2b 94 81 70 09
	00 00		 sub	 edx, DWORD PTR [ecx+eax*4+2416]
  003a3	89 55 c8	 mov	 DWORD PTR _dwLapseTime$8[ebp], edx

; 1611 : 
; 1612 : 					//设置时间
; 1613 : 					dwLapseTime=__min(dwLapseTime,dwElapse-2000L);

  003a6	8b 45 e8	 mov	 eax, DWORD PTR _dwElapse$16[ebp]
  003a9	2d d0 07 00 00	 sub	 eax, 2000		; 000007d0H
  003ae	39 45 c8	 cmp	 DWORD PTR _dwLapseTime$8[ebp], eax
  003b1	73 0b		 jae	 SHORT $LN50@OnEventTim
  003b3	8b 4d c8	 mov	 ecx, DWORD PTR _dwLapseTime$8[ebp]
  003b6	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv290[ebp], ecx
  003bc	eb 0f		 jmp	 SHORT $LN51@OnEventTim
$LN50@OnEventTim:
  003be	8b 55 e8	 mov	 edx, DWORD PTR _dwElapse$16[ebp]
  003c1	81 ea d0 07 00
	00		 sub	 edx, 2000		; 000007d0H
  003c7	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv290[ebp], edx
$LN51@OnEventTim:
  003cd	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv290[ebp]
  003d3	89 45 c8	 mov	 DWORD PTR _dwLapseTime$8[ebp], eax

; 1614 : 					SetGameTimer(IDI_OFF_LINE,dwElapse-dwLapseTime,1,wOffLineChair);

  003d6	0f b7 45 d4	 movzx	 eax, WORD PTR _wOffLineChair$11[ebp]
  003da	50		 push	 eax
  003db	6a 01		 push	 1
  003dd	8b 4d e8	 mov	 ecx, DWORD PTR _dwElapse$16[ebp]
  003e0	2b 4d c8	 sub	 ecx, DWORD PTR _dwLapseTime$8[ebp]
  003e3	51		 push	 ecx
  003e4	6a 15		 push	 21			; 00000015H
  003e6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003e9	8b 02		 mov	 eax, DWORD PTR [edx]
  003eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ee	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  003f4	ff d2		 call	 edx
$LN26@OnEventTim:

; 1615 : 				}
; 1616 : 			}
; 1617 : 
; 1618 : 			return true;

  003f6	b0 01		 mov	 al, 1
  003f8	e9 78 02 00 00	 jmp	 $LN1@OnEventTim
$LN2@OnEventTim:

; 1619 : 		}
; 1620 : 	}
; 1621 : 
; 1622 : 	//未开始超时
; 1623 : 	if(dwTimerID >= IDI_START_OVERTIME && dwTimerID <=IDI_START_OVERTIME_END)

  003fd	83 7d 08 16	 cmp	 DWORD PTR _dwTimerID$[ebp], 22 ; 00000016H
  00401	72 76		 jb	 SHORT $LN30@OnEventTim
  00403	83 7d 08 2a	 cmp	 DWORD PTR _dwTimerID$[ebp], 42 ; 0000002aH
  00407	77 70		 ja	 SHORT $LN30@OnEventTim

; 1624 : 	{
; 1625 : 		//变量定义
; 1626 : 		WORD wChair=(WORD)dwBindParameter;

  00409	66 8b 45 0c	 mov	 ax, WORD PTR _dwBindParameter$[ebp]
  0040d	66 89 45 c4	 mov	 WORD PTR _wChair$7[ebp], ax

; 1627 : 
; 1628 : 		//
; 1629 : 		if(wChair != (WORD)(dwTimerID-IDI_START_OVERTIME)) return false;

  00411	0f b7 45 c4	 movzx	 eax, WORD PTR _wChair$7[ebp]
  00415	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  00418	83 e9 16	 sub	 ecx, 22			; 00000016H
  0041b	0f b7 d1	 movzx	 edx, cx
  0041e	3b c2		 cmp	 eax, edx
  00420	74 07		 je	 SHORT $LN31@OnEventTim
  00422	32 c0		 xor	 al, al
  00424	e9 4c 02 00 00	 jmp	 $LN1@OnEventTim
$LN31@OnEventTim:

; 1630 : 
; 1631 : 		//获取用户
; 1632 : 		IServerUserItem * pIServerUserItem=GetTableUserItem(wChair);

  00429	0f b7 45 c4	 movzx	 eax, WORD PTR _wChair$7[ebp]
  0042d	50		 push	 eax
  0042e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00431	8b 11		 mov	 edx, DWORD PTR [ecx]
  00433	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00436	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0043c	ff d0		 call	 eax
  0043e	89 45 c0	 mov	 DWORD PTR _pIServerUserItem$6[ebp], eax

; 1633 : 
; 1634 : 		//超时处理
; 1635 : 		if(pIServerUserItem && pIServerUserItem->GetUserStatus()==US_SIT)

  00441	83 7d c0 00	 cmp	 DWORD PTR _pIServerUserItem$6[ebp], 0
  00445	74 2b		 je	 SHORT $LN32@OnEventTim
  00447	8b 45 c0	 mov	 eax, DWORD PTR _pIServerUserItem$6[ebp]
  0044a	8b 10		 mov	 edx, DWORD PTR [eax]
  0044c	8b 4d c0	 mov	 ecx, DWORD PTR _pIServerUserItem$6[ebp]
  0044f	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00452	ff d0		 call	 eax
  00454	0f b6 c8	 movzx	 ecx, al
  00457	83 f9 02	 cmp	 ecx, 2
  0045a	75 16		 jne	 SHORT $LN32@OnEventTim

; 1636 : 		{
; 1637 : 			//用户起立
; 1638 : 			PerformStandUpAction(pIServerUserItem);

  0045c	6a 00		 push	 0
  0045e	8b 45 c0	 mov	 eax, DWORD PTR _pIServerUserItem$6[ebp]
  00461	50		 push	 eax
  00462	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00465	8b 11		 mov	 edx, DWORD PTR [ecx]
  00467	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0046a	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00470	ff d0		 call	 eax
$LN32@OnEventTim:

; 1639 : 		}
; 1640 : 
; 1641 : 		return false;

  00472	32 c0		 xor	 al, al
  00474	e9 fc 01 00 00	 jmp	 $LN1@OnEventTim
$LN30@OnEventTim:

; 1642 : 	}
; 1643 : 
; 1644 : 	//约战未开始游戏超时
; 1645 : 	if(dwTimerID == IDI_PERSONAL_BEFORE_BEGAIN_TIME  || dwTimerID ==  IDI_PERSONAL_AFTER_CREATE_ROOM_TIME)

  00479	83 7d 08 2b	 cmp	 DWORD PTR _dwTimerID$[ebp], 43 ; 0000002bH
  0047d	74 0a		 je	 SHORT $LN34@OnEventTim
  0047f	83 7d 08 2d	 cmp	 DWORD PTR _dwTimerID$[ebp], 45 ; 0000002dH
  00483	0f 85 88 00 00
	00		 jne	 $LN33@OnEventTim
$LN34@OnEventTim:

; 1646 : 	{
; 1647 : 		//桌子状态
; 1648 : 		if(m_bGameStarted == true && m_bPersonalLock == true) return true;

  00489	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0048c	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00490	83 f9 01	 cmp	 ecx, 1
  00493	75 16		 jne	 SHORT $LN35@OnEventTim
  00495	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00498	0f b6 88 9a 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4506]
  0049f	83 f9 01	 cmp	 ecx, 1
  004a2	75 07		 jne	 SHORT $LN35@OnEventTim
  004a4	b0 01		 mov	 al, 1
  004a6	e9 ca 01 00 00	 jmp	 $LN1@OnEventTim
$LN35@OnEventTim:

; 1649 : 
; 1650 : 		m_bIsEnfoceDissum = true;

  004ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004ae	c6 80 9b 11 00
	00 01		 mov	 BYTE PTR [eax+4507], 1

; 1651 : 		m_bIsDissumGame = true;

  004b5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004b8	c6 80 34 11 00
	00 01		 mov	 BYTE PTR [eax+4404], 1

; 1652 : 		//退还费用
; 1653 : 		m_pIMainServiceFrame->CancelCreateTable(m_dwTableOwnerID, m_dwDrawCountLimit, m_dwDrawTimeLimit, CANCELTABLE_REASON_NOT_START, m_wTableID, m_dwPersonalRoomID);//CANCELTABLE_REASON_ENFOCE

  004bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004c2	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  004c8	51		 push	 ecx
  004c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004cc	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  004d0	50		 push	 eax
  004d1	6a 04		 push	 4
  004d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004d6	8b 91 1c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4124]
  004dc	52		 push	 edx
  004dd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004e0	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  004e6	51		 push	 ecx
  004e7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004ea	8b 82 40 07 00
	00		 mov	 eax, DWORD PTR [edx+1856]
  004f0	50		 push	 eax
  004f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f4	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  004fa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004fd	8b 12		 mov	 edx, DWORD PTR [edx]
  004ff	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00505	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00508	ff d0		 call	 eax

; 1654 : 		return true;

  0050a	b0 01		 mov	 al, 1
  0050c	e9 64 01 00 00	 jmp	 $LN1@OnEventTim
$LN33@OnEventTim:

; 1655 : 	}
; 1656 : 
; 1657 : 	//游戏开始之后超时 游戏断线超时
; 1658 : 	if(dwTimerID == IDI_PERSONAL_AFTER_BEGIN_TIME  || dwTimerID == IDI_OFF_LINE  &&  m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL )

  00511	83 7d 08 2c	 cmp	 DWORD PTR _dwTimerID$[ebp], 44 ; 0000002cH
  00515	74 18		 je	 SHORT $LN37@OnEventTim
  00517	83 7d 08 15	 cmp	 DWORD PTR _dwTimerID$[ebp], 21 ; 00000015H
  0051b	75 2b		 jne	 SHORT $LN36@OnEventTim
  0051d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00520	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00526	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0052a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0052d	75 19		 jne	 SHORT $LN36@OnEventTim
$LN37@OnEventTim:

; 1659 : 	{
; 1660 : 		HostDissumeGame();

  0052f	6a 00		 push	 0
  00531	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00534	8b 10		 mov	 edx, DWORD PTR [eax]
  00536	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00539	8b 82 44 01 00
	00		 mov	 eax, DWORD PTR [edx+324]
  0053f	ff d0		 call	 eax

; 1661 : 
; 1662 : 		return true;

  00541	b0 01		 mov	 al, 1
  00543	e9 2d 01 00 00	 jmp	 $LN1@OnEventTim
$LN36@OnEventTim:

; 1663 : 	}
; 1664 : 
; 1665 : 	//解散超时
; 1666 : 	if (IDI_TIME_CANCEL == dwTimerID)

  00548	83 7d 08 2e	 cmp	 DWORD PTR _dwTimerID$[ebp], 46 ; 0000002eH
  0054c	0f 85 01 01 00
	00		 jne	 $LN38@OnEventTim

; 1667 : 	{
; 1668 : 		for(int i = 0; i < m_wChairCount; ++i)

  00552	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00559	eb 09		 jmp	 SHORT $LN12@OnEventTim
$LN10@OnEventTim:
  0055b	8b 45 bc	 mov	 eax, DWORD PTR _i$5[ebp]
  0055e	83 c0 01	 add	 eax, 1
  00561	89 45 bc	 mov	 DWORD PTR _i$5[ebp], eax
$LN12@OnEventTim:
  00564	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00567	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0056b	39 4d bc	 cmp	 DWORD PTR _i$5[ebp], ecx
  0056e	0f 8d db 00 00
	00		 jge	 $LN11@OnEventTim

; 1669 : 		{
; 1670 : 			//过滤用户
; 1671 : 			IServerUserItem* pUserItem =  GetTableUserItem(i);

  00574	0f b7 45 bc	 movzx	 eax, WORD PTR _i$5[ebp]
  00578	50		 push	 eax
  00579	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0057c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0057e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00581	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00587	ff d0		 call	 eax
  00589	89 45 b8	 mov	 DWORD PTR _pUserItem$4[ebp], eax

; 1672 : 			if(pUserItem == NULL ) continue;

  0058c	83 7d b8 00	 cmp	 DWORD PTR _pUserItem$4[ebp], 0
  00590	75 02		 jne	 SHORT $LN39@OnEventTim
  00592	eb c7		 jmp	 SHORT $LN10@OnEventTim
$LN39@OnEventTim:

; 1673 : 
; 1674 : 			//如果是断线玩家，且未做消息处理
; 1675 : 			if (/*pUserItem->GetUserStatus() == US_OFFLINE && */ 0 == m_cbRequestReply[i])

  00594	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00597	03 45 bc	 add	 eax, DWORD PTR _i$5[ebp]
  0059a	0f b6 88 48 10
	00 00		 movzx	 ecx, BYTE PTR [eax+4168]
  005a1	85 c9		 test	 ecx, ecx
  005a3	0f 85 a1 00 00
	00		 jne	 $LN40@OnEventTim

; 1676 : 			{
; 1677 : 				CMD_GR_RequestReply  RequestReply;
; 1678 : 				RequestReply.dwUserID = pUserItem->GetUserID();

  005a9	8b 45 b8	 mov	 eax, DWORD PTR _pUserItem$4[ebp]
  005ac	8b 10		 mov	 edx, DWORD PTR [eax]
  005ae	8b 4d b8	 mov	 ecx, DWORD PTR _pUserItem$4[ebp]
  005b1	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  005b4	ff d0		 call	 eax
  005b6	89 45 ac	 mov	 DWORD PTR _RequestReply$3[ebp], eax

; 1679 : 				RequestReply.dwTableID = m_wTableID;

  005b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005bc	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  005c0	89 4d b0	 mov	 DWORD PTR _RequestReply$3[ebp+4], ecx

; 1680 : 				RequestReply.cbAgree = 1;

  005c3	c6 45 b4 01	 mov	 BYTE PTR _RequestReply$3[ebp+8], 1

; 1681 : 
; 1682 : 				 for (int j = 0; j < m_wChairCount; j++)

  005c7	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _j$2[ebp], 0
  005ce	eb 09		 jmp	 SHORT $LN15@OnEventTim
$LN13@OnEventTim:
  005d0	8b 45 a8	 mov	 eax, DWORD PTR _j$2[ebp]
  005d3	83 c0 01	 add	 eax, 1
  005d6	89 45 a8	 mov	 DWORD PTR _j$2[ebp], eax
$LN15@OnEventTim:
  005d9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005dc	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  005e0	39 4d a8	 cmp	 DWORD PTR _j$2[ebp], ecx
  005e3	7d 4c		 jge	 SHORT $LN14@OnEventTim

; 1683 : 				 {
; 1684 : //					 if (i == j)
; 1685 : //					 {
; 1686 : //						 continue;
; 1687 : //					 }
; 1688 : 
; 1689 : 					 IServerUserItem* pTableUserItem =  GetTableUserItem(j);

  005e5	0f b7 45 a8	 movzx	 eax, WORD PTR _j$2[ebp]
  005e9	50		 push	 eax
  005ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005ed	8b 11		 mov	 edx, DWORD PTR [ecx]
  005ef	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005f2	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  005f8	ff d0		 call	 eax
  005fa	89 45 a4	 mov	 DWORD PTR _pTableUserItem$1[ebp], eax

; 1690 : 					 if(pTableUserItem == NULL ) continue;

  005fd	83 7d a4 00	 cmp	 DWORD PTR _pTableUserItem$1[ebp], 0
  00601	75 02		 jne	 SHORT $LN41@OnEventTim
  00603	eb cb		 jmp	 SHORT $LN13@OnEventTim
$LN41@OnEventTim:

; 1691 : 					 m_pIMainServiceFrame->SendData(pTableUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_REQUEST_REPLY, &RequestReply, sizeof(RequestReply));

  00605	6a 09		 push	 9
  00607	8d 45 ac	 lea	 eax, DWORD PTR _RequestReply$3[ebp]
  0060a	50		 push	 eax
  0060b	6a 06		 push	 6
  0060d	68 d2 00 00 00	 push	 210			; 000000d2H
  00612	8b 4d a4	 mov	 ecx, DWORD PTR _pTableUserItem$1[ebp]
  00615	51		 push	 ecx
  00616	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00619	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  0061f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00622	8b 10		 mov	 edx, DWORD PTR [eax]
  00624	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0062a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0062d	ff d0		 call	 eax

; 1692 : 				 }

  0062f	eb 9f		 jmp	 SHORT $LN13@OnEventTim
$LN14@OnEventTim:

; 1693 : 
; 1694 : 				 CancelTableRequestReply(RequestReply.dwUserID,  RequestReply.cbAgree); 

  00631	0f b6 45 b4	 movzx	 eax, BYTE PTR _RequestReply$3[ebp+8]
  00635	50		 push	 eax
  00636	8b 4d ac	 mov	 ecx, DWORD PTR _RequestReply$3[ebp]
  00639	51		 push	 ecx
  0063a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0063d	8b 02		 mov	 eax, DWORD PTR [edx]
  0063f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00642	8b 90 3c 01 00
	00		 mov	 edx, DWORD PTR [eax+316]
  00648	ff d2		 call	 edx
$LN40@OnEventTim:

; 1695 : 			}
; 1696 : 		}

  0064a	e9 0c ff ff ff	 jmp	 $LN10@OnEventTim
$LN11@OnEventTim:

; 1697 : 		return true;

  0064f	b0 01		 mov	 al, 1
  00651	eb 22		 jmp	 SHORT $LN1@OnEventTim
$LN38@OnEventTim:

; 1698 : 	}
; 1699 : 
; 1700 : 	//错误断言
; 1701 : 	ASSERT(FALSE);

  00653	33 c0		 xor	 eax, eax
  00655	75 1c		 jne	 SHORT $LN52@OnEventTim
  00657	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CTableFrame@@QAE_NKI@Z@4JA
  0065d	81 c1 bc 00 00
	00		 add	 ecx, 188		; 000000bcH
  00663	51		 push	 ecx
  00664	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00669	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0066e	85 c0		 test	 eax, eax
  00670	74 01		 je	 SHORT $LN52@OnEventTim
  00672	cc		 int	 3
$LN52@OnEventTim:

; 1702 : 
; 1703 : 	return false;

  00673	32 c0		 xor	 al, al
$LN1@OnEventTim:

; 1704 : }

  00675	5f		 pop	 edi
  00676	5e		 pop	 esi
  00677	5b		 pop	 ebx
  00678	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0067b	33 cd		 xor	 ecx, ebp
  0067d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00682	8b e5		 mov	 esp, ebp
  00684	5d		 pop	 ebp
  00685	c2 08 00	 ret	 8
?OnEventTimer@CTableFrame@@QAE_NKI@Z ENDP		; CTableFrame::OnEventTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?OnUserScroeNotify@CTableFrame@@UAE_NGPAUIServerUserItem@@E@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
_pIServerUserItem$ = 12					; size = 4
_cbReason$ = 16						; size = 1
?OnUserScroeNotify@CTableFrame@@UAE_NGPAUIServerUserItem@@E@Z PROC ; CTableFrame::OnUserScroeNotify, COMDAT
; _this$ = ecx

; 1506 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1507 : 	//通知游戏
; 1508 : 	return m_pITableFrameSink->OnUserScroeNotify(wChairID,pIServerUserItem,cbReason);

  0000c	0f b6 45 10	 movzx	 eax, BYTE PTR _cbReason$[ebp]
  00010	50		 push	 eax
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00014	51		 push	 ecx
  00015	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  00019	52		 push	 edx
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 01		 mov	 eax, DWORD PTR [ecx]
  00028	8b 8a c8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4040]
  0002e	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  00031	ff d2		 call	 edx

; 1509 : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
?OnUserScroeNotify@CTableFrame@@UAE_NGPAUIServerUserItem@@E@Z ENDP ; CTableFrame::OnUserScroeNotify
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
_wOffLineCount$1 = -28					; size = 2
_dwElapse$2 = -24					; size = 4
_cbUserStatus$ = -17					; size = 1
_wChairID$ = -16					; size = 2
_pITableUserItem$ = -12					; size = 4
_pUserInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z PROC ; CTableFrame::OnEventUserOffLine, COMDAT
; _this$ = ecx

; 1404 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1405 : 	//参数效验
; 1406 : 	ASSERT(pIServerUserItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN24@OnEventUse
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN24@OnEventUse
  00029	cc		 int	 3
$LN24@OnEventUse:

; 1407 : 	if (pIServerUserItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0002e	75 07		 jne	 SHORT $LN2@OnEventUse
  00030	32 c0		 xor	 al, al
  00032	e9 f8 03 00 00	 jmp	 $LN1@OnEventUse
$LN2@OnEventUse:

; 1408 : 
; 1409 : 	//用户变量
; 1410 : 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  00037	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0003a	8b 10		 mov	 edx, DWORD PTR [eax]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0003f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00042	ff d0		 call	 eax
  00044	89 45 f8	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 1411 : 	IServerUserItem * pITableUserItem=m_TableUserItemArray[pUserInfo->wChairID];

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0004a	0f b7 88 95 00
	00 00		 movzx	 ecx, WORD PTR [eax+149]
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	8b 84 8a 90 0c
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+3216]
  0005b	89 45 f4	 mov	 DWORD PTR _pITableUserItem$[ebp], eax

; 1412 : 
; 1413 : 	//用户属性
; 1414 : 	WORD wChairID=pIServerUserItem->GetChairID();

  0005e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00061	8b 10		 mov	 edx, DWORD PTR [eax]
  00063	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00066	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00069	ff d0		 call	 eax
  0006b	66 89 45 f0	 mov	 WORD PTR _wChairID$[ebp], ax

; 1415 : 	BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  0006f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00072	8b 10		 mov	 edx, DWORD PTR [eax]
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00077	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0007a	ff d0		 call	 eax
  0007c	88 45 ef	 mov	 BYTE PTR _cbUserStatus$[ebp], al

; 1416 : 
; 1417 : 	//游戏用户
; 1418 : 	if (cbUserStatus!=US_LOOKON)

  0007f	0f b6 45 ef	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00083	83 f8 04	 cmp	 eax, 4
  00086	0f 84 01 03 00
	00		 je	 $LN3@OnEventUse

; 1419 : 	{
; 1420 : 		//效验用户
; 1421 : 		ASSERT(pIServerUserItem==GetTableUserItem(wChairID));

  0008c	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	8b 11		 mov	 edx, DWORD PTR [ecx]
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0009f	ff d0		 call	 eax
  000a1	39 45 08	 cmp	 DWORD PTR _pIServerUserItem$[ebp], eax
  000a4	74 19		 je	 SHORT $LN25@OnEventUse
  000a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z@4JA
  000ac	83 c1 11	 add	 ecx, 17			; 00000011H
  000af	51		 push	 ecx
  000b0	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ba	85 c0		 test	 eax, eax
  000bc	74 01		 je	 SHORT $LN25@OnEventUse
  000be	cc		 int	 3
$LN25@OnEventUse:

; 1422 : 		if (pIServerUserItem!=GetTableUserItem(wChairID)) return false;

  000bf	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000c3	50		 push	 eax
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000d2	ff d0		 call	 eax
  000d4	39 45 08	 cmp	 DWORD PTR _pIServerUserItem$[ebp], eax
  000d7	74 07		 je	 SHORT $LN4@OnEventUse
  000d9	32 c0		 xor	 al, al
  000db	e9 4f 03 00 00	 jmp	 $LN1@OnEventUse
$LN4@OnEventUse:

; 1423 : 
; 1424 : 		//断线处理
; 1425 : 		if ( ((cbUserStatus == US_PLAYING) && (m_wOffLineCount[wChairID]<MAX_OFF_LINE) && (m_pGameServiceOption->wServerType != GAME_GENRE_PERSONAL))
; 1426 : 			|| m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && 

  000e0	0f b6 45 ef	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  000e4	83 f8 05	 cmp	 eax, 5
  000e7	75 2a		 jne	 SHORT $LN7@OnEventUse
  000e9	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	0f b7 94 41 de
	07 00 00	 movzx	 edx, WORD PTR [ecx+eax*2+2014]
  000f8	83 fa 03	 cmp	 edx, 3
  000fb	7d 16		 jge	 SHORT $LN7@OnEventUse
  000fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00106	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0010a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0010d	0f 85 b4 00 00
	00		 jne	 $LN6@OnEventUse
$LN7@OnEventUse:
  00113	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00116	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0011c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00120	83 fa 10	 cmp	 edx, 16			; 00000010H
  00123	0f 85 64 02 00
	00		 jne	 $LN3@OnEventUse
  00129	0f b6 45 ef	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  0012d	83 f8 02	 cmp	 eax, 2
  00130	7c 0d		 jl	 SHORT $LN9@OnEventUse
  00132	0f b6 45 ef	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00136	83 f8 05	 cmp	 eax, 5
  00139	0f 8e 88 00 00
	00		 jle	 $LN6@OnEventUse
$LN9@OnEventUse:
  0013f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00142	0f b6 88 87 44
	00 00		 movzx	 ecx, BYTE PTR [eax+17543]
  00149	85 c9		 test	 ecx, ecx
  0014b	74 10		 je	 SHORT $LN10@OnEventUse
  0014d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00150	8b 4d f8	 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00153	8b 90 40 07 00
	00		 mov	 edx, DWORD PTR [eax+1856]
  00159	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0015b	74 6a		 je	 SHORT $LN6@OnEventUse
$LN10@OnEventUse:
  0015d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00160	0f b6 88 d0 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18128]
  00167	85 c9		 test	 ecx, ecx
  00169	75 20		 jne	 SHORT $LN11@OnEventUse
  0016b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0016e	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00175	74 14		 je	 SHORT $LN11@OnEventUse
  00177	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	8b 90 18 10 00
	00		 mov	 edx, DWORD PTR [eax+4120]
  00183	3b 91 20 10 00
	00		 cmp	 edx, DWORD PTR [ecx+4128]
  00189	77 3c		 ja	 SHORT $LN6@OnEventUse
$LN11@OnEventUse:
  0018b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018e	0f b6 88 d0 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18128]
  00195	83 f9 02	 cmp	 ecx, 2
  00198	0f 85 ef 01 00
	00		 jne	 $LN3@OnEventUse
  0019e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a1	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  001a8	0f 84 df 01 00
	00		 je	 $LN3@OnEventUse
  001ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b1	0f b6 88 9c 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4508]
  001b8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001bb	39 8a 18 10 00
	00		 cmp	 DWORD PTR [edx+4120], ecx
  001c1	0f 86 c6 01 00
	00		 jbe	 $LN3@OnEventUse
$LN6@OnEventUse:

; 1427 : 			(cbUserStatus >= US_SIT && cbUserStatus <= US_PLAYING || m_PersonalTableParameter.cbIsJoinGame && m_dwTableOwnerID == pUserInfo->dwUserID || 
; 1428 : 			(m_cbGameMode == 0 && m_dwPersonalPlayCount != 0 && m_dwDrawCountLimit > m_dwPersonalPlayCount)
; 1429 : 			|| (m_cbGameMode == 2 && m_dwPersonalPlayCount != 0 && m_dwDrawCountLimit > m_cbLoopCount))
; 1430 : 			)
; 1431 : 		{
; 1432 : 			//用户设置
; 1433 : 			pIServerUserItem->SetClientReady(false);

  001c7	6a 00		 push	 0
  001c9	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001cc	8b 10		 mov	 edx, DWORD PTR [eax]
  001ce	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001d1	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  001d7	ff d0		 call	 eax

; 1434 : 			pIServerUserItem->SetUserStatus(US_OFFLINE,m_wTableID,wChairID);

  001d9	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  001dd	50		 push	 eax
  001de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e1	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  001e5	52		 push	 edx
  001e6	6a 06		 push	 6
  001e8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001eb	8b 10		 mov	 edx, DWORD PTR [eax]
  001ed	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001f0	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  001f6	ff d0		 call	 eax

; 1435 : 
; 1436 : 			//比赛类型
; 1437 : 			if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  001f8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001fb	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00201	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00205	83 fa 04	 cmp	 edx, 4
  00208	75 70		 jne	 SHORT $LN12@OnEventUse
  0020a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020d	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  00213	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00217	83 fa 01	 cmp	 edx, 1
  0021a	75 5e		 jne	 SHORT $LN12@OnEventUse

; 1438 : 			{
; 1439 : 				if(pIServerUserItem->IsTrusteeUser()==false)

  0021c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0021f	8b 10		 mov	 edx, DWORD PTR [eax]
  00221	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00224	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  0022a	ff d0		 call	 eax
  0022c	0f b6 c8	 movzx	 ecx, al
  0022f	85 c9		 test	 ecx, ecx
  00231	75 40		 jne	 SHORT $LN13@OnEventUse

; 1440 : 				{
; 1441 : 					//设置托管
; 1442 : 					pIServerUserItem->SetTrusteeUser(true);

  00233	6a 01		 push	 1
  00235	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00238	8b 10		 mov	 edx, DWORD PTR [eax]
  0023a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0023d	8b 82 bc 00 00
	00		 mov	 eax, DWORD PTR [edx+188]
  00243	ff d0		 call	 eax

; 1443 : 
; 1444 : 					//掉线通知
; 1445 : 					if(m_pITableUserAction!=NULL) m_pITableUserAction->OnActionUserOffLine(wChairID,pIServerUserItem);

  00245	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00248	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  0024f	74 22		 je	 SHORT $LN13@OnEventUse
  00251	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00254	50		 push	 eax
  00255	0f b7 4d f0	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00259	51		 push	 ecx
  0025a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0025d	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  00263	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00266	8b 10		 mov	 edx, DWORD PTR [eax]
  00268	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  0026e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00271	ff d0		 call	 eax
$LN13@OnEventUse:

; 1446 : 				}
; 1447 : 
; 1448 : 				return true;

  00273	b0 01		 mov	 al, 1
  00275	e9 b5 01 00 00	 jmp	 $LN1@OnEventUse
$LN12@OnEventUse:

; 1449 : 			}
; 1450 : 
; 1451 : 			//掉线通知
; 1452 : 			if(m_pITableUserAction!=NULL) m_pITableUserAction->OnActionUserOffLine(wChairID,pIServerUserItem);

  0027a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027d	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  00284	74 22		 je	 SHORT $LN15@OnEventUse
  00286	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00289	50		 push	 eax
  0028a	0f b7 4d f0	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  0028e	51		 push	 ecx
  0028f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00292	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  00298	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	8b 10		 mov	 edx, DWORD PTR [eax]
  0029d	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  002a3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002a6	ff d0		 call	 eax
$LN15@OnEventUse:

; 1453 : 
; 1454 : 			//断线处理
; 1455 : 			DWORD dwElapse = TIME_OFF_LINE;

  002a8	c7 45 e8 60 ea
	00 00		 mov	 DWORD PTR _dwElapse$2[ebp], 60000 ; 0000ea60H

; 1456 : 			if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  002af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b2	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  002b8	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  002bc	83 e2 10	 and	 edx, 16			; 00000010H
  002bf	74 0c		 je	 SHORT $LN16@OnEventUse

; 1457 : 			{
; 1458 : 				dwElapse = m_PersonalTableParameter.dwTimeOffLineCount;

  002c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c4	8b 88 8c 44 00
	00		 mov	 ecx, DWORD PTR [eax+17548]
  002ca	89 4d e8	 mov	 DWORD PTR _dwElapse$2[ebp], ecx
$LN16@OnEventUse:

; 1459 : 			}
; 1460 : 			
; 1461 : 			//断线处理
; 1462 : 			if (m_dwOffLineTime[wChairID]==0L)

  002cd	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  002d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d4	83 bc 81 70 09
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+2416], 0
  002dc	0f 85 a4 00 00
	00		 jne	 $LN17@OnEventUse

; 1463 : 			{
; 1464 : 				//设置变量
; 1465 : 				m_wOffLineCount[wChairID]++;

  002e2	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  002e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	66 8b 94 41 de
	07 00 00	 mov	 dx, WORD PTR [ecx+eax*2+2014]
  002f1	66 83 c2 01	 add	 dx, 1
  002f5	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  002f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fc	66 89 94 41 de
	07 00 00	 mov	 WORD PTR [ecx+eax*2+2014], dx

; 1466 : 				m_dwOffLineTime[wChairID]=(DWORD)time(NULL);

  00304	6a 00		 push	 0
  00306	e8 00 00 00 00	 call	 _time
  0030b	83 c4 04	 add	 esp, 4
  0030e	0f b7 4d f0	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00312	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00315	89 84 8a 70 09
	00 00		 mov	 DWORD PTR [edx+ecx*4+2416], eax

; 1467 : 
; 1468 : 				//时间设置
; 1469 : 				WORD wOffLineCount=GetOffLineUserCount();

  0031c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031f	e8 00 00 00 00	 call	 ?GetOffLineUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetOffLineUserCount
  00324	66 89 45 e4	 mov	 WORD PTR _wOffLineCount$1[ebp], ax

; 1470 : 
; 1471 : 				if (wOffLineCount==1)

  00328	0f b7 45 e4	 movzx	 eax, WORD PTR _wOffLineCount$1[ebp]
  0032c	83 f8 01	 cmp	 eax, 1
  0032f	75 55		 jne	 SHORT $LN17@OnEventUse

; 1472 : 				{
; 1473 : 					if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  00331	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00334	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0033a	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0033e	83 e2 10	 and	 edx, 16			; 00000010H
  00341	74 26		 je	 SHORT $LN19@OnEventUse

; 1474 : 					{
; 1475 : 						SetGameTimer(IDI_OFF_LINE,dwElapse * 60 * 1000 ,1,wChairID);

  00343	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00347	50		 push	 eax
  00348	6a 01		 push	 1
  0034a	6b 4d e8 3c	 imul	 ecx, DWORD PTR _dwElapse$2[ebp], 60
  0034e	69 d1 e8 03 00
	00		 imul	 edx, ecx, 1000
  00354	52		 push	 edx
  00355	6a 15		 push	 21			; 00000015H
  00357	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0035a	8b 10		 mov	 edx, DWORD PTR [eax]
  0035c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0035f	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00365	ff d0		 call	 eax

; 1476 : 					}
; 1477 : 					else

  00367	eb 1d		 jmp	 SHORT $LN17@OnEventUse
$LN19@OnEventUse:

; 1478 : 					{
; 1479 : 						SetGameTimer(IDI_OFF_LINE,dwElapse ,1,wChairID);

  00369	0f b7 45 f0	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0036d	50		 push	 eax
  0036e	6a 01		 push	 1
  00370	8b 4d e8	 mov	 ecx, DWORD PTR _dwElapse$2[ebp]
  00373	51		 push	 ecx
  00374	6a 15		 push	 21			; 00000015H
  00376	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00379	8b 02		 mov	 eax, DWORD PTR [edx]
  0037b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0037e	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  00384	ff d2		 call	 edx
$LN17@OnEventUse:

; 1480 : 					}
; 1481 : 				}
; 1482 : 			}
; 1483 : 
; 1484 : 			return true;

  00386	b0 01		 mov	 al, 1
  00388	e9 a2 00 00 00	 jmp	 $LN1@OnEventUse
$LN3@OnEventUse:

; 1485 : 		}
; 1486 : 	}
; 1487 : 
; 1488 : 	//用户起立
; 1489 : 	PerformStandUpAction(pIServerUserItem,true);

  0038d	6a 01		 push	 1
  0038f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00392	50		 push	 eax
  00393	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00396	8b 11		 mov	 edx, DWORD PTR [ecx]
  00398	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0039b	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  003a1	ff d0		 call	 eax

; 1490 : 	
; 1491 : 	//比赛处理
; 1492 : 	if (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  003a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003a6	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  003ac	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  003b0	83 fa 04	 cmp	 edx, 4
  003b3	75 2e		 jne	 SHORT $LN21@OnEventUse
  003b5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003b8	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  003be	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  003c2	83 fa 01	 cmp	 edx, 1
  003c5	75 1c		 jne	 SHORT $LN21@OnEventUse

; 1493 : 	{
; 1494 : 		if (pIServerUserItem->IsTrusteeUser()==true) return true;

  003c7	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003ca	8b 10		 mov	 edx, DWORD PTR [eax]
  003cc	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003cf	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  003d5	ff d0		 call	 eax
  003d7	0f b6 c8	 movzx	 ecx, al
  003da	83 f9 01	 cmp	 ecx, 1
  003dd	75 04		 jne	 SHORT $LN21@OnEventUse
  003df	b0 01		 mov	 al, 1
  003e1	eb 4c		 jmp	 SHORT $LN1@OnEventUse
$LN21@OnEventUse:

; 1495 : 	}
; 1496 : 
; 1497 : 	//删除用户
; 1498 : 	ASSERT(pIServerUserItem->GetUserStatus()==US_FREE);

  003e3	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003e6	8b 10		 mov	 edx, DWORD PTR [eax]
  003e8	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003eb	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  003ee	ff d0		 call	 eax
  003f0	0f b6 c8	 movzx	 ecx, al
  003f3	83 f9 01	 cmp	 ecx, 1
  003f6	74 19		 je	 SHORT $LN26@OnEventUse
  003f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z@4JA
  003fe	83 c2 5e	 add	 edx, 94			; 0000005eH
  00401	52		 push	 edx
  00402	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00407	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0040c	85 c0		 test	 eax, eax
  0040e	74 01		 je	 SHORT $LN26@OnEventUse
  00410	cc		 int	 3
$LN26@OnEventUse:

; 1499 : 	pIServerUserItem->SetUserStatus(US_NULL,INVALID_TABLE,INVALID_CHAIR);

  00411	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00416	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0041b	6a 00		 push	 0
  0041d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00420	8b 10		 mov	 edx, DWORD PTR [eax]
  00422	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00425	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  0042b	ff d0		 call	 eax

; 1500 : 
; 1501 : 	return true;

  0042d	b0 01		 mov	 al, 1
$LN1@OnEventUse:

; 1502 : }

  0042f	5f		 pop	 edi
  00430	5e		 pop	 esi
  00431	5b		 pop	 ebx
  00432	8b e5		 mov	 esp, ebp
  00434	5d		 pop	 ebp
  00435	c2 04 00	 ret	 4
?OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ENDP ; CTableFrame::OnEventUserOffLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z
_TEXT	SEGMENT
tv195 = -948						; size = 4
tv177 = -948						; size = 4
$T2 = -941						; size = 1
_IniData$ = -812					; size = 264
_szIniFile$ = -548					; size = 260
_szWorkDir$ = -288					; size = 260
_pITableFrame$ = -28					; size = 4
_pIGameServiceManager$ = -24				; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wTableID$ = 8						; size = 2
_TableFrameParameter$ = 12				; size = 4
?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z PROC ; CTableFrame::InitializationFrame, COMDAT
; _this$ = ecx

; 2407 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a8 03 00
	00		 sub	 esp, 936		; 000003a8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2408 : 	//设置变量
; 2409 : 	m_wTableID=wTableID;

  00031	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00034	66 8b 4d 08	 mov	 cx, WORD PTR _wTableID$[ebp]
  00038	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 2410 : 	m_wChairCount=TableFrameParameter.pGameServiceAttrib->wChairCount;

  0003c	8b 45 0c	 mov	 eax, DWORD PTR _TableFrameParameter$[ebp]
  0003f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00042	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00045	66 8b 41 02	 mov	 ax, WORD PTR [ecx+2]
  00049	66 89 42 0a	 mov	 WORD PTR [edx+10], ax

; 2411 : 
; 2412 : 	//配置参数
; 2413 : 	m_pGameParameter=TableFrameParameter.pGameParameter;

  0004d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  00053	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00056	89 90 e4 0f 00
	00		 mov	 DWORD PTR [eax+4068], edx

; 2414 : 	m_pGameMatchOption=TableFrameParameter.pGameMatchOption;

  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  00062	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00065	89 90 e8 0f 00
	00		 mov	 DWORD PTR [eax+4072], edx

; 2415 : 	m_pGameServiceAttrib=TableFrameParameter.pGameServiceAttrib;

  0006b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  00071	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00074	89 90 ec 0f 00
	00		 mov	 DWORD PTR [eax+4076], edx

; 2416 : 	m_pGameServiceOption=TableFrameParameter.pGameServiceOption;

  0007a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  00080	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00083	89 90 f0 0f 00
	00		 mov	 DWORD PTR [eax+4080], edx

; 2417 : 
; 2418 : 	//组件接口
; 2419 : 	m_pITimerEngine=TableFrameParameter.pITimerEngine;

  00089	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	89 90 c4 0f 00
	00		 mov	 DWORD PTR [eax+4036], edx

; 2420 : 	m_pIMainServiceFrame=TableFrameParameter.pIMainServiceFrame;

  00097	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  0009d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000a0	89 90 cc 0f 00
	00		 mov	 DWORD PTR [eax+4044], edx

; 2421 : 	m_pIAndroidUserManager=TableFrameParameter.pIAndroidUserManager;

  000a6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  000ac	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000af	89 90 d0 0f 00
	00		 mov	 DWORD PTR [eax+4048], edx

; 2422 : 	m_pIKernelDataBaseEngine=TableFrameParameter.pIKernelDataBaseEngine;

  000b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  000bb	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000be	89 90 dc 0f 00
	00		 mov	 DWORD PTR [eax+4060], edx

; 2423 : 	m_pIRecordDataBaseEngine=TableFrameParameter.pIRecordDataBaseEngine;

  000c4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 4d 0c	 mov	 ecx, DWORD PTR _TableFrameParameter$[ebp]
  000ca	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000cd	89 90 e0 0f 00
	00		 mov	 DWORD PTR [eax+4064], edx

; 2424 : 
; 2425 : 	//创建桌子
; 2426 : 	IGameServiceManager * pIGameServiceManager=TableFrameParameter.pIGameServiceManager;

  000d3	8b 45 0c	 mov	 eax, DWORD PTR _TableFrameParameter$[ebp]
  000d6	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000d9	89 4d e8	 mov	 DWORD PTR _pIGameServiceManager$[ebp], ecx

; 2427 : 	m_pITableFrameSink=(ITableFrameSink *)pIGameServiceManager->CreateTableFrameSink(IID_ITableFrameSink,VER_ITableFrameSink);

  000dc	68 00 01 01 06	 push	 100729088		; 06010100H
  000e1	68 00 00 00 00	 push	 OFFSET ?IID_ITableFrameSink@@3U_GUID@@B
  000e6	8b 45 e8	 mov	 eax, DWORD PTR _pIGameServiceManager$[ebp]
  000e9	8b 10		 mov	 edx, DWORD PTR [eax]
  000eb	8b 4d e8	 mov	 ecx, DWORD PTR _pIGameServiceManager$[ebp]
  000ee	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f1	ff d0		 call	 eax
  000f3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	89 81 c8 0f 00
	00		 mov	 DWORD PTR [ecx+4040], eax

; 2428 : 
; 2429 : 	//错误判断
; 2430 : 	if (m_pITableFrameSink==NULL)

  000fc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  00106	75 24		 jne	 SHORT $LN2@Initializa

; 2431 : 	{
; 2432 : 		ASSERT(FALSE);

  00108	33 c0		 xor	 eax, eax
  0010a	75 19		 jne	 SHORT $LN5@Initializa
  0010c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z@4JA
  00112	83 c1 19	 add	 ecx, 25			; 00000019H
  00115	51		 push	 ecx
  00116	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0011b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00120	85 c0		 test	 eax, eax
  00122	74 01		 je	 SHORT $LN5@Initializa
  00124	cc		 int	 3
$LN5@Initializa:

; 2433 : 		return false;

  00125	32 c0		 xor	 al, al
  00127	e9 3f 02 00 00	 jmp	 $LN1@Initializa
$LN2@Initializa:

; 2434 : 	}
; 2435 : 	
; 2436 : 	//设置变量
; 2437 : 	m_lCellScore=m_pGameServiceOption->lCellScore;

  0012c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00135	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00138	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0013b	89 82 20 07 00
	00		 mov	 DWORD PTR [edx+1824], eax

; 2438 : 
; 2439 : 	//设置桌子
; 2440 : 	IUnknownEx * pITableFrame=QUERY_ME_INTERFACE(IUnknownEx);

  00141	68 00 01 01 06	 push	 100729088		; 06010100H
  00146	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  0014b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 10		 mov	 edx, DWORD PTR [eax]
  00150	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00156	ff d0		 call	 eax
  00158	89 45 e4	 mov	 DWORD PTR _pITableFrame$[ebp], eax

; 2441 : 	if (m_pITableFrameSink->Initialization(pITableFrame)==false) return false;

  0015b	8b 45 e4	 mov	 eax, DWORD PTR _pITableFrame$[ebp]
  0015e	50		 push	 eax
  0015f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  00168	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016b	8b 12		 mov	 edx, DWORD PTR [edx]
  0016d	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00173	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00176	ff d0		 call	 eax
  00178	0f b6 c8	 movzx	 ecx, al
  0017b	85 c9		 test	 ecx, ecx
  0017d	75 07		 jne	 SHORT $LN3@Initializa
  0017f	32 c0		 xor	 al, al
  00181	e9 e5 01 00 00	 jmp	 $LN1@Initializa
$LN3@Initializa:

; 2442 : 
; 2443 : 	//设置标识
; 2444 : 	m_bTableInitFinish=true;

  00186	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00189	c6 40 13 01	 mov	 BYTE PTR [eax+19], 1

; 2445 : 
; 2446 : 	//扩展接口
; 2447 : 	m_pITableUserAction=QUERY_OBJECT_PTR_INTERFACE(m_pITableFrameSink,ITableUserAction);

  0018d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00190	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  00197	75 0c		 jne	 SHORT $LN6@Initializa
  00199	c7 85 4c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv177[ebp], 0
  001a3	eb 29		 jmp	 SHORT $LN7@Initializa
$LN6@Initializa:
  001a5	68 00 01 01 06	 push	 100729088		; 06010100H
  001aa	68 00 00 00 00	 push	 OFFSET ?IID_ITableUserAction@@3U_GUID@@B
  001af	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b2	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  001b8	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001bb	8b 12		 mov	 edx, DWORD PTR [edx]
  001bd	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  001c3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001c6	ff d0		 call	 eax
  001c8	89 85 4c fc ff
	ff		 mov	 DWORD PTR tv177[ebp], eax
$LN7@Initializa:
  001ce	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	8b 95 4c fc ff
	ff		 mov	 edx, DWORD PTR tv177[ebp]
  001d7	89 91 d4 0f 00
	00		 mov	 DWORD PTR [ecx+4052], edx

; 2448 : 	m_pITableUserRequest=QUERY_OBJECT_PTR_INTERFACE(m_pITableFrameSink,ITableUserRequest);

  001dd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001e0	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  001e7	75 0c		 jne	 SHORT $LN8@Initializa
  001e9	c7 85 4c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
  001f3	eb 29		 jmp	 SHORT $LN9@Initializa
$LN8@Initializa:
  001f5	68 00 01 01 06	 push	 100729088		; 06010100H
  001fa	68 00 00 00 00	 push	 OFFSET ?IID_ITableUserRequest@@3U_GUID@@B
  001ff	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00202	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  00208	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0020b	8b 12		 mov	 edx, DWORD PTR [edx]
  0020d	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00213	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00216	ff d0		 call	 eax
  00218	89 85 4c fc ff
	ff		 mov	 DWORD PTR tv195[ebp], eax
$LN9@Initializa:
  0021e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00221	8b 95 4c fc ff
	ff		 mov	 edx, DWORD PTR tv195[ebp]
  00227	89 91 d8 0f 00
	00		 mov	 DWORD PTR [ecx+4056], edx

; 2449 : 
; 2450 : 	//读取配置
; 2451 : 	TCHAR szWorkDir[MAX_PATH]=TEXT("");

  0022d	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00232	88 85 e0 fe ff
	ff		 mov	 BYTE PTR _szWorkDir$[ebp], al
  00238	68 03 01 00 00	 push	 259			; 00000103H
  0023d	6a 00		 push	 0
  0023f	8d 85 e1 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp+1]
  00245	50		 push	 eax
  00246	e8 00 00 00 00	 call	 _memset
  0024b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2452 : 	CWHService::GetWorkDirectory(szWorkDir,CountArray(szWorkDir));

  0024e	68 04 01 00 00	 push	 260			; 00000104H
  00253	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp]
  00259	50		 push	 eax
  0025a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWorkDirectory@CWHService@@SA_NQADG@Z
  00260	83 c4 08	 add	 esp, 8

; 2453 : 
; 2454 : 	//构造路径
; 2455 : 	TCHAR szIniFile[MAX_PATH]=TEXT("");

  00263	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00268	88 85 dc fd ff
	ff		 mov	 BYTE PTR _szIniFile$[ebp], al
  0026e	68 03 01 00 00	 push	 259			; 00000103H
  00273	6a 00		 push	 0
  00275	8d 85 dd fd ff
	ff		 lea	 eax, DWORD PTR _szIniFile$[ebp+1]
  0027b	50		 push	 eax
  0027c	e8 00 00 00 00	 call	 _memset
  00281	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2456 : 	_sntprintf_s(szIniFile,CountArray(szIniFile),TEXT("%s\\PersonalTable.ini"),szWorkDir);

  00284	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp]
  0028a	50		 push	 eax
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FCLAICIB@?$CFs?2PersonalTable?4ini@
  00290	68 04 01 00 00	 push	 260			; 00000104H
  00295	8d 8d dc fd ff
	ff		 lea	 ecx, DWORD PTR _szIniFile$[ebp]
  0029b	51		 push	 ecx
  0029c	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ ; _snprintf_s<260>
  002a1	83 c4 10	 add	 esp, 16			; 00000010H

; 2457 : 
; 2458 : 	//读取配置
; 2459 : 	CWHIniData IniData;

  002a4	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  002aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHIniData@@QAE@XZ
  002b0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2460 : 	IniData.SetIniFilePath(szIniFile);

  002b7	8d 85 dc fd ff
	ff		 lea	 eax, DWORD PTR _szIniFile$[ebp]
  002bd	50		 push	 eax
  002be	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  002c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetIniFilePath@CWHIniData@@QAEXPBD@Z

; 2461 : 
; 2462 : 	m_PlayerWaitTime = IniData.ReadInt(m_pGameServiceAttrib->szGameName,TEXT("PlayerWaitTime"),120);

  002ca	6a 78		 push	 120			; 00000078H
  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OOPDANCH@PlayerWaitTime@
  002d1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002d4	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  002da	83 c1 06	 add	 ecx, 6
  002dd	51		 push	 ecx
  002de	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  002e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  002ea	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  002ed	89 82 34 10 00
	00		 mov	 DWORD PTR [edx+4148], eax

; 2463 : 	m_TableOwnerWaitTime = IniData.ReadInt(m_pGameServiceAttrib->szGameName,TEXT("TableOwnerWaitTime"),1800);

  002f3	68 08 07 00 00	 push	 1800			; 00000708H
  002f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EHGOMFHF@TableOwnerWaitTime@
  002fd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00300	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00306	83 c1 06	 add	 ecx, 6
  00309	51		 push	 ecx
  0030a	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00310	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00316	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00319	89 82 38 10 00
	00		 mov	 DWORD PTR [edx+4152], eax

; 2464 : 	m_GameStartOverTime = IniData.ReadInt(m_pGameServiceAttrib->szGameName,TEXT("GameStartOverTime"),900);

  0031f	68 84 03 00 00	 push	 900			; 00000384H
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JKMCHJPE@GameStartOverTime@
  00329	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0032c	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00332	83 c1 06	 add	 ecx, 6
  00335	51		 push	 ecx
  00336	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  0033c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00342	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00345	89 82 3c 10 00
	00		 mov	 DWORD PTR [edx+4156], eax

; 2465 : 
; 2466 : 	return true;

  0034b	c6 85 53 fc ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  00352	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00359	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  0035f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHIniData@@UAE@XZ
  00365	8a 85 53 fc ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@Initializa:

; 2467 : }

  0036b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0036e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00375	59		 pop	 ecx
  00376	5f		 pop	 edi
  00377	5e		 pop	 esi
  00378	5b		 pop	 ebx
  00379	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0037c	33 cd		 xor	 ecx, ebp
  0037e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00383	8b e5		 mov	 esp, ebp
  00385	5d		 pop	 ebp
  00386	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z$0:
  00000	8d 8d d4 fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHIniData@@UAE@XZ
__ehhandler$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a 48 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-952]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z ENDP ; CTableFrame::InitializationFrame
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z
_TEXT	SEGMENT
tv141 = -80						; size = 4
_pIServerUserItem$1 = -12				; size = 4
_i$2 = -8						; size = 2
_this$ = -4						; size = 4
_TableUserInfo$ = 8					; size = 4
?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z PROC ; CTableFrame::GetTableUserInfo, COMDAT
; _this$ = ecx

; 2349 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2350 : 	//设置变量
; 2351 : 	ZeroMemory(&TableUserInfo,sizeof(TableUserInfo));

  0000c	6a 08		 push	 8
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR _TableUserInfo$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2352 : 
; 2353 : 	//用户分析
; 2354 : 	for (WORD i=0;i<m_pGameServiceAttrib->wChairCount;i++)

  0001c	33 c0		 xor	 eax, eax
  0001e	66 89 45 f8	 mov	 WORD PTR _i$2[ebp], ax
  00022	eb 0c		 jmp	 SHORT $LN4@GetTableUs
$LN2@GetTableUs:
  00024	66 8b 45 f8	 mov	 ax, WORD PTR _i$2[ebp]
  00028	66 83 c0 01	 add	 ax, 1
  0002c	66 89 45 f8	 mov	 WORD PTR _i$2[ebp], ax
$LN4@GetTableUs:
  00030	0f b7 45 f8	 movzx	 eax, WORD PTR _i$2[ebp]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 91 ec 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4076]
  0003d	0f b7 4a 02	 movzx	 ecx, WORD PTR [edx+2]
  00041	3b c1		 cmp	 eax, ecx
  00043	0f 8d 89 00 00
	00		 jge	 $LN3@GetTableUs

; 2355 : 	{
; 2356 : 		//获取用户
; 2357 : 		IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  00049	0f b7 45 f8	 movzx	 eax, WORD PTR _i$2[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0005c	ff d0		 call	 eax
  0005e	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$1[ebp], eax

; 2358 : 		if (pIServerUserItem==NULL) continue;

  00061	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$1[ebp], 0
  00065	75 02		 jne	 SHORT $LN7@GetTableUs
  00067	eb bb		 jmp	 SHORT $LN2@GetTableUs
$LN7@GetTableUs:

; 2359 : 
; 2360 : 		//用户类型
; 2361 : 		if (pIServerUserItem->IsAndroidUser()==false)

  00069	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  0006c	8b 10		 mov	 edx, DWORD PTR [eax]
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  00071	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00077	ff d0		 call	 eax
  00079	0f b6 c8	 movzx	 ecx, al
  0007c	85 c9		 test	 ecx, ecx
  0007e	75 14		 jne	 SHORT $LN8@GetTableUs

; 2362 : 		{
; 2363 : 			TableUserInfo.wTableUserCount++;

  00080	8b 45 08	 mov	 eax, DWORD PTR _TableUserInfo$[ebp]
  00083	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  00087	66 83 c1 01	 add	 cx, 1
  0008b	8b 55 08	 mov	 edx, DWORD PTR _TableUserInfo$[ebp]
  0008e	66 89 4a 02	 mov	 WORD PTR [edx+2], cx

; 2364 : 		}
; 2365 : 		else

  00092	eb 12		 jmp	 SHORT $LN9@GetTableUs
$LN8@GetTableUs:

; 2366 : 		{
; 2367 : 			TableUserInfo.wTableAndroidCount++;

  00094	8b 45 08	 mov	 eax, DWORD PTR _TableUserInfo$[ebp]
  00097	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  0009b	66 83 c1 01	 add	 cx, 1
  0009f	8b 55 08	 mov	 edx, DWORD PTR _TableUserInfo$[ebp]
  000a2	66 89 4a 06	 mov	 WORD PTR [edx+6], cx
$LN9@GetTableUs:

; 2368 : 		}
; 2369 : 
; 2370 : 		//准备判断
; 2371 : 		if (pIServerUserItem->GetUserStatus()==US_READY)

  000a6	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000a9	8b 10		 mov	 edx, DWORD PTR [eax]
  000ab	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000ae	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000b1	ff d0		 call	 eax
  000b3	0f b6 c8	 movzx	 ecx, al
  000b6	83 f9 03	 cmp	 ecx, 3
  000b9	75 12		 jne	 SHORT $LN10@GetTableUs

; 2372 : 		{
; 2373 : 			TableUserInfo.wTableReadyCount++;

  000bb	8b 45 08	 mov	 eax, DWORD PTR _TableUserInfo$[ebp]
  000be	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  000c2	66 83 c1 01	 add	 cx, 1
  000c6	8b 55 08	 mov	 edx, DWORD PTR _TableUserInfo$[ebp]
  000c9	66 89 4a 04	 mov	 WORD PTR [edx+4], cx
$LN10@GetTableUs:

; 2374 : 		}
; 2375 : 	}

  000cd	e9 52 ff ff ff	 jmp	 $LN2@GetTableUs
$LN3@GetTableUs:

; 2376 : 
; 2377 : 	//最少数目
; 2378 : 	switch (m_cbStartMode)

  000d2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  000d8	88 4d b0	 mov	 BYTE PTR tv141[ebp], cl
  000db	80 7d b0 00	 cmp	 BYTE PTR tv141[ebp], 0
  000df	74 0e		 je	 SHORT $LN11@GetTableUs
  000e1	80 7d b0 02	 cmp	 BYTE PTR tv141[ebp], 2
  000e5	74 15		 je	 SHORT $LN12@GetTableUs
  000e7	80 7d b0 10	 cmp	 BYTE PTR tv141[ebp], 16	; 00000010H
  000eb	74 1c		 je	 SHORT $LN13@GetTableUs
  000ed	eb 27		 jmp	 SHORT $LN14@GetTableUs
$LN11@GetTableUs:

; 2379 : 	{
; 2380 : 	case START_MODE_ALL_READY:		//所有准备
; 2381 : 		{
; 2382 : 			TableUserInfo.wMinUserCount=2;

  000ef	b8 02 00 00 00	 mov	 eax, 2
  000f4	8b 4d 08	 mov	 ecx, DWORD PTR _TableUserInfo$[ebp]
  000f7	66 89 01	 mov	 WORD PTR [ecx], ax

; 2383 : 			break;

  000fa	eb 2d		 jmp	 SHORT $LN5@GetTableUs
$LN12@GetTableUs:

; 2384 : 		}
; 2385 : 	case START_MODE_PAIR_READY:		//配对开始
; 2386 : 		{
; 2387 : 			TableUserInfo.wMinUserCount=2;

  000fc	b8 02 00 00 00	 mov	 eax, 2
  00101	8b 4d 08	 mov	 ecx, DWORD PTR _TableUserInfo$[ebp]
  00104	66 89 01	 mov	 WORD PTR [ecx], ax

; 2388 : 			break;

  00107	eb 20		 jmp	 SHORT $LN5@GetTableUs
$LN13@GetTableUs:

; 2389 : 		}
; 2390 : 	case START_MODE_TIME_CONTROL:	//时间控制
; 2391 : 		{
; 2392 : 			TableUserInfo.wMinUserCount=1;

  00109	b8 01 00 00 00	 mov	 eax, 1
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _TableUserInfo$[ebp]
  00111	66 89 01	 mov	 WORD PTR [ecx], ax

; 2393 : 			break;

  00114	eb 13		 jmp	 SHORT $LN5@GetTableUs
$LN14@GetTableUs:

; 2394 : 		}
; 2395 : 	default:						//默认模式
; 2396 : 		{
; 2397 : 			TableUserInfo.wMinUserCount=m_pGameServiceAttrib->wChairCount;

  00116	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00119	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  0011f	8b 55 08	 mov	 edx, DWORD PTR _TableUserInfo$[ebp]
  00122	66 8b 41 02	 mov	 ax, WORD PTR [ecx+2]
  00126	66 89 02	 mov	 WORD PTR [edx], ax
$LN5@GetTableUs:

; 2398 : 			break;
; 2399 : 		}
; 2400 : 	}
; 2401 : 
; 2402 : 	return TableUserInfo.wTableAndroidCount+TableUserInfo.wTableUserCount;

  00129	8b 45 08	 mov	 eax, DWORD PTR _TableUserInfo$[ebp]
  0012c	0f b7 40 06	 movzx	 eax, WORD PTR [eax+6]
  00130	8b 4d 08	 mov	 ecx, DWORD PTR _TableUserInfo$[ebp]
  00133	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00137	03 c2		 add	 eax, edx

; 2403 : }

  00139	5f		 pop	 edi
  0013a	5e		 pop	 esi
  0013b	5b		 pop	 ebx
  0013c	8b e5		 mov	 esp, ebp
  0013e	5d		 pop	 ebp
  0013f	c2 04 00	 ret	 4
?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ENDP ; CTableFrame::GetTableUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetOffLineUserCount@CTableFrame@@QAEGXZ
_TEXT	SEGMENT
_i$1 = -12						; size = 2
_wOffLineCount$ = -8					; size = 2
_this$ = -4						; size = 4
?GetOffLineUserCount@CTableFrame@@QAEGXZ PROC		; CTableFrame::GetOffLineUserCount, COMDAT
; _this$ = ecx

; 2331 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2332 : 	//变量定义
; 2333 : 	WORD wOffLineCount=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wOffLineCount$[ebp], ax

; 2334 : 
; 2335 : 	//断线人数
; 2336 : 	for (WORD i=0;i<m_wChairCount;i++)

  00012	33 c0		 xor	 eax, eax
  00014	66 89 45 f4	 mov	 WORD PTR _i$1[ebp], ax
  00018	eb 0c		 jmp	 SHORT $LN4@GetOffLine
$LN2@GetOffLine:
  0001a	66 8b 45 f4	 mov	 ax, WORD PTR _i$1[ebp]
  0001e	66 83 c0 01	 add	 ax, 1
  00022	66 89 45 f4	 mov	 WORD PTR _i$1[ebp], ax
$LN4@GetOffLine:
  00026	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00031	3b c2		 cmp	 eax, edx
  00033	7d 1f		 jge	 SHORT $LN3@GetOffLine

; 2337 : 	{
; 2338 : 		if (m_dwOffLineTime[i]!=0L)

  00035	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 bc 81 70 09
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+2416], 0
  00044	74 0c		 je	 SHORT $LN5@GetOffLine

; 2339 : 		{
; 2340 : 			wOffLineCount++;

  00046	66 8b 45 f8	 mov	 ax, WORD PTR _wOffLineCount$[ebp]
  0004a	66 83 c0 01	 add	 ax, 1
  0004e	66 89 45 f8	 mov	 WORD PTR _wOffLineCount$[ebp], ax
$LN5@GetOffLine:

; 2341 : 		}
; 2342 : 	}

  00052	eb c6		 jmp	 SHORT $LN2@GetOffLine
$LN3@GetOffLine:

; 2343 : 
; 2344 : 	return wOffLineCount;

  00054	66 8b 45 f8	 mov	 ax, WORD PTR _wOffLineCount$[ebp]

; 2345 : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?GetOffLineUserCount@CTableFrame@@QAEGXZ ENDP		; CTableFrame::GetOffLineUserCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetLookonUserCount@CTableFrame@@QAEGXZ
_TEXT	SEGMENT
_nLookonCount$ = -8					; size = 4
_this$ = -4						; size = 4
?GetLookonUserCount@CTableFrame@@QAEGXZ PROC		; CTableFrame::GetLookonUserCount, COMDAT
; _this$ = ecx

; 2322 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2323 : 	//获取数目
; 2324 : 	INT_PTR nLookonCount=m_LookonUserItemArray.GetCount();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00015	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
  0001a	89 45 f8	 mov	 DWORD PTR _nLookonCount$[ebp], eax

; 2325 : 
; 2326 : 	return (WORD)(nLookonCount);

  0001d	66 8b 45 f8	 mov	 ax, WORD PTR _nLookonCount$[ebp]

; 2327 : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetLookonUserCount@CTableFrame@@QAEGXZ ENDP		; CTableFrame::GetLookonUserCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetSitUserCount@CTableFrame@@QAEGXZ
_TEXT	SEGMENT
_i$1 = -12						; size = 2
_wUserCount$ = -8					; size = 2
_this$ = -4						; size = 4
?GetSitUserCount@CTableFrame@@QAEGXZ PROC		; CTableFrame::GetSitUserCount, COMDAT
; _this$ = ecx

; 2304 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2305 : 	//变量定义
; 2306 : 	WORD wUserCount=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wUserCount$[ebp], ax

; 2307 : 
; 2308 : 	//数目统计
; 2309 : 	for (WORD i=0;i<m_wChairCount;i++)

  00012	33 c0		 xor	 eax, eax
  00014	66 89 45 f4	 mov	 WORD PTR _i$1[ebp], ax
  00018	eb 0c		 jmp	 SHORT $LN4@GetSitUser
$LN2@GetSitUser:
  0001a	66 8b 45 f4	 mov	 ax, WORD PTR _i$1[ebp]
  0001e	66 83 c0 01	 add	 ax, 1
  00022	66 89 45 f4	 mov	 WORD PTR _i$1[ebp], ax
$LN4@GetSitUser:
  00026	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00031	3b c2		 cmp	 eax, edx
  00033	7d 27		 jge	 SHORT $LN3@GetSitUser

; 2310 : 	{
; 2311 : 		if (GetTableUserItem(i)!=NULL)

  00035	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  00039	50		 push	 eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00048	ff d0		 call	 eax
  0004a	85 c0		 test	 eax, eax
  0004c	74 0c		 je	 SHORT $LN5@GetSitUser

; 2312 : 		{
; 2313 : 			wUserCount++;

  0004e	66 8b 45 f8	 mov	 ax, WORD PTR _wUserCount$[ebp]
  00052	66 83 c0 01	 add	 ax, 1
  00056	66 89 45 f8	 mov	 WORD PTR _wUserCount$[ebp], ax
$LN5@GetSitUser:

; 2314 : 		}
; 2315 : 	}

  0005a	eb be		 jmp	 SHORT $LN2@GetSitUser
$LN3@GetSitUser:

; 2316 : 
; 2317 : 	return wUserCount;

  0005c	66 8b 45 f8	 mov	 ax, WORD PTR _wUserCount$[ebp]

; 2318 : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?GetSitUserCount@CTableFrame@@QAEGXZ ENDP		; CTableFrame::GetSitUserCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetRandNullChairID@CTableFrame@@QAEGXZ
_TEXT	SEGMENT
_i$1 = -12						; size = 2
_wIndex$ = -8						; size = 2
_this$ = -4						; size = 4
?GetRandNullChairID@CTableFrame@@QAEGXZ PROC		; CTableFrame::GetRandNullChairID, COMDAT
; _this$ = ecx

; 2288 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2289 : 	//椅子搜索
; 2290 : 	WORD wIndex = rand()%m_wChairCount;

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	0f b7 49 0a	 movzx	 ecx, WORD PTR [ecx+10]
  00019	99		 cdq
  0001a	f7 f9		 idiv	 ecx
  0001c	66 89 55 f8	 mov	 WORD PTR _wIndex$[ebp], dx

; 2291 : 	for (WORD i=wIndex;i<m_wChairCount+wIndex;i++)

  00020	66 8b 45 f8	 mov	 ax, WORD PTR _wIndex$[ebp]
  00024	66 89 45 f4	 mov	 WORD PTR _i$1[ebp], ax
  00028	eb 0c		 jmp	 SHORT $LN4@GetRandNul
$LN2@GetRandNul:
  0002a	66 8b 45 f4	 mov	 ax, WORD PTR _i$1[ebp]
  0002e	66 83 c0 01	 add	 ax, 1
  00032	66 89 45 f4	 mov	 WORD PTR _i$1[ebp], ax
$LN4@GetRandNul:
  00036	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00041	0f b7 4d f8	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  00045	03 d1		 add	 edx, ecx
  00047	3b c2		 cmp	 eax, edx
  00049	7d 30		 jge	 SHORT $LN3@GetRandNul

; 2292 : 	{
; 2293 : 		if (m_TableUserItemArray[i%m_wChairCount]==NULL)

  0004b	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	0f b7 49 0a	 movzx	 ecx, WORD PTR [ecx+10]
  00056	99		 cdq
  00057	f7 f9		 idiv	 ecx
  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	83 bc 90 90 0c
	00 00 00	 cmp	 DWORD PTR [eax+edx*4+3216], 0
  00064	75 13		 jne	 SHORT $LN5@GetRandNul

; 2294 : 		{
; 2295 : 			return i%m_wChairCount;

  00066	0f b7 45 f4	 movzx	 eax, WORD PTR _i$1[ebp]
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	0f b7 49 0a	 movzx	 ecx, WORD PTR [ecx+10]
  00071	99		 cdq
  00072	f7 f9		 idiv	 ecx
  00074	66 8b c2	 mov	 ax, dx
  00077	eb 07		 jmp	 SHORT $LN1@GetRandNul
$LN5@GetRandNul:

; 2296 : 		}
; 2297 : 	}

  00079	eb af		 jmp	 SHORT $LN2@GetRandNul
$LN3@GetRandNul:

; 2298 : 
; 2299 : 	return INVALID_CHAIR;

  0007b	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
$LN1@GetRandNul:

; 2300 : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetRandNullChairID@CTableFrame@@QAEGXZ ENDP		; CTableFrame::GetRandNullChairID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetNullChairID@CTableFrame@@UAEGXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 2
_this$ = -4						; size = 4
?GetNullChairID@CTableFrame@@UAEGXZ PROC		; CTableFrame::GetNullChairID, COMDAT
; _this$ = ecx

; 2273 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2274 : 	//椅子搜索
; 2275 : 	for (WORD i=0;i<m_wChairCount;i++)

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _i$1[ebp], ax
  00012	eb 0c		 jmp	 SHORT $LN4@GetNullCha
$LN2@GetNullCha:
  00014	66 8b 45 f8	 mov	 ax, WORD PTR _i$1[ebp]
  00018	66 83 c0 01	 add	 ax, 1
  0001c	66 89 45 f8	 mov	 WORD PTR _i$1[ebp], ax
$LN4@GetNullCha:
  00020	0f b7 45 f8	 movzx	 eax, WORD PTR _i$1[ebp]
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0002b	3b c2		 cmp	 eax, edx
  0002d	7d 19		 jge	 SHORT $LN3@GetNullCha

; 2276 : 	{
; 2277 : 		if (m_TableUserItemArray[i]==NULL)

  0002f	0f b7 45 f8	 movzx	 eax, WORD PTR _i$1[ebp]
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 bc 81 90 0c
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+3216], 0
  0003e	75 06		 jne	 SHORT $LN5@GetNullCha

; 2278 : 		{
; 2279 : 			return i;

  00040	66 8b 45 f8	 mov	 ax, WORD PTR _i$1[ebp]
  00044	eb 07		 jmp	 SHORT $LN1@GetNullCha
$LN5@GetNullCha:

; 2280 : 		}
; 2281 : 	}

  00046	eb cc		 jmp	 SHORT $LN2@GetNullCha
$LN3@GetNullCha:

; 2282 : 
; 2283 : 	return INVALID_CHAIR;

  00048	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
$LN1@GetNullCha:

; 2284 : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?GetNullChairID@CTableFrame@@UAEGXZ ENDP		; CTableFrame::GetNullChairID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetDrawCount@CTableFrame@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDrawCount@CTableFrame@@UAEGXZ PROC			; CTableFrame::GetDrawCount, COMDAT
; _this$ = ecx

; 2267 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2268 : 	return (WORD)m_dwPersonalPlayCount;//m_wDrawCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 80 20 10
	00 00		 mov	 ax, WORD PTR [eax+4128]

; 2269 : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?GetDrawCount@CTableFrame@@UAEGXZ ENDP			; CTableFrame::GetDrawCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetCompilation@CTableFrame@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCompilation@CTableFrame@@UAEPBDXZ PROC		; CTableFrame::GetCompilation, COMDAT
; _this$ = ecx

; 335  : 	virtual LPCTSTR GetCompilation(){ return szCompilation; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	b8 00 00 00 00	 mov	 eax, OFFSET ?szCompilation@@3QBDB
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetCompilation@CTableFrame@@UAEPBDXZ ENDP		; CTableFrame::GetCompilation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z
_TEXT	SEGMENT
tv209 = -254						; size = 2
_pIWatchServerUserItem$ = -188				; size = 4
_wEnumIndex$ = -184					; size = 2
_pIServerUserItem$1 = -180				; size = 4
_i$2 = -176						; size = 2
_wSendSize$ = -172					; size = 2
_wHeadSize$ = -168					; size = 2
_UserChat$ = -164					; size = 142
_wChatLength$ = -20					; size = 2
_wDescribeLength$ = -16					; size = 4
_dwTargetUserID$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pITargetServerUserItem$ = 12				; size = 4
_dwChatColor$ = 16					; size = 4
_lpszChatString$ = 20					; size = 4
_lpszDescribeString$ = 24				; size = 4
?SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z PROC ; CTableFrame::SendChatMessage, COMDAT
; _this$ = ecx

; 1323 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1324 : 	//参数校验
; 1325 : 	ASSERT(pIServerUserItem!=NULL);	

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 18		 jne	 SHORT $LN19@SendChatMe
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z@4JA
  00024	83 c0 02	 add	 eax, 2
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN19@SendChatMe
  00036	cc		 int	 3
$LN19@SendChatMe:

; 1326 : 	if (pIServerUserItem==NULL) return false;

  00037	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003b	75 07		 jne	 SHORT $LN8@SendChatMe
  0003d	32 c0		 xor	 al, al
  0003f	e9 dc 02 00 00	 jmp	 $LN1@SendChatMe
$LN8@SendChatMe:

; 1327 : 
; 1328 : 	//获取目标
; 1329 : 	DWORD dwTargetUserID = 0;

  00044	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwTargetUserID$[ebp], 0

; 1330 : 	if (pITargetServerUserItem!=NULL)

  0004b	83 7d 0c 00	 cmp	 DWORD PTR _pITargetServerUserItem$[ebp], 0
  0004f	74 10		 je	 SHORT $LN9@SendChatMe

; 1331 : 	{
; 1332 : 		dwTargetUserID = pITargetServerUserItem->GetUserID();

  00051	8b 45 0c	 mov	 eax, DWORD PTR _pITargetServerUserItem$[ebp]
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	8b 4d 0c	 mov	 ecx, DWORD PTR _pITargetServerUserItem$[ebp]
  00059	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0005c	ff d0		 call	 eax
  0005e	89 45 f4	 mov	 DWORD PTR _dwTargetUserID$[ebp], eax
$LN9@SendChatMe:

; 1333 : 	}
; 1334 : 
; 1335 : 	DWORD wDescribeLength = lstrlen(lpszDescribeString) + 1;

  00061	8b 45 18	 mov	 eax, DWORD PTR _lpszDescribeString$[ebp]
  00064	50		 push	 eax
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0006b	83 c0 01	 add	 eax, 1
  0006e	89 45 f0	 mov	 DWORD PTR _wDescribeLength$[ebp], eax

; 1336 : 	if (wDescribeLength>LEN_USER_CHAT) wDescribeLength=LEN_USER_CHAT;

  00071	81 7d f0 80 00
	00 00		 cmp	 DWORD PTR _wDescribeLength$[ebp], 128 ; 00000080H
  00078	76 07		 jbe	 SHORT $LN10@SendChatMe
  0007a	c7 45 f0 80 00
	00 00		 mov	 DWORD PTR _wDescribeLength$[ebp], 128 ; 00000080H
$LN10@SendChatMe:

; 1337 : 	WORD wChatLength = lstrlen(lpszChatString) + 1;

  00081	8b 45 14	 mov	 eax, DWORD PTR _lpszChatString$[ebp]
  00084	50		 push	 eax
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0008b	83 c0 01	 add	 eax, 1
  0008e	66 89 45 ec	 mov	 WORD PTR _wChatLength$[ebp], ax

; 1338 : 	if (wChatLength>LEN_USER_CHAT) wChatLength=LEN_USER_CHAT;

  00092	0f b7 45 ec	 movzx	 eax, WORD PTR _wChatLength$[ebp]
  00096	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0009b	7e 09		 jle	 SHORT $LN11@SendChatMe
  0009d	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  000a2	66 89 45 ec	 mov	 WORD PTR _wChatLength$[ebp], ax
$LN11@SendChatMe:

; 1339 : 
; 1340 : 	//状态判断
; 1341 : 	if ((CServerRule::IsForfendGameChat(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0L))

  000a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000af	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000b2	52		 push	 edx
  000b3	e8 00 00 00 00	 call	 ?IsForfendGameChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameChat
  000b8	83 c4 04	 add	 esp, 4
  000bb	0f b6 c0	 movzx	 eax, al
  000be	83 f8 01	 cmp	 eax, 1
  000c1	75 31		 jne	 SHORT $LN12@SendChatMe
  000c3	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000c6	8b 10		 mov	 edx, DWORD PTR [eax]
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000cb	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  000d1	ff d0		 call	 eax
  000d3	0f b6 c8	 movzx	 ecx, al
  000d6	85 c9		 test	 ecx, ecx
  000d8	75 1a		 jne	 SHORT $LN12@SendChatMe

; 1342 : 	{
; 1343 : 		lstrcpyn(lpszDescribeString,TEXT("抱歉，当前游戏房间禁止游戏聊天！"),wDescribeLength);

  000da	8b 45 f0	 mov	 eax, DWORD PTR _wDescribeLength$[ebp]
  000dd	50		 push	 eax
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FGILIJGK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?A?D?L?l?$KD@
  000e3	8b 4d 18	 mov	 ecx, DWORD PTR _lpszDescribeString$[ebp]
  000e6	51		 push	 ecx
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1344 : 		return false;

  000ed	32 c0		 xor	 al, al
  000ef	e9 2c 02 00 00	 jmp	 $LN1@SendChatMe
$LN12@SendChatMe:

; 1345 : 	}
; 1346 : 
; 1347 : 	//权限判断
; 1348 : 	if (CUserRight::CanRoomChat(pIServerUserItem->GetUserRight())==false)

  000f4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f7	8b 10		 mov	 edx, DWORD PTR [eax]
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000fc	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  000ff	ff d0		 call	 eax
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?CanRoomChat@CUserRight@@SA_NK@Z ; CUserRight::CanRoomChat
  00107	83 c4 04	 add	 esp, 4
  0010a	0f b6 c8	 movzx	 ecx, al
  0010d	85 c9		 test	 ecx, ecx
  0010f	75 1a		 jne	 SHORT $LN13@SendChatMe

; 1349 : 	{
; 1350 : 		lstrcpyn(lpszDescribeString,TEXT("抱歉，您没有游戏聊天的权限，若需要帮助，请联系游戏客服咨询！"),wDescribeLength);

  00111	8b 45 f0	 mov	 eax, DWORD PTR _wDescribeLength$[ebp]
  00114	50		 push	 eax
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@HGHCIEG@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?S?N?O?$LH?A?D?L?l?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  0011a	8b 4d 18	 mov	 ecx, DWORD PTR _lpszDescribeString$[ebp]
  0011d	51		 push	 ecx
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1351 : 		return true;

  00124	b0 01		 mov	 al, 1
  00126	e9 f5 01 00 00	 jmp	 $LN1@SendChatMe
$LN13@SendChatMe:

; 1352 : 	}
; 1353 : 
; 1354 : 	//构造消息
; 1355 : 	CMD_GF_S_UserChat UserChat;
; 1356 : 	ZeroMemory(&UserChat,sizeof(UserChat));

  0012b	68 8e 00 00 00	 push	 142			; 0000008eH
  00130	6a 00		 push	 0
  00132	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _UserChat$[ebp]
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 _memset
  0013e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1357 : 
; 1358 : 	//字符过滤
; 1359 : 	m_pIMainServiceFrame->SensitiveWordFilter(lpszChatString,UserChat.szChatString,wChatLength);

  00141	0f b7 45 ec	 movzx	 eax, WORD PTR _wChatLength$[ebp]
  00145	50		 push	 eax
  00146	8d 8d 6a ff ff
	ff		 lea	 ecx, DWORD PTR _UserChat$[ebp+14]
  0014c	51		 push	 ecx
  0014d	8b 55 14	 mov	 edx, DWORD PTR _lpszChatString$[ebp]
  00150	52		 push	 edx
  00151	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00154	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0015a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0015d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0015f	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00165	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00168	ff d2		 call	 edx

; 1360 : 
; 1361 : 	//构造数据
; 1362 : 	UserChat.dwChatColor=dwChatColor;

  0016a	8b 45 10	 mov	 eax, DWORD PTR _dwChatColor$[ebp]
  0016d	89 85 5e ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+2], eax

; 1363 : 	UserChat.wChatLength=wChatLength;

  00173	66 8b 45 ec	 mov	 ax, WORD PTR _wChatLength$[ebp]
  00177	66 89 85 5c ff
	ff ff		 mov	 WORD PTR _UserChat$[ebp], ax

; 1364 : 	UserChat.dwTargetUserID=dwTargetUserID;

  0017e	8b 45 f4	 mov	 eax, DWORD PTR _dwTargetUserID$[ebp]
  00181	89 85 66 ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+10], eax

; 1365 : 	UserChat.dwSendUserID=pIServerUserItem->GetUserID();

  00187	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0018a	8b 10		 mov	 edx, DWORD PTR [eax]
  0018c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0018f	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00192	ff d0		 call	 eax
  00194	89 85 62 ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+6], eax

; 1366 : 
; 1367 : 	//发送数据
; 1368 : 	WORD wHeadSize=sizeof(UserChat)-sizeof(UserChat.szChatString);

  0019a	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  0019f	66 89 85 58 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 1369 : 	WORD wSendSize=wHeadSize+UserChat.wChatLength*sizeof(UserChat.szChatString[0]);

  001a6	0f b7 85 58 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  001ad	0f b7 8d 5c ff
	ff ff		 movzx	 ecx, WORD PTR _UserChat$[ebp]
  001b4	03 c1		 add	 eax, ecx
  001b6	66 89 85 54 ff
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], ax

; 1370 : 
; 1371 : 	//游戏用户
; 1372 : 	for (WORD i=0;i<m_wChairCount;i++)

  001bd	33 c0		 xor	 eax, eax
  001bf	66 89 85 50 ff
	ff ff		 mov	 WORD PTR _i$2[ebp], ax
  001c6	eb 12		 jmp	 SHORT $LN4@SendChatMe
$LN2@SendChatMe:
  001c8	66 8b 85 50 ff
	ff ff		 mov	 ax, WORD PTR _i$2[ebp]
  001cf	66 83 c0 01	 add	 ax, 1
  001d3	66 89 85 50 ff
	ff ff		 mov	 WORD PTR _i$2[ebp], ax
$LN4@SendChatMe:
  001da	0f b7 85 50 ff
	ff ff		 movzx	 eax, WORD PTR _i$2[ebp]
  001e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e4	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  001e8	3b c2		 cmp	 eax, edx
  001ea	7d 7e		 jge	 SHORT $LN3@SendChatMe

; 1373 : 	{
; 1374 : 		//获取用户
; 1375 : 		IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  001ec	0f b7 85 50 ff
	ff ff		 movzx	 eax, WORD PTR _i$2[ebp]
  001f3	50		 push	 eax
  001f4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fc	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00202	ff d0		 call	 eax
  00204	89 85 4c ff ff
	ff		 mov	 DWORD PTR _pIServerUserItem$1[ebp], eax

; 1376 : 		if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) continue;

  0020a	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$1[ebp], 0
  00211	74 1d		 je	 SHORT $LN15@SendChatMe
  00213	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  00219	8b 10		 mov	 edx, DWORD PTR [eax]
  0021b	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  00221	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00227	ff d0		 call	 eax
  00229	0f b6 c8	 movzx	 ecx, al
  0022c	85 c9		 test	 ecx, ecx
  0022e	75 02		 jne	 SHORT $LN14@SendChatMe
$LN15@SendChatMe:
  00230	eb 96		 jmp	 SHORT $LN2@SendChatMe
$LN14@SendChatMe:

; 1377 : 
; 1378 : 		m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_USER_CHAT,&UserChat,wSendSize);

  00232	0f b7 85 54 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00239	50		 push	 eax
  0023a	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _UserChat$[ebp]
  00240	51		 push	 ecx
  00241	6a 0a		 push	 10			; 0000000aH
  00243	6a 64		 push	 100			; 00000064H
  00245	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR _pIServerUserItem$1[ebp]
  0024b	52		 push	 edx
  0024c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0024f	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00255	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00258	8b 01		 mov	 eax, DWORD PTR [ecx]
  0025a	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00260	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00263	ff d2		 call	 edx

; 1379 : 	}

  00265	e9 5e ff ff ff	 jmp	 $LN2@SendChatMe
$LN3@SendChatMe:

; 1380 : 
; 1381 : 	//旁观用户
; 1382 : 	WORD wEnumIndex=0;

  0026a	33 c0		 xor	 eax, eax
  0026c	66 89 85 48 ff
	ff ff		 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1383 : 	IServerUserItem * pIWatchServerUserItem=NULL;

  00273	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIWatchServerUserItem$[ebp], 0
$LN7@SendChatMe:

; 1384 : 
; 1385 : 	//枚举用户
; 1386 : 	do
; 1387 : 	{
; 1388 : 		//获取用户
; 1389 : 		pIWatchServerUserItem=EnumLookonUserItem(wEnumIndex++);

  0027d	66 8b 85 48 ff
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00284	66 89 85 02 ff
	ff ff		 mov	 WORD PTR tv209[ebp], ax
  0028b	0f b7 8d 02 ff
	ff ff		 movzx	 ecx, WORD PTR tv209[ebp]
  00292	51		 push	 ecx
  00293	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00296	8b 02		 mov	 eax, DWORD PTR [edx]
  00298	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  002a1	ff d2		 call	 edx
  002a3	89 85 44 ff ff
	ff		 mov	 DWORD PTR _pIWatchServerUserItem$[ebp], eax
  002a9	66 8b 85 48 ff
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  002b0	66 83 c0 01	 add	 ax, 1
  002b4	66 89 85 48 ff
	ff ff		 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1390 : 		if (pIWatchServerUserItem==NULL) break;

  002bb	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _pIWatchServerUserItem$[ebp], 0
  002c2	75 02		 jne	 SHORT $LN16@SendChatMe
  002c4	eb 58		 jmp	 SHORT $LN6@SendChatMe
$LN16@SendChatMe:

; 1391 : 
; 1392 : 		//发送数据
; 1393 : 		if (pIServerUserItem->IsClientReady()==true)

  002c6	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002c9	8b 10		 mov	 edx, DWORD PTR [eax]
  002cb	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002ce	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  002d4	ff d0		 call	 eax
  002d6	0f b6 c8	 movzx	 ecx, al
  002d9	83 f9 01	 cmp	 ecx, 1
  002dc	75 33		 jne	 SHORT $LN5@SendChatMe

; 1394 : 		{
; 1395 : 			m_pIMainServiceFrame->SendData(pIWatchServerUserItem,MDM_GF_FRAME,SUB_GF_USER_CHAT,&UserChat,wSendSize);

  002de	0f b7 85 54 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  002e5	50		 push	 eax
  002e6	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _UserChat$[ebp]
  002ec	51		 push	 ecx
  002ed	6a 0a		 push	 10			; 0000000aH
  002ef	6a 64		 push	 100			; 00000064H
  002f1	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _pIWatchServerUserItem$[ebp]
  002f7	52		 push	 edx
  002f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fb	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00301	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00304	8b 01		 mov	 eax, DWORD PTR [ecx]
  00306	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  0030c	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0030f	ff d2		 call	 edx
$LN5@SendChatMe:

; 1396 : 		}
; 1397 : 	} while (true);

  00311	b8 01 00 00 00	 mov	 eax, 1
  00316	85 c0		 test	 eax, eax
  00318	0f 85 5f ff ff
	ff		 jne	 $LN7@SendChatMe
$LN6@SendChatMe:

; 1398 : 
; 1399 : 	return true;

  0031e	b0 01		 mov	 al, 1
$LN1@SendChatMe:

; 1400 : }

  00320	5f		 pop	 edi
  00321	5e		 pop	 esi
  00322	5b		 pop	 ebx
  00323	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00326	33 cd		 xor	 ecx, ebp
  00328	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032d	8b e5		 mov	 esp, ebp
  0032f	5d		 pop	 ebp
  00330	c2 14 00	 ret	 20			; 00000014H
?SendChatMessage@CTableFrame@@UAE_NPAUIServerUserItem@@0KPBDPAD@Z ENDP ; CTableFrame::SendChatMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z PROC ; CTableFrame::ImitateGameOption, COMDAT
; _this$ = ecx

; 1298 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1299 : 	//参数校验
; 1300 : 	ASSERT(pIServerUserItem!=NULL);	

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN8@ImitateGam
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN8@ImitateGam
  00029	cc		 int	 3
$LN8@ImitateGam:

; 1301 : 	if (pIServerUserItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0002e	75 07		 jne	 SHORT $LN2@ImitateGam
  00030	32 c0		 xor	 al, al
  00032	e9 9c 00 00 00	 jmp	 $LN1@ImitateGam
$LN2@ImitateGam:

; 1302 : 
; 1303 : 	//状态判断
; 1304 : 	if (m_bGameStarted==true) return true;

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  0003e	83 f9 01	 cmp	 ecx, 1
  00041	75 07		 jne	 SHORT $LN3@ImitateGam
  00043	b0 01		 mov	 al, 1
  00045	e9 89 00 00 00	 jmp	 $LN1@ImitateGam
$LN3@ImitateGam:

; 1305 : 	if (pIServerUserItem->GetUserMatchStatus()!=MUS_PLAYING) return false;

  0004a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0004d	8b 10		 mov	 edx, DWORD PTR [eax]
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00052	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  00058	ff d0		 call	 eax
  0005a	0f b6 c8	 movzx	 ecx, al
  0005d	83 f9 04	 cmp	 ecx, 4
  00060	74 04		 je	 SHORT $LN4@ImitateGam
  00062	32 c0		 xor	 al, al
  00064	eb 6d		 jmp	 SHORT $LN1@ImitateGam
$LN4@ImitateGam:

; 1306 : 
; 1307 : 	//类型判断
; 1308 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0) return false;	

  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0006f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00073	83 e2 04	 and	 edx, 4
  00076	75 04		 jne	 SHORT $LN5@ImitateGam
  00078	32 c0		 xor	 al, al
  0007a	eb 57		 jmp	 SHORT $LN1@ImitateGam
$LN5@ImitateGam:

; 1309 : 	
; 1310 : 	//设置状态
; 1311 : 	pIServerUserItem->SetClientReady(true);

  0007c	6a 01		 push	 1
  0007e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00081	8b 10		 mov	 edx, DWORD PTR [eax]
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00086	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  0008c	ff d0		 call	 eax

; 1312 : 
; 1313 : 	//开始判断
; 1314 : 	if ((pIServerUserItem->GetUserStatus()==US_READY)&&(EfficacyStartGame(pIServerUserItem->GetChairID())==true))

  0008e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00091	8b 10		 mov	 edx, DWORD PTR [eax]
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00096	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00099	ff d0		 call	 eax
  0009b	0f b6 c8	 movzx	 ecx, al
  0009e	83 f9 03	 cmp	 ecx, 3
  000a1	75 2e		 jne	 SHORT $LN6@ImitateGam
  000a3	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  000ae	ff d0		 call	 eax
  000b0	0f b7 c8	 movzx	 ecx, ax
  000b3	51		 push	 ecx
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	e8 00 00 00 00	 call	 ?EfficacyStartGame@CTableFrame@@QAE_NG@Z ; CTableFrame::EfficacyStartGame
  000bc	0f b6 d0	 movzx	 edx, al
  000bf	83 fa 01	 cmp	 edx, 1
  000c2	75 0d		 jne	 SHORT $LN6@ImitateGam

; 1315 : 	{
; 1316 : 		StartGame(); 

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 10		 mov	 edx, DWORD PTR [eax]
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000cf	ff d0		 call	 eax
$LN6@ImitateGam:

; 1317 : 	}
; 1318 : 
; 1319 : 	return true;

  000d1	b0 01		 mov	 al, 1
$LN1@ImitateGam:

; 1320 : }

  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
?ImitateGameOption@CTableFrame@@UAE_NPAUIServerUserItem@@@Z ENDP ; CTableFrame::ImitateGameOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetTableFrameHook@CTableFrame@@UAEPAUIUnknownEx@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTableFrameHook@CTableFrame@@UAEPAUIUnknownEx@@XZ PROC ; CTableFrame::GetTableFrameHook, COMDAT
; _this$ = ecx

; 325  : 	virtual IUnknownEx * GetTableFrameHook(){ return m_pITableFrameHook; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 08 10 00
	00		 mov	 eax, DWORD PTR [eax+4104]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetTableFrameHook@CTableFrame@@UAEPAUIUnknownEx@@XZ ENDP ; CTableFrame::GetTableFrameHook
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
tv150 = -72						; size = 4
tv136 = -72						; size = 4
tv95 = -72						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z PROC ; CTableFrame::SetTableFrameHook, COMDAT
; _this$ = ecx

; 1274 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 	ASSERT(pIUnknownEx!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00010	75 18		 jne	 SHORT $LN7@SetTableFr
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z@4JA
  00017	83 c0 01	 add	 eax, 1
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN7@SetTableFr
  00029	cc		 int	 3
$LN7@SetTableFr:

; 1276 : 	if (pIUnknownEx==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  0002e	75 07		 jne	 SHORT $LN2@SetTableFr
  00030	32 c0		 xor	 al, al
  00032	e9 f0 00 00 00	 jmp	 $LN1@SetTableFr
$LN2@SetTableFr:

; 1277 : 
; 1278 : 	//类型判断
; 1279 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0 && (m_pGameServiceOption->wServerType&GAME_GENRE_PERSONAL)==0 ) return false;

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00040	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00044	83 e2 04	 and	 edx, 4
  00047	75 19		 jne	 SHORT $LN3@SetTableFr
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00052	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00056	83 e2 10	 and	 edx, 16			; 00000010H
  00059	75 07		 jne	 SHORT $LN3@SetTableFr
  0005b	32 c0		 xor	 al, al
  0005d	e9 c5 00 00 00	 jmp	 $LN1@SetTableFr
$LN3@SetTableFr:

; 1280 : 
; 1281 : 	//查询接口
; 1282 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)!=0)

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0006b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0006f	83 e2 04	 and	 edx, 4
  00072	74 6a		 je	 SHORT $LN4@SetTableFr

; 1283 : 	{
; 1284 : 		m_pITableFrameHook=QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx,ITableFrameHook);

  00074	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00078	75 09		 jne	 SHORT $LN8@SetTableFr
  0007a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
  00081	eb 1a		 jmp	 SHORT $LN9@SetTableFr
$LN8@SetTableFr:
  00083	68 00 01 01 06	 push	 100729088		; 06010100H
  00088	68 00 00 00 00	 push	 OFFSET ?IID_ITableFrameHook@@3U_GUID@@B
  0008d	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  00090	8b 10		 mov	 edx, DWORD PTR [eax]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00095	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00098	ff d0		 call	 eax
  0009a	89 45 b8	 mov	 DWORD PTR tv95[ebp], eax
$LN9@SetTableFr:
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	8b 55 b8	 mov	 edx, DWORD PTR tv95[ebp]
  000a3	89 91 08 10 00
	00		 mov	 DWORD PTR [ecx+4104], edx

; 1285 : 		m_pIMatchTableAction=QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx,ITableUserAction);

  000a9	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  000ad	75 09		 jne	 SHORT $LN10@SetTableFr
  000af	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
  000b6	eb 1a		 jmp	 SHORT $LN11@SetTableFr
$LN10@SetTableFr:
  000b8	68 00 01 01 06	 push	 100729088		; 06010100H
  000bd	68 00 00 00 00	 push	 OFFSET ?IID_ITableUserAction@@3U_GUID@@B
  000c2	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  000c5	8b 10		 mov	 edx, DWORD PTR [eax]
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  000ca	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000cd	ff d0		 call	 eax
  000cf	89 45 b8	 mov	 DWORD PTR tv136[ebp], eax
$LN11@SetTableFr:
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 55 b8	 mov	 edx, DWORD PTR tv136[ebp]
  000d8	89 91 0c 10 00
	00		 mov	 DWORD PTR [ecx+4108], edx
$LN4@SetTableFr:

; 1286 : 	}
; 1287 : 
; 1288 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_PERSONAL)!=0)

  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000e7	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000eb	83 e2 10	 and	 edx, 16			; 00000010H
  000ee	74 35		 je	 SHORT $LN5@SetTableFr

; 1289 : 	{
; 1290 : 		m_pIPersonaTableFrameHook=QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx,IPersonalTableFrameHook);

  000f0	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  000f4	75 09		 jne	 SHORT $LN12@SetTableFr
  000f6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
  000fd	eb 1a		 jmp	 SHORT $LN13@SetTableFr
$LN12@SetTableFr:
  000ff	68 00 01 01 06	 push	 100729088		; 06010100H
  00104	68 00 00 00 00	 push	 OFFSET ?IID_IPersonalTableFrameHook@@3U_GUID@@B
  00109	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00111	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00114	ff d0		 call	 eax
  00116	89 45 b8	 mov	 DWORD PTR tv150[ebp], eax
$LN13@SetTableFr:
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	8b 55 b8	 mov	 edx, DWORD PTR tv150[ebp]
  0011f	89 91 10 10 00
	00		 mov	 DWORD PTR [ecx+4112], edx
$LN5@SetTableFr:

; 1291 : 	}
; 1292 : 
; 1293 : 	return true;

  00125	b0 01		 mov	 al, 1
$LN1@SetTableFr:

; 1294 : }

  00127	5f		 pop	 edi
  00128	5e		 pop	 esi
  00129	5b		 pop	 ebx
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 04 00	 ret	 4
?SetTableFrameHook@CTableFrame@@UAE_NPAUIUnknownEx@@@Z ENDP ; CTableFrame::SetTableFrameHook
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z PROC ; CTableFrame::SendGameScene, COMDAT
; _this$ = ecx

; 1260 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1261 : 	//用户效验
; 1262 : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->IsClientReady()==true));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	74 18		 je	 SHORT $LN5@SendGameSc
  00012	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0001a	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00020	ff d0		 call	 eax
  00022	0f b6 c8	 movzx	 ecx, al
  00025	83 f9 01	 cmp	 ecx, 1
  00028	74 19		 je	 SHORT $LN6@SendGameSc
$LN5@SendGameSc:
  0002a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z@4JA
  00030	83 c2 02	 add	 edx, 2
  00033	52		 push	 edx
  00034	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00039	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003e	85 c0		 test	 eax, eax
  00040	74 01		 je	 SHORT $LN6@SendGameSc
  00042	cc		 int	 3
$LN6@SendGameSc:

; 1263 : 	if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) return false;

  00043	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00047	74 17		 je	 SHORT $LN3@SendGameSc
  00049	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00051	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00057	ff d0		 call	 eax
  00059	0f b6 c8	 movzx	 ecx, al
  0005c	85 c9		 test	 ecx, ecx
  0005e	75 04		 jne	 SHORT $LN2@SendGameSc
$LN3@SendGameSc:
  00060	32 c0		 xor	 al, al
  00062	eb 51		 jmp	 SHORT $LN1@SendGameSc
$LN2@SendGameSc:

; 1264 : 
; 1265 : 	//发送场景
; 1266 : 	ASSERT(m_pIMainServiceFrame!=NULL);

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	83 b8 cc 0f 00
	00 00		 cmp	 DWORD PTR [eax+4044], 0
  0006e	75 19		 jne	 SHORT $LN7@SendGameSc
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z@4JA
  00076	83 c1 06	 add	 ecx, 6
  00079	51		 push	 ecx
  0007a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0007f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00084	85 c0		 test	 eax, eax
  00086	74 01		 je	 SHORT $LN7@SendGameSc
  00088	cc		 int	 3
$LN7@SendGameSc:

; 1267 : 	m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_GAME_SCENE,pData,wDataSize);

  00089	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00091	51		 push	 ecx
  00092	6a 65		 push	 101			; 00000065H
  00094	6a 64		 push	 100			; 00000064H
  00096	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00099	52		 push	 edx
  0009a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a8	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  000ae	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000b1	ff d2		 call	 edx

; 1268 : 
; 1269 : 	return true;

  000b3	b0 01		 mov	 al, 1
$LN1@SendGameSc:

; 1270 : }

  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 0c 00	 ret	 12			; 0000000cH
?SendGameScene@CTableFrame@@UAE_NPAUIServerUserItem@@PAXG@Z ENDP ; CTableFrame::SendGameScene
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z
_TEXT	SEGMENT
tv1313 = -1380						; size = 8
tv1389 = -1376						; size = 8
tv788 = -1376						; size = 8
tv1310 = -1372						; size = 8
tv429 = -1372						; size = 4
tv1758 = -1368						; size = 4
tv1659 = -1368						; size = 4
tv1388 = -1368						; size = 4
tv1257 = -1368						; size = 4
tv430 = -1368						; size = 4
_bTableLocked$1 = -1169					; size = 1
_lScore$2 = -1168					; size = 8
_lMinScore$3 = -1160					; size = 8
_bTreasureDB$4 = -1149					; size = 1
_personalRoomMessage$5 = -1148				; size = 261
_RequestResult$6 = -884					; size = 129
_i$7 = -752						; size = 4
_bCheckPass$8 = -746					; size = 1
_bDynamicJoin$ = -745					; size = 1
_pAndroidParameter$9 = -744				; size = 4
_pIAndroidUserItem$10 = -740				; size = 4
_pBindParameter$11 = -736				; size = 4
_pIUserItem$12 = -732					; size = 4
_i$13 = -728						; size = 2
_pAttemperEngineSink$14 = -724				; size = 4
_i$15 = -720						; size = 4
_bUserExist$16 = -713					; size = 1
_pITableUserItem$17 = -712				; size = 4
_i$18 = -708						; size = 4
_bIsExsit$ = -701					; size = 1
_personalRoomMessage$19 = -700				; size = 261
_personalRoomMessage$20 = -436				; size = 261
_lLessEnterScore$ = -172				; size = 8
_lMinTableScore$ = -164					; size = 8
_lUserScore$ = -156					; size = 8
_szDescribe$21 = -148					; size = 128
_pITableUserItem$ = -20					; size = 4
_pUserRule$ = -16					; size = 4
_pUserInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wChairID$ = 8						; size = 2
_pIServerUserItem$ = 12					; size = 4
_lpszPassword$ = 16					; size = 4
_dwRoomPwd$ = 20					; size = 4
?PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z PROC ; CTableFrame::PerformSitDownAction, COMDAT
; _this$ = ecx

; 2889 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 64 05 00
	00		 sub	 esp, 1380		; 00000564H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2890 : 	
; 2891 : 	//// 如果约战房已经结束
; 2892 : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL  &&( m_dwTableOwnerID == 0 && m_dwPersonalPlayCount > 0   || m_bIsEnfoceDissum))

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00022	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00026	83 fa 10	 cmp	 edx, 16			; 00000010H
  00029	75 40		 jne	 SHORT $LN14@PerformSit
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 b8 40 07 00
	00 00		 cmp	 DWORD PTR [eax+1856], 0
  00035	75 0c		 jne	 SHORT $LN16@PerformSit
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00041	77 0e		 ja	 SHORT $LN15@PerformSit
$LN16@PerformSit:
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	0f b6 88 9b 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4507]
  0004d	85 c9		 test	 ecx, ecx
  0004f	74 1a		 je	 SHORT $LN14@PerformSit
$LN15@PerformSit:

; 2893 : 	{
; 2894 : 		//发送信息
; 2895 : 		SendRequestFailure(pIServerUserItem,TEXT("约战房间已经解散1！"),REQUEST_FAILURE_NORMAL);

  00051	6a 00		 push	 0
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NAFGAAOB@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC1?$KD?$KB@
  00058	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2896 : 		return false;

  00064	32 c0		 xor	 al, al
  00066	e9 d9 12 00 00	 jmp	 $LN1@PerformSit
$LN14@PerformSit:

; 2897 : 	}
; 2898 : 	//房间解散
; 2899 : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && (!m_bPersonalLock))

  0006b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00074	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00078	83 fa 10	 cmp	 edx, 16			; 00000010H
  0007b	75 28		 jne	 SHORT $LN17@PerformSit
  0007d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00080	0f b6 88 9a 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4506]
  00087	85 c9		 test	 ecx, ecx
  00089	75 1a		 jne	 SHORT $LN17@PerformSit

; 2900 : 	{
; 2901 : 		//发送信息
; 2902 : 		SendRequestFailure(pIServerUserItem, TEXT("约战房间已经解散2！"), REQUEST_FAILURE_NORMAL);

  0008b	6a 00		 push	 0
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MCODKPAP@?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LN?b?I?$KC2?$KD?$KB@
  00092	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00095	50		 push	 eax
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2903 : 		return false;

  0009e	32 c0		 xor	 al, al
  000a0	e9 9f 12 00 00	 jmp	 $LN1@PerformSit
$LN17@PerformSit:

; 2904 : 	}
; 2905 : 	//效验参数
; 2906 : 	ASSERT((pIServerUserItem!=NULL)&&(wChairID<m_wChairCount));

  000a5	83 7d 0c 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a9	74 0f		 je	 SHORT $LN81@PerformSit
  000ab	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  000b6	3b c2		 cmp	 eax, edx
  000b8	7c 18		 jl	 SHORT $LN82@PerformSit
$LN81@PerformSit:
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z@4JA
  000bf	83 c0 11	 add	 eax, 17			; 00000011H
  000c2	50		 push	 eax
  000c3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000c8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000cd	85 c0		 test	 eax, eax
  000cf	74 01		 je	 SHORT $LN82@PerformSit
  000d1	cc		 int	 3
$LN82@PerformSit:

; 2907 : 	ASSERT((pIServerUserItem->GetTableID()==INVALID_TABLE)&&(pIServerUserItem->GetChairID()==INVALID_CHAIR));

  000d2	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d5	8b 10		 mov	 edx, DWORD PTR [eax]
  000d7	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000da	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  000dd	ff d0		 call	 eax
  000df	0f b7 c8	 movzx	 ecx, ax
  000e2	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  000e8	75 17		 jne	 SHORT $LN83@PerformSit
  000ea	8b 55 0c	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000ed	8b 02		 mov	 eax, DWORD PTR [edx]
  000ef	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f2	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  000f5	ff d2		 call	 edx
  000f7	0f b7 c0	 movzx	 eax, ax
  000fa	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  000ff	74 19		 je	 SHORT $LN84@PerformSit
$LN83@PerformSit:
  00101	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z@4JA
  00107	83 c1 12	 add	 ecx, 18			; 00000012H
  0010a	51		 push	 ecx
  0010b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00110	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00115	85 c0		 test	 eax, eax
  00117	74 01		 je	 SHORT $LN84@PerformSit
  00119	cc		 int	 3
$LN84@PerformSit:

; 2908 : 
; 2909 : 	//变量定义
; 2910 : 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  0011a	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0011d	8b 10		 mov	 edx, DWORD PTR [eax]
  0011f	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00122	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00125	ff d0		 call	 eax
  00127	89 45 f4	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 2911 : 	tagUserRule * pUserRule=pIServerUserItem->GetUserRule();

  0012a	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0012d	8b 10		 mov	 edx, DWORD PTR [eax]
  0012f	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00132	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00135	ff d0		 call	 eax
  00137	89 45 f0	 mov	 DWORD PTR _pUserRule$[ebp], eax

; 2912 : 	IServerUserItem * pITableUserItem=GetTableUserItem(wChairID);

  0013a	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0013e	50		 push	 eax
  0013f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	8b 11		 mov	 edx, DWORD PTR [ecx]
  00144	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0014d	ff d0		 call	 eax
  0014f	89 45 ec	 mov	 DWORD PTR _pITableUserItem$[ebp], eax

; 2913 : 
; 2914 : 	//椅子判断
; 2915 : 	if (pITableUserItem != NULL)

  00152	83 7d ec 00	 cmp	 DWORD PTR _pITableUserItem$[ebp], 0
  00156	0f 84 84 00 00
	00		 je	 $LN18@PerformSit

; 2916 : 	{
; 2917 : 		//防作弊
; 2918 : 		if (CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)) return false;

  0015c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00165	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00168	52		 push	 edx
  00169	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0016e	83 c4 04	 add	 esp, 4
  00171	0f b6 c0	 movzx	 eax, al
  00174	85 c0		 test	 eax, eax
  00176	74 07		 je	 SHORT $LN19@PerformSit
  00178	32 c0		 xor	 al, al
  0017a	e9 c5 11 00 00	 jmp	 $LN1@PerformSit
$LN19@PerformSit:

; 2919 : 
; 2920 : 		//构造信息
; 2921 : 		TCHAR szDescribe[128] = TEXT("");

  0017f	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00184	88 85 6c ff ff
	ff		 mov	 BYTE PTR _szDescribe$21[ebp], al
  0018a	6a 7f		 push	 127			; 0000007fH
  0018c	6a 00		 push	 0
  0018e	8d 85 6d ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$21[ebp+1]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 _memset
  0019a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2922 : 		_sntprintf_s(szDescribe, CountArray(szDescribe), TEXT("椅子已经被 [ %s ] 捷足先登了，下次动作要快点了！"), pITableUserItem->GetNickName());

  0019d	8b 45 ec	 mov	 eax, DWORD PTR _pITableUserItem$[ebp]
  001a0	8b 10		 mov	 edx, DWORD PTR [eax]
  001a2	8b 4d ec	 mov	 ecx, DWORD PTR _pITableUserItem$[ebp]
  001a5	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  001a8	ff d0		 call	 eax
  001aa	50		 push	 eax
  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@MOHGBBK@?R?N?W?S?R?Q?$LO?$KN?$LB?$LL?5?$FL?5?$CFs?5?$FN?5?$LN?$NN?W?c?O?H?$LF?G?A?K?$KD?$KM?O@
  001b0	68 80 00 00 00	 push	 128			; 00000080H
  001b5	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$21[ebp]
  001bb	51		 push	 ecx
  001bc	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001c1	83 c4 10	 add	 esp, 16			; 00000010H

; 2923 : 
; 2924 : 		//发送信息
; 2925 : 		SendRequestFailure(pIServerUserItem, szDescribe, REQUEST_FAILURE_NORMAL);

  001c4	6a 00		 push	 0
  001c6	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$21[ebp]
  001cc	50		 push	 eax
  001cd	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001d0	51		 push	 ecx
  001d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d4	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2926 : 
; 2927 : 		return false;

  001d9	32 c0		 xor	 al, al
  001db	e9 64 11 00 00	 jmp	 $LN1@PerformSit
$LN18@PerformSit:

; 2928 : 	}
; 2929 : 
; 2930 : 	//积分变量
; 2931 : 	SCORE lUserScore=pIServerUserItem->GetUserScore();

  001e0	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001e3	8b 10		 mov	 edx, DWORD PTR [eax]
  001e5	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e8	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  001ee	ff d0		 call	 eax
  001f0	89 85 64 ff ff
	ff		 mov	 DWORD PTR _lUserScore$[ebp], eax
  001f6	89 95 68 ff ff
	ff		 mov	 DWORD PTR _lUserScore$[ebp+4], edx

; 2932 : 	SCORE lMinTableScore=m_pGameServiceOption->lMinTableScore;

  001fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ff	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00205	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00208	89 95 5c ff ff
	ff		 mov	 DWORD PTR _lMinTableScore$[ebp], edx
  0020e	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00211	89 85 60 ff ff
	ff		 mov	 DWORD PTR _lMinTableScore$[ebp+4], eax

; 2933 : 	SCORE lLessEnterScore=m_pITableFrameSink->QueryLessEnterScore(wChairID,pIServerUserItem);

  00217	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0021a	50		 push	 eax
  0021b	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  0021f	51		 push	 ecx
  00220	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00223	8b 82 c8 0f 00
	00		 mov	 eax, DWORD PTR [edx+4040]
  00229	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	8b 10		 mov	 edx, DWORD PTR [eax]
  0022e	8b 89 c8 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4040]
  00234	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00237	ff d0		 call	 eax
  00239	89 85 54 ff ff
	ff		 mov	 DWORD PTR _lLessEnterScore$[ebp], eax
  0023f	89 95 58 ff ff
	ff		 mov	 DWORD PTR _lLessEnterScore$[ebp+4], edx

; 2934 : 
; 2935 : 	if (m_pGameServiceOption->lCellScore < 1)

  00245	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00248	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0024e	83 79 08 01	 cmp	 DWORD PTR [ecx+8], 1
  00252	7d 10		 jge	 SHORT $LN20@PerformSit

; 2936 : 	{
; 2937 : 		m_pGameServiceOption->lCellScore  = 1;

  00254	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00257	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0025d	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
$LN20@PerformSit:

; 2938 : 	}
; 2939 : 	if (((m_pGameServiceOption->lMinTableScore!=0L) && pIServerUserItem->GetUserScore()<m_pGameServiceOption->lMinTableScore * m_lCellScore/m_pGameServiceOption->lCellScore) && ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0))

  00264	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00267	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0026d	89 8d a8 fa ff
	ff		 mov	 DWORD PTR tv1257[ebp], ecx
  00273	8b 95 a8 fa ff
	ff		 mov	 edx, DWORD PTR tv1257[ebp]
  00279	8b 85 a8 fa ff
	ff		 mov	 eax, DWORD PTR tv1257[ebp]
  0027f	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00282	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  00285	0f 84 5f 01 00
	00		 je	 $LN21@PerformSit
  0028b	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0028e	8b 10		 mov	 edx, DWORD PTR [eax]
  00290	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00293	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00299	ff d0		 call	 eax
  0029b	8b f0		 mov	 esi, eax
  0029d	8b fa		 mov	 edi, edx
  0029f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a2	8b 89 f0 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4080]
  002a8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002ab	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  002b1	99		 cdq
  002b2	52		 push	 edx
  002b3	50		 push	 eax
  002b4	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  002b7	50		 push	 eax
  002b8	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  002bb	51		 push	 ecx
  002bc	e8 00 00 00 00	 call	 __allmul
  002c1	8b c8		 mov	 ecx, eax
  002c3	8b da		 mov	 ebx, edx
  002c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002c8	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  002ce	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002d1	99		 cdq
  002d2	52		 push	 edx
  002d3	50		 push	 eax
  002d4	53		 push	 ebx
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 __alldiv
  002db	89 b5 a4 fa ff
	ff		 mov	 DWORD PTR tv1310[ebp], esi
  002e1	89 bd a8 fa ff
	ff		 mov	 DWORD PTR tv1310[ebp+4], edi
  002e7	89 85 9c fa ff
	ff		 mov	 DWORD PTR tv1313[ebp], eax
  002ed	89 95 a0 fa ff
	ff		 mov	 DWORD PTR tv1313[ebp+4], edx
  002f3	8b 8d a8 fa ff
	ff		 mov	 ecx, DWORD PTR tv1310[ebp+4]
  002f9	3b 8d a0 fa ff
	ff		 cmp	 ecx, DWORD PTR tv1313[ebp+4]
  002ff	0f 8f e5 00 00
	00		 jg	 $LN21@PerformSit
  00305	7c 12		 jl	 SHORT $LN89@PerformSit
  00307	8b 95 a4 fa ff
	ff		 mov	 edx, DWORD PTR tv1310[ebp]
  0030d	3b 95 9c fa ff
	ff		 cmp	 edx, DWORD PTR tv1313[ebp]
  00313	0f 83 d1 00 00
	00		 jae	 $LN21@PerformSit
$LN89@PerformSit:
  00319	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0031c	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00322	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00326	83 e2 10	 and	 edx, 16			; 00000010H
  00329	0f 84 bb 00 00
	00		 je	 $LN21@PerformSit

; 2940 : 	{
; 2941 : 		//构造提示
; 2942 : 		Personal_Room_Message personalRoomMessage;
; 2943 : 		if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  0032f	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00334	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00337	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0033d	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00343	51		 push	 ecx
  00344	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  0034a	85 c0		 test	 eax, eax
  0034c	0f 85 98 00 00
	00		 jne	 $LN21@PerformSit

; 2944 : 		{
; 2945 : 			_sntprintf(personalRoomMessage.szMessage,CountArray(personalRoomMessage.szMessage),TEXT("您的游戏币少于 ") SCORE_STRING TEXT("，不能继续游戏！"),m_pGameServiceOption->lMinTableScore* m_lCellScore/m_pGameServiceOption->lCellScore);

  00352	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00355	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0035b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0035e	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  00364	99		 cdq
  00365	52		 push	 edx
  00366	50		 push	 eax
  00367	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0036a	50		 push	 eax
  0036b	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 __allmul
  00374	8b c8		 mov	 ecx, eax
  00376	8b f2		 mov	 esi, edx
  00378	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0037b	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  00381	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00384	99		 cdq
  00385	52		 push	 edx
  00386	50		 push	 eax
  00387	56		 push	 esi
  00388	51		 push	 ecx
  00389	e8 00 00 00 00	 call	 __alldiv
  0038e	52		 push	 edx
  0038f	50		 push	 eax
  00390	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@
  00395	68 04 01 00 00	 push	 260			; 00000104H
  0039a	8d 8d 4c fe ff
	ff		 lea	 ecx, DWORD PTR _personalRoomMessage$20[ebp]
  003a0	51		 push	 ecx
  003a1	e8 00 00 00 00	 call	 __snprintf
  003a6	83 c4 14	 add	 esp, 20			; 00000014H

; 2946 : 			personalRoomMessage.cbMessageType = 0;

  003a9	c6 85 50 ff ff
	ff 00		 mov	 BYTE PTR _personalRoomMessage$20[ebp+260], 0

; 2947 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_PERSONAL_TABLE,SUB_GF_PERSONAL_MESSAGE,&personalRoomMessage,sizeof(personalRoomMessage));

  003b0	68 05 01 00 00	 push	 261			; 00000105H
  003b5	8d 85 4c fe ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$20[ebp]
  003bb	50		 push	 eax
  003bc	68 f5 01 00 00	 push	 501			; 000001f5H
  003c1	68 d2 00 00 00	 push	 210			; 000000d2H
  003c6	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003c9	51		 push	 ecx
  003ca	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003cd	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  003d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003d6	8b 10		 mov	 edx, DWORD PTR [eax]
  003d8	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  003de	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  003e1	ff d0		 call	 eax

; 2948 : 			return false;

  003e3	32 c0		 xor	 al, al
  003e5	e9 5a 0f 00 00	 jmp	 $LN1@PerformSit
$LN21@PerformSit:

; 2949 : 
; 2950 : 		}
; 2951 : 
; 2952 : 	}
; 2953 : 
; 2954 : 	//如果是约战房，且是AA制模式
; 2955 : 	if(((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0) && m_cbPayMode != 0)

  003ea	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ed	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  003f3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  003f7	83 e2 10	 and	 edx, 16			; 00000010H
  003fa	0f 84 ef 00 00
	00		 je	 $LN23@PerformSit
  00400	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00403	0f b6 88 d1 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18129]
  0040a	85 c9		 test	 ecx, ecx
  0040c	0f 84 dd 00 00
	00		 je	 $LN23@PerformSit

; 2956 : 	{
; 2957 : 		if(m_PersonalTableParameter.wJoinGamePeopleCount != 0 &&  pUserInfo->bConsumptionType.lDiamond < m_lPayRoomCardCount/m_PersonalTableParameter.wJoinGamePeopleCount)

  00412	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00415	0f b7 88 75 44
	00 00		 movzx	 ecx, WORD PTR [eax+17525]
  0041c	85 c9		 test	 ecx, ecx
  0041e	0f 84 cb 00 00
	00		 je	 $LN23@PerformSit
  00424	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00427	0f b7 88 75 44
	00 00		 movzx	 ecx, WORD PTR [eax+17525]
  0042e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00431	8b 82 d8 46 00
	00		 mov	 eax, DWORD PTR [edx+18136]
  00437	99		 cdq
  00438	f7 f9		 idiv	 ecx
  0043a	99		 cdq
  0043b	8b 4d f4	 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0043e	89 8d a8 fa ff
	ff		 mov	 DWORD PTR tv1388[ebp], ecx
  00444	89 85 a0 fa ff
	ff		 mov	 DWORD PTR tv1389[ebp], eax
  0044a	89 95 a4 fa ff
	ff		 mov	 DWORD PTR tv1389[ebp+4], edx
  00450	8b 95 a8 fa ff
	ff		 mov	 edx, DWORD PTR tv1388[ebp]
  00456	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  0045c	3b 85 a4 fa ff
	ff		 cmp	 eax, DWORD PTR tv1389[ebp+4]
  00462	0f 8f 87 00 00
	00		 jg	 $LN23@PerformSit
  00468	7c 14		 jl	 SHORT $LN90@PerformSit
  0046a	8b 8d a8 fa ff
	ff		 mov	 ecx, DWORD PTR tv1388[ebp]
  00470	8b 91 c0 00 00
	00		 mov	 edx, DWORD PTR [ecx+192]
  00476	3b 95 a0 fa ff
	ff		 cmp	 edx, DWORD PTR tv1389[ebp]
  0047c	73 71		 jae	 SHORT $LN23@PerformSit
$LN90@PerformSit:

; 2958 : 		{
; 2959 : 			Personal_Room_Message personalRoomMessage;
; 2960 : 			_sntprintf_s(personalRoomMessage.szMessage,CountArray(personalRoomMessage.szMessage),TEXT("您的钻石数量少于 ") SCORE_STRING TEXT("，不能继续游戏！"),m_lPayRoomCardCount/m_PersonalTableParameter.wJoinGamePeopleCount);

  0047e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00481	0f b7 88 75 44
	00 00		 movzx	 ecx, WORD PTR [eax+17525]
  00488	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0048b	8b 82 d8 46 00
	00		 mov	 eax, DWORD PTR [edx+18136]
  00491	99		 cdq
  00492	f7 f9		 idiv	 ecx
  00494	50		 push	 eax
  00495	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@KFMNDNLD@?D?z?$LF?D?W?j?J?$KP?J?$PN?A?$LP?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@
  0049a	68 04 01 00 00	 push	 260			; 00000104H
  0049f	8d 85 44 fd ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$19[ebp]
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ ; _snprintf_s<260>
  004ab	83 c4 10	 add	 esp, 16			; 00000010H

; 2961 : 			personalRoomMessage.cbMessageType = 0;

  004ae	c6 85 48 fe ff
	ff 00		 mov	 BYTE PTR _personalRoomMessage$19[ebp+260], 0

; 2962 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_PERSONAL_TABLE,SUB_GF_PERSONAL_MESSAGE,&personalRoomMessage,sizeof(personalRoomMessage));

  004b5	68 05 01 00 00	 push	 261			; 00000105H
  004ba	8d 85 44 fd ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$19[ebp]
  004c0	50		 push	 eax
  004c1	68 f5 01 00 00	 push	 501			; 000001f5H
  004c6	68 d2 00 00 00	 push	 210			; 000000d2H
  004cb	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  004ce	51		 push	 ecx
  004cf	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004d2	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  004d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004db	8b 10		 mov	 edx, DWORD PTR [eax]
  004dd	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  004e3	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  004e6	ff d0		 call	 eax

; 2963 : 			return false;

  004e8	32 c0		 xor	 al, al
  004ea	e9 55 0e 00 00	 jmp	 $LN1@PerformSit
$LN23@PerformSit:

; 2964 : 		}
; 2965 : 	}
; 2966 : 
; 2967 : 	//判断座入的玩家是否在座位上
; 2968 : 	bool bIsExsit = false;

  004ef	c6 85 43 fd ff
	ff 00		 mov	 BYTE PTR _bIsExsit$[ebp], 0

; 2969 : 	for (int i = 0; i < m_wChairCount; i++)

  004f6	c7 85 3c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$18[ebp], 0
  00500	eb 0f		 jmp	 SHORT $LN4@PerformSit
$LN2@PerformSit:
  00502	8b 85 3c fd ff
	ff		 mov	 eax, DWORD PTR _i$18[ebp]
  00508	83 c0 01	 add	 eax, 1
  0050b	89 85 3c fd ff
	ff		 mov	 DWORD PTR _i$18[ebp], eax
$LN4@PerformSit:
  00511	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00514	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00518	39 8d 3c fd ff
	ff		 cmp	 DWORD PTR _i$18[ebp], ecx
  0051e	7d 56		 jge	 SHORT $LN3@PerformSit

; 2970 : 	{
; 2971 : 		IServerUserItem * pITableUserItem=GetTableUserItem(i);

  00520	0f b7 85 3c fd
	ff ff		 movzx	 eax, WORD PTR _i$18[ebp]
  00527	50		 push	 eax
  00528	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0052d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00530	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00536	ff d0		 call	 eax
  00538	89 85 38 fd ff
	ff		 mov	 DWORD PTR _pITableUserItem$17[ebp], eax

; 2972 : 		if(pITableUserItem)

  0053e	83 bd 38 fd ff
	ff 00		 cmp	 DWORD PTR _pITableUserItem$17[ebp], 0
  00545	74 2d		 je	 SHORT $LN25@PerformSit

; 2973 : 		{
; 2974 : 			if ((pITableUserItem->GetUserID()) == (pIServerUserItem->GetUserID()))

  00547	8b 85 38 fd ff
	ff		 mov	 eax, DWORD PTR _pITableUserItem$17[ebp]
  0054d	8b 10		 mov	 edx, DWORD PTR [eax]
  0054f	8b 8d 38 fd ff
	ff		 mov	 ecx, DWORD PTR _pITableUserItem$17[ebp]
  00555	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00558	ff d0		 call	 eax
  0055a	8b f0		 mov	 esi, eax
  0055c	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0055f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00561	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00564	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00567	ff d0		 call	 eax
  00569	3b f0		 cmp	 esi, eax
  0056b	75 07		 jne	 SHORT $LN25@PerformSit

; 2975 : 			{
; 2976 : 				bIsExsit = true;

  0056d	c6 85 43 fd ff
	ff 01		 mov	 BYTE PTR _bIsExsit$[ebp], 1
$LN25@PerformSit:

; 2977 : 			}
; 2978 : 		}
; 2979 : 	}

  00574	eb 8c		 jmp	 SHORT $LN2@PerformSit
$LN3@PerformSit:

; 2980 : 
; 2981 : 	//如果是私人房，且已经开始游戏，则不允许其他人入座
; 2982 : 	if (((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0) && m_dwPersonalPlayCount != 0)

  00576	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00579	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0057f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00583	83 e2 10	 and	 edx, 16			; 00000010H
  00586	0f 84 e2 00 00
	00		 je	 $LN27@PerformSit
  0058c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0058f	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00596	0f 84 d2 00 00
	00		 je	 $LN27@PerformSit

; 2983 : 	{
; 2984 : 		bool bUserExist = false;

  0059c	c6 85 37 fd ff
	ff 00		 mov	 BYTE PTR _bUserExist$16[ebp], 0

; 2985 : 		for(int i = 0; i < m_wChairCount; i++)

  005a3	c7 85 30 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$15[ebp], 0
  005ad	eb 0f		 jmp	 SHORT $LN7@PerformSit
$LN5@PerformSit:
  005af	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR _i$15[ebp]
  005b5	83 c0 01	 add	 eax, 1
  005b8	89 85 30 fd ff
	ff		 mov	 DWORD PTR _i$15[ebp], eax
$LN7@PerformSit:
  005be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005c1	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  005c5	39 8d 30 fd ff
	ff		 cmp	 DWORD PTR _i$15[ebp], ecx
  005cb	7d 3b		 jge	 SHORT $LN6@PerformSit

; 2986 : 		{
; 2987 : 			if(m_dwPlayingUserID[i] != 0 && m_dwPlayingUserID[i] == pIServerUserItem->GetUserID())

  005cd	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR _i$15[ebp]
  005d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005d6	83 bc 81 fc 46
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+18172], 0
  005de	74 26		 je	 SHORT $LN28@PerformSit
  005e0	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  005e3	8b 10		 mov	 edx, DWORD PTR [eax]
  005e5	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  005e8	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  005eb	ff d0		 call	 eax
  005ed	8b 8d 30 fd ff
	ff		 mov	 ecx, DWORD PTR _i$15[ebp]
  005f3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005f6	39 84 8a fc 46
	00 00		 cmp	 DWORD PTR [edx+ecx*4+18172], eax
  005fd	75 07		 jne	 SHORT $LN28@PerformSit

; 2988 : 			{
; 2989 : 				bUserExist = true;

  005ff	c6 85 37 fd ff
	ff 01		 mov	 BYTE PTR _bUserExist$16[ebp], 1
$LN28@PerformSit:

; 2990 : 			}
; 2991 : 		}

  00606	eb a7		 jmp	 SHORT $LN5@PerformSit
$LN6@PerformSit:

; 2992 : 
; 2993 : 		if(!bUserExist)

  00608	0f b6 85 37 fd
	ff ff		 movzx	 eax, BYTE PTR _bUserExist$16[ebp]
  0060f	85 c0		 test	 eax, eax
  00611	75 54		 jne	 SHORT $LN29@PerformSit

; 2994 : 		{
; 2995 : 			SendRequestFailure(pIServerUserItem,TEXT("抱歉，约战已经开始！"),REQUEST_FAILURE_NORMAL);

  00613	6a 00		 push	 0
  00615	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JFHBNNDB@?$LB?$KH?G?$LI?$KD?$KM?T?$LM?U?$LN?R?Q?$LO?$KN?$LP?$KK?J?$LM?$KD?$KB@
  0061a	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0061d	50		 push	 eax
  0061e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00621	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2996 : 
; 2997 : 			LogPrintf(("userid = %d  m_wChairCount = %d  GetSitUserCount() = %d  m_dwPersonalPlayCount = %d  m_wTableID = %d 约战已经开始"),  pIServerUserItem->GetUserID() , m_wChairCount, GetSitUserCount(), m_dwPersonalPlayCount, m_wTableID );

  00626	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00629	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0062d	51		 push	 ecx
  0062e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00631	8b 82 20 10 00
	00		 mov	 eax, DWORD PTR [edx+4128]
  00637	50		 push	 eax
  00638	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0063b	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  00640	0f b7 c8	 movzx	 ecx, ax
  00643	51		 push	 ecx
  00644	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00647	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  0064b	50		 push	 eax
  0064c	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0064f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00651	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00654	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00657	ff d0		 call	 eax
  00659	50		 push	 eax
  0065a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@EGIPEGNE@userid?5?$DN?5?$CFd?5?5m_wChairCount?5?$DN?5?$CFd@
  0065f	e8 00 00 00 00	 call	 ?LogPrintf@@YAXPBDZZ	; LogPrintf
  00664	83 c4 18	 add	 esp, 24			; 00000018H
$LN29@PerformSit:

; 2998 : 		}
; 2999 : 		
; 3000 : 		return false;

  00667	32 c0		 xor	 al, al
  00669	e9 d6 0c 00 00	 jmp	 $LN1@PerformSit
$LN27@PerformSit:

; 3001 : 	}
; 3002 : 
; 3003 : 
; 3004 : 	//如果是约战房，且已经坐桌的人数大于或等于配置的人数 则不允许坐桌
; 3005 : 	if (((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0) && GetSitUserCount() >= m_wChairCount && !bIsExsit)

  0066e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00671	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00677	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0067b	83 e2 10	 and	 edx, 16			; 00000010H
  0067e	74 3b		 je	 SHORT $LN30@PerformSit
  00680	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00683	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  00688	0f b7 c0	 movzx	 eax, ax
  0068b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0068e	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00692	3b c2		 cmp	 eax, edx
  00694	7c 25		 jl	 SHORT $LN30@PerformSit
  00696	0f b6 85 43 fd
	ff ff		 movzx	 eax, BYTE PTR _bIsExsit$[ebp]
  0069d	85 c0		 test	 eax, eax
  0069f	75 1a		 jne	 SHORT $LN30@PerformSit

; 3006 : 	{
; 3007 : 		SendRequestFailure(pIServerUserItem,TEXT("抱歉，当前游戏桌子人数已满！"),REQUEST_FAILURE_NORMAL);

  006a1	6a 00		 push	 0
  006a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KGKBJPME@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?H?K?J?$PN?R?Q?B?z?$KD?$KB@
  006a8	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006ab	50		 push	 eax
  006ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006af	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3008 : 		return false;

  006b4	32 c0		 xor	 al, al
  006b6	e9 89 0c 00 00	 jmp	 $LN1@PerformSit
$LN30@PerformSit:

; 3009 : 	}
; 3010 : 
; 3011 : 	//状态判断
; 3012 : 	if ((CServerRule::IsForfendGameEnter(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0))

  006bb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006be	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  006c4	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  006c7	52		 push	 edx
  006c8	e8 00 00 00 00	 call	 ?IsForfendGameEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameEnter
  006cd	83 c4 04	 add	 esp, 4
  006d0	0f b6 c0	 movzx	 eax, al
  006d3	83 f8 01	 cmp	 eax, 1
  006d6	75 31		 jne	 SHORT $LN31@PerformSit
  006d8	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006db	8b 10		 mov	 edx, DWORD PTR [eax]
  006dd	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006e0	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  006e6	ff d0		 call	 eax
  006e8	0f b6 c8	 movzx	 ecx, al
  006eb	85 c9		 test	 ecx, ecx
  006ed	75 1a		 jne	 SHORT $LN31@PerformSit

; 3013 : 	{
; 3014 : 		SendRequestFailure(pIServerUserItem,TEXT("抱歉，当前游戏桌子禁止用户进入！"),REQUEST_FAILURE_NORMAL);

  006ef	6a 00		 push	 0
  006f1	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NMLDBGEG@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LN?x?H?k?$KD@
  006f6	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006f9	50		 push	 eax
  006fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006fd	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3015 : 		return false;

  00702	32 c0		 xor	 al, al
  00704	e9 3b 0c 00 00	 jmp	 $LN1@PerformSit
$LN31@PerformSit:

; 3016 : 	}
; 3017 : 
; 3018 : 	//模拟处理
; 3019 : 	if (m_pGameServiceAttrib->wChairCount < MAX_CHAIR && pIServerUserItem->IsAndroidUser()==false)

  00709	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0070c	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00712	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00716	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  0071c	0f 8d a7 01 00
	00		 jge	 $LN32@PerformSit
  00722	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00725	8b 10		 mov	 edx, DWORD PTR [eax]
  00727	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0072a	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00730	ff d0		 call	 eax
  00732	0f b6 c8	 movzx	 ecx, al
  00735	85 c9		 test	 ecx, ecx
  00737	0f 85 8c 01 00
	00		 jne	 $LN32@PerformSit

; 3020 : 	{
; 3021 : 		//定义变量
; 3022 : 		CAttemperEngineSink * pAttemperEngineSink=(CAttemperEngineSink *)m_pIMainServiceFrame;

  0073d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00740	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00746	89 8d a8 fa ff
	ff		 mov	 DWORD PTR tv430[ebp], ecx
  0074c	83 bd a8 fa ff
	ff 00		 cmp	 DWORD PTR tv430[ebp], 0
  00753	74 11		 je	 SHORT $LN85@PerformSit
  00755	8b 95 a8 fa ff
	ff		 mov	 edx, DWORD PTR tv430[ebp]
  0075b	83 ea 04	 sub	 edx, 4
  0075e	89 95 a4 fa ff
	ff		 mov	 DWORD PTR tv429[ebp], edx
  00764	eb 0a		 jmp	 SHORT $LN86@PerformSit
$LN85@PerformSit:
  00766	c7 85 a4 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR tv429[ebp], 0
$LN86@PerformSit:
  00770	8b 85 a4 fa ff
	ff		 mov	 eax, DWORD PTR tv429[ebp]
  00776	89 85 2c fd ff
	ff		 mov	 DWORD PTR _pAttemperEngineSink$14[ebp], eax

; 3023 : 
; 3024 : 		//查找机器
; 3025 : 		for (WORD i=0; i<m_pGameServiceAttrib->wChairCount; i++)

  0077c	33 c0		 xor	 eax, eax
  0077e	66 89 85 28 fd
	ff ff		 mov	 WORD PTR _i$13[ebp], ax
  00785	eb 12		 jmp	 SHORT $LN10@PerformSit
$LN8@PerformSit:
  00787	66 8b 85 28 fd
	ff ff		 mov	 ax, WORD PTR _i$13[ebp]
  0078e	66 83 c0 01	 add	 ax, 1
  00792	66 89 85 28 fd
	ff ff		 mov	 WORD PTR _i$13[ebp], ax
$LN10@PerformSit:
  00799	0f b7 85 28 fd
	ff ff		 movzx	 eax, WORD PTR _i$13[ebp]
  007a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a3	8b 91 ec 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4076]
  007a9	0f b7 4a 02	 movzx	 ecx, WORD PTR [edx+2]
  007ad	3b c1		 cmp	 eax, ecx
  007af	0f 8d 14 01 00
	00		 jge	 $LN32@PerformSit

; 3026 : 		{
; 3027 : 			//获取用户
; 3028 : 			IServerUserItem *pIUserItem=m_TableUserItemArray[i];

  007b5	0f b7 85 28 fd
	ff ff		 movzx	 eax, WORD PTR _i$13[ebp]
  007bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007bf	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  007c6	89 95 24 fd ff
	ff		 mov	 DWORD PTR _pIUserItem$12[ebp], edx

; 3029 : 			if(pIUserItem==NULL) continue;

  007cc	83 bd 24 fd ff
	ff 00		 cmp	 DWORD PTR _pIUserItem$12[ebp], 0
  007d3	75 02		 jne	 SHORT $LN33@PerformSit
  007d5	eb b0		 jmp	 SHORT $LN8@PerformSit
$LN33@PerformSit:

; 3030 : 			if(pIUserItem->IsAndroidUser()==false)break;

  007d7	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$12[ebp]
  007dd	8b 10		 mov	 edx, DWORD PTR [eax]
  007df	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$12[ebp]
  007e5	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  007eb	ff d0		 call	 eax
  007ed	0f b6 c8	 movzx	 ecx, al
  007f0	85 c9		 test	 ecx, ecx
  007f2	75 05		 jne	 SHORT $LN34@PerformSit
  007f4	e9 d0 00 00 00	 jmp	 $LN32@PerformSit
$LN34@PerformSit:

; 3031 : 
; 3032 : 			//获取参数
; 3033 : 			tagBindParameter * pBindParameter=pAttemperEngineSink->GetBindParameter(pIUserItem->GetBindIndex());

  007f9	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$12[ebp]
  007ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00801	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$12[ebp]
  00807	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0080a	ff d0		 call	 eax
  0080c	0f b7 c8	 movzx	 ecx, ax
  0080f	51		 push	 ecx
  00810	8b 95 2c fd ff
	ff		 mov	 edx, DWORD PTR _pAttemperEngineSink$14[ebp]
  00816	8b 02		 mov	 eax, DWORD PTR [edx]
  00818	8b 8d 2c fd ff
	ff		 mov	 ecx, DWORD PTR _pAttemperEngineSink$14[ebp]
  0081e	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00821	ff d2		 call	 edx
  00823	89 85 20 fd ff
	ff		 mov	 DWORD PTR _pBindParameter$11[ebp], eax

; 3034 : 			IAndroidUserItem * pIAndroidUserItem=m_pIAndroidUserManager->SearchAndroidUserItem(pIUserItem->GetUserID(),pBindParameter->dwSocketID);

  00829	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$11[ebp]
  0082f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00831	51		 push	 ecx
  00832	8b 95 24 fd ff
	ff		 mov	 edx, DWORD PTR _pIUserItem$12[ebp]
  00838	8b 02		 mov	 eax, DWORD PTR [edx]
  0083a	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$12[ebp]
  00840	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00843	ff d2		 call	 edx
  00845	50		 push	 eax
  00846	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00849	8b 88 d0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4048]
  0084f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00852	8b 01		 mov	 eax, DWORD PTR [ecx]
  00854	8b 8a d0 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4048]
  0085a	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0085d	ff d2		 call	 edx
  0085f	89 85 1c fd ff
	ff		 mov	 DWORD PTR _pIAndroidUserItem$10[ebp], eax

; 3035 : 			tagAndroidParameter * pAndroidParameter=pIAndroidUserItem->GetAndroidParameter();

  00865	8b 85 1c fd ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$10[ebp]
  0086b	8b 10		 mov	 edx, DWORD PTR [eax]
  0086d	8b 8d 1c fd ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$10[ebp]
  00873	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00876	ff d0		 call	 eax
  00878	89 85 18 fd ff
	ff		 mov	 DWORD PTR _pAndroidParameter$9[ebp], eax

; 3036 : 
; 3037 : 			//模拟判断
; 3038 : 			if((pAndroidParameter->dwServiceMode&ANDROID_SIMULATE)!=0
; 3039 : 				&& (pAndroidParameter->dwServiceMode&ANDROID_PASSIVITY)==0
; 3040 : 				&& (pAndroidParameter->dwServiceMode&ANDROID_INITIATIVE)==0)

  0087e	8b 85 18 fd ff
	ff		 mov	 eax, DWORD PTR _pAndroidParameter$9[ebp]
  00884	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00887	83 e1 01	 and	 ecx, 1
  0088a	74 36		 je	 SHORT $LN35@PerformSit
  0088c	8b 85 18 fd ff
	ff		 mov	 eax, DWORD PTR _pAndroidParameter$9[ebp]
  00892	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00895	83 e1 02	 and	 ecx, 2
  00898	75 28		 jne	 SHORT $LN35@PerformSit
  0089a	8b 85 18 fd ff
	ff		 mov	 eax, DWORD PTR _pAndroidParameter$9[ebp]
  008a0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  008a3	83 e1 04	 and	 ecx, 4
  008a6	75 1a		 jne	 SHORT $LN35@PerformSit

; 3041 : 			{
; 3042 : 				SendRequestFailure(pIServerUserItem,TEXT("抱歉，当前游戏桌子禁止用户进入！"),REQUEST_FAILURE_NORMAL);

  008a8	6a 00		 push	 0
  008aa	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NMLDBGEG@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LN?x?H?k?$KD@
  008af	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008b2	50		 push	 eax
  008b3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008b6	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3043 : 				return false;

  008bb	32 c0		 xor	 al, al
  008bd	e9 82 0a 00 00	 jmp	 $LN1@PerformSit
$LN35@PerformSit:

; 3044 : 			}
; 3045 : 
; 3046 : 			break;

  008c2	eb 05		 jmp	 SHORT $LN32@PerformSit

; 3047 : 		}

  008c4	e9 be fe ff ff	 jmp	 $LN8@PerformSit
$LN32@PerformSit:

; 3048 : 	}
; 3049 : 
; 3050 : 	//动态加入
; 3051 : 	bool bDynamicJoin=true;

  008c9	c6 85 17 fd ff
	ff 01		 mov	 BYTE PTR _bDynamicJoin$[ebp], 1

; 3052 : 	if (m_pGameServiceAttrib->cbDynamicJoin==FALSE) bDynamicJoin=false;

  008d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008d3	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  008d9	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  008dd	85 d2		 test	 edx, edx
  008df	75 07		 jne	 SHORT $LN36@PerformSit
  008e1	c6 85 17 fd ff
	ff 00		 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN36@PerformSit:

; 3053 : 	if (CServerRule::IsAllowDynamicJoin(m_pGameServiceOption->dwServerRule)==false) bDynamicJoin=false;

  008e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008eb	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  008f1	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  008f4	52		 push	 edx
  008f5	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  008fa	83 c4 04	 add	 esp, 4
  008fd	0f b6 c0	 movzx	 eax, al
  00900	85 c0		 test	 eax, eax
  00902	75 07		 jne	 SHORT $LN37@PerformSit
  00904	c6 85 17 fd ff
	ff 00		 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN37@PerformSit:

; 3054 : 
; 3055 : 	//私人房间不允许动态加入
; 3056 : 	if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  0090b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0090e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00914	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00918	83 e2 10	 and	 edx, 16			; 00000010H
  0091b	74 07		 je	 SHORT $LN38@PerformSit

; 3057 : 	{
; 3058 : 		bDynamicJoin=false;

  0091d	c6 85 17 fd ff
	ff 00		 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN38@PerformSit:

; 3059 : 	}
; 3060 : 
; 3061 : 	//游戏状态
; 3062 : 	if ((m_bGameStarted==true)&&(bDynamicJoin==false))

  00924	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00927	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  0092b	83 f9 01	 cmp	 ecx, 1
  0092e	75 25		 jne	 SHORT $LN39@PerformSit
  00930	0f b6 85 17 fd
	ff ff		 movzx	 eax, BYTE PTR _bDynamicJoin$[ebp]
  00937	85 c0		 test	 eax, eax
  00939	75 1a		 jne	 SHORT $LN39@PerformSit

; 3063 : 	{
; 3064 : 		SendRequestFailure(pIServerUserItem,TEXT("游戏已经开始了，现在不能进入游戏桌！"),REQUEST_FAILURE_NORMAL);

  0093b	6a 00		 push	 0
  0093d	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NFDLJKEK@?S?N?O?$LH?R?Q?$LO?$KN?$LP?$KK?J?$LM?A?K?$KD?$KM?O?V?T?Z?$LC?$LL?D?$NM?$LN?x?H?k?S?N?O@
  00942	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00945	50		 push	 eax
  00946	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00949	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3065 : 		return false;

  0094e	32 c0		 xor	 al, al
  00950	e9 ef 09 00 00	 jmp	 $LN1@PerformSit
$LN39@PerformSit:

; 3066 : 	}
; 3067 : 
; 3068 : 	//密码效验
; 3069 : 	if (m_wChairCount < MAX_CHAIR)

  00955	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00958	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0095c	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00962	0f 8d 04 02 00
	00		 jge	 $LN40@PerformSit

; 3070 : 	{
; 3071 : 		//防作弊
; 3072 : 		if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule) == false)

  00968	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0096b	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00971	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00974	52		 push	 edx
  00975	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0097a	83 c4 04	 add	 esp, 4
  0097d	0f b6 c0	 movzx	 eax, al
  00980	85 c0		 test	 eax, eax
  00982	0f 85 e4 01 00
	00		 jne	 $LN40@PerformSit

; 3073 : 		{
; 3074 : 			if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && IsTableLocked())

  00988	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0098b	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00991	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00995	83 fa 10	 cmp	 edx, 16			; 00000010H
  00998	0f 85 59 01 00
	00		 jne	 $LN42@PerformSit
  0099e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009a1	8b 10		 mov	 edx, DWORD PTR [eax]
  009a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009a6	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  009a9	ff d0		 call	 eax
  009ab	0f b6 c8	 movzx	 ecx, al
  009ae	85 c9		 test	 ecx, ecx
  009b0	0f 84 41 01 00
	00		 je	 $LN42@PerformSit

; 3075 : 			{
; 3076 : 				//房主不用密码
; 3077 : 				if (m_dwTableOwnerID != pIServerUserItem->GetUserID())

  009b6	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  009b9	8b 10		 mov	 edx, DWORD PTR [eax]
  009bb	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  009be	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  009c1	ff d0		 call	 eax
  009c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009c6	39 81 40 07 00
	00		 cmp	 DWORD PTR [ecx+1856], eax
  009cc	0f 84 23 01 00
	00		 je	 $LN44@PerformSit

; 3078 : 				{
; 3079 : 					bool bCheckPass = false;

  009d2	c6 85 16 fd ff
	ff 00		 mov	 BYTE PTR _bCheckPass$8[ebp], 0

; 3080 : 					for (int i = 0; i < MAX_PASSWORD_COUNT; i++)

  009d9	c7 85 10 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$7[ebp], 0
  009e3	eb 0f		 jmp	 SHORT $LN13@PerformSit
$LN11@PerformSit:
  009e5	8b 85 10 fd ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  009eb	83 c0 01	 add	 eax, 1
  009ee	89 85 10 fd ff
	ff		 mov	 DWORD PTR _i$7[ebp], eax
$LN13@PerformSit:
  009f4	83 bd 10 fd ff
	ff 0a		 cmp	 DWORD PTR _i$7[ebp], 10	; 0000000aH
  009fb	0f 8d cf 00 00
	00		 jge	 $LN12@PerformSit

; 3081 : 					{
; 3082 : 						if (m_hRoomPassword[i].enPS == enPasswordState::enUsed && dwRoomPwd == m_hRoomPassword[i].dwRoomPass)

  00a01	6b 85 10 fd ff
	ff 0c		 imul	 eax, DWORD PTR _i$7[ebp], 12
  00a08	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a0b	83 bc 01 65 07
	00 00 02	 cmp	 DWORD PTR [ecx+eax+1893], 2
  00a13	75 64		 jne	 SHORT $LN45@PerformSit
  00a15	6b 85 10 fd ff
	ff 0c		 imul	 eax, DWORD PTR _i$7[ebp], 12
  00a1c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a1f	8b 55 14	 mov	 edx, DWORD PTR _dwRoomPwd$[ebp]
  00a22	3b 94 01 69 07
	00 00		 cmp	 edx, DWORD PTR [ecx+eax+1897]
  00a29	75 4e		 jne	 SHORT $LN45@PerformSit

; 3083 : 						{
; 3084 : 							if (m_hRoomPassword[i].dwUserID > 0 && m_hRoomPassword[i].dwUserID != pIServerUserItem->GetUserID())

  00a2b	6b 85 10 fd ff
	ff 0c		 imul	 eax, DWORD PTR _i$7[ebp], 12
  00a32	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a35	83 bc 01 6d 07
	00 00 00	 cmp	 DWORD PTR [ecx+eax+1901], 0
  00a3d	76 3a		 jbe	 SHORT $LN45@PerformSit
  00a3f	6b b5 10 fd ff
	ff 0c		 imul	 esi, DWORD PTR _i$7[ebp], 12
  00a46	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00a49	8b 10		 mov	 edx, DWORD PTR [eax]
  00a4b	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00a4e	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00a51	ff d0		 call	 eax
  00a53	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a56	39 84 31 6d 07
	00 00		 cmp	 DWORD PTR [ecx+esi+1901], eax
  00a5d	74 1a		 je	 SHORT $LN45@PerformSit

; 3085 : 							{
; 3086 : 								SendRequestFailure(pIServerUserItem, TEXT("密码被使用,已过期！"), REQUEST_FAILURE_NORMAL);

  00a5f	6a 00		 push	 0
  00a61	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MONKBGOO@?C?$NM?B?k?$LB?$LL?J?$LJ?S?C?0?R?Q?$LJ?$PN?F?Z?$KD?$KB@
  00a66	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00a69	50		 push	 eax
  00a6a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a6d	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3087 : 								return false;

  00a72	32 c0		 xor	 al, al
  00a74	e9 cb 08 00 00	 jmp	 $LN1@PerformSit
$LN45@PerformSit:

; 3088 : 							}
; 3089 : 						}
; 3090 : 
; 3091 : 						if (dwRoomPwd == m_hRoomPassword[i].dwRoomPass)

  00a79	6b 85 10 fd ff
	ff 0c		 imul	 eax, DWORD PTR _i$7[ebp], 12
  00a80	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a83	8b 55 14	 mov	 edx, DWORD PTR _dwRoomPwd$[ebp]
  00a86	3b 94 01 69 07
	00 00		 cmp	 edx, DWORD PTR [ecx+eax+1897]
  00a8d	75 3c		 jne	 SHORT $LN47@PerformSit

; 3092 : 						{
; 3093 : 							m_hRoomPassword[i].enPS = enPasswordState::enUsed;

  00a8f	6b 85 10 fd ff
	ff 0c		 imul	 eax, DWORD PTR _i$7[ebp], 12
  00a96	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a99	c7 84 01 65 07
	00 00 02 00 00
	00		 mov	 DWORD PTR [ecx+eax+1893], 2

; 3094 : 							m_hRoomPassword[i].dwUserID = pIServerUserItem->GetUserID();

  00aa4	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00aa7	8b 10		 mov	 edx, DWORD PTR [eax]
  00aa9	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00aac	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00aaf	ff d0		 call	 eax
  00ab1	6b 8d 10 fd ff
	ff 0c		 imul	 ecx, DWORD PTR _i$7[ebp], 12
  00ab8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00abb	89 84 0a 6d 07
	00 00		 mov	 DWORD PTR [edx+ecx+1901], eax

; 3095 : 
; 3096 : 							bCheckPass = true;

  00ac2	c6 85 16 fd ff
	ff 01		 mov	 BYTE PTR _bCheckPass$8[ebp], 1

; 3097 : 							break;

  00ac9	eb 05		 jmp	 SHORT $LN12@PerformSit
$LN47@PerformSit:

; 3098 : 						}
; 3099 : 					}

  00acb	e9 15 ff ff ff	 jmp	 $LN11@PerformSit
$LN12@PerformSit:

; 3100 : 					if (bCheckPass == false)

  00ad0	0f b6 85 16 fd
	ff ff		 movzx	 eax, BYTE PTR _bCheckPass$8[ebp]
  00ad7	85 c0		 test	 eax, eax
  00ad9	75 1a		 jne	 SHORT $LN44@PerformSit

; 3101 : 					{
; 3102 : 						SendRequestFailure(pIServerUserItem, TEXT("房间密码不正确，不能加入游戏！"), REQUEST_FAILURE_NORMAL);

  00adb	6a 00		 push	 0
  00add	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OBBKOCFP@?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S?N?O?$LH?$KD?$KB@
  00ae2	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00ae5	50		 push	 eax
  00ae6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae9	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3103 : 						return false;

  00aee	32 c0		 xor	 al, al
  00af0	e9 4f 08 00 00	 jmp	 $LN1@PerformSit
$LN44@PerformSit:

; 3104 : 					}
; 3105 : 				}
; 3106 : 			}
; 3107 : 			else

  00af5	eb 75		 jmp	 SHORT $LN40@PerformSit
$LN42@PerformSit:

; 3108 : 			{
; 3109 : 				if((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0 && ((IsTableLocked()==true)&&(pIServerUserItem->GetMasterOrder()==0L))
; 3110 : 					&&((lpszPassword==NULL)||(lstrcmp(lpszPassword,m_szEnterPassword)!=0)))

  00af7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00afa	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00b00	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00b04	83 e2 04	 and	 edx, 4
  00b07	75 63		 jne	 SHORT $LN40@PerformSit
  00b09	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b0c	8b 10		 mov	 edx, DWORD PTR [eax]
  00b0e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b11	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00b14	ff d0		 call	 eax
  00b16	0f b6 c8	 movzx	 ecx, al
  00b19	83 f9 01	 cmp	 ecx, 1
  00b1c	75 4e		 jne	 SHORT $LN40@PerformSit
  00b1e	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00b21	8b 10		 mov	 edx, DWORD PTR [eax]
  00b23	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00b26	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00b2c	ff d0		 call	 eax
  00b2e	0f b6 c8	 movzx	 ecx, al
  00b31	85 c9		 test	 ecx, ecx
  00b33	75 37		 jne	 SHORT $LN40@PerformSit
  00b35	83 7d 10 00	 cmp	 DWORD PTR _lpszPassword$[ebp], 0
  00b39	74 17		 je	 SHORT $LN50@PerformSit
  00b3b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b3e	05 44 07 00 00	 add	 eax, 1860		; 00000744H
  00b43	50		 push	 eax
  00b44	8b 4d 10	 mov	 ecx, DWORD PTR _lpszPassword$[ebp]
  00b47	51		 push	 ecx
  00b48	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00b4e	85 c0		 test	 eax, eax
  00b50	74 1a		 je	 SHORT $LN40@PerformSit
$LN50@PerformSit:

; 3111 : 
; 3112 : 				{
; 3113 : 					SendRequestFailure(pIServerUserItem,TEXT("游戏桌进入密码不正确，不能加入游戏！"),REQUEST_FAILURE_PASSWORD);

  00b52	6a 03		 push	 3
  00b54	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FMPIBIL@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?$LM?S?H?k?S@
  00b59	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00b5c	50		 push	 eax
  00b5d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b60	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3114 : 					return false;

  00b65	32 c0		 xor	 al, al
  00b67	e9 d8 07 00 00	 jmp	 $LN1@PerformSit
$LN40@PerformSit:

; 3115 : 				}
; 3116 : 			}			
; 3117 : 		}
; 3118 : 	}
; 3119 : 
; 3120 : 	//规则效验
; 3121 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0 && EfficacyEnterTableScoreRule(wChairID,pIServerUserItem)==false) return false;

  00b6c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b6f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00b75	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00b79	83 e2 04	 and	 edx, 4
  00b7c	75 1f		 jne	 SHORT $LN51@PerformSit
  00b7e	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00b81	50		 push	 eax
  00b82	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00b86	51		 push	 ecx
  00b87	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b8a	e8 00 00 00 00	 call	 ?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z ; CTableFrame::EfficacyEnterTableScoreRule
  00b8f	0f b6 d0	 movzx	 edx, al
  00b92	85 d2		 test	 edx, edx
  00b94	75 07		 jne	 SHORT $LN51@PerformSit
  00b96	32 c0		 xor	 al, al
  00b98	e9 a7 07 00 00	 jmp	 $LN1@PerformSit
$LN51@PerformSit:

; 3122 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0 && EfficacyIPAddress(pIServerUserItem)==false) return false;

  00b9d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ba0	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00ba6	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00baa	83 e2 04	 and	 edx, 4
  00bad	75 1a		 jne	 SHORT $LN52@PerformSit
  00baf	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00bb2	50		 push	 eax
  00bb3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb6	e8 00 00 00 00	 call	 ?EfficacyIPAddress@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ; CTableFrame::EfficacyIPAddress
  00bbb	0f b6 c8	 movzx	 ecx, al
  00bbe	85 c9		 test	 ecx, ecx
  00bc0	75 07		 jne	 SHORT $LN52@PerformSit
  00bc2	32 c0		 xor	 al, al
  00bc4	e9 7b 07 00 00	 jmp	 $LN1@PerformSit
$LN52@PerformSit:

; 3123 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0 && EfficacyScoreRule(pIServerUserItem)==false) return false;

  00bc9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bcc	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00bd2	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00bd6	83 e2 04	 and	 edx, 4
  00bd9	75 1a		 jne	 SHORT $LN53@PerformSit
  00bdb	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00bde	50		 push	 eax
  00bdf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00be2	e8 00 00 00 00	 call	 ?EfficacyScoreRule@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ; CTableFrame::EfficacyScoreRule
  00be7	0f b6 c8	 movzx	 ecx, al
  00bea	85 c9		 test	 ecx, ecx
  00bec	75 07		 jne	 SHORT $LN53@PerformSit
  00bee	32 c0		 xor	 al, al
  00bf0	e9 4f 07 00 00	 jmp	 $LN1@PerformSit
$LN53@PerformSit:

; 3124 : 
; 3125 : 	//扩展效验
; 3126 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0 && m_pITableUserRequest!=NULL)

  00bf5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bf8	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00bfe	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00c02	83 e2 04	 and	 edx, 4
  00c05	75 74		 jne	 SHORT $LN54@PerformSit
  00c07	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c0a	83 b8 d8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4056], 0
  00c11	74 68		 je	 SHORT $LN54@PerformSit

; 3127 : 	{
; 3128 : 		//变量定义
; 3129 : 		tagRequestResult RequestResult;
; 3130 : 		ZeroMemory(&RequestResult,sizeof(RequestResult));

  00c13	68 81 00 00 00	 push	 129			; 00000081H
  00c18	6a 00		 push	 0
  00c1a	8d 85 8c fc ff
	ff		 lea	 eax, DWORD PTR _RequestResult$6[ebp]
  00c20	50		 push	 eax
  00c21	e8 00 00 00 00	 call	 _memset
  00c26	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3131 : 
; 3132 : 		//坐下效验
; 3133 : 		if (m_pITableUserRequest->OnUserRequestSitDown(wChairID,pIServerUserItem,RequestResult)==false)

  00c29	8d 85 8c fc ff
	ff		 lea	 eax, DWORD PTR _RequestResult$6[ebp]
  00c2f	50		 push	 eax
  00c30	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c33	51		 push	 ecx
  00c34	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  00c38	52		 push	 edx
  00c39	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c3c	8b 88 d8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4056]
  00c42	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00c45	8b 01		 mov	 eax, DWORD PTR [ecx]
  00c47	8b 8a d8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4056]
  00c4d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00c50	ff d2		 call	 edx
  00c52	0f b6 c0	 movzx	 eax, al
  00c55	85 c0		 test	 eax, eax
  00c57	75 22		 jne	 SHORT $LN54@PerformSit

; 3134 : 		{
; 3135 : 			//发送信息
; 3136 : 			SendRequestFailure(pIServerUserItem,RequestResult.szFailureReason,RequestResult.cbFailureCode);

  00c59	0f b6 85 8c fc
	ff ff		 movzx	 eax, BYTE PTR _RequestResult$6[ebp]
  00c60	50		 push	 eax
  00c61	8d 8d 8d fc ff
	ff		 lea	 ecx, DWORD PTR _RequestResult$6[ebp+1]
  00c67	51		 push	 ecx
  00c68	8b 55 0c	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00c6b	52		 push	 edx
  00c6c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c6f	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3137 : 
; 3138 : 			return false;

  00c74	32 c0		 xor	 al, al
  00c76	e9 c9 06 00 00	 jmp	 $LN1@PerformSit
$LN54@PerformSit:

; 3139 : 		}
; 3140 : 	}
; 3141 : 
; 3142 : 	//设置变量
; 3143 : 	m_TableUserItemArray[wChairID]=pIServerUserItem;

  00c7b	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00c7f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c82	8b 55 0c	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00c85	89 94 81 90 0c
	00 00		 mov	 DWORD PTR [ecx+eax*4+3216], edx

; 3144 : 	m_wDrawCount=0;

  00c8c	33 c0		 xor	 eax, eax
  00c8e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c91	66 89 81 3c 07
	00 00		 mov	 WORD PTR [ecx+1852], ax

; 3145 : 
; 3146 : 	//校正分数
; 3147 : 	if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  00c98	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c9b	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00ca1	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00ca5	83 e2 10	 and	 edx, 16			; 00000010H
  00ca8	0f 84 55 02 00
	00		 je	 $LN56@PerformSit

; 3148 : 	{
; 3149 : 		if(m_bPersonalLock == false)

  00cae	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00cb1	0f b6 88 9a 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4506]
  00cb8	85 c9		 test	 ecx, ecx
  00cba	75 54		 jne	 SHORT $LN57@PerformSit

; 3150 : 		{
; 3151 : 			//发送信息
; 3152 : 			SendRequestFailure(pIServerUserItem,TEXT("房间还未创建，无法进入！"),REQUEST_FAILURE_NORMAL);

  00cbc	6a 00		 push	 0
  00cbe	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BFEPDGOK@?$LH?$LP?$LM?d?$LL?$LJ?N?$LE?$LE?$LE?$LN?$KI?$KD?$KM?N?$NO?$LH?$KI?$LN?x?H?k?$KD?$KB@
  00cc3	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00cc6	50		 push	 eax
  00cc7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00cca	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 3153 : 
; 3154 : 			Personal_Room_Message personalRoomMessage;
; 3155 : 			personalRoomMessage.cbMessageType = 1;

  00ccf	c6 85 88 fc ff
	ff 01		 mov	 BYTE PTR _personalRoomMessage$5[ebp+260], 1

; 3156 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_PERSONAL_TABLE,SUB_GF_PERSONAL_MESSAGE,&personalRoomMessage,sizeof(personalRoomMessage));

  00cd6	68 05 01 00 00	 push	 261			; 00000105H
  00cdb	8d 85 84 fb ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$5[ebp]
  00ce1	50		 push	 eax
  00ce2	68 f5 01 00 00	 push	 501			; 000001f5H
  00ce7	68 d2 00 00 00	 push	 210			; 000000d2H
  00cec	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00cef	51		 push	 ecx
  00cf0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00cf3	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00cf9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00cfc	8b 10		 mov	 edx, DWORD PTR [eax]
  00cfe	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00d04	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00d07	ff d0		 call	 eax

; 3157 : 			return false;

  00d09	32 c0		 xor	 al, al
  00d0b	e9 34 06 00 00	 jmp	 $LN1@PerformSit
$LN57@PerformSit:

; 3158 : 		}
; 3159 : 		
; 3160 : 		//判断是否是金币场
; 3161 : 		bool bTreasureDB = false;

  00d10	c6 85 83 fb ff
	ff 00		 mov	 BYTE PTR _bTreasureDB$4[ebp], 0

; 3162 : 		if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  00d17	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00d1c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d1f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00d25	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00d2b	51		 push	 ecx
  00d2c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00d32	85 c0		 test	 eax, eax
  00d34	75 07		 jne	 SHORT $LN58@PerformSit

; 3163 : 		{
; 3164 : 			bTreasureDB = true;

  00d36	c6 85 83 fb ff
	ff 01		 mov	 BYTE PTR _bTreasureDB$4[ebp], 1
$LN58@PerformSit:

; 3165 : 		}
; 3166 : 
; 3167 : 		if (!bTreasureDB  && !bIsExsit)

  00d3d	0f b6 85 83 fb
	ff ff		 movzx	 eax, BYTE PTR _bTreasureDB$4[ebp]
  00d44	85 c0		 test	 eax, eax
  00d46	0f 85 b7 01 00
	00		 jne	 $LN56@PerformSit
  00d4c	0f b6 85 43 fd
	ff ff		 movzx	 eax, BYTE PTR _bIsExsit$[ebp]
  00d53	85 c0		 test	 eax, eax
  00d55	0f 85 a8 01 00
	00		 jne	 $LN56@PerformSit

; 3168 : 		{
; 3169 : 			if (ZJH_KIND_ID == m_pGameServiceOption->wKindID || NN_KIND_ID == m_pGameServiceOption->wKindID || TBZ_KIND_ID == m_pGameServiceOption->wKindID || OXSIXX_KIND_ID == m_pGameServiceOption->wKindID)

  00d5b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d5e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00d64	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00d67	83 fa 06	 cmp	 edx, 6
  00d6a	74 37		 je	 SHORT $LN62@PerformSit
  00d6c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d6f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00d75	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00d78	83 fa 1b	 cmp	 edx, 27			; 0000001bH
  00d7b	74 26		 je	 SHORT $LN62@PerformSit
  00d7d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d80	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00d86	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00d89	83 fa 2f	 cmp	 edx, 47			; 0000002fH
  00d8c	74 15		 je	 SHORT $LN62@PerformSit
  00d8e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d91	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00d97	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00d9a	83 fa 32	 cmp	 edx, 50			; 00000032H
  00d9d	0f 85 37 01 00
	00		 jne	 $LN60@PerformSit
$LN62@PerformSit:

; 3170 : 			{
; 3171 : 				LONGLONG lMinScore = m_pGameServiceOption->lMinTableScore * m_dwDrawCountLimit *  m_lCellScore/m_pGameServiceOption->lCellScore;

  00da3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00da6	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00dac	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00daf	8b 82 18 10 00
	00		 mov	 eax, DWORD PTR [edx+4120]
  00db5	33 d2		 xor	 edx, edx
  00db7	52		 push	 edx
  00db8	50		 push	 eax
  00db9	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00dbc	50		 push	 eax
  00dbd	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00dc0	51		 push	 ecx
  00dc1	e8 00 00 00 00	 call	 __allmul
  00dc6	8b c8		 mov	 ecx, eax
  00dc8	8b f2		 mov	 esi, edx
  00dca	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00dcd	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  00dd3	99		 cdq
  00dd4	52		 push	 edx
  00dd5	50		 push	 eax
  00dd6	56		 push	 esi
  00dd7	51		 push	 ecx
  00dd8	e8 00 00 00 00	 call	 __allmul
  00ddd	8b c8		 mov	 ecx, eax
  00ddf	8b f2		 mov	 esi, edx
  00de1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00de4	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  00dea	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00ded	99		 cdq
  00dee	52		 push	 edx
  00def	50		 push	 eax
  00df0	56		 push	 esi
  00df1	51		 push	 ecx
  00df2	e8 00 00 00 00	 call	 __alldiv
  00df7	89 85 78 fb ff
	ff		 mov	 DWORD PTR _lMinScore$3[ebp], eax
  00dfd	89 95 7c fb ff
	ff		 mov	 DWORD PTR _lMinScore$3[ebp+4], edx

; 3172 : 				LONGLONG lScore = max(m_lIniScore,  lMinScore);

  00e03	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00e06	89 85 a8 fa ff
	ff		 mov	 DWORD PTR tv1659[ebp], eax
  00e0c	8b 8d a8 fa ff
	ff		 mov	 ecx, DWORD PTR tv1659[ebp]
  00e12	8b 91 2c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4140]
  00e18	3b 95 7c fb ff
	ff		 cmp	 edx, DWORD PTR _lMinScore$3[ebp+4]
  00e1e	7c 33		 jl	 SHORT $LN87@PerformSit
  00e20	7f 14		 jg	 SHORT $LN91@PerformSit
  00e22	8b 85 a8 fa ff
	ff		 mov	 eax, DWORD PTR tv1659[ebp]
  00e28	8b 88 28 10 00
	00		 mov	 ecx, DWORD PTR [eax+4136]
  00e2e	3b 8d 78 fb ff
	ff		 cmp	 ecx, DWORD PTR _lMinScore$3[ebp]
  00e34	76 1d		 jbe	 SHORT $LN87@PerformSit
$LN91@PerformSit:
  00e36	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00e39	8b 82 28 10 00
	00		 mov	 eax, DWORD PTR [edx+4136]
  00e3f	89 85 a0 fa ff
	ff		 mov	 DWORD PTR tv788[ebp], eax
  00e45	8b 8a 2c 10 00
	00		 mov	 ecx, DWORD PTR [edx+4140]
  00e4b	89 8d a4 fa ff
	ff		 mov	 DWORD PTR tv788[ebp+4], ecx
  00e51	eb 18		 jmp	 SHORT $LN88@PerformSit
$LN87@PerformSit:
  00e53	8b 95 78 fb ff
	ff		 mov	 edx, DWORD PTR _lMinScore$3[ebp]
  00e59	89 95 a0 fa ff
	ff		 mov	 DWORD PTR tv788[ebp], edx
  00e5f	8b 85 7c fb ff
	ff		 mov	 eax, DWORD PTR _lMinScore$3[ebp+4]
  00e65	89 85 a4 fa ff
	ff		 mov	 DWORD PTR tv788[ebp+4], eax
$LN88@PerformSit:
  00e6b	8b 8d a0 fa ff
	ff		 mov	 ecx, DWORD PTR tv788[ebp]
  00e71	89 8d 70 fb ff
	ff		 mov	 DWORD PTR _lScore$2[ebp], ecx
  00e77	8b 95 a4 fa ff
	ff		 mov	 edx, DWORD PTR tv788[ebp+4]
  00e7d	89 95 74 fb ff
	ff		 mov	 DWORD PTR _lScore$2[ebp+4], edx

; 3173 : 				pIServerUserItem->ModifyUserInsure(lScore-pIServerUserItem->GetUserScore(), 0, 0);

  00e83	6a 00		 push	 0
  00e85	6a 00		 push	 0
  00e87	6a 00		 push	 0
  00e89	6a 00		 push	 0
  00e8b	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00e8e	8b 10		 mov	 edx, DWORD PTR [eax]
  00e90	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00e93	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00e99	ff d0		 call	 eax
  00e9b	8b 8d 70 fb ff
	ff		 mov	 ecx, DWORD PTR _lScore$2[ebp]
  00ea1	2b c8		 sub	 ecx, eax
  00ea3	8b 85 74 fb ff
	ff		 mov	 eax, DWORD PTR _lScore$2[ebp+4]
  00ea9	1b c2		 sbb	 eax, edx
  00eab	50		 push	 eax
  00eac	51		 push	 ecx
  00ead	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00eb0	8b 11		 mov	 edx, DWORD PTR [ecx]
  00eb2	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00eb5	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  00ebb	ff d0		 call	 eax

; 3174 : 				m_lIniScore = lScore;

  00ebd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ec0	8b 8d 70 fb ff
	ff		 mov	 ecx, DWORD PTR _lScore$2[ebp]
  00ec6	89 88 28 10 00
	00		 mov	 DWORD PTR [eax+4136], ecx
  00ecc	8b 95 74 fb ff
	ff		 mov	 edx, DWORD PTR _lScore$2[ebp+4]
  00ed2	89 90 2c 10 00
	00		 mov	 DWORD PTR [eax+4140], edx

; 3175 : 			}
; 3176 : 			else

  00ed8	eb 29		 jmp	 SHORT $LN56@PerformSit
$LN60@PerformSit:

; 3177 : 			{
; 3178 : 				pIServerUserItem->ModifyUserInsure(m_lIniScore, 0, 0);

  00eda	6a 00		 push	 0
  00edc	6a 00		 push	 0
  00ede	6a 00		 push	 0
  00ee0	6a 00		 push	 0
  00ee2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ee5	8b 88 2c 10 00
	00		 mov	 ecx, DWORD PTR [eax+4140]
  00eeb	51		 push	 ecx
  00eec	8b 90 28 10 00
	00		 mov	 edx, DWORD PTR [eax+4136]
  00ef2	52		 push	 edx
  00ef3	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00ef6	8b 10		 mov	 edx, DWORD PTR [eax]
  00ef8	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00efb	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  00f01	ff d0		 call	 eax
$LN56@PerformSit:

; 3179 : 			}
; 3180 : 		}
; 3181 : 	}
; 3182 : 
; 3183 : 	//用户状态
; 3184 : 	if ((IsGameStarted()==false)||(m_cbStartMode!=START_MODE_TIME_CONTROL))

  00f03	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f06	8b 10		 mov	 edx, DWORD PTR [eax]
  00f08	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f0b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00f0e	ff d0		 call	 eax
  00f10	0f b6 c8	 movzx	 ecx, al
  00f13	85 c9		 test	 ecx, ecx
  00f15	74 10		 je	 SHORT $LN65@PerformSit
  00f17	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f1a	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00f1e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00f21	0f 84 03 01 00
	00		 je	 $LN63@PerformSit
$LN65@PerformSit:

; 3185 : 	{
; 3186 : 		if (CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)==false && (m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0)

  00f27	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f2a	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00f30	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00f33	52		 push	 edx
  00f34	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  00f39	83 c4 04	 add	 esp, 4
  00f3c	0f b6 c0	 movzx	 eax, al
  00f3f	85 c0		 test	 eax, eax
  00f41	75 48		 jne	 SHORT $LN66@PerformSit
  00f43	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f46	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00f4c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00f50	83 e2 04	 and	 edx, 4
  00f53	75 36		 jne	 SHORT $LN66@PerformSit

; 3187 : 		{
; 3188 : 			pIServerUserItem->SetClientReady(false);

  00f55	6a 00		 push	 0
  00f57	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00f5a	8b 10		 mov	 edx, DWORD PTR [eax]
  00f5c	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00f5f	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  00f65	ff d0		 call	 eax

; 3189 : 			pIServerUserItem->SetUserStatus(US_SIT,m_wTableID,wChairID);

  00f67	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00f6b	50		 push	 eax
  00f6c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f6f	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00f73	52		 push	 edx
  00f74	6a 02		 push	 2
  00f76	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00f79	8b 10		 mov	 edx, DWORD PTR [eax]
  00f7b	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00f7e	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00f84	ff d0		 call	 eax

; 3190 : 		}
; 3191 : 		else

  00f86	e9 9a 00 00 00	 jmp	 $LN67@PerformSit
$LN66@PerformSit:

; 3192 : 		{
; 3193 : 			if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  00f8b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00f8e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00f94	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00f98	83 fa 04	 cmp	 edx, 4
  00f9b	75 57		 jne	 SHORT $LN68@PerformSit
  00f9d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00fa0	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  00fa6	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00faa	83 fa 01	 cmp	 edx, 1
  00fad	75 45		 jne	 SHORT $LN68@PerformSit

; 3194 : 			{
; 3195 : 				pIServerUserItem->SetClientReady(pIServerUserItem->IsTrusteeUser());

  00faf	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00fb2	8b 10		 mov	 edx, DWORD PTR [eax]
  00fb4	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00fb7	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  00fbd	ff d0		 call	 eax
  00fbf	0f b6 c8	 movzx	 ecx, al
  00fc2	51		 push	 ecx
  00fc3	8b 55 0c	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00fc6	8b 02		 mov	 eax, DWORD PTR [edx]
  00fc8	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00fcb	8b 90 c4 00 00
	00		 mov	 edx, DWORD PTR [eax+196]
  00fd1	ff d2		 call	 edx

; 3196 : 				pIServerUserItem->SetUserStatus(US_READY,m_wTableID,wChairID);

  00fd3	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00fd7	50		 push	 eax
  00fd8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00fdb	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00fdf	52		 push	 edx
  00fe0	6a 03		 push	 3
  00fe2	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00fe5	8b 10		 mov	 edx, DWORD PTR [eax]
  00fe7	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00fea	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00ff0	ff d0		 call	 eax

; 3197 : 			}
; 3198 : 			else

  00ff2	eb 31		 jmp	 SHORT $LN67@PerformSit
$LN68@PerformSit:

; 3199 : 			{
; 3200 : 				pIServerUserItem->SetClientReady(false);

  00ff4	6a 00		 push	 0
  00ff6	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00ff9	8b 10		 mov	 edx, DWORD PTR [eax]
  00ffb	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00ffe	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  01004	ff d0		 call	 eax

; 3201 : 				pIServerUserItem->SetUserStatus(US_READY,m_wTableID,wChairID);

  01006	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0100a	50		 push	 eax
  0100b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0100e	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  01012	52		 push	 edx
  01013	6a 03		 push	 3
  01015	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01018	8b 10		 mov	 edx, DWORD PTR [eax]
  0101a	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0101d	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  01023	ff d0		 call	 eax
$LN67@PerformSit:

; 3202 : 			}
; 3203 : 		}
; 3204 : 	}
; 3205 : 	else

  01025	e9 c2 00 00 00	 jmp	 $LN64@PerformSit
$LN63@PerformSit:

; 3206 : 	{
; 3207 : 		//设置变量
; 3208 : 		m_wOffLineCount[wChairID]=0L;

  0102a	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0102e	33 c9		 xor	 ecx, ecx
  01030	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01033	66 89 8c 42 de
	07 00 00	 mov	 WORD PTR [edx+eax*2+2014], cx

; 3209 : 		m_dwOffLineTime[wChairID]=0L;

  0103b	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0103f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01042	c7 84 81 70 09
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+2416], 0

; 3210 : 
; 3211 : 		//锁定游戏币
; 3212 : 		if (m_pGameServiceOption->lServiceScore>0L)

  0104d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01050	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  01056	89 8d a8 fa ff
	ff		 mov	 DWORD PTR tv1758[ebp], ecx
  0105c	8b 95 a8 fa ff
	ff		 mov	 edx, DWORD PTR tv1758[ebp]
  01062	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  01066	7c 53		 jl	 SHORT $LN70@PerformSit
  01068	7f 0c		 jg	 SHORT $LN92@PerformSit
  0106a	8b 85 a8 fa ff
	ff		 mov	 eax, DWORD PTR tv1758[ebp]
  01070	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  01074	76 45		 jbe	 SHORT $LN70@PerformSit
$LN92@PerformSit:

; 3213 : 		{
; 3214 : 			m_lFrozenedScore[wChairID]=m_pGameServiceOption->lServiceScore;

  01076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01079	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0107f	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  01083	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01086	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  01089	89 b4 d0 e0 00
	00 00		 mov	 DWORD PTR [eax+edx*8+224], esi
  01090	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  01093	89 8c d0 e4 00
	00 00		 mov	 DWORD PTR [eax+edx*8+228], ecx

; 3215 : 			pIServerUserItem->FrozenedUserScore(m_pGameServiceOption->lServiceScore);

  0109a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0109d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  010a3	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  010a6	52		 push	 edx
  010a7	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  010aa	50		 push	 eax
  010ab	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  010ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  010b0	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  010b3	8b 82 0c 01 00
	00		 mov	 eax, DWORD PTR [edx+268]
  010b9	ff d0		 call	 eax
$LN70@PerformSit:

; 3216 : 		}
; 3217 : 
; 3218 : 		//设置状态
; 3219 : 		pIServerUserItem->SetClientReady(false);

  010bb	6a 00		 push	 0
  010bd	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  010c0	8b 10		 mov	 edx, DWORD PTR [eax]
  010c2	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  010c5	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  010cb	ff d0		 call	 eax

; 3220 : 		pIServerUserItem->SetUserStatus(US_PLAYING,m_wTableID,wChairID);

  010cd	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  010d1	50		 push	 eax
  010d2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  010d5	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  010d9	52		 push	 edx
  010da	6a 05		 push	 5
  010dc	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  010df	8b 10		 mov	 edx, DWORD PTR [eax]
  010e1	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  010e4	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  010ea	ff d0		 call	 eax
$LN64@PerformSit:

; 3221 : 	}
; 3222 : 
; 3223 : 	//设置变量
; 3224 : 	m_wUserCount=GetSitUserCount();

  010ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  010ef	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  010f4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  010f7	66 89 41 0e	 mov	 WORD PTR [ecx+14], ax

; 3225 : 
; 3226 : 	//桌子信息
; 3227 : 	if (GetSitUserCount()==1)

  010fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  010fe	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  01103	0f b7 c0	 movzx	 eax, ax
  01106	83 f8 01	 cmp	 eax, 1
  01109	0f 85 d5 00 00
	00		 jne	 $LN71@PerformSit

; 3228 : 	{
; 3229 : 		//状态变量
; 3230 : 		bool bTableLocked=IsTableLocked();

  0110f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01112	8b 10		 mov	 edx, DWORD PTR [eax]
  01114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01117	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0111a	ff d0		 call	 eax
  0111c	88 85 6f fb ff
	ff		 mov	 BYTE PTR _bTableLocked$1[ebp], al

; 3231 : 
; 3232 : 		//设置变量
; 3233 : 		if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) == 0)

  01122	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01125	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0112b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0112f	83 e2 10	 and	 edx, 16			; 00000010H
  01132	75 2f		 jne	 SHORT $LN72@PerformSit

; 3234 : 		{
; 3235 : 			m_dwTableOwnerID=pIServerUserItem->GetUserID();

  01134	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  01137	8b 10		 mov	 edx, DWORD PTR [eax]
  01139	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0113c	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0113f	ff d0		 call	 eax
  01141	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01144	89 81 40 07 00
	00		 mov	 DWORD PTR [ecx+1856], eax

; 3236 : 			lstrcpyn(m_szEnterPassword,pUserRule->szPassword,CountArray(m_szEnterPassword));

  0114a	6a 21		 push	 33			; 00000021H
  0114c	8b 45 f0	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  0114f	83 c0 10	 add	 eax, 16			; 00000010H
  01152	50		 push	 eax
  01153	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01156	81 c1 44 07 00
	00		 add	 ecx, 1860		; 00000744H
  0115c	51		 push	 ecx
  0115d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN72@PerformSit:

; 3237 : 		}			
; 3238 : 
; 3239 : 		//私人桌子
; 3240 : 		if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  01163	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01166	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0116c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  01170	83 e2 10	 and	 edx, 16			; 00000010H
  01173	74 4c		 je	 SHORT $LN73@PerformSit

; 3241 : 		{
; 3242 : 			m_bWaitConclude = false;

  01175	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01178	c6 80 40 10 00
	00 00		 mov	 BYTE PTR [eax+4160], 0

; 3243 : 			m_dwPersonalPlayCount = 0;

  0117f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01182	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 3244 : 			m_MapPersonalTableScoreInfo.RemoveAll();

  0118c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0118f	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  01195	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll

; 3245 : 
; 3246 : 			//开始超时
; 3247 : 			SetGameTimer(IDI_PERSONAL_BEFORE_BEGAIN_TIME, m_PersonalTableParameter.dwTimeNotBeginGame * 60 * 1000,1,NULL);

  0119a	6a 00		 push	 0
  0119c	6a 01		 push	 1
  0119e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  011a1	6b 88 90 44 00
	00 3c		 imul	 ecx, DWORD PTR [eax+17552], 60
  011a8	69 d1 e8 03 00
	00		 imul	 edx, ecx, 1000
  011ae	52		 push	 edx
  011af	6a 2b		 push	 43			; 0000002bH
  011b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  011b4	8b 10		 mov	 edx, DWORD PTR [eax]
  011b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  011b9	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  011bf	ff d0		 call	 eax
$LN73@PerformSit:

; 3248 : 		}
; 3249 : 
; 3250 : 		//发送状态
; 3251 : 		if (bTableLocked!=IsTableLocked()) SendTableStatus();

  011c1	0f b6 b5 6f fb
	ff ff		 movzx	 esi, BYTE PTR _bTableLocked$1[ebp]
  011c8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  011cb	8b 10		 mov	 edx, DWORD PTR [eax]
  011cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  011d0	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  011d3	ff d0		 call	 eax
  011d5	0f b6 c8	 movzx	 ecx, al
  011d8	3b f1		 cmp	 esi, ecx
  011da	74 08		 je	 SHORT $LN71@PerformSit
  011dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  011df	e8 00 00 00 00	 call	 ?SendTableStatus@CTableFrame@@QAE_NXZ ; CTableFrame::SendTableStatus
$LN71@PerformSit:

; 3252 : 	}
; 3253 : 
; 3254 : 	if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) == 0)

  011e4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  011e7	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  011ed	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  011f1	83 e2 10	 and	 edx, 16			; 00000010H
  011f4	75 76		 jne	 SHORT $LN75@PerformSit

; 3255 : 	{
; 3256 : 		//启动定时
; 3257 : 		if(IsGameStarted()==false && pIServerUserItem->IsMobileUser() && m_pGameServiceAttrib->wChairCount<MAX_CHAIR && m_pGameServiceOption->wServerType != GAME_GENRE_PERSONAL)

  011f6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  011f9	8b 10		 mov	 edx, DWORD PTR [eax]
  011fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  011fe	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  01201	ff d0		 call	 eax
  01203	0f b6 c8	 movzx	 ecx, al
  01206	85 c9		 test	 ecx, ecx
  01208	75 62		 jne	 SHORT $LN75@PerformSit
  0120a	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0120d	8b 10		 mov	 edx, DWORD PTR [eax]
  0120f	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  01212	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  01218	ff d0		 call	 eax
  0121a	0f b6 c8	 movzx	 ecx, al
  0121d	85 c9		 test	 ecx, ecx
  0121f	74 4b		 je	 SHORT $LN75@PerformSit
  01221	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01224	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  0122a	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  0122e	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  01234	7d 36		 jge	 SHORT $LN75@PerformSit
  01236	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01239	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0123f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  01243	83 fa 10	 cmp	 edx, 16			; 00000010H
  01246	74 24		 je	 SHORT $LN75@PerformSit

; 3258 : 		{
; 3259 : 			SetGameTimer(IDI_START_OVERTIME+wChairID,TIME_OVERTIME,1,wChairID);

  01248	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0124c	50		 push	 eax
  0124d	6a 01		 push	 1
  0124f	68 30 75 00 00	 push	 30000			; 00007530H
  01254	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  01258	83 c1 16	 add	 ecx, 22			; 00000016H
  0125b	51		 push	 ecx
  0125c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0125f	8b 02		 mov	 eax, DWORD PTR [edx]
  01261	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01264	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0126a	ff d2		 call	 edx
$LN75@PerformSit:

; 3260 : 		}
; 3261 : 	}
; 3262 : 
; 3263 : 
; 3264 : 	//关闭创建开始后无人坐桌
; 3265 : 	KillGameTimer(IDI_PERSONAL_AFTER_CREATE_ROOM_TIME);

  0126c	6a 2d		 push	 45			; 0000002dH
  0126e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01271	8b 10		 mov	 edx, DWORD PTR [eax]
  01273	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01276	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  0127c	ff d0		 call	 eax

; 3266 : 
; 3267 : 	m_bBeOut[wChairID]  = false;

  0127e	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  01282	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01285	c6 84 01 14 45
	00 00 00	 mov	 BYTE PTR [ecx+eax+17684], 0

; 3268 : 
; 3269 : 	//事件通知
; 3270 : 	if (m_pITableUserAction!=NULL)

  0128d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01290	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  01297	74 24		 je	 SHORT $LN77@PerformSit

; 3271 : 	{
; 3272 : 		m_pITableUserAction->OnActionUserSitDown(wChairID,pIServerUserItem,false);

  01299	6a 00		 push	 0
  0129b	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0129e	50		 push	 eax
  0129f	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  012a3	51		 push	 ecx
  012a4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  012a7	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  012ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  012b0	8b 10		 mov	 edx, DWORD PTR [eax]
  012b2	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  012b8	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  012bb	ff d0		 call	 eax
$LN77@PerformSit:

; 3273 : 	}
; 3274 : 
; 3275 : 	//事件通知
; 3276 : 	if(m_pIMatchTableAction!=NULL) m_pIMatchTableAction->OnActionUserSitDown(wChairID,pIServerUserItem,false);

  012bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  012c0	83 b8 0c 10 00
	00 00		 cmp	 DWORD PTR [eax+4108], 0
  012c7	74 24		 je	 SHORT $LN78@PerformSit
  012c9	6a 00		 push	 0
  012cb	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  012ce	50		 push	 eax
  012cf	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  012d3	51		 push	 ecx
  012d4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  012d7	8b 82 0c 10 00
	00		 mov	 eax, DWORD PTR [edx+4108]
  012dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  012e0	8b 10		 mov	 edx, DWORD PTR [eax]
  012e2	8b 89 0c 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4108]
  012e8	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  012eb	ff d0		 call	 eax
$LN78@PerformSit:

; 3277 : 
; 3278 : 	if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0 && m_dwPersonalRoomID > 0)

  012ed	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  012f0	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  012f6	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  012fa	83 e2 10	 and	 edx, 16			; 00000010H
  012fd	74 43		 je	 SHORT $LN79@PerformSit
  012ff	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01302	83 b8 30 11 00
	00 00		 cmp	 DWORD PTR [eax+4400], 0
  01309	76 37		 jbe	 SHORT $LN79@PerformSit

; 3279 : 	{
; 3280 : 		m_pIMainServiceFrame->UpdateTablePlayerCount(m_pGameServiceOption->wServerID, m_wTableID, m_wUserCount);

  0130b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0130e	0f b7 48 0e	 movzx	 ecx, WORD PTR [eax+14]
  01312	51		 push	 ecx
  01313	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  01316	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  0131a	50		 push	 eax
  0131b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0131e	8b 91 f0 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4080]
  01324	0f b7 42 06	 movzx	 eax, WORD PTR [edx+6]
  01328	50		 push	 eax
  01329	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0132c	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  01332	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01335	8b 12		 mov	 edx, DWORD PTR [edx]
  01337	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0133d	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  01340	ff d0		 call	 eax
$LN79@PerformSit:

; 3281 : 	}
; 3282 : 
; 3283 : 	return true;

  01342	b0 01		 mov	 al, 1
$LN1@PerformSit:

; 3284 : }

  01344	5f		 pop	 edi
  01345	5e		 pop	 esi
  01346	5b		 pop	 ebx
  01347	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0134a	33 cd		 xor	 ecx, ebp
  0134c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01351	8b e5		 mov	 esp, ebp
  01353	5d		 pop	 ebp
  01354	c2 10 00	 ret	 16			; 00000010H
?PerformSitDownAction@CTableFrame@@UAE_NGPAUIServerUserItem@@PBDK@Z ENDP ; CTableFrame::PerformSitDownAction
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv178 = -248						; size = 4
tv179 = -244						; size = 4
_RequestResult$1 = -176					; size = 129
_pAndroidParameter$2 = -44				; size = 4
_pIAndroidUserItem$3 = -40				; size = 4
_pBindParameter$4 = -36					; size = 4
_pIUserItem$5 = -32					; size = 4
_i$6 = -28						; size = 2
_pAttemperEngineSink$7 = -24				; size = 4
_pITableUserItem$ = -20					; size = 4
_pUserRule$ = -16					; size = 4
_pUserInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wChairID$ = 8						; size = 2
_pIServerUserItem$ = 12					; size = 4
?PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z PROC ; CTableFrame::PerformLookonAction, COMDAT
; _this$ = ecx

; 2764 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f8 00 00
	00		 sub	 esp, 248		; 000000f8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2765 : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00022	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00026	83 fa 10	 cmp	 edx, 16			; 00000010H
  00029	75 1a		 jne	 SHORT $LN5@PerformLoo

; 2766 : 	{
; 2767 : 		SendRequestFailure(pIServerUserItem, TEXT("约战房，不能旁观！"), REQUEST_FAILURE_NORMAL); 

  0002b	6a 00		 push	 0
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IPFJJGIH@?T?$LM?U?$LN?$LH?$LP?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$KD?$KB@
  00032	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00035	50		 push	 eax
  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2768 : 		return false;

  0003e	32 c0		 xor	 al, al
  00040	e9 cd 04 00 00	 jmp	 $LN1@PerformLoo
$LN5@PerformLoo:

; 2769 : 	}
; 2770 : 	//效验参数
; 2771 : 	ASSERT((pIServerUserItem!=NULL)&&(wChairID<m_wChairCount));

  00045	83 7d 0c 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00049	74 0f		 je	 SHORT $LN21@PerformLoo
  0004b	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00056	3b c2		 cmp	 eax, edx
  00058	7c 18		 jl	 SHORT $LN22@PerformLoo
$LN21@PerformLoo:
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z@4JA
  0005f	83 c0 07	 add	 eax, 7
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN22@PerformLoo
  00071	cc		 int	 3
$LN22@PerformLoo:

; 2772 : 	ASSERT((pIServerUserItem->GetTableID()==INVALID_TABLE)&&(pIServerUserItem->GetChairID()==INVALID_CHAIR));

  00072	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00075	8b 10		 mov	 edx, DWORD PTR [eax]
  00077	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007a	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0007d	ff d0		 call	 eax
  0007f	0f b7 c8	 movzx	 ecx, ax
  00082	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00088	75 17		 jne	 SHORT $LN23@PerformLoo
  0008a	8b 55 0c	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0008d	8b 02		 mov	 eax, DWORD PTR [edx]
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00092	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00095	ff d2		 call	 edx
  00097	0f b7 c0	 movzx	 eax, ax
  0009a	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0009f	74 19		 je	 SHORT $LN24@PerformLoo
$LN23@PerformLoo:
  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z@4JA
  000a7	83 c1 08	 add	 ecx, 8
  000aa	51		 push	 ecx
  000ab	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b5	85 c0		 test	 eax, eax
  000b7	74 01		 je	 SHORT $LN24@PerformLoo
  000b9	cc		 int	 3
$LN24@PerformLoo:

; 2773 : 
; 2774 : 	//变量定义
; 2775 : 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  000ba	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000bd	8b 10		 mov	 edx, DWORD PTR [eax]
  000bf	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c2	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000c5	ff d0		 call	 eax
  000c7	89 45 f4	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 2776 : 	tagUserRule * pUserRule=pIServerUserItem->GetUserRule();

  000ca	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000cd	8b 10		 mov	 edx, DWORD PTR [eax]
  000cf	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d2	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000d5	ff d0		 call	 eax
  000d7	89 45 f0	 mov	 DWORD PTR _pUserRule$[ebp], eax

; 2777 : 	IServerUserItem * pITableUserItem=GetTableUserItem(wChairID);

  000da	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000de	50		 push	 eax
  000df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000ed	ff d0		 call	 eax
  000ef	89 45 ec	 mov	 DWORD PTR _pITableUserItem$[ebp], eax

; 2778 : 
; 2779 : 	//游戏状态
; 2780 : 	if ((m_bGameStarted==false)&&(pIServerUserItem->GetMasterOrder()==0L))

  000f2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  000f9	85 c9		 test	 ecx, ecx
  000fb	75 31		 jne	 SHORT $LN6@PerformLoo
  000fd	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00100	8b 10		 mov	 edx, DWORD PTR [eax]
  00102	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00105	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0010b	ff d0		 call	 eax
  0010d	0f b6 c8	 movzx	 ecx, al
  00110	85 c9		 test	 ecx, ecx
  00112	75 1a		 jne	 SHORT $LN6@PerformLoo

; 2781 : 	{
; 2782 : 		SendRequestFailure(pIServerUserItem,TEXT("游戏还没有开始，不能旁观此游戏桌！"),REQUEST_FAILURE_NORMAL);

  00114	6a 00		 push	 0
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@MNPNNHIG@?S?N?O?$LH?$LL?$LJ?C?$LL?S?P?$LP?$KK?J?$LM?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?$LE?K?S?N?O?$LH?W@
  0011b	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0011e	50		 push	 eax
  0011f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2783 : 		return false;

  00127	32 c0		 xor	 al, al
  00129	e9 e4 03 00 00	 jmp	 $LN1@PerformLoo
$LN6@PerformLoo:

; 2784 : 	}
; 2785 : 
; 2786 : 	//模拟处理
; 2787 : 	if (m_pGameServiceAttrib->wChairCount < MAX_CHAIR && pIServerUserItem->IsAndroidUser()==false)

  0012e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00131	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00137	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  0013b	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00141	0f 8d 5c 01 00
	00		 jge	 $LN7@PerformLoo
  00147	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0014a	8b 10		 mov	 edx, DWORD PTR [eax]
  0014c	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0014f	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00155	ff d0		 call	 eax
  00157	0f b6 c8	 movzx	 ecx, al
  0015a	85 c9		 test	 ecx, ecx
  0015c	0f 85 41 01 00
	00		 jne	 $LN7@PerformLoo

; 2788 : 	{
; 2789 : 		//定义变量
; 2790 : 		CAttemperEngineSink * pAttemperEngineSink=(CAttemperEngineSink *)m_pIMainServiceFrame;

  00162	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00165	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0016b	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv179[ebp], ecx
  00171	83 bd 0c ff ff
	ff 00		 cmp	 DWORD PTR tv179[ebp], 0
  00178	74 11		 je	 SHORT $LN25@PerformLoo
  0017a	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv179[ebp]
  00180	83 ea 04	 sub	 edx, 4
  00183	89 95 08 ff ff
	ff		 mov	 DWORD PTR tv178[ebp], edx
  00189	eb 0a		 jmp	 SHORT $LN26@PerformLoo
$LN25@PerformLoo:
  0018b	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN26@PerformLoo:
  00195	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  0019b	89 45 e8	 mov	 DWORD PTR _pAttemperEngineSink$7[ebp], eax

; 2791 : 
; 2792 : 		//查找机器
; 2793 : 		for (WORD i=0; i<m_pGameServiceAttrib->wChairCount; i++)

  0019e	33 c0		 xor	 eax, eax
  001a0	66 89 45 e4	 mov	 WORD PTR _i$6[ebp], ax
  001a4	eb 0c		 jmp	 SHORT $LN4@PerformLoo
$LN2@PerformLoo:
  001a6	66 8b 45 e4	 mov	 ax, WORD PTR _i$6[ebp]
  001aa	66 83 c0 01	 add	 ax, 1
  001ae	66 89 45 e4	 mov	 WORD PTR _i$6[ebp], ax
$LN4@PerformLoo:
  001b2	0f b7 45 e4	 movzx	 eax, WORD PTR _i$6[ebp]
  001b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	8b 91 ec 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4076]
  001bf	0f b7 4a 02	 movzx	 ecx, WORD PTR [edx+2]
  001c3	3b c1		 cmp	 eax, ecx
  001c5	0f 8d d8 00 00
	00		 jge	 $LN7@PerformLoo

; 2794 : 		{
; 2795 : 			//获取用户
; 2796 : 			IServerUserItem *pIUserItem=m_TableUserItemArray[i];

  001cb	0f b7 45 e4	 movzx	 eax, WORD PTR _i$6[ebp]
  001cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d2	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  001d9	89 55 e0	 mov	 DWORD PTR _pIUserItem$5[ebp], edx

; 2797 : 			if(pIUserItem==NULL) continue;

  001dc	83 7d e0 00	 cmp	 DWORD PTR _pIUserItem$5[ebp], 0
  001e0	75 02		 jne	 SHORT $LN8@PerformLoo
  001e2	eb c2		 jmp	 SHORT $LN2@PerformLoo
$LN8@PerformLoo:

; 2798 : 			if(pIUserItem->IsAndroidUser()==false)break;

  001e4	8b 45 e0	 mov	 eax, DWORD PTR _pIUserItem$5[ebp]
  001e7	8b 10		 mov	 edx, DWORD PTR [eax]
  001e9	8b 4d e0	 mov	 ecx, DWORD PTR _pIUserItem$5[ebp]
  001ec	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  001f2	ff d0		 call	 eax
  001f4	0f b6 c8	 movzx	 ecx, al
  001f7	85 c9		 test	 ecx, ecx
  001f9	75 05		 jne	 SHORT $LN9@PerformLoo
  001fb	e9 a3 00 00 00	 jmp	 $LN7@PerformLoo
$LN9@PerformLoo:

; 2799 : 
; 2800 : 			//获取参数
; 2801 : 			tagBindParameter * pBindParameter=pAttemperEngineSink->GetBindParameter(pIUserItem->GetBindIndex());

  00200	8b 45 e0	 mov	 eax, DWORD PTR _pIUserItem$5[ebp]
  00203	8b 10		 mov	 edx, DWORD PTR [eax]
  00205	8b 4d e0	 mov	 ecx, DWORD PTR _pIUserItem$5[ebp]
  00208	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0020b	ff d0		 call	 eax
  0020d	0f b7 c8	 movzx	 ecx, ax
  00210	51		 push	 ecx
  00211	8b 55 e8	 mov	 edx, DWORD PTR _pAttemperEngineSink$7[ebp]
  00214	8b 02		 mov	 eax, DWORD PTR [edx]
  00216	8b 4d e8	 mov	 ecx, DWORD PTR _pAttemperEngineSink$7[ebp]
  00219	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  0021c	ff d2		 call	 edx
  0021e	89 45 dc	 mov	 DWORD PTR _pBindParameter$4[ebp], eax

; 2802 : 			IAndroidUserItem * pIAndroidUserItem=m_pIAndroidUserManager->SearchAndroidUserItem(pIUserItem->GetUserID(),pBindParameter->dwSocketID);

  00221	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$4[ebp]
  00224	8b 08		 mov	 ecx, DWORD PTR [eax]
  00226	51		 push	 ecx
  00227	8b 55 e0	 mov	 edx, DWORD PTR _pIUserItem$5[ebp]
  0022a	8b 02		 mov	 eax, DWORD PTR [edx]
  0022c	8b 4d e0	 mov	 ecx, DWORD PTR _pIUserItem$5[ebp]
  0022f	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00232	ff d2		 call	 edx
  00234	50		 push	 eax
  00235	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00238	8b 88 d0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4048]
  0023e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00241	8b 01		 mov	 eax, DWORD PTR [ecx]
  00243	8b 8a d0 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4048]
  00249	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0024c	ff d2		 call	 edx
  0024e	89 45 d8	 mov	 DWORD PTR _pIAndroidUserItem$3[ebp], eax

; 2803 : 			tagAndroidParameter * pAndroidParameter=pIAndroidUserItem->GetAndroidParameter();

  00251	8b 45 d8	 mov	 eax, DWORD PTR _pIAndroidUserItem$3[ebp]
  00254	8b 10		 mov	 edx, DWORD PTR [eax]
  00256	8b 4d d8	 mov	 ecx, DWORD PTR _pIAndroidUserItem$3[ebp]
  00259	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0025c	ff d0		 call	 eax
  0025e	89 45 d4	 mov	 DWORD PTR _pAndroidParameter$2[ebp], eax

; 2804 : 
; 2805 : 			//模拟判断
; 2806 : 			if((pAndroidParameter->dwServiceMode&ANDROID_SIMULATE)!=0
; 2807 : 				&& (pAndroidParameter->dwServiceMode&ANDROID_PASSIVITY)==0
; 2808 : 				&& (pAndroidParameter->dwServiceMode&ANDROID_INITIATIVE)==0)

  00261	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidParameter$2[ebp]
  00264	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00267	83 e1 01	 and	 ecx, 1
  0026a	74 30		 je	 SHORT $LN10@PerformLoo
  0026c	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidParameter$2[ebp]
  0026f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00272	83 e1 02	 and	 ecx, 2
  00275	75 25		 jne	 SHORT $LN10@PerformLoo
  00277	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidParameter$2[ebp]
  0027a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0027d	83 e1 04	 and	 ecx, 4
  00280	75 1a		 jne	 SHORT $LN10@PerformLoo

; 2809 : 			{
; 2810 : 				SendRequestFailure(pIServerUserItem,TEXT("抱歉，当前游戏桌子禁止用户旁观！"),REQUEST_FAILURE_NORMAL);

  00282	6a 00		 push	 0
  00284	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@EHMDHMJJ@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@
  00289	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0028c	50		 push	 eax
  0028d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00290	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2811 : 				return false;

  00295	32 c0		 xor	 al, al
  00297	e9 76 02 00 00	 jmp	 $LN1@PerformLoo
$LN10@PerformLoo:

; 2812 : 			}
; 2813 : 
; 2814 : 			break;

  0029c	eb 05		 jmp	 SHORT $LN7@PerformLoo

; 2815 : 		}

  0029e	e9 03 ff ff ff	 jmp	 $LN2@PerformLoo
$LN7@PerformLoo:

; 2816 : 	}
; 2817 : 
; 2818 : 
; 2819 : 	//旁观判断
; 2820 : 	if (CServerRule::IsAllowAndroidSimulate(m_pGameServiceOption->dwServerRule)==true
; 2821 : 		&& (CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule)==false))

  002a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a6	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  002ac	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002af	52		 push	 edx
  002b0	e8 00 00 00 00	 call	 ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidSimulate
  002b5	83 c4 04	 add	 esp, 4
  002b8	0f b6 c0	 movzx	 eax, al
  002bb	83 f8 01	 cmp	 eax, 1
  002be	75 54		 jne	 SHORT $LN11@PerformLoo
  002c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002c3	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  002c9	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002cc	52		 push	 edx
  002cd	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  002d2	83 c4 04	 add	 esp, 4
  002d5	0f b6 c0	 movzx	 eax, al
  002d8	85 c0		 test	 eax, eax
  002da	75 38		 jne	 SHORT $LN11@PerformLoo

; 2822 : 	{
; 2823 : 		if ((pITableUserItem!=NULL)&&(pITableUserItem->IsAndroidUser()==true))

  002dc	83 7d ec 00	 cmp	 DWORD PTR _pITableUserItem$[ebp], 0
  002e0	74 32		 je	 SHORT $LN11@PerformLoo
  002e2	8b 45 ec	 mov	 eax, DWORD PTR _pITableUserItem$[ebp]
  002e5	8b 10		 mov	 edx, DWORD PTR [eax]
  002e7	8b 4d ec	 mov	 ecx, DWORD PTR _pITableUserItem$[ebp]
  002ea	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  002f0	ff d0		 call	 eax
  002f2	0f b6 c8	 movzx	 ecx, al
  002f5	83 f9 01	 cmp	 ecx, 1
  002f8	75 1a		 jne	 SHORT $LN11@PerformLoo

; 2824 : 		{
; 2825 : 			SendRequestFailure(pIServerUserItem,TEXT("抱歉，当前游戏房间禁止用户旁观！"),REQUEST_FAILURE_NORMAL);

  002fa	6a 00		 push	 0
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NJNGCIAH@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@
  00301	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00304	50		 push	 eax
  00305	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00308	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2826 : 			return false;

  0030d	32 c0		 xor	 al, al
  0030f	e9 fe 01 00 00	 jmp	 $LN1@PerformLoo
$LN11@PerformLoo:

; 2827 : 		}
; 2828 : 	}
; 2829 : 
; 2830 : 	//状态判断
; 2831 : 	if ((CServerRule::IsForfendGameLookon(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0))

  00314	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00317	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0031d	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00320	52		 push	 edx
  00321	e8 00 00 00 00	 call	 ?IsForfendGameLookon@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameLookon
  00326	83 c4 04	 add	 esp, 4
  00329	0f b6 c0	 movzx	 eax, al
  0032c	83 f8 01	 cmp	 eax, 1
  0032f	75 31		 jne	 SHORT $LN13@PerformLoo
  00331	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00334	8b 10		 mov	 edx, DWORD PTR [eax]
  00336	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00339	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0033f	ff d0		 call	 eax
  00341	0f b6 c8	 movzx	 ecx, al
  00344	85 c9		 test	 ecx, ecx
  00346	75 1a		 jne	 SHORT $LN13@PerformLoo

; 2832 : 	{
; 2833 : 		SendRequestFailure(pIServerUserItem,TEXT("抱歉，当前游戏房间禁止用户旁观！"),REQUEST_FAILURE_NORMAL);

  00348	6a 00		 push	 0
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NJNGCIAH@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?E?T?$LJ?$NL?$KD@
  0034f	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00352	50		 push	 eax
  00353	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00356	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2834 : 		return false;

  0035b	32 c0		 xor	 al, al
  0035d	e9 b0 01 00 00	 jmp	 $LN1@PerformLoo
$LN13@PerformLoo:

; 2835 : 	}
; 2836 : 
; 2837 : 	//椅子判断
; 2838 : 	if ((pITableUserItem==NULL)&&(pIServerUserItem->GetMasterOrder()==0L))

  00362	83 7d ec 00	 cmp	 DWORD PTR _pITableUserItem$[ebp], 0
  00366	75 31		 jne	 SHORT $LN14@PerformLoo
  00368	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0036b	8b 10		 mov	 edx, DWORD PTR [eax]
  0036d	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00370	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00376	ff d0		 call	 eax
  00378	0f b6 c8	 movzx	 ecx, al
  0037b	85 c9		 test	 ecx, ecx
  0037d	75 1a		 jne	 SHORT $LN14@PerformLoo

; 2839 : 	{
; 2840 : 		SendRequestFailure(pIServerUserItem,TEXT("您所请求的位置没有游戏玩家，无法旁观此游戏桌"),REQUEST_FAILURE_NORMAL);

  0037f	6a 00		 push	 0
  00381	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@JOFFIFMN@?D?z?K?y?G?k?G?s?$LF?D?N?$LL?V?C?C?$LL?S?P?S?N?O?$LH?M?f?$LM?R?$KD?$KM?N?$NO?$LH@
  00386	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00389	50		 push	 eax
  0038a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0038d	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2841 : 		return false;

  00392	32 c0		 xor	 al, al
  00394	e9 79 01 00 00	 jmp	 $LN1@PerformLoo
$LN14@PerformLoo:

; 2842 : 	}
; 2843 : 
; 2844 : 	//密码效验
; 2845 : 	if ((IsTableLocked() == true) && (pIServerUserItem->GetMasterOrder() == 0L) && (lstrcmp(pUserRule->szPassword, m_szEnterPassword) != 0))

  00399	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0039c	8b 10		 mov	 edx, DWORD PTR [eax]
  0039e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a1	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  003a4	ff d0		 call	 eax
  003a6	0f b6 c8	 movzx	 ecx, al
  003a9	83 f9 01	 cmp	 ecx, 1
  003ac	75 4b		 jne	 SHORT $LN15@PerformLoo
  003ae	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003b1	8b 10		 mov	 edx, DWORD PTR [eax]
  003b3	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003b6	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  003bc	ff d0		 call	 eax
  003be	0f b6 c8	 movzx	 ecx, al
  003c1	85 c9		 test	 ecx, ecx
  003c3	75 34		 jne	 SHORT $LN15@PerformLoo
  003c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c8	05 44 07 00 00	 add	 eax, 1860		; 00000744H
  003cd	50		 push	 eax
  003ce	8b 4d f0	 mov	 ecx, DWORD PTR _pUserRule$[ebp]
  003d1	83 c1 10	 add	 ecx, 16			; 00000010H
  003d4	51		 push	 ecx
  003d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  003db	85 c0		 test	 eax, eax
  003dd	74 1a		 je	 SHORT $LN15@PerformLoo

; 2846 : 	{
; 2847 : 		SendRequestFailure(pIServerUserItem, TEXT("游戏桌进入密码不正确，不能旁观游戏！"), REQUEST_FAILURE_PASSWORD);

  003df	6a 03		 push	 3
  003e1	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@GJHCGP@?S?N?O?$LH?W?$MA?$LN?x?H?k?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?$LC?$LL?D?$NM?E?T?$LJ?$NL?S@
  003e6	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003e9	50		 push	 eax
  003ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ed	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2848 : 		return false;

  003f2	32 c0		 xor	 al, al
  003f4	e9 19 01 00 00	 jmp	 $LN1@PerformLoo
$LN15@PerformLoo:

; 2849 : 	}
; 2850 : 	
; 2851 : 	//扩展效验
; 2852 : 	if (m_pITableUserRequest!=NULL)

  003f9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003fc	83 b8 d8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4056], 0
  00403	74 68		 je	 SHORT $LN16@PerformLoo

; 2853 : 	{
; 2854 : 		//变量定义
; 2855 : 		tagRequestResult RequestResult;
; 2856 : 		ZeroMemory(&RequestResult,sizeof(RequestResult));

  00405	68 81 00 00 00	 push	 129			; 00000081H
  0040a	6a 00		 push	 0
  0040c	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _RequestResult$1[ebp]
  00412	50		 push	 eax
  00413	e8 00 00 00 00	 call	 _memset
  00418	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2857 : 
; 2858 : 		//坐下效验
; 2859 : 		if (m_pITableUserRequest->OnUserRequestLookon(wChairID,pIServerUserItem,RequestResult)==false)

  0041b	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _RequestResult$1[ebp]
  00421	50		 push	 eax
  00422	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00425	51		 push	 ecx
  00426	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  0042a	52		 push	 edx
  0042b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0042e	8b 88 d8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4056]
  00434	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00437	8b 01		 mov	 eax, DWORD PTR [ecx]
  00439	8b 8a d8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4056]
  0043f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00442	ff d2		 call	 edx
  00444	0f b6 c0	 movzx	 eax, al
  00447	85 c0		 test	 eax, eax
  00449	75 22		 jne	 SHORT $LN16@PerformLoo

; 2860 : 		{
; 2861 : 			//发送信息
; 2862 : 			SendRequestFailure(pIServerUserItem,RequestResult.szFailureReason,RequestResult.cbFailureCode);

  0044b	0f b6 85 50 ff
	ff ff		 movzx	 eax, BYTE PTR _RequestResult$1[ebp]
  00452	50		 push	 eax
  00453	8d 8d 51 ff ff
	ff		 lea	 ecx, DWORD PTR _RequestResult$1[ebp+1]
  00459	51		 push	 ecx
  0045a	8b 55 0c	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0045d	52		 push	 edx
  0045e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00461	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 2863 : 
; 2864 : 			return false;

  00466	32 c0		 xor	 al, al
  00468	e9 a5 00 00 00	 jmp	 $LN1@PerformLoo
$LN16@PerformLoo:

; 2865 : 		}
; 2866 : 	}
; 2867 : 
; 2868 : 	//设置用户
; 2869 : 	m_LookonUserItemArray.Add(pIServerUserItem);

  0046d	8d 45 0c	 lea	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00470	50		 push	 eax
  00471	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00474	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  0047a	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEHABQAUIServerUserItem@@@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::Add

; 2870 : 
; 2871 : 	//用户状态
; 2872 : 	pIServerUserItem->SetClientReady(false);

  0047f	6a 00		 push	 0
  00481	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00484	8b 10		 mov	 edx, DWORD PTR [eax]
  00486	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00489	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  0048f	ff d0		 call	 eax

; 2873 : 	pIServerUserItem->SetUserStatus(US_LOOKON,m_wTableID,wChairID);

  00491	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00495	50		 push	 eax
  00496	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00499	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  0049d	52		 push	 edx
  0049e	6a 04		 push	 4
  004a0	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004a3	8b 10		 mov	 edx, DWORD PTR [eax]
  004a5	8b 4d 0c	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  004a8	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  004ae	ff d0		 call	 eax

; 2874 : 
; 2875 : 	//事件通知
; 2876 : 	if (m_pITableUserAction!=NULL)

  004b0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004b3	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  004ba	74 24		 je	 SHORT $LN18@PerformLoo

; 2877 : 	{
; 2878 : 		m_pITableUserAction->OnActionUserSitDown(wChairID,pIServerUserItem,true);

  004bc	6a 01		 push	 1
  004be	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004c1	50		 push	 eax
  004c2	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  004c6	51		 push	 ecx
  004c7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004ca	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  004d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004d3	8b 10		 mov	 edx, DWORD PTR [eax]
  004d5	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  004db	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  004de	ff d0		 call	 eax
$LN18@PerformLoo:

; 2879 : 	}
; 2880 : 
; 2881 : 	//事件通知
; 2882 : 	if(m_pIMatchTableAction!=NULL) m_pIMatchTableAction->OnActionUserSitDown(wChairID,pIServerUserItem,true);

  004e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004e3	83 b8 0c 10 00
	00 00		 cmp	 DWORD PTR [eax+4108], 0
  004ea	74 24		 je	 SHORT $LN19@PerformLoo
  004ec	6a 01		 push	 1
  004ee	8b 45 0c	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004f1	50		 push	 eax
  004f2	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  004f6	51		 push	 ecx
  004f7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004fa	8b 82 0c 10 00
	00		 mov	 eax, DWORD PTR [edx+4108]
  00500	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00503	8b 10		 mov	 edx, DWORD PTR [eax]
  00505	8b 89 0c 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4108]
  0050b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0050e	ff d0		 call	 eax
$LN19@PerformLoo:

; 2883 : 
; 2884 : 	return true;

  00510	b0 01		 mov	 al, 1
$LN1@PerformLoo:

; 2885 : }

  00512	5f		 pop	 edi
  00513	5e		 pop	 esi
  00514	5b		 pop	 ebx
  00515	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00518	33 cd		 xor	 ecx, ebp
  0051a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0051f	8b e5		 mov	 esp, ebp
  00521	5d		 pop	 ebp
  00522	c2 08 00	 ret	 8
?PerformLookonAction@CTableFrame@@UAE_NGPAUIServerUserItem@@@Z ENDP ; CTableFrame::PerformLookonAction
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z
_TEXT	SEGMENT
tv1162 = -148						; size = 8
tv954 = -148						; size = 8
tv1159 = -140						; size = 8
tv1049 = -140						; size = 4
tv951 = -140						; size = 8
tv1106 = -136						; size = 4
tv1048 = -136						; size = 4
tv898 = -136						; size = 4
tv449 = -136						; size = 4
tv271 = -136						; size = 4
_i$2 = -68						; size = 4
_pszMessage$3 = -64					; size = 4
_i$4 = -60						; size = 4
_i$5 = -56						; size = 4
_wTableUserCount$6 = -52				; size = 2
_bTableStarted$7 = -46					; size = 1
_bTableLocked$8 = -45					; size = 1
_strMessage$9 = -44					; size = 4
_cbUserMatchStatus$10 = -38				; size = 1
_cbUserStatus$11 = -37					; size = 1
_cbUserMatchStatus$12 = -36				; size = 1
_cbUserStatus$13 = -35					; size = 1
_cbConcludeReason$14 = -34				; size = 1
_bTreasureDB$ = -33					; size = 1
_dwTimeNow$ = -32					; size = 4
_pITableUserItem$ = -28					; size = 4
_cbUserStatus$ = -21					; size = 1
_wChairID$ = -20					; size = 2
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pIServerUserItem$ = 8					; size = 4
_bInitiative$ = 12					; size = 1
?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z PROC ; CTableFrame::PerformStandUpAction, COMDAT
; _this$ = ecx

; 2471 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2472 : 	//效验参数
; 2473 : 	if (pIServerUserItem == NULL)

  0002e	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00032	75 07		 jne	 SHORT $LN11@PerformSta

; 2474 : 	{
; 2475 : 		return false;

  00034	32 c0		 xor	 al, al
  00036	e9 46 0d 00 00	 jmp	 $LN1@PerformSta
$LN11@PerformSta:

; 2476 : 	}
; 2477 : 
; 2478 : 	if (pIServerUserItem->GetTableID() != m_wTableID)

  0003b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0003e	8b 10		 mov	 edx, DWORD PTR [eax]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00043	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00046	ff d0		 call	 eax
  00048	0f b7 c8	 movzx	 ecx, ax
  0004b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00052	3b c8		 cmp	 ecx, eax
  00054	74 07		 je	 SHORT $LN12@PerformSta

; 2479 : 	{
; 2480 : 		return false;

  00056	32 c0		 xor	 al, al
  00058	e9 24 0d 00 00	 jmp	 $LN1@PerformSta
$LN12@PerformSta:

; 2481 : 	}
; 2482 : 
; 2483 : 	if (pIServerUserItem->GetChairID() > m_wChairCount)

  0005d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00065	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00068	ff d0		 call	 eax
  0006a	0f b7 c8	 movzx	 ecx, ax
  0006d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00070	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00074	3b c8		 cmp	 ecx, eax
  00076	7e 07		 jle	 SHORT $LN13@PerformSta

; 2484 : 	{
; 2485 : 		return false;

  00078	32 c0		 xor	 al, al
  0007a	e9 02 0d 00 00	 jmp	 $LN1@PerformSta
$LN13@PerformSta:

; 2486 : 	}
; 2487 : 
; 2488 : 	//用户属性
; 2489 : 	WORD wChairID=pIServerUserItem->GetChairID();

  0007f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00082	8b 10		 mov	 edx, DWORD PTR [eax]
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00087	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  0008a	ff d0		 call	 eax
  0008c	66 89 45 ec	 mov	 WORD PTR _wChairID$[ebp], ax

; 2490 : 	BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  00090	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00093	8b 10		 mov	 edx, DWORD PTR [eax]
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00098	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0009b	ff d0		 call	 eax
  0009d	88 45 eb	 mov	 BYTE PTR _cbUserStatus$[ebp], al

; 2491 : 	IServerUserItem * pITableUserItem=GetTableUserItem(wChairID);

  000a0	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000aa	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000b3	ff d0		 call	 eax
  000b5	89 45 e4	 mov	 DWORD PTR _pITableUserItem$[ebp], eax

; 2492 : 
; 2493 : 	DWORD dwTimeNow = (DWORD)time(NULL);

  000b8	6a 00		 push	 0
  000ba	e8 00 00 00 00	 call	 _time
  000bf	83 c4 04	 add	 esp, 4
  000c2	89 45 e0	 mov	 DWORD PTR _dwTimeNow$[ebp], eax

; 2494 : 
; 2495 : 
; 2496 : 	//判断是否是金币场
; 2497 : 	bool bTreasureDB = false;

  000c5	c6 45 df 00	 mov	 BYTE PTR _bTreasureDB$[ebp], 0

; 2498 : 	if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  000c9	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  000ce	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000d7	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  000dd	51		 push	 ecx
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  000e4	85 c0		 test	 eax, eax
  000e6	75 04		 jne	 SHORT $LN14@PerformSta

; 2499 : 	{
; 2500 : 		bTreasureDB = true;

  000e8	c6 45 df 01	 mov	 BYTE PTR _bTreasureDB$[ebp], 1
$LN14@PerformSta:

; 2501 : 	}
; 2502 : 
; 2503 : 	//游戏用户
; 2504 : 	if (
; 2505 : 		(
; 2506 : 		(m_bGameStarted==true)&&
; 2507 : 		((cbUserStatus==US_PLAYING)||(cbUserStatus==US_OFFLINE)) &&
; 2508 : 		m_pGameServiceOption->wServerType!=GAME_GENRE_PERSONAL
; 2509 : 		) 
; 2510 : 		|| (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && cbUserStatus >= US_PLAYING)
; 2511 : 		||

  000ec	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ef	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  000f3	83 f9 01	 cmp	 ecx, 1
  000f6	75 28		 jne	 SHORT $LN17@PerformSta
  000f8	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  000fc	83 f8 05	 cmp	 eax, 5
  000ff	74 09		 je	 SHORT $LN18@PerformSta
  00101	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00105	83 f8 06	 cmp	 eax, 6
  00108	75 16		 jne	 SHORT $LN17@PerformSta
$LN18@PerformSta:
  0010a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00113	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00117	83 fa 10	 cmp	 edx, 16			; 00000010H
  0011a	0f 85 af 01 00
	00		 jne	 $LN16@PerformSta
$LN17@PerformSta:
  00120	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00123	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00129	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0012d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00130	75 0d		 jne	 SHORT $LN19@PerformSta
  00132	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00136	83 f8 05	 cmp	 eax, 5
  00139	0f 8d 90 01 00
	00		 jge	 $LN16@PerformSta
$LN19@PerformSta:
  0013f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00148	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv898[ebp], ecx
  0014e	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv898[ebp]
  00154	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv898[ebp]
  0015a	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0015d	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  00160	0f 84 8e 00 00
	00		 je	 $LN21@PerformSta
  00166	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00169	8b 10		 mov	 edx, DWORD PTR [eax]
  0016b	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0016e	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00174	ff d0		 call	 eax
  00176	8b f0		 mov	 esi, eax
  00178	8b fa		 mov	 edi, edx
  0017a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	8b 89 f0 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4080]
  00183	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00186	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  0018c	99		 cdq
  0018d	52		 push	 edx
  0018e	50		 push	 eax
  0018f	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00192	50		 push	 eax
  00193	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00196	51		 push	 ecx
  00197	e8 00 00 00 00	 call	 __allmul
  0019c	8b c8		 mov	 ecx, eax
  0019e	8b da		 mov	 ebx, edx
  001a0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001a3	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  001a9	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  001ac	99		 cdq
  001ad	52		 push	 edx
  001ae	50		 push	 eax
  001af	53		 push	 ebx
  001b0	51		 push	 ecx
  001b1	e8 00 00 00 00	 call	 __alldiv
  001b6	89 b5 74 ff ff
	ff		 mov	 DWORD PTR tv951[ebp], esi
  001bc	89 bd 78 ff ff
	ff		 mov	 DWORD PTR tv951[ebp+4], edi
  001c2	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv954[ebp], eax
  001c8	89 95 70 ff ff
	ff		 mov	 DWORD PTR tv954[ebp+4], edx
  001ce	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv951[ebp+4]
  001d4	3b 8d 70 ff ff
	ff		 cmp	 ecx, DWORD PTR tv954[ebp+4]
  001da	7c 18		 jl	 SHORT $LN21@PerformSta
  001dc	7f 0e		 jg	 SHORT $LN74@PerformSta
  001de	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv951[ebp]
  001e4	3b 95 6c ff ff
	ff		 cmp	 edx, DWORD PTR tv954[ebp]
  001ea	72 08		 jb	 SHORT $LN21@PerformSta
$LN74@PerformSta:
  001ec	0f b6 45 df	 movzx	 eax, BYTE PTR _bTreasureDB$[ebp]
  001f0	85 c0		 test	 eax, eax
  001f2	75 0c		 jne	 SHORT $LN20@PerformSta
$LN21@PerformSta:
  001f4	0f b6 45 df	 movzx	 eax, BYTE PTR _bTreasureDB$[ebp]
  001f8	85 c0		 test	 eax, eax
  001fa	0f 85 8a 02 00
	00		 jne	 $LN15@PerformSta
$LN20@PerformSta:
  00200	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00203	0f b6 88 87 44
	00 00		 movzx	 ecx, BYTE PTR [eax+17543]
  0020a	85 c9		 test	 ecx, ecx
  0020c	75 26		 jne	 SHORT $LN23@PerformSta
  0020e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00211	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00218	75 1a		 jne	 SHORT $LN23@PerformSta
  0021a	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  0021e	83 f8 02	 cmp	 eax, 2
  00221	0f 8c 63 02 00
	00		 jl	 $LN15@PerformSta
  00227	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  0022b	83 f8 05	 cmp	 eax, 5
  0022e	0f 8f 56 02 00
	00		 jg	 $LN15@PerformSta
$LN23@PerformSta:
  00234	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00237	0f b6 88 34 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4404]
  0023e	85 c9		 test	 ecx, ecx
  00240	0f 85 44 02 00
	00		 jne	 $LN15@PerformSta
  00246	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00249	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0024f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00253	83 fa 10	 cmp	 edx, 16			; 00000010H
  00256	0f 85 2e 02 00
	00		 jne	 $LN15@PerformSta
  0025c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0025f	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00266	75 67		 jne	 SHORT $LN16@PerformSta
  00268	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0026b	8b 10		 mov	 edx, DWORD PTR [eax]
  0026d	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00270	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00273	ff d0		 call	 eax
  00275	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	39 81 40 07 00
	00		 cmp	 DWORD PTR [ecx+1856], eax
  0027e	0f 85 06 02 00
	00		 jne	 $LN15@PerformSta
  00284	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00287	83 b8 18 10 00
	00 00		 cmp	 DWORD PTR [eax+4120], 0
  0028e	74 14		 je	 SHORT $LN26@PerformSta
  00290	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00293	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00296	8b 90 18 10 00
	00		 mov	 edx, DWORD PTR [eax+4120]
  0029c	3b 91 20 10 00
	00		 cmp	 edx, DWORD PTR [ecx+4128]
  002a2	76 2b		 jbe	 SHORT $LN16@PerformSta
$LN26@PerformSta:
  002a4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002a7	83 b8 1c 10 00
	00 00		 cmp	 DWORD PTR [eax+4124], 0
  002ae	0f 84 d6 01 00
	00		 je	 $LN15@PerformSta
  002b4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002b7	8b 4d e0	 mov	 ecx, DWORD PTR _dwTimeNow$[ebp]
  002ba	2b 88 30 10 00
	00		 sub	 ecx, DWORD PTR [eax+4144]
  002c0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  002c3	39 8a 1c 10 00
	00		 cmp	 DWORD PTR [edx+4124], ecx
  002c9	0f 87 bb 01 00
	00		 ja	 $LN15@PerformSta
$LN16@PerformSta:

; 2512 : 		(
; 2513 : 		((m_pGameServiceOption->lMinTableScore!=0L) && (pIServerUserItem->GetUserScore()>=m_pGameServiceOption->lMinTableScore * m_lCellScore/m_pGameServiceOption->lCellScore && bTreasureDB ) || !bTreasureDB) &&
; 2514 : 		(m_PersonalTableParameter.cbIsJoinGame || m_dwPersonalPlayCount != 0 || (cbUserStatus >= US_SIT && cbUserStatus <= US_PLAYING)) && !m_bIsDissumGame &&//如果房主参与游戏,且不是强制解散游戏
; 2515 : 		(m_pGameServiceOption->wServerType==GAME_GENRE_PERSONAL && (m_dwPersonalPlayCount != 0  || (m_dwTableOwnerID == pIServerUserItem->GetUserID() && ((m_dwDrawCountLimit!=0 && m_dwDrawCountLimit <= m_dwPersonalPlayCount) ||
; 2516 : 		(m_dwDrawTimeLimit != 0 && m_dwDrawTimeLimit <= dwTimeNow - m_dwTimeBegin)) )))
; 2517 : 		)
; 2518 : 		)
; 2519 : 	{	
; 2520 : 		//比赛类型，约战房间类型
; 2521 : 		if((m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)||

  002cf	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002d2	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  002d8	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  002dc	83 fa 04	 cmp	 edx, 4
  002df	75 16		 jne	 SHORT $LN29@PerformSta
  002e1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002e4	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  002ea	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  002ee	83 fa 01	 cmp	 edx, 1
  002f1	0f 84 b9 00 00
	00		 je	 $LN28@PerformSta
$LN29@PerformSta:
  002f7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002fa	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00300	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00304	83 fa 10	 cmp	 edx, 16			; 00000010H
  00307	0f 85 ea 00 00
	00		 jne	 $LN27@PerformSta
  0030d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00310	0f b6 88 87 44
	00 00		 movzx	 ecx, BYTE PTR [eax+17543]
  00317	85 c9		 test	 ecx, ecx
  00319	0f 85 91 00 00
	00		 jne	 $LN28@PerformSta
  0031f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00322	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00329	0f 84 c8 00 00
	00		 je	 $LN27@PerformSta
  0032f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00332	0f b6 88 d0 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18128]
  00339	85 c9		 test	 ecx, ecx
  0033b	75 20		 jne	 SHORT $LN32@PerformSta
  0033d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00340	83 b8 18 10 00
	00 00		 cmp	 DWORD PTR [eax+4120], 0
  00347	74 14		 je	 SHORT $LN32@PerformSta
  00349	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0034c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0034f	8b 90 18 10 00
	00		 mov	 edx, DWORD PTR [eax+4120]
  00355	3b 91 20 10 00
	00		 cmp	 edx, DWORD PTR [ecx+4128]
  0035b	73 53		 jae	 SHORT $LN28@PerformSta
$LN32@PerformSta:
  0035d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00360	0f b6 88 d0 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18128]
  00367	83 f9 02	 cmp	 ecx, 2
  0036a	75 21		 jne	 SHORT $LN33@PerformSta
  0036c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0036f	83 b8 18 10 00
	00 00		 cmp	 DWORD PTR [eax+4120], 0
  00376	74 15		 je	 SHORT $LN33@PerformSta
  00378	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0037b	0f b6 88 9c 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4508]
  00382	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00385	39 8a 18 10 00
	00		 cmp	 DWORD PTR [edx+4120], ecx
  0038b	73 23		 jae	 SHORT $LN28@PerformSta
$LN33@PerformSta:
  0038d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00390	83 b8 1c 10 00
	00 00		 cmp	 DWORD PTR [eax+4124], 0
  00397	74 5e		 je	 SHORT $LN27@PerformSta
  00399	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0039c	8b 4d e0	 mov	 ecx, DWORD PTR _dwTimeNow$[ebp]
  0039f	2b 88 30 10 00
	00		 sub	 ecx, DWORD PTR [eax+4144]
  003a5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  003a8	39 8a 1c 10 00
	00		 cmp	 DWORD PTR [edx+4124], ecx
  003ae	72 47		 jb	 SHORT $LN27@PerformSta
$LN28@PerformSta:

; 2522 : 			m_pGameServiceOption->wServerType==GAME_GENRE_PERSONAL && (m_PersonalTableParameter.cbIsJoinGame ||   
; 2523 : 			(m_dwPersonalPlayCount != 0  && (
; 2524 : 			( 
; 2525 : 			(m_cbGameMode==0 && m_dwDrawCountLimit != 0 && m_dwDrawCountLimit >= m_dwPersonalPlayCount) ||
; 2526 : 			(m_cbGameMode == 2 && m_dwDrawCountLimit != 0 && m_dwDrawCountLimit >= m_cbLoopCount) ||
; 2527 : 			(m_dwDrawTimeLimit != 0 && m_dwDrawTimeLimit >= dwTimeNow - m_dwTimeBegin)
; 2528 : 			) 
; 2529 : 			)
; 2530 : 			)))
; 2531 : 		{
; 2532 : 
; 2533 : 			//设置托管
; 2534 : 			pIServerUserItem->SetTrusteeUser(true);

  003b0	6a 01		 push	 1
  003b2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003b5	8b 10		 mov	 edx, DWORD PTR [eax]
  003b7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003ba	8b 82 bc 00 00
	00		 mov	 eax, DWORD PTR [edx+188]
  003c0	ff d0		 call	 eax

; 2535 : 
; 2536 : 			//掉线通知
; 2537 : 			if(m_pITableUserAction!=NULL) m_pITableUserAction->OnActionUserOffLine(wChairID,pIServerUserItem);

  003c2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003c5	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  003cc	74 22		 je	 SHORT $LN34@PerformSta
  003ce	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003d1	50		 push	 eax
  003d2	0f b7 4d ec	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  003d6	51		 push	 ecx
  003d7	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  003da	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  003e0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003e3	8b 10		 mov	 edx, DWORD PTR [eax]
  003e5	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  003eb	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  003ee	ff d0		 call	 eax
$LN34@PerformSta:

; 2538 : 
; 2539 : 			return true;

  003f0	b0 01		 mov	 al, 1
  003f2	e9 8a 09 00 00	 jmp	 $LN1@PerformSta
$LN27@PerformSta:

; 2540 : 		}
; 2541 : 
; 2542 : 		//结束游戏
; 2543 : 		BYTE cbConcludeReason=(cbUserStatus==US_OFFLINE)?GER_NETWORK_ERROR:GER_USER_LEAVE;

  003f7	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  003fb	83 f8 06	 cmp	 eax, 6
  003fe	75 0c		 jne	 SHORT $LN68@PerformSta
  00400	c7 85 78 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv271[ebp], 3
  0040a	eb 0a		 jmp	 SHORT $LN69@PerformSta
$LN68@PerformSta:
  0040c	c7 85 78 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv271[ebp], 2
$LN69@PerformSta:
  00416	8a 8d 78 ff ff
	ff		 mov	 cl, BYTE PTR tv271[ebp]
  0041c	88 4d de	 mov	 BYTE PTR _cbConcludeReason$14[ebp], cl

; 2544 : 		m_pITableFrameSink->OnEventGameConclude(wChairID,pIServerUserItem,cbConcludeReason);

  0041f	0f b6 45 de	 movzx	 eax, BYTE PTR _cbConcludeReason$14[ebp]
  00423	50		 push	 eax
  00424	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00427	51		 push	 ecx
  00428	0f b7 55 ec	 movzx	 edx, WORD PTR _wChairID$[ebp]
  0042c	52		 push	 edx
  0042d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00430	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00436	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00439	8b 01		 mov	 eax, DWORD PTR [ecx]
  0043b	8b 8a c8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4040]
  00441	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00444	ff d2		 call	 edx

; 2545 : 
; 2546 : 		if(m_pGameServiceOption->wKindID == GAME_510K)

  00446	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00449	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0044f	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00452	81 fa ee 00 00
	00		 cmp	 edx, 238		; 000000eeH
  00458	75 16		 jne	 SHORT $LN35@PerformSta

; 2547 : 		{
; 2548 : 			m_bEscapeStatus[wChairID] = true;

  0045a	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0045e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00461	c6 84 01 dc 45
	00 00 01	 mov	 BYTE PTR [ecx+eax+17884], 1

; 2549 : 			return true;

  00469	b0 01		 mov	 al, 1
  0046b	e9 11 09 00 00	 jmp	 $LN1@PerformSta
$LN35@PerformSta:

; 2550 : 		}
; 2551 : 
; 2552 : 		//离开判断
; 2553 : 		if (m_TableUserItemArray[wChairID]!=pIServerUserItem) return true;

  00470	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00474	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00477	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  0047e	3b 55 08	 cmp	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00481	74 07		 je	 SHORT $LN15@PerformSta
  00483	b0 01		 mov	 al, 1
  00485	e9 f7 08 00 00	 jmp	 $LN1@PerformSta
$LN15@PerformSta:

; 2554 : 	}
; 2555 : 
; 2556 : 	//比赛场托管处理
; 2557 : 	if ((m_pGameServiceOption->wServerType==GAME_GENRE_MATCH) && (m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE))

  0048a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0048d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00493	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00497	83 fa 04	 cmp	 edx, 4
  0049a	0f 85 a9 00 00
	00		 jne	 $LN37@PerformSta
  004a0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  004a3	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  004a9	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  004ad	83 fa 01	 cmp	 edx, 1
  004b0	0f 85 93 00 00
	00		 jne	 $LN37@PerformSta

; 2558 : 	{
; 2559 : 		//获取状态
; 2560 : 		BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  004b6	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004b9	8b 10		 mov	 edx, DWORD PTR [eax]
  004bb	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  004be	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  004c1	ff d0		 call	 eax
  004c3	88 45 dd	 mov	 BYTE PTR _cbUserStatus$13[ebp], al

; 2561 : 		BYTE cbUserMatchStatus=pIServerUserItem->GetUserMatchStatus();

  004c6	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004c9	8b 10		 mov	 edx, DWORD PTR [eax]
  004cb	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  004ce	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  004d4	ff d0		 call	 eax
  004d6	88 45 dc	 mov	 BYTE PTR _cbUserMatchStatus$12[ebp], al

; 2562 : 
; 2563 : 		//判断状态
; 2564 : 		if (bInitiative==true && cbUserMatchStatus==MUS_PLAYING)

  004d9	0f b6 45 0c	 movzx	 eax, BYTE PTR _bInitiative$[ebp]
  004dd	83 f8 01	 cmp	 eax, 1
  004e0	75 67		 jne	 SHORT $LN37@PerformSta
  004e2	0f b6 45 dc	 movzx	 eax, BYTE PTR _cbUserMatchStatus$12[ebp]
  004e6	83 f8 04	 cmp	 eax, 4
  004e9	75 5e		 jne	 SHORT $LN37@PerformSta

; 2565 : 		{
; 2566 : 			if (pIServerUserItem->IsTrusteeUser()==false)

  004eb	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004ee	8b 10		 mov	 edx, DWORD PTR [eax]
  004f0	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  004f3	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  004f9	ff d0		 call	 eax
  004fb	0f b6 c8	 movzx	 ecx, al
  004fe	85 c9		 test	 ecx, ecx
  00500	75 40		 jne	 SHORT $LN39@PerformSta

; 2567 : 			{
; 2568 : 				pIServerUserItem->SetTrusteeUser(true);

  00502	6a 01		 push	 1
  00504	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00507	8b 10		 mov	 edx, DWORD PTR [eax]
  00509	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0050c	8b 82 bc 00 00
	00		 mov	 eax, DWORD PTR [edx+188]
  00512	ff d0		 call	 eax

; 2569 : 
; 2570 : 				//掉线通知
; 2571 : 				if(m_pITableUserAction!=NULL) m_pITableUserAction->OnActionUserOffLine(wChairID,pIServerUserItem);

  00514	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00517	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  0051e	74 22		 je	 SHORT $LN39@PerformSta
  00520	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00523	50		 push	 eax
  00524	0f b7 4d ec	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00528	51		 push	 ecx
  00529	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0052c	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  00532	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00535	8b 10		 mov	 edx, DWORD PTR [eax]
  00537	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  0053d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00540	ff d0		 call	 eax
$LN39@PerformSta:

; 2572 : 			}	
; 2573 : 			return true;

  00542	b0 01		 mov	 al, 1
  00544	e9 38 08 00 00	 jmp	 $LN1@PerformSta
$LN37@PerformSta:

; 2574 : 		}
; 2575 : 	}
; 2576 : 
; 2577 : 	//设置变量
; 2578 : 	if (pIServerUserItem==pITableUserItem)

  00549	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0054c	3b 45 e4	 cmp	 eax, DWORD PTR _pITableUserItem$[ebp]
  0054f	0f 85 19 07 00
	00		 jne	 $LN41@PerformSta

; 2579 : 	{
; 2580 : 		//删除定时
; 2581 : 		if(m_pGameServiceAttrib->wChairCount < MAX_CHAIR) KillGameTimer(IDI_START_OVERTIME+wChairID);

  00555	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00558	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  0055e	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00562	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00568	7d 18		 jge	 SHORT $LN43@PerformSta
  0056a	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0056e	83 c0 16	 add	 eax, 22			; 00000016H
  00571	50		 push	 eax
  00572	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00575	8b 11		 mov	 edx, DWORD PTR [ecx]
  00577	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0057a	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00580	ff d0		 call	 eax
$LN43@PerformSta:

; 2582 : 
; 2583 : 		//设置变量
; 2584 : 		m_TableUserItemArray[wChairID]=NULL;

  00582	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00586	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00589	c7 84 81 90 0c
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+3216], 0

; 2585 : 
; 2586 : 		//解锁游戏币
; 2587 : 		if (m_lFrozenedScore[wChairID]!=0L)

  00594	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00598	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0059b	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv1048[ebp], ecx
  005a1	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv1049[ebp], eax
  005a7	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv1049[ebp]
  005ad	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv1048[ebp]
  005b3	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv1049[ebp]
  005b9	8b b5 78 ff ff
	ff		 mov	 esi, DWORD PTR tv1048[ebp]
  005bf	8b 94 d0 e0 00
	00 00		 mov	 edx, DWORD PTR [eax+edx*8+224]
  005c6	0b 94 ce e4 00
	00 00		 or	 edx, DWORD PTR [esi+ecx*8+228]
  005cd	74 44		 je	 SHORT $LN44@PerformSta

; 2588 : 		{
; 2589 : 			pIServerUserItem->UnFrozenedUserScore(m_lFrozenedScore[wChairID]);

  005cf	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  005d3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  005d6	8b 94 c1 e4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*8+228]
  005dd	52		 push	 edx
  005de	8b 84 c1 e0 00
	00 00		 mov	 eax, DWORD PTR [ecx+eax*8+224]
  005e5	50		 push	 eax
  005e6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  005e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  005eb	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  005ee	8b 82 10 01 00
	00		 mov	 eax, DWORD PTR [edx+272]
  005f4	ff d0		 call	 eax

; 2590 : 			m_lFrozenedScore[wChairID]=0L;

  005f6	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  005fa	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  005fd	c7 84 c1 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*8+224], 0
  00608	c7 84 c1 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*8+228], 0
$LN44@PerformSta:

; 2591 : 		}
; 2592 : 
; 2593 : 		//事件通知
; 2594 : 		if (m_pITableUserAction!=NULL)

  00613	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00616	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  0061d	74 24		 je	 SHORT $LN45@PerformSta

; 2595 : 		{
; 2596 : 			m_pITableUserAction->OnActionUserStandUp(wChairID,pIServerUserItem,false);

  0061f	6a 00		 push	 0
  00621	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00624	50		 push	 eax
  00625	0f b7 4d ec	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00629	51		 push	 ecx
  0062a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0062d	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  00633	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00636	8b 10		 mov	 edx, DWORD PTR [eax]
  00638	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  0063e	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00641	ff d0		 call	 eax
$LN45@PerformSta:

; 2597 : 		}
; 2598 : 
; 2599 : 		//事件通知
; 2600 : 		if(m_pIMatchTableAction!=NULL && bInitiative==true)

  00643	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00646	83 b8 0c 10 00
	00 00		 cmp	 DWORD PTR [eax+4108], 0
  0064d	74 2d		 je	 SHORT $LN46@PerformSta
  0064f	0f b6 45 0c	 movzx	 eax, BYTE PTR _bInitiative$[ebp]
  00653	83 f8 01	 cmp	 eax, 1
  00656	75 24		 jne	 SHORT $LN46@PerformSta

; 2601 : 		{
; 2602 : 			m_pIMatchTableAction->OnActionUserStandUp(wChairID,pIServerUserItem,false);

  00658	6a 00		 push	 0
  0065a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0065d	50		 push	 eax
  0065e	0f b7 4d ec	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00662	51		 push	 ecx
  00663	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00666	8b 82 0c 10 00
	00		 mov	 eax, DWORD PTR [edx+4108]
  0066c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0066f	8b 10		 mov	 edx, DWORD PTR [eax]
  00671	8b 89 0c 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4108]
  00677	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0067a	ff d0		 call	 eax
$LN46@PerformSta:

; 2603 : 		}
; 2604 : 
; 2605 : 		//比赛类型
; 2606 : 		if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE )

  0067c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0067f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00685	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00689	83 fa 04	 cmp	 edx, 4
  0068c	0f 85 a0 00 00
	00		 jne	 $LN47@PerformSta
  00692	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00695	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  0069b	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  0069f	83 fa 01	 cmp	 edx, 1
  006a2	0f 85 8a 00 00
	00		 jne	 $LN47@PerformSta

; 2607 : 		{
; 2608 : 			//获取状态
; 2609 : 			BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  006a8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006ab	8b 10		 mov	 edx, DWORD PTR [eax]
  006ad	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006b0	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  006b3	ff d0		 call	 eax
  006b5	88 45 db	 mov	 BYTE PTR _cbUserStatus$11[ebp], al

; 2610 : 			BYTE cbUserMatchStatus=pIServerUserItem->GetUserMatchStatus();

  006b8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006bb	8b 10		 mov	 edx, DWORD PTR [eax]
  006bd	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006c0	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  006c6	ff d0		 call	 eax
  006c8	88 45 da	 mov	 BYTE PTR _cbUserMatchStatus$10[ebp], al

; 2611 : 
; 2612 : 			if (cbUserStatus==US_OFFLINE && cbUserMatchStatus==MUS_PLAYING)

  006cb	0f b6 45 db	 movzx	 eax, BYTE PTR _cbUserStatus$11[ebp]
  006cf	83 f8 06	 cmp	 eax, 6
  006d2	75 5e		 jne	 SHORT $LN47@PerformSta
  006d4	0f b6 45 da	 movzx	 eax, BYTE PTR _cbUserMatchStatus$10[ebp]
  006d8	83 f8 04	 cmp	 eax, 4
  006db	75 55		 jne	 SHORT $LN47@PerformSta

; 2613 : 			{
; 2614 : 				CString strMessage;

  006dd	8d 4d d4	 lea	 ecx, DWORD PTR _strMessage$9[ebp]
  006e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  006e6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2615 : 				strMessage.Format(TEXT("即时赛中出现玩家: %d起立时状态为US_OFFLINE的情况"),pIServerUserItem->GetUserID());

  006ed	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006f0	8b 10		 mov	 edx, DWORD PTR [eax]
  006f2	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006f5	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  006f8	ff d0		 call	 eax
  006fa	50		 push	 eax
  006fb	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@BACGKDF@?$LM?$LE?J?$LB?H?$PM?V?P?$LD?v?O?V?M?f?$LM?R?3?5?$CFd?F?p?A?$KC?J?$LB?W?$LE?L?$KM?N@
  00700	8d 4d d4	 lea	 ecx, DWORD PTR _strMessage$9[ebp]
  00703	51		 push	 ecx
  00704	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  0070a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2616 : 
; 2617 : 				//提示信息
; 2618 : 				CTraceService::TraceString(strMessage,TraceLevel_Exception);

  0070d	6a 03		 push	 3
  0070f	8d 4d d4	 lea	 ecx, DWORD PTR _strMessage$9[ebp]
  00712	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00718	50		 push	 eax
  00719	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0071f	83 c4 08	 add	 esp, 8

; 2619 : 			}

  00722	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00729	8d 4d d4	 lea	 ecx, DWORD PTR _strMessage$9[ebp]
  0072c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN47@PerformSta:

; 2620 : 		}
; 2621 : 
; 2622 : 		//用户状态
; 2623 : 		pIServerUserItem->SetClientReady(false);

  00732	6a 00		 push	 0
  00734	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00737	8b 10		 mov	 edx, DWORD PTR [eax]
  00739	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0073c	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  00742	ff d0		 call	 eax

; 2624 : 		pIServerUserItem->SetUserStatus((cbUserStatus==US_OFFLINE)?US_NULL:US_FREE,INVALID_TABLE,INVALID_CHAIR);

  00744	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00748	83 f8 06	 cmp	 eax, 6
  0074b	75 0c		 jne	 SHORT $LN70@PerformSta
  0074d	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv449[ebp], 0
  00757	eb 0a		 jmp	 SHORT $LN71@PerformSta
$LN70@PerformSta:
  00759	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv449[ebp], 1
$LN71@PerformSta:
  00763	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00768	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0076d	0f b6 8d 78 ff
	ff ff		 movzx	 ecx, BYTE PTR tv449[ebp]
  00774	51		 push	 ecx
  00775	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00778	8b 02		 mov	 eax, DWORD PTR [edx]
  0077a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0077d	8b 90 fc 00 00
	00		 mov	 edx, DWORD PTR [eax+252]
  00783	ff d2		 call	 edx

; 2625 : 
; 2626 : 		//退还费用
; 2627 : 		if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00785	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00788	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0078e	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00792	83 fa 10	 cmp	 edx, 16			; 00000010H
  00795	0f 85 b1 01 00
	00		 jne	 $LN49@PerformSta

; 2628 : 		{	
; 2629 : 			pIServerUserItem->SetClientReady(false);

  0079b	6a 00		 push	 0
  0079d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007a0	8b 10		 mov	 edx, DWORD PTR [eax]
  007a2	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007a5	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  007ab	ff d0		 call	 eax

; 2630 : 			if((((m_pGameServiceOption->lMinTableScore!=0L) && pIServerUserItem->GetUserScore()>=m_pGameServiceOption->lMinTableScore * m_lCellScore/m_pGameServiceOption->lCellScore) ) &&
; 2631 : 				m_dwPersonalPlayCount != 0 && m_dwTableOwnerID == pIServerUserItem->GetUserID() && m_bPersonalLock == true )

  007ad	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  007b0	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  007b6	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv1106[ebp], ecx
  007bc	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv1106[ebp]
  007c2	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv1106[ebp]
  007c8	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  007cb	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  007ce	0f 84 22 01 00
	00		 je	 $LN50@PerformSta
  007d4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007d7	8b 10		 mov	 edx, DWORD PTR [eax]
  007d9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007dc	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  007e2	ff d0		 call	 eax
  007e4	8b f0		 mov	 esi, eax
  007e6	8b fa		 mov	 edi, edx
  007e8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007eb	8b 89 f0 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4080]
  007f1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  007f4	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  007fa	99		 cdq
  007fb	52		 push	 edx
  007fc	50		 push	 eax
  007fd	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00800	50		 push	 eax
  00801	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00804	51		 push	 ecx
  00805	e8 00 00 00 00	 call	 __allmul
  0080a	8b c8		 mov	 ecx, eax
  0080c	8b da		 mov	 ebx, edx
  0080e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00811	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  00817	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0081a	99		 cdq
  0081b	52		 push	 edx
  0081c	50		 push	 eax
  0081d	53		 push	 ebx
  0081e	51		 push	 ecx
  0081f	e8 00 00 00 00	 call	 __alldiv
  00824	89 b5 74 ff ff
	ff		 mov	 DWORD PTR tv1159[ebp], esi
  0082a	89 bd 78 ff ff
	ff		 mov	 DWORD PTR tv1159[ebp+4], edi
  00830	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv1162[ebp], eax
  00836	89 95 70 ff ff
	ff		 mov	 DWORD PTR tv1162[ebp+4], edx
  0083c	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv1159[ebp+4]
  00842	3b 8d 70 ff ff
	ff		 cmp	 ecx, DWORD PTR tv1162[ebp+4]
  00848	0f 8c a8 00 00
	00		 jl	 $LN50@PerformSta
  0084e	7f 12		 jg	 SHORT $LN75@PerformSta
  00850	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv1159[ebp]
  00856	3b 95 6c ff ff
	ff		 cmp	 edx, DWORD PTR tv1162[ebp]
  0085c	0f 82 94 00 00
	00		 jb	 $LN50@PerformSta
$LN75@PerformSta:
  00862	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00865	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  0086c	0f 84 84 00 00
	00		 je	 $LN50@PerformSta
  00872	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00875	8b 10		 mov	 edx, DWORD PTR [eax]
  00877	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0087a	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0087d	ff d0		 call	 eax
  0087f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00882	39 81 40 07 00
	00		 cmp	 DWORD PTR [ecx+1856], eax
  00888	75 6c		 jne	 SHORT $LN50@PerformSta
  0088a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0088d	0f b6 88 9a 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4506]
  00894	83 f9 01	 cmp	 ecx, 1
  00897	75 5d		 jne	 SHORT $LN50@PerformSta

; 2632 : 			{
; 2633 : 				KillGameTimer(IDI_PERSONAL_BEFORE_BEGAIN_TIME);

  00899	6a 2b		 push	 43			; 0000002bH
  0089b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0089e	8b 10		 mov	 edx, DWORD PTR [eax]
  008a0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008a3	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  008a9	ff d0		 call	 eax

; 2634 : 				m_pIMainServiceFrame->CancelCreateTable(m_dwTableOwnerID, m_dwDrawCountLimit, m_dwDrawTimeLimit, CANCELTABLE_REASON_PLAYER, m_wTableID, m_dwPersonalRoomID);

  008ab	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  008ae	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  008b4	51		 push	 ecx
  008b5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  008b8	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  008bc	50		 push	 eax
  008bd	6a 00		 push	 0
  008bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008c2	8b 91 1c 10 00
	00		 mov	 edx, DWORD PTR [ecx+4124]
  008c8	52		 push	 edx
  008c9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  008cc	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  008d2	51		 push	 ecx
  008d3	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  008d6	8b 82 40 07 00
	00		 mov	 eax, DWORD PTR [edx+1856]
  008dc	50		 push	 eax
  008dd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008e0	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  008e6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  008e9	8b 12		 mov	 edx, DWORD PTR [edx]
  008eb	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  008f1	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  008f4	ff d0		 call	 eax
$LN50@PerformSta:

; 2635 : 			}
; 2636 : 
; 2637 : 			if (!m_bBeOut[wChairID] )

  008f6	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  008fa	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008fd	0f b6 94 01 14
	45 00 00	 movzx	 edx, BYTE PTR [ecx+eax+17684]
  00905	85 d2		 test	 edx, edx
  00907	75 43		 jne	 SHORT $LN49@PerformSta

; 2638 : 			{
; 2639 : 				if(cbUserStatus == US_OFFLINE)

  00909	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  0090d	83 f8 06	 cmp	 eax, 6
  00910	75 1e		 jne	 SHORT $LN52@PerformSta

; 2640 : 				{
; 2641 : 					pIServerUserItem->SetUserStatus(US_NULL,INVALID_TABLE,INVALID_CHAIR);

  00912	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00917	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0091c	6a 00		 push	 0
  0091e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00921	8b 10		 mov	 edx, DWORD PTR [eax]
  00923	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00926	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  0092c	ff d0		 call	 eax

; 2642 : 				}
; 2643 : 				else

  0092e	eb 1c		 jmp	 SHORT $LN49@PerformSta
$LN52@PerformSta:

; 2644 : 				{
; 2645 : 					//LogPrintf(("PerformStandUpAction 非 断线 设置桌子为空"));
; 2646 : 					pIServerUserItem->SetUserStatus(US_FREE,INVALID_TABLE,INVALID_CHAIR);

  00930	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00935	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0093a	6a 01		 push	 1
  0093c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0093f	8b 10		 mov	 edx, DWORD PTR [eax]
  00941	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00944	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  0094a	ff d0		 call	 eax
$LN49@PerformSta:

; 2647 : 				}
; 2648 : 			}
; 2649 : 		}
; 2650 : 
; 2651 : 		//变量定义
; 2652 : 		bool bTableLocked=IsTableLocked();

  0094c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0094f	8b 10		 mov	 edx, DWORD PTR [eax]
  00951	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00954	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00957	ff d0		 call	 eax
  00959	88 45 d3	 mov	 BYTE PTR _bTableLocked$8[ebp], al

; 2653 : 		bool bTableStarted=IsTableStarted();

  0095c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0095f	8b 10		 mov	 edx, DWORD PTR [eax]
  00961	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00964	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00967	ff d0		 call	 eax
  00969	88 45 d2	 mov	 BYTE PTR _bTableStarted$7[ebp], al

; 2654 : 		WORD wTableUserCount=GetSitUserCount();

  0096c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0096f	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  00974	66 89 45 cc	 mov	 WORD PTR _wTableUserCount$6[ebp], ax

; 2655 : 
; 2656 : 		//设置变量
; 2657 : 		m_wUserCount=wTableUserCount;

  00978	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0097b	66 8b 4d cc	 mov	 cx, WORD PTR _wTableUserCount$6[ebp]
  0097f	66 89 48 0e	 mov	 WORD PTR [eax+14], cx

; 2658 : 		
; 2659 : 		if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0 && m_dwPersonalRoomID > 0)

  00983	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00986	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0098c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00990	83 e2 10	 and	 edx, 16			; 00000010H
  00993	74 43		 je	 SHORT $LN54@PerformSta
  00995	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00998	83 b8 30 11 00
	00 00		 cmp	 DWORD PTR [eax+4400], 0
  0099f	76 37		 jbe	 SHORT $LN54@PerformSta

; 2660 : 		{
; 2661 : 			m_pIMainServiceFrame->UpdateTablePlayerCount(m_pGameServiceOption->wServerID, m_wTableID, m_wUserCount);

  009a1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  009a4	0f b7 48 0e	 movzx	 ecx, WORD PTR [eax+14]
  009a8	51		 push	 ecx
  009a9	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  009ac	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  009b0	50		 push	 eax
  009b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  009b4	8b 91 f0 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4080]
  009ba	0f b7 42 06	 movzx	 eax, WORD PTR [edx+6]
  009be	50		 push	 eax
  009bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  009c2	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  009c8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  009cb	8b 12		 mov	 edx, DWORD PTR [edx]
  009cd	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  009d3	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  009d6	ff d0		 call	 eax
$LN54@PerformSta:

; 2662 : 		}
; 2663 : 
; 2664 : 		//桌子信息
; 2665 : 		if (wTableUserCount==0 && m_pGameServiceOption->wServerType!=GAME_GENRE_PERSONAL)

  009d8	0f b7 45 cc	 movzx	 eax, WORD PTR _wTableUserCount$6[ebp]
  009dc	85 c0		 test	 eax, eax
  009de	75 32		 jne	 SHORT $LN55@PerformSta
  009e0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  009e3	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  009e9	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  009ed	83 fa 10	 cmp	 edx, 16			; 00000010H
  009f0	74 20		 je	 SHORT $LN55@PerformSta

; 2666 : 		{
; 2667 : 			m_dwTableOwnerID=0L;

  009f2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  009f5	c7 80 40 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1856], 0

; 2668 : 			m_szEnterPassword[0]=0;

  009ff	b8 01 00 00 00	 mov	 eax, 1
  00a04	6b c8 00	 imul	 ecx, eax, 0
  00a07	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00a0a	c6 84 0a 44 07
	00 00 00	 mov	 BYTE PTR [edx+ecx+1860], 0
$LN55@PerformSta:

; 2669 : 		}
; 2670 : 
; 2671 : 		if (wTableUserCount==0 && m_pGameServiceOption->wServerType==GAME_GENRE_PERSONAL &&  m_PersonalTableParameter.cbIsJoinGame)

  00a12	0f b7 45 cc	 movzx	 eax, WORD PTR _wTableUserCount$6[ebp]
  00a16	85 c0		 test	 eax, eax
  00a18	75 42		 jne	 SHORT $LN56@PerformSta
  00a1a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00a1d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00a23	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00a27	83 fa 10	 cmp	 edx, 16			; 00000010H
  00a2a	75 30		 jne	 SHORT $LN56@PerformSta
  00a2c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00a2f	0f b6 88 87 44
	00 00		 movzx	 ecx, BYTE PTR [eax+17543]
  00a36	85 c9		 test	 ecx, ecx
  00a38	74 22		 je	 SHORT $LN56@PerformSta

; 2672 : 		{
; 2673 : 			m_dwTableOwnerID=0L;

  00a3a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00a3d	c7 80 40 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1856], 0

; 2674 : 			memset(m_hRoomPassword, 0, sizeof(m_hRoomPassword));

  00a47	6a 78		 push	 120			; 00000078H
  00a49	6a 00		 push	 0
  00a4b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00a4e	05 65 07 00 00	 add	 eax, 1893		; 00000765H
  00a53	50		 push	 eax
  00a54	e8 00 00 00 00	 call	 _memset
  00a59	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN56@PerformSta:

; 2675 : 		}
; 2676 : 
; 2677 : 		//踢走旁观
; 2678 : 		if (wTableUserCount==0)

  00a5c	0f b7 45 cc	 movzx	 eax, WORD PTR _wTableUserCount$6[ebp]
  00a60	85 c0		 test	 eax, eax
  00a62	75 56		 jne	 SHORT $LN57@PerformSta

; 2679 : 		{
; 2680 : 			for (INT_PTR i=0;i<m_LookonUserItemArray.GetCount();i++)

  00a64	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00a6b	eb 09		 jmp	 SHORT $LN4@PerformSta
$LN2@PerformSta:
  00a6d	8b 45 c8	 mov	 eax, DWORD PTR _i$5[ebp]
  00a70	83 c0 01	 add	 eax, 1
  00a73	89 45 c8	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@PerformSta:
  00a76	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00a79	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00a7f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
  00a84	39 45 c8	 cmp	 DWORD PTR _i$5[ebp], eax
  00a87	7d 31		 jge	 SHORT $LN57@PerformSta

; 2681 : 			{
; 2682 : 				SendGameMessage(m_LookonUserItemArray[i],TEXT("此游戏桌的所有玩家已经离开了！"),SMT_CLOSE_GAME|SMT_EJECT);

  00a89	68 02 02 00 00	 push	 514			; 00000202H
  00a8e	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@LMDGPNLB@?$LE?K?S?N?O?$LH?W?$MA?$LF?D?K?y?S?P?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP?$KK?A?K?$KD?$KB@
  00a93	8b 45 c8	 mov	 eax, DWORD PTR _i$5[ebp]
  00a96	50		 push	 eax
  00a97	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00a9a	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00aa0	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
  00aa5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aa7	51		 push	 ecx
  00aa8	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00aab	8b 02		 mov	 eax, DWORD PTR [edx]
  00aad	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab0	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  00ab6	ff d2		 call	 edx

; 2683 : 			}

  00ab8	eb b3		 jmp	 SHORT $LN2@PerformSta
$LN57@PerformSta:

; 2684 : 		}
; 2685 : 
; 2686 : 		//结束桌子
; 2687 : 		ConcludeTable();

  00aba	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00abd	8b 10		 mov	 edx, DWORD PTR [eax]
  00abf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac2	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00ac8	ff d0		 call	 eax

; 2688 : 
; 2689 : 		//开始判断
; 2690 : 		if (m_pGameServiceOption->wServerType!=GAME_GENRE_MATCH && EfficacyStartGame(INVALID_CHAIR)==true)

  00aca	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00acd	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00ad3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00ad7	83 fa 04	 cmp	 edx, 4
  00ada	74 22		 je	 SHORT $LN58@PerformSta
  00adc	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00ae1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae4	e8 00 00 00 00	 call	 ?EfficacyStartGame@CTableFrame@@QAE_NG@Z ; CTableFrame::EfficacyStartGame
  00ae9	0f b6 c0	 movzx	 eax, al
  00aec	83 f8 01	 cmp	 eax, 1
  00aef	75 0d		 jne	 SHORT $LN58@PerformSta

; 2691 : 		{
; 2692 : 			StartGame();

  00af1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00af4	8b 10		 mov	 edx, DWORD PTR [eax]
  00af6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00af9	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00afc	ff d0		 call	 eax
$LN58@PerformSta:

; 2693 : 		}
; 2694 : 
; 2695 : 		//发送状态
; 2696 : 		if ((bTableLocked!=IsTableLocked())||(bTableStarted!=IsTableStarted()))

  00afe	0f b6 75 d3	 movzx	 esi, BYTE PTR _bTableLocked$8[ebp]
  00b02	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00b05	8b 10		 mov	 edx, DWORD PTR [eax]
  00b07	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0a	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00b0d	ff d0		 call	 eax
  00b0f	0f b6 c8	 movzx	 ecx, al
  00b12	3b f1		 cmp	 esi, ecx
  00b14	75 18		 jne	 SHORT $LN60@PerformSta
  00b16	0f b6 75 d2	 movzx	 esi, BYTE PTR _bTableStarted$7[ebp]
  00b1a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00b1d	8b 10		 mov	 edx, DWORD PTR [eax]
  00b1f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b22	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00b25	ff d0		 call	 eax
  00b27	0f b6 c8	 movzx	 ecx, al
  00b2a	3b f1		 cmp	 esi, ecx
  00b2c	74 08		 je	 SHORT $LN59@PerformSta
$LN60@PerformSta:

; 2697 : 		{
; 2698 : 			SendTableStatus();

  00b2e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b31	e8 00 00 00 00	 call	 ?SendTableStatus@CTableFrame@@QAE_NXZ ; CTableFrame::SendTableStatus
$LN59@PerformSta:

; 2699 : 		}
; 2700 : 
; 2701 : 		//防作弊分组判断
; 2702 : 		if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)&&(m_pGameServiceAttrib->wChairCount < MAX_CHAIR)
; 2703 : 			&&m_pGameServiceOption->wServerType!=GAME_GENRE_MATCH)

  00b36	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00b39	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00b3f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00b42	52		 push	 edx
  00b43	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  00b48	83 c4 04	 add	 esp, 4
  00b4b	0f b6 c0	 movzx	 eax, al
  00b4e	85 c0		 test	 eax, eax
  00b50	0f 84 0c 01 00
	00		 je	 $LN61@PerformSta
  00b56	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00b59	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00b5f	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00b63	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00b69	0f 8d f3 00 00
	00		 jge	 $LN61@PerformSta
  00b6f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00b72	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00b78	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00b7c	83 fa 04	 cmp	 edx, 4
  00b7f	0f 84 dd 00 00
	00		 je	 $LN61@PerformSta

; 2704 : 		{
; 2705 : 			//防作弊分组判断
; 2706 : 			if(IsTableStarted()==false && CheckDistribute())

  00b85	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00b88	8b 10		 mov	 edx, DWORD PTR [eax]
  00b8a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b8d	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00b90	ff d0		 call	 eax
  00b92	0f b6 c8	 movzx	 ecx, al
  00b95	85 c9		 test	 ecx, ecx
  00b97	0f 85 c5 00 00
	00		 jne	 $LN61@PerformSta
  00b9d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ba0	e8 00 00 00 00	 call	 ?CheckDistribute@CTableFrame@@QAE_NXZ ; CTableFrame::CheckDistribute
  00ba5	0f b6 c0	 movzx	 eax, al
  00ba8	85 c0		 test	 eax, eax
  00baa	0f 84 b2 00 00
	00		 je	 $LN61@PerformSta

; 2707 : 			{
; 2708 : 				for(int i=0; i<m_wChairCount; i++)

  00bb0	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00bb7	eb 09		 jmp	 SHORT $LN7@PerformSta
$LN5@PerformSta:
  00bb9	8b 45 c4	 mov	 eax, DWORD PTR _i$4[ebp]
  00bbc	83 c0 01	 add	 eax, 1
  00bbf	89 45 c4	 mov	 DWORD PTR _i$4[ebp], eax
$LN7@PerformSta:
  00bc2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00bc5	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00bc9	39 4d c4	 cmp	 DWORD PTR _i$4[ebp], ecx
  00bcc	0f 8d 90 00 00
	00		 jge	 $LN61@PerformSta

; 2709 : 				{
; 2710 : 					if(m_TableUserItemArray[i] != NULL && m_TableUserItemArray[i]->GetUserStatus()==US_READY)

  00bd2	8b 45 c4	 mov	 eax, DWORD PTR _i$4[ebp]
  00bd5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00bd8	83 bc 81 90 0c
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+3216], 0
  00be0	74 7b		 je	 SHORT $LN63@PerformSta
  00be2	8b 45 c4	 mov	 eax, DWORD PTR _i$4[ebp]
  00be5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00be8	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  00bef	8b 45 c4	 mov	 eax, DWORD PTR _i$4[ebp]
  00bf2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf5	8b 12		 mov	 edx, DWORD PTR [edx]
  00bf7	8b 8c 81 90 0c
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+3216]
  00bfe	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00c01	ff d0		 call	 eax
  00c03	0f b6 c8	 movzx	 ecx, al
  00c06	83 f9 03	 cmp	 ecx, 3
  00c09	75 52		 jne	 SHORT $LN63@PerformSta

; 2711 : 					{
; 2712 : 						//发送消息
; 2713 : 						LPCTSTR pszMessage=TEXT("由玩家离开，系统重新分配桌子，请稍后！");

  00c0b	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pszMessage$3[ebp], OFFSET ??_C@_0CH@CEHEIJKA@?S?I?M?f?$LM?R?$MA?k?$LP?$KK?$KD?$KM?O?$LF?M?$LD?V?X?P?B?$LH?V?E?d?W?$MA?W?S?$KD?$KM?G@

; 2714 : 						SendGameMessage(m_TableUserItemArray[i],pszMessage,SMT_CHAT);

  00c12	6a 01		 push	 1
  00c14	8b 45 c0	 mov	 eax, DWORD PTR _pszMessage$3[ebp]
  00c17	50		 push	 eax
  00c18	8b 4d c4	 mov	 ecx, DWORD PTR _i$4[ebp]
  00c1b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00c1e	8b 84 8a 90 0c
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+3216]
  00c25	50		 push	 eax
  00c26	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c29	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c2b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c2e	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  00c34	ff d0		 call	 eax

; 2715 : 
; 2716 : 						//发送消息
; 2717 : 						m_pIMainServiceFrame->InsertDistribute(m_TableUserItemArray[i]);

  00c36	8b 45 c4	 mov	 eax, DWORD PTR _i$4[ebp]
  00c39	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c3c	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  00c43	52		 push	 edx
  00c44	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00c47	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00c4d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00c50	8b 01		 mov	 eax, DWORD PTR [ecx]
  00c52	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00c58	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00c5b	ff d2		 call	 edx
$LN63@PerformSta:

; 2718 : 
; 2719 : 						////用户起立
; 2720 : 						//PerformStandUpAction(m_TableUserItemArray[i]);
; 2721 : 					}
; 2722 : 				}

  00c5d	e9 57 ff ff ff	 jmp	 $LN5@PerformSta
$LN61@PerformSta:

; 2723 : 			}
; 2724 : 		}
; 2725 : 
; 2726 : 		return true;

  00c62	b0 01		 mov	 al, 1
  00c64	e9 18 01 00 00	 jmp	 $LN1@PerformSta

; 2727 : 	}
; 2728 : 	else

  00c69	e9 11 01 00 00	 jmp	 $LN42@PerformSta
$LN41@PerformSta:

; 2729 : 	{
; 2730 : 		//起立处理
; 2731 : 		for (INT_PTR i=0;i<m_LookonUserItemArray.GetCount();i++)

  00c6e	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00c75	eb 09		 jmp	 SHORT $LN10@PerformSta
$LN8@PerformSta:
  00c77	8b 45 bc	 mov	 eax, DWORD PTR _i$2[ebp]
  00c7a	83 c0 01	 add	 eax, 1
  00c7d	89 45 bc	 mov	 DWORD PTR _i$2[ebp], eax
$LN10@PerformSta:
  00c80	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c83	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00c89	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
  00c8e	39 45 bc	 cmp	 DWORD PTR _i$2[ebp], eax
  00c91	0f 8d c8 00 00
	00		 jge	 $LN9@PerformSta

; 2732 : 		{
; 2733 : 			if (pIServerUserItem==m_LookonUserItemArray[i])

  00c97	8b 45 bc	 mov	 eax, DWORD PTR _i$2[ebp]
  00c9a	50		 push	 eax
  00c9b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c9e	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00ca4	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
  00ca9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00cac	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00cae	0f 85 a6 00 00
	00		 jne	 $LN64@PerformSta

; 2734 : 			{
; 2735 : 				//删除子项
; 2736 : 				m_LookonUserItemArray.RemoveAt(i);

  00cb4	6a 01		 push	 1
  00cb6	8b 45 bc	 mov	 eax, DWORD PTR _i$2[ebp]
  00cb9	50		 push	 eax
  00cba	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cbd	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00cc3	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHH@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::RemoveAt

; 2737 : 
; 2738 : 				//事件通知
; 2739 : 				if (m_pITableUserAction!=NULL)

  00cc8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00ccb	83 b8 d4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4052], 0
  00cd2	74 24		 je	 SHORT $LN65@PerformSta

; 2740 : 				{
; 2741 : 					m_pITableUserAction->OnActionUserStandUp(wChairID,pIServerUserItem,true);

  00cd4	6a 01		 push	 1
  00cd6	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00cd9	50		 push	 eax
  00cda	0f b7 4d ec	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00cde	51		 push	 ecx
  00cdf	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00ce2	8b 82 d4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4052]
  00ce8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ceb	8b 10		 mov	 edx, DWORD PTR [eax]
  00ced	8b 89 d4 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4052]
  00cf3	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00cf6	ff d0		 call	 eax
$LN65@PerformSta:

; 2742 : 				}
; 2743 : 
; 2744 : 				//事件通知
; 2745 : 				if(m_pIMatchTableAction!=NULL) m_pIMatchTableAction->OnActionUserStandUp(wChairID,pIServerUserItem,true);

  00cf8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00cfb	83 b8 0c 10 00
	00 00		 cmp	 DWORD PTR [eax+4108], 0
  00d02	74 24		 je	 SHORT $LN66@PerformSta
  00d04	6a 01		 push	 1
  00d06	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00d09	50		 push	 eax
  00d0a	0f b7 4d ec	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  00d0e	51		 push	 ecx
  00d0f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00d12	8b 82 0c 10 00
	00		 mov	 eax, DWORD PTR [edx+4108]
  00d18	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d1b	8b 10		 mov	 edx, DWORD PTR [eax]
  00d1d	8b 89 0c 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4108]
  00d23	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00d26	ff d0		 call	 eax
$LN66@PerformSta:

; 2746 : 
; 2747 : 				//用户状态
; 2748 : 				pIServerUserItem->SetClientReady(false);

  00d28	6a 00		 push	 0
  00d2a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00d2d	8b 10		 mov	 edx, DWORD PTR [eax]
  00d2f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00d32	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  00d38	ff d0		 call	 eax

; 2749 : 				pIServerUserItem->SetUserStatus(US_FREE,INVALID_TABLE,INVALID_CHAIR);

  00d3a	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00d3f	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00d44	6a 01		 push	 1
  00d46	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00d49	8b 10		 mov	 edx, DWORD PTR [eax]
  00d4b	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00d4e	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00d54	ff d0		 call	 eax

; 2750 : 
; 2751 : 				return true;

  00d56	b0 01		 mov	 al, 1
  00d58	eb 27		 jmp	 SHORT $LN1@PerformSta
$LN64@PerformSta:

; 2752 : 			}
; 2753 : 		}

  00d5a	e9 18 ff ff ff	 jmp	 $LN8@PerformSta
$LN9@PerformSta:

; 2754 : 
; 2755 : 		//错误断言
; 2756 : 		ASSERT(FALSE);

  00d5f	33 c0		 xor	 eax, eax
  00d61	75 1c		 jne	 SHORT $LN42@PerformSta
  00d63	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z@4JA
  00d69	81 c1 1d 01 00
	00		 add	 ecx, 285		; 0000011dH
  00d6f	51		 push	 ecx
  00d70	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00d75	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00d7a	85 c0		 test	 eax, eax
  00d7c	74 01		 je	 SHORT $LN42@PerformSta
  00d7e	cc		 int	 3
$LN42@PerformSta:

; 2757 : 	}
; 2758 : 
; 2759 : 	return true;

  00d7f	b0 01		 mov	 al, 1
$LN1@PerformSta:

; 2760 : }

  00d81	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00d84	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00d8b	59		 pop	 ecx
  00d8c	5f		 pop	 edi
  00d8d	5e		 pop	 esi
  00d8e	5b		 pop	 ebx
  00d8f	8b e5		 mov	 esp, ebp
  00d91	5d		 pop	 ebp
  00d92	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _strMessage$9[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 8a 68 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-152]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PerformStandUpAction@CTableFrame@@UAE_NPAUIServerUserItem@@_N@Z ENDP ; CTableFrame::PerformStandUpAction
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendRoomMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_lpszMessage$ = 12					; size = 4
_wType$ = 16						; size = 2
?SendRoomMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z PROC ; CTableFrame::SendRoomMessage, COMDAT
; _this$ = ecx

; 1230 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1231 : 	//特殊处理
; 1232 : 	if (pIServerUserItem==NULL)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 24		 jne	 SHORT $LN2@SendRoomMe

; 1233 : 	{
; 1234 : 		return m_pIMainServiceFrame->SendRoomMessage(lpszMessage,wType);

  00012	0f b7 45 10	 movzx	 eax, WORD PTR _wType$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszMessage$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 10		 mov	 edx, DWORD PTR [eax]
  00029	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0002f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00032	ff d0		 call	 eax
  00034	eb 28		 jmp	 SHORT $LN1@SendRoomMe
$LN2@SendRoomMe:

; 1235 : 	}
; 1236 : 
; 1237 : 	//用户效验
; 1238 : 	/*ASSERT(pIServerUserItem!=NULL);
; 1239 : 	if (pIServerUserItem==NULL) return false;*/
; 1240 : 
; 1241 : 	//发送消息
; 1242 : 	m_pIMainServiceFrame->SendRoomMessage(pIServerUserItem,lpszMessage,wType);

  00036	0f b7 45 10	 movzx	 eax, WORD PTR _wType$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszMessage$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00042	52		 push	 edx
  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0004c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00051	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00057	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0005a	ff d2		 call	 edx

; 1243 : 
; 1244 : 	return true;

  0005c	b0 01		 mov	 al, 1
$LN1@SendRoomMe:

; 1245 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 0c 00	 ret	 12			; 0000000cH
?SendRoomMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z ENDP ; CTableFrame::SendRoomMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_lpszMessage$ = 12					; size = 4
_wType$ = 16						; size = 2
?SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z PROC ; CTableFrame::SendGameMessage, COMDAT
; _this$ = ecx

; 1249 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1250 : 	//用户效验
; 1251 : 	ASSERT(pIServerUserItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@SendGameMe
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@SendGameMe
  00029	cc		 int	 3
$LN4@SendGameMe:

; 1252 : 	if (pIServerUserItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@SendGameMe
  00030	32 c0		 xor	 al, al
  00032	eb 26		 jmp	 SHORT $LN1@SendGameMe
$LN2@SendGameMe:

; 1253 : 
; 1254 : 	//发送消息
; 1255 : 	return m_pIMainServiceFrame->SendGameMessage(pIServerUserItem,lpszMessage,wType);

  00034	0f b7 45 10	 movzx	 eax, WORD PTR _wType$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszMessage$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00040	52		 push	 edx
  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0004a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004f	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00055	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00058	ff d2		 call	 edx
$LN1@SendGameMe:

; 1256 : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 0c 00	 ret	 12			; 0000000cH
?SendGameMessage@CTableFrame@@UAE_NPAUIServerUserItem@@PBDG@Z ENDP ; CTableFrame::SendGameMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendGameMessage@CTableFrame@@UAE_NPBDG@Z
_TEXT	SEGMENT
tv136 = -86						; size = 2
_pIServerUserItem$1 = -20				; size = 4
_pIServerUserItem$2 = -16				; size = 4
_i$3 = -12						; size = 2
_wEnumIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_lpszMessage$ = 8					; size = 4
_wType$ = 12						; size = 2
?SendGameMessage@CTableFrame@@UAE_NPBDG@Z PROC		; CTableFrame::SendGameMessage, COMDAT
; _this$ = ecx

; 1194 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1195 : 	//变量定义
; 1196 : 	WORD wEnumIndex=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1197 : 
; 1198 : 	//发送消息
; 1199 : 	for (WORD i=0;i<m_wChairCount;i++)

  00012	33 c0		 xor	 eax, eax
  00014	66 89 45 f4	 mov	 WORD PTR _i$3[ebp], ax
  00018	eb 0c		 jmp	 SHORT $LN4@SendGameMe
$LN2@SendGameMe:
  0001a	66 8b 45 f4	 mov	 ax, WORD PTR _i$3[ebp]
  0001e	66 83 c0 01	 add	 ax, 1
  00022	66 89 45 f4	 mov	 WORD PTR _i$3[ebp], ax
$LN4@SendGameMe:
  00026	0f b7 45 f4	 movzx	 eax, WORD PTR _i$3[ebp]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00031	3b c2		 cmp	 eax, edx
  00033	7d 5f		 jge	 SHORT $LN7@SendGameMe

; 1200 : 	{
; 1201 : 		//获取用户
; 1202 : 		IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  00035	0f b7 45 f4	 movzx	 eax, WORD PTR _i$3[ebp]
  00039	50		 push	 eax
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00048	ff d0		 call	 eax
  0004a	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$2[ebp], eax

; 1203 : 		if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) continue;

  0004d	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$2[ebp], 0
  00051	74 17		 je	 SHORT $LN9@SendGameMe
  00053	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$2[ebp]
  00056	8b 10		 mov	 edx, DWORD PTR [eax]
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$2[ebp]
  0005b	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00061	ff d0		 call	 eax
  00063	0f b6 c8	 movzx	 ecx, al
  00066	85 c9		 test	 ecx, ecx
  00068	75 02		 jne	 SHORT $LN8@SendGameMe
$LN9@SendGameMe:
  0006a	eb ae		 jmp	 SHORT $LN2@SendGameMe
$LN8@SendGameMe:

; 1204 : 
; 1205 : 		//发送消息
; 1206 : 		m_pIMainServiceFrame->SendGameMessage(pIServerUserItem,lpszMessage,wType);

  0006c	0f b7 45 0c	 movzx	 eax, WORD PTR _wType$[ebp]
  00070	50		 push	 eax
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _lpszMessage$[ebp]
  00074	51		 push	 ecx
  00075	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$2[ebp]
  00078	52		 push	 edx
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00082	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00085	8b 01		 mov	 eax, DWORD PTR [ecx]
  00087	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  0008d	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00090	ff d2		 call	 edx

; 1207 : 	}

  00092	eb 86		 jmp	 SHORT $LN2@SendGameMe
$LN7@SendGameMe:

; 1208 : 
; 1209 : 	//枚举用户
; 1210 : 	do
; 1211 : 	{
; 1212 : 		//获取用户
; 1213 : 		IServerUserItem * pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  00094	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00098	66 89 45 aa	 mov	 WORD PTR tv136[ebp], ax
  0009c	0f b7 4d aa	 movzx	 ecx, WORD PTR tv136[ebp]
  000a0	51		 push	 ecx
  000a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	8b 02		 mov	 eax, DWORD PTR [edx]
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  000af	ff d2		 call	 edx
  000b1	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$1[ebp], eax
  000b4	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  000b8	66 83 c0 01	 add	 ax, 1
  000bc	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1214 : 		if (pIServerUserItem==NULL) break;

  000c0	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$1[ebp], 0
  000c4	75 02		 jne	 SHORT $LN10@SendGameMe
  000c6	eb 7f		 jmp	 SHORT $LN6@SendGameMe
$LN10@SendGameMe:

; 1215 : 
; 1216 : 		//效验状态
; 1217 : 		ASSERT(pIServerUserItem->IsClientReady()==true);

  000c8	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000cb	8b 10		 mov	 edx, DWORD PTR [eax]
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000d0	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  000d6	ff d0		 call	 eax
  000d8	0f b6 c8	 movzx	 ecx, al
  000db	83 f9 01	 cmp	 ecx, 1
  000de	74 19		 je	 SHORT $LN13@SendGameMe
  000e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendGameMessage@CTableFrame@@UAE_NPBDG@Z@4JA
  000e6	83 c2 17	 add	 edx, 23			; 00000017H
  000e9	52		 push	 edx
  000ea	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000ef	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000f4	85 c0		 test	 eax, eax
  000f6	74 01		 je	 SHORT $LN13@SendGameMe
  000f8	cc		 int	 3
$LN13@SendGameMe:

; 1218 : 		if (pIServerUserItem->IsClientReady()==false) return false;

  000f9	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000fc	8b 10		 mov	 edx, DWORD PTR [eax]
  000fe	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  00101	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00107	ff d0		 call	 eax
  00109	0f b6 c8	 movzx	 ecx, al
  0010c	85 c9		 test	 ecx, ecx
  0010e	75 04		 jne	 SHORT $LN11@SendGameMe
  00110	32 c0		 xor	 al, al
  00112	eb 35		 jmp	 SHORT $LN1@SendGameMe
$LN11@SendGameMe:

; 1219 : 
; 1220 : 		//发送消息
; 1221 : 		m_pIMainServiceFrame->SendGameMessage(pIServerUserItem,lpszMessage,wType);

  00114	0f b7 45 0c	 movzx	 eax, WORD PTR _wType$[ebp]
  00118	50		 push	 eax
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _lpszMessage$[ebp]
  0011c	51		 push	 ecx
  0011d	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$1[ebp]
  00120	52		 push	 edx
  00121	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00124	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  0012a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0012d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0012f	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  00135	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00138	ff d2		 call	 edx

; 1222 : 
; 1223 : 	} while (true);

  0013a	b8 01 00 00 00	 mov	 eax, 1
  0013f	85 c0		 test	 eax, eax
  00141	0f 85 4d ff ff
	ff		 jne	 $LN7@SendGameMe
$LN6@SendGameMe:

; 1224 : 
; 1225 : 	return true;

  00147	b0 01		 mov	 al, 1
$LN1@SendGameMe:

; 1226 : }

  00149	5f		 pop	 edi
  0014a	5e		 pop	 esi
  0014b	5b		 pop	 ebx
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c2 08 00	 ret	 8
?SendGameMessage@CTableFrame@@UAE_NPBDG@Z ENDP		; CTableFrame::SendGameMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z
_TEXT	SEGMENT
_wSendSize$ = -16400					; size = 2
_pRoomCheat$ = -16396					; size = 4
_cbBuffer$ = -16392					; size = 16384
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z PROC ; CTableFrame::SendRoomData, COMDAT
; _this$ = ecx

; 1173 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 10 42 00 00	 mov	 eax, 16912		; 00004210H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1174 : 	//变量定义
; 1175 : 	BYTE cbBuffer[SOCKET_TCP_BUFFER];
; 1176 : 	ZeroMemory(cbBuffer, sizeof(cbBuffer));

  0001d	68 00 40 00 00	 push	 16384			; 00004000H
  00022	6a 00		 push	 0
  00024	8d 85 f8 bf ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _memset
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1177 : 
; 1178 : 	//变量定义
; 1179 : 	CMD_GR_RoomCheat * pRoomCheat = (CMD_GR_RoomCheat *)cbBuffer;

  00033	8d 85 f8 bf ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  00039	89 85 f4 bf ff
	ff		 mov	 DWORD PTR _pRoomCheat$[ebp], eax

; 1180 : 	pRoomCheat->wSubCmdID = wSubCmdID;

  0003f	8b 85 f4 bf ff
	ff		 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00045	66 8b 4d 0c	 mov	 cx, WORD PTR _wSubCmdID$[ebp]
  00049	66 89 08	 mov	 WORD PTR [eax], cx

; 1181 : 	pRoomCheat->wTableID = m_wTableID;

  0004c	8b 85 f4 bf ff
	ff		 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00059	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 1182 : 
; 1183 : 	//作弊信息
; 1184 : 	if (wDataSize != 0) CopyMemory(cbBuffer + sizeof(CMD_GR_RoomCheat), pData, wDataSize);

  0005d	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00061	85 c0		 test	 eax, eax
  00063	74 18		 je	 SHORT $LN2@SendRoomDa
  00065	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0006d	51		 push	 ecx
  0006e	8d 95 fc bf ff
	ff		 lea	 edx, DWORD PTR _cbBuffer$[ebp+4]
  00074	52		 push	 edx
  00075	e8 00 00 00 00	 call	 _memcpy
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendRoomDa:

; 1185 : 	//发送数据
; 1186 : 	WORD wSendSize = sizeof(CMD_GR_RoomCheat) + wDataSize;

  0007d	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00081	83 c0 04	 add	 eax, 4
  00084	66 89 85 f0 bf
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], ax

; 1187 : 
; 1188 : 	m_pIMainServiceFrame->SendDataBatchToCheatUser(pIServerUserItem, MDM_GR_USER, SUB_GR_USER_ROOM_CHEAT, cbBuffer, wSendSize);

  0008b	0f b7 85 f0 bf
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00092	50		 push	 eax
  00093	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00099	51		 push	 ecx
  0009a	6a 0d		 push	 13			; 0000000dH
  0009c	6a 03		 push	 3
  0009e	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000a1	52		 push	 edx
  000a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000ab	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ae	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b0	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  000b6	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  000b9	ff d2		 call	 edx

; 1189 : 	return true;

  000bb	b0 01		 mov	 al, 1

; 1190 : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c3	33 cd		 xor	 ecx, ebp
  000c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 10 00	 ret	 16			; 00000010H
?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z ENDP ; CTableFrame::SendRoomData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
_RoomCheat$ = -8					; size = 4
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_wSubCmdID$ = 12					; size = 2
?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z PROC ; CTableFrame::SendRoomData, COMDAT
; _this$ = ecx

; 1161 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1162 : 	//变量定义
; 1163 : 	CMD_GR_RoomCheat RoomCheat;
; 1164 : 	ZeroMemory(&RoomCheat, sizeof(RoomCheat));

  0000c	6a 04		 push	 4
  0000e	6a 00		 push	 0
  00010	8d 45 f8	 lea	 eax, DWORD PTR _RoomCheat$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1165 : 	RoomCheat.wSubCmdID = wSubCmdID;

  0001c	66 8b 45 0c	 mov	 ax, WORD PTR _wSubCmdID$[ebp]
  00020	66 89 45 f8	 mov	 WORD PTR _RoomCheat$[ebp], ax

; 1166 : 	RoomCheat.wTableID = m_wTableID;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  0002b	66 89 4d fa	 mov	 WORD PTR _RoomCheat$[ebp+2], cx

; 1167 : 
; 1168 : 	m_pIMainServiceFrame->SendDataBatchToCheatUser(pIServerUserItem, MDM_GR_USER, SUB_GR_USER_ROOM_CHEAT, &RoomCheat, sizeof(CMD_GR_RoomCheat));

  0002f	6a 04		 push	 4
  00031	8d 45 f8	 lea	 eax, DWORD PTR _RoomCheat$[ebp]
  00034	50		 push	 eax
  00035	6a 0d		 push	 13			; 0000000dH
  00037	6a 03		 push	 3
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00040	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	8b 10		 mov	 edx, DWORD PTR [eax]
  0004b	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00051	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00054	ff d0		 call	 eax

; 1169 : 	return true;

  00056	b0 01		 mov	 al, 1

; 1170 : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?SendRoomData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z ENDP ; CTableFrame::SendRoomData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z PROC ; CTableFrame::SendUserItemData, COMDAT
; _this$ = ecx

; 1010 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1011 : 	//特殊处理
; 1012 : 	if (pIServerUserItem==NULL)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 36		 jne	 SHORT $LN2@SendUserIt

; 1013 : 	{
; 1014 : 		return m_pIMainServiceFrame->SendData(BG_ALL_CLIENT,MDM_GF_GAME,wSubCmdID,pData,wDataSize);

  00012	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0001a	51		 push	 ecx
  0001b	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0001f	52		 push	 edx
  00020	68 c8 00 00 00	 push	 200			; 000000c8H
  00025	68 ff 00 00 00	 push	 255			; 000000ffH
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	8b 8a cc 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4044]
  0003e	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00041	ff d2		 call	 edx
  00043	e9 8a 00 00 00	 jmp	 $LN1@SendUserIt
$LN2@SendUserIt:

; 1015 : 	}
; 1016 : 
; 1017 : 	//状态效验
; 1018 : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->IsClientReady()==true));

  00048	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0004c	74 18		 je	 SHORT $LN5@SendUserIt
  0004e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00051	8b 10		 mov	 edx, DWORD PTR [eax]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00056	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0005c	ff d0		 call	 eax
  0005e	0f b6 c8	 movzx	 ecx, al
  00061	83 f9 01	 cmp	 ecx, 1
  00064	74 19		 je	 SHORT $LN6@SendUserIt
$LN5@SendUserIt:
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z@4JA
  0006c	83 c2 08	 add	 edx, 8
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN6@SendUserIt
  0007e	cc		 int	 3
$LN6@SendUserIt:

; 1019 : 	if ((pIServerUserItem==NULL)&&(pIServerUserItem->IsClientReady()==false)) return false;

  0007f	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00083	75 1b		 jne	 SHORT $LN3@SendUserIt
  00085	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0008d	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00093	ff d0		 call	 eax
  00095	0f b6 c8	 movzx	 ecx, al
  00098	85 c9		 test	 ecx, ecx
  0009a	75 04		 jne	 SHORT $LN3@SendUserIt
  0009c	32 c0		 xor	 al, al
  0009e	eb 32		 jmp	 SHORT $LN1@SendUserIt
$LN3@SendUserIt:

; 1020 : 
; 1021 : 	//发送数据
; 1022 : 	m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_GAME,wSubCmdID,pData,wDataSize);

  000a0	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  000a8	51		 push	 ecx
  000a9	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  000ad	52		 push	 edx
  000ae	68 c8 00 00 00	 push	 200			; 000000c8H
  000b3	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b6	50		 push	 eax
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 12		 mov	 edx, DWORD PTR [edx]
  000c5	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000cb	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000ce	ff d0		 call	 eax

; 1023 : 
; 1024 : 	return true;

  000d0	b0 01		 mov	 al, 1
$LN1@SendUserIt:

; 1025 : }

  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 10 00	 ret	 16			; 00000010H
?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@GPAXG@Z ENDP ; CTableFrame::SendUserItemData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_wSubCmdID$ = 12					; size = 2
?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z PROC ; CTableFrame::SendUserItemData, COMDAT
; _this$ = ecx

; 991  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 992  : 	//特殊处理
; 993  : 	if (pIServerUserItem==NULL)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 31		 jne	 SHORT $LN2@SendUserIt

; 994  : 	{
; 995  : 		return m_pIMainServiceFrame->SendData(BG_ALL_CLIENT,MDM_GF_GAME,wSubCmdID,NULL,0);

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001a	50		 push	 eax
  0001b	68 c8 00 00 00	 push	 200			; 000000c8H
  00020	68 ff 00 00 00	 push	 255			; 000000ffH
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 12		 mov	 edx, DWORD PTR [edx]
  00033	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00039	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0003c	ff d0		 call	 eax
  0003e	e9 85 00 00 00	 jmp	 $LN1@SendUserIt
$LN2@SendUserIt:

; 996  : 	}
; 997  : 
; 998  : 	//状态效验
; 999  : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->IsClientReady()==true));

  00043	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00047	74 18		 je	 SHORT $LN5@SendUserIt
  00049	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00051	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00057	ff d0		 call	 eax
  00059	0f b6 c8	 movzx	 ecx, al
  0005c	83 f9 01	 cmp	 ecx, 1
  0005f	74 19		 je	 SHORT $LN6@SendUserIt
$LN5@SendUserIt:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z@4JA
  00067	83 c2 08	 add	 edx, 8
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00070	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00075	85 c0		 test	 eax, eax
  00077	74 01		 je	 SHORT $LN6@SendUserIt
  00079	cc		 int	 3
$LN6@SendUserIt:

; 1000 : 	if ((pIServerUserItem==NULL)&&(pIServerUserItem->IsClientReady()==false)) return false;

  0007a	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0007e	75 1b		 jne	 SHORT $LN3@SendUserIt
  00080	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00088	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0008e	ff d0		 call	 eax
  00090	0f b6 c8	 movzx	 ecx, al
  00093	85 c9		 test	 ecx, ecx
  00095	75 04		 jne	 SHORT $LN3@SendUserIt
  00097	32 c0		 xor	 al, al
  00099	eb 2d		 jmp	 SHORT $LN1@SendUserIt
$LN3@SendUserIt:

; 1001 : 
; 1002 : 	//发送数据
; 1003 : 	m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_GAME,wSubCmdID,NULL,0);

  0009b	6a 00		 push	 0
  0009d	6a 00		 push	 0
  0009f	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000a3	50		 push	 eax
  000a4	68 c8 00 00 00	 push	 200			; 000000c8H
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ac	51		 push	 ecx
  000ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	8b 10		 mov	 edx, DWORD PTR [eax]
  000bb	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  000c1	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000c4	ff d0		 call	 eax

; 1004 : 
; 1005 : 	return true;

  000c6	b0 01		 mov	 al, 1
$LN1@SendUserIt:

; 1006 : }

  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
?SendUserItemData@CTableFrame@@UAE_NPAUIServerUserItem@@G@Z ENDP ; CTableFrame::SendUserItemData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendLookonData@CTableFrame@@UAE_NGGPAXG@Z
_TEXT	SEGMENT
tv73 = -78						; size = 2
_pIServerUserItem$ = -12				; size = 4
_wEnumIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?SendLookonData@CTableFrame@@UAE_NGGPAXG@Z PROC		; CTableFrame::SendLookonData, COMDAT
; _this$ = ecx

; 1132 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1133 : 	//变量定义
; 1134 : 	WORD wEnumIndex=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1135 : 	IServerUserItem * pIServerUserItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItem$[ebp], 0
$LN4@SendLookon:

; 1136 : 
; 1137 : 	//枚举用户
; 1138 : 	do
; 1139 : 	{
; 1140 : 		//获取用户
; 1141 : 		pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  00019	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  0001d	66 89 45 b2	 mov	 WORD PTR tv73[ebp], ax
  00021	0f b7 4d b2	 movzx	 ecx, WORD PTR tv73[ebp]
  00025	51		 push	 ecx
  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	8b 02		 mov	 eax, DWORD PTR [edx]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  00034	ff d2		 call	 edx
  00036	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax
  00039	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  0003d	66 83 c0 01	 add	 ax, 1
  00041	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1142 : 		if (pIServerUserItem==NULL) break;

  00045	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00049	75 02		 jne	 SHORT $LN5@SendLookon
  0004b	eb 7b		 jmp	 SHORT $LN3@SendLookon
$LN5@SendLookon:

; 1143 : 
; 1144 : 		//效验状态
; 1145 : 		//ASSERT(pIServerUserItem->IsClientReady()==true);
; 1146 : 		if (pIServerUserItem->IsClientReady()==false) return false;

  0004d	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00050	8b 10		 mov	 edx, DWORD PTR [eax]
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00055	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0005b	ff d0		 call	 eax
  0005d	0f b6 c8	 movzx	 ecx, al
  00060	85 c9		 test	 ecx, ecx
  00062	75 04		 jne	 SHORT $LN6@SendLookon
  00064	32 c0		 xor	 al, al
  00066	eb 62		 jmp	 SHORT $LN1@SendLookon
$LN6@SendLookon:

; 1147 : 
; 1148 : 		//发送数据
; 1149 : 		if ((wChairID==INVALID_CHAIR)||(pIServerUserItem->GetChairID()==wChairID))

  00068	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0006c	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00071	74 18		 je	 SHORT $LN8@SendLookon
  00073	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00076	8b 10		 mov	 edx, DWORD PTR [eax]
  00078	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007b	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  0007e	ff d0		 call	 eax
  00080	0f b7 c8	 movzx	 ecx, ax
  00083	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  00087	3b ca		 cmp	 ecx, edx
  00089	75 30		 jne	 SHORT $LN2@SendLookon
$LN8@SendLookon:

; 1150 : 		{
; 1151 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_GAME,wSubCmdID,pData,wDataSize);

  0008b	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0008f	50		 push	 eax
  00090	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00093	51		 push	 ecx
  00094	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00098	52		 push	 edx
  00099	68 c8 00 00 00	 push	 200			; 000000c8H
  0009e	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 12		 mov	 edx, DWORD PTR [edx]
  000b0	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  000b6	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000b9	ff d0		 call	 eax
$LN2@SendLookon:

; 1152 : 		}
; 1153 : 
; 1154 : 	} while (true);

  000bb	b8 01 00 00 00	 mov	 eax, 1
  000c0	85 c0		 test	 eax, eax
  000c2	0f 85 51 ff ff
	ff		 jne	 $LN4@SendLookon
$LN3@SendLookon:

; 1155 : 
; 1156 : 	return true;

  000c8	b0 01		 mov	 al, 1
$LN1@SendLookon:

; 1157 : }

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 10 00	 ret	 16			; 00000010H
?SendLookonData@CTableFrame@@UAE_NGGPAXG@Z ENDP		; CTableFrame::SendLookonData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendLookonData@CTableFrame@@UAE_NGG@Z
_TEXT	SEGMENT
tv73 = -78						; size = 2
_pIServerUserItem$ = -12				; size = 4
_wEnumIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
_wSubCmdID$ = 12					; size = 2
?SendLookonData@CTableFrame@@UAE_NGG@Z PROC		; CTableFrame::SendLookonData, COMDAT
; _this$ = ecx

; 1103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1104 : 	//变量定义
; 1105 : 	WORD wEnumIndex=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1106 : 	IServerUserItem * pIServerUserItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItem$[ebp], 0
$LN4@SendLookon:

; 1107 : 
; 1108 : 	//枚举用户
; 1109 : 	do
; 1110 : 	{
; 1111 : 		//获取用户
; 1112 : 		pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  00019	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  0001d	66 89 45 b2	 mov	 WORD PTR tv73[ebp], ax
  00021	0f b7 4d b2	 movzx	 ecx, WORD PTR tv73[ebp]
  00025	51		 push	 ecx
  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	8b 02		 mov	 eax, DWORD PTR [edx]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  00034	ff d2		 call	 edx
  00036	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax
  00039	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  0003d	66 83 c0 01	 add	 ax, 1
  00041	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 1113 : 		if (pIServerUserItem==NULL) break;

  00045	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00049	75 05		 jne	 SHORT $LN5@SendLookon
  0004b	e9 a7 00 00 00	 jmp	 $LN3@SendLookon
$LN5@SendLookon:

; 1114 : 
; 1115 : 		//效验状态
; 1116 : 		ASSERT(pIServerUserItem->IsClientReady()==true);

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00053	8b 10		 mov	 edx, DWORD PTR [eax]
  00055	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00058	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0005e	ff d0		 call	 eax
  00060	0f b6 c8	 movzx	 ecx, al
  00063	83 f9 01	 cmp	 ecx, 1
  00066	74 19		 je	 SHORT $LN10@SendLookon
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendLookonData@CTableFrame@@UAE_NGG@Z@4JA
  0006e	83 c2 0d	 add	 edx, 13			; 0000000dH
  00071	52		 push	 edx
  00072	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00077	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007c	85 c0		 test	 eax, eax
  0007e	74 01		 je	 SHORT $LN10@SendLookon
  00080	cc		 int	 3
$LN10@SendLookon:

; 1117 : 		if (pIServerUserItem->IsClientReady()==false) return false;

  00081	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00084	8b 10		 mov	 edx, DWORD PTR [eax]
  00086	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00089	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0008f	ff d0		 call	 eax
  00091	0f b6 c8	 movzx	 ecx, al
  00094	85 c9		 test	 ecx, ecx
  00096	75 04		 jne	 SHORT $LN6@SendLookon
  00098	32 c0		 xor	 al, al
  0009a	eb 5d		 jmp	 SHORT $LN1@SendLookon
$LN6@SendLookon:

; 1118 : 
; 1119 : 		//发送数据
; 1120 : 		if ((wChairID==INVALID_CHAIR)||(pIServerUserItem->GetChairID()==wChairID))

  0009c	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000a0	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  000a5	74 18		 je	 SHORT $LN8@SendLookon
  000a7	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000aa	8b 10		 mov	 edx, DWORD PTR [eax]
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000af	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  000b2	ff d0		 call	 eax
  000b4	0f b7 c8	 movzx	 ecx, ax
  000b7	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  000bb	3b ca		 cmp	 ecx, edx
  000bd	75 2b		 jne	 SHORT $LN2@SendLookon
$LN8@SendLookon:

; 1121 : 		{
; 1122 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_GAME,wSubCmdID,NULL,0);

  000bf	6a 00		 push	 0
  000c1	6a 00		 push	 0
  000c3	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000c7	50		 push	 eax
  000c8	68 c8 00 00 00	 push	 200			; 000000c8H
  000cd	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d0	51		 push	 ecx
  000d1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d4	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  000da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	8b 10		 mov	 edx, DWORD PTR [eax]
  000df	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  000e5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000e8	ff d0		 call	 eax
$LN2@SendLookon:

; 1123 : 		}
; 1124 : 
; 1125 : 	} while (true);

  000ea	b8 01 00 00 00	 mov	 eax, 1
  000ef	85 c0		 test	 eax, eax
  000f1	0f 85 22 ff ff
	ff		 jne	 $LN4@SendLookon
$LN3@SendLookon:

; 1126 : 
; 1127 : 	return true;

  000f7	b0 01		 mov	 al, 1
$LN1@SendLookon:

; 1128 : }

  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 08 00	 ret	 8
?SendLookonData@CTableFrame@@UAE_NGG@Z ENDP		; CTableFrame::SendLookonData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendTableData@CTableFrame@@UAE_NGGPAXGG@Z
_TEXT	SEGMENT
_pIServerUserItem$1 = -16				; size = 4
_pIServerUserItem$2 = -12				; size = 4
_i$3 = -8						; size = 2
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
_wMainCmdID$ = 24					; size = 2
?SendTableData@CTableFrame@@UAE_NGGPAXGG@Z PROC		; CTableFrame::SendTableData, COMDAT
; _this$ = ecx

; 1070 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1071 : 	//用户群发
; 1072 : 	if (wChairID==INVALID_CHAIR)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00010	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00015	0f 85 95 00 00
	00		 jne	 $LN5@SendTableD

; 1073 : 	{
; 1074 : 		for (WORD i=0;i<m_wChairCount;i++)

  0001b	33 c0		 xor	 eax, eax
  0001d	66 89 45 f8	 mov	 WORD PTR _i$3[ebp], ax
  00021	eb 0c		 jmp	 SHORT $LN4@SendTableD
$LN2@SendTableD:
  00023	66 8b 45 f8	 mov	 ax, WORD PTR _i$3[ebp]
  00027	66 83 c0 01	 add	 ax, 1
  0002b	66 89 45 f8	 mov	 WORD PTR _i$3[ebp], ax
$LN4@SendTableD:
  0002f	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0003a	3b c2		 cmp	 eax, edx
  0003c	7d 6c		 jge	 SHORT $LN3@SendTableD

; 1075 : 		{
; 1076 : 			//获取用户
; 1077 : 			IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  0003e	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 11		 mov	 edx, DWORD PTR [ecx]
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00051	ff d0		 call	 eax
  00053	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$2[ebp], eax

; 1078 : 			if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) continue;

  00056	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$2[ebp], 0
  0005a	74 17		 je	 SHORT $LN8@SendTableD
  0005c	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$2[ebp]
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$2[ebp]
  00064	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0006a	ff d0		 call	 eax
  0006c	0f b6 c8	 movzx	 ecx, al
  0006f	85 c9		 test	 ecx, ecx
  00071	75 02		 jne	 SHORT $LN7@SendTableD
$LN8@SendTableD:
  00073	eb ae		 jmp	 SHORT $LN2@SendTableD
$LN7@SendTableD:

; 1079 : 
; 1080 : 			//发送数据
; 1081 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,wMainCmdID,wSubCmdID,pData,wDataSize);

  00075	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0007d	51		 push	 ecx
  0007e	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00082	52		 push	 edx
  00083	0f b7 45 18	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00087	50		 push	 eax
  00088	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$2[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008f	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 10		 mov	 edx, DWORD PTR [eax]
  0009a	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  000a0	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000a3	ff d0		 call	 eax

; 1082 : 		}

  000a5	e9 79 ff ff ff	 jmp	 $LN2@SendTableD
$LN3@SendTableD:

; 1083 : 
; 1084 : 		return true;

  000aa	b0 01		 mov	 al, 1
  000ac	eb 71		 jmp	 SHORT $LN1@SendTableD

; 1085 : 	}
; 1086 : 	else

  000ae	eb 6d		 jmp	 SHORT $LN6@SendTableD
$LN5@SendTableD:

; 1087 : 	{
; 1088 : 		//获取用户
; 1089 : 		IServerUserItem * pIServerUserItem=GetTableUserItem(wChairID);

  000b0	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000c3	ff d0		 call	 eax
  000c5	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$1[ebp], eax

; 1090 : 		if ((pIServerUserItem==NULL)||(pIServerUserItem->IsClientReady()==false)) return false;

  000c8	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$1[ebp], 0
  000cc	74 17		 je	 SHORT $LN10@SendTableD
  000ce	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000d1	8b 10		 mov	 edx, DWORD PTR [eax]
  000d3	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000d6	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  000dc	ff d0		 call	 eax
  000de	0f b6 c8	 movzx	 ecx, al
  000e1	85 c9		 test	 ecx, ecx
  000e3	75 04		 jne	 SHORT $LN9@SendTableD
$LN10@SendTableD:
  000e5	32 c0		 xor	 al, al
  000e7	eb 36		 jmp	 SHORT $LN1@SendTableD
$LN9@SendTableD:

; 1091 : 
; 1092 : 		//发送数据
; 1093 : 		m_pIMainServiceFrame->SendData(pIServerUserItem,wMainCmdID,wSubCmdID,pData,wDataSize);

  000e9	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  000f1	51		 push	 ecx
  000f2	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  000f6	52		 push	 edx
  000f7	0f b7 45 18	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000ff	51		 push	 ecx
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  00114	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00117	ff d0		 call	 eax

; 1094 : 
; 1095 : 		return true;

  00119	b0 01		 mov	 al, 1
  0011b	eb 02		 jmp	 SHORT $LN1@SendTableD
$LN6@SendTableD:

; 1096 : 	}
; 1097 : 
; 1098 : 	return false;

  0011d	32 c0		 xor	 al, al
$LN1@SendTableD:

; 1099 : }

  0011f	5f		 pop	 edi
  00120	5e		 pop	 esi
  00121	5b		 pop	 ebx
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c2 14 00	 ret	 20			; 00000014H
?SendTableData@CTableFrame@@UAE_NGGPAXGG@Z ENDP		; CTableFrame::SendTableData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SendTableData@CTableFrame@@UAE_NGG@Z
_TEXT	SEGMENT
_pIServerUserItem$1 = -16				; size = 4
_pIServerUserItem$2 = -12				; size = 4
_i$3 = -8						; size = 2
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
_wSubCmdID$ = 12					; size = 2
?SendTableData@CTableFrame@@UAE_NGG@Z PROC		; CTableFrame::SendTableData, COMDAT
; _this$ = ecx

; 1029 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1030 : 	//用户群发
; 1031 : 	if (wChairID==INVALID_CHAIR)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00010	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00015	0f 85 d0 00 00
	00		 jne	 $LN5@SendTableD

; 1032 : 	{
; 1033 : 		for (WORD i=0;i<m_wChairCount;i++)

  0001b	33 c0		 xor	 eax, eax
  0001d	66 89 45 f8	 mov	 WORD PTR _i$3[ebp], ax
  00021	eb 0c		 jmp	 SHORT $LN4@SendTableD
$LN2@SendTableD:
  00023	66 8b 45 f8	 mov	 ax, WORD PTR _i$3[ebp]
  00027	66 83 c0 01	 add	 ax, 1
  0002b	66 89 45 f8	 mov	 WORD PTR _i$3[ebp], ax
$LN4@SendTableD:
  0002f	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0003a	3b c2		 cmp	 eax, edx
  0003c	0f 8d 9d 00 00
	00		 jge	 $LN3@SendTableD

; 1034 : 		{
; 1035 : 			//获取用户
; 1036 : 			IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  00042	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00046	50		 push	 eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00055	ff d0		 call	 eax
  00057	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$2[ebp], eax

; 1037 : 			if (pIServerUserItem==NULL) continue;

  0005a	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$2[ebp], 0
  0005e	75 02		 jne	 SHORT $LN7@SendTableD
  00060	eb c1		 jmp	 SHORT $LN2@SendTableD
$LN7@SendTableD:

; 1038 : 
; 1039 : 			//效验状态
; 1040 : 			ASSERT(pIServerUserItem->IsClientReady()==true);

  00062	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$2[ebp]
  00065	8b 10		 mov	 edx, DWORD PTR [eax]
  00067	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$2[ebp]
  0006a	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00070	ff d0		 call	 eax
  00072	0f b6 c8	 movzx	 ecx, al
  00075	83 f9 01	 cmp	 ecx, 1
  00078	74 19		 je	 SHORT $LN12@SendTableD
  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendTableData@CTableFrame@@UAE_NGG@Z@4JA
  00080	83 c2 0b	 add	 edx, 11			; 0000000bH
  00083	52		 push	 edx
  00084	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN12@SendTableD
  00092	cc		 int	 3
$LN12@SendTableD:

; 1041 : 			if (pIServerUserItem->IsClientReady()==false) continue;

  00093	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$2[ebp]
  00096	8b 10		 mov	 edx, DWORD PTR [eax]
  00098	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$2[ebp]
  0009b	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  000a1	ff d0		 call	 eax
  000a3	0f b6 c8	 movzx	 ecx, al
  000a6	85 c9		 test	 ecx, ecx
  000a8	75 05		 jne	 SHORT $LN8@SendTableD
  000aa	e9 74 ff ff ff	 jmp	 $LN2@SendTableD
$LN8@SendTableD:

; 1042 : 
; 1043 : 			//发送数据
; 1044 : 			m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_GAME,wSubCmdID,NULL,0);

  000af	6a 00		 push	 0
  000b1	6a 00		 push	 0
  000b3	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000b7	50		 push	 eax
  000b8	68 c8 00 00 00	 push	 200			; 000000c8H
  000bd	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$2[ebp]
  000c0	51		 push	 ecx
  000c1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 10		 mov	 edx, DWORD PTR [eax]
  000cf	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  000d5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000d8	ff d0		 call	 eax

; 1045 : 		}

  000da	e9 44 ff ff ff	 jmp	 $LN2@SendTableD
$LN3@SendTableD:

; 1046 : 
; 1047 : 		return true;

  000df	b0 01		 mov	 al, 1
  000e1	e9 a4 00 00 00	 jmp	 $LN1@SendTableD

; 1048 : 	}
; 1049 : 	else

  000e6	e9 9d 00 00 00	 jmp	 $LN6@SendTableD
$LN5@SendTableD:

; 1050 : 	{
; 1051 : 		//获取用户
; 1052 : 		IServerUserItem * pIServerUserItem=GetTableUserItem(wChairID);

  000eb	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000fe	ff d0		 call	 eax
  00100	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$1[ebp], eax

; 1053 : 		if (pIServerUserItem==NULL) return false;

  00103	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$1[ebp], 0
  00107	75 04		 jne	 SHORT $LN9@SendTableD
  00109	32 c0		 xor	 al, al
  0010b	eb 7d		 jmp	 SHORT $LN1@SendTableD
$LN9@SendTableD:

; 1054 : 
; 1055 : 		//效验状态
; 1056 : 		ASSERT(pIServerUserItem->IsClientReady()==true);

  0010d	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  00110	8b 10		 mov	 edx, DWORD PTR [eax]
  00112	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  00115	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0011b	ff d0		 call	 eax
  0011d	0f b6 c8	 movzx	 ecx, al
  00120	83 f9 01	 cmp	 ecx, 1
  00123	74 19		 je	 SHORT $LN13@SendTableD
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendTableData@CTableFrame@@UAE_NGG@Z@4JA
  0012b	83 c2 1b	 add	 edx, 27			; 0000001bH
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00134	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00139	85 c0		 test	 eax, eax
  0013b	74 01		 je	 SHORT $LN13@SendTableD
  0013d	cc		 int	 3
$LN13@SendTableD:

; 1057 : 		if (pIServerUserItem->IsClientReady()==false) return false;

  0013e	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  00141	8b 10		 mov	 edx, DWORD PTR [eax]
  00143	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  00146	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0014c	ff d0		 call	 eax
  0014e	0f b6 c8	 movzx	 ecx, al
  00151	85 c9		 test	 ecx, ecx
  00153	75 04		 jne	 SHORT $LN10@SendTableD
  00155	32 c0		 xor	 al, al
  00157	eb 31		 jmp	 SHORT $LN1@SendTableD
$LN10@SendTableD:

; 1058 : 
; 1059 : 		//发送数据
; 1060 : 		m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_GAME,wSubCmdID,NULL,0);

  00159	6a 00		 push	 0
  0015b	6a 00		 push	 0
  0015d	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00161	50		 push	 eax
  00162	68 c8 00 00 00	 push	 200			; 000000c8H
  00167	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  0016a	51		 push	 ecx
  0016b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016e	8b 82 cc 0f 00
	00		 mov	 eax, DWORD PTR [edx+4044]
  00174	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	8b 10		 mov	 edx, DWORD PTR [eax]
  00179	8b 89 cc 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4044]
  0017f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00182	ff d0		 call	 eax

; 1061 : 
; 1062 : 		return true;

  00184	b0 01		 mov	 al, 1
  00186	eb 02		 jmp	 SHORT $LN1@SendTableD
$LN6@SendTableD:

; 1063 : 	}
; 1064 : 
; 1065 : 	return false;

  00188	32 c0		 xor	 al, al
$LN1@SendTableD:

; 1066 : }

  0018a	5f		 pop	 edi
  0018b	5e		 pop	 esi
  0018c	5b		 pop	 ebx
  0018d	8b e5		 mov	 esp, ebp
  0018f	5d		 pop	 ebp
  00190	c2 08 00	 ret	 8
?SendTableData@CTableFrame@@UAE_NGG@Z ENDP		; CTableFrame::SendTableData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?KillGameTimer@CTableFrame@@UAE_NK@Z
_TEXT	SEGMENT
_dwEngineTimerID$ = -8					; size = 4
_this$ = -4						; size = 4
_dwTimerID$ = 8						; size = 4
?KillGameTimer@CTableFrame@@UAE_NK@Z PROC		; CTableFrame::KillGameTimer, COMDAT
; _this$ = ecx

; 977  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 978  : 	//效验参数
; 979  : 	ASSERT((dwTimerID>0)&&(dwTimerID<=TIME_TABLE_MODULE_RANGE));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _dwTimerID$[ebp], 0
  00010	76 06		 jbe	 SHORT $LN6@KillGameTi
  00012	83 7d 08 32	 cmp	 DWORD PTR _dwTimerID$[ebp], 50 ; 00000032H
  00016	76 18		 jbe	 SHORT $LN7@KillGameTi
$LN6@KillGameTi:
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??KillGameTimer@CTableFrame@@UAE_NK@Z@4JA
  0001d	83 c0 02	 add	 eax, 2
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00026	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002b	85 c0		 test	 eax, eax
  0002d	74 01		 je	 SHORT $LN7@KillGameTi
  0002f	cc		 int	 3
$LN7@KillGameTi:

; 980  : 	if ((dwTimerID<=0)||(dwTimerID>TIME_TABLE_MODULE_RANGE)) return false;

  00030	83 7d 08 00	 cmp	 DWORD PTR _dwTimerID$[ebp], 0
  00034	76 06		 jbe	 SHORT $LN3@KillGameTi
  00036	83 7d 08 32	 cmp	 DWORD PTR _dwTimerID$[ebp], 50 ; 00000032H
  0003a	76 04		 jbe	 SHORT $LN2@KillGameTi
$LN3@KillGameTi:
  0003c	32 c0		 xor	 al, al
  0003e	eb 41		 jmp	 SHORT $LN1@KillGameTi
$LN2@KillGameTi:

; 981  : 
; 982  : 	//删除时间
; 983  : 	DWORD dwEngineTimerID=IDI_TABLE_MODULE_START+m_wTableID*TIME_TABLE_MODULE_RANGE;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00047	6b d1 32	 imul	 edx, ecx, 50
  0004a	81 c2 10 27 00
	00		 add	 edx, 10000		; 00002710H
  00050	89 55 f8	 mov	 DWORD PTR _dwEngineTimerID$[ebp], edx

; 984  : 	if (m_pITimerEngine!=NULL) m_pITimerEngine->KillTimer(dwEngineTimerID+dwTimerID);

  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	83 b8 c4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4036], 0
  0005d	74 20		 je	 SHORT $LN4@KillGameTi
  0005f	8b 45 f8	 mov	 eax, DWORD PTR _dwEngineTimerID$[ebp]
  00062	03 45 08	 add	 eax, DWORD PTR _dwTimerID$[ebp]
  00065	50		 push	 eax
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 91 c4 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4036]
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 12		 mov	 edx, DWORD PTR [edx]
  00074	8b 88 c4 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4036]
  0007a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0007d	ff d0		 call	 eax
$LN4@KillGameTi:

; 985  : 
; 986  : 	return true;

  0007f	b0 01		 mov	 al, 1
$LN1@KillGameTi:

; 987  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
?KillGameTimer@CTableFrame@@UAE_NK@Z ENDP		; CTableFrame::KillGameTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetGameTimer@CTableFrame@@UAE_NKKKI@Z
_TEXT	SEGMENT
_dwEngineTimerID$ = -8					; size = 4
_this$ = -4						; size = 4
_dwTimerID$ = 8						; size = 4
_dwElapse$ = 12						; size = 4
_dwRepeat$ = 16						; size = 4
_dwBindParameter$ = 20					; size = 4
?SetGameTimer@CTableFrame@@UAE_NKKKI@Z PROC		; CTableFrame::SetGameTimer, COMDAT
; _this$ = ecx

; 963  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 964  : 	//效验参数
; 965  : 	ASSERT((dwTimerID>0)&&(dwTimerID<TIME_TABLE_MODULE_RANGE));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _dwTimerID$[ebp], 0
  00010	76 06		 jbe	 SHORT $LN6@SetGameTim
  00012	83 7d 08 32	 cmp	 DWORD PTR _dwTimerID$[ebp], 50 ; 00000032H
  00016	72 18		 jb	 SHORT $LN7@SetGameTim
$LN6@SetGameTim:
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SetGameTimer@CTableFrame@@UAE_NKKKI@Z@4JA
  0001d	83 c0 02	 add	 eax, 2
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00026	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002b	85 c0		 test	 eax, eax
  0002d	74 01		 je	 SHORT $LN7@SetGameTim
  0002f	cc		 int	 3
$LN7@SetGameTim:

; 966  : 	if ((dwTimerID<=0)||(dwTimerID>=TIME_TABLE_MODULE_RANGE)) return false;

  00030	83 7d 08 00	 cmp	 DWORD PTR _dwTimerID$[ebp], 0
  00034	76 06		 jbe	 SHORT $LN3@SetGameTim
  00036	83 7d 08 32	 cmp	 DWORD PTR _dwTimerID$[ebp], 50 ; 00000032H
  0003a	72 04		 jb	 SHORT $LN2@SetGameTim
$LN3@SetGameTim:
  0003c	32 c0		 xor	 al, al
  0003e	eb 4d		 jmp	 SHORT $LN1@SetGameTim
$LN2@SetGameTim:

; 967  : 
; 968  : 	//设置时间
; 969  : 	DWORD dwEngineTimerID=IDI_TABLE_MODULE_START+m_wTableID*TIME_TABLE_MODULE_RANGE;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00047	6b d1 32	 imul	 edx, ecx, 50
  0004a	81 c2 10 27 00
	00		 add	 edx, 10000		; 00002710H
  00050	89 55 f8	 mov	 DWORD PTR _dwEngineTimerID$[ebp], edx

; 970  : 	if (m_pITimerEngine!=NULL) m_pITimerEngine->SetTimer(dwEngineTimerID+dwTimerID,dwElapse,dwRepeat,dwBindParameter);

  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	83 b8 c4 0f 00
	00 00		 cmp	 DWORD PTR [eax+4036], 0
  0005d	74 2c		 je	 SHORT $LN4@SetGameTim
  0005f	8b 45 14	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  00062	50		 push	 eax
  00063	8b 4d 10	 mov	 ecx, DWORD PTR _dwRepeat$[ebp]
  00066	51		 push	 ecx
  00067	8b 55 0c	 mov	 edx, DWORD PTR _dwElapse$[ebp]
  0006a	52		 push	 edx
  0006b	8b 45 f8	 mov	 eax, DWORD PTR _dwEngineTimerID$[ebp]
  0006e	03 45 08	 add	 eax, DWORD PTR _dwTimerID$[ebp]
  00071	50		 push	 eax
  00072	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8b 91 c4 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4036]
  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 12		 mov	 edx, DWORD PTR [edx]
  00080	8b 88 c4 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4036]
  00086	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00089	ff d0		 call	 eax
$LN4@SetGameTim:

; 971  : 
; 972  : 	return true;

  0008b	b0 01		 mov	 al, 1
$LN1@SetGameTim:

; 973  : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 10 00	 ret	 16			; 00000010H
?SetGameTimer@CTableFrame@@UAE_NKKKI@Z ENDP		; CTableFrame::SetGameTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv228 = -100						; size = 8
tv206 = -100						; size = 8
_lUserConsumeQuota$ = -28				; size = 8
_lMinEnterScore$ = -20					; size = 8
_lTrusteeScore$ = -12					; size = 8
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z PROC ; CTableFrame::QueryConsumeQuota, COMDAT
; _this$ = ecx

; 902  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 903  : 	//用户效验
; 904  : 	ASSERT(pIServerUserItem->GetTableID()==m_wTableID);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00014	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00017	ff d0		 call	 eax
  00019	0f b7 c8	 movzx	 ecx, ax
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00023	3b c8		 cmp	 ecx, eax
  00025	74 19		 je	 SHORT $LN6@QueryConsu
  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z@4JA
  0002d	83 c1 02	 add	 ecx, 2
  00030	51		 push	 ecx
  00031	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN6@QueryConsu
  0003f	cc		 int	 3
$LN6@QueryConsu:

; 905  : 	if (pIServerUserItem->GetTableID()!=m_wTableID) return 0L;

  00040	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00048	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0004b	ff d0		 call	 eax
  0004d	0f b7 c8	 movzx	 ecx, ax
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00057	3b c8		 cmp	 ecx, eax
  00059	74 09		 je	 SHORT $LN2@QueryConsu
  0005b	33 c0		 xor	 eax, eax
  0005d	33 d2		 xor	 edx, edx
  0005f	e9 f0 00 00 00	 jmp	 $LN1@QueryConsu
$LN2@QueryConsu:

; 906  : 
; 907  : 	//查询额度
; 908  : 	SCORE lTrusteeScore=pIServerUserItem->GetTrusteeScore();

  00064	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00067	8b 10		 mov	 edx, DWORD PTR [eax]
  00069	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0006c	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00072	ff d0		 call	 eax
  00074	89 45 f4	 mov	 DWORD PTR _lTrusteeScore$[ebp], eax
  00077	89 55 f8	 mov	 DWORD PTR _lTrusteeScore$[ebp+4], edx

; 909  : 	SCORE lMinEnterScore=m_pGameServiceOption->lMinTableScore;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00083	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00086	89 55 ec	 mov	 DWORD PTR _lMinEnterScore$[ebp], edx
  00089	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0008c	89 45 f0	 mov	 DWORD PTR _lMinEnterScore$[ebp+4], eax

; 910  : 	SCORE lUserConsumeQuota=m_pITableFrameSink->QueryConsumeQuota(pIServerUserItem);

  0008f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00092	50		 push	 eax
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 12		 mov	 edx, DWORD PTR [edx]
  000a1	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  000a7	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000aa	ff d0		 call	 eax
  000ac	89 45 e4	 mov	 DWORD PTR _lUserConsumeQuota$[ebp], eax
  000af	89 55 e8	 mov	 DWORD PTR _lUserConsumeQuota$[ebp+4], edx

; 911  : 
; 912  : 	//效验额度
; 913  : 	ASSERT((lUserConsumeQuota>=0L)&&(lUserConsumeQuota<=pIServerUserItem->GetUserScore()-lMinEnterScore));

  000b2	83 7d e8 00	 cmp	 DWORD PTR _lUserConsumeQuota$[ebp+4], 0
  000b6	7c 36		 jl	 SHORT $LN7@QueryConsu
  000b8	7f 06		 jg	 SHORT $LN9@QueryConsu
  000ba	83 7d e4 00	 cmp	 DWORD PTR _lUserConsumeQuota$[ebp], 0
  000be	72 2e		 jb	 SHORT $LN7@QueryConsu
$LN9@QueryConsu:
  000c0	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c8	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  000ce	ff d0		 call	 eax
  000d0	2b 45 ec	 sub	 eax, DWORD PTR _lMinEnterScore$[ebp]
  000d3	1b 55 f0	 sbb	 edx, DWORD PTR _lMinEnterScore$[ebp+4]
  000d6	89 45 9c	 mov	 DWORD PTR tv206[ebp], eax
  000d9	89 55 a0	 mov	 DWORD PTR tv206[ebp+4], edx
  000dc	8b 4d e8	 mov	 ecx, DWORD PTR _lUserConsumeQuota$[ebp+4]
  000df	3b 4d a0	 cmp	 ecx, DWORD PTR tv206[ebp+4]
  000e2	7c 22		 jl	 SHORT $LN8@QueryConsu
  000e4	7f 08		 jg	 SHORT $LN7@QueryConsu
  000e6	8b 55 e4	 mov	 edx, DWORD PTR _lUserConsumeQuota$[ebp]
  000e9	3b 55 9c	 cmp	 edx, DWORD PTR tv206[ebp]
  000ec	76 18		 jbe	 SHORT $LN8@QueryConsu
$LN7@QueryConsu:
  000ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z@4JA
  000f3	83 c0 0b	 add	 eax, 11			; 0000000bH
  000f6	50		 push	 eax
  000f7	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000fc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00101	85 c0		 test	 eax, eax
  00103	74 01		 je	 SHORT $LN8@QueryConsu
  00105	cc		 int	 3
$LN8@QueryConsu:

; 914  : 	if ((lUserConsumeQuota<0L)||(lUserConsumeQuota>pIServerUserItem->GetUserScore()-lMinEnterScore)) return 0L;

  00106	83 7d e8 00	 cmp	 DWORD PTR _lUserConsumeQuota$[ebp+4], 0
  0010a	7c 36		 jl	 SHORT $LN4@QueryConsu
  0010c	7f 06		 jg	 SHORT $LN11@QueryConsu
  0010e	83 7d e4 00	 cmp	 DWORD PTR _lUserConsumeQuota$[ebp], 0
  00112	72 2e		 jb	 SHORT $LN4@QueryConsu
$LN11@QueryConsu:
  00114	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00117	8b 10		 mov	 edx, DWORD PTR [eax]
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0011c	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00122	ff d0		 call	 eax
  00124	2b 45 ec	 sub	 eax, DWORD PTR _lMinEnterScore$[ebp]
  00127	1b 55 f0	 sbb	 edx, DWORD PTR _lMinEnterScore$[ebp+4]
  0012a	89 45 9c	 mov	 DWORD PTR tv228[ebp], eax
  0012d	89 55 a0	 mov	 DWORD PTR tv228[ebp+4], edx
  00130	8b 4d e8	 mov	 ecx, DWORD PTR _lUserConsumeQuota$[ebp+4]
  00133	3b 4d a0	 cmp	 ecx, DWORD PTR tv228[ebp+4]
  00136	7c 10		 jl	 SHORT $LN3@QueryConsu
  00138	7f 08		 jg	 SHORT $LN4@QueryConsu
  0013a	8b 55 e4	 mov	 edx, DWORD PTR _lUserConsumeQuota$[ebp]
  0013d	3b 55 9c	 cmp	 edx, DWORD PTR tv228[ebp]
  00140	76 06		 jbe	 SHORT $LN3@QueryConsu
$LN4@QueryConsu:
  00142	33 c0		 xor	 eax, eax
  00144	33 d2		 xor	 edx, edx
  00146	eb 0c		 jmp	 SHORT $LN1@QueryConsu
$LN3@QueryConsu:

; 915  : 
; 916  : 	return lUserConsumeQuota+lTrusteeScore;

  00148	8b 45 e4	 mov	 eax, DWORD PTR _lUserConsumeQuota$[ebp]
  0014b	03 45 f4	 add	 eax, DWORD PTR _lTrusteeScore$[ebp]
  0014e	8b 55 e8	 mov	 edx, DWORD PTR _lUserConsumeQuota$[ebp+4]
  00151	13 55 f8	 adc	 edx, DWORD PTR _lTrusteeScore$[ebp+4]
$LN1@QueryConsu:

; 917  : }

  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	5b		 pop	 ebx
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 04 00	 ret	 4
?QueryConsumeQuota@CTableFrame@@UAE_JPAUIServerUserItem@@@Z ENDP ; CTableFrame::QueryConsumeQuota
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?CalculateRevenue@CTableFrame@@UAE_JG_J@Z
_TEXT	SEGMENT
tv178 = -84						; size = 4
_lRevenue$1 = -16					; size = 8
_pIServerUserItem$2 = -8				; size = 4
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
_lScore$ = 12						; size = 8
?CalculateRevenue@CTableFrame@@UAE_JG_J@Z PROC		; CTableFrame::CalculateRevenue, COMDAT
; _this$ = ecx

; 874  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 875  : 	//效验参数
; 876  : 	ASSERT(wChairID<m_wChairCount);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00017	3b c2		 cmp	 eax, edx
  00019	7c 18		 jl	 SHORT $LN7@CalculateR
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??CalculateRevenue@CTableFrame@@UAE_JG_J@Z@4JA
  00020	83 c0 02	 add	 eax, 2
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00029	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002e	85 c0		 test	 eax, eax
  00030	74 01		 je	 SHORT $LN7@CalculateR
  00032	cc		 int	 3
$LN7@CalculateR:

; 877  : 	if (wChairID>=m_wChairCount) return 0L;

  00033	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0003e	3b c2		 cmp	 eax, edx
  00040	7c 09		 jl	 SHORT $LN2@CalculateR
  00042	33 c0		 xor	 eax, eax
  00044	33 d2		 xor	 edx, edx
  00046	e9 28 01 00 00	 jmp	 $LN1@CalculateR
$LN2@CalculateR:

; 878  : 
; 879  : 	//计算税收
; 880  : 	if ((m_pGameServiceOption->wRevenueRatio>0 || m_PersonalRoomOption.lPersonalRoomTax > 0)&&(lScore>=REVENUE_BENCHMARK))

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00054	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  00058	85 d2		 test	 edx, edx
  0005a	7f 28		 jg	 SHORT $LN4@CalculateR
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	89 45 ac	 mov	 DWORD PTR tv178[ebp], eax
  00062	8b 4d ac	 mov	 ecx, DWORD PTR tv178[ebp]
  00065	83 b9 ab 44 00
	00 00		 cmp	 DWORD PTR [ecx+17579], 0
  0006c	0f 8c fd 00 00
	00		 jl	 $LN3@CalculateR
  00072	7f 10		 jg	 SHORT $LN4@CalculateR
  00074	8b 55 ac	 mov	 edx, DWORD PTR tv178[ebp]
  00077	83 ba a7 44 00
	00 00		 cmp	 DWORD PTR [edx+17575], 0
  0007e	0f 86 eb 00 00
	00		 jbe	 $LN3@CalculateR
$LN4@CalculateR:
  00084	83 7d 10 00	 cmp	 DWORD PTR _lScore$[ebp+4], 0
  00088	0f 8c e1 00 00
	00		 jl	 $LN3@CalculateR
  0008e	7f 0a		 jg	 SHORT $LN10@CalculateR
  00090	83 7d 0c 00	 cmp	 DWORD PTR _lScore$[ebp], 0
  00094	0f 82 d5 00 00
	00		 jb	 $LN3@CalculateR
$LN10@CalculateR:

; 881  : 	{
; 882  : 		//获取用户
; 883  : 		ASSERT(GetTableUserItem(wChairID)!=NULL);

  0009a	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0009e	50		 push	 eax
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000ad	ff d0		 call	 eax
  000af	85 c0		 test	 eax, eax
  000b1	75 19		 jne	 SHORT $LN8@CalculateR
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??CalculateRevenue@CTableFrame@@UAE_JG_J@Z@4JA
  000b9	83 c1 09	 add	 ecx, 9
  000bc	51		 push	 ecx
  000bd	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000c2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c7	85 c0		 test	 eax, eax
  000c9	74 01		 je	 SHORT $LN8@CalculateR
  000cb	cc		 int	 3
$LN8@CalculateR:

; 884  : 		IServerUserItem * pIServerUserItem=GetTableUserItem(wChairID);

  000cc	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  000df	ff d0		 call	 eax
  000e1	89 45 f8	 mov	 DWORD PTR _pIServerUserItem$2[ebp], eax

; 885  : 
; 886  : 		//计算税收
; 887  : 		SCORE lRevenue=lScore*m_pGameServiceOption->wRevenueRatio/REVENUE_DENOMINATOR;

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000ed	0f b7 41 0c	 movzx	 eax, WORD PTR [ecx+12]
  000f1	99		 cdq
  000f2	52		 push	 edx
  000f3	50		 push	 eax
  000f4	8b 55 10	 mov	 edx, DWORD PTR _lScore$[ebp+4]
  000f7	52		 push	 edx
  000f8	8b 45 0c	 mov	 eax, DWORD PTR _lScore$[ebp]
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 __allmul
  00101	6a 00		 push	 0
  00103	68 e8 03 00 00	 push	 1000			; 000003e8H
  00108	52		 push	 edx
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 __alldiv
  0010f	89 45 f0	 mov	 DWORD PTR _lRevenue$1[ebp], eax
  00112	89 55 f4	 mov	 DWORD PTR _lRevenue$1[ebp+4], edx

; 888  : 
; 889  : 		if((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  00115	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00118	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0011e	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00122	83 e2 10	 and	 edx, 16			; 00000010H
  00125	74 40		 je	 SHORT $LN5@CalculateR

; 890  : 		{
; 891  : 			lRevenue=lScore*(m_pGameServiceOption->wRevenueRatio + m_PersonalRoomOption.lPersonalRoomTax)/REVENUE_DENOMINATOR ;

  00127	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012a	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00130	0f b7 41 0c	 movzx	 eax, WORD PTR [ecx+12]
  00134	99		 cdq
  00135	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	03 81 a7 44 00
	00		 add	 eax, DWORD PTR [ecx+17575]
  0013e	13 91 ab 44 00
	00		 adc	 edx, DWORD PTR [ecx+17579]
  00144	52		 push	 edx
  00145	50		 push	 eax
  00146	8b 55 10	 mov	 edx, DWORD PTR _lScore$[ebp+4]
  00149	52		 push	 edx
  0014a	8b 45 0c	 mov	 eax, DWORD PTR _lScore$[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 __allmul
  00153	6a 00		 push	 0
  00155	68 e8 03 00 00	 push	 1000			; 000003e8H
  0015a	52		 push	 edx
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 __alldiv
  00161	89 45 f0	 mov	 DWORD PTR _lRevenue$1[ebp], eax
  00164	89 55 f4	 mov	 DWORD PTR _lRevenue$1[ebp+4], edx
$LN5@CalculateR:

; 892  : 		}
; 893  : 
; 894  : 		return lRevenue;

  00167	8b 45 f0	 mov	 eax, DWORD PTR _lRevenue$1[ebp]
  0016a	8b 55 f4	 mov	 edx, DWORD PTR _lRevenue$1[ebp+4]
  0016d	eb 04		 jmp	 SHORT $LN1@CalculateR
$LN3@CalculateR:

; 895  : 	}
; 896  : 
; 897  : 	return 0L;

  0016f	33 c0		 xor	 eax, eax
  00171	33 d2		 xor	 edx, edx
$LN1@CalculateR:

; 898  : }

  00173	5f		 pop	 edi
  00174	5e		 pop	 esi
  00175	5b		 pop	 ebx
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c2 0c 00	 ret	 12			; 0000000cH
?CalculateRevenue@CTableFrame@@UAE_JG_J@Z ENDP		; CTableFrame::CalculateRevenue
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?WriteTableVideoData@CTableFrame@@UAE_NPADGGPAEG@Z
_TEXT	SEGMENT
tv69 = -84						; size = 4
tv70 = -80						; size = 4
_isPlayBack$ = -9					; size = 1
_pAttemperEngineSink$ = -8				; size = 4
_this$ = -4						; size = 4
_pVideoNumber$ = 8					; size = 4
_wServerID$ = 12					; size = 2
_wTableID$ = 16						; size = 2
_pVideoData$ = 20					; size = 4
_wSize$ = 24						; size = 2
?WriteTableVideoData@CTableFrame@@UAE_NPADGGPAEG@Z PROC	; CTableFrame::WriteTableVideoData, COMDAT
; _this$ = ecx

; 860  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 861  : 	//定义变量
; 862  : 	CAttemperEngineSink * pAttemperEngineSink=(CAttemperEngineSink *)m_pIMainServiceFrame;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00015	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00018	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  0001c	74 0b		 je	 SHORT $LN4@WriteTable
  0001e	8b 55 b0	 mov	 edx, DWORD PTR tv70[ebp]
  00021	83 ea 04	 sub	 edx, 4
  00024	89 55 ac	 mov	 DWORD PTR tv69[ebp], edx
  00027	eb 07		 jmp	 SHORT $LN5@WriteTable
$LN4@WriteTable:
  00029	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN5@WriteTable:
  00030	8b 45 ac	 mov	 eax, DWORD PTR tv69[ebp]
  00033	89 45 f8	 mov	 DWORD PTR _pAttemperEngineSink$[ebp], eax

; 863  : 
; 864  : 	bool isPlayBack = CServerRule::IsSuportPlayBack(m_pGameServiceOption->dwServerRule);

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0003f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ?IsSuportPlayBack@CServerRule@@SA_NK@Z ; CServerRule::IsSuportPlayBack
  00048	83 c4 04	 add	 esp, 4
  0004b	88 45 f7	 mov	 BYTE PTR _isPlayBack$[ebp], al

; 865  : 	if(pAttemperEngineSink && isPlayBack)	

  0004e	83 7d f8 00	 cmp	 DWORD PTR _pAttemperEngineSink$[ebp], 0
  00052	74 27		 je	 SHORT $LN2@WriteTable
  00054	0f b6 45 f7	 movzx	 eax, BYTE PTR _isPlayBack$[ebp]
  00058	85 c0		 test	 eax, eax
  0005a	74 1f		 je	 SHORT $LN2@WriteTable

; 866  : 	{
; 867  : 		pAttemperEngineSink->SaveVideoDataInfo(pVideoNumber,wServerID,wTableID,pVideoData,wSize);

  0005c	0f b7 45 18	 movzx	 eax, WORD PTR _wSize$[ebp]
  00060	50		 push	 eax
  00061	8b 4d 14	 mov	 ecx, DWORD PTR _pVideoData$[ebp]
  00064	51		 push	 ecx
  00065	0f b7 55 10	 movzx	 edx, WORD PTR _wTableID$[ebp]
  00069	52		 push	 edx
  0006a	0f b7 45 0c	 movzx	 eax, WORD PTR _wServerID$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _pVideoNumber$[ebp]
  00072	51		 push	 ecx
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _pAttemperEngineSink$[ebp]
  00076	e8 00 00 00 00	 call	 ?SaveVideoDataInfo@CAttemperEngineSink@@QAE_NPADGGPAEG@Z ; CAttemperEngineSink::SaveVideoDataInfo
$LN2@WriteTable:

; 868  : 	}
; 869  : 	return true;

  0007b	b0 01		 mov	 al, 1

; 870  : }

  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 14 00	 ret	 20			; 00000014H
?WriteTableVideoData@CTableFrame@@UAE_NPADGGPAEG@Z ENDP	; CTableFrame::WriteTableVideoData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?WriteTableVideoPlayer@CTableFrame@@UAE_NKPAD@Z
_TEXT	SEGMENT
tv69 = -84						; size = 4
tv70 = -80						; size = 4
_isPlayBack$ = -9					; size = 1
_pAttemperEngineSink$ = -8				; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_pVideoNumber$ = 12					; size = 4
?WriteTableVideoPlayer@CTableFrame@@UAE_NKPAD@Z PROC	; CTableFrame::WriteTableVideoPlayer, COMDAT
; _this$ = ecx

; 846  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 847  : 	//定义变量
; 848  : 	CAttemperEngineSink * pAttemperEngineSink=(CAttemperEngineSink *)m_pIMainServiceFrame;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00015	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00018	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  0001c	74 0b		 je	 SHORT $LN4@WriteTable
  0001e	8b 55 b0	 mov	 edx, DWORD PTR tv70[ebp]
  00021	83 ea 04	 sub	 edx, 4
  00024	89 55 ac	 mov	 DWORD PTR tv69[ebp], edx
  00027	eb 07		 jmp	 SHORT $LN5@WriteTable
$LN4@WriteTable:
  00029	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN5@WriteTable:
  00030	8b 45 ac	 mov	 eax, DWORD PTR tv69[ebp]
  00033	89 45 f8	 mov	 DWORD PTR _pAttemperEngineSink$[ebp], eax

; 849  : 
; 850  : 	bool isPlayBack = CServerRule::IsSuportPlayBack(m_pGameServiceOption->dwServerRule);

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0003f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ?IsSuportPlayBack@CServerRule@@SA_NK@Z ; CServerRule::IsSuportPlayBack
  00048	83 c4 04	 add	 esp, 4
  0004b	88 45 f7	 mov	 BYTE PTR _isPlayBack$[ebp], al

; 851  : 	if(pAttemperEngineSink && isPlayBack)

  0004e	83 7d f8 00	 cmp	 DWORD PTR _pAttemperEngineSink$[ebp], 0
  00052	74 18		 je	 SHORT $LN2@WriteTable
  00054	0f b6 45 f7	 movzx	 eax, BYTE PTR _isPlayBack$[ebp]
  00058	85 c0		 test	 eax, eax
  0005a	74 10		 je	 SHORT $LN2@WriteTable

; 852  : 	{
; 853  : 		pAttemperEngineSink->SaveVideoPlayerInfo(dwUserID,pVideoNumber);

  0005c	8b 45 0c	 mov	 eax, DWORD PTR _pVideoNumber$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  00063	51		 push	 ecx
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _pAttemperEngineSink$[ebp]
  00067	e8 00 00 00 00	 call	 ?SaveVideoPlayerInfo@CAttemperEngineSink@@QAE_NKPAD@Z ; CAttemperEngineSink::SaveVideoPlayerInfo
$LN2@WriteTable:

; 854  : 	}
; 855  : 
; 856  : 	return true;

  0006c	b0 01		 mov	 al, 1

; 857  : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 08 00	 ret	 8
?WriteTableVideoPlayer@CTableFrame@@UAE_NKPAD@Z ENDP	; CTableFrame::WriteTableVideoPlayer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z
_TEXT	SEGMENT
_i$1 = -8						; size = 2
_this$ = -4						; size = 4
_ScoreInfoArray$ = 8					; size = 4
_wScoreCount$ = 12					; size = 2
?WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z PROC ; CTableFrame::WriteTableScore, COMDAT
; _this$ = ecx

; 823  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 824  : 	//效验状态
; 825  : 	ASSERT(m_bGameStarted == true);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00013	83 f9 01	 cmp	 ecx, 1
  00016	74 19		 je	 SHORT $LN9@WriteTable
  00018	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z@4JA
  0001e	83 c2 02	 add	 edx, 2
  00021	52		 push	 edx
  00022	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN9@WriteTable
  00030	cc		 int	 3
$LN9@WriteTable:

; 826  : 	if (m_bGameStarted == false) return false;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00038	85 c9		 test	 ecx, ecx
  0003a	75 07		 jne	 SHORT $LN5@WriteTable
  0003c	32 c0		 xor	 al, al
  0003e	e9 97 00 00 00	 jmp	 $LN1@WriteTable
$LN5@WriteTable:

; 827  : 
; 828  : 	//效验参数
; 829  : 	ASSERT(wScoreCount==m_wChairCount);

  00043	0f b7 45 0c	 movzx	 eax, WORD PTR _wScoreCount$[ebp]
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0004e	3b c2		 cmp	 eax, edx
  00050	74 18		 je	 SHORT $LN10@WriteTable
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z@4JA
  00057	83 c0 06	 add	 eax, 6
  0005a	50		 push	 eax
  0005b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00060	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00065	85 c0		 test	 eax, eax
  00067	74 01		 je	 SHORT $LN10@WriteTable
  00069	cc		 int	 3
$LN10@WriteTable:

; 830  : 	if (wScoreCount!=m_wChairCount) return false;

  0006a	0f b7 45 0c	 movzx	 eax, WORD PTR _wScoreCount$[ebp]
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00075	3b c2		 cmp	 eax, edx
  00077	74 04		 je	 SHORT $LN6@WriteTable
  00079	32 c0		 xor	 al, al
  0007b	eb 5d		 jmp	 SHORT $LN1@WriteTable
$LN6@WriteTable:

; 831  : 
; 832  : 	//写入分数
; 833  : 	for (WORD i=0;i<m_wChairCount;i++)

  0007d	33 c0		 xor	 eax, eax
  0007f	66 89 45 f8	 mov	 WORD PTR _i$1[ebp], ax
  00083	eb 0c		 jmp	 SHORT $LN4@WriteTable
$LN2@WriteTable:
  00085	66 8b 45 f8	 mov	 ax, WORD PTR _i$1[ebp]
  00089	66 83 c0 01	 add	 ax, 1
  0008d	66 89 45 f8	 mov	 WORD PTR _i$1[ebp], ax
$LN4@WriteTable:
  00091	0f b7 45 f8	 movzx	 eax, WORD PTR _i$1[ebp]
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0009c	3b c2		 cmp	 eax, edx
  0009e	7d 38		 jge	 SHORT $LN3@WriteTable

; 834  : 	{
; 835  : 		if (ScoreInfoArray[i].cbType!=SCORE_TYPE_NULL)

  000a0	0f b7 45 f8	 movzx	 eax, WORD PTR _i$1[ebp]
  000a4	c1 e0 05	 shl	 eax, 5
  000a7	8b 4d 08	 mov	 ecx, DWORD PTR _ScoreInfoArray$[ebp]
  000aa	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  000ae	85 d2		 test	 edx, edx
  000b0	74 24		 je	 SHORT $LN7@WriteTable

; 836  : 		{
; 837  : 			WriteUserScore(i,ScoreInfoArray[i]);

  000b2	6a ff		 push	 -1
  000b4	6a ff		 push	 -1
  000b6	0f b7 45 f8	 movzx	 eax, WORD PTR _i$1[ebp]
  000ba	c1 e0 05	 shl	 eax, 5
  000bd	03 45 08	 add	 eax, DWORD PTR _ScoreInfoArray$[ebp]
  000c0	50		 push	 eax
  000c1	0f b7 4d f8	 movzx	 ecx, WORD PTR _i$1[ebp]
  000c5	51		 push	 ecx
  000c6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c9	8b 02		 mov	 eax, DWORD PTR [edx]
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	8b 90 80 00 00
	00		 mov	 edx, DWORD PTR [eax+128]
  000d4	ff d2		 call	 edx
$LN7@WriteTable:

; 838  : 		}
; 839  : 	}

  000d6	eb ad		 jmp	 SHORT $LN2@WriteTable
$LN3@WriteTable:

; 840  : 
; 841  : 	return true;

  000d8	b0 01		 mov	 al, 1
$LN1@WriteTable:

; 842  : }

  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c2 08 00	 ret	 8
?WriteTableScore@CTableFrame@@UAE_NQAUtagScoreInfo@@G@Z ENDP ; CTableFrame::WriteTableScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z
_TEXT	SEGMENT
tv134 = -392						; size = 8
tv531 = -384						; size = 4
tv530 = -380						; size = 4
tv682 = -376						; size = 4
tv632 = -376						; size = 4
tv556 = -376						; size = 4
tv529 = -376						; size = 4
tv485 = -376						; size = 4
tv391 = -376						; size = 4
tv256 = -376						; size = 4
tv189 = -376						; size = 4
tv470 = -374						; size = 2
$T2 = -372						; size = 4
$T3 = -368						; size = 4
_i$4 = -300						; size = 2
_wEnumIndex$5 = -296					; size = 2
_pISendUserItem$6 = -292				; size = 4
_dwStartGameTime$7 = -288				; size = 4
_nCount$8 = -284					; size = 4
_pGameScoreRecord$9 = -280				; size = 4
_VariationInfo$10 = -276				; size = 80
_dwWinExperience$11 = -196				; size = 4
_pPropertyBuff$12 = -192				; size = 4
_pPropertyBuff$13 = -188				; size = 4
_pUserProperty$14 = -184				; size = 4
_dwPlayTimeCount$15 = -180				; size = 4
_dwCurrentTime$16 = -176				; size = 4
_dwMedalRate$17 = -172					; size = 4
_lRevenueScore$18 = -168				; size = 8
_dwUserMemal$19 = -160					; size = 4
_szMessage$ = -156					; size = 128
_pIServerUserItem$ = -28				; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_wChairID$ = 8						; size = 2
_ScoreInfo$ = 12					; size = 4
_dwGameMemal$ = 16					; size = 4
_dwPlayGameTime$ = 20					; size = 4
?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z PROC ; CTableFrame::WriteUserScore, COMDAT
; _this$ = ecx

; 605  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 606  : 	//效验参数
; 607  : //	ASSERT((wChairID<m_wChairCount)&&(ScoreInfo.cbType!=SCORE_TYPE_NULL));
; 608  : 	if ((wChairID>=m_wChairCount)||(ScoreInfo.cbType==SCORE_TYPE_NULL)) return false;

  00035	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0003c	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  00040	3b d1		 cmp	 edx, ecx
  00042	7d 0a		 jge	 SHORT $LN9@WriteUserS
  00044	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  00047	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 07		 jne	 SHORT $LN8@WriteUserS
$LN9@WriteUserS:
  0004e	32 c0		 xor	 al, al
  00050	e9 9d 09 00 00	 jmp	 $LN38@WriteUserS
$LN8@WriteUserS:

; 609  : 
; 610  : 	//获取用户
; 611  : 	//ASSERT(GetTableUserItem(wChairID)!=NULL);
; 612  : 	IServerUserItem * pIServerUserItem=GetTableUserItem(wChairID);

  00055	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00068	ff d0		 call	 eax
  0006a	89 45 e4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 613  : 	TCHAR szMessage[128]=TEXT("");

  0006d	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00072	88 85 64 ff ff
	ff		 mov	 BYTE PTR _szMessage$[ebp], al
  00078	6a 7f		 push	 127			; 0000007fH
  0007a	6a 00		 push	 0
  0007c	8d 85 65 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp+1]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 _memset
  00088	83 c4 0c	 add	 esp, 12			; 0000000cH

; 614  : 
; 615  : 	//写入积分
; 616  : 	if (pIServerUserItem!=NULL)

  0008b	83 7d e4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0008f	0f 84 46 08 00
	00		 je	 $LN11@WriteUserS

; 617  : 	{
; 618  : 		//变量定义
; 619  : 		DWORD dwUserMemal=0L;

  00095	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwUserMemal$19[ebp], 0

; 620  : 		SCORE lRevenueScore=__min(m_lFrozenedScore[wChairID],m_pGameServiceOption->lServiceScore);

  0009f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000a8	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  000ac	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000af	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv529[ebp], eax
  000b5	89 95 84 fe ff
	ff		 mov	 DWORD PTR tv530[ebp], edx
  000bb	89 8d 80 fe ff
	ff		 mov	 DWORD PTR tv531[ebp], ecx
  000c1	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR tv530[ebp]
  000c7	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR tv529[ebp]
  000cd	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv531[ebp]
  000d3	8b 8c ca e4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*8+228]
  000da	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  000dd	7f 43		 jg	 SHORT $LN39@WriteUserS
  000df	7c 1e		 jl	 SHORT $LN52@WriteUserS
  000e1	8b 95 84 fe ff
	ff		 mov	 edx, DWORD PTR tv530[ebp]
  000e7	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR tv529[ebp]
  000ed	8b 8d 80 fe ff
	ff		 mov	 ecx, DWORD PTR tv531[ebp]
  000f3	8b 94 d0 e0 00
	00 00		 mov	 edx, DWORD PTR [eax+edx*8+224]
  000fa	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  000fd	73 23		 jae	 SHORT $LN39@WriteUserS
$LN52@WriteUserS:
  000ff	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00103	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	8b 94 c1 e0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*8+224]
  0010d	89 95 78 fe ff
	ff		 mov	 DWORD PTR tv134[ebp], edx
  00113	8b 84 c1 e4 00
	00 00		 mov	 eax, DWORD PTR [ecx+eax*8+228]
  0011a	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv134[ebp+4], eax
  00120	eb 1b		 jmp	 SHORT $LN40@WriteUserS
$LN39@WriteUserS:
  00122	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 91 f0 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4080]
  0012b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0012e	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv134[ebp], eax
  00134	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  00137	89 8d 7c fe ff
	ff		 mov	 DWORD PTR tv134[ebp+4], ecx
$LN40@WriteUserS:
  0013d	8b 95 78 fe ff
	ff		 mov	 edx, DWORD PTR tv134[ebp]
  00143	89 95 58 ff ff
	ff		 mov	 DWORD PTR _lRevenueScore$18[ebp], edx
  00149	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv134[ebp+4]
  0014f	89 85 5c ff ff
	ff		 mov	 DWORD PTR _lRevenueScore$18[ebp+4], eax

; 621  : 
; 622  : 		//扣服务费
; 623  : 		if (m_pGameServiceOption->lServiceScore>0L 
; 624  : 			&& m_pGameServiceOption->wServerType == GAME_GENRE_GOLD
; 625  : 			&& m_pITableFrameSink->QueryBuckleServiceCharge(wChairID))

  00155	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00158	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0015e	89 8d 88 fe ff
	ff		 mov	 DWORD PTR tv556[ebp], ecx
  00164	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR tv556[ebp]
  0016a	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  0016e	0f 8c d1 00 00
	00		 jl	 $LN12@WriteUserS
  00174	7f 10		 jg	 SHORT $LN53@WriteUserS
  00176	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR tv556[ebp]
  0017c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00180	0f 86 bf 00 00
	00		 jbe	 $LN12@WriteUserS
$LN53@WriteUserS:
  00186	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00189	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0018f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00193	83 fa 01	 cmp	 edx, 1
  00196	0f 85 a9 00 00
	00		 jne	 $LN12@WriteUserS
  0019c	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  001a0	50		 push	 eax
  001a1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  001a7	8b 82 c8 0f 00
	00		 mov	 eax, DWORD PTR [edx+4040]
  001ad	8b 10		 mov	 edx, DWORD PTR [eax]
  001af	8b 89 c8 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4040]
  001b5	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  001b8	ff d0		 call	 eax
  001ba	0f b6 c8	 movzx	 ecx, al
  001bd	85 c9		 test	 ecx, ecx
  001bf	0f 84 80 00 00
	00		 je	 $LN12@WriteUserS

; 626  : 		{
; 627  : 			//扣服务费
; 628  : 			ScoreInfo.lScore-=lRevenueScore;

  001c5	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  001c8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cb	2b 8d 58 ff ff
	ff		 sub	 ecx, DWORD PTR _lRevenueScore$18[ebp]
  001d1	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001d4	1b 95 5c ff ff
	ff		 sbb	 edx, DWORD PTR _lRevenueScore$18[ebp+4]
  001da	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  001dd	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  001e0	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 629  : 			ScoreInfo.lRevenue+=lRevenueScore;

  001e3	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  001e6	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001e9	03 8d 58 ff ff
	ff		 add	 ecx, DWORD PTR _lRevenueScore$18[ebp]
  001ef	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  001f2	13 95 5c ff ff
	ff		 adc	 edx, DWORD PTR _lRevenueScore$18[ebp+4]
  001f8	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  001fb	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  001fe	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 630  : 
; 631  : 			//解锁游戏币
; 632  : 			pIServerUserItem->UnFrozenedUserScore(m_lFrozenedScore[wChairID]);

  00201	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00205	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00208	8b 94 c1 e4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*8+228]
  0020f	52		 push	 edx
  00210	8b 84 c1 e0 00
	00 00		 mov	 eax, DWORD PTR [ecx+eax*8+224]
  00217	50		 push	 eax
  00218	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0021b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0021d	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00220	8b 82 10 01 00
	00		 mov	 eax, DWORD PTR [edx+272]
  00226	ff d0		 call	 eax

; 633  : 			m_lFrozenedScore[wChairID]=0L;

  00228	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0022c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	c7 84 c1 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*8+224], 0
  0023a	c7 84 c1 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*8+228], 0
$LN12@WriteUserS:

; 634  : 		}
; 635  : 
; 636  : 		//奖牌计算
; 637  : 		if(dwGameMemal != INVALID_DWORD)

  00245	83 7d 10 ff	 cmp	 DWORD PTR _dwGameMemal$[ebp], -1
  00249	74 0b		 je	 SHORT $LN13@WriteUserS

; 638  : 		{
; 639  : 			dwUserMemal = dwGameMemal;

  0024b	8b 45 10	 mov	 eax, DWORD PTR _dwGameMemal$[ebp]
  0024e	89 85 60 ff ff
	ff		 mov	 DWORD PTR _dwUserMemal$19[ebp], eax
  00254	eb 62		 jmp	 SHORT $LN14@WriteUserS
$LN13@WriteUserS:

; 640  : 		}
; 641  : 		else if (ScoreInfo.lRevenue>0L)

  00256	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  00259	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv632[ebp], eax
  0025f	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv632[ebp]
  00265	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  00269	7c 4d		 jl	 SHORT $LN14@WriteUserS
  0026b	7f 0c		 jg	 SHORT $LN54@WriteUserS
  0026d	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR tv632[ebp]
  00273	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  00277	76 3f		 jbe	 SHORT $LN14@WriteUserS
$LN54@WriteUserS:

; 642  : 		{
; 643  : 			DWORD dwMedalRate=m_pGameParameter->dwMedalRate;

  00279	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0027c	8b 88 e4 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4068]
  00282	8b 11		 mov	 edx, DWORD PTR [ecx]
  00284	89 95 54 ff ff
	ff		 mov	 DWORD PTR _dwMedalRate$17[ebp], edx

; 644  : 			dwUserMemal=(DWORD)(ScoreInfo.lRevenue*dwMedalRate/1000L);

  0028a	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _dwMedalRate$17[ebp]
  00290	33 c9		 xor	 ecx, ecx
  00292	8b 55 0c	 mov	 edx, DWORD PTR _ScoreInfo$[ebp]
  00295	51		 push	 ecx
  00296	50		 push	 eax
  00297	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0029a	50		 push	 eax
  0029b	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0029e	51		 push	 ecx
  0029f	e8 00 00 00 00	 call	 __allmul
  002a4	6a 00		 push	 0
  002a6	68 e8 03 00 00	 push	 1000			; 000003e8H
  002ab	52		 push	 edx
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 __alldiv
  002b2	89 85 60 ff ff
	ff		 mov	 DWORD PTR _dwUserMemal$19[ebp], eax
$LN14@WriteUserS:

; 645  : 		}
; 646  : 
; 647  : 		//游戏时间
; 648  : 		DWORD dwCurrentTime=(DWORD)time(NULL);

  002b8	6a 00		 push	 0
  002ba	e8 00 00 00 00	 call	 _time
  002bf	83 c4 04	 add	 esp, 4
  002c2	89 85 50 ff ff
	ff		 mov	 DWORD PTR _dwCurrentTime$16[ebp], eax

; 649  : 		DWORD dwPlayTimeCount=((m_bDrawStarted==true)?(dwCurrentTime-m_dwDrawStartTime):0L);

  002c8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002cb	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  002cf	83 f9 01	 cmp	 ecx, 1
  002d2	75 17		 jne	 SHORT $LN41@WriteUserS
  002d4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  002d7	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _dwCurrentTime$16[ebp]
  002dd	2b 82 28 07 00
	00		 sub	 eax, DWORD PTR [edx+1832]
  002e3	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv189[ebp], eax
  002e9	eb 0a		 jmp	 SHORT $LN42@WriteUserS
$LN41@WriteUserS:
  002eb	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv189[ebp], 0
$LN42@WriteUserS:
  002f5	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv189[ebp]
  002fb	89 8d 4c ff ff
	ff		 mov	 DWORD PTR _dwPlayTimeCount$15[ebp], ecx

; 650  : 		if(dwPlayGameTime!=INVALID_DWORD) dwPlayTimeCount=dwPlayGameTime;

  00301	83 7d 14 ff	 cmp	 DWORD PTR _dwPlayGameTime$[ebp], -1
  00305	74 09		 je	 SHORT $LN16@WriteUserS
  00307	8b 45 14	 mov	 eax, DWORD PTR _dwPlayGameTime$[ebp]
  0030a	89 85 4c ff ff
	ff		 mov	 DWORD PTR _dwPlayTimeCount$15[ebp], eax
$LN16@WriteUserS:

; 651  : 
; 652  : 		//变量定义
; 653  : 		tagUserProperty * pUserProperty=pIServerUserItem->GetUserProperty();

  00310	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00313	8b 10		 mov	 edx, DWORD PTR [eax]
  00315	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00318	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0031b	ff d0		 call	 eax
  0031d	89 85 48 ff ff
	ff		 mov	 DWORD PTR _pUserProperty$14[ebp], eax

; 654  : 
; 655  : 		//道具判断
; 656  : 		if(m_pGameServiceOption->wServerType == GAME_GENRE_SCORE)

  00323	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00326	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0032c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00330	83 fa 02	 cmp	 edx, 2
  00333	0f 85 47 01 00
	00		 jne	 $LN17@WriteUserS

; 657  : 		{
; 658  : 			if (ScoreInfo.lScore>0L)

  00339	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  0033c	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv682[ebp], eax
  00342	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv682[ebp]
  00348	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  0034c	0f 8c ce 00 00
	00		 jl	 $LN18@WriteUserS
  00352	7f 10		 jg	 SHORT $LN55@WriteUserS
  00354	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR tv682[ebp]
  0035a	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0035e	0f 86 bc 00 00
	00		 jbe	 $LN18@WriteUserS
$LN55@WriteUserS:

; 659  : 			{
; 660  : 				//积分双卡
; 661  : 				tagPropertyBuff* pPropertyBuff = CGamePropertyManager::SearchValidPropertyBuff(pIServerUserItem->GetUserID(), PROP_KIND_DOOUBLE);

  00364	6a 03		 push	 3
  00366	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00369	8b 10		 mov	 edx, DWORD PTR [eax]
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0036e	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00371	ff d0		 call	 eax
  00373	50		 push	 eax
  00374	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SearchValidPropertyBuff@CGamePropertyManager@@SAPAUtagPropertyBuff@@KW4PROP_KIND@@@Z
  0037a	83 c4 08	 add	 esp, 8
  0037d	89 85 44 ff ff
	ff		 mov	 DWORD PTR _pPropertyBuff$13[ebp], eax

; 662  : 				if ( pPropertyBuff != NULL )

  00383	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _pPropertyBuff$13[ebp], 0
  0038a	0f 84 8e 00 00
	00		 je	 $LN20@WriteUserS

; 663  : 				{
; 664  : 					//积分翻倍 2倍 4倍
; 665  : 					ScoreInfo.lScore *= pPropertyBuff->dwScoreMultiple;

  00390	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pPropertyBuff$13[ebp]
  00396	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00399	33 d2		 xor	 edx, edx
  0039b	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  0039e	52		 push	 edx
  0039f	51		 push	 ecx
  003a0	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  003a3	51		 push	 ecx
  003a4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  003a7	52		 push	 edx
  003a8	e8 00 00 00 00	 call	 __allmul
  003ad	8b 4d 0c	 mov	 ecx, DWORD PTR _ScoreInfo$[ebp]
  003b0	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  003b3	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 666  : 					if( pPropertyBuff->dwScoreMultiple == 4 )

  003b6	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pPropertyBuff$13[ebp]
  003bc	83 78 04 04	 cmp	 DWORD PTR [eax+4], 4
  003c0	75 29		 jne	 SHORT $LN21@WriteUserS

; 667  : 					{
; 668  : 						_sntprintf_s(szMessage,CountArray(szMessage),TEXT("[ %s ] 使用了[ 四倍积分卡 ]，得分翻四倍！)"),pIServerUserItem->GetNickName());

  003c2	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003c5	8b 10		 mov	 edx, DWORD PTR [eax]
  003c7	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003ca	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  003cd	ff d0		 call	 eax
  003cf	50		 push	 eax
  003d0	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@IKLNOEBJ@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?D?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@
  003d5	68 80 00 00 00	 push	 128			; 00000080H
  003da	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$[ebp]
  003e0	51		 push	 ecx
  003e1	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  003e6	83 c4 10	 add	 esp, 16			; 00000010H
  003e9	eb 33		 jmp	 SHORT $LN20@WriteUserS
$LN21@WriteUserS:

; 669  : 					}
; 670  : 					else if( pPropertyBuff->dwScoreMultiple == 2 )

  003eb	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pPropertyBuff$13[ebp]
  003f1	83 78 04 02	 cmp	 DWORD PTR [eax+4], 2
  003f5	75 27		 jne	 SHORT $LN20@WriteUserS

; 671  : 					{
; 672  : 						_sntprintf_s(szMessage,CountArray(szMessage),TEXT("[ %s ] 使用了[ 双倍积分卡 ]，得分翻倍！"), pIServerUserItem->GetNickName());

  003f7	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003fa	8b 10		 mov	 edx, DWORD PTR [eax]
  003fc	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003ff	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00402	ff d0		 call	 eax
  00404	50		 push	 eax
  00405	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@KNPBKMHB@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?K?$KL?$LB?$LG?$LL?$PN?$LH?V?$LP?$KI?5?$FN?$KD?$KM?$LF?C@
  0040a	68 80 00 00 00	 push	 128			; 00000080H
  0040f	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$[ebp]
  00415	51		 push	 ecx
  00416	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  0041b	83 c4 10	 add	 esp, 16			; 00000010H
$LN20@WriteUserS:

; 673  : 					}
; 674  : 				}
; 675  : 			}
; 676  : 			else

  0041e	eb 60		 jmp	 SHORT $LN17@WriteUserS
$LN18@WriteUserS:

; 677  : 			{
; 678  : 				//附身符
; 679  : 				tagPropertyBuff* pPropertyBuff = CGamePropertyManager::SearchValidPropertyBuff(pIServerUserItem->GetUserID(), PROP_KIND_DEFENSE);

  00420	6a 04		 push	 4
  00422	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00425	8b 10		 mov	 edx, DWORD PTR [eax]
  00427	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0042a	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0042d	ff d0		 call	 eax
  0042f	50		 push	 eax
  00430	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SearchValidPropertyBuff@CGamePropertyManager@@SAPAUtagPropertyBuff@@KW4PROP_KIND@@@Z
  00436	83 c4 08	 add	 esp, 8
  00439	89 85 40 ff ff
	ff		 mov	 DWORD PTR _pPropertyBuff$12[ebp], eax

; 680  : 				if ( pPropertyBuff != NULL )

  0043f	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR _pPropertyBuff$12[ebp], 0
  00446	74 38		 je	 SHORT $LN17@WriteUserS

; 681  : 				{
; 682  : 					//积分不减
; 683  : 					ScoreInfo.lScore = 0;

  00448	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  0044b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00452	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 684  : 					_sntprintf_s(szMessage,CountArray(szMessage),TEXT("[ %s ] 使用了[ 护身符卡 ]，积分不变！"),pIServerUserItem->GetNickName());

  00459	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0045c	8b 10		 mov	 edx, DWORD PTR [eax]
  0045e	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00461	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00464	ff d0		 call	 eax
  00466	50		 push	 eax
  00467	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BJIOFAKH@?$FL?5?$CFs?5?$FN?5?J?$LJ?S?C?A?K?$FL?5?$LL?$KE?I?m?$LH?$PL?$LP?$KI?5?$FN?$KD?$KM?$LL?$PN?$LH?V@
  0046c	68 80 00 00 00	 push	 128			; 00000080H
  00471	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$[ebp]
  00477	51		 push	 ecx
  00478	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  0047d	83 c4 10	 add	 esp, 16			; 00000010H
$LN17@WriteUserS:

; 685  : 				}
; 686  : 			}
; 687  : 		}
; 688  : 
; 689  : 		//写入积分
; 690  : 		DWORD dwWinExperience=ScoreInfo.cbType==SCORE_TYPE_WIN?m_pGameParameter->dwWinExperience:0;

  00480	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  00483	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00486	83 f9 01	 cmp	 ecx, 1
  00489	75 14		 jne	 SHORT $LN43@WriteUserS
  0048b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0048e	8b 82 e4 0f 00
	00		 mov	 eax, DWORD PTR [edx+4068]
  00494	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00497	89 8d 88 fe ff
	ff		 mov	 DWORD PTR tv256[ebp], ecx
  0049d	eb 0a		 jmp	 SHORT $LN44@WriteUserS
$LN43@WriteUserS:
  0049f	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv256[ebp], 0
$LN44@WriteUserS:
  004a9	8b 95 88 fe ff
	ff		 mov	 edx, DWORD PTR tv256[ebp]
  004af	89 95 3c ff ff
	ff		 mov	 DWORD PTR _dwWinExperience$11[ebp], edx

; 691  : 		pIServerUserItem->WriteUserScore(ScoreInfo.lScore,ScoreInfo.lGrade,ScoreInfo.lRevenue,dwUserMemal,ScoreInfo.cbType,dwPlayTimeCount,dwWinExperience);

  004b5	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _dwWinExperience$11[ebp]
  004bb	50		 push	 eax
  004bc	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _dwPlayTimeCount$15[ebp]
  004c2	51		 push	 ecx
  004c3	8b 55 0c	 mov	 edx, DWORD PTR _ScoreInfo$[ebp]
  004c6	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  004c9	50		 push	 eax
  004ca	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _dwUserMemal$19[ebp]
  004d0	33 d2		 xor	 edx, edx
  004d2	52		 push	 edx
  004d3	51		 push	 ecx
  004d4	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  004d7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  004da	51		 push	 ecx
  004db	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  004de	52		 push	 edx
  004df	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  004e2	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  004e5	51		 push	 ecx
  004e6	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  004e9	52		 push	 edx
  004ea	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  004ed	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  004f0	51		 push	 ecx
  004f1	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  004f4	52		 push	 edx
  004f5	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004f8	8b 10		 mov	 edx, DWORD PTR [eax]
  004fa	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  004fd	8b 82 00 01 00
	00		 mov	 eax, DWORD PTR [edx+256]
  00503	ff d0		 call	 eax

; 692  : 
; 693  : 		//提取积分
; 694  : 		tagVariationInfo VariationInfo;
; 695  : 		pIServerUserItem->DistillVariation(VariationInfo);

  00505	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _VariationInfo$10[ebp]
  0050b	50		 push	 eax
  0050c	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0050f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00511	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00514	8b 82 f8 00 00
	00		 mov	 eax, DWORD PTR [edx+248]
  0051a	ff d0		 call	 eax

; 696  : 
; 697  : 		m_PersonalUserScoreInfo[wChairID].dwUserID = pIServerUserItem->GetUserID();		//用户ID

  0051c	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0051f	8b 10		 mov	 edx, DWORD PTR [eax]
  00521	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00524	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00527	ff d0		 call	 eax
  00529	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  0052d	6b d1 3c	 imul	 edx, ecx, 60
  00530	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00533	89 84 11 9d 11
	00 00		 mov	 DWORD PTR [ecx+edx+4509], eax

; 698  : 		//用户昵称
; 699  : 		lstrcpyn(m_PersonalUserScoreInfo[wChairID].szUserNicname, pIServerUserItem->GetNickName(), sizeof(m_PersonalUserScoreInfo[wChairID].szUserNicname));

  0053a	6a 20		 push	 32			; 00000020H
  0053c	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0053f	8b 10		 mov	 edx, DWORD PTR [eax]
  00541	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00544	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00547	ff d0		 call	 eax
  00549	50		 push	 eax
  0054a	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChairID$[ebp]
  0054e	6b d1 3c	 imul	 edx, ecx, 60
  00551	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00554	8d 8c 10 a1 11
	00 00		 lea	 ecx, DWORD PTR [eax+edx+4513]
  0055b	51		 push	 ecx
  0055c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 700  : 		m_PersonalUserScoreInfo[wChairID].lScore += ScoreInfo.lScore;							//用户分数

  00562	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00566	6b c8 3c	 imul	 ecx, eax, 60
  00569	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0056c	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  0056f	8b b4 0a c1 11
	00 00		 mov	 esi, DWORD PTR [edx+ecx+4545]
  00576	03 70 08	 add	 esi, DWORD PTR [eax+8]
  00579	8b 8c 0a c5 11
	00 00		 mov	 ecx, DWORD PTR [edx+ecx+4549]
  00580	13 48 0c	 adc	 ecx, DWORD PTR [eax+12]
  00583	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  00587	6b c2 3c	 imul	 eax, edx, 60
  0058a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0058d	89 b4 02 c1 11
	00 00		 mov	 DWORD PTR [edx+eax+4545], esi
  00594	89 8c 02 c5 11
	00 00		 mov	 DWORD PTR [edx+eax+4549], ecx

; 701  : 		m_PersonalUserScoreInfo[wChairID].lGrade += ScoreInfo.lGrade;							//用户成绩

  0059b	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0059f	6b c8 3c	 imul	 ecx, eax, 60
  005a2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  005a5	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  005a8	8b b4 0a c9 11
	00 00		 mov	 esi, DWORD PTR [edx+ecx+4553]
  005af	03 70 10	 add	 esi, DWORD PTR [eax+16]
  005b2	8b 8c 0a cd 11
	00 00		 mov	 ecx, DWORD PTR [edx+ecx+4557]
  005b9	13 48 14	 adc	 ecx, DWORD PTR [eax+20]
  005bc	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  005c0	6b c2 3c	 imul	 eax, edx, 60
  005c3	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  005c6	89 b4 02 c9 11
	00 00		 mov	 DWORD PTR [edx+eax+4553], esi
  005cd	89 8c 02 cd 11
	00 00		 mov	 DWORD PTR [edx+eax+4557], ecx

; 702  : 		m_PersonalUserScoreInfo[wChairID].lTaxCount += ScoreInfo.lRevenue;					//用户税收

  005d4	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  005d8	6b c8 3c	 imul	 ecx, eax, 60
  005db	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  005de	8b 45 0c	 mov	 eax, DWORD PTR _ScoreInfo$[ebp]
  005e1	8b b4 0a d1 11
	00 00		 mov	 esi, DWORD PTR [edx+ecx+4561]
  005e8	03 70 18	 add	 esi, DWORD PTR [eax+24]
  005eb	8b 8c 0a d5 11
	00 00		 mov	 ecx, DWORD PTR [edx+ecx+4565]
  005f2	13 48 1c	 adc	 ecx, DWORD PTR [eax+28]
  005f5	0f b7 55 08	 movzx	 edx, WORD PTR _wChairID$[ebp]
  005f9	6b c2 3c	 imul	 eax, edx, 60
  005fc	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  005ff	89 b4 02 d1 11
	00 00		 mov	 DWORD PTR [edx+eax+4561], esi
  00606	89 8c 02 d5 11
	00 00		 mov	 DWORD PTR [edx+eax+4565], ecx

; 703  : 
; 704  : 		//游戏记录
; 705  : 		if (pIServerUserItem->IsAndroidUser()==false && CServerRule::IsRecordGameScore(m_pGameServiceOption->dwServerRule)==true)

  0060d	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00610	8b 10		 mov	 edx, DWORD PTR [eax]
  00612	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00615	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0061b	ff d0		 call	 eax
  0061d	0f b6 c8	 movzx	 ecx, al
  00620	85 c9		 test	 ecx, ecx
  00622	0f 85 77 02 00
	00		 jne	 $LN25@WriteUserS
  00628	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0062b	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00631	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00634	52		 push	 edx
  00635	e8 00 00 00 00	 call	 ?IsRecordGameScore@CServerRule@@SA_NK@Z ; CServerRule::IsRecordGameScore
  0063a	83 c4 04	 add	 esp, 4
  0063d	0f b6 c0	 movzx	 eax, al
  00640	83 f8 01	 cmp	 eax, 1
  00643	0f 85 56 02 00
	00		 jne	 $LN25@WriteUserS

; 706  : 		{
; 707  : 			//变量定义
; 708  : 			tagGameScoreRecord * pGameScoreRecord=NULL;

  00649	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pGameScoreRecord$9[ebp], 0

; 709  : 
; 710  : 			//查询库存
; 711  : 			if (m_GameScoreRecordBuffer.GetCount()>0L)

  00653	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  00658	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount
  0065d	85 c0		 test	 eax, eax
  0065f	7e 42		 jle	 SHORT $LN26@WriteUserS

; 712  : 			{
; 713  : 				//获取对象
; 714  : 				INT_PTR nCount=m_GameScoreRecordBuffer.GetCount();

  00661	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  00666	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount
  0066b	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _nCount$8[ebp], eax

; 715  : 				pGameScoreRecord=m_GameScoreRecordBuffer[nCount-1];

  00671	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _nCount$8[ebp]
  00677	83 e8 01	 sub	 eax, 1
  0067a	50		 push	 eax
  0067b	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  00680	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::operator[]
  00685	8b 08		 mov	 ecx, DWORD PTR [eax]
  00687	89 8d e8 fe ff
	ff		 mov	 DWORD PTR _pGameScoreRecord$9[ebp], ecx

; 716  : 
; 717  : 				//删除对象
; 718  : 				m_GameScoreRecordBuffer.RemoveAt(nCount-1);

  0068d	6a 01		 push	 1
  0068f	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _nCount$8[ebp]
  00695	83 e8 01	 sub	 eax, 1
  00698	50		 push	 eax
  00699	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_GameScoreRecordBuffer@CTableFrame@@1V?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@A ; CTableFrame::m_GameScoreRecordBuffer
  0069e	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAt
$LN26@WriteUserS:

; 719  : 			}
; 720  : 
; 721  : 			//创建对象
; 722  : 			if (pGameScoreRecord==NULL)

  006a3	83 bd e8 fe ff
	ff 00		 cmp	 DWORD PTR _pGameScoreRecord$9[ebp], 0
  006aa	0f 85 96 00 00
	00		 jne	 $LN27@WriteUserS

; 723  : 			{
; 724  : 				try

  006b0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 725  : 				{
; 726  : 					//创建对象
; 727  : 					pGameScoreRecord=new tagGameScoreRecord;

  006b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z@4JA
  006bc	83 c0 7a	 add	 eax, 122		; 0000007aH
  006bf	50		 push	 eax
  006c0	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  006c5	6a 30		 push	 48			; 00000030H
  006c7	e8 00 00 00 00	 call	 ??2@YAPAXIPBDH@Z	; operator new
  006cc	83 c4 0c	 add	 esp, 12			; 0000000cH
  006cf	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv485[ebp], eax
  006d5	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv485[ebp]
  006db	89 8d 90 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  006e1	8b 95 90 fe ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  006e7	89 95 e8 fe ff
	ff		 mov	 DWORD PTR _pGameScoreRecord$9[ebp], edx

; 728  : 					if (pGameScoreRecord==NULL) throw TEXT("游戏记录对象创建失败");

  006ed	83 bd e8 fe ff
	ff 00		 cmp	 DWORD PTR _pGameScoreRecord$9[ebp], 0
  006f4	75 1b		 jne	 SHORT $LN29@WriteUserS
  006f6	c7 85 8c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], OFFSET ??_C@_0BF@OJEHDHNG@?S?N?O?$LH?$LM?G?B?$LM?$LG?T?O?s?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  00700	68 00 00 00 00	 push	 OFFSET __TI2PAD
  00705	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0070b	50		 push	 eax
  0070c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN29@WriteUserS:

; 729  : 				}

  00711	eb 23		 jmp	 SHORT $LN48@WriteUserS
__catch$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z$0:

; 730  : 				catch (...)
; 731  : 				{
; 732  : 					ASSERT(FALSE);

  00713	33 c0		 xor	 eax, eax
  00715	75 19		 jne	 SHORT $LN45@WriteUserS
  00717	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z@4JA
  0071d	83 c1 7f	 add	 ecx, 127		; 0000007fH
  00720	51		 push	 ecx
  00721	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00726	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0072b	85 c0		 test	 eax, eax
  0072d	74 01		 je	 SHORT $LN45@WriteUserS
  0072f	cc		 int	 3
$LN45@WriteUserS:

; 733  : 				}

  00730	b8 00 00 00 00	 mov	 eax, $LN51@WriteUserS
  00735	c3		 ret	 0
$LN48@WriteUserS:
  00736	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0073d	eb 07		 jmp	 SHORT $LN27@WriteUserS
$LN51@WriteUserS:
  0073f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN27@WriteUserS:

; 734  : 			}
; 735  : 
; 736  : 			//记录数据
; 737  : 			if (pGameScoreRecord!=NULL)

  00746	83 bd e8 fe ff
	ff 00		 cmp	 DWORD PTR _pGameScoreRecord$9[ebp], 0
  0074d	0f 84 4c 01 00
	00		 je	 $LN25@WriteUserS

; 738  : 			{
; 739  : 				//用户信息
; 740  : 				pGameScoreRecord->wChairID=wChairID;

  00753	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  00759	66 8b 4d 08	 mov	 cx, WORD PTR _wChairID$[ebp]
  0075d	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 741  : 				pGameScoreRecord->dwUserID=pIServerUserItem->GetUserID();

  00761	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00764	8b 10		 mov	 edx, DWORD PTR [eax]
  00766	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00769	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0076c	ff d0		 call	 eax
  0076e	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pGameScoreRecord$9[ebp]
  00774	89 01		 mov	 DWORD PTR [ecx], eax

; 742  : 				pGameScoreRecord->cbAndroid=(pIServerUserItem->IsAndroidUser()?TRUE:FALSE);

  00776	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00779	8b 10		 mov	 edx, DWORD PTR [eax]
  0077b	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0077e	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00784	ff d0		 call	 eax
  00786	0f b6 c8	 movzx	 ecx, al
  00789	85 c9		 test	 ecx, ecx
  0078b	74 0c		 je	 SHORT $LN46@WriteUserS
  0078d	c7 85 88 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv391[ebp], 1
  00797	eb 0a		 jmp	 SHORT $LN47@WriteUserS
$LN46@WriteUserS:
  00799	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv391[ebp], 0
$LN47@WriteUserS:
  007a3	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _pGameScoreRecord$9[ebp]
  007a9	8a 85 88 fe ff
	ff		 mov	 al, BYTE PTR tv391[ebp]
  007af	88 42 06	 mov	 BYTE PTR [edx+6], al

; 743  : 
; 744  : 				//用户信息
; 745  : 				pGameScoreRecord->dwDBQuestID=pIServerUserItem->GetDBQuestID();

  007b2	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007b5	8b 10		 mov	 edx, DWORD PTR [eax]
  007b7	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007ba	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  007bd	ff d0		 call	 eax
  007bf	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pGameScoreRecord$9[ebp]
  007c5	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 746  : 				pGameScoreRecord->dwInoutIndex=pIServerUserItem->GetInoutIndex();

  007c8	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007cb	8b 10		 mov	 edx, DWORD PTR [eax]
  007cd	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007d0	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  007d3	ff d0		 call	 eax
  007d5	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pGameScoreRecord$9[ebp]
  007db	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 747  : 
; 748  : 				//成绩信息
; 749  : 				pGameScoreRecord->lScore=ScoreInfo.lScore;

  007de	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  007e4	8b 4d 0c	 mov	 ecx, DWORD PTR _ScoreInfo$[ebp]
  007e7	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  007ea	89 50 08	 mov	 DWORD PTR [eax+8], edx
  007ed	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  007f0	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 750  : 				pGameScoreRecord->lGrade=ScoreInfo.lGrade;

  007f3	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  007f9	8b 4d 0c	 mov	 ecx, DWORD PTR _ScoreInfo$[ebp]
  007fc	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  007ff	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00802	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00805	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 751  : 				pGameScoreRecord->lRevenue=ScoreInfo.lRevenue;

  00808	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  0080e	8b 4d 0c	 mov	 ecx, DWORD PTR _ScoreInfo$[ebp]
  00811	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00814	89 50 18	 mov	 DWORD PTR [eax+24], edx
  00817	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0081a	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 752  : 
; 753  : 				//附加信息
; 754  : 				pGameScoreRecord->dwUserMemal=dwUserMemal;

  0081d	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  00823	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _dwUserMemal$19[ebp]
  00829	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 755  : 				pGameScoreRecord->dwPlayTimeCount=dwPlayTimeCount;

  0082c	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  00832	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _dwPlayTimeCount$15[ebp]
  00838	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 756  : 
; 757  : 				//机器人免税
; 758  : 				if(pIServerUserItem->IsAndroidUser())

  0083b	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0083e	8b 10		 mov	 edx, DWORD PTR [eax]
  00840	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00843	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00849	ff d0		 call	 eax
  0084b	0f b6 c8	 movzx	 ecx, al
  0084e	85 c9		 test	 ecx, ecx
  00850	74 38		 je	 SHORT $LN31@WriteUserS

; 759  : 				{
; 760  : 					pGameScoreRecord->lScore += pGameScoreRecord->lRevenue;

  00852	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  00858	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pGameScoreRecord$9[ebp]
  0085e	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00861	03 51 18	 add	 edx, DWORD PTR [ecx+24]
  00864	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00867	13 41 1c	 adc	 eax, DWORD PTR [ecx+28]
  0086a	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _pGameScoreRecord$9[ebp]
  00870	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00873	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 761  : 					pGameScoreRecord->lRevenue = 0L;

  00876	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  0087c	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00883	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN31@WriteUserS:

; 762  : 				}
; 763  : 
; 764  : 				//插入数据
; 765  : 				m_GameScoreRecordActive.Add(pGameScoreRecord);

  0088a	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _pGameScoreRecord$9[ebp]
  00890	50		 push	 eax
  00891	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00894	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  0089a	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABQAUtagGameScoreRecord@@@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Add
$LN25@WriteUserS:

; 766  : 			}
; 767  : 		}
; 768  : 
; 769  : 		//游戏记录
; 770  : 		if(dwGameMemal != INVALID_DWORD || dwPlayGameTime!=INVALID_DWORD)

  0089f	83 7d 10 ff	 cmp	 DWORD PTR _dwGameMemal$[ebp], -1
  008a3	75 06		 jne	 SHORT $LN33@WriteUserS
  008a5	83 7d 14 ff	 cmp	 DWORD PTR _dwPlayGameTime$[ebp], -1
  008a9	74 30		 je	 SHORT $LN11@WriteUserS
$LN33@WriteUserS:

; 771  : 		{
; 772  : 			DWORD dwStartGameTime=INVALID_DWORD;

  008ab	c7 85 e0 fe ff
	ff ff ff ff ff	 mov	 DWORD PTR _dwStartGameTime$7[ebp], -1

; 773  : 			if(dwPlayGameTime!=INVALID_DWORD)

  008b5	83 7d 14 ff	 cmp	 DWORD PTR _dwPlayGameTime$[ebp], -1
  008b9	74 0f		 je	 SHORT $LN34@WriteUserS

; 774  : 			{
; 775  : 				dwStartGameTime=(dwCurrentTime-dwPlayGameTime);

  008bb	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _dwCurrentTime$16[ebp]
  008c1	2b 45 14	 sub	 eax, DWORD PTR _dwPlayGameTime$[ebp]
  008c4	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _dwStartGameTime$7[ebp], eax
$LN34@WriteUserS:

; 776  : 			}
; 777  : 			RecordGameScore(true, dwStartGameTime);

  008ca	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _dwStartGameTime$7[ebp]
  008d0	50		 push	 eax
  008d1	6a 01		 push	 1
  008d3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  008d6	e8 00 00 00 00	 call	 ?RecordGameScore@CTableFrame@@QAEX_NK@Z ; CTableFrame::RecordGameScore
$LN11@WriteUserS:

; 778  : 		}
; 779  : 	}
; 780  : 	else
; 781  : 	{
; 782  : 		////离开用户
; 783  : 		//CTraceService::TraceString(TEXT("系统暂时未支持离开用户的补分操作处理！"),TraceLevel_Exception);
; 784  : 
; 785  : 		//return false;
; 786  : 	}
; 787  : 
; 788  : 	//广播消息
; 789  : 	if (szMessage[0]!=0)

  008db	b8 01 00 00 00	 mov	 eax, 1
  008e0	6b c8 00	 imul	 ecx, eax, 0
  008e3	0f be 94 0d 64
	ff ff ff	 movsx	 edx, BYTE PTR _szMessage$[ebp+ecx]
  008eb	85 d2		 test	 edx, edx
  008ed	0f 84 fd 00 00
	00		 je	 $LN35@WriteUserS

; 790  : 	{
; 791  : 		//变量定义
; 792  : 		IServerUserItem * pISendUserItem = NULL;

  008f3	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pISendUserItem$6[ebp], 0

; 793  : 		WORD wEnumIndex=0;

  008fd	33 c0		 xor	 eax, eax
  008ff	66 89 85 d8 fe
	ff ff		 mov	 WORD PTR _wEnumIndex$5[ebp], ax

; 794  : 
; 795  : 		//游戏玩家
; 796  : 		for (WORD i=0;i<m_wChairCount;i++)

  00906	33 c0		 xor	 eax, eax
  00908	66 89 85 d4 fe
	ff ff		 mov	 WORD PTR _i$4[ebp], ax
  0090f	eb 12		 jmp	 SHORT $LN4@WriteUserS
$LN2@WriteUserS:
  00911	66 8b 85 d4 fe
	ff ff		 mov	 ax, WORD PTR _i$4[ebp]
  00918	66 83 c0 01	 add	 ax, 1
  0091c	66 89 85 d4 fe
	ff ff		 mov	 WORD PTR _i$4[ebp], ax
$LN4@WriteUserS:
  00923	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00926	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0092a	0f b7 95 d4 fe
	ff ff		 movzx	 edx, WORD PTR _i$4[ebp]
  00931	3b d1		 cmp	 edx, ecx
  00933	7d 4b		 jge	 SHORT $LN7@WriteUserS

; 797  : 		{
; 798  : 			//获取用户
; 799  : 			pISendUserItem=GetTableUserItem(i);

  00935	0f b7 85 d4 fe
	ff ff		 movzx	 eax, WORD PTR _i$4[ebp]
  0093c	50		 push	 eax
  0093d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00940	8b 11		 mov	 edx, DWORD PTR [ecx]
  00942	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00945	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0094b	ff d0		 call	 eax
  0094d	89 85 dc fe ff
	ff		 mov	 DWORD PTR _pISendUserItem$6[ebp], eax

; 800  : 			if(pISendUserItem==NULL) continue;

  00953	83 bd dc fe ff
	ff 00		 cmp	 DWORD PTR _pISendUserItem$6[ebp], 0
  0095a	75 02		 jne	 SHORT $LN36@WriteUserS
  0095c	eb b3		 jmp	 SHORT $LN2@WriteUserS
$LN36@WriteUserS:

; 801  : 
; 802  : 			//发送消息
; 803  : 			SendGameMessage(pISendUserItem, szMessage, SMT_CHAT);

  0095e	6a 01		 push	 1
  00960	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp]
  00966	50		 push	 eax
  00967	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _pISendUserItem$6[ebp]
  0096d	51		 push	 ecx
  0096e	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00971	8b 02		 mov	 eax, DWORD PTR [edx]
  00973	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00976	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  0097c	ff d2		 call	 edx

; 804  : 		}

  0097e	eb 91		 jmp	 SHORT $LN2@WriteUserS
$LN7@WriteUserS:

; 805  : 
; 806  : 		//旁观用户
; 807  : 		do
; 808  : 		{
; 809  : 			pISendUserItem=EnumLookonUserItem(wEnumIndex++);

  00980	66 8b 85 d8 fe
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$5[ebp]
  00987	66 89 85 8a fe
	ff ff		 mov	 WORD PTR tv470[ebp], ax
  0098e	66 8b 8d d8 fe
	ff ff		 mov	 cx, WORD PTR _wEnumIndex$5[ebp]
  00995	66 83 c1 01	 add	 cx, 1
  00999	66 89 8d d8 fe
	ff ff		 mov	 WORD PTR _wEnumIndex$5[ebp], cx
  009a0	0f b7 95 8a fe
	ff ff		 movzx	 edx, WORD PTR tv470[ebp]
  009a7	52		 push	 edx
  009a8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  009ab	8b 10		 mov	 edx, DWORD PTR [eax]
  009ad	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  009b0	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  009b6	ff d0		 call	 eax
  009b8	89 85 dc fe ff
	ff		 mov	 DWORD PTR _pISendUserItem$6[ebp], eax

; 810  : 			if(pISendUserItem!=NULL) 

  009be	83 bd dc fe ff
	ff 00		 cmp	 DWORD PTR _pISendUserItem$6[ebp], 0
  009c5	74 20		 je	 SHORT $LN5@WriteUserS

; 811  : 			{
; 812  : 				//发送消息
; 813  : 				SendGameMessage(pISendUserItem, szMessage, SMT_CHAT);

  009c7	6a 01		 push	 1
  009c9	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp]
  009cf	50		 push	 eax
  009d0	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR _pISendUserItem$6[ebp]
  009d6	51		 push	 ecx
  009d7	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  009da	8b 02		 mov	 eax, DWORD PTR [edx]
  009dc	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  009df	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  009e5	ff d2		 call	 edx
$LN5@WriteUserS:

; 814  : 			}
; 815  : 		} while (pISendUserItem!=NULL);

  009e7	83 bd dc fe ff
	ff 00		 cmp	 DWORD PTR _pISendUserItem$6[ebp], 0
  009ee	75 90		 jne	 SHORT $LN7@WriteUserS
$LN35@WriteUserS:

; 816  : 	}
; 817  : 
; 818  : 	return true;

  009f0	b0 01		 mov	 al, 1
$LN38@WriteUserS:

; 819  : }

  009f2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  009f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  009fc	59		 pop	 ecx
  009fd	5f		 pop	 edi
  009fe	5e		 pop	 esi
  009ff	5b		 pop	 ebx
  00a00	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a03	33 cd		 xor	 ecx, ebp
  00a05	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a0a	8b e5		 mov	 esp, ebp
  00a0c	5d		 pop	 ebp
  00a0d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 74 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-396]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?WriteUserScore@CTableFrame@@UAE_NGAAUtagScoreInfo@@KK@Z ENDP ; CTableFrame::WriteUserScore
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?EnumLookonUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wEnumIndex$ = 8					; size = 2
?EnumLookonUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z PROC ; CTableFrame::EnumLookonUserItem, COMDAT
; _this$ = ecx

; 956  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 957  : 	if (wEnumIndex>=m_LookonUserItemArray.GetCount()) return NULL;

  0000c	0f b7 75 08	 movzx	 esi, WORD PTR _wEnumIndex$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00019	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
  0001e	3b f0		 cmp	 esi, eax
  00020	7c 04		 jl	 SHORT $LN2@EnumLookon
  00022	33 c0		 xor	 eax, eax
  00024	eb 15		 jmp	 SHORT $LN1@EnumLookon
$LN2@EnumLookon:

; 958  : 	return m_LookonUserItemArray[wEnumIndex];

  00026	0f b7 45 08	 movzx	 eax, WORD PTR _wEnumIndex$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00034	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@EnumLookon:

; 959  : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?EnumLookonUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z ENDP ; CTableFrame::EnumLookonUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wChairID$ = 8						; size = 2
?GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z PROC ; CTableFrame::GetTableUserItem, COMDAT
; _this$ = ecx

; 945  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 946  : 	//效验参数
; 947  : 	ASSERT(wChairID<m_wChairCount);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00017	3b c2		 cmp	 eax, edx
  00019	7c 18		 jl	 SHORT $LN4@GetTableUs
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z@4JA
  00020	83 c0 02	 add	 eax, 2
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00029	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002e	85 c0		 test	 eax, eax
  00030	74 01		 je	 SHORT $LN4@GetTableUs
  00032	cc		 int	 3
$LN4@GetTableUs:

; 948  : 	if (wChairID>=m_wChairCount) return NULL;

  00033	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0003e	3b c2		 cmp	 eax, edx
  00040	7c 04		 jl	 SHORT $LN2@GetTableUs
  00042	33 c0		 xor	 eax, eax
  00044	eb 0e		 jmp	 SHORT $LN1@GetTableUs
$LN2@GetTableUs:

; 949  : 
; 950  : 	//获取用户
; 951  : 	return m_TableUserItemArray[wChairID];

  00046	0f b7 45 08	 movzx	 eax, WORD PTR _wChairID$[ebp]
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	8b 84 81 90 0c
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+3216]
$LN1@GetTableUs:

; 952  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?GetTableUserItem@CTableFrame@@UAEPAUIServerUserItem@@G@Z ENDP ; CTableFrame::GetTableUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SearchUserItem@CTableFrame@@UAEPAUIServerUserItem@@K@Z
_TEXT	SEGMENT
tv93 = -82						; size = 2
_i$1 = -16						; size = 2
_pIServerUserItem$ = -12				; size = 4
_wEnumIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SearchUserItem@CTableFrame@@UAEPAUIServerUserItem@@K@Z PROC ; CTableFrame::SearchUserItem, COMDAT
; _this$ = ecx

; 921  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 922  : 	//变量定义
; 923  : 	WORD wEnumIndex=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 924  : 	IServerUserItem * pIServerUserItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItem$[ebp], 0

; 925  : 
; 926  : 	//桌子用户
; 927  : 	for (WORD i=0;i<m_wChairCount;i++)

  00019	33 c0		 xor	 eax, eax
  0001b	66 89 45 f0	 mov	 WORD PTR _i$1[ebp], ax
  0001f	eb 0c		 jmp	 SHORT $LN4@SearchUser
$LN2@SearchUser:
  00021	66 8b 45 f0	 mov	 ax, WORD PTR _i$1[ebp]
  00025	66 83 c0 01	 add	 ax, 1
  00029	66 89 45 f0	 mov	 WORD PTR _i$1[ebp], ax
$LN4@SearchUser:
  0002d	0f b7 45 f0	 movzx	 eax, WORD PTR _i$1[ebp]
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00038	3b c2		 cmp	 eax, edx
  0003a	7d 37		 jge	 SHORT $LN7@SearchUser

; 928  : 	{
; 929  : 		pIServerUserItem=GetTableUserItem(i);

  0003c	0f b7 45 f0	 movzx	 eax, WORD PTR _i$1[ebp]
  00040	50		 push	 eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0004f	ff d0		 call	 eax
  00051	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 930  : 		if ((pIServerUserItem!=NULL)&&(pIServerUserItem->GetUserID()==dwUserID)) return pIServerUserItem;

  00054	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00058	74 17		 je	 SHORT $LN8@SearchUser
  0005a	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00062	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00065	ff d0		 call	 eax
  00067	3b 45 08	 cmp	 eax, DWORD PTR _dwUserID$[ebp]
  0006a	75 05		 jne	 SHORT $LN8@SearchUser
  0006c	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0006f	eb 53		 jmp	 SHORT $LN1@SearchUser
$LN8@SearchUser:

; 931  : 	}

  00071	eb ae		 jmp	 SHORT $LN2@SearchUser
$LN7@SearchUser:

; 932  : 
; 933  : 	//旁观用户
; 934  : 	do
; 935  : 	{
; 936  : 		pIServerUserItem=EnumLookonUserItem(wEnumIndex++);

  00073	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00077	66 89 45 ae	 mov	 WORD PTR tv93[ebp], ax
  0007b	0f b7 4d ae	 movzx	 ecx, WORD PTR tv93[ebp]
  0007f	51		 push	 ecx
  00080	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  0008e	ff d2		 call	 edx
  00090	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax
  00093	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00097	66 83 c0 01	 add	 ax, 1
  0009b	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 937  : 		if ((pIServerUserItem!=NULL)&&(pIServerUserItem->GetUserID()==dwUserID)) return pIServerUserItem;

  0009f	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a3	74 17		 je	 SHORT $LN5@SearchUser
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a8	8b 10		 mov	 edx, DWORD PTR [eax]
  000aa	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ad	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  000b0	ff d0		 call	 eax
  000b2	3b 45 08	 cmp	 eax, DWORD PTR _dwUserID$[ebp]
  000b5	75 05		 jne	 SHORT $LN5@SearchUser
  000b7	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ba	eb 08		 jmp	 SHORT $LN1@SearchUser
$LN5@SearchUser:

; 938  : 	} while (pIServerUserItem!=NULL);

  000bc	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000c0	75 b1		 jne	 SHORT $LN7@SearchUser

; 939  : 
; 940  : 	return NULL;

  000c2	33 c0		 xor	 eax, eax
$LN1@SearchUser:

; 941  : }

  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
?SearchUserItem@CTableFrame@@UAEPAUIServerUserItem@@K@Z ENDP ; CTableFrame::SearchUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?ConcludeTable@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_wTableUserCount$1 = -8					; size = 2
_this$ = -4						; size = 4
?ConcludeTable@CTableFrame@@UAE_NXZ PROC		; CTableFrame::ConcludeTable, COMDAT
; _this$ = ecx

; 577  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 578  : 	//结束桌子
; 579  : 	if ((m_bGameStarted==false)&&(m_bTableStarted==true))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00013	85 c9		 test	 ecx, ecx
  00015	75 7b		 jne	 SHORT $LN2@ConcludeTa
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 12	 movzx	 ecx, BYTE PTR [eax+18]
  0001e	83 f9 01	 cmp	 ecx, 1
  00021	75 6f		 jne	 SHORT $LN2@ConcludeTa

; 580  : 	{
; 581  : 		//人数判断
; 582  : 		WORD wTableUserCount=GetSitUserCount();

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  0002b	66 89 45 f8	 mov	 WORD PTR _wTableUserCount$1[ebp], ax

; 583  : 		if (wTableUserCount==0) m_bTableStarted=false;

  0002f	0f b7 45 f8	 movzx	 eax, WORD PTR _wTableUserCount$1[ebp]
  00033	85 c0		 test	 eax, eax
  00035	75 07		 jne	 SHORT $LN3@ConcludeTa
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0
$LN3@ConcludeTa:

; 584  : 		if (m_pGameServiceAttrib->wChairCount==MAX_CHAIR) m_bTableStarted=false;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  00047	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  0004b	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00051	75 07		 jne	 SHORT $LN4@ConcludeTa
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0
$LN4@ConcludeTa:

; 585  : 
; 586  : 		//模式判断
; 587  : 		if (m_cbStartMode==START_MODE_FULL_READY) m_bTableStarted=false;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00061	83 f9 01	 cmp	 ecx, 1
  00064	75 07		 jne	 SHORT $LN5@ConcludeTa
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0
$LN5@ConcludeTa:

; 588  : 		if (m_cbStartMode==START_MODE_PAIR_READY) m_bTableStarted=false;

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00074	83 f9 02	 cmp	 ecx, 2
  00077	75 07		 jne	 SHORT $LN6@ConcludeTa
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0
$LN6@ConcludeTa:

; 589  : 		if (m_cbStartMode==START_MODE_ALL_READY) m_bTableStarted=false;

  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00087	85 c9		 test	 ecx, ecx
  00089	75 07		 jne	 SHORT $LN2@ConcludeTa
  0008b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0
$LN2@ConcludeTa:

; 590  : 	}
; 591  : 
; 592  : 	return true;

  00092	b0 01		 mov	 al, 1

; 593  : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
?ConcludeTable@CTableFrame@@UAE_NXZ ENDP		; CTableFrame::ConcludeTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?ConcludeGame@CTableFrame@@UAE_NEH@Z
_TEXT	SEGMENT
tv1006 = -548						; size = 8
tv910 = -544						; size = 4
tv1003 = -540						; size = 8
tv907 = -540						; size = 8
tv821 = -540						; size = 4
tv632 = -540						; size = 4
tv456 = -540						; size = 4
tv950 = -536						; size = 4
tv893 = -536						; size = 4
tv820 = -536						; size = 4
tv633 = -536						; size = 4
tv457 = -536						; size = 4
tv82 = -533						; size = 1
_pIServerUserItem$1 = -468				; size = 4
_i$2 = -464						; size = 4
_pIServerUserItem$3 = -460				; size = 4
_i$4 = -456						; size = 2
_pAttemperEngineSink$5 = -452				; size = 4
_t_tm$6 = -448						; size = 4
_timer$7 = -444						; size = 8
_pIAndroidUserItem$8 = -436				; size = 4
_pBindParameter$9 = -432				; size = 4
_pAttemperEngineSink$10 = -428				; size = 4
_pszMessage$11 = -424					; size = 4
_personalRoomMessage$12 = -420				; size = 261
_szDescribe$13 = -156					; size = 128
_pIServerUserItem$14 = -28				; size = 4
_i$15 = -24						; size = 2
_pIServerUserItem$16 = -20				; size = 4
_i$17 = -16						; size = 2
_bOffLineWait$18 = -10					; size = 1
_bDrawStarted$ = -9					; size = 1
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_cbGameStatus$ = 8					; size = 1
_bPersonalLoop$ = 12					; size = 4
?ConcludeGame@CTableFrame@@UAE_NEH@Z PROC		; CTableFrame::ConcludeGame, COMDAT
; _this$ = ecx

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 309  : 	//效验状态
; 310  : 	ASSERT(m_bGameStarted==true);

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00020	83 f9 01	 cmp	 ecx, 1
  00023	74 19		 je	 SHORT $LN56@ConcludeGa
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??ConcludeGame@CTableFrame@@UAE_NEH@Z@4JA
  0002b	83 c2 02	 add	 edx, 2
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00034	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00039	85 c0		 test	 eax, eax
  0003b	74 01		 je	 SHORT $LN56@ConcludeGa
  0003d	cc		 int	 3
$LN56@ConcludeGa:

; 311  : 	if (m_bGameStarted==false) return false;

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00045	85 c9		 test	 ecx, ecx
  00047	75 07		 jne	 SHORT $LN14@ConcludeGa
  00049	32 c0		 xor	 al, al
  0004b	e9 65 0c 00 00	 jmp	 $LN1@ConcludeGa
$LN14@ConcludeGa:

; 312  : 
; 313  : 	//保存变量
; 314  : 	bool bDrawStarted=m_bDrawStarted;

  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  00056	88 4d f7	 mov	 BYTE PTR _bDrawStarted$[ebp], cl

; 315  : 
; 316  : 	//设置状态
; 317  : 	m_bDrawStarted=false;

  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 318  : 	m_cbGameStatus=cbGameStatus;

  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8a 4d 08	 mov	 cl, BYTE PTR _cbGameStatus$[ebp]
  00066	88 88 24 07 00
	00		 mov	 BYTE PTR [eax+1828], cl

; 319  : 	m_bGameStarted=(cbGameStatus>=GAME_STATUS_PLAY)?true:false;

  0006c	0f b6 45 08	 movzx	 eax, BYTE PTR _cbGameStatus$[ebp]
  00070	83 f8 64	 cmp	 eax, 100		; 00000064H
  00073	7c 09		 jl	 SHORT $LN57@ConcludeGa
  00075	c6 85 eb fd ff
	ff 01		 mov	 BYTE PTR tv82[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN58@ConcludeGa
$LN57@ConcludeGa:
  0007e	c6 85 eb fd ff
	ff 00		 mov	 BYTE PTR tv82[ebp], 0
$LN58@ConcludeGa:
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8a 95 eb fd ff
	ff		 mov	 dl, BYTE PTR tv82[ebp]
  0008e	88 51 10	 mov	 BYTE PTR [ecx+16], dl

; 320  : 	m_wDrawCount++;

  00091	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00094	66 8b 88 3c 07
	00 00		 mov	 cx, WORD PTR [eax+1852]
  0009b	66 83 c1 01	 add	 cx, 1
  0009f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	66 89 8a 3c 07
	00 00		 mov	 WORD PTR [edx+1852], cx

; 321  : 
; 322  : 
; 323  : 	//关闭开始超时定时器
; 324  : 	KillGameTimer(IDI_PERSONAL_AFTER_BEGIN_TIME);

  000a9	6a 2c		 push	 44			; 0000002cH
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 10		 mov	 edx, DWORD PTR [eax]
  000b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  000b9	ff d0		 call	 eax

; 325  : 
; 326  : 	//游戏记录
; 327  : 	RecordGameScore(bDrawStarted);

  000bb	6a ff		 push	 -1
  000bd	0f b6 45 f7	 movzx	 eax, BYTE PTR _bDrawStarted$[ebp]
  000c1	50		 push	 eax
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?RecordGameScore@CTableFrame@@QAEX_NK@Z ; CTableFrame::RecordGameScore

; 328  : 	
; 329  : 	//结束设置
; 330  : 	if (m_bGameStarted==false)

  000ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  000d1	85 c9		 test	 ecx, ecx
  000d3	0f 85 a6 01 00
	00		 jne	 $LN15@ConcludeGa

; 331  : 	{
; 332  : 		//变量定义
; 333  : 		bool bOffLineWait=false;

  000d9	c6 45 f6 00	 mov	 BYTE PTR _bOffLineWait$18[ebp], 0

; 334  : 		
; 335  : 		//设置用户
; 336  : 		for (WORD i=0;i<m_wChairCount;i++)

  000dd	33 c0		 xor	 eax, eax
  000df	66 89 45 f0	 mov	 WORD PTR _i$17[ebp], ax
  000e3	eb 0c		 jmp	 SHORT $LN4@ConcludeGa
$LN2@ConcludeGa:
  000e5	66 8b 45 f0	 mov	 ax, WORD PTR _i$17[ebp]
  000e9	66 83 c0 01	 add	 ax, 1
  000ed	66 89 45 f0	 mov	 WORD PTR _i$17[ebp], ax
$LN4@ConcludeGa:
  000f1	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  000f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  000fc	3b c2		 cmp	 eax, edx
  000fe	0f 8d 60 01 00
	00		 jge	 $LN3@ConcludeGa

; 337  : 		{
; 338  : 			//获取用户
; 339  : 			IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  00104	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  00108	50		 push	 eax
  00109	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00117	ff d0		 call	 eax
  00119	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$16[ebp], eax

; 340  : 
; 341  : 			//用户处理
; 342  : 			if (pIServerUserItem!=NULL)

  0011c	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$16[ebp], 0
  00120	0f 84 39 01 00
	00		 je	 $LN16@ConcludeGa

; 343  : 			{
; 344  : 				//解锁游戏币
; 345  : 				if (m_lFrozenedScore[i]!=0L)

  00126	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  0012a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	89 8d e8 fd ff
	ff		 mov	 DWORD PTR tv820[ebp], ecx
  00133	89 85 e4 fd ff
	ff		 mov	 DWORD PTR tv821[ebp], eax
  00139	8b 95 e4 fd ff
	ff		 mov	 edx, DWORD PTR tv821[ebp]
  0013f	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR tv820[ebp]
  00145	8b 8d e4 fd ff
	ff		 mov	 ecx, DWORD PTR tv821[ebp]
  0014b	8b b5 e8 fd ff
	ff		 mov	 esi, DWORD PTR tv820[ebp]
  00151	8b 94 d0 e0 00
	00 00		 mov	 edx, DWORD PTR [eax+edx*8+224]
  00158	0b 94 ce e4 00
	00 00		 or	 edx, DWORD PTR [esi+ecx*8+228]
  0015f	74 44		 je	 SHORT $LN17@ConcludeGa

; 346  : 				{
; 347  : 					pIServerUserItem->UnFrozenedUserScore(m_lFrozenedScore[i]);

  00161	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  00165	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00168	8b 94 c1 e4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*8+228]
  0016f	52		 push	 edx
  00170	8b 84 c1 e0 00
	00 00		 mov	 eax, DWORD PTR [ecx+eax*8+224]
  00177	50		 push	 eax
  00178	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  0017b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017d	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  00180	8b 82 10 01 00
	00		 mov	 eax, DWORD PTR [edx+272]
  00186	ff d0		 call	 eax

; 348  : 					m_lFrozenedScore[i]=0L;

  00188	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  0018c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	c7 84 c1 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*8+224], 0
  0019a	c7 84 c1 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*8+228], 0
$LN17@ConcludeGa:

; 349  : 				}
; 350  : 
; 351  : 				//设置状态
; 352  : 				if (pIServerUserItem->GetUserStatus()==US_OFFLINE || m_bEscapeStatus[i] )

  001a5	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$16[ebp]
  001a8	8b 10		 mov	 edx, DWORD PTR [eax]
  001aa	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  001ad	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  001b0	ff d0		 call	 eax
  001b2	0f b6 c8	 movzx	 ecx, al
  001b5	83 f9 06	 cmp	 ecx, 6
  001b8	74 13		 je	 SHORT $LN20@ConcludeGa
  001ba	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  001be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c1	0f b6 94 01 dc
	45 00 00	 movzx	 edx, BYTE PTR [ecx+eax+17884]
  001c9	85 d2		 test	 edx, edx
  001cb	74 73		 je	 SHORT $LN18@ConcludeGa
$LN20@ConcludeGa:

; 353  : 				{
; 354  : 					//断线处理
; 355  : 					bOffLineWait=true;

  001cd	c6 45 f6 01	 mov	 BYTE PTR _bOffLineWait$18[ebp], 1

; 356  : 					if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  001d1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d4	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001da	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  001de	83 fa 04	 cmp	 edx, 4
  001e1	75 45		 jne	 SHORT $LN21@ConcludeGa
  001e3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e6	8b 88 e8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4072]
  001ec	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  001f0	83 fa 01	 cmp	 edx, 1
  001f3	75 33		 jne	 SHORT $LN21@ConcludeGa

; 357  : 					{						
; 358  : 						pIServerUserItem->SetClientReady(true);

  001f5	6a 01		 push	 1
  001f7	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$16[ebp]
  001fa	8b 10		 mov	 edx, DWORD PTR [eax]
  001fc	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  001ff	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  00205	ff d0		 call	 eax

; 359  : 						pIServerUserItem->SetUserStatus(US_SIT,m_wTableID,i);

  00207	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  0020b	50		 push	 eax
  0020c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020f	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00213	52		 push	 edx
  00214	6a 02		 push	 2
  00216	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$16[ebp]
  00219	8b 10		 mov	 edx, DWORD PTR [eax]
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  0021e	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00224	ff d0		 call	 eax

; 360  : 					}
; 361  : 					else

  00226	eb 16		 jmp	 SHORT $LN22@ConcludeGa
$LN21@ConcludeGa:

; 362  : 					{
; 363  : 						PerformStandUpAction(pIServerUserItem);

  00228	6a 00		 push	 0
  0022a	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$16[ebp]
  0022d	50		 push	 eax
  0022e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 11		 mov	 edx, DWORD PTR [ecx]
  00233	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00236	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  0023c	ff d0		 call	 eax
$LN22@ConcludeGa:

; 364  : 					}
; 365  : 				}
; 366  : 				else

  0023e	eb 1f		 jmp	 SHORT $LN16@ConcludeGa
$LN18@ConcludeGa:

; 367  : 				{
; 368  : 					//设置状态
; 369  : 					pIServerUserItem->SetUserStatus(US_SIT,m_wTableID,i);					

  00240	0f b7 45 f0	 movzx	 eax, WORD PTR _i$17[ebp]
  00244	50		 push	 eax
  00245	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00248	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  0024c	52		 push	 edx
  0024d	6a 02		 push	 2
  0024f	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$16[ebp]
  00252	8b 10		 mov	 edx, DWORD PTR [eax]
  00254	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$16[ebp]
  00257	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  0025d	ff d0		 call	 eax
$LN16@ConcludeGa:

; 370  : 				}
; 371  : 			}
; 372  : 		}

  0025f	e9 81 fe ff ff	 jmp	 $LN2@ConcludeGa
$LN3@ConcludeGa:

; 373  : 
; 374  : 		//删除时间
; 375  : 		if (bOffLineWait==true) KillGameTimer(IDI_OFF_LINE);

  00264	0f b6 45 f6	 movzx	 eax, BYTE PTR _bOffLineWait$18[ebp]
  00268	83 f8 01	 cmp	 eax, 1
  0026b	75 12		 jne	 SHORT $LN15@ConcludeGa
  0026d	6a 15		 push	 21			; 00000015H
  0026f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00272	8b 10		 mov	 edx, DWORD PTR [eax]
  00274	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00277	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  0027d	ff d0		 call	 eax
$LN15@ConcludeGa:

; 376  : 	}
; 377  : 
; 378  : 	//通知比赛
; 379  : 	if(m_pITableFrameHook!=NULL) m_pITableFrameHook->OnEventGameEnd(0, NULL, cbGameStatus);

  0027f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00282	83 b8 08 10 00
	00 00		 cmp	 DWORD PTR [eax+4104], 0
  00289	74 22		 je	 SHORT $LN24@ConcludeGa
  0028b	0f b6 45 08	 movzx	 eax, BYTE PTR _cbGameStatus$[ebp]
  0028f	50		 push	 eax
  00290	6a 00		 push	 0
  00292	6a 00		 push	 0
  00294	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00297	8b 91 08 10 00
	00		 mov	 edx, DWORD PTR [ecx+4104]
  0029d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a0	8b 12		 mov	 edx, DWORD PTR [edx]
  002a2	8b 88 08 10 00
	00		 mov	 ecx, DWORD PTR [eax+4104]
  002a8	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  002ab	ff d0		 call	 eax
$LN24@ConcludeGa:

; 380  : 
; 381  : 
; 382  : 	//重置桌子
; 383  : 	ASSERT(m_pITableFrameSink!=NULL);

  002ad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002b0	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  002b7	75 19		 jne	 SHORT $LN59@ConcludeGa
  002b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ConcludeGame@CTableFrame@@UAE_NEH@Z@4JA
  002bf	83 c1 4b	 add	 ecx, 75			; 0000004bH
  002c2	51		 push	 ecx
  002c3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  002c8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002cd	85 c0		 test	 eax, eax
  002cf	74 01		 je	 SHORT $LN59@ConcludeGa
  002d1	cc		 int	 3
$LN59@ConcludeGa:

; 384  : 	if (m_pITableFrameSink!=NULL) m_pITableFrameSink->RepositionSink();

  002d2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d5	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  002dc	74 19		 je	 SHORT $LN25@ConcludeGa
  002de	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002e1	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  002e7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002ea	8b 01		 mov	 eax, DWORD PTR [ecx]
  002ec	8b 8a c8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4040]
  002f2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  002f5	ff d2		 call	 edx
$LN25@ConcludeGa:

; 385  : 
; 386  : 	//踢出检测
; 387  : 	if (m_bGameStarted==false)

  002f7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fa	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  002fe	85 c9		 test	 ecx, ecx
  00300	0f 85 cc 05 00
	00		 jne	 $LN26@ConcludeGa

; 388  : 	{
; 389  : 		for (WORD i=0;i<m_wChairCount;i++)

  00306	33 c0		 xor	 eax, eax
  00308	66 89 45 e8	 mov	 WORD PTR _i$15[ebp], ax
  0030c	eb 0c		 jmp	 SHORT $LN7@ConcludeGa
$LN5@ConcludeGa:
  0030e	66 8b 45 e8	 mov	 ax, WORD PTR _i$15[ebp]
  00312	66 83 c0 01	 add	 ax, 1
  00316	66 89 45 e8	 mov	 WORD PTR _i$15[ebp], ax
$LN7@ConcludeGa:
  0031a	0f b7 45 e8	 movzx	 eax, WORD PTR _i$15[ebp]
  0031e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00321	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00325	3b c2		 cmp	 eax, edx
  00327	0f 8d a5 05 00
	00		 jge	 $LN26@ConcludeGa

; 390  : 		{
; 391  : 			//获取用户
; 392  : 			if (m_TableUserItemArray[i]==NULL) continue;

  0032d	0f b7 45 e8	 movzx	 eax, WORD PTR _i$15[ebp]
  00331	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	83 bc 81 90 0c
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+3216], 0
  0033c	75 02		 jne	 SHORT $LN27@ConcludeGa
  0033e	eb ce		 jmp	 SHORT $LN5@ConcludeGa
$LN27@ConcludeGa:

; 393  : 			IServerUserItem * pIServerUserItem=m_TableUserItemArray[i];

  00340	0f b7 45 e8	 movzx	 eax, WORD PTR _i$15[ebp]
  00344	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00347	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  0034e	89 55 e4	 mov	 DWORD PTR _pIServerUserItem$14[ebp], edx

; 394  : 
; 395  : 			if (m_pGameServiceOption->lCellScore < 1)

  00351	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00354	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0035a	83 79 08 01	 cmp	 DWORD PTR [ecx+8], 1
  0035e	7d 10		 jge	 SHORT $LN28@ConcludeGa

; 396  : 			{
; 397  : 				m_pGameServiceOption->lCellScore  = 1;

  00360	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00363	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00369	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
$LN28@ConcludeGa:

; 398  : 			}
; 399  : 
; 400  : 			//积分限制
; 401  : 			if ((m_pGameServiceOption->lMinTableScore!=0L)&&
; 402  : 				(pIServerUserItem->GetUserScore()<m_pGameServiceOption->lMinTableScore)&& 

  00370	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00373	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00379	89 8d e8 fd ff
	ff		 mov	 DWORD PTR tv893[ebp], ecx
  0037f	8b 95 e8 fd ff
	ff		 mov	 edx, DWORD PTR tv893[ebp]
  00385	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR tv893[ebp]
  0038b	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0038e	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  00391	0f 84 68 01 00
	00		 je	 $LN29@ConcludeGa
  00397	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  0039a	8b 10		 mov	 edx, DWORD PTR [eax]
  0039c	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  0039f	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  003a5	ff d0		 call	 eax
  003a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003aa	8b 89 f0 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4080]
  003b0	89 85 e4 fd ff
	ff		 mov	 DWORD PTR tv907[ebp], eax
  003b6	89 95 e8 fd ff
	ff		 mov	 DWORD PTR tv907[ebp+4], edx
  003bc	89 8d e0 fd ff
	ff		 mov	 DWORD PTR tv910[ebp], ecx
  003c2	8b 95 e0 fd ff
	ff		 mov	 edx, DWORD PTR tv910[ebp]
  003c8	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR tv907[ebp+4]
  003ce	3b 42 24	 cmp	 eax, DWORD PTR [edx+36]
  003d1	0f 8f 28 01 00
	00		 jg	 $LN29@ConcludeGa
  003d7	7c 15		 jl	 SHORT $LN64@ConcludeGa
  003d9	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv910[ebp]
  003df	8b 95 e4 fd ff
	ff		 mov	 edx, DWORD PTR tv907[ebp]
  003e5	3b 51 20	 cmp	 edx, DWORD PTR [ecx+32]
  003e8	0f 83 11 01 00
	00		 jae	 $LN29@ConcludeGa
$LN64@ConcludeGa:
  003ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003f1	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  003f7	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  003fb	83 e2 10	 and	 edx, 16			; 00000010H
  003fe	0f 85 fb 00 00
	00		 jne	 $LN29@ConcludeGa

; 403  : 				((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) == 0)
; 404  : 				)
; 405  : 			{
; 406  : 				//构造提示
; 407  : 				TCHAR szDescribe[128]=TEXT("");

  00404	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00409	88 85 64 ff ff
	ff		 mov	 BYTE PTR _szDescribe$13[ebp], al
  0040f	6a 7f		 push	 127			; 0000007fH
  00411	6a 00		 push	 0
  00413	8d 85 65 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$13[ebp+1]
  00419	50		 push	 eax
  0041a	e8 00 00 00 00	 call	 _memset
  0041f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 408  : 				if (m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)

  00422	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00425	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0042b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0042f	83 e2 01	 and	 edx, 1
  00432	74 2c		 je	 SHORT $LN30@ConcludeGa

; 409  : 				{
; 410  : 					_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("您的游戏币少于 ") SCORE_STRING TEXT("，不能继续游戏！"),m_pGameServiceOption->lMinTableScore);

  00434	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00437	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0043d	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00440	52		 push	 edx
  00441	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00444	50		 push	 eax
  00445	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@
  0044a	68 80 00 00 00	 push	 128			; 00000080H
  0044f	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$13[ebp]
  00455	51		 push	 ecx
  00456	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  0045b	83 c4 14	 add	 esp, 20			; 00000014H

; 411  : 				}
; 412  : 				else

  0045e	eb 2a		 jmp	 SHORT $LN31@ConcludeGa
$LN30@ConcludeGa:

; 413  : 				{
; 414  : 					_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("您的游戏积分少于 ") SCORE_STRING TEXT("，不能继续游戏！"),m_pGameServiceOption->lMinTableScore);

  00460	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00463	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00469	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0046c	52		 push	 edx
  0046d	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00470	50		 push	 eax
  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OPGIFPHK@?D?z?$LF?D?S?N?O?$LH?$LL?$PN?$LH?V?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P@
  00476	68 80 00 00 00	 push	 128			; 00000080H
  0047b	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$13[ebp]
  00481	51		 push	 ecx
  00482	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00487	83 c4 14	 add	 esp, 20			; 00000014H
$LN31@ConcludeGa:

; 415  : 				}
; 416  : 
; 417  : 				//发送消息
; 418  : 				if (pIServerUserItem->IsAndroidUser()==true)

  0048a	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  0048d	8b 10		 mov	 edx, DWORD PTR [eax]
  0048f	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  00492	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00498	ff d0		 call	 eax
  0049a	0f b6 c8	 movzx	 ecx, al
  0049d	83 f9 01	 cmp	 ecx, 1
  004a0	75 22		 jne	 SHORT $LN32@ConcludeGa

; 419  : 					SendGameMessage(pIServerUserItem,szDescribe,SMT_CHAT|SMT_CLOSE_GAME|SMT_CLOSE_ROOM|SMT_EJECT);

  004a2	68 03 03 00 00	 push	 771			; 00000303H
  004a7	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$13[ebp]
  004ad	50		 push	 eax
  004ae	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  004b1	51		 push	 ecx
  004b2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004b5	8b 02		 mov	 eax, DWORD PTR [edx]
  004b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ba	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  004c0	ff d2		 call	 edx

; 420  : 				else

  004c2	eb 20		 jmp	 SHORT $LN33@ConcludeGa
$LN32@ConcludeGa:

; 421  : 					SendGameMessage(pIServerUserItem,szDescribe,SMT_CHAT|SMT_CLOSE_GAME|SMT_EJECT);

  004c4	68 03 02 00 00	 push	 515			; 00000203H
  004c9	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$13[ebp]
  004cf	50		 push	 eax
  004d0	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  004d3	51		 push	 ecx
  004d4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004d7	8b 02		 mov	 eax, DWORD PTR [edx]
  004d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004dc	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  004e2	ff d2		 call	 edx
$LN33@ConcludeGa:

; 422  : 
; 423  : 				//用户起立
; 424  : 				PerformStandUpAction(pIServerUserItem);

  004e4	6a 00		 push	 0
  004e6	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  004e9	50		 push	 eax
  004ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ed	8b 11		 mov	 edx, DWORD PTR [ecx]
  004ef	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f2	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  004f8	ff d0		 call	 eax

; 425  : 
; 426  : 				continue;

  004fa	e9 0f fe ff ff	 jmp	 $LN5@ConcludeGa
$LN29@ConcludeGa:

; 427  : 			}
; 428  : 
; 429  : 			if (((m_pGameServiceOption->lMinTableScore!=0L) && pIServerUserItem->GetUserScore()<m_pGameServiceOption->lMinTableScore * m_lCellScore/m_pGameServiceOption->lCellScore) && ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0))

  004ff	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00502	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00508	89 8d e8 fd ff
	ff		 mov	 DWORD PTR tv950[ebp], ecx
  0050e	8b 95 e8 fd ff
	ff		 mov	 edx, DWORD PTR tv950[ebp]
  00514	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR tv950[ebp]
  0051a	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0051d	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  00520	0f 84 52 01 00
	00		 je	 $LN34@ConcludeGa
  00526	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  00529	8b 10		 mov	 edx, DWORD PTR [eax]
  0052b	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  0052e	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00534	ff d0		 call	 eax
  00536	8b f0		 mov	 esi, eax
  00538	8b fa		 mov	 edi, edx
  0053a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0053d	8b 89 f0 0f 00
	00		 mov	 ecx, DWORD PTR [ecx+4080]
  00543	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00546	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  0054c	99		 cdq
  0054d	52		 push	 edx
  0054e	50		 push	 eax
  0054f	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00552	50		 push	 eax
  00553	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00556	51		 push	 ecx
  00557	e8 00 00 00 00	 call	 __allmul
  0055c	8b c8		 mov	 ecx, eax
  0055e	8b da		 mov	 ebx, edx
  00560	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00563	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  00569	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0056c	99		 cdq
  0056d	52		 push	 edx
  0056e	50		 push	 eax
  0056f	53		 push	 ebx
  00570	51		 push	 ecx
  00571	e8 00 00 00 00	 call	 __alldiv
  00576	89 b5 e4 fd ff
	ff		 mov	 DWORD PTR tv1003[ebp], esi
  0057c	89 bd e8 fd ff
	ff		 mov	 DWORD PTR tv1003[ebp+4], edi
  00582	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv1006[ebp], eax
  00588	89 95 e0 fd ff
	ff		 mov	 DWORD PTR tv1006[ebp+4], edx
  0058e	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR tv1003[ebp+4]
  00594	3b 8d e0 fd ff
	ff		 cmp	 ecx, DWORD PTR tv1006[ebp+4]
  0059a	0f 8f d8 00 00
	00		 jg	 $LN34@ConcludeGa
  005a0	7c 12		 jl	 SHORT $LN65@ConcludeGa
  005a2	8b 95 e4 fd ff
	ff		 mov	 edx, DWORD PTR tv1003[ebp]
  005a8	3b 95 dc fd ff
	ff		 cmp	 edx, DWORD PTR tv1006[ebp]
  005ae	0f 83 c4 00 00
	00		 jae	 $LN34@ConcludeGa
$LN65@ConcludeGa:
  005b4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005b7	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  005bd	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  005c1	83 e2 10	 and	 edx, 16			; 00000010H
  005c4	0f 84 ae 00 00
	00		 je	 $LN34@ConcludeGa

; 430  : 			{
; 431  : 				//构造提示
; 432  : 				Personal_Room_Message personalRoomMessage;
; 433  : 				if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  005ca	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  005cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005d2	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  005d8	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  005de	51		 push	 ecx
  005df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  005e5	85 c0		 test	 eax, eax
  005e7	0f 85 8b 00 00
	00		 jne	 $LN34@ConcludeGa

; 434  : 				{
; 435  : 					_sntprintf_s(personalRoomMessage.szMessage,CountArray(personalRoomMessage.szMessage),TEXT("您的游戏币少于 ") SCORE_STRING TEXT("，不能继续游戏！"),m_pGameServiceOption->lMinTableScore* m_lCellScore/m_pGameServiceOption->lCellScore);

  005ed	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005f0	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  005f6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005f9	8b 82 20 07 00
	00		 mov	 eax, DWORD PTR [edx+1824]
  005ff	99		 cdq
  00600	52		 push	 edx
  00601	50		 push	 eax
  00602	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00605	50		 push	 eax
  00606	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00609	51		 push	 ecx
  0060a	e8 00 00 00 00	 call	 __allmul
  0060f	8b c8		 mov	 ecx, eax
  00611	8b f2		 mov	 esi, edx
  00613	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00616	8b 82 f0 0f 00
	00		 mov	 eax, DWORD PTR [edx+4080]
  0061c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0061f	99		 cdq
  00620	52		 push	 edx
  00621	50		 push	 eax
  00622	56		 push	 esi
  00623	51		 push	 ecx
  00624	e8 00 00 00 00	 call	 __alldiv
  00629	52		 push	 edx
  0062a	50		 push	 eax
  0062b	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EPBEDFME@?D?z?$LF?D?S?N?O?$LH?$LB?R?I?Y?S?Z?5?$CFI64d?$KD?$KM?$LC?$LL?D?$NM?$LM?L?P?x?S@
  00630	68 04 01 00 00	 push	 260			; 00000104H
  00635	8d 8d 5c fe ff
	ff		 lea	 ecx, DWORD PTR _personalRoomMessage$12[ebp]
  0063b	51		 push	 ecx
  0063c	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ ; _snprintf_s<260>
  00641	83 c4 14	 add	 esp, 20			; 00000014H

; 436  : 					//m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GR_PERSONAL_TABLE,SUB_GF_PERSONAL_MESSAGE,&personalRoomMessage,sizeof(personalRoomMessage));
; 437  : 					SendGameMessage(pIServerUserItem, personalRoomMessage.szMessage ,SUB_GF_PERSONAL_MESSAGE);

  00644	68 f5 01 00 00	 push	 501			; 000001f5H
  00649	8d 85 5c fe ff
	ff		 lea	 eax, DWORD PTR _personalRoomMessage$12[ebp]
  0064f	50		 push	 eax
  00650	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  00653	51		 push	 ecx
  00654	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00657	8b 02		 mov	 eax, DWORD PTR [edx]
  00659	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0065c	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  00662	ff d2		 call	 edx

; 438  : 					m_bBeOut[i]  = true;

  00664	0f b7 45 e8	 movzx	 eax, WORD PTR _i$15[ebp]
  00668	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0066b	c6 84 01 14 45
	00 00 01	 mov	 BYTE PTR [ecx+eax+17684], 1

; 439  : 					continue;

  00673	e9 96 fc ff ff	 jmp	 $LN5@ConcludeGa
$LN34@ConcludeGa:

; 440  : 				}
; 441  : 			}
; 442  : 
; 443  : 			//关闭判断
; 444  : 			if ((CServerRule::IsForfendGameEnter(m_pGameServiceOption->dwServerRule)==true)&&(pIServerUserItem->GetMasterOrder()==0))

  00678	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0067b	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00681	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00684	52		 push	 edx
  00685	e8 00 00 00 00	 call	 ?IsForfendGameEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameEnter
  0068a	83 c4 04	 add	 esp, 4
  0068d	0f b6 c0	 movzx	 eax, al
  00690	83 f8 01	 cmp	 eax, 1
  00693	75 5c		 jne	 SHORT $LN36@ConcludeGa
  00695	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  00698	8b 10		 mov	 edx, DWORD PTR [eax]
  0069a	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  0069d	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  006a3	ff d0		 call	 eax
  006a5	0f b6 c8	 movzx	 ecx, al
  006a8	85 c9		 test	 ecx, ecx
  006aa	75 45		 jne	 SHORT $LN36@ConcludeGa

; 445  : 			{
; 446  : 				//发送消息
; 447  : 				LPCTSTR pszMessage=TEXT("由于系统维护，当前游戏桌子禁止用户继续游戏！");

  006ac	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pszMessage$11[ebp], OFFSET ??_C@_0CN@COMBKMFK@?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$KD?$KM?$LF?$LB?G?$LA?S?N?O?$LH?W?$MA?W?S?$LN?$PL?V?$LJ?S@

; 448  : 				SendGameMessage(pIServerUserItem,pszMessage,SMT_EJECT|SMT_CHAT|SMT_CLOSE_GAME);

  006b6	68 03 02 00 00	 push	 515			; 00000203H
  006bb	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR _pszMessage$11[ebp]
  006c1	50		 push	 eax
  006c2	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  006c5	51		 push	 ecx
  006c6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006c9	8b 02		 mov	 eax, DWORD PTR [edx]
  006cb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006ce	8b 90 cc 00 00
	00		 mov	 edx, DWORD PTR [eax+204]
  006d4	ff d2		 call	 edx

; 449  : 
; 450  : 				//用户起立
; 451  : 				PerformStandUpAction(pIServerUserItem);

  006d6	6a 00		 push	 0
  006d8	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  006db	50		 push	 eax
  006dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006df	8b 11		 mov	 edx, DWORD PTR [ecx]
  006e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006e4	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  006ea	ff d0		 call	 eax

; 452  : 
; 453  : 				continue;

  006ec	e9 1d fc ff ff	 jmp	 $LN5@ConcludeGa
$LN36@ConcludeGa:

; 454  : 			}
; 455  : 
; 456  : 			//机器起立
; 457  : 			if (pIServerUserItem->GetUserStatus()!=US_OFFLINE && (m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)==0)

  006f1	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  006f4	8b 10		 mov	 edx, DWORD PTR [eax]
  006f6	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  006f9	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  006fc	ff d0		 call	 eax
  006fe	0f b6 c8	 movzx	 ecx, al
  00701	83 f9 06	 cmp	 ecx, 6
  00704	0f 84 4d 01 00
	00		 je	 $LN37@ConcludeGa
  0070a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0070d	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00713	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00717	83 e2 04	 and	 edx, 4
  0071a	0f 85 37 01 00
	00		 jne	 $LN37@ConcludeGa

; 458  : 			{
; 459  : 				//机器处理
; 460  : 				if (pIServerUserItem->IsAndroidUser()==true)

  00720	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  00723	8b 10		 mov	 edx, DWORD PTR [eax]
  00725	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  00728	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0072e	ff d0		 call	 eax
  00730	0f b6 c8	 movzx	 ecx, al
  00733	83 f9 01	 cmp	 ecx, 1
  00736	0f 85 1b 01 00
	00		 jne	 $LN37@ConcludeGa

; 461  : 				{
; 462  : 					//绑定信息
; 463  : 					CAttemperEngineSink * pAttemperEngineSink=(CAttemperEngineSink *)m_pIMainServiceFrame;

  0073c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0073f	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00745	89 8d e8 fd ff
	ff		 mov	 DWORD PTR tv457[ebp], ecx
  0074b	83 bd e8 fd ff
	ff 00		 cmp	 DWORD PTR tv457[ebp], 0
  00752	74 11		 je	 SHORT $LN60@ConcludeGa
  00754	8b 95 e8 fd ff
	ff		 mov	 edx, DWORD PTR tv457[ebp]
  0075a	83 ea 04	 sub	 edx, 4
  0075d	89 95 e4 fd ff
	ff		 mov	 DWORD PTR tv456[ebp], edx
  00763	eb 0a		 jmp	 SHORT $LN61@ConcludeGa
$LN60@ConcludeGa:
  00765	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv456[ebp], 0
$LN61@ConcludeGa:
  0076f	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR tv456[ebp]
  00775	89 85 54 fe ff
	ff		 mov	 DWORD PTR _pAttemperEngineSink$10[ebp], eax

; 464  : 					tagBindParameter * pBindParameter=pAttemperEngineSink->GetBindParameter(pIServerUserItem->GetBindIndex());

  0077b	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  0077e	8b 10		 mov	 edx, DWORD PTR [eax]
  00780	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  00783	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00786	ff d0		 call	 eax
  00788	0f b7 c8	 movzx	 ecx, ax
  0078b	51		 push	 ecx
  0078c	8b 95 54 fe ff
	ff		 mov	 edx, DWORD PTR _pAttemperEngineSink$10[ebp]
  00792	8b 02		 mov	 eax, DWORD PTR [edx]
  00794	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR _pAttemperEngineSink$10[ebp]
  0079a	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  0079d	ff d2		 call	 edx
  0079f	89 85 50 fe ff
	ff		 mov	 DWORD PTR _pBindParameter$9[ebp], eax

; 465  : 
; 466  : 					//查找机器
; 467  : 					IAndroidUserItem * pIAndroidUserItem=m_pIAndroidUserManager->SearchAndroidUserItem(pIServerUserItem->GetUserID(),pBindParameter->dwSocketID);

  007a5	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$9[ebp]
  007ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  007ad	51		 push	 ecx
  007ae	8b 55 e4	 mov	 edx, DWORD PTR _pIServerUserItem$14[ebp]
  007b1	8b 02		 mov	 eax, DWORD PTR [edx]
  007b3	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  007b6	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  007b9	ff d2		 call	 edx
  007bb	50		 push	 eax
  007bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007bf	8b 88 d0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4048]
  007c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  007c8	8b 01		 mov	 eax, DWORD PTR [ecx]
  007ca	8b 8a d0 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4048]
  007d0	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  007d3	ff d2		 call	 edx
  007d5	89 85 4c fe ff
	ff		 mov	 DWORD PTR _pIAndroidUserItem$8[ebp], eax

; 468  : 					if(pIAndroidUserItem==NULL) continue;

  007db	83 bd 4c fe ff
	ff 00		 cmp	 DWORD PTR _pIAndroidUserItem$8[ebp], 0
  007e2	75 05		 jne	 SHORT $LN39@ConcludeGa
  007e4	e9 25 fb ff ff	 jmp	 $LN5@ConcludeGa
$LN39@ConcludeGa:

; 469  : 
; 470  : 					//离开判断
; 471  : 					if(pIAndroidUserItem->JudgeAndroidActionAndRemove(ANDROID_WAITLEAVE))

  007e9	6a 02		 push	 2
  007eb	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$8[ebp]
  007f1	8b 10		 mov	 edx, DWORD PTR [eax]
  007f3	8b 8d 4c fe ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$8[ebp]
  007f9	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  007fc	ff d0		 call	 eax
  007fe	0f b6 c8	 movzx	 ecx, al
  00801	85 c9		 test	 ecx, ecx
  00803	74 1b		 je	 SHORT $LN40@ConcludeGa

; 472  : 					{
; 473  : 						//起立处理
; 474  : 						PerformStandUpAction(pIServerUserItem);

  00805	6a 00		 push	 0
  00807	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  0080a	50		 push	 eax
  0080b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0080e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00810	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00813	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00819	ff d0		 call	 eax

; 475  : 
; 476  : 						continue;

  0081b	e9 ee fa ff ff	 jmp	 $LN5@ConcludeGa
$LN40@ConcludeGa:

; 477  : 					}
; 478  : 
; 479  : 					//起立判断
; 480  : 					if(pIAndroidUserItem->JudgeAndroidActionAndRemove(ANDROID_WAITSTANDUP))

  00820	6a 01		 push	 1
  00822	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$8[ebp]
  00828	8b 10		 mov	 edx, DWORD PTR [eax]
  0082a	8b 8d 4c fe ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$8[ebp]
  00830	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00833	ff d0		 call	 eax
  00835	0f b6 c8	 movzx	 ecx, al
  00838	85 c9		 test	 ecx, ecx
  0083a	74 1b		 je	 SHORT $LN37@ConcludeGa

; 481  : 					{
; 482  : 						//起立处理
; 483  : 						PerformStandUpAction(pIServerUserItem);

  0083c	6a 00		 push	 0
  0083e	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  00841	50		 push	 eax
  00842	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00845	8b 11		 mov	 edx, DWORD PTR [ecx]
  00847	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0084a	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00850	ff d0		 call	 eax

; 484  : 
; 485  : 						continue;

  00852	e9 b7 fa ff ff	 jmp	 $LN5@ConcludeGa
$LN37@ConcludeGa:

; 486  : 					}												
; 487  : 				}
; 488  : 			}
; 489  : 
; 490  : 			if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) == 0)

  00857	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0085a	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00860	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00864	83 e2 10	 and	 edx, 16			; 00000010H
  00867	75 64		 jne	 SHORT $LN42@ConcludeGa

; 491  : 			{
; 492  : 				//启动定时
; 493  : 				if(IsGameStarted()==false && pIServerUserItem->IsMobileUser() && m_pGameServiceAttrib->wChairCount<MAX_CHAIR)						SetGameTimer(IDI_START_OVERTIME+i,TIME_OVERTIME,1,i);

  00869	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0086c	8b 10		 mov	 edx, DWORD PTR [eax]
  0086e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00871	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00874	ff d0		 call	 eax
  00876	0f b6 c8	 movzx	 ecx, al
  00879	85 c9		 test	 ecx, ecx
  0087b	75 50		 jne	 SHORT $LN42@ConcludeGa
  0087d	8b 45 e4	 mov	 eax, DWORD PTR _pIServerUserItem$14[ebp]
  00880	8b 10		 mov	 edx, DWORD PTR [eax]
  00882	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItem$14[ebp]
  00885	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  0088b	ff d0		 call	 eax
  0088d	0f b6 c8	 movzx	 ecx, al
  00890	85 c9		 test	 ecx, ecx
  00892	74 39		 je	 SHORT $LN42@ConcludeGa
  00894	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00897	8b 88 ec 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4076]
  0089d	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  008a1	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  008a7	7d 24		 jge	 SHORT $LN42@ConcludeGa
  008a9	0f b7 45 e8	 movzx	 eax, WORD PTR _i$15[ebp]
  008ad	50		 push	 eax
  008ae	6a 01		 push	 1
  008b0	68 30 75 00 00	 push	 30000			; 00007530H
  008b5	0f b7 4d e8	 movzx	 ecx, WORD PTR _i$15[ebp]
  008b9	83 c1 16	 add	 ecx, 22			; 00000016H
  008bc	51		 push	 ecx
  008bd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  008c0	8b 02		 mov	 eax, DWORD PTR [edx]
  008c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008c5	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  008cb	ff d2		 call	 edx
$LN42@ConcludeGa:

; 494  : 			}
; 495  : 		}		

  008cd	e9 3c fa ff ff	 jmp	 $LN5@ConcludeGa
$LN26@ConcludeGa:

; 496  : 	}
; 497  : 
; 498  : 	//结束桌子
; 499  : 	ConcludeTable();

  008d2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008d5	8b 10		 mov	 edx, DWORD PTR [eax]
  008d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008da	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  008e0	ff d0		 call	 eax

; 500  : 
; 501  : 	//发送状态
; 502  : 	SendTableStatus();

  008e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008e5	e8 00 00 00 00	 call	 ?SendTableStatus@CTableFrame@@QAE_NXZ ; CTableFrame::SendTableStatus

; 503  : 	
; 504  : 	//通知约战
; 505  : 	if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  008ea	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008ed	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  008f3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  008f7	83 e2 10	 and	 edx, 16			; 00000010H
  008fa	0f 84 31 03 00
	00		 je	 $LN44@ConcludeGa

; 506  : 	{
; 507  : 		//第一局结束扣除创建消耗的房卡
; 508  : 		if(m_dwPersonalPlayCount == 1 && !m_bIsCancelBeforeOneTurn)

  00900	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00903	83 b8 20 10 00
	00 01		 cmp	 DWORD PTR [eax+4128], 1
  0090a	0f 85 2a 01 00
	00		 jne	 $LN45@ConcludeGa
  00910	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00913	0f b6 88 c8 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18120]
  0091a	85 c9		 test	 ecx, ecx
  0091c	0f 85 18 01 00
	00		 jne	 $LN45@ConcludeGa

; 509  : 		{
; 510  : 			if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL &&  m_dwPersonalRoomID != 0)

  00922	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00925	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0092b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0092f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00932	0f 85 02 01 00
	00		 jne	 $LN45@ConcludeGa
  00938	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0093b	83 b8 30 11 00
	00 00		 cmp	 DWORD PTR [eax+4400], 0
  00942	0f 84 f2 00 00
	00		 je	 $LN45@ConcludeGa

; 511  : 				{
; 512  : 					if (m_pIPersonaTableFrameHook)

  00948	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0094b	83 b8 10 10 00
	00 00		 cmp	 DWORD PTR [eax+4112], 0
  00952	0f 84 e2 00 00
	00		 je	 $LN45@ConcludeGa

; 513  : 					{
; 514  : 						time_t timer;
; 515  : 						time(&timer);

  00958	8d 85 44 fe ff
	ff		 lea	 eax, DWORD PTR _timer$7[ebp]
  0095e	50		 push	 eax
  0095f	e8 00 00 00 00	 call	 _time
  00964	83 c4 04	 add	 esp, 4

; 516  : 						tm* t_tm = localtime(&timer);

  00967	8d 85 44 fe ff
	ff		 lea	 eax, DWORD PTR _timer$7[ebp]
  0096d	50		 push	 eax
  0096e	e8 00 00 00 00	 call	 _localtime
  00973	83 c4 04	 add	 esp, 4
  00976	89 85 40 fe ff
	ff		 mov	 DWORD PTR _t_tm$6[ebp], eax

; 517  : 						//免费时段不扣费
; 518  : 						if ((m_PersonalTableParameter.wBeginFreeTime == m_PersonalTableParameter.wEndFreeTime))

  0097c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0097f	0f b7 88 98 44
	00 00		 movzx	 ecx, WORD PTR [eax+17560]
  00986	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00989	0f b7 82 9a 44
	00 00		 movzx	 eax, WORD PTR [edx+17562]
  00990	3b c8		 cmp	 ecx, eax
  00992	75 3f		 jne	 SHORT $LN48@ConcludeGa

; 519  : 						{
; 520  : 							m_pIPersonaTableFrameHook->PersonalPayRoomCard(m_dwTableOwnerID, m_wTableID, m_wChairCount, m_dwPersonalRoomID);

  00994	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00997	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  0099d	51		 push	 ecx
  0099e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009a1	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  009a5	50		 push	 eax
  009a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009a9	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  009ad	52		 push	 edx
  009ae	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009b1	8b 88 40 07 00
	00		 mov	 ecx, DWORD PTR [eax+1856]
  009b7	51		 push	 ecx
  009b8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009bb	8b 82 10 10 00
	00		 mov	 eax, DWORD PTR [edx+4112]
  009c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009c4	8b 10		 mov	 edx, DWORD PTR [eax]
  009c6	8b 89 10 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4112]
  009cc	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  009cf	ff d0		 call	 eax

; 521  : 						}
; 522  : 						else

  009d1	eb 67		 jmp	 SHORT $LN45@ConcludeGa
$LN48@ConcludeGa:

; 523  : 						{
; 524  : 							if (t_tm->tm_hour < m_PersonalTableParameter.wBeginFreeTime || t_tm->tm_hour > m_PersonalTableParameter.wEndFreeTime)

  009d3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009d6	0f b7 88 98 44
	00 00		 movzx	 ecx, WORD PTR [eax+17560]
  009dd	8b 95 40 fe ff
	ff		 mov	 edx, DWORD PTR _t_tm$6[ebp]
  009e3	39 4a 08	 cmp	 DWORD PTR [edx+8], ecx
  009e6	7c 15		 jl	 SHORT $LN51@ConcludeGa
  009e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009eb	0f b7 88 9a 44
	00 00		 movzx	 ecx, WORD PTR [eax+17562]
  009f2	8b 95 40 fe ff
	ff		 mov	 edx, DWORD PTR _t_tm$6[ebp]
  009f8	39 4a 08	 cmp	 DWORD PTR [edx+8], ecx
  009fb	7e 3d		 jle	 SHORT $LN45@ConcludeGa
$LN51@ConcludeGa:

; 525  : 								m_pIPersonaTableFrameHook->PersonalPayRoomCard(m_dwTableOwnerID, m_wTableID, m_wChairCount, m_dwPersonalRoomID);

  009fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a00	8b 88 30 11 00
	00		 mov	 ecx, DWORD PTR [eax+4400]
  00a06	51		 push	 ecx
  00a07	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00a0a	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00a0e	50		 push	 eax
  00a0f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a12	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00a16	52		 push	 edx
  00a17	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a1a	8b 88 40 07 00
	00		 mov	 ecx, DWORD PTR [eax+1856]
  00a20	51		 push	 ecx
  00a21	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00a24	8b 82 10 10 00
	00		 mov	 eax, DWORD PTR [edx+4112]
  00a2a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a2d	8b 10		 mov	 edx, DWORD PTR [eax]
  00a2f	8b 89 10 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4112]
  00a35	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00a38	ff d0		 call	 eax
$LN45@ConcludeGa:

; 526  : 						}						
; 527  : 					}
; 528  : 				}
; 529  : 		}
; 530  : 
; 531  : 		//定义变量
; 532  : 		CAttemperEngineSink * pAttemperEngineSink=(CAttemperEngineSink *)m_pIMainServiceFrame;

  00a3a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a3d	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00a43	89 8d e8 fd ff
	ff		 mov	 DWORD PTR tv633[ebp], ecx
  00a49	83 bd e8 fd ff
	ff 00		 cmp	 DWORD PTR tv633[ebp], 0
  00a50	74 11		 je	 SHORT $LN62@ConcludeGa
  00a52	8b 95 e8 fd ff
	ff		 mov	 edx, DWORD PTR tv633[ebp]
  00a58	83 ea 04	 sub	 edx, 4
  00a5b	89 95 e4 fd ff
	ff		 mov	 DWORD PTR tv632[ebp], edx
  00a61	eb 0a		 jmp	 SHORT $LN63@ConcludeGa
$LN62@ConcludeGa:
  00a63	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv632[ebp], 0
$LN63@ConcludeGa:
  00a6d	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR tv632[ebp]
  00a73	89 85 3c fe ff
	ff		 mov	 DWORD PTR _pAttemperEngineSink$5[ebp], eax

; 533  : 		//设置用户
; 534  : 		for (WORD i=0;i<m_wChairCount;i++)

  00a79	33 c0		 xor	 eax, eax
  00a7b	66 89 85 38 fe
	ff ff		 mov	 WORD PTR _i$4[ebp], ax
  00a82	eb 12		 jmp	 SHORT $LN10@ConcludeGa
$LN8@ConcludeGa:
  00a84	66 8b 85 38 fe
	ff ff		 mov	 ax, WORD PTR _i$4[ebp]
  00a8b	66 83 c0 01	 add	 ax, 1
  00a8f	66 89 85 38 fe
	ff ff		 mov	 WORD PTR _i$4[ebp], ax
$LN10@ConcludeGa:
  00a96	0f b7 85 38 fe
	ff ff		 movzx	 eax, WORD PTR _i$4[ebp]
  00a9d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa0	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00aa4	3b c2		 cmp	 eax, edx
  00aa6	7d 4a		 jge	 SHORT $LN9@ConcludeGa

; 535  : 		{
; 536  : 			//获取用户
; 537  : 			IServerUserItem * pIServerUserItem=GetTableUserItem(i);			

  00aa8	0f b7 85 38 fe
	ff ff		 movzx	 eax, WORD PTR _i$4[ebp]
  00aaf	50		 push	 eax
  00ab0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab3	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ab5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab8	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00abe	ff d0		 call	 eax
  00ac0	89 85 34 fe ff
	ff		 mov	 DWORD PTR _pIServerUserItem$3[ebp], eax

; 538  : 			if (pIServerUserItem!=NULL&&pAttemperEngineSink!=NULL)

  00ac6	83 bd 34 fe ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$3[ebp], 0
  00acd	74 21		 je	 SHORT $LN52@ConcludeGa
  00acf	83 bd 3c fe ff
	ff 00		 cmp	 DWORD PTR _pAttemperEngineSink$5[ebp], 0
  00ad6	74 18		 je	 SHORT $LN52@ConcludeGa

; 539  : 			{
; 540  : 				//任务推进
; 541  : 				pAttemperEngineSink->PerformRoomTaskProgress(pIServerUserItem,0,0,1);

  00ad8	6a 01		 push	 1
  00ada	6a 00		 push	 0
  00adc	6a 00		 push	 0
  00ade	8b 85 34 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$3[ebp]
  00ae4	50		 push	 eax
  00ae5	8b 8d 3c fe ff
	ff		 mov	 ecx, DWORD PTR _pAttemperEngineSink$5[ebp]
  00aeb	e8 00 00 00 00	 call	 ?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z ; CAttemperEngineSink::PerformRoomTaskProgress
$LN52@ConcludeGa:

; 542  : 			}
; 543  : 		}

  00af0	eb 92		 jmp	 SHORT $LN8@ConcludeGa
$LN9@ConcludeGa:

; 544  : 
; 545  : 		if (m_pIPersonaTableFrameHook != NULL && m_pIPersonaTableFrameHook->OnEventGameEnd(m_wTableID, m_wChairCount, m_dwDrawCountLimit, m_dwPersonalPlayCount, m_nSpecialInfoLen, m_cbSpecialInfo, m_sysStartTime, m_PersonalUserScoreInfo,bPersonalLoop,m_cbGameMode))

  00af2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00af5	83 b8 10 10 00
	00 00		 cmp	 DWORD PTR [eax+4112], 0
  00afc	0f 84 2f 01 00
	00		 je	 $LN44@ConcludeGa
  00b02	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b05	0f b6 88 d0 46
	00 00		 movzx	 ecx, BYTE PTR [eax+18128]
  00b0c	51		 push	 ecx
  00b0d	8b 55 0c	 mov	 edx, DWORD PTR _bPersonalLoop$[ebp]
  00b10	52		 push	 edx
  00b11	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b14	05 9d 11 00 00	 add	 eax, 4509		; 0000119dH
  00b19	50		 push	 eax
  00b1a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b1d	81 c1 dc 46 00
	00		 add	 ecx, 18140		; 000046dcH
  00b23	83 ec 10	 sub	 esp, 16			; 00000010H
  00b26	8b d4		 mov	 edx, esp
  00b28	8b 01		 mov	 eax, DWORD PTR [ecx]
  00b2a	89 02		 mov	 DWORD PTR [edx], eax
  00b2c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00b2f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00b32	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00b35	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00b38	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00b3b	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00b3e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b41	81 c2 7d 40 00
	00		 add	 edx, 16509		; 0000407dH
  00b47	52		 push	 edx
  00b48	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b4b	8b 88 68 44 00
	00		 mov	 ecx, DWORD PTR [eax+17512]
  00b51	51		 push	 ecx
  00b52	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b55	81 c2 20 10 00
	00		 add	 edx, 4128		; 00001020H
  00b5b	52		 push	 edx
  00b5c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b5f	8b 88 18 10 00
	00		 mov	 ecx, DWORD PTR [eax+4120]
  00b65	51		 push	 ecx
  00b66	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b69	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00b6d	50		 push	 eax
  00b6e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b71	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00b75	52		 push	 edx
  00b76	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b79	8b 88 10 10 00
	00		 mov	 ecx, DWORD PTR [eax+4112]
  00b7f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b82	8b 01		 mov	 eax, DWORD PTR [ecx]
  00b84	8b 8a 10 10 00
	00		 mov	 ecx, DWORD PTR [edx+4112]
  00b8a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00b8d	ff d2		 call	 edx
  00b8f	0f b6 c0	 movzx	 eax, al
  00b92	85 c0		 test	 eax, eax
  00b94	0f 84 97 00 00
	00		 je	 $LN44@ConcludeGa

; 546  : 		{
; 547  : 			//桌子设置
; 548  : 			m_dwPersonalPlayCount = 0;

  00b9a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b9d	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 549  : 			m_dwTableOwnerID = 0;

  00ba7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00baa	c7 80 40 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1856], 0

; 550  : 			m_dwDrawCountLimit = 0;

  00bb4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bb7	c7 80 18 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4120], 0

; 551  : 			m_dwDrawTimeLimit = 0;

  00bc1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bc4	c7 80 1c 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4124], 0

; 552  : 			m_dwTimeBegin = 0;

  00bce	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bd1	c7 80 30 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4144], 0

; 553  : 			m_bIsDissumGame = true;

  00bdb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bde	c6 80 34 11 00
	00 01		 mov	 BYTE PTR [eax+4404], 1

; 554  : 			m_cbIsRequestOver = 0;

  00be5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00be8	c6 80 11 11 00
	00 00		 mov	 BYTE PTR [eax+4369], 0

; 555  : 			m_dwReplyCount = 0;

  00bef	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bf2	c7 80 44 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4164], 0

; 556  : 			ZeroMemory(m_cbRequestReply, sizeof(m_cbRequestReply));

  00bfc	68 c8 00 00 00	 push	 200			; 000000c8H
  00c01	6a 00		 push	 0
  00c03	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c06	05 48 10 00 00	 add	 eax, 4168		; 00001048H
  00c0b	50		 push	 eax
  00c0c	e8 00 00 00 00	 call	 _memset
  00c11	83 c4 0c	 add	 esp, 12			; 0000000cH

; 557  : 			m_MapPersonalTableScoreInfo.RemoveAll();

  00c14	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c17	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  00c1d	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll

; 558  : 			GetLocalTime(&m_sysEndTime);

  00c22	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c25	05 ec 46 00 00	 add	 eax, 18156		; 000046ecH
  00c2a	50		 push	 eax
  00c2b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4
$LN44@ConcludeGa:

; 559  : 		}
; 560  : 	}
; 561  : 
; 562  : 	//通知用户准备
; 563  : 	for (int i = 0; i < m_wChairCount; i++)

  00c31	c7 85 30 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  00c3b	eb 0f		 jmp	 SHORT $LN13@ConcludeGa
$LN11@ConcludeGa:
  00c3d	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  00c43	83 c0 01	 add	 eax, 1
  00c46	89 85 30 fe ff
	ff		 mov	 DWORD PTR _i$2[ebp], eax
$LN13@ConcludeGa:
  00c4c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c4f	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00c53	39 8d 30 fe ff
	ff		 cmp	 DWORD PTR _i$2[ebp], ecx
  00c59	7d 58		 jge	 SHORT $LN12@ConcludeGa

; 564  : 	{
; 565  : 		//获取用户
; 566  : 		if (m_TableUserItemArray[i]==NULL) continue;

  00c5b	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  00c61	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c64	83 bc 81 90 0c
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+3216], 0
  00c6c	75 02		 jne	 SHORT $LN54@ConcludeGa
  00c6e	eb cd		 jmp	 SHORT $LN11@ConcludeGa
$LN54@ConcludeGa:

; 567  : 		IServerUserItem * pIServerUserItem=m_TableUserItemArray[i];

  00c70	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  00c76	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c79	8b 94 81 90 0c
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+3216]
  00c80	89 95 2c fe ff
	ff		 mov	 DWORD PTR _pIServerUserItem$1[ebp], edx

; 568  : 
; 569  : 		m_pIMainServiceFrame->SendData(pIServerUserItem,MDM_GF_FRAME,SUB_GF_NOTICE_READ,NULL, 0);

  00c86	6a 00		 push	 0
  00c88	6a 00		 push	 0
  00c8a	68 f6 01 00 00	 push	 502			; 000001f6H
  00c8f	6a 64		 push	 100			; 00000064H
  00c91	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  00c97	50		 push	 eax
  00c98	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c9b	8b 91 cc 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4044]
  00ca1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ca4	8b 12		 mov	 edx, DWORD PTR [edx]
  00ca6	8b 88 cc 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4044]
  00cac	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00caf	ff d0		 call	 eax

; 570  : 	}

  00cb1	eb 8a		 jmp	 SHORT $LN11@ConcludeGa
$LN12@ConcludeGa:

; 571  : 
; 572  : 	return true;

  00cb3	b0 01		 mov	 al, 1
$LN1@ConcludeGa:

; 573  : }

  00cb5	5f		 pop	 edi
  00cb6	5e		 pop	 esi
  00cb7	5b		 pop	 ebx
  00cb8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00cbb	33 cd		 xor	 ecx, ebp
  00cbd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00cc2	8b e5		 mov	 esp, ebp
  00cc4	5d		 pop	 ebp
  00cc5	c2 08 00	 ret	 8
?ConcludeGame@CTableFrame@@UAE_NEH@Z ENDP		; CTableFrame::ConcludeGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?DismissGame@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_ScoreInfoArray$1 = -44					; size = 32
_i$2 = -12						; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?DismissGame@CTableFrame@@UAE_NXZ PROC			; CTableFrame::DismissGame, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//状态判断
; 266  : 	ASSERT(m_bTableStarted==true);

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	0f b6 48 12	 movzx	 ecx, BYTE PTR [eax+18]
  0001d	83 f9 01	 cmp	 ecx, 1
  00020	74 19		 je	 SHORT $LN10@DismissGam
  00022	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??DismissGame@CTableFrame@@UAE_NXZ@4JA
  00028	83 c2 02	 add	 edx, 2
  0002b	52		 push	 edx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN10@DismissGam
  0003a	cc		 int	 3
$LN10@DismissGam:

; 267  : 	if (m_bTableStarted==false) return false;

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	0f b6 48 12	 movzx	 ecx, BYTE PTR [eax+18]
  00042	85 c9		 test	 ecx, ecx
  00044	75 07		 jne	 SHORT $LN5@DismissGam
  00046	32 c0		 xor	 al, al
  00048	e9 01 01 00 00	 jmp	 $LN1@DismissGam
$LN5@DismissGam:

; 268  : 
; 269  : 	//结束游戏
; 270  : 	if ((m_bGameStarted==true)&&(m_pITableFrameSink->OnEventGameConclude(INVALID_CHAIR,NULL,GER_DISMISS)==false))

  0004d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00050	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  00054	83 f9 01	 cmp	 ecx, 1
  00057	75 4d		 jne	 SHORT $LN6@DismissGam
  00059	6a 01		 push	 1
  0005b	6a 00		 push	 0
  0005d	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00062	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  0006b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00070	8b 8a c8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4040]
  00076	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00079	ff d2		 call	 edx
  0007b	0f b6 c0	 movzx	 eax, al
  0007e	85 c0		 test	 eax, eax
  00080	75 24		 jne	 SHORT $LN6@DismissGam

; 271  : 	{
; 272  : 		ASSERT(FALSE);

  00082	33 c0		 xor	 eax, eax
  00084	75 19		 jne	 SHORT $LN11@DismissGam
  00086	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DismissGame@CTableFrame@@UAE_NXZ@4JA
  0008c	83 c1 08	 add	 ecx, 8
  0008f	51		 push	 ecx
  00090	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00095	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009a	85 c0		 test	 eax, eax
  0009c	74 01		 je	 SHORT $LN11@DismissGam
  0009e	cc		 int	 3
$LN11@DismissGam:

; 273  : 		return false;

  0009f	32 c0		 xor	 al, al
  000a1	e9 a8 00 00 00	 jmp	 $LN1@DismissGam
$LN6@DismissGam:

; 274  : 	}
; 275  : 
; 276  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  000a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000af	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000b3	83 fa 10	 cmp	 edx, 16			; 00000010H
  000b6	75 6e		 jne	 SHORT $LN7@DismissGam

; 277  : 	{
; 278  : 		//写入分数
; 279  : 		for (WORD i=0;i<m_wChairCount;i++)

  000b8	33 c0		 xor	 eax, eax
  000ba	66 89 45 f4	 mov	 WORD PTR _i$2[ebp], ax
  000be	eb 0c		 jmp	 SHORT $LN4@DismissGam
$LN2@DismissGam:
  000c0	66 8b 45 f4	 mov	 ax, WORD PTR _i$2[ebp]
  000c4	66 83 c0 01	 add	 ax, 1
  000c8	66 89 45 f4	 mov	 WORD PTR _i$2[ebp], ax
$LN4@DismissGam:
  000cc	0f b7 45 f4	 movzx	 eax, WORD PTR _i$2[ebp]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  000d7	3b c2		 cmp	 eax, edx
  000d9	7d 4b		 jge	 SHORT $LN7@DismissGam

; 280  : 		{
; 281  : 			//积分变量
; 282  : 			tagScoreInfo ScoreInfoArray;
; 283  : 			ZeroMemory(&ScoreInfoArray,sizeof(ScoreInfoArray));

  000db	6a 20		 push	 32			; 00000020H
  000dd	6a 00		 push	 0
  000df	8d 45 d4	 lea	 eax, DWORD PTR _ScoreInfoArray$1[ebp]
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 284  : 			ScoreInfoArray.cbType = SCORE_TYPE_FLEE;								//积分类型

  000eb	c6 45 d4 04	 mov	 BYTE PTR _ScoreInfoArray$1[ebp], 4

; 285  : 			ScoreInfoArray.lScore = 0;								//用户分数

  000ef	0f 57 c0	 xorps	 xmm0, xmm0
  000f2	66 0f 13 45 dc	 movlpd	 QWORD PTR _ScoreInfoArray$1[ebp+8], xmm0

; 286  : 			ScoreInfoArray.lGrade = 0;								//用户成绩

  000f7	0f 57 c0	 xorps	 xmm0, xmm0
  000fa	66 0f 13 45 e4	 movlpd	 QWORD PTR _ScoreInfoArray$1[ebp+16], xmm0

; 287  : 			ScoreInfoArray.lRevenue = 0;							//游戏税收

  000ff	0f 57 c0	 xorps	 xmm0, xmm0
  00102	66 0f 13 45 ec	 movlpd	 QWORD PTR _ScoreInfoArray$1[ebp+24], xmm0

; 288  : 			WriteUserScore(i,ScoreInfoArray);

  00107	6a ff		 push	 -1
  00109	6a ff		 push	 -1
  0010b	8d 45 d4	 lea	 eax, DWORD PTR _ScoreInfoArray$1[ebp]
  0010e	50		 push	 eax
  0010f	0f b7 4d f4	 movzx	 ecx, WORD PTR _i$2[ebp]
  00113	51		 push	 ecx
  00114	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00117	8b 02		 mov	 eax, DWORD PTR [edx]
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	8b 90 80 00 00
	00		 mov	 edx, DWORD PTR [eax+128]
  00122	ff d2		 call	 edx

; 289  : 		}

  00124	eb 9a		 jmp	 SHORT $LN2@DismissGam
$LN7@DismissGam:

; 290  : 	}
; 291  : 
; 292  : 	//设置状态
; 293  : 	if ((m_bGameStarted==false)&&(m_bTableStarted==true))

  00126	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00129	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  0012d	85 c9		 test	 ecx, ecx
  0012f	75 1b		 jne	 SHORT $LN8@DismissGam
  00131	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00134	0f b6 48 12	 movzx	 ecx, BYTE PTR [eax+18]
  00138	83 f9 01	 cmp	 ecx, 1
  0013b	75 0f		 jne	 SHORT $LN8@DismissGam

; 294  : 	{
; 295  : 		//设置变量
; 296  : 		m_bTableStarted=false;

  0013d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00140	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0

; 297  : 
; 298  : 		//发送状态
; 299  : 		SendTableStatus();

  00144	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	e8 00 00 00 00	 call	 ?SendTableStatus@CTableFrame@@QAE_NXZ ; CTableFrame::SendTableStatus
$LN8@DismissGam:

; 300  : 	}
; 301  : 
; 302  : 
; 303  : 	return false;

  0014c	32 c0		 xor	 al, al
$LN1@DismissGam:

; 304  : }

  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5b		 pop	 ebx
  00151	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00154	33 cd		 xor	 ecx, ebp
  00156	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
?DismissGame@CTableFrame@@UAE_NXZ ENDP			; CTableFrame::DismissGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?StartGame@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
tv412 = -104						; size = 4
_bStart$ = -33						; size = 1
_pUserItem$1 = -32					; size = 4
_i$2 = -28						; size = 4
_cbUserStatus$3 = -21					; size = 1
_pIServerUserItem$4 = -20				; size = 4
_i$5 = -16						; size = 2
_nPlayerCount$6 = -12					; size = 4
_bTableStarted$ = -6					; size = 1
_bGameStarted$ = -5					; size = 1
_this$ = -4						; size = 4
?StartGame@CTableFrame@@UAE_NXZ PROC			; CTableFrame::StartGame, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  : 	//游戏状态
; 145  : 	ASSERT(m_bDrawStarted==false);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  00013	85 c9		 test	 ecx, ecx
  00015	74 19		 je	 SHORT $LN24@StartGame
  00017	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??StartGame@CTableFrame@@UAE_NXZ@4JA
  0001d	83 c2 02	 add	 edx, 2
  00020	52		 push	 edx
  00021	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00026	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002b	85 c0		 test	 eax, eax
  0002d	74 01		 je	 SHORT $LN24@StartGame
  0002f	cc		 int	 3
$LN24@StartGame:

; 146  : 	if (m_bDrawStarted==true) return false;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  00037	83 f9 01	 cmp	 ecx, 1
  0003a	75 07		 jne	 SHORT $LN8@StartGame
  0003c	32 c0		 xor	 al, al
  0003e	e9 4d 04 00 00	 jmp	 $LN1@StartGame
$LN8@StartGame:

; 147  : 
; 148  : 	//保存变量
; 149  : 	bool bGameStarted=m_bGameStarted;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8a 48 10	 mov	 cl, BYTE PTR [eax+16]
  00049	88 4d fb	 mov	 BYTE PTR _bGameStarted$[ebp], cl

; 150  : 	bool bTableStarted=m_bTableStarted;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8a 48 12	 mov	 cl, BYTE PTR [eax+18]
  00052	88 4d fa	 mov	 BYTE PTR _bTableStarted$[ebp], cl

; 151  : 
; 152  : 	//设置状态
; 153  : 	m_bGameStarted=true;

  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	c6 40 10 01	 mov	 BYTE PTR [eax+16], 1

; 154  : 	m_bDrawStarted=true;

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1

; 155  : 	m_bTableStarted=true;

  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	c6 40 12 01	 mov	 BYTE PTR [eax+18], 1

; 156  : 
; 157  : 	//开始时间
; 158  : 	GetLocalTime(&m_SystemTimeStart);

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	05 2c 07 00 00	 add	 eax, 1836		; 0000072cH
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 159  : 	m_dwDrawStartTime=(DWORD)time(NULL);

  00079	6a 00		 push	 0
  0007b	e8 00 00 00 00	 call	 _time
  00080	83 c4 04	 add	 esp, 4
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	89 81 28 07 00
	00		 mov	 DWORD PTR [ecx+1832], eax

; 160  : 
; 161  : 	//记录时间
; 162  : 	if(m_dwPersonalPlayCount == 0 && m_bPersonalLock == true)

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	83 b8 20 10 00
	00 00		 cmp	 DWORD PTR [eax+4128], 0
  00096	75 22		 jne	 SHORT $LN9@StartGame
  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	0f b6 88 9a 11
	00 00		 movzx	 ecx, BYTE PTR [eax+4506]
  000a2	83 f9 01	 cmp	 ecx, 1
  000a5	75 13		 jne	 SHORT $LN9@StartGame

; 163  : 	{
; 164  : 		m_dwTimeBegin = (DWORD)time(NULL);

  000a7	6a 00		 push	 0
  000a9	e8 00 00 00 00	 call	 _time
  000ae	83 c4 04	 add	 esp, 4
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	89 81 30 10 00
	00		 mov	 DWORD PTR [ecx+4144], eax
$LN9@StartGame:

; 165  : 
; 166  : 	}
; 167  : 
; 168  : 	//记录房主
; 169  : 	m_dwRecordTableID = m_dwTableOwnerID;

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	8b 91 40 07 00
	00		 mov	 edx, DWORD PTR [ecx+1856]
  000c6	89 90 10 45 00
	00		 mov	 DWORD PTR [eax+17680], edx

; 170  : 
; 171  : 	//开始设置
; 172  : 	if (bGameStarted==false)

  000cc	0f b6 45 fb	 movzx	 eax, BYTE PTR _bGameStarted$[ebp]
  000d0	85 c0		 test	 eax, eax
  000d2	0f 85 bb 02 00
	00		 jne	 $LN10@StartGame

; 173  : 	{
; 174  : 		if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  000d8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000db	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  000e1	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000e5	83 fa 10	 cmp	 edx, 16			; 00000010H
  000e8	75 15		 jne	 SHORT $LN11@StartGame

; 175  : 		m_dwPersonalPlayCount++;

  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 88 20 10 00
	00		 mov	 ecx, DWORD PTR [eax+4128]
  000f3	83 c1 01	 add	 ecx, 1
  000f6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f9	89 8a 20 10 00
	00		 mov	 DWORD PTR [edx+4128], ecx
$LN11@StartGame:

; 176  : 
; 177  : 		//状态变量
; 178  : 		ZeroMemory(m_wOffLineCount,sizeof(m_wOffLineCount));

  000ff	68 90 01 00 00	 push	 400			; 00000190H
  00104	6a 00		 push	 0
  00106	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00109	05 de 07 00 00	 add	 eax, 2014		; 000007deH
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 _memset
  00114	83 c4 0c	 add	 esp, 12			; 0000000cH

; 179  : 		ZeroMemory(m_dwOffLineTime,sizeof(m_dwOffLineTime));

  00117	68 20 03 00 00	 push	 800			; 00000320H
  0011c	6a 00		 push	 0
  0011e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00121	05 70 09 00 00	 add	 eax, 2416		; 00000970H
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 _memset
  0012c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 180  : 		
; 181  : 		memset(m_bBeOut, 0, sizeof(m_bBeOut));

  0012f	68 c8 00 00 00	 push	 200			; 000000c8H
  00134	6a 00		 push	 0
  00136	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00139	05 14 45 00 00	 add	 eax, 17684		; 00004514H
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 _memset
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH

; 182  : 		KillGameTimer(IDI_PERSONAL_BEFORE_BEGAIN_TIME);

  00147	6a 2b		 push	 43			; 0000002bH
  00149	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	8b 10		 mov	 edx, DWORD PTR [eax]
  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00157	ff d0		 call	 eax

; 183  : 
; 184  : 		//设置用户
; 185  : 		int nPlayerCount = 0;

  00159	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nPlayerCount$6[ebp], 0

; 186  : 		for (WORD i=0;i<m_wChairCount;i++)

  00160	33 c0		 xor	 eax, eax
  00162	66 89 45 f0	 mov	 WORD PTR _i$5[ebp], ax
  00166	eb 0c		 jmp	 SHORT $LN4@StartGame
$LN2@StartGame:
  00168	66 8b 45 f0	 mov	 ax, WORD PTR _i$5[ebp]
  0016c	66 83 c0 01	 add	 ax, 1
  00170	66 89 45 f0	 mov	 WORD PTR _i$5[ebp], ax
$LN4@StartGame:
  00174	0f b7 45 f0	 movzx	 eax, WORD PTR _i$5[ebp]
  00178	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017b	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  0017f	3b c2		 cmp	 eax, edx
  00181	0f 8d c5 01 00
	00		 jge	 $LN3@StartGame

; 187  : 		{
; 188  : 			//获取用户
; 189  : 			IServerUserItem * pIServerUserItem=GetTableUserItem(i);

  00187	0f b7 45 f0	 movzx	 eax, WORD PTR _i$5[ebp]
  0018b	50		 push	 eax
  0018c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0019a	ff d0		 call	 eax
  0019c	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$4[ebp], eax

; 190  : 
; 191  : 			//设置用户
; 192  : 			if (pIServerUserItem!=NULL)

  0019f	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$4[ebp], 0
  001a3	0f 84 9e 01 00
	00		 je	 $LN12@StartGame

; 193  : 			{
; 194  : 				//锁定游戏币
; 195  : 				if (m_pGameServiceOption->lServiceScore>0L)

  001a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ac	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001b2	89 4d 98	 mov	 DWORD PTR tv412[ebp], ecx
  001b5	8b 55 98	 mov	 edx, DWORD PTR tv412[ebp]
  001b8	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  001bc	7c 50		 jl	 SHORT $LN13@StartGame
  001be	7f 09		 jg	 SHORT $LN26@StartGame
  001c0	8b 45 98	 mov	 eax, DWORD PTR tv412[ebp]
  001c3	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  001c7	76 45		 jbe	 SHORT $LN13@StartGame
$LN26@StartGame:

; 196  : 				{
; 197  : 					m_lFrozenedScore[i]=m_pGameServiceOption->lServiceScore;

  001c9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001cc	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001d2	0f b7 55 f0	 movzx	 edx, WORD PTR _i$5[ebp]
  001d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d9	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  001dc	89 b4 d0 e0 00
	00 00		 mov	 DWORD PTR [eax+edx*8+224], esi
  001e3	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  001e6	89 8c d0 e4 00
	00 00		 mov	 DWORD PTR [eax+edx*8+228], ecx

; 198  : 					pIServerUserItem->FrozenedUserScore(m_pGameServiceOption->lServiceScore);

  001ed	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f0	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  001f6	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001f9	52		 push	 edx
  001fa	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  001fd	50		 push	 eax
  001fe	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  00201	8b 11		 mov	 edx, DWORD PTR [ecx]
  00203	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  00206	8b 82 0c 01 00
	00		 mov	 eax, DWORD PTR [edx+268]
  0020c	ff d0		 call	 eax
$LN13@StartGame:

; 199  : 				}
; 200  : 
; 201  : 				//设置状态
; 202  : 				BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  0020e	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  00211	8b 10		 mov	 edx, DWORD PTR [eax]
  00213	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  00216	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00219	ff d0		 call	 eax
  0021b	88 45 eb	 mov	 BYTE PTR _cbUserStatus$3[ebp], al

; 203  : 				if ((cbUserStatus!=US_OFFLINE)&&(cbUserStatus!=US_PLAYING)) pIServerUserItem->SetUserStatus(US_PLAYING,m_wTableID,i);

  0021e	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$3[ebp]
  00222	83 f8 06	 cmp	 eax, 6
  00225	74 28		 je	 SHORT $LN14@StartGame
  00227	0f b6 45 eb	 movzx	 eax, BYTE PTR _cbUserStatus$3[ebp]
  0022b	83 f8 05	 cmp	 eax, 5
  0022e	74 1f		 je	 SHORT $LN14@StartGame
  00230	0f b7 45 f0	 movzx	 eax, WORD PTR _i$5[ebp]
  00234	50		 push	 eax
  00235	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00238	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  0023c	52		 push	 edx
  0023d	6a 05		 push	 5
  0023f	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  00242	8b 10		 mov	 edx, DWORD PTR [eax]
  00244	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  00247	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  0024d	ff d0		 call	 eax
$LN14@StartGame:

; 204  : 
; 205  : 				////最大时间
; 206  : 				if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && i == 0)

  0024f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00252	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00258	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0025c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0025f	75 32		 jne	 SHORT $LN15@StartGame
  00261	0f b7 45 f0	 movzx	 eax, WORD PTR _i$5[ebp]
  00265	85 c0		 test	 eax, eax
  00267	75 2a		 jne	 SHORT $LN15@StartGame

; 207  : 					SetGameTimer(IDI_PERSONAL_AFTER_BEGIN_TIME, m_PersonalTableParameter.dwTimeAfterBeginCount*60*1000,1,i);

  00269	0f b7 45 f0	 movzx	 eax, WORD PTR _i$5[ebp]
  0026d	50		 push	 eax
  0026e	6a 01		 push	 1
  00270	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00273	6b 91 88 44 00
	00 3c		 imul	 edx, DWORD PTR [ecx+17544], 60
  0027a	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  00280	50		 push	 eax
  00281	6a 2c		 push	 44			; 0000002cH
  00283	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00286	8b 11		 mov	 edx, DWORD PTR [ecx]
  00288	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0028b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00291	ff d0		 call	 eax
$LN15@StartGame:

; 208  : 				if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL &&  m_dwPersonalRoomID != 0)

  00293	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00296	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  0029c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  002a0	83 fa 10	 cmp	 edx, 16			; 00000010H
  002a3	75 7e		 jne	 SHORT $LN16@StartGame
  002a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002a8	83 b8 30 11 00
	00 00		 cmp	 DWORD PTR [eax+4400], 0
  002af	74 72		 je	 SHORT $LN16@StartGame

; 209  : 				{
; 210  : 					pIServerUserItem->SetVideoNumber("");

  002b1	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  002b6	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  002b9	8b 10		 mov	 edx, DWORD PTR [eax]
  002bb	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  002be	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  002c1	ff d0		 call	 eax

; 211  : 
; 212  : 					if (m_pIPersonaTableFrameHook)

  002c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c6	83 b8 10 10 00
	00 00		 cmp	 DWORD PTR [eax+4112], 0
  002cd	74 54		 je	 SHORT $LN16@StartGame

; 213  : 					{
; 214  : 						m_pIPersonaTableFrameHook->PersonalRoomWriteJoinInfo(pIServerUserItem->GetUserID(), m_wTableID, i, m_pGameServiceOption->wKindID, m_dwPersonalRoomID, m_szRoomGUID);

  002cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002d2	05 a8 46 00 00	 add	 eax, 18088		; 000046a8H
  002d7	50		 push	 eax
  002d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002db	8b 91 30 11 00
	00		 mov	 edx, DWORD PTR [ecx+4400]
  002e1	52		 push	 edx
  002e2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e5	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  002eb	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  002ee	52		 push	 edx
  002ef	0f b7 45 f0	 movzx	 eax, WORD PTR _i$5[ebp]
  002f3	50		 push	 eax
  002f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f7	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  002fb	52		 push	 edx
  002fc	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  002ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00301	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  00304	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00307	ff d0		 call	 eax
  00309	50		 push	 eax
  0030a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0030d	8b 91 10 10 00
	00		 mov	 edx, DWORD PTR [ecx+4112]
  00313	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00316	8b 12		 mov	 edx, DWORD PTR [edx]
  00318	8b 88 10 10 00
	00		 mov	 ecx, DWORD PTR [eax+4112]
  0031e	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00321	ff d0		 call	 eax
$LN16@StartGame:

; 215  : 
; 216  : 					}
; 217  : 				}
; 218  : 				//记录参与游戏每个玩家的ID
; 219  : 				m_dwPlayingUserID[i] =  pIServerUserItem->GetUserID();

  00323	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  00326	8b 10		 mov	 edx, DWORD PTR [eax]
  00328	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  0032b	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0032e	ff d0		 call	 eax
  00330	0f b7 4d f0	 movzx	 ecx, WORD PTR _i$5[ebp]
  00334	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00337	89 84 8a fc 46
	00 00		 mov	 DWORD PTR [edx+ecx*4+18172], eax

; 220  : 
; 221  : 				nPlayerCount++;

  0033e	8b 45 f4	 mov	 eax, DWORD PTR _nPlayerCount$6[ebp]
  00341	83 c0 01	 add	 eax, 1
  00344	89 45 f4	 mov	 DWORD PTR _nPlayerCount$6[ebp], eax
$LN12@StartGame:

; 222  : 			}
; 223  : 		
; 224  : 		}

  00347	e9 1c fe ff ff	 jmp	 $LN2@StartGame
$LN3@StartGame:

; 225  : 		
; 226  : 		if(m_dwPersonalPlayCount == 1)

  0034c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0034f	83 b8 20 10 00
	00 01		 cmp	 DWORD PTR [eax+4128], 1
  00356	75 0c		 jne	 SHORT $LN18@StartGame

; 227  : 		{
; 228  : 			m_nPersonalRoomPlayerCount = nPlayerCount;

  00358	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0035b	8b 4d f4	 mov	 ecx, DWORD PTR _nPlayerCount$6[ebp]
  0035e	89 88 a4 46 00
	00		 mov	 DWORD PTR [eax+18084], ecx
$LN18@StartGame:

; 229  : 			//m_wChairCount = nPlayerCount;
; 230  : 			//m_pGameServiceAttrib->wChairCount = nPlayerCount;
; 231  : 			//m_PersonalTableParameter.wJoinGamePeopleCount = nPlayerCount;
; 232  : 		}
; 233  : 		//游戏开始非逃跑状态
; 234  : 		memset(m_bEscapeStatus, 0, sizeof(m_bEscapeStatus));

  00364	68 c8 00 00 00	 push	 200			; 000000c8H
  00369	6a 00		 push	 0
  0036b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0036e	05 dc 45 00 00	 add	 eax, 17884		; 000045dcH
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 _memset
  00379	83 c4 0c	 add	 esp, 12			; 0000000cH

; 235  : 
; 236  : 		//发送状态
; 237  : 		if (bTableStarted!=m_bTableStarted) SendTableStatus();

  0037c	0f b6 45 fa	 movzx	 eax, BYTE PTR _bTableStarted$[ebp]
  00380	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00383	0f b6 51 12	 movzx	 edx, BYTE PTR [ecx+18]
  00387	3b c2		 cmp	 eax, edx
  00389	74 08		 je	 SHORT $LN10@StartGame
  0038b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0038e	e8 00 00 00 00	 call	 ?SendTableStatus@CTableFrame@@QAE_NXZ ; CTableFrame::SendTableStatus
$LN10@StartGame:

; 238  : 	}
; 239  : 
; 240  : 	//分数记录
; 241  : 	for(int i = 0; i < m_wChairCount; ++i)

  00393	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  0039a	eb 09		 jmp	 SHORT $LN7@StartGame
$LN5@StartGame:
  0039c	8b 45 e4	 mov	 eax, DWORD PTR _i$2[ebp]
  0039f	83 c0 01	 add	 eax, 1
  003a2	89 45 e4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@StartGame:
  003a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003a8	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  003ac	39 4d e4	 cmp	 DWORD PTR _i$2[ebp], ecx
  003af	7d 57		 jge	 SHORT $LN6@StartGame

; 242  : 	{
; 243  : 		IServerUserItem* pUserItem = GetTableUserItem(i);

  003b1	0f b7 45 e4	 movzx	 eax, WORD PTR _i$2[ebp]
  003b5	50		 push	 eax
  003b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003b9	8b 11		 mov	 edx, DWORD PTR [ecx]
  003bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003be	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  003c4	ff d0		 call	 eax
  003c6	89 45 e0	 mov	 DWORD PTR _pUserItem$1[ebp], eax

; 244  : 		if(pUserItem == NULL) continue;

  003c9	83 7d e0 00	 cmp	 DWORD PTR _pUserItem$1[ebp], 0
  003cd	75 02		 jne	 SHORT $LN20@StartGame
  003cf	eb cb		 jmp	 SHORT $LN5@StartGame
$LN20@StartGame:

; 245  : 
; 246  : 		m_MapPersonalTableScoreInfo[pUserItem->GetUserID()] = pUserItem->GetUserScore();

  003d1	8b 45 e0	 mov	 eax, DWORD PTR _pUserItem$1[ebp]
  003d4	8b 10		 mov	 edx, DWORD PTR [eax]
  003d6	8b 4d e0	 mov	 ecx, DWORD PTR _pUserItem$1[ebp]
  003d9	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  003df	ff d0		 call	 eax
  003e1	8b f0		 mov	 esi, eax
  003e3	8b fa		 mov	 edi, edx
  003e5	8b 4d e0	 mov	 ecx, DWORD PTR _pUserItem$1[ebp]
  003e8	8b 11		 mov	 edx, DWORD PTR [ecx]
  003ea	8b 4d e0	 mov	 ecx, DWORD PTR _pUserItem$1[ebp]
  003ed	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  003f0	ff d0		 call	 eax
  003f2	50		 push	 eax
  003f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f6	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  003fc	e8 00 00 00 00	 call	 ??A?$CMap@KK_JAA_J@@QAEAA_JK@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::operator[]
  00401	89 30		 mov	 DWORD PTR [eax], esi
  00403	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 247  : 	}

  00406	eb 94		 jmp	 SHORT $LN5@StartGame
$LN6@StartGame:

; 248  : 
; 249  : 	//比赛通知
; 250  : 	bool bStart=true;

  00408	c6 45 df 01	 mov	 BYTE PTR _bStart$[ebp], 1

; 251  : 	if(m_pITableFrameHook!=NULL) bStart=m_pITableFrameHook->OnEventGameStart(m_wChairCount);

  0040c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0040f	83 b8 08 10 00
	00 00		 cmp	 DWORD PTR [eax+4104], 0
  00416	74 24		 je	 SHORT $LN21@StartGame
  00418	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0041b	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  0041f	51		 push	 ecx
  00420	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00423	8b 82 08 10 00
	00		 mov	 eax, DWORD PTR [edx+4104]
  00429	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0042c	8b 10		 mov	 edx, DWORD PTR [eax]
  0042e	8b 89 08 10 00
	00		 mov	 ecx, DWORD PTR [ecx+4104]
  00434	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00437	ff d0		 call	 eax
  00439	88 45 df	 mov	 BYTE PTR _bStart$[ebp], al
$LN21@StartGame:

; 252  : 
; 253  : 
; 254  : 
; 255  : 	//通知事件
; 256  : 	ASSERT(m_pITableFrameSink!=NULL);

  0043c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0043f	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  00446	75 19		 jne	 SHORT $LN25@StartGame
  00448	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??StartGame@CTableFrame@@UAE_NXZ@4JA
  0044e	83 c1 71	 add	 ecx, 113		; 00000071H
  00451	51		 push	 ecx
  00452	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00457	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0045c	85 c0		 test	 eax, eax
  0045e	74 01		 je	 SHORT $LN25@StartGame
  00460	cc		 int	 3
$LN25@StartGame:

; 257  : 	if (m_pITableFrameSink!=NULL&&bStart) m_pITableFrameSink->OnEventGameStart();

  00461	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00464	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  0046b	74 21		 je	 SHORT $LN22@StartGame
  0046d	0f b6 45 df	 movzx	 eax, BYTE PTR _bStart$[ebp]
  00471	85 c0		 test	 eax, eax
  00473	74 19		 je	 SHORT $LN22@StartGame
  00475	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00478	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  0047e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00481	8b 01		 mov	 eax, DWORD PTR [ecx]
  00483	8b 8a c8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4040]
  00489	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0048c	ff d2		 call	 edx
$LN22@StartGame:

; 258  : 
; 259  : 	return true;

  0048e	b0 01		 mov	 al, 1
$LN1@StartGame:

; 260  : }

  00490	5f		 pop	 edi
  00491	5e		 pop	 esi
  00492	5b		 pop	 ebx
  00493	8b e5		 mov	 esp, ebp
  00495	5d		 pop	 ebp
  00496	c3		 ret	 0
?StartGame@CTableFrame@@UAE_NXZ ENDP			; CTableFrame::StartGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetPersonalTablePassword@CTableFrame@@UAEXPAUtagRoomPassword@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPassword$ = 8						; size = 4
?SetPersonalTablePassword@CTableFrame@@UAEXPAUtagRoomPassword@@@Z PROC ; CTableFrame::SetPersonalTablePassword, COMDAT
; _this$ = ecx

; 224  : 	virtual VOID SetPersonalTablePassword(tagRoomPassword *pPassword){ memcpy(m_hRoomPassword, pPassword, sizeof(m_hRoomPassword)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	6a 78		 push	 120			; 00000078H
  0000e	8b 45 08	 mov	 eax, DWORD PTR _pPassword$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 c1 65 07 00
	00		 add	 ecx, 1893		; 00000765H
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 _memcpy
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?SetPersonalTablePassword@CTableFrame@@UAEXPAUtagRoomPassword@@@Z ENDP ; CTableFrame::SetPersonalTablePassword
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?IsTableLocked@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
tv80 = -72						; size = 4
tv73 = -72						; size = 4
_this$ = -4						; size = 4
?IsTableLocked@CTableFrame@@UAE_NXZ PROC		; CTableFrame::IsTableLocked, COMDAT
; _this$ = ecx

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 597  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 88 f0 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4080]
  00015	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00019	83 fa 10	 cmp	 edx, 16			; 00000010H
  0001c	75 2c		 jne	 SHORT $LN2@IsTableLoc

; 598  : 		return (m_hRoomPassword[0].dwRoomPass > 0);

  0001e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00023	6b c8 00	 imul	 ecx, eax, 0
  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	83 bc 0a 69 07
	00 00 00	 cmp	 DWORD PTR [edx+ecx+1897], 0
  00031	76 09		 jbe	 SHORT $LN5@IsTableLoc
  00033	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0003a	eb 07		 jmp	 SHORT $LN6@IsTableLoc
$LN5@IsTableLoc:
  0003c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN6@IsTableLoc:
  00043	8a 45 b8	 mov	 al, BYTE PTR tv73[ebp]
  00046	eb 2c		 jmp	 SHORT $LN1@IsTableLoc

; 599  : 	else

  00048	eb 2a		 jmp	 SHORT $LN1@IsTableLoc
$LN2@IsTableLoc:

; 600  : 		return (m_szEnterPassword[0] != 0);

  0004a	b8 01 00 00 00	 mov	 eax, 1
  0004f	6b c8 00	 imul	 ecx, eax, 0
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	0f be 84 0a 44
	07 00 00	 movsx	 eax, BYTE PTR [edx+ecx+1860]
  0005d	85 c0		 test	 eax, eax
  0005f	74 09		 je	 SHORT $LN7@IsTableLoc
  00061	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv80[ebp], 1
  00068	eb 07		 jmp	 SHORT $LN8@IsTableLoc
$LN7@IsTableLoc:
  0006a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN8@IsTableLoc:
  00071	8a 45 b8	 mov	 al, BYTE PTR tv80[ebp]
$LN1@IsTableLoc:

; 601  : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?IsTableLocked@CTableFrame@@UAE_NXZ ENDP		; CTableFrame::IsTableLocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?IsTableStarted@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTableStarted@CTableFrame@@UAE_NXZ PROC		; CTableFrame::IsTableStarted, COMDAT
; _this$ = ecx

; 219  : 	virtual bool IsTableStarted() { return m_bTableStarted; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?IsTableStarted@CTableFrame@@UAE_NXZ ENDP		; CTableFrame::IsTableStarted
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?IsDrawStarted@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDrawStarted@CTableFrame@@UAE_NXZ PROC		; CTableFrame::IsDrawStarted, COMDAT
; _this$ = ecx

; 217  : 	virtual bool IsDrawStarted() { return m_bDrawStarted; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?IsDrawStarted@CTableFrame@@UAE_NXZ ENDP		; CTableFrame::IsDrawStarted
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?IsGameStarted@CTableFrame@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsGameStarted@CTableFrame@@UAE_NXZ PROC		; CTableFrame::IsGameStarted, COMDAT
; _this$ = ecx

; 215  : 	virtual bool IsGameStarted() { return m_bGameStarted; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?IsGameStarted@CTableFrame@@UAE_NXZ ENDP		; CTableFrame::IsGameStarted
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetGameStatus@CTableFrame@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbGameStatus$ = 8					; size = 1
?SetGameStatus@CTableFrame@@UAEXE@Z PROC		; CTableFrame::SetGameStatus, COMDAT
; _this$ = ecx

; 210  : 	virtual VOID SetGameStatus(BYTE cbGameStatus) { m_cbGameStatus = cbGameStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbGameStatus$[ebp]
  00012	88 88 24 07 00
	00		 mov	 BYTE PTR [eax+1828], cl
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetGameStatus@CTableFrame@@UAEXE@Z ENDP		; CTableFrame::SetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetGameStatus@CTableFrame@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameStatus@CTableFrame@@UAEEXZ PROC			; CTableFrame::GetGameStatus, COMDAT
; _this$ = ecx

; 208  : 	virtual BYTE GetGameStatus() { return m_cbGameStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 24 07 00
	00		 mov	 al, BYTE PTR [eax+1828]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameStatus@CTableFrame@@UAEEXZ ENDP			; CTableFrame::GetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?SetCellScore@CTableFrame@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lCellScore$ = 8					; size = 4
?SetCellScore@CTableFrame@@UAEXJ@Z PROC			; CTableFrame::SetCellScore, COMDAT
; _this$ = ecx

; 3288 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3289 : 	m_lCellScore=lCellScore;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _lCellScore$[ebp]
  00012	89 88 20 07 00
	00		 mov	 DWORD PTR [eax+1824], ecx

; 3290 : 	if (m_bTableInitFinish==true)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	0f b6 48 13	 movzx	 ecx, BYTE PTR [eax+19]
  0001f	83 f9 01	 cmp	 ecx, 1
  00022	75 25		 jne	 SHORT $LN1@SetCellSco

; 3291 : 	{
; 3292 : 		SendTableStatus();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?SendTableStatus@CTableFrame@@QAE_NXZ ; CTableFrame::SendTableStatus

; 3293 : 		m_pITableFrameSink->SetGameBaseScore(lCellScore);

  0002c	8b 45 08	 mov	 eax, DWORD PTR _lCellScore$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 91 c8 0f 00
	00		 mov	 edx, DWORD PTR [ecx+4040]
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 12		 mov	 edx, DWORD PTR [edx]
  0003e	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00044	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00047	ff d0		 call	 eax
$LN1@SetCellSco:

; 3294 : 	}
; 3295 : }

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?SetCellScore@CTableFrame@@UAEXJ@Z ENDP			; CTableFrame::SetCellScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetCellScore@CTableFrame@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCellScore@CTableFrame@@UAEJXZ PROC			; CTableFrame::GetCellScore, COMDAT
; _this$ = ecx

; 201  : 	virtual LONG GetCellScore() { return m_lCellScore; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 20 07 00
	00		 mov	 eax, DWORD PTR [eax+1824]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetCellScore@CTableFrame@@UAEJXZ ENDP			; CTableFrame::GetCellScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?SetStartMode@CTableFrame@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbStartMode$ = 8					; size = 1
?SetStartMode@CTableFrame@@UAEXE@Z PROC			; CTableFrame::SetStartMode, COMDAT
; _this$ = ecx

; 196  : 	virtual VOID SetStartMode(BYTE cbStartMode) { m_cbStartMode = cbStartMode; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbStartMode$[ebp]
  00012	88 48 0c	 mov	 BYTE PTR [eax+12], cl
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetStartMode@CTableFrame@@UAEXE@Z ENDP			; CTableFrame::SetStartMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetStartMode@CTableFrame@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStartMode@CTableFrame@@UAEEXZ PROC			; CTableFrame::GetStartMode, COMDAT
; _this$ = ecx

; 194  : 	virtual BYTE GetStartMode() { return m_cbStartMode; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetStartMode@CTableFrame@@UAEEXZ ENDP			; CTableFrame::GetStartMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetGameServiceOption@CTableFrame@@UAEPAUtagGameServiceOption@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameServiceOption@CTableFrame@@UAEPAUtagGameServiceOption@@XZ PROC ; CTableFrame::GetGameServiceOption, COMDAT
; _this$ = ecx

; 189  : 	virtual tagGameServiceOption * GetGameServiceOption() { return m_pGameServiceOption; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 f0 0f 00
	00		 mov	 eax, DWORD PTR [eax+4080]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameServiceOption@CTableFrame@@UAEPAUtagGameServiceOption@@XZ ENDP ; CTableFrame::GetGameServiceOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetGameServiceAttrib@CTableFrame@@UAEPAUtagGameServiceAttrib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameServiceAttrib@CTableFrame@@UAEPAUtagGameServiceAttrib@@XZ PROC ; CTableFrame::GetGameServiceAttrib, COMDAT
; _this$ = ecx

; 187  : 	virtual tagGameServiceAttrib * GetGameServiceAttrib() { return m_pGameServiceAttrib; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 ec 0f 00
	00		 mov	 eax, DWORD PTR [eax+4076]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameServiceAttrib@CTableFrame@@UAEPAUtagGameServiceAttrib@@XZ ENDP ; CTableFrame::GetGameServiceAttrib
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetGameMatchOption@CTableFrame@@UAEPAUtagGameMatchOption@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchOption@CTableFrame@@UAEPAUtagGameMatchOption@@XZ PROC ; CTableFrame::GetGameMatchOption, COMDAT
; _this$ = ecx

; 185  : 	virtual tagGameMatchOption * GetGameMatchOption() { return m_pGameMatchOption; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 e8 0f 00
	00		 mov	 eax, DWORD PTR [eax+4072]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameMatchOption@CTableFrame@@UAEPAUtagGameMatchOption@@XZ ENDP ; CTableFrame::GetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetCustomRule@CTableFrame@@UAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCustomRule@CTableFrame@@UAEPAXXZ PROC		; CTableFrame::GetCustomRule, COMDAT
; _this$ = ecx

; 183  : 	virtual VOID * GetCustomRule() { return m_pGameServiceOption->cbCustomRule; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 f0 0f 00
	00		 mov	 eax, DWORD PTR [eax+4080]
  00015	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetCustomRule@CTableFrame@@UAEPAXXZ ENDP		; CTableFrame::GetCustomRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetNullChairCount@CTableFrame@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNullChairCount@CTableFrame@@UAEGXZ PROC		; CTableFrame::GetNullChairCount, COMDAT
; _this$ = ecx

; 178  : 	virtual WORD GetNullChairCount(){ return m_wChairCount - m_wUserCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 40 0a	 movzx	 eax, WORD PTR [eax+10]
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	0f b7 51 0e	 movzx	 edx, WORD PTR [ecx+14]
  0001a	2b c2		 sub	 eax, edx
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?GetNullChairCount@CTableFrame@@UAEGXZ ENDP		; CTableFrame::GetNullChairCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetChairCount@CTableFrame@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetChairCount@CTableFrame@@UAEGXZ PROC			; CTableFrame::GetChairCount, COMDAT
; _this$ = ecx

; 176  : 	virtual WORD GetChairCount() { return m_wChairCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 0a	 mov	 ax, WORD PTR [eax+10]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetChairCount@CTableFrame@@UAEGXZ ENDP			; CTableFrame::GetChairCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?GetTableID@CTableFrame@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTableID@CTableFrame@@UAEGXZ PROC			; CTableFrame::GetTableID, COMDAT
; _this$ = ecx

; 174  : 	virtual WORD GetTableID() { return m_wTableID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetTableID@CTableFrame@@UAEGXZ ENDP			; CTableFrame::GetTableID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?QueryInterface@CTableFrame@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
tv92 = -72						; size = 4
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CTableFrame@@UAEPAXABU_GUID@@K@Z PROC	; CTableFrame::QueryInterface, COMDAT
; _this$ = ecx

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 135  : 	QUERYINTERFACE(ITableFrame,Guid,dwQueryVer);

  0000c	68 00 00 00 00	 push	 OFFSET ?IID_ITableFrame@@3U_GUID@@B
  00011	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _==
  0001a	83 c4 08	 add	 esp, 8
  0001d	0f b6 c8	 movzx	 ecx, al
  00020	85 c9		 test	 ecx, ecx
  00022	74 20		 je	 SHORT $LN2@QueryInter
  00024	68 00 01 01 06	 push	 100729088		; 06010100H
  00029	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00032	83 c4 08	 add	 esp, 8
  00035	0f b6 c8	 movzx	 ecx, al
  00038	85 c9		 test	 ecx, ecx
  0003a	74 08		 je	 SHORT $LN2@QueryInter
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	e9 84 00 00 00	 jmp	 $LN1@QueryInter
$LN2@QueryInter:

; 136  : 	QUERYINTERFACE(ICompilationSink,Guid,dwQueryVer);

  00044	68 00 00 00 00	 push	 OFFSET ?IID_ICompilationSink@@3U_GUID@@B
  00049	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _==
  00052	83 c4 08	 add	 esp, 8
  00055	0f b6 c8	 movzx	 ecx, al
  00058	85 c9		 test	 ecx, ecx
  0005a	74 35		 je	 SHORT $LN3@QueryInter
  0005c	68 00 01 01 06	 push	 100729088		; 06010100H
  00061	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  0006a	83 c4 08	 add	 esp, 8
  0006d	0f b6 c8	 movzx	 ecx, al
  00070	85 c9		 test	 ecx, ecx
  00072	74 1d		 je	 SHORT $LN3@QueryInter
  00074	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  00078	74 0b		 je	 SHORT $LN6@QueryInter
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	83 c0 04	 add	 eax, 4
  00080	89 45 b8	 mov	 DWORD PTR tv92[ebp], eax
  00083	eb 07		 jmp	 SHORT $LN7@QueryInter
$LN6@QueryInter:
  00085	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN7@QueryInter:
  0008c	8b 45 b8	 mov	 eax, DWORD PTR tv92[ebp]
  0008f	eb 37		 jmp	 SHORT $LN1@QueryInter
$LN3@QueryInter:

; 137  : 	QUERYINTERFACE_IUNKNOWNEX(ITableFrame,Guid,dwQueryVer);

  00091	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00096	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _==
  0009f	83 c4 08	 add	 esp, 8
  000a2	0f b6 c8	 movzx	 ecx, al
  000a5	85 c9		 test	 ecx, ecx
  000a7	74 1d		 je	 SHORT $LN4@QueryInter
  000a9	68 00 01 01 06	 push	 100729088		; 06010100H
  000ae	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  000b7	83 c4 08	 add	 esp, 8
  000ba	0f b6 c8	 movzx	 ecx, al
  000bd	85 c9		 test	 ecx, ecx
  000bf	74 05		 je	 SHORT $LN4@QueryInter
  000c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN4@QueryInter:

; 138  : 	return NULL;

  000c6	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 139  : }

  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
?QueryInterface@CTableFrame@@UAEPAXABU_GUID@@K@Z ENDP	; CTableFrame::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
;	COMDAT ?Release@CTableFrame@@UAEXXZ
_TEXT	SEGMENT
tv70 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
?Release@CTableFrame@@UAEXXZ PROC			; CTableFrame::Release, COMDAT
; _this$ = ecx

; 167  : 	virtual VOID Release() { delete this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  00012	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  00015	89 4d b8	 mov	 DWORD PTR $T2[ebp], ecx
  00018	83 7d b8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0001c	74 17		 je	 SHORT $LN3@Release
  0001e	6a 01		 push	 1
  00020	8b 55 b8	 mov	 edx, DWORD PTR $T2[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	8b 4d b8	 mov	 ecx, DWORD PTR $T2[ebp]
  00028	8b 90 20 01 00
	00		 mov	 edx, DWORD PTR [eax+288]
  0002e	ff d2		 call	 edx
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	eb 07		 jmp	 SHORT $LN1@Release
$LN3@Release:
  00035	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN1@Release:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?Release@CTableFrame@@UAEXXZ ENDP			; CTableFrame::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ??1CTableFrame@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTableFrame@@UAE@XZ PROC				; CTableFrame::~CTableFrame, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTableFrame@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTableFrame@@6BITableFrame@@@
  00034	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00037	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_7CTableFrame@@6BICompilationSink@@@

; 124  : 	//释放对象
; 125  : 	SafeRelease(m_pITableFrameSink);

  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	83 b8 c8 0f 00
	00 00		 cmp	 DWORD PTR [eax+4040], 0
  00048	74 25		 je	 SHORT $LN2@CTableFram
  0004a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 88 c8 0f 00
	00		 mov	 ecx, DWORD PTR [eax+4040]
  00053	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	8b 8a c8 0f 00
	00		 mov	 ecx, DWORD PTR [edx+4040]
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	ff d2		 call	 edx
  00062	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00065	c7 80 c8 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4040], 0
$LN2@CTableFram:

; 126  : 	SafeRelease(m_pITableFrameHook);

  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 b8 08 10 00
	00 00		 cmp	 DWORD PTR [eax+4104], 0
  00079	74 25		 je	 SHORT $LN3@CTableFram
  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 88 08 10 00
	00		 mov	 ecx, DWORD PTR [eax+4104]
  00084	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00087	8b 01		 mov	 eax, DWORD PTR [ecx]
  00089	8b 8a 08 10 00
	00		 mov	 ecx, DWORD PTR [edx+4104]
  0008f	8b 10		 mov	 edx, DWORD PTR [eax]
  00091	ff d2		 call	 edx
  00093	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00096	c7 80 08 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4104], 0
$LN3@CTableFram:

; 127  : 	SafeRelease(m_pIPersonaTableFrameHook);

  000a0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	83 b8 10 10 00
	00 00		 cmp	 DWORD PTR [eax+4112], 0
  000aa	74 25		 je	 SHORT $LN1@CTableFram
  000ac	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 88 10 10 00
	00		 mov	 ecx, DWORD PTR [eax+4112]
  000b5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ba	8b 8a 10 10 00
	00		 mov	 ecx, DWORD PTR [edx+4112]
  000c0	8b 10		 mov	 edx, DWORD PTR [eax]
  000c2	ff d2		 call	 edx
  000c4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	c7 80 10 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4112], 0
$LN1@CTableFram:

; 128  : 
; 129  : 	return;
; 130  : }

  000d1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  000da	e8 00 00 00 00	 call	 ??1?$CMap@KK_JAA_J@@UAE@XZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::~CMap<unsigned long,unsigned long,__int64,__int64 &>
  000df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  000e8	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
  000ed	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  000f6	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::~CWHArray<IServerUserItem *,IServerUserItem * const &>
  000fb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00105	59		 pop	 ecx
  00106	5f		 pop	 edi
  00107	5e		 pop	 esi
  00108	5b		 pop	 ebx
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTableFrame@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTableFrame@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTableFrame@@UAE@XZ ENDP				; CTableFrame::~CTableFrame
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ??0CTableFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CTableFrame@@QAE@XZ PROC				; CTableFrame::CTableFrame, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTableFrame@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0ITableFrame@@QAE@XZ
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 04	 add	 ecx, 4
  00039	e8 00 00 00 00	 call	 ??0ICompilationSink@@QAE@XZ
  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTableFrame@@6BITableFrame@@@
  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_7CTableFrame@@6BICompilationSink@@@
  00051	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  0005a	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAE@XZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::CWHArray<IServerUserItem *,IServerUserItem * const &>
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  0006f	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	6a 0a		 push	 10			; 0000000aH
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  00083	e8 00 00 00 00	 call	 ??0?$CMap@KK_JAA_J@@QAE@H@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::CMap<unsigned long,unsigned long,__int64,__int64 &>
  00088	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.h

; 132  : 	BYTE							m_cbLoopCount;						//当前圈数

  0008c	68 00 00 00 00	 push	 OFFSET ??0tagPersonalUserScoreInfo@@QAE@XZ ; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
  00091	68 c8 00 00 00	 push	 200			; 000000c8H
  00096	6a 3c		 push	 60			; 0000003cH
  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	05 9d 11 00 00	 add	 eax, 4509		; 0000119dH
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp

; 21   : 	m_wTableID=0;

  000a6	33 c0		 xor	 eax, eax
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 22   : 	m_wChairCount=0;

  000af	33 c0		 xor	 eax, eax
  000b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax

; 23   : 	m_cbStartMode=START_MODE_ALL_READY;

  000b8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 24   : 	m_wUserCount=0;

  000bf	33 c0		 xor	 eax, eax
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	66 89 41 0e	 mov	 WORD PTR [ecx+14], ax

; 25   : 
; 26   : 	//标志变量
; 27   : 	m_bGameStarted=false;

  000c8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000cb	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0

; 28   : 	m_bDrawStarted=false;

  000cf	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 29   : 	m_bTableStarted=false;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	c6 40 12 00	 mov	 BYTE PTR [eax+18], 0

; 30   : 	m_bTableInitFinish=false;

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	c6 40 13 00	 mov	 BYTE PTR [eax+19], 0

; 31   : 	ZeroMemory(m_bAllowLookon,sizeof(m_bAllowLookon));

  000e4	68 c8 00 00 00	 push	 200			; 000000c8H
  000e9	6a 00		 push	 0
  000eb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	83 c0 14	 add	 eax, 20			; 00000014H
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 _memset
  000f7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 32   : 	ZeroMemory(m_lFrozenedScore,sizeof(m_lFrozenedScore));

  000fa	68 40 06 00 00	 push	 1600			; 00000640H
  000ff	6a 00		 push	 0
  00101	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00104	05 e0 00 00 00	 add	 eax, 224		; 000000e0H
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 _memset
  0010f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 33   : 
; 34   : 	//游戏变量
; 35   : 	m_lCellScore=0L;

  00112	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00115	c7 80 20 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1824], 0

; 36   : 	m_wDrawCount=0;

  0011f	33 c0		 xor	 eax, eax
  00121	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	66 89 81 3c 07
	00 00		 mov	 WORD PTR [ecx+1852], ax

; 37   : 	m_cbGameStatus=GAME_STATUS_FREE;

  0012b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	c6 80 24 07 00
	00 00		 mov	 BYTE PTR [eax+1828], 0

; 38   : 
; 39   : 	//时间变量
; 40   : 	m_dwDrawStartTime=0L;

  00135	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00138	c7 80 28 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1832], 0

; 41   : 	ZeroMemory(&m_SystemTimeStart,sizeof(m_SystemTimeStart));

  00142	6a 10		 push	 16			; 00000010H
  00144	6a 00		 push	 0
  00146	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00149	05 2c 07 00 00	 add	 eax, 1836		; 0000072cH
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 _memset
  00154	83 c4 0c	 add	 esp, 12			; 0000000cH

; 42   : 
; 43   : 	//动态属性
; 44   : 	m_dwTableOwnerID=0L;

  00157	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0015a	c7 80 40 07 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1856], 0

; 45   : 	m_dwRecordTableID = 0;

  00164	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00167	c7 80 10 45 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+17680], 0

; 46   : 	ZeroMemory(m_szEnterPassword,sizeof(m_szEnterPassword));

  00171	6a 21		 push	 33			; 00000021H
  00173	6a 00		 push	 0
  00175	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00178	05 44 07 00 00	 add	 eax, 1860		; 00000744H
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 _memset
  00183	83 c4 0c	 add	 esp, 12			; 0000000cH

; 47   : 	memset(m_hRoomPassword, 0, sizeof(m_hRoomPassword));

  00186	6a 78		 push	 120			; 00000078H
  00188	6a 00		 push	 0
  0018a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0018d	05 65 07 00 00	 add	 eax, 1893		; 00000765H
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 _memset
  00198	83 c4 0c	 add	 esp, 12			; 0000000cH

; 48   : 
; 49   : 	//断线变量
; 50   : 	ZeroMemory(m_wOffLineCount,sizeof(m_wOffLineCount));

  0019b	68 90 01 00 00	 push	 400			; 00000190H
  001a0	6a 00		 push	 0
  001a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001a5	05 de 07 00 00	 add	 eax, 2014		; 000007deH
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 _memset
  001b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 	ZeroMemory(m_dwOffLineTime,sizeof(m_dwOffLineTime));

  001b3	68 20 03 00 00	 push	 800			; 00000320H
  001b8	6a 00		 push	 0
  001ba	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001bd	05 70 09 00 00	 add	 eax, 2416		; 00000970H
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 _memset
  001c8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 52   : 
; 53   : 	//配置信息
; 54   : 	m_pGameParameter=NULL;

  001cb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001ce	c7 80 e4 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4068], 0

; 55   : 	m_pGameMatchOption=NULL;

  001d8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001db	c7 80 e8 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4072], 0

; 56   : 	m_pGameServiceAttrib=NULL;

  001e5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001e8	c7 80 ec 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4076], 0

; 57   : 	m_pGameServiceOption=NULL;

  001f2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001f5	c7 80 f0 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4080], 0

; 58   : 
; 59   : 	//组件接口
; 60   : 	m_pITimerEngine=NULL;

  001ff	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00202	c7 80 c4 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4036], 0

; 61   : 	m_pITableFrameSink=NULL;

  0020c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0020f	c7 80 c8 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4040], 0

; 62   : 	m_pIMainServiceFrame=NULL;

  00219	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0021c	c7 80 cc 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4044], 0

; 63   : 	m_pIAndroidUserManager=NULL;

  00226	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00229	c7 80 d0 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4048], 0

; 64   : 
; 65   : 	//扩张接口
; 66   : 	m_pITableUserAction=NULL;

  00233	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00236	c7 80 d4 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4052], 0

; 67   : 	m_pITableUserRequest=NULL;

  00240	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00243	c7 80 d8 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4056], 0

; 68   : 
; 69   : 	//数据接口
; 70   : 	m_pIKernelDataBaseEngine=NULL;

  0024d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00250	c7 80 dc 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4060], 0

; 71   : 	m_pIRecordDataBaseEngine=NULL;

  0025a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0025d	c7 80 e0 0f 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4064], 0

; 72   : 
; 73   : 	//比赛接口
; 74   : 	m_pITableFrameHook=NULL;

  00267	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0026a	c7 80 08 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4104], 0

; 75   : 	m_pIMatchTableAction=NULL;

  00274	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00277	c7 80 0c 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4108], 0

; 76   : 	//约战房接口
; 77   : 	m_pIPersonaTableFrameHook=NULL;

  00281	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00284	c7 80 10 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4112], 0

; 78   : 
; 79   : 	//用户数组
; 80   : 	ZeroMemory(m_TableUserItemArray,sizeof(m_TableUserItemArray));

  0028e	68 20 03 00 00	 push	 800			; 00000320H
  00293	6a 00		 push	 0
  00295	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00298	05 90 0c 00 00	 add	 eax, 3216		; 00000c90H
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 _memset
  002a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 81   : 
; 82   : 	//约战房间
; 83   : 	m_bPersonalLock = false;

  002a6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002a9	c6 80 9a 11 00
	00 00		 mov	 BYTE PTR [eax+4506], 0

; 84   : 	m_pTableOwnerUser = NULL;

  002b0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002b3	c7 80 14 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4116], 0

; 85   : 	m_dwDrawCountLimit = 0;

  002bd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002c0	c7 80 18 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4120], 0

; 86   : 	m_dwDrawTimeLimit = 0;

  002ca	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002cd	c7 80 1c 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4124], 0

; 87   : 	m_lIniScore = 0;

  002d7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002da	c7 80 28 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4136], 0
  002e4	c7 80 2c 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4140], 0

; 88   : 	m_dwPersonalPlayCount = 0;

  002ee	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002f1	c7 80 20 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4128], 0

; 89   : 	m_cbLoopCount = 0;

  002fb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002fe	c6 80 9c 11 00
	00 00		 mov	 BYTE PTR [eax+4508], 0

; 90   : 	m_dwTimeBegin = 0;

  00305	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00308	c7 80 30 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4144], 0

; 91   : 	m_PlayerWaitTime = 0;

  00312	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00315	c7 80 34 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4148], 0

; 92   : 	m_TableOwnerWaitTime = 0;

  0031f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00322	c7 80 38 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4152], 0

; 93   : 	m_GameStartOverTime = 0;

  0032c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0032f	c7 80 3c 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4156], 0

; 94   : 	m_bWaitConclude = false;

  00339	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0033c	c6 80 40 10 00
	00 00		 mov	 BYTE PTR [eax+4160], 0

; 95   : 	m_dwReplyCount = 0;

  00343	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00346	c7 80 44 10 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4164], 0

; 96   : 	m_cbIsRequestOver = 0;

  00350	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00353	c6 80 11 11 00
	00 00		 mov	 BYTE PTR [eax+4369], 0

; 97   : 	m_cbRequestUser = 0;

  0035a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0035d	c6 80 10 11 00
	00 00		 mov	 BYTE PTR [eax+4368], 0

; 98   : 	ZeroMemory(m_cbRequestReply, sizeof(m_cbRequestReply));

  00364	68 c8 00 00 00	 push	 200			; 000000c8H
  00369	6a 00		 push	 0
  0036b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0036e	05 48 10 00 00	 add	 eax, 4168		; 00001048H
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 _memset
  00379	83 c4 0c	 add	 esp, 12			; 0000000cH

; 99   : 	m_dwPersonalRoomID = 0;

  0037c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0037f	c7 80 30 11 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+4400], 0

; 100  : 
; 101  : 	m_MapPersonalTableScoreInfo.InitHashTable(MAX_CHAIR);

  00389	6a 01		 push	 1
  0038b	68 c8 00 00 00	 push	 200			; 000000c8H
  00390	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00393	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  00399	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KK_JAA_J@@QAEXIH@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::InitHashTable

; 102  : 
; 103  : 	//是否强制解散游戏
; 104  : 	m_bIsDissumGame = false;

  0039e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003a1	c6 80 34 11 00
	00 00		 mov	 BYTE PTR [eax+4404], 0

; 105  : 	memset(m_cbSpecialInfo, 0, sizeof(m_cbSpecialInfo));

  003a8	68 e8 03 00 00	 push	 1000			; 000003e8H
  003ad	6a 00		 push	 0
  003af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003b2	05 7d 40 00 00	 add	 eax, 16509		; 0000407dH
  003b7	50		 push	 eax
  003b8	e8 00 00 00 00	 call	 _memset
  003bd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	m_nSpecialInfoLen = 0;

  003c0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003c3	c7 80 68 44 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+17512], 0

; 107  : 	m_bIsAllRequstCancel = false;

  003cd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003d0	c6 80 99 11 00
	00 00		 mov	 BYTE PTR [eax+4505], 0

; 108  : 	memset(m_bBeOut, 0, sizeof(m_bBeOut));

  003d7	68 c8 00 00 00	 push	 200			; 000000c8H
  003dc	6a 00		 push	 0
  003de	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003e1	05 14 45 00 00	 add	 eax, 17684		; 00004514H
  003e6	50		 push	 eax
  003e7	e8 00 00 00 00	 call	 _memset
  003ec	83 c4 0c	 add	 esp, 12			; 0000000cH

; 109  : 	memset(m_bEscapeStatus, 0, sizeof(m_bEscapeStatus));

  003ef	68 c8 00 00 00	 push	 200			; 000000c8H
  003f4	6a 00		 push	 0
  003f6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003f9	05 dc 45 00 00	 add	 eax, 17884		; 000045dcH
  003fe	50		 push	 eax
  003ff	e8 00 00 00 00	 call	 _memset
  00404	83 c4 0c	 add	 esp, 12			; 0000000cH

; 110  : 	ZeroMemory(m_szRoomGUID,sizeof(m_szRoomGUID));

  00407	6a 20		 push	 32			; 00000020H
  00409	6a 00		 push	 0
  0040b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0040e	05 a8 46 00 00	 add	 eax, 18088		; 000046a8H
  00413	50		 push	 eax
  00414	e8 00 00 00 00	 call	 _memset
  00419	83 c4 0c	 add	 esp, 12			; 0000000cH

; 111  : 	m_dwDealCancel = 0;

  0041c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0041f	c7 80 cc 46 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+18124], 0

; 112  : 	m_bIsCancelBeforeOneTurn = false;

  00429	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0042c	c6 80 c8 46 00
	00 00		 mov	 BYTE PTR [eax+18120], 0

; 113  : 	m_cbPayMode = 0;

  00433	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00436	c6 80 d1 46 00
	00 00		 mov	 BYTE PTR [eax+18129], 0

; 114  : 	m_cbGameMode = 0;

  0043d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00440	c6 80 d0 46 00
	00 00		 mov	 BYTE PTR [eax+18128], 0

; 115  : 
; 116  : 	ZeroMemory(m_dwPlayingUserID,sizeof(m_dwPlayingUserID));

  00447	68 20 03 00 00	 push	 800			; 00000320H
  0044c	6a 00		 push	 0
  0044e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00451	05 fc 46 00 00	 add	 eax, 18172		; 000046fcH
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 _memset
  0045c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 117  : 	
; 118  : 	return;
; 119  : }

  0045f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00466	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00469	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0046c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00473	59		 pop	 ecx
  00474	5f		 pop	 edi
  00475	5e		 pop	 esi
  00476	5b		 pop	 ebx
  00477	8b e5		 mov	 esp, ebp
  00479	5d		 pop	 ebp
  0047a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTableFrame@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 b0 0f 00
	00		 add	 ecx, 4016		; 00000fb0H
  00009	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::~CWHArray<IServerUserItem *,IServerUserItem * const &>
__unwindfunclet$??0CTableFrame@@QAE@XZ$1:
  0000e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 f4 0f 00
	00		 add	 ecx, 4084		; 00000ff4H
  00017	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
__unwindfunclet$??0CTableFrame@@QAE@XZ$2:
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	81 c1 14 11 00
	00		 add	 ecx, 4372		; 00001114H
  00025	e9 00 00 00 00	 jmp	 ??1?$CMap@KK_JAA_J@@UAE@XZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::~CMap<unsigned long,unsigned long,__int64,__int64 &>
__ehhandler$??0CTableFrame@@QAE@XZ:
  0002a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00031	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTableFrame@@QAE@XZ
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTableFrame@@QAE@XZ ENDP				; CTableFrame::CTableFrame
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KK_JAA_J@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KK_JAA_J@@UAEPAXI@Z PROC			; CMap<unsigned long,unsigned long,__int64,__int64 &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KK_JAA_J@@UAE@XZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::~CMap<unsigned long,unsigned long,__int64,__int64 &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KK_JAA_J@@UAEPAXI@Z ENDP			; CMap<unsigned long,unsigned long,__int64,__int64 &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KK_JAA_J@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KK_JAA_J@@UBEXXZ PROC		; CMap<unsigned long,unsigned long,__int64,__int64 &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KK_JAA_J@@UBEXXZ ENDP		; CMap<unsigned long,unsigned long,__int64,__int64 &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KK_JAA_J@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -20						; size = 4
_val$2 = -16						; size = 8
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KK_JAA_J@@UBEXAAVCDumpContext@@@Z PROC	; CMap<unsigned long,unsigned long,__int64,__int64 &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KK_JAA_J@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetStartPosition
  00053	89 45 ec	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d ec 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 08 00 00 00	 mov	 eax, 8
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f0	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 ec	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KK_JAA_J@@QBEXAAPAU__POSITION@@AAKAA_J@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f0	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@_J@@YGXAAVCDumpContext@@PB_JH@Z ; DumpElements<__int64>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KK_JAA_J@@UBEXAAVCDumpContext@@@Z ENDP	; CMap<unsigned long,unsigned long,__int64,__int64 &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KK_JAA_J@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -104						; size = 4
_newValue$1 = -36					; size = 8
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KK_JAA_J@@UAEXAAVCArchive@@@Z PROC	; CMap<unsigned long,unsigned long,__int64,__int64 &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 08	 add	 eax, 8
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@_J@@YGXAAVCArchive@@PA_JH@Z ; SerializeElements<__int64>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 98	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 98 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 dc	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@_J@@YGXAAVCArchive@@PA_JH@Z ; SerializeElements<__int64>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 08 00 00 00	 mov	 eax, 8
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d dc	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KK_JAA_J@@QAEXKAA_J@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KK_JAA_J@@UAEXAAVCArchive@@@Z ENDP	; CMap<unsigned long,unsigned long,__int64,__int64 &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KK_JAA_J@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KK_JAA_J@@UAE@XZ PROC				; CMap<unsigned long,unsigned long,__int64,__int64 &>::~CMap<unsigned long,unsigned long,__int64,__int64 &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KK_JAA_J@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KK_JAA_J@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ ; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KK_JAA_J@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KK_JAA_J@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KK_JAA_J@@UAE@XZ ENDP				; CMap<unsigned long,unsigned long,__int64,__int64 &>::~CMap<unsigned long,unsigned long,__int64,__int64 &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KK_JAA_J@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KK_JAA_J@@IBEPAVCAssoc@1@KAAI0@Z PROC ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KK_JAA_J@@IBEPAVCAssoc@1@KAAI0@Z ENDP ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KK_JAA_J@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KK_JAA_J@@IAEPAVCAssoc@1@K@Z PROC	; CMap<unsigned long,unsigned long,__int64,__int64 &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 18		 push	 24			; 00000018H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	6b d1 18	 imul	 edx, ecx, 24
  00044	03 55 f4	 add	 edx, DWORD PTR _pAssoc$4[ebp]
  00047	89 55 f4	 mov	 DWORD PTR _pAssoc$4[ebp], edx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 18	 sub	 ecx, 24			; 00000018H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 18		 push	 24			; 00000018H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 18		 push	 24			; 00000018H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KK_JAA_J@@QAE@K@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KK_JAA_J@@IAEPAVCAssoc@1@K@Z ENDP	; CMap<unsigned long,unsigned long,__int64,__int64 &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KK_JAA_J@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KK_JAA_J@@QAEXIH@Z PROC		; CMap<unsigned long,unsigned long,__int64,__int64 &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KK_JAA_J@@QAEXIH@Z ENDP		; CMap<unsigned long,unsigned long,__int64,__int64 &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KK_JAA_J@@QBEXAAPAU__POSITION@@AAKAA_J@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KK_JAA_J@@QBEXAAPAU__POSITION@@AAKAA_J@Z PROC ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 18		 push	 24			; 00000018H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
  001c9	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  001cc	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN24@GetNextAss:

; 1677 : }

  001cf	5f		 pop	 edi
  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx
  001d2	8b e5		 mov	 esp, ebp
  001d4	5d		 pop	 ebp
  001d5	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KK_JAA_J@@QBEXAAPAU__POSITION@@AAKAA_J@Z ENDP ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KK_JAA_J@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KK_JAA_J@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KK_JAA_J@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ PROC			; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KK_JAA_J@@QAEXXZ ENDP			; CMap<unsigned long,unsigned long,__int64,__int64 &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KK_JAA_J@@QAEXKAA_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KK_JAA_J@@QAEXKAA_J@Z PROC		; CMap<unsigned long,unsigned long,__int64,__int64 &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KK_JAA_J@@QAEAA_JK@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?SetAt@?$CMap@KK_JAA_J@@QAEXKAA_J@Z ENDP		; CMap<unsigned long,unsigned long,__int64,__int64 &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KK_JAA_J@@QAEAA_JK@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KK_JAA_J@@QAEAA_JK@Z PROC			; CMap<unsigned long,unsigned long,__int64,__int64 &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KK_JAA_J@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KK_JAA_J@@QAEXIH@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KK_JAA_J@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 10	 mov	 DWORD PTR [edx+16], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 08	 add	 eax, 8
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KK_JAA_J@@QAEAA_JK@Z ENDP			; CMap<unsigned long,unsigned long,__int64,__int64 &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@KK_JAA_J@@QBEHKAA_J@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_rValue$ = 12						; size = 4
?Lookup@?$CMap@KK_JAA_J@@QBEHKAA_J@Z PROC		; CMap<unsigned long,unsigned long,__int64,__int64 &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KK_JAA_J@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,__int64,__int64 &>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 16		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00046	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00049	89 10		 mov	 DWORD PTR [eax], edx
  0004b	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0004e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1560 : 	return TRUE;

  00051	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
?Lookup@?$CMap@KK_JAA_J@@QBEHKAA_J@Z ENDP		; CMap<unsigned long,unsigned long,__int64,__int64 &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KK_JAA_J@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KK_JAA_J@@QAE@H@Z PROC			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CMap<unsigned long,unsigned long,__int64,__int64 &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KK_JAA_J@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KK_JAA_J@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KK_JAA_J@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KK_JAA_J@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KK_JAA_J@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KK_JAA_J@@QAE@H@Z ENDP			; CMap<unsigned long,unsigned long,__int64,__int64 &>::CMap<unsigned long,unsigned long,__int64,__int64 &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHABQAUtagGameScoreRecord@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHABQAUtagGameScoreRecord@@@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHABQAUtagGameScoreRecord@@@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEAAPAUtagGameScoreRecord@@H@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABV1@@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABV1@@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABQAUtagGameScoreRecord@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABQAUtagGameScoreRecord@@@Z PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEXHABQAUtagGameScoreRecord@@@Z ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAEHABQAUtagGameScoreRecord@@@Z ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::~CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagGameScoreRecord@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>::CWHArray<tagGameScoreRecord *,tagGameScoreRecord * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ ; CWHArray<IServerUserItem *,IServerUserItem * const &>::~CWHArray<IServerUserItem *,IServerUserItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHABQAUIServerUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHABQAUIServerUserItem@@@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHABQAUIServerUserItem@@@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEAAPAUIServerUserItem@@H@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEHABQAUIServerUserItem@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEHABQAUIServerUserItem@@@Z PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEXHABQAUIServerUserItem@@@Z ; CWHArray<IServerUserItem *,IServerUserItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAEHABQAUIServerUserItem@@@Z ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ PROC ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<IServerUserItem *,IServerUserItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ PROC	; CWHArray<IServerUserItem *,IServerUserItem * const &>::~CWHArray<IServerUserItem *,IServerUserItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUIServerUserItem@@ABQAU1@@@UAE@XZ ENDP	; CWHArray<IServerUserItem *,IServerUserItem * const &>::~CWHArray<IServerUserItem *,IServerUserItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAE@XZ PROC	; CWHArray<IServerUserItem *,IServerUserItem * const &>::CWHArray<IServerUserItem *,IServerUserItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUIServerUserItem@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUIServerUserItem@@ABQAU1@@@QAE@XZ ENDP	; CWHArray<IServerUserItem *,IServerUserItem * const &>::CWHArray<IServerUserItem *,IServerUserItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@KK@@YGHPBK0@Z
_TEXT	SEGMENT
tv128 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@KK@@YGHPBK0@Z PROC			; CompareElements<unsigned long,unsigned long>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 04		 push	 4
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 04		 push	 4
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement2$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a8	75 09		 jne	 SHORT $LN12@CompareEle
  000aa	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv128[ebp], 1
  000b1	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@CompareEle:
  000ba	8b 45 b8	 mov	 eax, DWORD PTR tv128[ebp]
$LN6@CompareEle:

; 157  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
??$CompareElements@KK@@YGHPBK0@Z ENDP			; CompareElements<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z PROC	; DumpElements<unsigned long>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ENDP	; DumpElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z PROC	; SerializeElements<unsigned long>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ENDP	; SerializeElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ICompilationSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompilationSink@@QAE@XZ PROC			; ICompilationSink::ICompilationSink, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ICompilationSink@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0ICompilationSink@@QAE@XZ ENDP			; ICompilationSink::ICompilationSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ITableFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ITableFrame@@QAE@XZ PROC				; ITableFrame::ITableFrame, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7ITableFrame@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0ITableFrame@@QAE@XZ ENDP				; ITableFrame::ITableFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\log.h
;	COMDAT ?LogPrintf@@YAXPBDZZ
_TEXT	SEGMENT
_fp$ = -2340						; size = 4
_szPath$ = -2336					; size = 260
_nStatus$ = -2076					; size = 4
_sInfo$ = -2072						; size = 1024
_sysTime$ = -1048					; size = 16
_args$ = -1032						; size = 4
_sLog$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_pszFormat$ = 8						; size = 4
?LogPrintf@@YAXPBDZZ PROC				; LogPrintf, COMDAT

; 93   : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 68 0a 00
	00		 sub	 esp, 2664		; 00000a68H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 94   : 	//char *pTmpBuf = UnicodeToAnsi(pszFormat);
; 95   : 
; 96   : 	char sLog[1024] = {0};

  00016	68 00 04 00 00	 push	 1024			; 00000400H
  0001b	6a 00		 push	 0
  0001d	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _sLog$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _memset
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH

; 97   : 	va_list args; 
; 98   : 	va_start(args, pszFormat); 

  0002c	8d 45 0c	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  0002f	89 85 f8 fb ff
	ff		 mov	 DWORD PTR _args$[ebp], eax

; 99   : 	_vsnprintf(sLog, 1024, pszFormat, args); 

  00035	8b 85 f8 fb ff
	ff		 mov	 eax, DWORD PTR _args$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pszFormat$[ebp]
  0003f	51		 push	 ecx
  00040	68 00 04 00 00	 push	 1024			; 00000400H
  00045	8d 95 fc fb ff
	ff		 lea	 edx, DWORD PTR _sLog$[ebp]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 __vsnprintf
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 100  : 	va_end(args); 

  00054	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _args$[ebp], 0

; 101  : 
; 102  : 	//va_start(args, pTmpBuf); 
; 103  : 	//_vsnprintf(sLog, 1024, pTmpBuf, args);
; 104  : 	//va_end(args); 
; 105  : 
; 106  : 
; 107  : 	SYSTEMTIME sysTime;
; 108  : 	GetLocalTime(&sysTime);

  0005e	8d 85 e8 fb ff
	ff		 lea	 eax, DWORD PTR _sysTime$[ebp]
  00064	50		 push	 eax
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 109  : 	char sInfo[1024] = {0};

  0006b	68 00 04 00 00	 push	 1024			; 00000400H
  00070	6a 00		 push	 0
  00072	8d 85 e8 f7 ff
	ff		 lea	 eax, DWORD PTR _sInfo$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 _memset
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 110  : 	sprintf(sInfo, "open *** 日志信息 %s ", sLog);

  00081	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _sLog$[ebp]
  00087	50		 push	 eax
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LDDEPHLF@open?5?$CK?$CK?$CK?5?H?U?V?$LO?P?E?O?$KC?5?$CFs?5@
  0008d	8d 8d e8 f7 ff
	ff		 lea	 ecx, DWORD PTR _sInfo$[ebp]
  00093	51		 push	 ecx
  00094	e8 00 00 00 00	 call	 _sprintf
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH

; 111  : 	//OutputDebugStringA(sInfo);
; 112  : 	//DebugPrintf(sLog);
; 113  : 
; 114  : 	sprintf(sInfo, "%d-%d-%d-%d: %s \r\n",sysTime.wDay, sysTime.wHour, sysTime.wMinute, sysTime.wSecond, sLog );

  0009c	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _sLog$[ebp]
  000a2	50		 push	 eax
  000a3	0f b7 8d f4 fb
	ff ff		 movzx	 ecx, WORD PTR _sysTime$[ebp+12]
  000aa	51		 push	 ecx
  000ab	0f b7 95 f2 fb
	ff ff		 movzx	 edx, WORD PTR _sysTime$[ebp+10]
  000b2	52		 push	 edx
  000b3	0f b7 85 f0 fb
	ff ff		 movzx	 eax, WORD PTR _sysTime$[ebp+8]
  000ba	50		 push	 eax
  000bb	0f b7 8d ee fb
	ff ff		 movzx	 ecx, WORD PTR _sysTime$[ebp+6]
  000c2	51		 push	 ecx
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DCGNBEMB@?$CFd?9?$CFd?9?$CFd?9?$CFd?3?5?$CFs?5?$AN?6@
  000c8	8d 95 e8 f7 ff
	ff		 lea	 edx, DWORD PTR _sInfo$[ebp]
  000ce	52		 push	 edx
  000cf	e8 00 00 00 00	 call	 _sprintf
  000d4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 115  : 	int nStatus;
; 116  : 
; 117  : 	//创建log文件夹
; 118  : 	nStatus = _mkdir("Log"); 

  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_03GGEOLGBL@Log@
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mkdir
  000e2	83 c4 04	 add	 esp, 4
  000e5	89 85 e4 f7 ff
	ff		 mov	 DWORD PTR _nStatus$[ebp], eax

; 119  : 
; 120  : 	char szPath[MAX_PATH] = {0};

  000eb	68 04 01 00 00	 push	 260			; 00000104H
  000f0	6a 00		 push	 0
  000f2	8d 85 e0 f6 ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 _memset
  000fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 121  : 	sprintf(szPath, "Log//%d-%d-%d-ServerLog.txt", sysTime.wYear, sysTime.wDay, sysTime.wHour);

  00101	0f b7 85 f0 fb
	ff ff		 movzx	 eax, WORD PTR _sysTime$[ebp+8]
  00108	50		 push	 eax
  00109	0f b7 8d ee fb
	ff ff		 movzx	 ecx, WORD PTR _sysTime$[ebp+6]
  00110	51		 push	 ecx
  00111	0f b7 95 e8 fb
	ff ff		 movzx	 edx, WORD PTR _sysTime$[ebp]
  00118	52		 push	 edx
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MPGOOIFH@Log?1?1?$CFd?9?$CFd?9?$CFd?9ServerLog?4txt@
  0011e	8d 85 e0 f6 ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 _sprintf
  0012a	83 c4 14	 add	 esp, 20			; 00000014H

; 122  : 
; 123  : 	DebugPrintf("openfile  %s",  szPath);

  0012d	8d 85 e0 f6 ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00133	50		 push	 eax
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LMHKOMJJ@openfile?5?5?$CFs@
  00139	e8 00 00 00 00	 call	 ?DebugPrintf@@YAXPBDZZ	; DebugPrintf
  0013e	83 c4 08	 add	 esp, 8

; 124  : 
; 125  : 	//以追加的方式打开log文件夹下的ServerLog.txt 文件，如果此文件不存在则创建
; 126  : 	FILE *fp;
; 127  : 	fp = NULL;

  00141	c7 85 dc f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR _fp$[ebp], 0

; 128  : 	fp = fopen(szPath, "at+");

  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_03HIKJINGA@at?$CL@
  00150	8d 85 e0 f6 ff
	ff		 lea	 eax, DWORD PTR _szPath$[ebp]
  00156	50		 push	 eax
  00157	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0015d	83 c4 08	 add	 esp, 8
  00160	89 85 dc f6 ff
	ff		 mov	 DWORD PTR _fp$[ebp], eax

; 129  : 	if (fp)

  00166	83 bd dc f6 ff
	ff 00		 cmp	 DWORD PTR _fp$[ebp], 0
  0016d	74 38		 je	 SHORT $LN2@LogPrintf

; 130  : 	{
; 131  : 		fwrite(sInfo, strlen(sInfo), 1 , fp);

  0016f	8b 85 dc f6 ff
	ff		 mov	 eax, DWORD PTR _fp$[ebp]
  00175	50		 push	 eax
  00176	6a 01		 push	 1
  00178	8d 8d e8 f7 ff
	ff		 lea	 ecx, DWORD PTR _sInfo$[ebp]
  0017e	51		 push	 ecx
  0017f	e8 00 00 00 00	 call	 _strlen
  00184	83 c4 04	 add	 esp, 4
  00187	50		 push	 eax
  00188	8d 95 e8 f7 ff
	ff		 lea	 edx, DWORD PTR _sInfo$[ebp]
  0018e	52		 push	 edx
  0018f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00195	83 c4 10	 add	 esp, 16			; 00000010H

; 132  : 		
; 133  : 		DebugPrintf("openfile 打开文件成功");

  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FGDEEIKF@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LD?I?$LJ?$KG@
  0019d	e8 00 00 00 00	 call	 ?DebugPrintf@@YAXPBDZZ	; DebugPrintf
  001a2	83 c4 04	 add	 esp, 4

; 134  : 	}
; 135  : 	else

  001a5	eb 0d		 jmp	 SHORT $LN3@LogPrintf
$LN2@LogPrintf:

; 136  : 	{
; 137  : 		DebugPrintf("openfile 打开文件错误");

  001a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FNDGHLBI@openfile?5?$LE?r?$LP?$KK?N?D?$LM?$PO?$LE?m?N?s@
  001ac	e8 00 00 00 00	 call	 ?DebugPrintf@@YAXPBDZZ	; DebugPrintf
  001b1	83 c4 04	 add	 esp, 4
$LN3@LogPrintf:

; 138  : 	}
; 139  : 	fclose(fp);

  001b4	8b 85 dc f6 ff
	ff		 mov	 eax, DWORD PTR _fp$[ebp]
  001ba	50		 push	 eax
  001bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  001c1	83 c4 04	 add	 esp, 4

; 140  : }

  001c4	5f		 pop	 edi
  001c5	5e		 pop	 esi
  001c6	5b		 pop	 ebx
  001c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ca	33 cd		 xor	 ecx, ebp
  001cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d1	8b e5		 mov	 esp, ebp
  001d3	5d		 pop	 ebp
  001d4	c3		 ret	 0
?LogPrintf@@YAXPBDZZ ENDP				; LogPrintf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\log.h
;	COMDAT ?DebugPrintf@@YAXPBDZZ
_TEXT	SEGMENT
_args$ = -1032						; size = 4
_sLog$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_pszFormat$ = 8						; size = 4
?DebugPrintf@@YAXPBDZZ PROC				; DebugPrintf, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 04 00
	00		 sub	 esp, 1228		; 000004ccH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 83   : 	char sLog[1024] = {0};

  00016	68 00 04 00 00	 push	 1024			; 00000400H
  0001b	6a 00		 push	 0
  0001d	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _sLog$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _memset
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH

; 84   : 	va_list args; 
; 85   : 	va_start(args, pszFormat); 

  0002c	8d 45 0c	 lea	 eax, DWORD PTR _pszFormat$[ebp+4]
  0002f	89 85 f8 fb ff
	ff		 mov	 DWORD PTR _args$[ebp], eax

; 86   : 	_vsnprintf(sLog, 1024, pszFormat, args); 

  00035	8b 85 f8 fb ff
	ff		 mov	 eax, DWORD PTR _args$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pszFormat$[ebp]
  0003f	51		 push	 ecx
  00040	68 00 04 00 00	 push	 1024			; 00000400H
  00045	8d 95 fc fb ff
	ff		 lea	 edx, DWORD PTR _sLog$[ebp]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 __vsnprintf
  00051	83 c4 10	 add	 esp, 16			; 00000010H

; 87   : 	va_end(args); 

  00054	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _args$[ebp], 0

; 88   : 	OutputDebugStringA(sLog);

  0005e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _sLog$[ebp]
  00064	50		 push	 eax
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4

; 89   : }

  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?DebugPrintf@@YAXPBDZZ ENDP				; DebugPrintf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanRoomChat@CUserRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwUserRight$ = 8					; size = 4
?CanRoomChat@CUserRight@@SA_NK@Z PROC			; CUserRight::CanRoomChat, COMDAT

; 74   : 	static bool CanRoomChat(DWORD dwUserRight) { return (dwUserRight&UR_CANNOT_ROOM_CHAT)==0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwUserRight$[ebp]
  0000c	83 e0 08	 and	 eax, 8
  0000f	75 09		 jne	 SHORT $LN3@CanRoomCha
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@CanRoomCha
$LN3@CanRoomCha:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanRoomCha:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?CanRoomChat@CUserRight@@SA_NK@Z ENDP			; CUserRight::CanRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsSuportPlayBack@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsSuportPlayBack@CServerRule@@SA_NK@Z PROC		; CServerRule::IsSuportPlayBack, COMDAT

; 181  : 	static bool IsSuportPlayBack(DWORD dwServerRule) { return (dwServerRule&SR_SUPORT_PLAY_BACK)!=0; }	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 00 04	 and	 eax, 67108864		; 04000000H
  00011	74 09		 je	 SHORT $LN3@IsSuportPl
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsSuportPl
$LN3@IsSuportPl:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsSuportPl:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsSuportPlayBack@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsSuportPlayBack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAndroidSimulate, COMDAT

; 110  : 	static bool IsAllowAndroidSimulate(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_SIMULATE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 80 00	 and	 eax, 8388608		; 00800000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAndroidSimulate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowAndroidAttend, COMDAT

; 108  : 	static bool IsAllowAndroidAttend(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_ATTEND)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 40 00	 and	 eax, 4194304		; 00400000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowAndroidAttend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameRule@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameRule@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameRule, COMDAT

; 104  : 	static bool IsForfendGameRule(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_RULE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 10 00	 and	 eax, 1048576		; 00100000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameRule@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameLookon@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameLookon@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameLookon, COMDAT

; 88   : 	static bool IsForfendGameLookon(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_LOOKON)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameLookon@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameLookon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameEnter@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameEnter@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameEnter, COMDAT

; 86   : 	static bool IsForfendGameEnter(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_ENTER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameEnter@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsRecordGameScore@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsRecordGameScore@CServerRule@@SA_NK@Z PROC		; CServerRule::IsRecordGameScore, COMDAT

; 73   : 	static bool IsRecordGameScore(DWORD dwServerRule) { return (dwServerRule&SR_RECORD_GAME_SCORE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00011	74 09		 je	 SHORT $LN3@IsRecordGa
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsRecordGa
$LN3@IsRecordGa:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsRecordGa:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsRecordGameScore@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsRecordGameScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAvertCheatMode, COMDAT

; 68   : 	static bool IsAllowAvertCheatMode(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_AVERT_CHEAT_MODE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 40	 and	 eax, 64			; 00000040H
  0000f	74 09		 je	 SHORT $LN3@IsAllowAve
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowAve
$LN3@IsAllowAve:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAve:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAvertCheatMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowDynamicJoin@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowDynamicJoin, COMDAT

; 64   : 	static bool IsAllowDynamicJoin(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_DYNAMIC_JOIN)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 10	 and	 eax, 16			; 00000010H
  0000f	74 09		 je	 SHORT $LN3@IsAllowDyn
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowDyn
$LN3@IsAllowDyn:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowDyn:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowDynamicJoin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameChat, COMDAT

; 53   : 	static bool IsForfendGameChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	74 09		 je	 SHORT $LN3@IsForfendG
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendGameChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00012	83 c4 04	 add	 esp, 4
  00015	0f b6 f0	 movzx	 esi, al
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00021	83 c4 04	 add	 esp, 4
  00024	0f b6 d0	 movzx	 edx, al
  00027	3b f2		 cmp	 esi, edx
  00029	7e 04		 jle	 SHORT $LN2@InterfaceV
  0002b	32 c0		 xor	 al, al
  0002d	eb 74		 jmp	 SHORT $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00038	83 c4 04	 add	 esp, 4
  0003b	0f b6 f0	 movzx	 esi, al
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00047	83 c4 04	 add	 esp, 4
  0004a	0f b6 d0	 movzx	 edx, al
  0004d	3b f2		 cmp	 esi, edx
  0004f	74 04		 je	 SHORT $LN3@InterfaceV
  00051	32 c0		 xor	 al, al
  00053	eb 4e		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00055	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0005e	83 c4 04	 add	 esp, 4
  00061	0f b6 f0	 movzx	 esi, al
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 d0	 movzx	 edx, al
  00073	3b f2		 cmp	 esi, edx
  00075	74 04		 je	 SHORT $LN4@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 28		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 f0	 movzx	 esi, al
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00093	83 c4 04	 add	 esp, 4
  00096	0f b6 d0	 movzx	 edx, al
  00099	3b f2		 cmp	 esi, edx
  0009b	74 04		 je	 SHORT $LN5@InterfaceV
  0009d	32 c0		 xor	 al, al
  0009f	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000a1	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	d1 e0		 shl	 eax, 1
  00010	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 03	 imul	 ecx, eax, 3
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagPersonalUserScoreInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalUserScoreInfo@@QAE@XZ PROC		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo, COMDAT
; _this$ = ecx

; 1112 : 	tagPersonalUserScoreInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1113 : 	{
; 1114 : 		memset(this, 0, sizeof(tagPersonalUserScoreInfo));

  0000c	6a 3c		 push	 60			; 0000003cH
  0000e	6a 00		 push	 0
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1115 : 	}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0tagPersonalUserScoreInfo@@QAE@XZ ENDP		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@K@@YGIK@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 4
??$HashKey@K@@YGIK@Z PROC				; HashKey<unsigned long>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00018	83 c4 08	 add	 esp, 8
  0001b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001e	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00021	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00024	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00027	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002a	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002d	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00034	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003b	2b c1		 sub	 eax, ecx
  0003d	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00040	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00045	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004a	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??$HashKey@K@@YGIK@Z ENDP				; HashKey<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z
_TEXT	SEGMENT
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_timeDest$ = 8						; size = 4
?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z PROC ; ATL::CTime::GetAsSystemTime, COMDAT
; _this$ = ecx

; 629  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 630  : 	struct tm ttm;
; 631  : 	struct tm* ptm;
; 632  : 
; 633  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 634  : 	if(!ptm)

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	75 04		 jne	 SHORT $LN2@GetAsSyste

; 635  : 	{
; 636  : 		return false;

  0002b	32 c0		 xor	 al, al
  0002d	eb 72		 jmp	 SHORT $LN1@GetAsSyste
$LN2@GetAsSyste:

; 637  : 	}
; 638  : 
; 639  : 	timeDest.wYear = (WORD) (1900 + ptm->tm_year);

  0002f	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  00032	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00035	81 c1 6c 07 00
	00		 add	 ecx, 1900		; 0000076cH
  0003b	8b 55 08	 mov	 edx, DWORD PTR _timeDest$[ebp]
  0003e	66 89 0a	 mov	 WORD PTR [edx], cx

; 640  : 	timeDest.wMonth = (WORD) (1 + ptm->tm_mon);

  00041	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  00044	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00047	83 c1 01	 add	 ecx, 1
  0004a	8b 55 08	 mov	 edx, DWORD PTR _timeDest$[ebp]
  0004d	66 89 4a 02	 mov	 WORD PTR [edx+2], cx

; 641  : 	timeDest.wDayOfWeek = (WORD) ptm->tm_wday;

  00051	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  00054	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00057	66 8b 51 18	 mov	 dx, WORD PTR [ecx+24]
  0005b	66 89 50 04	 mov	 WORD PTR [eax+4], dx

; 642  : 	timeDest.wDay = (WORD) ptm->tm_mday;

  0005f	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  00062	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00065	66 8b 51 0c	 mov	 dx, WORD PTR [ecx+12]
  00069	66 89 50 06	 mov	 WORD PTR [eax+6], dx

; 643  : 	timeDest.wHour = (WORD) ptm->tm_hour;

  0006d	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  00070	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00073	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00077	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 644  : 	timeDest.wMinute = (WORD) ptm->tm_min;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  0007e	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00081	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  00085	66 89 50 0a	 mov	 WORD PTR [eax+10], dx

; 645  : 	timeDest.wSecond = (WORD) ptm->tm_sec;

  00089	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  0008c	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  0008f	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00092	66 89 50 0c	 mov	 WORD PTR [eax+12], dx

; 646  : 	timeDest.wMilliseconds = 0;

  00096	33 c0		 xor	 eax, eax
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _timeDest$[ebp]
  0009b	66 89 41 0e	 mov	 WORD PTR [ecx+14], ax

; 647  : 
; 648  : 	return true;

  0009f	b0 01		 mov	 al, 1
$LN1@GetAsSyste:

; 649  : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a7	33 cd		 xor	 ecx, ebp
  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 04 00	 ret	 4
?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ENDP ; ATL::CTime::GetAsSystemTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z
_TEXT	SEGMENT
tv65 = -120						; size = 4
_err$1 = -52						; size = 4
_ptmTemp$2 = -48					; size = 36
___atl_condVal$3 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ptm$ = 8						; size = 4
?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z PROC		; ATL::CTime::GetLocalTm, COMDAT
; _this$ = ecx

; 607  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@GetLocalTm:

; 608  : 	// Ensure ptm is valid
; 609  : 	ATLENSURE( ptm != NULL );

  00016	83 7d 08 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  0001a	74 09		 je	 SHORT $LN12@GetLocalTm
  0001c	c7 45 88 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00023	eb 07		 jmp	 SHORT $LN13@GetLocalTm
$LN12@GetLocalTm:
  00025	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN13@GetLocalTm:
  0002c	8b 45 88	 mov	 eax, DWORD PTR tv65[ebp]
  0002f	89 45 f4	 mov	 DWORD PTR ___atl_condVal$3[ebp], eax
$LN7@GetLocalTm:
  00032	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  00036	75 2b		 jne	 SHORT $LN5@GetLocalTm
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00042	6a 00		 push	 0
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA
  00049	83 c0 02	 add	 eax, 2
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00052	6a 02		 push	 2
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN5@GetLocalTm
  00062	cc		 int	 3
$LN5@GetLocalTm:
  00063	33 c0		 xor	 eax, eax
  00065	75 cb		 jne	 SHORT $LN7@GetLocalTm
  00067	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  0006b	75 0a		 jne	 SHORT $LN2@GetLocalTm
  0006d	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00072	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@GetLocalTm:
  00077	33 c0		 xor	 eax, eax
  00079	75 9b		 jne	 SHORT $LN4@GetLocalTm

; 610  : 
; 611  : 	if (ptm != NULL)

  0007b	83 7d 08 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  0007f	74 30		 je	 SHORT $LN9@GetLocalTm

; 612  : 	{
; 613  : 		struct tm ptmTemp;
; 614  : 		errno_t err = _localtime64_s(&ptmTemp, &m_time);

  00081	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00084	50		 push	 eax
  00085	8d 4d d0	 lea	 ecx, DWORD PTR _ptmTemp$2[ebp]
  00088	51		 push	 ecx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___localtime64_s
  0008f	83 c4 08	 add	 esp, 8
  00092	89 45 cc	 mov	 DWORD PTR _err$1[ebp], eax

; 615  : 
; 616  : 		if (err != 0)

  00095	83 7d cc 00	 cmp	 DWORD PTR _err$1[ebp], 0
  00099	74 04		 je	 SHORT $LN10@GetLocalTm

; 617  : 		{
; 618  : 			return NULL;    // indicates that m_time was not initialized!

  0009b	33 c0		 xor	 eax, eax
  0009d	eb 14		 jmp	 SHORT $LN11@GetLocalTm
$LN10@GetLocalTm:

; 619  : 		}
; 620  : 
; 621  : 		*ptm = ptmTemp;

  0009f	b9 09 00 00 00	 mov	 ecx, 9
  000a4	8d 75 d0	 lea	 esi, DWORD PTR _ptmTemp$2[ebp]
  000a7	8b 7d 08	 mov	 edi, DWORD PTR _ptm$[ebp]
  000aa	f3 a5		 rep movsd

; 622  : 		return ptm;

  000ac	8b 45 08	 mov	 eax, DWORD PTR _ptm$[ebp]
  000af	eb 02		 jmp	 SHORT $LN11@GetLocalTm
$LN9@GetLocalTm:

; 623  : 	}
; 624  : 
; 625  : 	return NULL;

  000b1	33 c0		 xor	 eax, eax
$LN11@GetLocalTm:

; 626  : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b9	33 cd		 xor	 ecx, ebp
  000bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ENDP		; ATL::CTime::GetLocalTm
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 8
??0CTime@ATL@@QAE@_J@Z PROC				; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 418  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 417  : 	m_time( time )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 55 0c	 mov	 edx, DWORD PTR _time$[ebp+4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 419  : }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??0CTime@ATL@@QAE@_J@Z ENDP				; ATL::CTime::CTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
_TEXT	SEGMENT
_ptr$ = -20						; size = 4
_ple$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 421  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 422  : 		CPreserveLastError ple;

  00028	8d 4d f0	 lea	 ecx, DWORD PTR _ple$[ebp]
  0002b	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::CPreserveLastError
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 423  : 		va_list ptr; va_start(ptr, pszFmt);

  00037	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  0003a	89 45 ec	 mov	 DWORD PTR _ptr$[ebp], eax

; 424  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  0003d	8b 45 ec	 mov	 eax, DWORD PTR _ptr$[ebp]
  00040	50		 push	 eax
  00041	8b 4d 14	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  00044	51		 push	 ecx
  00045	8b 55 10	 mov	 edx, DWORD PTR _nLevel$[ebp]
  00048	52		 push	 edx
  00049	8b 45 0c	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00053	52		 push	 edx
  00054	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ; ATL::CTrace::TraceV
  0005f	83 c4 18	 add	 esp, 24			; 00000018H

; 425  : 		va_end(ptr);

  00062	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 426  : 	}

  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8d 4d f0	 lea	 ecx, DWORD PTR _ple$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _ple$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
__ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 411  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _nLineNo$[ebp]
  0001a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 412  : 	}

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx

; 396  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 397  : 		SetLastError(m_dwLastError);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 398  : 	}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx

; 390  : 	CPreserveLastError()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	89 01		 mov	 DWORD PTR [ecx], eax

; 393  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = -8						; size = 4
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  00013	6a 01		 push	 1
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	50		 push	 eax
  00019	8d 4d f8	 lea	 ecx, DWORD PTR _nBytes$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
  00025	85 c0		 test	 eax, eax
  00027	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00029	32 c0		 xor	 al, al
  0002b	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 435  : 	{

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>

; 436  : 	}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00017	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	74 27		 je	 SHORT $LN4@AllocateBy
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001e	6a 00		 push	 0
  00020	68 7e 01 00 00	 push	 382			; 0000017eH
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 01		 jne	 SHORT $LN4@AllocateBy
  0003a	cc		 int	 3
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0003b	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00044	83 c4 04	 add	 esp, 4
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00052	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00054	32 c0		 xor	 al, al
  00056	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00058	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 350  : 		Free();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free

; 351  : 	}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = -8						; size = 4
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  00013	6a 02		 push	 2
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	50		 push	 eax
  00019	8d 4d f8	 lea	 ecx, DWORD PTR _nBytes$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
  00025	85 c0		 test	 eax, eax
  00027	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00029	32 c0		 xor	 al, al
  0002b	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 435  : 	{

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>

; 436  : 	}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00017	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	74 27		 je	 SHORT $LN4@AllocateBy
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001e	6a 00		 push	 0
  00020	68 7e 01 00 00	 push	 382			; 0000017eH
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 01		 jne	 SHORT $LN4@AllocateBy
  0003a	cc		 int	 3
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0003b	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00044	83 c4 04	 add	 esp, 4
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00052	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00054	32 c0		 xor	 al, al
  00056	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00058	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 350  : 		Free();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
_TEXT	SEGMENT
_wszBuf$ = -24						; size = 4
_szBuf$ = -20						; size = 4
_cchNeeded$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 239  : 		int cchNeeded = _vscprintf(pszFmt, args);

  00028	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 __vscprintf
  00035	83 c4 08	 add	 esp, 8
  00038	89 45 f0	 mov	 DWORD PTR _cchNeeded$[ebp], eax

; 240  : 		if (cchNeeded < 0)

  0003b	83 7d f0 00	 cmp	 DWORD PTR _cchNeeded$[ebp], 0
  0003f	7d 05		 jge	 SHORT $LN2@TraceV

; 241  : 		{
; 242  : 			return;

  00041	e9 64 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 243  : 		}
; 244  : 
; 245  : 		CHeapPtr<char> szBuf;

  00046	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 246  : 		if (!szBuf.Allocate(cchNeeded + 1))

  00055	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  00058	83 c0 01	 add	 eax, 1
  0005b	50		 push	 eax
  0005c	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  0005f	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
  00064	0f b6 c8	 movzx	 ecx, al
  00067	85 c9		 test	 ecx, ecx
  00069	75 14		 jne	 SHORT $LN3@TraceV

; 247  : 		{
; 248  : 			return;

  0006b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00072	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00075	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0007a	e9 2b 01 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 249  : 		}
; 250  : 
; 251  : 		szBuf[0] = '\0';

  0007f	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00082	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  00087	b9 01 00 00 00	 mov	 ecx, 1
  0008c	6b d1 00	 imul	 edx, ecx, 0
  0008f	c6 04 10 00	 mov	 BYTE PTR [eax+edx], 0

; 252  : 
; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  00093	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  00096	50		 push	 eax
  00097	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0009a	51		 push	 ecx
  0009b	8b 55 f0	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  0009e	52		 push	 edx
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  000a2	83 c0 01	 add	 eax, 1
  000a5	50		 push	 eax
  000a6	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  000a9	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 __vsnprintf_s
  000b4	83 c4 14	 add	 esp, 20			; 00000014H
  000b7	83 f8 ff	 cmp	 eax, -1
  000ba	75 14		 jne	 SHORT $LN4@TraceV

; 254  : 		{
; 255  : 			return;

  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c3	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  000c6	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  000cb	e9 da 00 00 00	 jmp	 $LN1@TraceV
$LN4@TraceV:

; 256  : 		}
; 257  : 
; 258  : 		CHeapPtr<wchar_t> wszBuf;

  000d0	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000d3	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
  000d8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 259  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  000dc	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  000df	83 c0 01	 add	 eax, 1
  000e2	50		 push	 eax
  000e3	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000e6	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  000eb	0f b6 c8	 movzx	 ecx, al
  000ee	85 c9		 test	 ecx, ecx
  000f0	75 20		 jne	 SHORT $LN5@TraceV

; 260  : 		{
; 261  : 			return;

  000f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000f6	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000f9	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  000fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00105	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00108	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0010d	e9 98 00 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 262  : 		}
; 263  : 
; 264  : 		wszBuf[0] = '\0';

  00112	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00115	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  0011a	b9 02 00 00 00	 mov	 ecx, 2
  0011f	6b d1 00	 imul	 edx, ecx, 0
  00122	33 c9		 xor	 ecx, ecx
  00124	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 265  : 
; 266  : 		if (::MultiByteToWideChar(CP_ACP, 0, szBuf, -1, wszBuf, cchNeeded + 1) == 0)

  00128	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  0012b	83 c0 01	 add	 eax, 1
  0012e	50		 push	 eax
  0012f	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00132	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00137	50		 push	 eax
  00138	6a ff		 push	 -1
  0013a	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  0013d	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  00142	50		 push	 eax
  00143	6a 00		 push	 0
  00145	6a 00		 push	 0
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0014d	85 c0		 test	 eax, eax
  0014f	75 1d		 jne	 SHORT $LN6@TraceV

; 267  : 		{
; 268  : 			return;

  00151	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00155	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00158	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0015d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00164	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00167	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0016c	eb 3c		 jmp	 SHORT $LN1@TraceV
$LN6@TraceV:

; 269  : 		}
; 270  : 
; 271  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  0016e	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00171	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00176	50		 push	 eax
  00177	8b 45 14	 mov	 eax, DWORD PTR _nLevel$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d 10	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  0017e	51		 push	 ecx
  0017f	8b 55 0c	 mov	 edx, DWORD PTR _nLine$[ebp]
  00182	52		 push	 edx
  00183	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ; ATL::CTrace::TraceV
  0018c	83 c4 14	 add	 esp, 20			; 00000014H

; 272  : 	}

  0018f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00193	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00196	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0019b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a2	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  001a5	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
  001aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b4	59		 pop	 ecx
  001b5	5f		 pop	 edi
  001b6	5e		 pop	 esi
  001b7	5b		 pop	 ebx
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_fileName$ = -2588					; size = 520
_wszBuf$ = -2068					; size = 4
_chCount$ = -2064					; size = 4
_pwszCategoryName$ = -2060				; size = 4
_categoryLength$ = -2056				; size = 4
_wszCategory$ = -2052					; size = 2048
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 0b 00
	00		 sub	 esp, 2972		; 00000b9cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00016	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel
  0001d	74 14		 je	 SHORT $LN3@TraceV
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
  00024	3b 45 14	 cmp	 eax, DWORD PTR _nLevel$[ebp]
  00027	72 0a		 jb	 SHORT $LN3@TraceV
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  0002e	23 45 10	 and	 eax, DWORD PTR _dwCategory$[ebp]
  00031	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00033	e9 c2 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00038	68 00 08 00 00	 push	 2048			; 00000800H
  0003d	6a 00		 push	 0
  0003f	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 		int categoryLength = 0;

  0004e	c7 85 f8 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _categoryLength$[ebp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00058	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ; ATL::CTrace::GetCategoryName
  00061	83 c4 04	 add	 esp, 4
  00064	89 85 f4 f7 ff
	ff		 mov	 DWORD PTR _pwszCategoryName$[ebp], eax

; 159  : 		if (pwszCategoryName != nullptr)

  0006a	83 bd f4 f7 ff
	ff 00		 cmp	 DWORD PTR _pwszCategoryName$[ebp], 0
  00071	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  00073	8b 85 f4 f7 ff
	ff		 mov	 eax, DWORD PTR _pwszCategoryName$[ebp]
  00079	50		 push	 eax
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  0007f	68 00 04 00 00	 push	 1024			; 00000400H
  00084	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 _swprintf_s
  00090	83 c4 10	 add	 esp, 16			; 00000010H
  00093	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  00099	83 bd f8 f7 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000a0	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000a2	e9 53 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}
; 166  : 		else

  000a7	eb 31		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000a9	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  000b2	68 00 04 00 00	 push	 1024			; 00000400H
  000b7	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 _swprintf_s
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  000cc	83 bd f8 f7 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000d3	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  000d5	e9 20 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  000da	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  000e4	83 c4 04	 add	 esp, 4
  000e7	8b 8d f8 f7 ff
	ff		 mov	 ecx, DWORD PTR _categoryLength$[ebp]
  000ed	8d 54 08 01	 lea	 edx, DWORD PTR [eax+ecx+1]
  000f1	89 95 f0 f7 ff
	ff		 mov	 DWORD PTR _chCount$[ebp], edx

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  000f7	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000fd	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 176  : 		if (!wszBuf.Allocate(chCount))

  00102	8b 85 f0 f7 ff
	ff		 mov	 eax, DWORD PTR _chCount$[ebp]
  00108	50		 push	 eax
  00109	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0010f	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00114	0f b6 c8	 movzx	 ecx, al
  00117	85 c9		 test	 ecx, ecx
  00119	75 10		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  0011b	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00121	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  00126	e9 cf 00 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  0012b	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00131	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00136	b9 02 00 00 00	 mov	 ecx, 2
  0013b	6b d1 00	 imul	 edx, ecx, 0
  0013e	33 c9		 xor	 ecx, ecx
  00140	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00144	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  00147	50		 push	 eax
  00148	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0014e	51		 push	 ecx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  00154	8b 95 f0 f7 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0015a	52		 push	 edx
  0015b	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00161	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 _swprintf_s
  0016c	83 c4 14	 add	 esp, 20			; 00000014H
  0016f	83 f8 ff	 cmp	 eax, -1
  00172	75 0d		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  00174	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0017a	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0017f	eb 79		 jmp	 SHORT $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  00181	68 08 02 00 00	 push	 520			; 00000208H
  00186	6a 00		 push	 0
  00188	8d 85 e4 f5 ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 _memset
  00194	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00197	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  0019a	50		 push	 eax
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  001a0	68 04 01 00 00	 push	 260			; 00000104H
  001a5	8d 8d e4 f5 ff
	ff		 lea	 ecx, DWORD PTR _fileName$[ebp]
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 _swprintf_s
  001b1	83 c4 10	 add	 esp, 16			; 00000010H
  001b4	83 f8 ff	 cmp	 eax, -1
  001b7	75 0d		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  001b9	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001bf	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  001c4	eb 34		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  001c6	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001cc	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001d1	50		 push	 eax
  001d2	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001d7	6a 00		 push	 0
  001d9	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  001dc	50		 push	 eax
  001dd	8d 8d e4 f5 ff
	ff		 lea	 ecx, DWORD PTR _fileName$[ebp]
  001e3	51		 push	 ecx
  001e4	6a 00		 push	 0
  001e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  001ec	83 c4 18	 add	 esp, 24			; 00000018H

; 199  : 	}

  001ef	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001f5	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
  001fa	5f		 pop	 edi
  001fb	5e		 pop	 esi
  001fc	5b		 pop	 ebx
  001fd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00200	33 cd		 xor	 ecx, ebp
  00202	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00207	8b e5		 mov	 esp, ebp
  00209	5d		 pop	 ebp
  0020a	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@GetCategor:
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  0001e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00024	73 22		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00026	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  0002d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax]
  00033	3b 4d 08	 cmp	 ecx, DWORD PTR _nCategory$[ebp]
  00036	75 0e		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00038	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  0003f	05 04 00 00 00	 add	 eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  00044	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  00046	eb ca		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  00048	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000c	b8 00 20 00 00	 mov	 eax, 8192		; 00002000H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 267  : 		free(p);

  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00013	83 c4 04	 add	 esp, 4

; 268  : 	}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 262  : 		return malloc(nBytes);

  00009	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00013	83 c4 04	 add	 esp, 4

; 263  : 	}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  0000c	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  00012	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00015	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00019	77 06		 ja	 SHORT $LN4@AtlMultipl
  0001b	83 7d f8 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001f	76 0f		 jbe	 SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:

; 138  : 	{
; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00021	68 16 02 00 00	 push	 534			; 00000216H
  00026	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0002b	83 c4 04	 add	 esp, 4
  0002e	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  00030	8b 45 f8	 mov	 eax, DWORD PTR _i64Result$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00036	89 01		 mov	 DWORD PTR [ecx], eax

; 142  : 	return S_OK;

  00038	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 143  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T1 = -72						; size = 8
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 66   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  00009	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0000c	50		 push	 eax
  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@
  00012	6a 00		 push	 0
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00019	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
  0001e	50		 push	 eax
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA
  00025	83 c1 01	 add	 ecx, 1
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002e	8d 4d b8	 lea	 ecx, DWORD PTR $T1[ebp]
  00031	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003c	83 c4 14	 add	 esp, 20			; 00000014H

; 67   : #ifdef _AFX
; 68   : 	if( hr == E_OUTOFMEMORY )

  0003f	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00046	75 07		 jne	 SHORT $LN2@AtlThrowIm

; 69   : 	{
; 70   : 		AfxThrowMemoryException();

  00048	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException

; 71   : 	}
; 72   : 	else

  0004d	eb 09		 jmp	 SHORT $LN4@AtlThrowIm
$LN2@AtlThrowIm:

; 73   : 	{
; 74   : 		AfxThrowOleException( hr );

  0004f	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$LN4@AtlThrowIm:

; 75   : 	}
; 76   : #else
; 77   : 	throw CAtlException( hr );
; 78   : #endif
; 79   : };

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  :             return _time64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00013	83 c4 04	 add	 esp, 4

; 537  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT

; 509  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 510  :             #pragma warning(push)
; 511  :             #pragma warning(disable: 4996)
; 512  :             return _localtime64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___localtime64
  00013	83 c4 04	 add	 esp, 4

; 513  :             #pragma warning(pop)
; 514  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_localtime ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 __vsnprintf
  00024	83 c4 10	 add	 esp, 16			; 00000010H
  00027	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1975 :         __crt_va_end(_ArgList);

  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1976 :         return _Result;

  00031	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1977 :     }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
__ArgList$ = 12						; size = 4
__vscprintf PROC					; COMDAT

; 1675 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 __vscprintf_l
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1677 :     }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
__vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Format$ = 8						; size = 4
__Locale$ = 12						; size = 4
__ArgList$ = 16						; size = 4
__vscprintf_l PROC					; COMDAT

; 1658 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a 00		 push	 0
  00017	6a 00		 push	 0
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	83 c9 02	 or	 ecx, 2
  00023	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00026	52		 push	 edx
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  0002e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00031	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  00034	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00038	7d 09		 jge	 SHORT $LN3@vscprintf_
  0003a	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00041	eb 06		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00043	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00046	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vscprintf_:
  00049	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1664 :     }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
__vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT

; 1409 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1410 :         #pragma warning(push)
; 1411 :         #pragma warning(disable: 4996) // Deprecation
; 1412 :         return _vsnprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1413 :         #pragma warning(pop)
; 1414 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -68						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000d	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  0000f	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00012	89 45 bc	 mov	 DWORD PTR tv68[ebp], eax
  00015	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00020	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00026	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0002c	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv68[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv68 = -68						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _IsEqualGUID
  00016	83 c4 08	 add	 esp, 8
  00019	85 c0		 test	 eax, eax
  0001b	74 09		 je	 SHORT $LN3@
  0001d	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00026	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  0002d	8a 45 bc	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -68						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 _memcmp
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN3@IsEqualGUI
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\tableframe.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
