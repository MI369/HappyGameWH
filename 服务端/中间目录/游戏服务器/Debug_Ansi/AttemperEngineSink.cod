; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\游戏服务器\AttemperEngineSink.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
?szTreasureDB@@3QBDB DB 'QPTreasureDB', 00H		; szTreasureDB
	ORG $+3
?szCompilation@@3QBDB DB 'ED56BE63-3026-465B-9DFC-17F595145F3D', 00H ; szCompilation
	ORG $+3
?IID_ITCPNetworkEngineEvent@@3U_GUID@@B DD 0b7e6da53H	; IID_ITCPNetworkEngineEvent
	DW	0fca5H
	DW	04d90H
	DB	085H
	DB	048H
	DB	0feH
	DB	05H
	DB	0f6H
	DB	0b4H
	DB	0c0H
	DB	0efH
?IID_IAttemperEngineSink@@3U_GUID@@B DD 0831b9001H	; IID_IAttemperEngineSink
	DW	04450H
	DW	045ddH
	DB	091H
	DB	037H
	DB	0dH
	DB	026H
	DB	016H
	DB	0e3H
	DB	075H
	DB	032H
?IID_IServerUserItemSink@@3U_GUID@@B DD 09d0cfe02H	; IID_IServerUserItemSink
	DW	0fe9H
	DW	04a8bH
	DB	097H
	DB	095H
	DB	0acH
	DB	032H
	DB	067H
	DB	05aH
	DB	0f8H
	DB	0b1H
?IID_IServerUserManager@@3U_GUID@@B DD 077a3c4dfH	; IID_IServerUserManager
	DW	01d95H
	DW	048c6H
	DB	0acH
	DB	09dH
	DB	075H
	DB	0d7H
	DB	06cH
	DB	02aH
	DB	03cH
	DB	0eH
?IID_ITableFrame@@3U_GUID@@B DD 0860cd1cfH		; IID_ITableFrame
	DW	01a4fH
	DW	04e35H
	DB	0b8H
	DB	0cH
	DB	0d2H
	DB	046H
	DB	0a4H
	DB	0efH
	DB	0fdH
	DB	0fbH
?IID_IMainServiceFrame@@3U_GUID@@B DD 0baaf5584H	; IID_IMainServiceFrame
	DW	0f9b4H
	DW	041b6H
	DB	0aeH
	DB	06bH
	DB	0efH
	DB	04dH
	DB	054H
	DB	041H
	DB	0f8H
	DB	032H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_IsEqualGUID
PUBLIC	_==
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	__snprintf
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??$HashKey@K@@YGIK@Z				; HashKey<unsigned long>
PUBLIC	??0tagPersonalUserScoreInfo@@QAE@XZ		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
PUBLIC	??0IUnknownEx@@QAE@XZ				; IUnknownEx::IUnknownEx
PUBLIC	?GetProductVer@@YAEK@Z				; GetProductVer
PUBLIC	?GetMainVer@@YAEK@Z				; GetMainVer
PUBLIC	?GetSubVer@@YAEK@Z				; GetSubVer
PUBLIC	?GetBuildVer@@YAEK@Z				; GetBuildVer
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	??0CSendPacketHelper@@QAE@PAXG@Z		; CSendPacketHelper::CSendPacketHelper
PUBLIC	?GetDataSize@CSendPacketHelper@@QAEGXZ		; CSendPacketHelper::GetDataSize
PUBLIC	?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z	; CSendPacketHelper::AddPacket
PUBLIC	?AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z	; CSendPacketHelper::AddPacket
PUBLIC	??0CRecvPacketHelper@@QAE@PBXG@Z		; CRecvPacketHelper::CRecvPacketHelper
PUBLIC	?GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z ; CRecvPacketHelper::GetData
PUBLIC	?IsForfendGameChat@CServerRule@@SA_NK@Z		; CServerRule::IsForfendGameChat
PUBLIC	?IsForfendRoomChat@CServerRule@@SA_NK@Z		; CServerRule::IsForfendRoomChat
PUBLIC	?IsForfendWisperChat@CServerRule@@SA_NK@Z	; CServerRule::IsForfendWisperChat
PUBLIC	?IsForfendWisperOnGame@CServerRule@@SA_NK@Z	; CServerRule::IsForfendWisperOnGame
PUBLIC	?IsAllowDynamicJoin@CServerRule@@SA_NK@Z	; CServerRule::IsAllowDynamicJoin
PUBLIC	?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z	; CServerRule::IsAllowOffLineTrustee
PUBLIC	?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAvertCheatMode
PUBLIC	?IsRecordGameScore@CServerRule@@SA_NK@Z		; CServerRule::IsRecordGameScore
PUBLIC	?IsRecordGameTrack@CServerRule@@SA_NK@Z		; CServerRule::IsRecordGameTrack
PUBLIC	?IsImmediateWriteScore@CServerRule@@SA_NK@Z	; CServerRule::IsImmediateWriteScore
PUBLIC	?IsForfendRoomEnter@CServerRule@@SA_NK@Z	; CServerRule::IsForfendRoomEnter
PUBLIC	?IsForfendGameEnter@CServerRule@@SA_NK@Z	; CServerRule::IsForfendGameEnter
PUBLIC	?IsForfendGameLookon@CServerRule@@SA_NK@Z	; CServerRule::IsForfendGameLookon
PUBLIC	?IsForfendTakeInRoom@CServerRule@@SA_NK@Z	; CServerRule::IsForfendTakeInRoom
PUBLIC	?IsForfendTakeInGame@CServerRule@@SA_NK@Z	; CServerRule::IsForfendTakeInGame
PUBLIC	?IsForfendSaveInRoom@CServerRule@@SA_NK@Z	; CServerRule::IsForfendSaveInRoom
PUBLIC	?IsForfendSaveInGame@CServerRule@@SA_NK@Z	; CServerRule::IsForfendSaveInGame
PUBLIC	?IsForfendGameRule@CServerRule@@SA_NK@Z		; CServerRule::IsForfendGameRule
PUBLIC	?IsForfendLockTable@CServerRule@@SA_NK@Z	; CServerRule::IsForfendLockTable
PUBLIC	?IsAllowAndroidAttend@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidAttend
PUBLIC	?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidSimulate
PUBLIC	?SetForfendGameChat@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameChat
PUBLIC	?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendRoomChat
PUBLIC	?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendWisperChat
PUBLIC	?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendWisperOnGame
PUBLIC	?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowDynamicJoin
PUBLIC	?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowOffLineTrustee
PUBLIC	?SetRecordGameScore@CServerRule@@SAXAAK_N@Z	; CServerRule::SetRecordGameScore
PUBLIC	?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z	; CServerRule::SetRecordGameTrack
PUBLIC	?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z	; CServerRule::SetImmediateWriteScore
PUBLIC	?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendRoomEnter
PUBLIC	?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameEnter
PUBLIC	?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameLookon
PUBLIC	?SetForfendTakeInRoom@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendTakeInRoom
PUBLIC	?SetForfendTakeInGame@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendTakeInGame
PUBLIC	?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendSaveInRoom
PUBLIC	?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendSaveInGame
PUBLIC	?SetForfendGameRule@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameRule
PUBLIC	?SetForfendLockTable@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendLockTable
PUBLIC	?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowAndroidAttend
PUBLIC	?IsSuportPlayBack@CServerRule@@SA_NK@Z		; CServerRule::IsSuportPlayBack
PUBLIC	?CanWisper@CUserRight@@SA_NK@Z			; CUserRight::CanWisper
PUBLIC	?CanRoomChat@CUserRight@@SA_NK@Z		; CUserRight::CanRoomChat
PUBLIC	?CanKillOutUser@CUserRight@@SA_NK@Z		; CUserRight::CanKillOutUser
PUBLIC	?IsGameMatchUser@CUserRight@@SA_NK@Z		; CUserRight::IsGameMatchUser
PUBLIC	?IsGameCheatUser@CUserRight@@SA_NK@Z		; CUserRight::IsGameCheatUser
PUBLIC	?CanLimitWisper@CMasterRight@@SA_NK@Z		; CMasterRight::CanLimitWisper
PUBLIC	?CanLimitRoomChat@CMasterRight@@SA_NK@Z		; CMasterRight::CanLimitRoomChat
PUBLIC	?CanLimitGameChat@CMasterRight@@SA_NK@Z		; CMasterRight::CanLimitGameChat
PUBLIC	?CanKillUser@CMasterRight@@SA_NK@Z		; CMasterRight::CanKillUser
PUBLIC	?CanDismissGame@CMasterRight@@SA_NK@Z		; CMasterRight::CanDismissGame
PUBLIC	?CanLimitUserChat@CMasterRight@@SA_NK@Z		; CMasterRight::CanLimitUserChat
PUBLIC	?CanSendWarning@CMasterRight@@SA_NK@Z		; CMasterRight::CanSendWarning
PUBLIC	?CanIssueMessage@CMasterRight@@SA_NK@Z		; CMasterRight::CanIssueMessage
PUBLIC	?CanManagerAndroid@CMasterRight@@SA_NK@Z	; CMasterRight::CanManagerAndroid
PUBLIC	??0CMD_CS_C_UpdateTablePlayerCount@@QAE@XZ	; CMD_CS_C_UpdateTablePlayerCount::CMD_CS_C_UpdateTablePlayerCount
PUBLIC	??0CMD_CS_C_DismissTable@@QAE@XZ		; CMD_CS_C_DismissTable::CMD_CS_C_DismissTable
PUBLIC	??0CMD_GR_DissumeTable@@QAE@XZ			; CMD_GR_DissumeTable::CMD_GR_DissumeTable
PUBLIC	??0IAttemperEngineSink@@QAE@XZ			; IAttemperEngineSink::IAttemperEngineSink
PUBLIC	??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ; CTempldateHelper<ITCPNetworkEngine>::operator->
PUBLIC	?GetInterface@?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ; CTempldateHelper<ITCPNetworkEngine>::GetInterface
PUBLIC	??0IServerUserItemSink@@QAE@XZ			; IServerUserItemSink::IServerUserItemSink
PUBLIC	??0IMainServiceFrame@@QAE@XZ			; IMainServiceFrame::IMainServiceFrame
PUBLIC	??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z	; SerializeElements<unsigned long>
PUBLIC	??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z	; DumpElements<unsigned long>
PUBLIC	??$CompareElements@KK@@YGHPBK0@Z		; CompareElements<unsigned long,unsigned long>
PUBLIC	?GetCount@CDistributeManager@@QAEGXZ		; CDistributeManager::GetCount
PUBLIC	?SetDistributeRule@CDistributeManager@@QAEXE@Z	; CDistributeManager::SetDistributeRule
PUBLIC	??0?$CWHArray@PBDABQBD@@QAE@XZ			; CWHArray<char const *,char const * const &>::CWHArray<char const *,char const * const &>
PUBLIC	??1?$CWHArray@PBDABQBD@@UAE@XZ			; CWHArray<char const *,char const * const &>::~CWHArray<char const *,char const * const &>
PUBLIC	??_G?$CWHArray@PBDABQBD@@UAEPAXI@Z		; CWHArray<char const *,char const * const &>::`scalar deleting destructor'
PUBLIC	??0CFilterTree@@QAE@XZ				; CFilterTree::CFilterTree
PUBLIC	??0CSensitiveWordsFilter@@QAE@XZ		; CSensitiveWordsFilter::CSensitiveWordsFilter
PUBLIC	??1CSensitiveWordsFilter@@UAE@XZ		; CSensitiveWordsFilter::~CSensitiveWordsFilter
PUBLIC	??_GCSensitiveWordsFilter@@UAEPAXI@Z		; CSensitiveWordsFilter::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
PUBLIC	??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEHABQAUtagPersonalTableParameter@@@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::Add
PUBLIC	?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetAt
PUBLIC	?SetSize@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXHABQAUtagPersonalTableParameter@@@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetAtGrow
PUBLIC	?RemoveAll@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::RemoveAll
PUBLIC	?AllocMemory@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAE@XZ	; CWHArray<CTableFrame *,CTableFrame * const &>::CWHArray<CTableFrame *,CTableFrame * const &>
PUBLIC	??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ	; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
PUBLIC	?GetData@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEPAPAVCTableFrame@@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetData
PUBLIC	?GetAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::GetAt
PUBLIC	?ElementAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::SetSize
PUBLIC	?RemoveAll@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAEPAXI@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@KKKAAK@@QAE@H@Z			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
PUBLIC	?Lookup@?$CMap@KKKAAK@@QBEHKAAK@Z		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Lookup
PUBLIC	??A?$CMap@KKKAAK@@QAEAAKK@Z			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::operator[]
PUBLIC	?SetAt@?$CMap@KKKAAK@@QAEXKAAK@Z		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::SetAt
PUBLIC	?RemoveKey@?$CMap@KKKAAK@@QAEHK@Z		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@KKKAAK@@QAEXXZ		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KKKAAK@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KKKAAK@@QBEXAAPAU__POSITION@@AAK1@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KKKAAK@@QAEXIH@Z		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KKKAAK@@IAEPAVCAssoc@1@K@Z	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@KKKAAK@@IAEXPAVCAssoc@1@@Z	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@KKKAAK@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetAssocAt
PUBLIC	??1?$CMap@KKKAAK@@UAE@XZ			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
PUBLIC	?Serialize@?$CMap@KKKAAK@@UAEXAAVCArchive@@@Z	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Serialize
PUBLIC	?Dump@?$CMap@KKKAAK@@UBEXAAVCDumpContext@@@Z	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Dump
PUBLIC	?AssertValid@?$CMap@KKKAAK@@UBEXXZ		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::AssertValid
PUBLIC	??_G?$CMap@KKKAAK@@UAEPAXI@Z			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::CWHArray<tagSystemMessage *,tagSystemMessage * const &>
PUBLIC	??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add
PUBLIC	?Append@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`scalar deleting destructor'
PUBLIC	??0CAttemperEngineSink@@QAE@XZ			; CAttemperEngineSink::CAttemperEngineSink
PUBLIC	??1CAttemperEngineSink@@UAE@XZ			; CAttemperEngineSink::~CAttemperEngineSink
PUBLIC	?Release@CAttemperEngineSink@@UAEXXZ		; CAttemperEngineSink::Release
PUBLIC	?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ; CAttemperEngineSink::QueryInterface
PUBLIC	?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngineSink::OnAttemperEngineStart
PUBLIC	?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngineSink::OnAttemperEngineConclude
PUBLIC	?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z ; CAttemperEngineSink::OnEventControl
PUBLIC	?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z ; CAttemperEngineSink::OnEventAttemperData
PUBLIC	?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z	; CAttemperEngineSink::OnEventTimer
PUBLIC	?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z ; CAttemperEngineSink::OnEventDataBase
PUBLIC	?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z ; CAttemperEngineSink::OnEventTCPSocketLink
PUBLIC	?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z ; CAttemperEngineSink::OnEventTCPSocketShut
PUBLIC	?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z ; CAttemperEngineSink::OnEventTCPSocketRead
PUBLIC	?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z ; CAttemperEngineSink::OnEventTCPNetworkBind
PUBLIC	?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z ; CAttemperEngineSink::OnEventTCPNetworkShut
PUBLIC	?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z ; CAttemperEngineSink::OnEventTCPNetworkRead
PUBLIC	?SendRoomMessage@CAttemperEngineSink@@UAE_NPBDG@Z ; CAttemperEngineSink::SendRoomMessage
PUBLIC	?SendGameMessage@CAttemperEngineSink@@UAE_NPBDG@Z ; CAttemperEngineSink::SendGameMessage
PUBLIC	?SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z ; CAttemperEngineSink::SendRoomMessage
PUBLIC	?SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z ; CAttemperEngineSink::SendGameMessage
PUBLIC	?SendRoomMessage@CAttemperEngineSink@@UAE_NKPBDG_N@Z ; CAttemperEngineSink::SendRoomMessage
PUBLIC	?SendData@CAttemperEngineSink@@UAE_NEGGPAXG@Z	; CAttemperEngineSink::SendData
PUBLIC	?SendData@CAttemperEngineSink@@UAE_NKGGPAXG@Z	; CAttemperEngineSink::SendData
PUBLIC	?SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z ; CAttemperEngineSink::SendData
PUBLIC	?SendDataBatchToMobileUser@CAttemperEngineSink@@UAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataBatchToMobileUser
PUBLIC	?SendDataBatchToCheatUser@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z ; CAttemperEngineSink::SendDataBatchToCheatUser
PUBLIC	?DisconnectCorrespond@CAttemperEngineSink@@UAE_NXZ ; CAttemperEngineSink::DisconnectCorrespond
PUBLIC	?InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::InsertDistribute
PUBLIC	?DeleteDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::DeleteDistribute
PUBLIC	?SensitiveWordFilter@CAttemperEngineSink@@UAEXPBDPADH@Z ; CAttemperEngineSink::SensitiveWordFilter
PUBLIC	?UnLockAndroidUser@CAttemperEngineSink@@UAEXGG@Z ; CAttemperEngineSink::UnLockAndroidUser
PUBLIC	?DismissPersonalTable@CAttemperEngineSink@@UAEXGG@Z ; CAttemperEngineSink::DismissPersonalTable
PUBLIC	?CancelCreateTable@CAttemperEngineSink@@UAEXKKKKGK@Z ; CAttemperEngineSink::CancelCreateTable
PUBLIC	?UpdateTablePlayerCount@CAttemperEngineSink@@UAEXGGG@Z ; CAttemperEngineSink::UpdateTablePlayerCount
PUBLIC	?PersonalRoomWriteJoinInfo@CAttemperEngineSink@@UAEXKGGKKPAD@Z ; CAttemperEngineSink::PersonalRoomWriteJoinInfo
PUBLIC	?OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z ; CAttemperEngineSink::OnEventUserItemScore
PUBLIC	?OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z ; CAttemperEngineSink::OnEventUserItemStatus
PUBLIC	?OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z ; CAttemperEngineSink::OnEventUserItemRight
PUBLIC	?OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z ; CAttemperEngineSink::OnEventUserItemGameData
PUBLIC	?OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBLogonSuccess
PUBLIC	?OnDBLogonFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBLogonFailure
PUBLIC	?OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameParameter
PUBLIC	?OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameColumnInfo
PUBLIC	?OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameAndroidInfo
PUBLIC	?OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameAndroidParameter
PUBLIC	?OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGamePropertyBuff
PUBLIC	?OnDBGameLoadTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameLoadTrumpet
PUBLIC	?OnDBGameSendTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameSendTrumpet
PUBLIC	?OnDBGameMemberParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameMemberParameter
PUBLIC	?OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCMemberDayQueryInfoResult
PUBLIC	?OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCMemberDayPresentResult
PUBLIC	?OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCMemberDayGiftResult
PUBLIC	?OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureInfo
PUBLIC	?OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureSuccess
PUBLIC	?OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureFailure
PUBLIC	?OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureUserInfo
PUBLIC	?OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureEnableResult
PUBLIC	?OnDBPCUserCheckInInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCUserCheckInInfo
PUBLIC	?OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCUserCheckInResult
PUBLIC	?OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCCheckInReward
PUBLIC	?OnDBPCBaseEnsureParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCBaseEnsureParameter
PUBLIC	?OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCBaseEnsureResult
PUBLIC	?OnDBUserTaskList@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskList
PUBLIC	?OnDBUserTaskListEnd@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskListEnd
PUBLIC	?OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskInfo
PUBLIC	?OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskResult
PUBLIC	?OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPropertySuccess
PUBLIC	?OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPropertyFailure
PUBLIC	?OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGamePropertyBuy
PUBLIC	?OnDBQueryPropertyBackpack@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryPropertyBackpack
PUBLIC	?OnDBQueryPropertyUse@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryPropertyUse
PUBLIC	?OnDBQuerySendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQuerySendPresent
PUBLIC	?OnDBQueryPropertyPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryPropertyPresent
PUBLIC	?OnDBQueryGetSendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryGetSendPresent
PUBLIC	?OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPurchaseResult
PUBLIC	?OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBExChangeResult
PUBLIC	?OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBSystemMessage
PUBLIC	?OnDBSensitiveWords@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBSensitiveWords
PUBLIC	?OnDBSystemMessageFinish@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBSystemMessageFinish
PUBLIC	?OnDBPCGrowLevelConfig@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCGrowLevelConfig
PUBLIC	?OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCGrowLevelParameter
PUBLIC	?OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCGrowLevelUpgrade
PUBLIC	?OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCreateSucess
PUBLIC	?OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCreateFailure
PUBLIC	?OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCancelCreateTable
PUBLIC	?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBLoadPersonalParameter
PUBLIC	?OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBDissumeTableResult
PUBLIC	?OnDBQueryUserRoomScore@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryUserRoomScore
PUBLIC	?OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCurrenceRoomCardAndBeant
PUBLIC	?OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainRegister
PUBLIC	?OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainServiceInfo
PUBLIC	?OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainUserCollect
PUBLIC	?OnTCPSocketMainManagerService@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainManagerService
PUBLIC	?OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainAndroidService
PUBLIC	?OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainPersonalRoomRegister
PUBLIC	?OnTCPNetworkMainUser@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainUser
PUBLIC	?OnTCPNetworkMainLogon@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainLogon
PUBLIC	?OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainGame
PUBLIC	?OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainFrame
PUBLIC	?OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainInsure
PUBLIC	?OnTCPNetworkMainTask@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainTask
PUBLIC	?OnTCPNetworkMainBaseEnsure@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainBaseEnsure
PUBLIC	?OnTCPNetworkMainExchange@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainExchange
PUBLIC	?OnTCPNetworkMainMember@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainMember
PUBLIC	?OnTCPNetworkMainProperty@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainProperty
PUBLIC	?OnTCPNetworkMainManage@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainManage
PUBLIC	?OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainMatch
PUBLIC	?OnTCPNetworkMainCheckIn@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainCheckIn
PUBLIC	?OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainPersonalTable
PUBLIC	?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLogonUserID
PUBLIC	?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLogonMobile
PUBLIC	?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLogonAccounts
PUBLIC	?OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserRule
PUBLIC	?OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserLookon
PUBLIC	?OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserSitDown
PUBLIC	?OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserStandUp
PUBLIC	?OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserChat
PUBLIC	?OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubWisperChat
PUBLIC	?OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserExpression
PUBLIC	?OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubWisperExpression
PUBLIC	?OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGamePropertyBuy
PUBLIC	?OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPropertyBackpack
PUBLIC	?OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPropertyUse
PUBLIC	?OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQuerySendPresent
PUBLIC	?OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPropertyPresent
PUBLIC	?OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGetSendPresent
PUBLIC	?OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetwordSubSendTrumpet
PUBLIC	?OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserInviteReq
PUBLIC	?OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserRepulseSit
PUBLIC	?OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberKickUser
PUBLIC	?OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserInfoReq
PUBLIC	?OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserChairReq
PUBLIC	?OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubChairUserInfoReq
PUBLIC	?OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGrowLevelQuery
PUBLIC	?OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryInsureInfo
PUBLIC	?OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubEnableInsureRequest
PUBLIC	?OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubSaveScoreRequest
PUBLIC	?OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTakeScoreRequest
PUBLIC	?OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTransferScoreRequest
PUBLIC	?OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryUserInfoRequest
PUBLIC	?OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubCheckInQueryRequest
PUBLIC	?OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubCheckInDoneRequest
PUBLIC	?OnTCPNetworkSubBaseEnsureQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureQueryRequest
PUBLIC	?OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureTakeRequest
PUBLIC	?OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTakeTaskRequest
PUBLIC	?OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTaskRewardRequest
PUBLIC	?OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLoadTaskInfoRequest
PUBLIC	?OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGiveUpTaskRequest
PUBLIC	?OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberQueryInfo
PUBLIC	?OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberDayPresent
PUBLIC	?OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberDayGift
PUBLIC	?OnTCPNetworkSubQueryExchangeInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryExchangeInfo
PUBLIC	?OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPurchaseMember
PUBLIC	?OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByIngot
PUBLIC	?OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByBeans
PUBLIC	?OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryOption
PUBLIC	?OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubOptionServer
PUBLIC	?OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubManagerKickUser
PUBLIC	?OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLimitUserChat
PUBLIC	?OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubKickAllUser
PUBLIC	?OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubSendMessage
PUBLIC	?OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubDismissGame
PUBLIC	?OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubWarningUser
PUBLIC	?OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubRoomCheat
PUBLIC	?OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubCreateTable
PUBLIC	?OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubCancelRequest
PUBLIC	?OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubRequestReply
PUBLIC	?OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubHostDissumeTable
PUBLIC	?OnTCPNetworkSubQueryUserRoomScore@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryUserRoomScore
PUBLIC	?OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z ; CAttemperEngineSink::OnEventUserLogon
PUBLIC	?OnEventUserLogout@CAttemperEngineSink@@IAEXPAUIServerUserItem@@K@Z ; CAttemperEngineSink::OnEventUserLogout
PUBLIC	?PerformDistribute@CAttemperEngineSink@@IAE_NXZ	; CAttemperEngineSink::PerformDistribute
PUBLIC	?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore
PUBLIC	?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z ; CAttemperEngineSink::PerformCheckVersion
PUBLIC	?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z ; CAttemperEngineSink::PerformTaskProgress
PUBLIC	?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z ; CAttemperEngineSink::SwitchUserItemConnect
PUBLIC	?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z ; CAttemperEngineSink::PerformRoomTaskProgress
PUBLIC	?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z ; CAttemperEngineSink::PerformRoomTaskProgress
PUBLIC	?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket
PUBLIC	?OnEventPropertyBuyPrep@CAttemperEngineSink@@IAE_NGGPAUIServerUserItem@@0@Z ; CAttemperEngineSink::OnEventPropertyBuyPrep
PUBLIC	?SendPropertyMessage@CAttemperEngineSink@@IAE_NKKGG@Z ; CAttemperEngineSink::SendPropertyMessage
PUBLIC	?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ; CAttemperEngineSink::SendPropertyEffect
PUBLIC	?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure
PUBLIC	?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure
PUBLIC	?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure
PUBLIC	?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure
PUBLIC	?GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z ; CAttemperEngineSink::GetBindUserItem
PUBLIC	?GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z ; CAttemperEngineSink::GetBindParameter
PUBLIC	?GetPropertyType@CAttemperEngineSink@@QAEGG@Z	; CAttemperEngineSink::GetPropertyType
PUBLIC	?SaveVideoPlayerInfo@CAttemperEngineSink@@QAE_NKPAD@Z ; CAttemperEngineSink::SaveVideoPlayerInfo
PUBLIC	?SaveVideoDataInfo@CAttemperEngineSink@@QAE_NPADGGPAEG@Z ; CAttemperEngineSink::SaveVideoDataInfo
PUBLIC	?InitAndroidUser@CAttemperEngineSink@@IAE_NXZ	; CAttemperEngineSink::InitAndroidUser
PUBLIC	?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitTableFrameArray
PUBLIC	?InitMatchServiceManager@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitMatchServiceManager
PUBLIC	?InitPersonalRoomServiceManager@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitPersonalRoomServiceManager
PUBLIC	?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::SendUIControlPacket
PUBLIC	?SetMobileUserParameter@CAttemperEngineSink@@IAEXPAUIServerUserItem@@EGG@Z ; CAttemperEngineSink::SetMobileUserParameter
PUBLIC	?SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z ; CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser
PUBLIC	?SendVisibleTableUserInfoToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ; CAttemperEngineSink::SendVisibleTableUserInfoToMobileUser
PUBLIC	?SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::SendUserInfoPacketBatchToPage
PUBLIC	?MobileUserImmediately@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::MobileUserImmediately
PUBLIC	?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z ; CAttemperEngineSink::SendSystemMessage
PUBLIC	?RemoveSystemMessage@CAttemperEngineSink@@IAEXXZ ; CAttemperEngineSink::RemoveSystemMessage
PUBLIC	??_GCAttemperEngineSink@@UAEPAXI@Z		; CAttemperEngineSink::`scalar deleting destructor'
PUBLIC	?GetServiceStatus@CServiceUnits@@QAE?AW4enServiceStatus@@XZ ; CServiceUnits::GetServiceStatus
PUBLIC	??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ	; _snprintf_s<512>
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ	; _snprintf_s<256>
PUBLIC	??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ		; _snprintf_s<64>
PUBLIC	??0?$CWHArray@UtagDistributeInfo@@ABU1@@@QAE@XZ	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::CWHArray<tagDistributeInfo,tagDistributeInfo const &>
PUBLIC	??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
PUBLIC	?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
PUBLIC	?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt
PUBLIC	?RemoveAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHH@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::RemoveAt
PUBLIC	??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
PUBLIC	??_G?$CWHArray@UtagDistributeInfo@@ABU1@@@UAEPAXI@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`scalar deleting destructor'
PUBLIC	??0CPair@?$CMap@KKKAAK@@IAE@K@Z			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KKKAAK@@QAE@K@Z		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CAssoc::CAssoc
PUBLIC	?Release@CAttemperEngineSink@@W3AEXXZ		; [thunk]:CAttemperEngineSink::Release`adjustor{4}'
PUBLIC	?QueryInterface@CAttemperEngineSink@@W3AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngineSink::QueryInterface`adjustor{4}'
PUBLIC	?Release@CAttemperEngineSink@@W7AEXXZ		; [thunk]:CAttemperEngineSink::Release`adjustor{8}'
PUBLIC	?QueryInterface@CAttemperEngineSink@@W7AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngineSink::QueryInterface`adjustor{8}'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	??_C@_0P@MBNHGHMI@atlTraceString@		; `string'
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPBDG@Z@4JA ; `CSendPacketHelper::AddPacket'::`1'::__LINE__Var
PUBLIC	??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA ; `CSendPacketHelper::AddPacket'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z@4JA ; `CRecvPacketHelper::GetData'::`1'::__LINE__Var
PUBLIC	??_7IAttemperEngineSink@@6B@			; IAttemperEngineSink::`vftable'
PUBLIC	??_7IServerUserItemSink@@6B@			; IServerUserItemSink::`vftable'
PUBLIC	??_7IMainServiceFrame@@6B@			; IMainServiceFrame::`vftable'
PUBLIC	??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@	; `string'
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_7?$CWHArray@PBDABQBD@@6B@			; CWHArray<char const *,char const * const &>::`vftable'
PUBLIC	??_7CSensitiveWordsFilter@@6B@			; CSensitiveWordsFilter::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@	; CWHArray<CTableFrame *,CTableFrame * const &>::`vftable'
PUBLIC	??_7?$CMap@KKKAAK@@6B@				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`vftable'
PUBLIC	??_7CAttemperEngineSink@@6BIAttemperEngineSink@@@ ; CAttemperEngineSink::`vftable'
PUBLIC	??_7CAttemperEngineSink@@6BIMainServiceFrame@@@	; CAttemperEngineSink::`vftable'
PUBLIC	??_7CAttemperEngineSink@@6BIServerUserItemSink@@@ ; CAttemperEngineSink::`vftable'
PUBLIC	?__LINE__Var@?0???1CAttemperEngineSink@@UAE@XZ@4JA ; `CAttemperEngineSink::~CAttemperEngineSink'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA ; `CAttemperEngineSink::OnAttemperEngineStart'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA ; `CAttemperEngineSink::OnAttemperEngineConclude'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@EEJNAPCD@?U?$PN?T?Z?A?$KM?$LN?S?P?$KN?$LF?w?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@ ; `string'
PUBLIC	??_C@_0BN@BAEBLECI@?U?$PN?T?Z?A?$KM?$LN?S?T?$LM?U?$LN?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z@4JA ; `CAttemperEngineSink::OnEventTimer'::`1'::__LINE__Var
PUBLIC	??_C@_0BH@ENKFPCCP@?$LG?$KI?J?$LB?F?w?R?l?$LD?$KD?$KD?$LKTimerID?$DN?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z@4JA ; `CAttemperEngineSink::OnEventDataBase'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z@4JA ; `CAttemperEngineSink::OnEventTCPSocketShut'::`1'::__LINE__Var
PUBLIC	??_C@_0CN@HPLNLDC@?S?k?P?$KN?$LF?w?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@ ; `string'
PUBLIC	??_C@_0CN@ONGINNEE@?S?k?T?$LM?U?$LN?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA ; `CAttemperEngineSink::OnEventTCPSocketLink'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@NEANHCGA@?P?$KN?$LF?w?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@ ; `string'
PUBLIC	??_C@_0BM@IFKABAKD@?U?$PN?T?Z?$LH?$KC?K?M?S?N?O?$LH?$LH?$LP?$LM?d?W?$KC?$LC?a?P?E?O?$KC?4?4?4@ ; `string'
PUBLIC	??_C@_0CP@IEGHCDCN@?T?$LM?U?$LN?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z@4JA ; `CAttemperEngineSink::OnEventTCPSocketRead'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA ; `CAttemperEngineSink::OnEventTCPNetworkBind'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z@4JA ; `CAttemperEngineSink::OnEventTCPNetworkShut'::`1'::__LINE__Var
PUBLIC	??_C@_0BK@KGOAMGLA@?$LJ?X?$LB?U?A?$KM?$LN?S?R?l?$LD?$KD?3?5wTableID?$DN?$CFd@ ; `string'
PUBLIC	??_C@_0EC@EPLGCFIG@?$LL?a?$LH?$KC?I?z?R?l?$LD?$KD?$LF?D?O?$PL?O?$KC?3?5Command?4wMain@ ; `string'
PUBLIC	??_C@_0DG@GPBCOFJG@?S?N?O?$LH?C?$PM?A?n?$LH?$LF?$LL?X?5false?5?5?5wMainCmdID@ ; `string'
PUBLIC	??_C@_0CA@BDDILDFJ@MDM_GF_FRAME?5?$LP?r?$LM?$NM?C?$PM?A?n?$LH?$LF?$LL?X?5false@ ; `string'
PUBLIC	?__LINE__Var@?0??SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA ; `CAttemperEngineSink::SendRoomMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA ; `CAttemperEngineSink::SendGameMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z@4JA ; `CAttemperEngineSink::SendData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA ; `CAttemperEngineSink::OnEventUserItemScore'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z@4JA ; `CAttemperEngineSink::OnEventUserItemStatus'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z@4JA ; `CAttemperEngineSink::OnEventUserItemRight'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA ; `CAttemperEngineSink::OnEventUserItemGameData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBLogonSuccess'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@GMGBIJBK@?D?z?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$LD?v?$LH?$LP?$LM?d?01?P?$KB?J?$LB?V?$KO?D?Z?$LC@ ; `string'
PUBLIC	??_C@_0DF@CKMKCLBK@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$LF?D?T?$KN?R?r?$KD?$KM?$LF?$LB?G?$LA?S@ ; `string'
PUBLIC	??_C@_0EO@NGJGJCKH@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ ; `string'
PUBLIC	??_C@_0EO@DKDPOCDP@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ ; `string'
PUBLIC	??_C@_0EN@LEGFOBHM@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ ; `string'
PUBLIC	??_C@_0EN@HOOHFPLN@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ ; `string'
PUBLIC	??_C@_0DD@EDDOLGC@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?$KD?$KM?F?U?M?$KI?M@ ; `string'
PUBLIC	?__LINE__Var@?0??OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBGameParameter'::`1'::__LINE__Var
PUBLIC	??_C@_0DH@PICEIPLI@?F?$LN?L?$KI?J?$PN?$LO?$NN?$LP?b?$LH?$PO?N?q?W?i?$LM?$PO?$LA?f?$LB?$LO?W?$KC?$LC?a?P?E?O?$KC?S@ ; `string'
PUBLIC	?__LINE__Var@?0??OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBGameColumnInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBGameAndroidInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBGameAndroidParameter'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBGamePropertyBuff'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCMemberDayQueryInfoResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCMemberDayPresentResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCMemberDayGiftResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserInsureInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserInsureSuccess'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserInsureFailure'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserInsureUserInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserInsureEnableResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPropertySuccess'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPropertyFailure'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBGamePropertyBuy'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPurchaseResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBExChangeResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCUserCheckInResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCCheckInReward'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCBaseEnsureResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserTaskInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBUserTaskResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBSystemMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCGrowLevelParameter'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBPCGrowLevelUpgrade'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBCreateSucess'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@LPANEFD@?$LE?$LE?$LN?$KI?W?$MA?W?S?W?x?O?B?J?$KH?$LA?$NM@ ; `string'
PUBLIC	?__LINE__Var@?0??OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBCreateFailure'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBCancelCreateTable'::`1'::__LINE__Var
PUBLIC	??_C@_0P@LGKLJHBF@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BL@EKGKFEBG@?S?N?O?$LH?N?$LE?$LP?$KK?J?$LM?$KD?$KM?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CD@JHECHKJE@?$LH?$LP?V?w?M?K?$LD?v?S?N?O?$LH?$LL?r?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I@ ; `string'
PUBLIC	??_C@_0BF@BBCEPGNP@?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I?$KC?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CJ@IPIKOHBH@?T?$LM?U?$LN?$LJ?f?$LG?$KI?$LP?$KK?J?$LM?J?$LB?$LM?d?$LF?$LN?N?$LE?$LP?$KK?J?$LM?S?N?O?$LH?$KD?$KM?S@ ; `string'
PUBLIC	?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBLoadPersonalParameter'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBDissumeTableResult'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA ; `CAttemperEngineSink::OnDBCurrenceRoomCardAndBeant'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA ; `CAttemperEngineSink::OnTCPSocketMainRegister'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA ; `CAttemperEngineSink::OnTCPSocketMainPersonalRoomRegister'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA ; `CAttemperEngineSink::OnTCPSocketMainServiceInfo'::`1'::__LINE__Var
PUBLIC	??_C@_0BF@OAHKEPFP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?N?J?$PN?$LC?$LL?U?$PN?H?$LH?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA ; `CAttemperEngineSink::OnTCPSocketMainUserCollect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA ; `CAttemperEngineSink::OnTCPSocketMainAndroidService'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainInsure'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainMatch'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainPersonalTable'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainGame'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainFrame'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubLogonUserID'::`1'::__LINE__Var
PUBLIC	??_C@_0CL@OCEOPNCD@?$LB?$KH?G?$LI?$KD?$KM?D?z?J?d?H?k?$LF?D?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G@ ; `string'
PUBLIC	??_C@_0CP@JGONOMBF@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LJ?X?$LB?U?A?K?$KD?$KM?$LC@ ; `string'
PUBLIC	??_C@_0DD@PBGKLFPO@?$LI?C?U?J?$LK?E?R?Q?T?Z?$LE?K?$LH?$LP?$LM?d?S?N?O?$LH?$KD?$KM?G?R?$LC?$LL?T?J?P?m?L@ ; `string'
PUBLIC	??_C@_0CL@KDGAPOGL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LF?G?B?$LM?C?$NM?B?k?$LE?m?N?s?$KD?$KM?$LC?$LL?T?J?P@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubLogonMobile'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubLogonAccounts'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserRule'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserLookon'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserSitDown'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@BCDLHLAL@?$LE?m?N?s?$LF?D?$LH?$LP?$LM?d?G?k?G?s?$KD?$KM?G?k?I?T?$LK?s?T?Y?J?T?$KD?$KB@ ; `string'
PUBLIC	??_C@_0EF@JJCEJGNN@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?N?$KK?$LL?$LM?A?K?$KD?$KM?T?$NN?J@ ; `string'
PUBLIC	??_C@_0DP@DPCOLKLL@?S?I?S?Z?$LE?K?S?N?O?$LH?W?$MA?T?$NN?J?$LB?C?$LL?S?P?$LP?I?R?T?H?C?D?z?$LM?S?H@ ; `string'
PUBLIC	??_C@_0DD@KHGFKAPM@?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?C?$LL?S?P?$LP?U?S?$OA?$LF?D?N?$LL?V?C?A?K?$KD?$KM?G?k?Q@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserStandUp'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@JLGPNJOP@?T?$LM?U?$LN?N?$LE?$LN?a?J?x?$KD?$KM?$LC?$LL?D?$NM?$MA?k?$LP?$KK?S?N?O?$LH?$KD?$KM?G?k?O?H?M@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserChat'::`1'::__LINE__Var
PUBLIC	??_C@_0CH@OBNELMKK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LE?s?L@ ; `string'
PUBLIC	??_C@_0DN@EKHAPMJC@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LE?s?L?$PM?$LH?$KC?Q?T?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserExpression'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubWisperChat'::`1'::__LINE__Var
PUBLIC	??_C@_0CD@EOEHCMPC@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?K?$LN?A@ ; `string'
PUBLIC	??_C@_0DB@MDMMFNJG@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LC?$LL?T?J?P?m?T?Z?S?N?O?$LH?V?P?S@ ; `string'
PUBLIC	??_C@_0DN@JGPLIPLP@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LH?$KC?K?M?K?$LN?A?D?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubWisperExpression'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubGamePropertyBuy'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubPropertyBackpack'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubPropertyUse'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubQuerySendPresent'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubPropertyPresent'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubGetSendPresent'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetwordSubSendTrumpet'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@BLADOFOC@?$LB?H?H?$PM?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BL@GEANMNIE@?A?$LH?O?$LA?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserInviteReq'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserRepulseSit'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@KFOICNLL@?$LE?K?W?$MA?S?P?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?S?k?D?z?M?$KM?W?$MA?S?N?O?$LH?$KD@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubMemberKickUser'::`1'::__LINE__Var
PUBLIC	??_C@_0CB@KLELGMNL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?L?$NP?$LD?v?$LJ?$NM?$MA?m?T?$LB?J?G?$LC?$LL?$LB?$LL?T?J?P?m?$LF?D?$KD@ ; `string'
PUBLIC	??_C@_0BL@FDOJANAH@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?$LC?$LL?P?m?L?$NP?H?K?$KD?$KB@ ; `string'
PUBLIC	??_C@_0DA@FMANDGLC@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?S?N?O?$LH?V?P?0?D?z?$LC?$LL@ ; `string'
PUBLIC	??_C@_0DE@ODOOJLKG@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?J?$LJ?S?C?$LH?$MA?L?$NP?$LP?$KI?0@ ; `string'
PUBLIC	??_C@_0BD@DKHPFDBP@?D?c?R?Q?$LB?$LL?$CFs?G?k?$MA?k?W?$MA?W?S?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserInfoReq'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@OFHFAKJ@OnTCPNetworkSubUserInfoReq@	; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubUserChairReq'::`1'::__LINE__Var
PUBLIC	??_C@_0BM@GOINLOJB@OnTCPNetworkSubUserChairReq@	; `string'
PUBLIC	??_C@_0BH@GBDECKFN@?C?$LL?U?R?$LF?$LN?$LP?I?$LN?x?H?k?$LF?D?S?N?O?$LH?W?$MA?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubChairUserInfoReq'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubGrowLevelQuery'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubPurchaseMember'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByIngot'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByBeans'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubQueryInsureInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubEnableInsureRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubSaveScoreRequest'::`1'::__LINE__Var
PUBLIC	??_C@_0CD@DACLODCK@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@ ; `string'
PUBLIC	??_C@_0CD@MMKIAMDO@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@ ; `string'
PUBLIC	??_C@_0DL@FGFMEKII@?S?I?S?Z?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?S?N?O?$LH?$LB?R?$LP?I?$LE?f?H?k?$LG@ ; `string'
PUBLIC	??_C@_0CD@DPHNMKOK@?D?z?$LF?D?S?N?O?$LH?$LB?R?S?$OA?$LG?n?$LC?$LL?W?c?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubTakeScoreRequest'::`1'::__LINE__Var
PUBLIC	??_C@_0CD@FDAGJDOL@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@ ; `string'
PUBLIC	??_C@_0CD@KPIFHMPP@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubTransferScoreRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubQueryUserInfoRequest'::`1'::__LINE__Var
PUBLIC	??_C@_0BF@KCLAAAGP@?G?k?J?d?H?k?$LK?O?$LH?$KI?$LF?D?M?f?$LM?RID?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubCheckInQueryRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubCheckInDoneRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubTakeTaskRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubTaskRewardRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubLoadTaskInfoRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubGiveUpTaskRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubMemberQueryInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubMemberDayPresent'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubMemberDayGift'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubBaseEnsureTakeRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubQueryOption'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubOptionServer'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@HAEGHLFE@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$PO?N?q?F?w?$LH?$LP?$LM?d?$LF?D?$KB?$LA?T?K?P?P?V?$LF?$KB?$LB?W@ ; `string'
PUBLIC	??_C@_0CH@EPNGOIIN@?T?$LG?$LD?L?P?$NO?$LI?D?$LH?$LP?$LM?d?E?d?V?C?M?$KI?V?$KK?5?$LJ?$NM?$MA?m?T?$LB?5?$CFs?5@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubManagerKickUser'::`1'::__LINE__Var
PUBLIC	??_C@_0BH@LKMDCKF@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?W?$MA?W?S?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BN@NHDPIONK@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubLimitUserChat'::`1'::__LINE__Var
PUBLIC	??_C@_0BH@DNGDNDFB@?S?C?$LL?$KH?A?D?L?l?H?$KI?O?$NO?E?d?V?C?$LD?I?$LJ?$KG?$KD?$KB@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubKickAllUser'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubSendMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubDismissGame'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@HMAGCPIB@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?W?$MA?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?$LN?b?I?$KC?S?N?O?$LH@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubWarningUser'::`1'::__LINE__Var
PUBLIC	??_C@_08EGGGBJKA@?$LO?$KP?$LI?f?$KD?$LK?$CFs@	; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubRoomCheat'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubCreateTable'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@DJFGALCD@?D?$LP?G?$LA?$LI?C?S?N?O?$LH?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?B?z?$KD?$KM?G?k?I?T?$LK?s?T@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubCancelRequest'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubRequestReply'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkSubHostDissumeTable'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z@4JA ; `CAttemperEngineSink::OnEventUserLogon'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@KGCLMCGJ@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KM?W?$KD?D?z?S@ ; `string'
PUBLIC	?__LINE__Var@?0??PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z@4JA ; `CAttemperEngineSink::PerformTaskProgress'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z@4JA ; `CAttemperEngineSink::PerformRoomTaskProgress'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z@4JA ; `CAttemperEngineSink::SwitchUserItemConnect'::`1'::__LINE__Var
PUBLIC	??_C@_0DJ@GOKIFCOM@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@ ; `string'
PUBLIC	??_C@_0DL@JOMAFBAE@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@ ; `string'
PUBLIC	?__LINE__Var@?0??SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z@4JA ; `CAttemperEngineSink::SendInsureFailure'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z@4JA ; `CAttemperEngineSink::SendUserInfoPacket'::`1'::__LINE__Var
PUBLIC	??_C@_0CD@EJEBAEKE@?T?y?K?M?J?$KH?$LA?$NM?$KD?$KM?D?z?R?$KK?T?y?K?M?$LF?D?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP@ ; `string'
PUBLIC	??_C@_0CA@DODBMCGI@?$LE?K?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LF?$MA?$LO?$NP?0?$LJ?$LK?B?r?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0BK@PJNAMAD@?$LE?K?$LF?$MA?$LO?$NP?$LL?$LJ?N?$LE?F?t?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BO@BJFEPHFF@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?W?T?$LM?$LK?J?$LJ?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CN@PKMMDIPC@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?M?f?$LM?R?0?V?$LL?D?$NM?W?T?$LM?$LK?J?$LJ@ ; `string'
PUBLIC	??_C@_0CE@NGJLFFIP@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?E?T?$LJ?$NL?S?C?$LL?$KH?0?$LJ?$LK?B?r?J?$KH@ ; `string'
PUBLIC	??_C@_0DD@NEAJDNEE@?D?z?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC?$LL?P?h?R@ ; `string'
PUBLIC	??_C@_0DH@KNCICMPD@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC@ ; `string'
PUBLIC	??_C@_0DA@MICEKNAN@?D?z?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h?R?$KK?J?$LJ@ ; `string'
PUBLIC	??_C@_0DE@EDOEDLLN@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h@ ; `string'
PUBLIC	?__LINE__Var@?0??GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z@4JA ; `CAttemperEngineSink::GetBindUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z@4JA ; `CAttemperEngineSink::GetBindParameter'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetPropertyType@CAttemperEngineSink@@QAEGG@Z@4JA ; `CAttemperEngineSink::GetPropertyType'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??PerformDistribute@CAttemperEngineSink@@IAE_NXZ@4JA ; `CAttemperEngineSink::PerformDistribute'::`1'::__LINE__Var
PUBLIC	??_7?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`vftable'
PUBLIC	??_C@_0M@OHDHAOMF@?$LH?V?E?d?S?C?$LL?$KH1?$AN?6@ ; `string'
PUBLIC	??_C@_0M@PFICKBCL@?$LH?V?E?d?S?C?$LL?$KH2?$AN?6@ ; `string'
PUBLIC	??_C@_0M@ENDOMGEO@?$LH?V?E?d?S?C?$LL?$KH3?$AN?6@ ; `string'
PUBLIC	??_C@_0P@CMOCDKCC@?$LH?V?E?d?S?C?$LL?$KH4?9?$CFs?$AN?6@ ; `string'
PUBLIC	??_C@_0L@JCGJHCKC@?W?x?O?B?J?$KH?$LA?$NM?$KD?$KB@ ; `string'
PUBLIC	??_C@_09FMIBEIGP@?$LH?V?E?d?S?C?$LL?$KH5@	; `string'
PUBLIC	??_C@_09HHKMBLKM@?$LH?V?E?d?S?C?$LL?$KH6@	; `string'
PUBLIC	??_C@_09GOLHCKON@?$LH?V?E?d?S?C?$LL?$KH7@	; `string'
PUBLIC	??_C@_09OJCPDGCC@?$LH?V?E?d?S?C?$LL?$KH8@	; `string'
PUBLIC	?__LINE__Var@?0??InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ@4JA ; `CAttemperEngineSink::InitTableFrameArray'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z@4JA ; `CAttemperEngineSink::InsertDistribute'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z@4JA ; `CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z@4JA ; `CAttemperEngineSink::SendUserInfoPacketBatchToPage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z@4JA ; `CAttemperEngineSink::SendSystemMessage'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAttemperEngineSink@@6B@			; IAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAttemperEngineSink@@@8			; IAttemperEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3IAttemperEngineSink@@8			; IAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAttemperEngineSink@@8			; IAttemperEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAttemperEngineSink@@8		; IAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IServerUserItemSink@@6B@			; IServerUserItemSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIServerUserItemSink@@@8			; IServerUserItemSink `RTTI Type Descriptor'
PUBLIC	??_R3IServerUserItemSink@@8			; IServerUserItemSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IServerUserItemSink@@8			; IServerUserItemSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IServerUserItemSink@@8		; IServerUserItemSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IMainServiceFrame@@6B@			; IMainServiceFrame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIMainServiceFrame@@@8			; IMainServiceFrame `RTTI Type Descriptor'
PUBLIC	??_R3IMainServiceFrame@@8			; IMainServiceFrame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMainServiceFrame@@8			; IMainServiceFrame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMainServiceFrame@@8		; IMainServiceFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@	; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCTableFrame@@ABQAV1@@@@8	; CWHArray<CTableFrame *,CTableFrame * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCTableFrame@@ABQAV1@@@8	; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCTableFrame@@ABQAV1@@@8	; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCTableFrame@@ABQAV1@@@8 ; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@UtagDistributeInfo@@ABU1@@@@8 ; CWHArray<tagDistributeInfo,tagDistributeInfo const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@UtagDistributeInfo@@ABU1@@@8	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@UtagDistributeInfo@@ABU1@@@8	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@UtagDistributeInfo@@ABU1@@@8 ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PBDABQBD@@6B@			; CWHArray<char const *,char const * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PBDABQBD@@@8			; CWHArray<char const *,char const * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PBDABQBD@@8			; CWHArray<char const *,char const * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PBDABQBD@@8			; CWHArray<char const *,char const * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PBDABQBD@@8		; CWHArray<char const *,char const * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSensitiveWordsFilter@@6B@			; CSensitiveWordsFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSensitiveWordsFilter@@@8		; CSensitiveWordsFilter `RTTI Type Descriptor'
PUBLIC	??_R3CSensitiveWordsFilter@@8			; CSensitiveWordsFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSensitiveWordsFilter@@8			; CSensitiveWordsFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSensitiveWordsFilter@@8		; CSensitiveWordsFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@@8 ; CWHArray<tagSystemMessage *,tagSystemMessage * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8 ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KKKAAK@@6B@				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KKKAAK@@@8			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KKKAAK@@8				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KKKAAK@@8				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KKKAAK@@8			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@@8 ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAttemperEngineSink@@6BIAttemperEngineSink@@@ ; CAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAttemperEngineSink@@@8			; CAttemperEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3CAttemperEngineSink@@8			; CAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAttemperEngineSink@@8			; CAttemperEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAttemperEngineSink@@8		; CAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IMainServiceFrame@@8		; IMainServiceFrame::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@IServerUserItemSink@@8		; IServerUserItemSink::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R4CAttemperEngineSink@@6BIMainServiceFrame@@@ ; CAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R4CAttemperEngineSink@@6BIServerUserItemSink@@@ ; CAttemperEngineSink::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	__imp__lstrcmpA@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp__srand:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z:PROC
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Trim@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??2@YAPAXIPBDH@Z:PROC				; operator new
EXTRN	??3@YAXPAXPBDH@Z:PROC				; operator delete
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	__imp_??0CUserTaskManager@@QAE@XZ:PROC
EXTRN	__imp_??1CUserTaskManager@@UAE@XZ:PROC
EXTRN	__imp_?ResetTaskManager@CUserTaskManager@@QAEXXZ:PROC
EXTRN	__imp_??0CServerUserManager@@QAE@XZ:PROC
EXTRN	__imp_??1CServerUserManager@@UAE@XZ:PROC
EXTRN	__imp_??0CAndroidUserManager@@QAE@XZ:PROC
EXTRN	__imp_??1CAndroidUserManager@@UAE@XZ:PROC
EXTRN	__imp_?SetMainServiceFrame@CAndroidUserManager@@QAEXPAUIMainServiceFrame@@@Z:PROC
EXTRN	__imp_?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z:PROC
EXTRN	__imp_??0CGamePropertyManager@@QAE@XZ:PROC
EXTRN	__imp_??1CGamePropertyManager@@UAE@XZ:PROC
EXTRN	__imp_?SetGamePropertyBuff@CGamePropertyManager@@QAE_NKQBUtagPropertyBuff@@G@Z:PROC
EXTRN	__imp_?ClearUserBuff@CGamePropertyManager@@QAE_NK@Z:PROC
EXTRN	__imp_?SearchPropertyItem@CGamePropertyManager@@QAEPAUtagPropertyInfo@@G@Z:PROC
EXTRN	__imp_?SearchValidPropertyBuff@CGamePropertyManager@@SAPAUtagPropertyBuff@@KW4PROP_KIND@@@Z:PROC
EXTRN	??0CTableFrame@@QAE@XZ:PROC			; CTableFrame::CTableFrame
EXTRN	?GetRandNullChairID@CTableFrame@@QAEGXZ:PROC	; CTableFrame::GetRandNullChairID
EXTRN	?GetSitUserCount@CTableFrame@@QAEGXZ:PROC	; CTableFrame::GetSitUserCount
EXTRN	?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z:PROC ; CTableFrame::GetTableUserInfo
EXTRN	?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z:PROC ; CTableFrame::InitializationFrame
EXTRN	?OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z:PROC ; CTableFrame::OnEventUserOffLine
EXTRN	?OnEventTimer@CTableFrame@@QAE_NKI@Z:PROC	; CTableFrame::OnEventTimer
EXTRN	?OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z:PROC ; CTableFrame::OnEventSocketGame
EXTRN	?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z:PROC ; CTableFrame::OnEventSocketFrame
EXTRN	?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z:PROC ; CTableFrame::SendRequestFailure
EXTRN	?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z:PROC ; CTableFrame::EfficacyEnterTableScoreRule
EXTRN	??0CServerListManager@NServerListManager@@QAE@XZ:PROC ; NServerListManager::CServerListManager::CServerListManager
EXTRN	??1CServerListManager@NServerListManager@@UAE@XZ:PROC ; NServerListManager::CServerListManager::~CServerListManager
EXTRN	?ResetServerList@CServerListManager@NServerListManager@@QAEXXZ:PROC ; NServerListManager::CServerListManager::ResetServerList
EXTRN	?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ:PROC ; NServerListManager::CServerListManager::CleanServerItem
EXTRN	?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ:PROC ; NServerListManager::CServerListManager::DisuseServerItem
EXTRN	?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z:PROC ; NServerListManager::CServerListManager::InsertGameServer
EXTRN	?DeleteGameServer@CServerListManager@NServerListManager@@QAE_NG@Z:PROC ; NServerListManager::CServerListManager::DeleteGameServer
EXTRN	?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z:PROC ; NServerListManager::CServerListManager::SearchGameServer
EXTRN	??0CDistributeManager@@QAE@XZ:PROC		; CDistributeManager::CDistributeManager
EXTRN	??1CDistributeManager@@UAE@XZ:PROC		; CDistributeManager::~CDistributeManager
EXTRN	?RemoveAll@CDistributeManager@@QAEXXZ:PROC	; CDistributeManager::RemoveAll
EXTRN	?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z:PROC ; CDistributeManager::RemoveDistributeNode
EXTRN	?RemoveDistributeNode@CDistributeManager@@QAEXPBUIServerUserItem@@@Z:PROC ; CDistributeManager::RemoveDistributeNode
EXTRN	?InsertDistributeNode@CDistributeManager@@QAEHABUtagDistributeInfo@@@Z:PROC ; CDistributeManager::InsertDistributeNode
EXTRN	?PerformDistribute@CDistributeManager@@QAEGAAV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z:PROC ; CDistributeManager::PerformDistribute
EXTRN	??_E?$CWHArray@PBDABQBD@@UAEPAXI@Z:PROC		; CWHArray<char const *,char const * const &>::`vector deleting destructor'
EXTRN	??1CFilterTree@@QAE@XZ:PROC			; CFilterTree::~CFilterTree
EXTRN	?ResetSensitiveWordArray@CSensitiveWordsFilter@@QAEXXZ:PROC ; CSensitiveWordsFilter::ResetSensitiveWordArray
EXTRN	?AddSensitiveWords@CSensitiveWordsFilter@@QAE_NPBD@Z:PROC ; CSensitiveWordsFilter::AddSensitiveWords
EXTRN	?FinishAdd@CSensitiveWordsFilter@@QAEXXZ:PROC	; CSensitiveWordsFilter::FinishAdd
EXTRN	?Filtrate@CSensitiveWordsFilter@@QAEXPBDPADH@Z:PROC ; CSensitiveWordsFilter::Filtrate
EXTRN	??_ECSensitiveWordsFilter@@UAEPAXI@Z:PROC	; CSensitiveWordsFilter::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAEPAXI@Z:PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::`vector deleting destructor'
EXTRN	??_E?$CMap@KKKAAK@@UAEPAXI@Z:PROC		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`vector deleting destructor'
EXTRN	??_ECAttemperEngineSink@@UAEPAXI@Z:PROC		; CAttemperEngineSink::`vector deleting destructor'
EXTRN	?PostControlRequest@CServiceUnits@@QAE_NGPAXG@Z:PROC ; CServiceUnits::PostControlRequest
EXTRN	?RectifyServiceParameter@CServiceUnits@@IAE_NXZ:PROC ; CServiceUnits::RectifyServiceParameter
EXTRN	??_E?$CWHArray@UtagDistributeInfo@@ABU1@@@UAEPAXI@Z:PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
EXTRN	__allrem:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_pServiceUnits@CServiceUnits@@2PAV1@A:DWORD	; CServiceUnits::g_pServiceUnits
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R4CAttemperEngineSink@@6BIServerUserItemSink@@@
rdata$r	SEGMENT
??_R4CAttemperEngineSink@@6BIServerUserItemSink@@@ DD 00H ; CAttemperEngineSink::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngineSink@@@8
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R4CAttemperEngineSink@@6BIMainServiceFrame@@@
rdata$r	SEGMENT
??_R4CAttemperEngineSink@@6BIMainServiceFrame@@@ DD 00H	; CAttemperEngineSink::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngineSink@@@8
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@IServerUserItemSink@@8
rdata$r	SEGMENT
??_R17?0A@EA@IServerUserItemSink@@8 DD FLAT:??_R0?AUIServerUserItemSink@@@8 ; IServerUserItemSink::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IServerUserItemSink@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@IMainServiceFrame@@8
rdata$r	SEGMENT
??_R13?0A@EA@IMainServiceFrame@@8 DD FLAT:??_R0?AUIMainServiceFrame@@@8 ; IMainServiceFrame::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMainServiceFrame@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAttemperEngineSink@@8 DD FLAT:??_R0?AVCAttemperEngineSink@@@8 ; CAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R2CAttemperEngineSink@@8 DD FLAT:??_R1A@?0A@EA@CAttemperEngineSink@@8 ; CAttemperEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAttemperEngineSink@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R13?0A@EA@IMainServiceFrame@@8
	DD	FLAT:??_R13?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R17?0A@EA@IServerUserItemSink@@8
	DD	FLAT:??_R17?0A@EC@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R3CAttemperEngineSink@@8 DD 00H			; CAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	07H
	DD	FLAT:??_R2CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAttemperEngineSink@@@8
data$r	SEGMENT
??_R0?AVCAttemperEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; CAttemperEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAttemperEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAttemperEngineSink@@6BIAttemperEngineSink@@@
rdata$r	SEGMENT
??_R4CAttemperEngineSink@@6BIAttemperEngineSink@@@ DD 00H ; CAttemperEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngineSink@@@8
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@@8 ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8 DD 00H ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KKKAAK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KKKAAK@@8 DD FLAT:??_R0?AV?$CMap@KKKAAK@@@8 ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KKKAAK@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KKKAAK@@8
rdata$r	SEGMENT
??_R2?$CMap@KKKAAK@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KKKAAK@@8 ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KKKAAK@@8
rdata$r	SEGMENT
??_R3?$CMap@KKKAAK@@8 DD 00H				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KKKAAK@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KKKAAK@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KKKAAK@@@8 DD FLAT:??_7type_info@@6B@	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KKKAAK@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KKKAAK@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KKKAAK@@6B@ DD 00H				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KKKAAK@@@8
	DD	FLAT:??_R3?$CMap@KKKAAK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@@8 ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8 ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8 DD 00H	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSensitiveWordsFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSensitiveWordsFilter@@8 DD FLAT:??_R0?AVCSensitiveWordsFilter@@@8 ; CSensitiveWordsFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSensitiveWordsFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2CSensitiveWordsFilter@@8
rdata$r	SEGMENT
??_R2CSensitiveWordsFilter@@8 DD FLAT:??_R1A@?0A@EA@CSensitiveWordsFilter@@8 ; CSensitiveWordsFilter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSensitiveWordsFilter@@8
rdata$r	SEGMENT
??_R3CSensitiveWordsFilter@@8 DD 00H			; CSensitiveWordsFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSensitiveWordsFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSensitiveWordsFilter@@@8
data$r	SEGMENT
??_R0?AVCSensitiveWordsFilter@@@8 DD FLAT:??_7type_info@@6B@ ; CSensitiveWordsFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSensitiveWordsFilter@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSensitiveWordsFilter@@6B@
rdata$r	SEGMENT
??_R4CSensitiveWordsFilter@@6B@ DD 00H			; CSensitiveWordsFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSensitiveWordsFilter@@@8
	DD	FLAT:??_R3CSensitiveWordsFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PBDABQBD@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PBDABQBD@@8 DD FLAT:??_R0?AV?$CWHArray@PBDABQBD@@@8 ; CWHArray<char const *,char const * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PBDABQBD@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PBDABQBD@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PBDABQBD@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PBDABQBD@@8 ; CWHArray<char const *,char const * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PBDABQBD@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PBDABQBD@@8 DD 00H			; CWHArray<char const *,char const * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PBDABQBD@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PBDABQBD@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PBDABQBD@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<char const *,char const * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PBDABQBD@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PBDABQBD@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PBDABQBD@@6B@ DD 00H			; CWHArray<char const *,char const * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PBDABQBD@@@8
	DD	FLAT:??_R3?$CWHArray@PBDABQBD@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@UtagDistributeInfo@@ABU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@UtagDistributeInfo@@ABU1@@@8 DD FLAT:??_R0?AV?$CWHArray@UtagDistributeInfo@@ABU1@@@@8 ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@UtagDistributeInfo@@ABU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@UtagDistributeInfo@@ABU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@UtagDistributeInfo@@ABU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@UtagDistributeInfo@@ABU1@@@8 ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@UtagDistributeInfo@@ABU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@UtagDistributeInfo@@ABU1@@@8 DD 00H	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@UtagDistributeInfo@@ABU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@UtagDistributeInfo@@ABU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@UtagDistributeInfo@@ABU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@UtagDistributeInfo@@ABU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@ DD 00H	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@UtagDistributeInfo@@ABU1@@@@8
	DD	FLAT:??_R3?$CWHArray@UtagDistributeInfo@@ABU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCTableFrame@@ABQAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCTableFrame@@ABQAV1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCTableFrame@@ABQAV1@@@@8 ; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCTableFrame@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCTableFrame@@ABQAV1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCTableFrame@@ABQAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCTableFrame@@ABQAV1@@@8 ; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCTableFrame@@ABQAV1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCTableFrame@@ABQAV1@@@8 DD 00H	; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCTableFrame@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCTableFrame@@ABQAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCTableFrame@@ABQAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<CTableFrame *,CTableFrame * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCTableFrame@@ABQAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@ DD 00H	; CWHArray<CTableFrame *,CTableFrame * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCTableFrame@@ABQAV1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCTableFrame@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IMainServiceFrame@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMainServiceFrame@@8 DD FLAT:??_R0?AUIMainServiceFrame@@@8 ; IMainServiceFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMainServiceFrame@@8
rdata$r	ENDS
;	COMDAT ??_R2IMainServiceFrame@@8
rdata$r	SEGMENT
??_R2IMainServiceFrame@@8 DD FLAT:??_R1A@?0A@EA@IMainServiceFrame@@8 ; IMainServiceFrame::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IMainServiceFrame@@8
rdata$r	SEGMENT
??_R3IMainServiceFrame@@8 DD 00H			; IMainServiceFrame::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IMainServiceFrame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMainServiceFrame@@@8
data$r	SEGMENT
??_R0?AUIMainServiceFrame@@@8 DD FLAT:??_7type_info@@6B@ ; IMainServiceFrame `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIMainServiceFrame@@', 00H
data$r	ENDS
;	COMDAT ??_R4IMainServiceFrame@@6B@
rdata$r	SEGMENT
??_R4IMainServiceFrame@@6B@ DD 00H			; IMainServiceFrame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIMainServiceFrame@@@8
	DD	FLAT:??_R3IMainServiceFrame@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IServerUserItemSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IServerUserItemSink@@8 DD FLAT:??_R0?AUIServerUserItemSink@@@8 ; IServerUserItemSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IServerUserItemSink@@8
rdata$r	ENDS
;	COMDAT ??_R2IServerUserItemSink@@8
rdata$r	SEGMENT
??_R2IServerUserItemSink@@8 DD FLAT:??_R1A@?0A@EA@IServerUserItemSink@@8 ; IServerUserItemSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IServerUserItemSink@@8
rdata$r	SEGMENT
??_R3IServerUserItemSink@@8 DD 00H			; IServerUserItemSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IServerUserItemSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIServerUserItemSink@@@8
data$r	SEGMENT
??_R0?AUIServerUserItemSink@@@8 DD FLAT:??_7type_info@@6B@ ; IServerUserItemSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIServerUserItemSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4IServerUserItemSink@@6B@
rdata$r	SEGMENT
??_R4IServerUserItemSink@@6B@ DD 00H			; IServerUserItemSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIServerUserItemSink@@@8
	DD	FLAT:??_R3IServerUserItemSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAttemperEngineSink@@8 DD FLAT:??_R0?AUIAttemperEngineSink@@@8 ; IAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R2IAttemperEngineSink@@8 DD FLAT:??_R1A@?0A@EA@IAttemperEngineSink@@8 ; IAttemperEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R3IAttemperEngineSink@@8 DD 00H			; IAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAttemperEngineSink@@@8
data$r	SEGMENT
??_R0?AUIAttemperEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; IAttemperEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAttemperEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAttemperEngineSink@@6B@
rdata$r	SEGMENT
??_R4IAttemperEngineSink@@6B@ DD 00H			; IAttemperEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAttemperEngineSink@@@8
	DD	FLAT:??_R3IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z@4JA DD 02a39H ; `CAttemperEngineSink::SendSystemMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z@4JA DD 0299dH ; `CAttemperEngineSink::SendUserInfoPacketBatchToPage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z@4JA DD 028f6H ; `CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z@4JA DD 02830H ; `CAttemperEngineSink::InsertDistribute'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ@4JA DD 027a0H ; `CAttemperEngineSink::InitTableFrameArray'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09OJCPDGCC@?$LH?V?E?d?S?C?$LL?$KH8@
CONST	SEGMENT
??_C@_09OJCPDGCC@?$LH?V?E?d?S?C?$LL?$KH8@ DB 0b7H, 0d6H, 0c5H, 0e4H, 0d3H
	DB	0c3H, 0bbH, 0a7H, '8', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09GOLHCKON@?$LH?V?E?d?S?C?$LL?$KH7@
CONST	SEGMENT
??_C@_09GOLHCKON@?$LH?V?E?d?S?C?$LL?$KH7@ DB 0b7H, 0d6H, 0c5H, 0e4H, 0d3H
	DB	0c3H, 0bbH, 0a7H, '7', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HHKMBLKM@?$LH?V?E?d?S?C?$LL?$KH6@
CONST	SEGMENT
??_C@_09HHKMBLKM@?$LH?V?E?d?S?C?$LL?$KH6@ DB 0b7H, 0d6H, 0c5H, 0e4H, 0d3H
	DB	0c3H, 0bbH, 0a7H, '6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMIBEIGP@?$LH?V?E?d?S?C?$LL?$KH5@
CONST	SEGMENT
??_C@_09FMIBEIGP@?$LH?V?E?d?S?C?$LL?$KH5@ DB 0b7H, 0d6H, 0c5H, 0e4H, 0d3H
	DB	0c3H, 0bbH, 0a7H, '5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JCGJHCKC@?W?x?O?B?J?$KH?$LA?$NM?$KD?$KB@
CONST	SEGMENT
??_C@_0L@JCGJHCKC@?W?x?O?B?J?$KH?$LA?$NM?$KD?$KB@ DB 0d7H, 0f8H, 0cfH, 0c2H
	DB	0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CMOCDKCC@?$LH?V?E?d?S?C?$LL?$KH4?9?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0P@CMOCDKCC@?$LH?V?E?d?S?C?$LL?$KH4?9?$CFs?$AN?6@ DB 0b7H, 0d6H, 0c5H
	DB	0e4H, 0d3H, 0c3H, 0bbH, 0a7H, '4-%s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ENDOMGEO@?$LH?V?E?d?S?C?$LL?$KH3?$AN?6@
CONST	SEGMENT
??_C@_0M@ENDOMGEO@?$LH?V?E?d?S?C?$LL?$KH3?$AN?6@ DB 0b7H, 0d6H, 0c5H, 0e4H
	DB	0d3H, 0c3H, 0bbH, 0a7H, '3', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PFICKBCL@?$LH?V?E?d?S?C?$LL?$KH2?$AN?6@
CONST	SEGMENT
??_C@_0M@PFICKBCL@?$LH?V?E?d?S?C?$LL?$KH2?$AN?6@ DB 0b7H, 0d6H, 0c5H, 0e4H
	DB	0d3H, 0c3H, 0bbH, 0a7H, '2', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHDHAOMF@?$LH?V?E?d?S?C?$LL?$KH1?$AN?6@
CONST	SEGMENT
??_C@_0M@OHDHAOMF@?$LH?V?E?d?S?C?$LL?$KH1?$AN?6@ DB 0b7H, 0d6H, 0c5H, 0e4H
	DB	0d3H, 0c3H, 0bbH, 0a7H, '1', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@ DD FLAT:??_R4?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@UtagDistributeInfo@@ABU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PerformDistribute@CAttemperEngineSink@@IAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformDistribute@CAttemperEngineSink@@IAE_NXZ@4JA DD 026fcH ; `CAttemperEngineSink::PerformDistribute'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetPropertyType@CAttemperEngineSink@@QAEGG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetPropertyType@CAttemperEngineSink@@QAEGG@Z@4JA DD 026c5H ; `CAttemperEngineSink::GetPropertyType'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z@4JA DD 026adH ; `CAttemperEngineSink::GetBindParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z@4JA DD 0269bH ; `CAttemperEngineSink::GetBindUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DE@EDOEDLLN@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h@
CONST	SEGMENT
??_C@_0DE@EDOEDLLN@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h@ DB '['
	DB	' %s ]', 0cfH, 0d6H, 0d4H, 0daH, 0b5H, 0c4H, 0ccH, 0d3H, 0c5H, 0dcH
	DB	0c2H, 0caH, 0d2H, 0d1H, 0beH, 0adH, 0ceH, 0aaH, '0', 0a3H, 0acH
	DB	0b2H, 0bbH, 0d0H, 0e8H, 0d2H, 0aaH, 0caH, 0b9H, 0d3H, 0c3H, 0ccH
	DB	0d3H, 0c5H, 0dcH, 0c7H, 0e5H, 0c1H, 0e3H, 0b5H, 0c0H, 0beH, 0dfH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@MICEKNAN@?D?z?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h?R?$KK?J?$LJ@
CONST	SEGMENT
??_C@_0DA@MICEKNAN@?D?z?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h?R?$KK?J?$LJ@ DB 0c4H
	DB	0faH, 0cfH, 0d6H, 0d4H, 0daH, 0b5H, 0c4H, 0ccH, 0d3H, 0c5H, 0dcH
	DB	0c2H, 0caH, 0d2H, 0d1H, 0beH, 0adH, 0ceH, 0aaH, '0', 0a3H, 0acH
	DB	0b2H, 0bbH, 0d0H, 0e8H, 0d2H, 0aaH, 0caH, 0b9H, 0d3H, 0c3H, 0ccH
	DB	0d3H, 0c5H, 0dcH, 0c7H, 0e5H, 0c1H, 0e3H, 0b5H, 0c0H, 0beH, 0dfH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@KNCICMPD@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC@
CONST	SEGMENT
??_C@_0DH@KNCICMPD@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC@ DB '['
	DB	' %s ]', 0cfH, 0d6H, 0d4H, 0daH, 0b5H, 0c4H, 0bbH, 0fdH, 0b7H, 0d6H
	DB	0d2H, 0d1H, 0beH, 0adH, 0caH, 0c7H, 0b7H, 0c7H, 0b8H, 0baH, 0caH
	DB	0fdH, 0a3H, 0acH, 0b2H, 0bbH, 0d0H, 0e8H, 0d2H, 0aaH, 0caH, 0b9H
	DB	0d3H, 0c3H, 0b8H, 0baH, 0b7H, 0d6H, 0c7H, 0e5H, 0c1H, 0e3H, 0b5H
	DB	0c0H, 0beH, 0dfH, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@NEAJDNEE@?D?z?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC?$LL?P?h?R@
CONST	SEGMENT
??_C@_0DD@NEAJDNEE@?D?z?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC?$LL?P?h?R@ DB 0c4H
	DB	0faH, 0cfH, 0d6H, 0d4H, 0daH, 0b5H, 0c4H, 0bbH, 0fdH, 0b7H, 0d6H
	DB	0d2H, 0d1H, 0beH, 0adH, 0caH, 0c7H, 0b7H, 0c7H, 0b8H, 0baH, 0caH
	DB	0fdH, 0a3H, 0acH, 0b2H, 0bbH, 0d0H, 0e8H, 0d2H, 0aaH, 0caH, 0b9H
	DB	0d3H, 0c3H, 0b8H, 0baH, 0b7H, 0d6H, 0c7H, 0e5H, 0c1H, 0e3H, 0b5H
	DB	0c0H, 0beH, 0dfH, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NGJLFFIP@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?E?T?$LJ?$NL?S?C?$LL?$KH?0?$LJ?$LK?B?r?J?$KH@
CONST	SEGMENT
??_C@_0CE@NGJLFFIP@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?E?T?$LJ?$NL?S?C?$LL?$KH?0?$LJ?$LK?B?r?J?$KH@ DB 0b4H
	DB	0cbH, 0b5H, 0c0H, 0beH, 0dfH, 0b2H, 0bbH, 0bfH, 0c9H, 0d4H, 0f9H
	DB	0cbH, 0cdH, 0b8H, 0f8H, 0c5H, 0d4H, 0b9H, 0dbH, 0d3H, 0c3H, 0bbH
	DB	0a7H, ',', 0b9H, 0baH, 0c2H, 0f2H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PKMMDIPC@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?M?f?$LM?R?0?V?$LL?D?$NM?W?T?$LM?$LK?J?$LJ@
CONST	SEGMENT
??_C@_0CN@PKMMDIPC@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?M?f?$LM?R?0?V?$LL?D?$NM?W?T?$LM?$LK?J?$LJ@ DB 0b4H
	DB	0cbH, 0b5H, 0c0H, 0beH, 0dfH, 0b2H, 0bbH, 0bfH, 0c9H, 0d4H, 0f9H
	DB	0cbH, 0cdH, 0b8H, 0f8H, 0cdH, 0e6H, 0bcH, 0d2H, ',', 0d6H, 0bbH
	DB	0c4H, 0dcH, 0d7H, 0d4H, 0bcH, 0baH, 0caH, 0b9H, 0d3H, 0c3H, ','
	DB	0b9H, 0baH, 0c2H, 0f2H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BJFEPHFF@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?W?T?$LM?$LK?J?$LJ?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@
CONST	SEGMENT
??_C@_0BO@BJFEPHFF@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?W?T?$LM?$LK?J?$LJ?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@ DB 0b4H
	DB	0cbH, 0b5H, 0c0H, 0beH, 0dfH, 0b2H, 0bbH, 0bfH, 0c9H, 0d7H, 0d4H
	DB	0bcH, 0baH, 0caH, 0b9H, 0d3H, 0c3H, ',', 0b9H, 0baH, 0c2H, 0f2H
	DB	0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PJNAMAD@?$LE?K?$LF?$MA?$LO?$NP?$LL?$LJ?N?$LE?F?t?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@
CONST	SEGMENT
??_C@_0BK@PJNAMAD@?$LE?K?$LF?$MA?$LO?$NP?$LL?$LJ?N?$LE?F?t?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@ DB 0b4H
	DB	0cbH, 0b5H, 0c0H, 0beH, 0dfH, 0bbH, 0b9H, 0ceH, 0b4H, 0c6H, 0f4H
	DB	0d3H, 0c3H, ',', 0b9H, 0baH, 0c2H, 0f2H, 0caH, 0a7H, 0b0H, 0dcH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DODBMCGI@?$LE?K?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LF?$MA?$LO?$NP?0?$LJ?$LK?B?r?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0CA@DODBMCGI@?$LE?K?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LF?$MA?$LO?$NP?0?$LJ?$LK?B?r?J?$KH?$LA?$NM@ DB 0b4H
	DB	0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0b2H, 0bbH, 0bfH, 0c9H, 0d2H, 0d4H
	DB	0caH, 0b9H, 0d3H, 0c3H, 0b4H, 0cbH, 0b5H, 0c0H, 0beH, 0dfH, ','
	DB	0b9H, 0baH, 0c2H, 0f2H, 0caH, 0a7H, 0b0H, 0dcH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EJEBAEKE@?T?y?K?M?J?$KH?$LA?$NM?$KD?$KM?D?z?R?$KK?T?y?K?M?$LF?D?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP@
CONST	SEGMENT
??_C@_0CD@EJEBAEKE@?T?y?K?M?J?$KH?$LA?$NM?$KD?$KM?D?z?R?$KK?T?y?K?M?$LF?D?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP@ DB 0d4H
	DB	0f9H, 0cbH, 0cdH, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0acH, 0c4H, 0faH
	DB	0d2H, 0aaH, 0d4H, 0f9H, 0cbH, 0cdH, 0b5H, 0c4H, 0cdH, 0e6H, 0bcH
	DB	0d2H, 0d2H, 0d1H, 0beH, 0adH, 0c0H, 0ebH, 0bfH, 0aaH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z@4JA DD 0258cH ; `CAttemperEngineSink::SendUserInfoPacket'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z@4JA DD 0254bH ; `CAttemperEngineSink::SendInsureFailure'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DL@JOMAFBAE@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@
CONST	SEGMENT
??_C@_0DL@JOMAFBAE@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@ DB 0c7H
	DB	0ebH, 0d7H, 0a2H, 0d2H, 0e2H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H
	DB	0d5H, 0caH, 0baH, 0c5H, 0d4H, 0daH, 0c1H, 0edH, 0d2H, 0bbH, 0b5H
	DB	0d8H, 0b7H, 0bdH, 0bdH, 0f8H, 0c8H, 0ebH, 0c1H, 0cbH, 0b4H, 0cbH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0acH, 0b6H
	DB	0d4H, 0b7H, 0bdH, 0b1H, 0bbH, 0c6H, 0c8H, 0c0H, 0ebH, 0bfH, 0aaH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@GOKIFCOM@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@
CONST	SEGMENT
??_C@_0DJ@GOKIFCOM@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@ DB 0c7H
	DB	0ebH, 0d7H, 0a2H, 0d2H, 0e2H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H
	DB	0d5H, 0caH, 0baH, 0c5H, 0d4H, 0daH, 0c1H, 0edH, 0d2H, 0bbH, 0b5H
	DB	0d8H, 0b7H, 0bdH, 0bdH, 0f8H, 0c8H, 0ebH, 0c1H, 0cbH, 0b4H, 0cbH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0acH, 0c4H
	DB	0faH, 0b1H, 0bbH, 0c6H, 0c8H, 0c0H, 0ebH, 0bfH, 0aaH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z@4JA DD 024d7H ; `CAttemperEngineSink::SwitchUserItemConnect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z@4JA DD 0243dH ; `CAttemperEngineSink::PerformRoomTaskProgress'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z@4JA DD 023b5H ; `CAttemperEngineSink::PerformTaskProgress'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@KGCLMCGJ@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KM?W?$KD?D?z?S@
CONST	SEGMENT
??_C@_0CJ@KGCLMCGJ@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KM?W?$KD?D?z?S@ DB 0bbH
	DB	0b6H, 0d3H, 0adH, 0c4H, 0faH, 0bdH, 0f8H, 0c8H, 0ebH, 0a1H, 0b0H
	DB	'%s', 0a1H, 0b1H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0a3H, 0acH, 0d7H, 0a3H, 0c4H, 0faH, 0d3H, 0ceH, 0cfH, 0b7H, 0d3H
	DB	0e4H, 0bfH, 0ecH, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z@4JA DD 02245H ; `CAttemperEngineSink::OnEventUserLogon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 021eaH ; `CAttemperEngineSink::OnTCPNetworkSubHostDissumeTable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 021c5H ; `CAttemperEngineSink::OnTCPNetworkSubRequestReply'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 021a1H ; `CAttemperEngineSink::OnTCPNetworkSubCancelRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@DJFGALCD@?D?$LP?G?$LA?$LI?C?S?N?O?$LH?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?B?z?$KD?$KM?G?k?I?T?$LK?s?T@
CONST	SEGMENT
??_C@_0CF@DJFGALCD@?D?$LP?G?$LA?$LI?C?S?N?O?$LH?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?B?z?$KD?$KM?G?k?I?T?$LK?s?T@ DB 0c4H
	DB	0bfH, 0c7H, 0b0H, 0b8H, 0c3H, 0d3H, 0ceH, 0cfH, 0b7H, 0d4H, 0bcH
	DB	0d5H, 0bdH, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0c2H, 0faH, 0a3H
	DB	0acH, 0c7H, 0ebH, 0c9H, 0d4H, 0baH, 0f3H, 0d4H, 0d9H, 0caH, 0d4H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0215dH ; `CAttemperEngineSink::OnTCPNetworkSubCreateTable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0212cH ; `CAttemperEngineSink::OnTCPNetworkSubRoomCheat'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08EGGGBJKA@?$LO?$KP?$LI?f?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_08EGGGBJKA@?$LO?$KP?$LI?f?$KD?$LK?$CFs@ DB 0beH, 0afH, 0b8H, 0e6H, 0a3H
	DB	0baH, '%s', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 02109H ; `CAttemperEngineSink::OnTCPNetworkSubWarningUser'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@HMAGCPIB@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?W?$MA?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?$LN?b?I?$KC?S?N?O?$LH@
CONST	SEGMENT
??_C@_0BN@HMAGCPIB@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?W?$MA?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?$LN?b?I?$KC?S?N?O?$LH@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b4H, 0cbH, 0d7H, 0c0H, 0d2H, 0d1H
	DB	0b1H, 0bbH, 0b9H, 0dcH, 0c0H, 0edH, 0d4H, 0b1H, 0bdH, 0e2H, 0c9H
	DB	0a2H, 0d3H, 0ceH, 0cfH, 0b7H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 020e9H ; `CAttemperEngineSink::OnTCPNetworkSubDismissGame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 020bcH ; `CAttemperEngineSink::OnTCPNetworkSubSendMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0208aH ; `CAttemperEngineSink::OnTCPNetworkSubKickAllUser'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BH@DNGDNDFB@?S?C?$LL?$KH?A?D?L?l?H?$KI?O?$NO?E?d?V?C?$LD?I?$LJ?$KG?$KD?$KB@
CONST	SEGMENT
??_C@_0BH@DNGDNDFB@?S?C?$LL?$KH?A?D?L?l?H?$KI?O?$NO?E?d?V?C?$LD?I?$LJ?$KG?$KD?$KB@ DB 0d3H
	DB	0c3H, 0bbH, 0a7H, 0c1H, 0c4H, 0ccH, 0ecH, 0c8H, 0a8H, 0cfH, 0deH
	DB	0c5H, 0e4H, 0d6H, 0c3H, 0b3H, 0c9H, 0b9H, 0a6H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 02036H ; `CAttemperEngineSink::OnTCPNetworkSubLimitUserChat'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@NHDPIONK@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BN@NHDPIONK@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KB@ DB 0c4H
	DB	0e3H, 0d2H, 0d1H, 0b1H, 0bbH, 0b9H, 0dcH, 0c0H, 0edH, 0d4H, 0b1H
	DB	0c7H, 0ebH, 0c0H, 0ebH, 0b4H, 0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H
	DB	0bfH, 0bcH, 0e4H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LKMDCKF@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?W?$MA?W?S?$KD?$KB@
CONST	SEGMENT
??_C@_0BH@LKMDCKF@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?W?$MA?W?S?$KD?$KB@ DB 0c4H
	DB	0e3H, 0d2H, 0d1H, 0b1H, 0bbH, 0b9H, 0dcH, 0c0H, 0edH, 0d4H, 0b1H
	DB	0c7H, 0ebH, 0c0H, 0ebH, 0d7H, 0c0H, 0d7H, 0d3H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 02002H ; `CAttemperEngineSink::OnTCPNetworkSubManagerKickUser'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@EPNGOIIN@?T?$LG?$LD?L?P?$NO?$LI?D?$LH?$LP?$LM?d?E?d?V?C?M?$KI?V?$KK?5?$LJ?$NM?$MA?m?T?$LB?5?$CFs?5@
CONST	SEGMENT
??_C@_0CH@EPNGOIIN@?T?$LG?$LD?L?P?$NO?$LI?D?$LH?$LP?$LM?d?E?d?V?C?M?$KI?V?$KK?5?$LJ?$NM?$MA?m?T?$LB?5?$CFs?5@ DB 0d4H
	DB	0b6H, 0b3H, 0ccH, 0d0H, 0deH, 0b8H, 0c4H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0c5H, 0e4H, 0d6H, 0c3H, 0cdH, 0a8H, 0d6H, 0aaH, ' ', 0b9H, 0dcH
	DB	0c0H, 0edH, 0d4H, 0b1H, ' %s [ %ld ]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@HAEGHLFE@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$PO?N?q?F?w?$LH?$LP?$LM?d?$LF?D?$KB?$LA?T?K?P?P?V?$LF?$KB?$LB?W@
CONST	SEGMENT
??_C@_0DD@HAEGHLFE@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$PO?N?q?F?w?$LH?$LP?$LM?d?$LF?D?$KB?$LA?T?K?P?P?V?$LF?$KB?$LB?W@ DB 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH, 0f1H
	DB	0c6H, 0f7H, 0b7H, 0bfH, 0bcH, 0e4H, 0b5H, 0c4H, 0a1H, 0b0H, 0d4H
	DB	0cbH, 0d0H, 0d0H, 0d6H, 0b5H, 0a1H, 0b1H, 0d7H, 0b4H, 0ccH, 0acH
	DB	0c5H, 0e4H, 0d6H, 0c3H, 0caH, 0fdH, 0beH, 0ddH, 0d0H, 0deH, 0b8H
	DB	0c4H, 0b3H, 0c9H, 0b9H, 0a6H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01f5bH ; `CAttemperEngineSink::OnTCPNetworkSubOptionServer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01f11H ; `CAttemperEngineSink::OnTCPNetworkSubQueryOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01ef4H ; `CAttemperEngineSink::OnTCPNetworkSubBaseEnsureTakeRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01ec9H ; `CAttemperEngineSink::OnTCPNetworkSubMemberDayGift'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01eadH ; `CAttemperEngineSink::OnTCPNetworkSubMemberDayPresent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01e91H ; `CAttemperEngineSink::OnTCPNetworkSubMemberQueryInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01e73H ; `CAttemperEngineSink::OnTCPNetworkSubGiveUpTaskRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01e5aH ; `CAttemperEngineSink::OnTCPNetworkSubLoadTaskInfoRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01e3cH ; `CAttemperEngineSink::OnTCPNetworkSubTaskRewardRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01e1eH ; `CAttemperEngineSink::OnTCPNetworkSubTakeTaskRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01e01H ; `CAttemperEngineSink::OnTCPNetworkSubCheckInDoneRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01de7H ; `CAttemperEngineSink::OnTCPNetworkSubCheckInQueryRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BF@KCLAAAGP@?G?k?J?d?H?k?$LK?O?$LH?$KI?$LF?D?M?f?$LM?RID?$KD?$KB@
CONST	SEGMENT
??_C@_0BF@KCLAAAGP@?G?k?J?d?H?k?$LK?O?$LH?$KI?$LF?D?M?f?$LM?RID?$KD?$KB@ DB 0c7H
	DB	0ebH, 0caH, 0e4H, 0c8H, 0ebH, 0baH, 0cfH, 0b7H, 0a8H, 0b5H, 0c4H
	DB	0cdH, 0e6H, 0bcH, 0d2H, 'ID', 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01dabH ; `CAttemperEngineSink::OnTCPNetworkSubQueryUserInfoRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01d7cH ; `CAttemperEngineSink::OnTCPNetworkSubTransferScoreRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@KPIFHMPP@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@
CONST	SEGMENT
??_C@_0CD@KPIFHMPP@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@ DB 0b4H
	DB	0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0c8H, 0a1H, 0bfH, 0eeH, 0a3H, 0acH, 0c8H, 0a1H, 0b3H
	DB	0f6H, 0b2H, 0d9H, 0d7H, 0f7H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FDAGJDOL@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@
CONST	SEGMENT
??_C@_0CD@FDAGJDOL@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@ DB 0b4H
	DB	0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0c8H, 0a1H, 0bfH, 0eeH, 0a3H, 0acH, 0c8H, 0a1H, 0b3H
	DB	0f6H, 0b2H, 0d9H, 0d7H, 0f7H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01d3fH ; `CAttemperEngineSink::OnTCPNetworkSubTakeScoreRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@DPHNMKOK@?D?z?$LF?D?S?N?O?$LH?$LB?R?S?$OA?$LG?n?$LC?$LL?W?c?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@
CONST	SEGMENT
??_C@_0CD@DPHNMKOK@?D?z?$LF?D?S?N?O?$LH?$LB?R?S?$OA?$LG?n?$LC?$LL?W?c?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@ DB 0c4H
	DB	0faH, 0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0b1H, 0d2H, 0d3H, 0e0H
	DB	0b6H, 0eeH, 0b2H, 0bbH, 0d7H, 0e3H, 0a3H, 0acH, 0b4H, 0e6H, 0c8H
	DB	0ebH, 0b2H, 0d9H, 0d7H, 0f7H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@FGFMEKII@?S?I?S?Z?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?S?N?O?$LH?$LB?R?$LP?I?$LE?f?H?k?$LG@
CONST	SEGMENT
??_C@_0DL@FGFMEKII@?S?I?S?Z?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?S?N?O?$LH?$LB?R?$LP?I?$LE?f?H?k?$LG@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0c4H, 0faH, 0d5H, 0fdH, 0d4H, 0daH, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d6H, 0d0H, 0a3H, 0acH, 0d3H, 0ceH, 0cfH, 0b7H, 0b1H
	DB	0d2H, 0bfH, 0c9H, 0b4H, 0e6H, 0c8H, 0ebH, 0b6H, 0eeH, 0b6H, 0c8H
	DB	0ceH, 0aaH, ' %I64d', 0a3H, 0acH, 0b4H, 0e6H, 0c8H, 0ebH, 0b2H
	DB	0d9H, 0d7H, 0f7H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MMKIAMDO@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@
CONST	SEGMENT
??_C@_0CD@MMKIAMDO@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@ DB 0b4H
	DB	0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b4H, 0e6H, 0bfH, 0eeH, 0a3H, 0acH, 0b4H, 0e6H, 0c8H
	DB	0ebH, 0b2H, 0d9H, 0d7H, 0f7H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DACLODCK@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@
CONST	SEGMENT
??_C@_0CD@DACLODCK@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@ DB 0b4H
	DB	0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0b4H, 0e6H, 0bfH, 0eeH, 0a3H, 0acH, 0b4H, 0e6H, 0c8H
	DB	0ebH, 0b2H, 0d9H, 0d7H, 0f7H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01cd9H ; `CAttemperEngineSink::OnTCPNetworkSubSaveScoreRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01cb1H ; `CAttemperEngineSink::OnTCPNetworkSubEnableInsureRequest'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01c8bH ; `CAttemperEngineSink::OnTCPNetworkSubQueryInsureInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01c68H ; `CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByBeans'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01c41H ; `CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByIngot'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01c1dH ; `CAttemperEngineSink::OnTCPNetworkSubPurchaseMember'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01be4H ; `CAttemperEngineSink::OnTCPNetworkSubGrowLevelQuery'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01b95H ; `CAttemperEngineSink::OnTCPNetworkSubChairUserInfoReq'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BH@GBDECKFN@?C?$LL?U?R?$LF?$LN?$LP?I?$LN?x?H?k?$LF?D?S?N?O?$LH?W?$MA?$KD?$KB@
CONST	SEGMENT
??_C@_0BH@GBDECKFN@?C?$LL?U?R?$LF?$LN?$LP?I?$LN?x?H?k?$LF?D?S?N?O?$LH?W?$MA?$KD?$KB@ DB 0c3H
	DB	0bbH, 0d5H, 0d2H, 0b5H, 0bdH, 0bfH, 0c9H, 0bdH, 0f8H, 0c8H, 0ebH
	DB	0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GOINLOJB@OnTCPNetworkSubUserChairReq@
CONST	SEGMENT
??_C@_0BM@GOINLOJB@OnTCPNetworkSubUserChairReq@ DB 'OnTCPNetworkSubUserCh'
	DB	'airReq', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01b1aH ; `CAttemperEngineSink::OnTCPNetworkSubUserChairReq'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@OFHFAKJ@OnTCPNetworkSubUserInfoReq@
CONST	SEGMENT
??_C@_0BL@OFHFAKJ@OnTCPNetworkSubUserInfoReq@ DB 'OnTCPNetworkSubUserInfo'
	DB	'Req', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01af5H ; `CAttemperEngineSink::OnTCPNetworkSubUserInfoReq'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BD@DKHPFDBP@?D?c?R?Q?$LB?$LL?$CFs?G?k?$MA?k?W?$MA?W?S?$KD?$KB@
CONST	SEGMENT
??_C@_0BD@DKHPFDBP@?D?c?R?Q?$LB?$LL?$CFs?G?k?$MA?k?W?$MA?W?S?$KD?$KB@ DB 0c4H
	DB	0e3H, 0d2H, 0d1H, 0b1H, 0bbH, '%s', 0c7H, 0ebH, 0c0H, 0ebH, 0d7H
	DB	0c0H, 0d7H, 0d3H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@ODOOJLKG@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?J?$LJ?S?C?$LH?$MA?L?$NP?$LP?$KI?0@
CONST	SEGMENT
??_C@_0DE@ODOOJLKG@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?J?$LJ?S?C?$LH?$MA?L?$NP?$LP?$KI?0@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0cdH, 0e6H, 0bcH, 0d2H, ' [ %s ] ', 0d5H, 0fdH
	DB	0d4H, 0daH, 0caH, 0b9H, 0d3H, 0c3H, 0b7H, 0c0H, 0ccH, 0dfH, 0bfH
	DB	0a8H, ',', 0c4H, 0faH, 0ceH, 0deH, 0b7H, 0a8H, 0bdH, 0abH, 0cbH
	DB	0fcH, 0ccH, 0dfH, 0b3H, 0f6H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FMANDGLC@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?S?N?O?$LH?V?P?0?D?z?$LC?$LL@
CONST	SEGMENT
??_C@_0DA@FMANDGLC@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?S?N?O?$LH?V?P?0?D?z?$LC?$LL@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0cdH, 0e6H, 0bcH, 0d2H, ' [ %s ] ', 0d5H, 0fdH
	DB	0d4H, 0daH, 0d3H, 0ceH, 0cfH, 0b7H, 0d6H, 0d0H, ',', 0c4H, 0faH
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0bdH, 0abH, 0cbH, 0fcH, 0ccH, 0dfH, 0b3H
	DB	0f6H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FDOJANAH@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?$LC?$LL?P?m?L?$NP?H?K?$KD?$KB@
CONST	SEGMENT
??_C@_0BL@FDOJANAH@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?$LC?$LL?P?m?L?$NP?H?K?$KD?$KB@ DB 0baH
	DB	0dcH, 0b1H, 0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b0H, 0d9H, 0c8H, 0cbH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0b2H, 0bbH, 0d0H, 0edH, 0ccH, 0dfH, 0c8H
	DB	0cbH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KLELGMNL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?L?$NP?$LD?v?$LJ?$NM?$MA?m?T?$LB?J?G?$LC?$LL?$LB?$LL?T?J?P?m?$LF?D?$KD@
CONST	SEGMENT
??_C@_0CB@KLELGMNL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?L?$NP?$LD?v?$LJ?$NM?$MA?m?T?$LB?J?G?$LC?$LL?$LB?$LL?T?J?P?m?$LF?D?$KD@ DB 0baH
	DB	0dcH, 0b1H, 0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0ccH, 0dfH, 0b3H, 0f6H
	DB	0b9H, 0dcH, 0c0H, 0edH, 0d4H, 0b1H, 0caH, 0c7H, 0b2H, 0bbH, 0b1H
	DB	0bbH, 0d4H, 0caH, 0d0H, 0edH, 0b5H, 0c4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01aa1H ; `CAttemperEngineSink::OnTCPNetworkSubMemberKickUser'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@KFOICNLL@?$LE?K?W?$MA?S?P?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?S?k?D?z?M?$KM?W?$MA?S?N?O?$LH?$KD@
CONST	SEGMENT
??_C@_0CB@KFOICNLL@?$LE?K?W?$MA?S?P?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?S?k?D?z?M?$KM?W?$MA?S?N?O?$LH?$KD@ DB 0b4H
	DB	0cbH, 0d7H, 0c0H, 0d3H, 0d0H, 0cdH, 0e6H, 0bcH, 0d2H, 0c9H, 0e8H
	DB	0d6H, 0c3H, 0c1H, 0cbH, 0b2H, 0bbH, 0d3H, 0ebH, 0c4H, 0faH, 0cdH
	DB	0acH, 0d7H, 0c0H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01a7cH ; `CAttemperEngineSink::OnTCPNetworkSubUserRepulseSit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01a58H ; `CAttemperEngineSink::OnTCPNetworkSubUserInviteReq'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@GEANMNIE@?A?$LH?O?$LA?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@
CONST	SEGMENT
??_C@_0BL@GEANMNIE@?A?$LH?O?$LA?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@ DB 0c1H
	DB	0b7H, 0cfH, 0b0H, 0b7H, 0bfH, 0bcH, 0e4H, 0b2H, 0bbH, 0bfH, 0c9H
	DB	0d2H, 0d4H, 0caH, 0b9H, 0d3H, 0c3H, 0b4H, 0cbH, 0b9H, 0a6H, 0c4H
	DB	0dcH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BLADOFOC@?$LB?H?H?$PM?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@
CONST	SEGMENT
??_C@_0BL@BLADOFOC@?$LB?H?H?$PM?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@ DB 0b1H
	DB	0c8H, 0c8H, 0fcH, 0b7H, 0bfH, 0bcH, 0e4H, 0b2H, 0bbH, 0bfH, 0c9H
	DB	0d2H, 0d4H, 0caH, 0b9H, 0d3H, 0c3H, 0b4H, 0cbH, 0b9H, 0a6H, 0c4H
	DB	0dcH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01a27H ; `CAttemperEngineSink::OnTCPNetwordSubSendTrumpet'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01a0fH ; `CAttemperEngineSink::OnTCPNetworkSubGetSendPresent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 019f5H ; `CAttemperEngineSink::OnTCPNetworkSubPropertyPresent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 019e1H ; `CAttemperEngineSink::OnTCPNetworkSubQuerySendPresent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 019c1H ; `CAttemperEngineSink::OnTCPNetworkSubPropertyUse'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 019abH ; `CAttemperEngineSink::OnTCPNetworkSubPropertyBackpack'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01987H ; `CAttemperEngineSink::OnTCPNetworkSubGamePropertyBuy'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0191aH ; `CAttemperEngineSink::OnTCPNetworkSubWisperExpression'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DN@JGPLIPLP@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LH?$KC?K?M?K?$LN?A?D?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
CONST	SEGMENT
??_C@_0DN@JGPLIPLP@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LH?$KC?K?M?K?$LN?A?D?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0c3H, 0bbH, 0d3H, 0d0H
	DB	0b7H, 0a2H, 0cbH, 0cdH, 0cbH, 0bdH, 0c1H, 0c4H, 0b5H, 0c4H, 0c8H
	DB	0a8H, 0cfH, 0deH, 0a3H, 0acH, 0c8H, 0f4H, 0d0H, 0e8H, 0d2H, 0aaH
	DB	0b0H, 0efH, 0d6H, 0faH, 0a3H, 0acH, 0c7H, 0ebH, 0c1H, 0aaH, 0cfH
	DB	0b5H, 0d3H, 0ceH, 0cfH, 0b7H, 0bfH, 0cdH, 0b7H, 0feH, 0d7H, 0c9H
	DB	0d1H, 0afH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MDMMFNJG@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LC?$LL?T?J?P?m?T?Z?S?N?O?$LH?V?P?S@
CONST	SEGMENT
??_C@_0DB@MDMMFNJG@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LC?$LL?T?J?P?m?T?Z?S?N?O?$LH?V?P?S@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b4H, 0cbH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0b2H, 0bbH, 0d4H, 0caH, 0d0H, 0edH, 0d4H
	DB	0daH, 0d3H, 0ceH, 0cfH, 0b7H, 0d6H, 0d0H, 0d3H, 0ebH, 0cdH, 0acH
	DB	0d7H, 0c0H, 0b5H, 0c4H, 0cdH, 0e6H, 0bcH, 0d2H, 0cbH, 0bdH, 0c1H
	DB	0c4H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EOEHCMPC@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?K?$LN?A@
CONST	SEGMENT
??_C@_0CD@EOEHCMPC@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?K?$LN?A@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0b4H, 0cbH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H
	DB	0b9H, 0d3H, 0c3H, 0bbH, 0a7H, 0cbH, 0bdH, 0c1H, 0c4H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 018a5H ; `CAttemperEngineSink::OnTCPNetworkSubWisperChat'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 01867H ; `CAttemperEngineSink::OnTCPNetworkSubUserExpression'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DN@EKHAPMJC@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LE?s?L?$PM?$LH?$KC?Q?T?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
CONST	SEGMENT
??_C@_0DN@EKHAPMJC@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LE?s?L?$PM?$LH?$KC?Q?T?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0c3H, 0bbH, 0d3H, 0d0H
	DB	0b4H, 0f3H, 0ccH, 0fcH, 0b7H, 0a2H, 0d1H, 0d4H, 0b5H, 0c4H, 0c8H
	DB	0a8H, 0cfH, 0deH, 0a3H, 0acH, 0c8H, 0f4H, 0d0H, 0e8H, 0d2H, 0aaH
	DB	0b0H, 0efH, 0d6H, 0faH, 0a3H, 0acH, 0c7H, 0ebH, 0c1H, 0aaH, 0cfH
	DB	0b5H, 0d3H, 0ceH, 0cfH, 0b7H, 0bfH, 0cdH, 0b7H, 0feH, 0d7H, 0c9H
	DB	0d1H, 0afH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OBNELMKK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LE?s?L@
CONST	SEGMENT
??_C@_0CH@OBNELMKK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LE?s?L@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0b4H, 0cbH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H
	DB	0b9H, 0d3H, 0c3H, 0bbH, 0a7H, 0b4H, 0f3H, 0ccH, 0fcH, 0c1H, 0c4H
	DB	0ccH, 0ecH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0181dH ; `CAttemperEngineSink::OnTCPNetworkSubUserChat'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@JLGPNJOP@?T?$LM?U?$LN?N?$LE?$LN?a?J?x?$KD?$KM?$LC?$LL?D?$NM?$MA?k?$LP?$KK?S?N?O?$LH?$KD?$KM?G?k?O?H?M@
CONST	SEGMENT
??_C@_0CP@JLGPNJOP@?T?$LM?U?$LN?N?$LE?$LN?a?J?x?$KD?$KM?$LC?$LL?D?$NM?$MA?k?$LP?$KK?S?N?O?$LH?$KD?$KM?G?k?O?H?M@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0ceH, 0b4H, 0bdH, 0e1H, 0caH, 0f8H, 0a3H, 0acH
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0c0H, 0ebH, 0bfH, 0aaH, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0a3H, 0acH, 0c7H, 0ebH, 0cfH, 0c8H, 0cdH, 0eaH, 0b3H, 0c9H
	DB	0d4H, 0bcH, 0d5H, 0bdH, 0d4H, 0d9H, 0c0H, 0ebH, 0bfH, 0aaH, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 017deH ; `CAttemperEngineSink::OnTCPNetworkSubUserStandUp'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DD@KHGFKAPM@?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?C?$LL?S?P?$LP?U?S?$OA?$LF?D?N?$LL?V?C?A?K?$KD?$KM?G?k?Q@
CONST	SEGMENT
??_C@_0DD@KHGFKAPM@?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?C?$LL?S?P?$LP?U?S?$OA?$LF?D?N?$LL?V?C?A?K?$KD?$KM?G?k?Q@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0b4H, 0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0c3H, 0bbH
	DB	0d3H, 0d0H, 0bfH, 0d5H, 0d3H, 0e0H, 0b5H, 0c4H, 0ceH, 0bbH, 0d6H
	DB	0c3H, 0c1H, 0cbH, 0a3H, 0acH, 0c7H, 0ebH, 0d1H, 0a1H, 0d4H, 0f1H
	DB	0c1H, 0edH, 0cdH, 0e2H, 0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H
	DB	0bfH, 0bcH, 0e4H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@DPCOLKLL@?S?I?S?Z?$LE?K?S?N?O?$LH?W?$MA?T?$NN?J?$LB?C?$LL?S?P?$LP?I?R?T?H?C?D?z?$LM?S?H@
CONST	SEGMENT
??_C@_0DP@DPCOLKLL@?S?I?S?Z?$LE?K?S?N?O?$LH?W?$MA?T?$NN?J?$LB?C?$LL?S?P?$LP?I?R?T?H?C?D?z?$LM?S?H@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0b4H, 0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H
	DB	0d4H, 0ddH, 0caH, 0b1H, 0c3H, 0bbH, 0d3H, 0d0H, 0bfH, 0c9H, 0d2H
	DB	0d4H, 0c8H, 0c3H, 0c4H, 0faH, 0bcH, 0d3H, 0c8H, 0ebH, 0b5H, 0c4H
	DB	0ceH, 0bbH, 0d6H, 0c3H, 0c1H, 0cbH, 0a3H, 0acH, 0c7H, 0ebH, 0d1H
	DB	0a1H, 0d4H, 0f1H, 0c1H, 0edH, 0cdH, 0e2H, 0b5H, 0c4H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d7H, 0c0H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JJCEJGNN@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?N?$KK?$LL?$LM?A?K?$KD?$KM?T?$NN?J@
CONST	SEGMENT
??_C@_0EF@JJCEJGNN@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?N?$KK?$LL?$LM?A?K?$KD?$KM?T?$NN?J@ DB 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0d2H, 0d1H, 0beH, 0adH, 0c8H, 0cbH, 0c2H, 0faH, 0ceH, 0aaH, 0bbH
	DB	0bcH, 0c1H, 0cbH, 0a3H, 0acH, 0d4H, 0ddH, 0caH, 0b1H, 0c3H, 0bbH
	DB	0d3H, 0d0H, 0bfH, 0c9H, 0d2H, 0d4H, 0c8H, 0c3H, 0c4H, 0faH, 0bcH
	DB	0d3H, 0c8H, 0ebH, 0b5H, 0c4H, 0ceH, 0bbH, 0d6H, 0c3H, 0a3H, 0acH
	DB	0c7H, 0ebH, 0c9H, 0d4H, 0baH, 0f3H, 0d4H, 0d9H, 0caH, 0d4H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BCDLHLAL@?$LE?m?N?s?$LF?D?$LH?$LP?$LM?d?G?k?G?s?$KD?$KM?G?k?I?T?$LK?s?T?Y?J?T?$KD?$KB@
CONST	SEGMENT
??_C@_0BN@BCDLHLAL@?$LE?m?N?s?$LF?D?$LH?$LP?$LM?d?G?k?G?s?$KD?$KM?G?k?I?T?$LK?s?T?Y?J?T?$KD?$KB@ DB 0b4H
	DB	0edH, 0ceH, 0f3H, 0b5H, 0c4H, 0b7H, 0bfH, 0bcH, 0e4H, 0c7H, 0ebH
	DB	0c7H, 0f3H, 0a3H, 0acH, 0c7H, 0ebH, 0c9H, 0d4H, 0baH, 0f3H, 0d4H
	DB	0d9H, 0caH, 0d4H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0173bH ; `CAttemperEngineSink::OnTCPNetworkSubUserSitDown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@
CONST	SEGMENT
??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@ DB 0c4H
	DB	0faH, 0d5H, 0fdH, 0d4H, 0daH, 0d3H, 0ceH, 0cfH, 0b7H, 0d6H, 0d0H
	DB	0a3H, 0acH, 0d4H, 0ddH, 0caH, 0b1H, 0b2H, 0bbH, 0c4H, 0dcH, 0c0H
	DB	0ebH, 0bfH, 0aaH, 0a3H, 0acH, 0c7H, 0ebH, 0cfH, 0c8H, 0bdH, 0e1H
	DB	0caH, 0f8H, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0170cH ; `CAttemperEngineSink::OnTCPNetworkSubUserLookon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 016bcH ; `CAttemperEngineSink::OnTCPNetworkSubUserRule'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0166aH ; `CAttemperEngineSink::OnTCPNetworkSubLogonAccounts'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 015fdH ; `CAttemperEngineSink::OnTCPNetworkSubLogonMobile'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CL@KDGAPOGL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LF?G?B?$LM?C?$NM?B?k?$LE?m?N?s?$KD?$KM?$LC?$LL?T?J?P@
CONST	SEGMENT
??_C@_0CL@KDGAPOGL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LF?G?B?$LM?C?$NM?B?k?$LE?m?N?s?$KD?$KM?$LC?$LL?T?J?P@ DB 0baH
	DB	0dcH, 0b1H, 0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H
	DB	0b5H, 0c7H, 0c2H, 0bcH, 0c3H, 0dcH, 0c2H, 0ebH, 0b4H, 0edH, 0ceH
	DB	0f3H, 0a3H, 0acH, 0b2H, 0bbH, 0d4H, 0caH, 0d0H, 0edH, 0bcH, 0ccH
	DB	0d0H, 0f8H, 0bdH, 0f8H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PBGKLFPO@?$LI?C?U?J?$LK?E?R?Q?T?Z?$LE?K?$LH?$LP?$LM?d?S?N?O?$LH?$KD?$KM?G?R?$LC?$LL?T?J?P?m?L@
CONST	SEGMENT
??_C@_0DD@PBGKLFPO@?$LI?C?U?J?$LK?E?R?Q?T?Z?$LE?K?$LH?$LP?$LM?d?S?N?O?$LH?$KD?$KM?G?R?$LC?$LL?T?J?P?m?L@ DB 0b8H
	DB	0c3H, 0d5H, 0caH, 0baH, 0c5H, 0d2H, 0d1H, 0d4H, 0daH, 0b4H, 0cbH
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0acH, 0c7H
	DB	0d2H, 0b2H, 0bbH, 0d4H, 0caH, 0d0H, 0edH, 0ccH, 0dfH, 0b3H, 0f6H
	DB	0a3H, 0acH, 0c7H, 0ebH, 0d7H, 0c9H, 0d1H, 0afH, 0b9H, 0dcH, 0c0H
	DB	0edH, 0d4H, 0b1H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JGONOMBF@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LJ?X?$LB?U?A?K?$KD?$KM?$LC@
CONST	SEGMENT
??_C@_0CP@JGONOMBF@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LJ?X?$LB?U?A?K?$KD?$KM?$LC@ DB 0baH
	DB	0dcH, 0b1H, 0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b4H, 0cbH, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0beH, 0adH, 0b9H
	DB	0d8H, 0b1H, 0d5H, 0c1H, 0cbH, 0a3H, 0acH, 0b2H, 0bbH, 0d4H, 0caH
	DB	0d0H, 0edH, 0bcH, 0ccH, 0d0H, 0f8H, 0bdH, 0f8H, 0c8H, 0ebH, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@OCEOPNCD@?$LB?$KH?G?$LI?$KD?$KM?D?z?J?d?H?k?$LF?D?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G@
CONST	SEGMENT
??_C@_0CL@OCEOPNCD@?$LB?$KH?G?$LI?$KD?$KM?D?z?J?d?H?k?$LF?D?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0caH, 0e4H, 0c8H, 0ebH
	DB	0b5H, 0c4H, 0b7H, 0bfH, 0bcH, 0e4H, 0c3H, 0dcH, 0c2H, 0ebH, 0b2H
	DB	0bbH, 0d5H, 0fdH, 0c8H, 0b7H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H
	DB	0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA DD 0158cH ; `CAttemperEngineSink::OnTCPNetworkSubLogonUserID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 01577H ; `CAttemperEngineSink::OnTCPNetworkMainFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 01562H ; `CAttemperEngineSink::OnTCPNetworkMainGame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0154eH ; `CAttemperEngineSink::OnTCPNetworkMainPersonalTable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0153bH ; `CAttemperEngineSink::OnTCPNetworkMainMatch'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0144fH ; `CAttemperEngineSink::OnTCPNetworkMainInsure'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA DD 013bfH ; `CAttemperEngineSink::OnTCPSocketMainAndroidService'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA DD 01361H ; `CAttemperEngineSink::OnTCPSocketMainUserCollect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BF@OAHKEPFP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?N?J?$PN?$LC?$LL?U?$PN?H?$LH?$KD?$KB@
CONST	SEGMENT
??_C@_0BF@OAHKEPFP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?N?J?$PN?$LC?$LL?U?$PN?H?$LH?$KD?$KB@ DB 0b4H
	DB	0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0b2H, 0ceH, 0caH, 0fdH
	DB	0b2H, 0bbH, 0d5H, 0fdH, 0c8H, 0b7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA DD 01266H ; `CAttemperEngineSink::OnTCPSocketMainServiceInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA DD 01242H ; `CAttemperEngineSink::OnTCPSocketMainPersonalRoomRegister'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA DD 0121dH ; `CAttemperEngineSink::OnTCPSocketMainRegister'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0120bH ; `CAttemperEngineSink::OnDBCurrenceRoomCardAndBeant'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 011e6H ; `CAttemperEngineSink::OnDBDissumeTableResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 011c3H ; `CAttemperEngineSink::OnDBLoadPersonalParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@IPIKOHBH@?T?$LM?U?$LN?$LJ?f?$LG?$KI?$LP?$KK?J?$LM?J?$LB?$LM?d?$LF?$LN?N?$LE?$LP?$KK?J?$LM?S?N?O?$LH?$KD?$KM?S@
CONST	SEGMENT
??_C@_0CJ@IPIKOHBH@?T?$LM?U?$LN?$LJ?f?$LG?$KI?$LP?$KK?J?$LM?J?$LB?$LM?d?$LF?$LN?N?$LE?$LP?$KK?J?$LM?S?N?O?$LH?$KD?$KM?S@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0b9H, 0e6H, 0b6H, 0a8H, 0bfH, 0aaH, 0caH, 0bcH
	DB	0caH, 0b1H, 0bcH, 0e4H, 0b5H, 0bdH, 0ceH, 0b4H, 0bfH, 0aaH, 0caH
	DB	0bcH, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H, 0acH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0bdH, 0e2H, 0c9H, 0a2H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BBCEPGNP@?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I?$KC?$KB?$KD@
CONST	SEGMENT
??_C@_0BF@BBCEPGNP@?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I?$KC?$KB?$KD@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b3H, 0acH, 0caH, 0b1H, 0a3H, 0acH, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0bdH, 0e2H, 0c9H, 0a2H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JHECHKJE@?$LH?$LP?V?w?M?K?$LD?v?S?N?O?$LH?$LL?r?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I@
CONST	SEGMENT
??_C@_0CD@JHECHKJE@?$LH?$LP?V?w?M?K?$LD?v?S?N?O?$LH?$LL?r?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0cdH, 0cbH, 0b3H, 0f6H, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0bbH, 0f2H, 0d3H, 0ceH, 0cfH, 0b7H, 0b3H, 0acH, 0caH, 0b1H, 0a3H
	DB	0acH, 0d3H, 0ceH, 0cfH, 0b7H, 0bdH, 0e2H, 0c9H, 0a2H, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EKGKFEBG@?S?N?O?$LH?N?$LE?$LP?$KK?J?$LM?$KD?$KM?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@
CONST	SEGMENT
??_C@_0BL@EKGKFEBG@?S?N?O?$LH?N?$LE?$LP?$KK?J?$LM?$KD?$KM?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0ceH, 0b4H, 0bfH, 0aaH, 0caH, 0bcH, 0a3H, 0acH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0d4H, 0b6H, 0afH, 0bdH, 0e2H, 0c9H
	DB	0a2H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LGKLJHBF@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@
CONST	SEGMENT
??_C@_0P@LGKLJHBF@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@ DB 0d3H, 0ceH
	DB	0cfH, 0b7H, 0d7H, 0d4H, 0b6H, 0afH, 0bdH, 0e2H, 0c9H, 0a2H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 01170H ; `CAttemperEngineSink::OnDBCancelCreateTable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 01151H ; `CAttemperEngineSink::OnDBCreateFailure'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@LPANEFD@?$LE?$LE?$LN?$KI?W?$MA?W?S?W?x?O?B?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BB@LPANEFD@?$LE?$LE?$LN?$KI?W?$MA?W?S?W?x?O?B?J?$KH?$LA?$NM@ DB 0b4H
	DB	0b4H, 0bdH, 0a8H, 0d7H, 0c0H, 0d7H, 0d3H, 0d7H, 0f8H, 0cfH, 0c2H
	DB	0caH, 0a7H, 0b0H, 0dcH, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 010afH ; `CAttemperEngineSink::OnDBCreateSucess'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 01085H ; `CAttemperEngineSink::OnDBPCGrowLevelUpgrade'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 01069H ; `CAttemperEngineSink::OnDBPCGrowLevelParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 01007H ; `CAttemperEngineSink::OnDBSystemMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0fc1H ; `CAttemperEngineSink::OnDBUserTaskResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0f74H ; `CAttemperEngineSink::OnDBUserTaskInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0f36H ; `CAttemperEngineSink::OnDBPCBaseEnsureResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0f0dH ; `CAttemperEngineSink::OnDBPCCheckInReward'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0ee9H ; `CAttemperEngineSink::OnDBPCUserCheckInResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0e9dH ; `CAttemperEngineSink::OnDBExChangeResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0e60H ; `CAttemperEngineSink::OnDBPurchaseResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0da4H ; `CAttemperEngineSink::OnDBGamePropertyBuy'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0d90H ; `CAttemperEngineSink::OnDBPropertyFailure'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0d12H ; `CAttemperEngineSink::OnDBPropertySuccess'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0cf2H ; `CAttemperEngineSink::OnDBUserInsureEnableResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0cd5H ; `CAttemperEngineSink::OnDBUserInsureUserInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0cb8H ; `CAttemperEngineSink::OnDBUserInsureFailure'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0c84H ; `CAttemperEngineSink::OnDBUserInsureSuccess'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0c5eH ; `CAttemperEngineSink::OnDBUserInsureInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0c44H ; `CAttemperEngineSink::OnDBPCMemberDayGiftResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0c21H ; `CAttemperEngineSink::OnDBPCMemberDayPresentResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0c04H ; `CAttemperEngineSink::OnDBPCMemberDayQueryInfoResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0ba5H ; `CAttemperEngineSink::OnDBGamePropertyBuff'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0b91H ; `CAttemperEngineSink::OnDBGameAndroidParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0b7dH ; `CAttemperEngineSink::OnDBGameAndroidInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0b63H ; `CAttemperEngineSink::OnDBGameColumnInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DH@PICEIPLI@?F?$LN?L?$KI?J?$PN?$LO?$NN?$LP?b?$LH?$PO?N?q?W?i?$LM?$PO?$LA?f?$LB?$LO?W?$KC?$LC?a?P?E?O?$KC?S@
CONST	SEGMENT
??_C@_0DH@PICEIPLI@?F?$LN?L?$KI?J?$PN?$LO?$NN?$LP?b?$LH?$PO?N?q?W?i?$LM?$PO?$LA?f?$LB?$LO?W?$KC?$LC?a?P?E?O?$KC?S@ DB 0c6H
	DB	0bdH, 0ccH, 0a8H, 0caH, 0fdH, 0beH, 0ddH, 0bfH, 0e2H, 0b7H, 0feH
	DB	0ceH, 0f1H, 0d7H, 0e9H, 0bcH, 0feH, 0b0H, 0e6H, 0b1H, 0beH, 0d7H
	DB	0a2H, 0b2H, 0e1H, 0d0H, 0c5H, 0cfH, 0a2H, 0d3H, 0ebH, 0b5H, 0b1H
	DB	0c7H, 0b0H, 0d7H, 0e9H, 0bcH, 0feH, 0b0H, 0e6H, 0b1H, 0beH, 0d0H
	DB	0c5H, 0cfH, 0a2H, 0b2H, 0bbH, 0d2H, 0bbH, 0d6H, 0c2H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 0b2eH ; `CAttemperEngineSink::OnDBGameParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DD@EDDOLGC@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?$KD?$KM?F?U?M?$KI?M@
CONST	SEGMENT
??_C@_0DD@EDDOLGC@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?$KD?$KM?F?U?M?$KI?M@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0d3H, 0c9H, 0d3H, 0daH, 0b4H, 0cbH
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0beH, 0adH, 0c8H, 0cbH, 0c2H
	DB	0faH, 0a3H, 0acH, 0c6H, 0d5H, 0cdH, 0a8H, 0cdH, 0e6H, 0bcH, 0d2H
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0bcH, 0ccH, 0d0H, 0f8H, 0bdH, 0f8H, 0c8H
	DB	0ebH, 0c1H, 0cbH, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@HOOHFPLN@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
CONST	SEGMENT
??_C@_0EN@HOOHFPLN@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H, 0bbH, 0e1H
	DB	0d4H, 0b1H, 0bcH, 0b6H, 0b1H, 0f0H, 0b8H, 0dfH, 0d3H, 0daH, 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0b5H, 0c4H, 0d7H, 0eeH, 0b8H, 0dfH, 0bdH, 0f8H, 0c8H, 0ebH, 0bbH
	DB	0e1H, 0d4H, 0b1H, 0ccH, 0f5H, 0bcH, 0feH, 0a3H, 0acH, 0b2H, 0bbH
	DB	0c4H, 0dcH, 0bdH, 0f8H, 0c8H, 0ebH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@LEGFOBHM@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
CONST	SEGMENT
??_C@_0EN@LEGFOBHM@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H, 0bbH, 0e1H
	DB	0d4H, 0b1H, 0bcH, 0b6H, 0b1H, 0f0H, 0b5H, 0cdH, 0d3H, 0daH, 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0b5H, 0c4H, 0d7H, 0eeH, 0b5H, 0cdH, 0bdH, 0f8H, 0c8H, 0ebH, 0bbH
	DB	0e1H, 0d4H, 0b1H, 0ccH, 0f5H, 0bcH, 0feH, 0a3H, 0acH, 0b2H, 0bbH
	DB	0c4H, 0dcH, 0bdH, 0f8H, 0c8H, 0ebH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@DKDPOCDP@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
CONST	SEGMENT
??_C@_0EO@DKDPOCDP@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b3H, 0c9H, 0bcH, 0a8H, 0b8H, 0dfH, 0d3H, 0daH, 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0b5H, 0c4H, 0d7H, 0eeH, 0b8H, 0dfH, 0bdH, 0f8H, 0c8H, 0ebH, 0b3H
	DB	0c9H, 0bcH, 0a8H, '%I64d', 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bdH
	DB	0f8H, 0c8H, 0ebH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@NGJGJCKH@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
CONST	SEGMENT
??_C@_0EO@NGJGJCKH@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0c4H, 0faH, 0b5H, 0c4H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b3H, 0c9H, 0bcH, 0a8H, 0b5H, 0cdH, 0d3H, 0daH, 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0b5H, 0c4H, 0d7H, 0eeH, 0b5H, 0cdH, 0bdH, 0f8H, 0c8H, 0ebH, 0b3H
	DB	0c9H, 0bcH, 0a8H, '%I64d', 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0bdH
	DB	0f8H, 0c8H, 0ebH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CKMKCLBK@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$LF?D?T?$KN?R?r?$KD?$KM?$LF?$LB?G?$LA?S@
CONST	SEGMENT
??_C@_0DF@CKMKCLBK@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$LF?D?T?$KN?R?r?$KD?$KM?$LF?$LB?G?$LA?S@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0d3H, 0c9H, 0d3H, 0daH, 0cfH, 0b5H
	DB	0cdH, 0b3H, 0ceH, 0acH, 0bbH, 0a4H, 0b5H, 0c4H, 0d4H, 0adH, 0d2H
	DB	0f2H, 0a3H, 0acH, 0b5H, 0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0bdH, 0fbH, 0d6H, 0b9H, 0d3H, 0c3H, 0bbH
	DB	0a7H, 0bdH, 0f8H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GMGBIJBK@?D?z?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$LD?v?$LH?$LP?$LM?d?01?P?$KB?J?$LB?V?$KO?D?Z?$LC@
CONST	SEGMENT
??_C@_0CJ@GMGBIJBK@?D?z?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$LD?v?$LH?$LP?$LM?d?01?P?$KB?J?$LB?V?$KO?D?Z?$LC@ DB 0c4H
	DB	0faH, 0d2H, 0d1H, 0b1H, 0bbH, 0b9H, 0dcH, 0c0H, 0edH, 0d4H, 0b1H
	DB	0c7H, 0ebH, 0b3H, 0f6H, 0b7H, 0bfH, 0bcH, 0e4H, ',1', 0d0H, 0a1H
	DB	0caH, 0b1H, 0d6H, 0aeH, 0c4H, 0daH, 0b2H, 0bbH, 0c4H, 0dcH, 0bdH
	DB	0f8H, 0c8H, 0ebH, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA DD 09cfH ; `CAttemperEngineSink::OnDBLogonSuccess'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA DD 09a5H ; `CAttemperEngineSink::OnEventUserItemGameData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z@4JA DD 098eH ; `CAttemperEngineSink::OnEventUserItemRight'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z@4JA DD 091aH ; `CAttemperEngineSink::OnEventUserItemStatus'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA DD 0866H ; `CAttemperEngineSink::OnEventUserItemScore'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z@4JA DD 07e0H ; `CAttemperEngineSink::SendData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA DD 0761H ; `CAttemperEngineSink::SendGameMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA DD 072dH ; `CAttemperEngineSink::SendRoomMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@BDDILDFJ@MDM_GF_FRAME?5?$LP?r?$LM?$NM?C?$PM?A?n?$LH?$LF?$LL?X?5false@
CONST	SEGMENT
??_C@_0CA@BDDILDFJ@MDM_GF_FRAME?5?$LP?r?$LM?$NM?C?$PM?A?n?$LH?$LF?$LL?X?5false@ DB 'M'
	DB	'DM_GF_FRAME ', 0bfH, 0f2H, 0bcH, 0dcH, 0c3H, 0fcH, 0c1H, 0eeH
	DB	0b7H, 0b5H, 0bbH, 0d8H, ' false', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@GPBCOFJG@?S?N?O?$LH?C?$PM?A?n?$LH?$LF?$LL?X?5false?5?5?5wMainCmdID@
CONST	SEGMENT
??_C@_0DG@GPBCOFJG@?S?N?O?$LH?C?$PM?A?n?$LH?$LF?$LL?X?5false?5?5?5wMainCmdID@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0c3H, 0fcH, 0c1H, 0eeH, 0b7H, 0b5H, 0bbH, 0d8H
	DB	' false   wMainCmdID = %d  wSubCmdID = %d ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EPLGCFIG@?$LL?a?$LH?$KC?I?z?R?l?$LD?$KD?$LF?D?O?$PL?O?$KC?3?5Command?4wMain@
CONST	SEGMENT
??_C@_0EC@EPLGCFIG@?$LL?a?$LH?$KC?I?z?R?l?$LD?$KD?$LF?D?O?$PL?O?$KC?3?5Command?4wMain@ DB 0bbH
	DB	0e1H, 0b7H, 0a2H, 0c9H, 0faH, 0d2H, 0ecH, 0b3H, 0a3H, 0b5H, 0c4H
	DB	0cfH, 0fbH, 0cfH, 0a2H, ': Command.wMainCmdID =%d   Command.wS'
	DB	'ubCmdID = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KGOAMGLA@?$LJ?X?$LB?U?A?$KM?$LN?S?R?l?$LD?$KD?3?5wTableID?$DN?$CFd@
CONST	SEGMENT
??_C@_0BK@KGOAMGLA@?$LJ?X?$LB?U?A?$KM?$LN?S?R?l?$LD?$KD?3?5wTableID?$DN?$CFd@ DB 0b9H
	DB	0d8H, 0b1H, 0d5H, 0c1H, 0acH, 0bdH, 0d3H, 0d2H, 0ecH, 0b3H, 0a3H
	DB	': wTableID=%d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z@4JA DD 066aH ; `CAttemperEngineSink::OnEventTCPNetworkShut'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA DD 0653H ; `CAttemperEngineSink::OnEventTCPNetworkBind'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z@4JA DD 0615H ; `CAttemperEngineSink::OnEventTCPSocketRead'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@IEGHCDCN@?T?$LM?U?$LN?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@
CONST	SEGMENT
??_C@_0CP@IEGHCDCN@?T?$LM?U?$LN?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0c1H, 0acH
	DB	0bdH, 0d3H, 0caH, 0a7H, 0b0H, 0dcH, ' [ %ld ]', 0a3H, 0acH, '%'
	DB	'ld ', 0c3H, 0ebH, 0baH, 0f3H, 0bdH, 0abH, 0d6H, 0d8H, 0d0H, 0c2H
	DB	0c1H, 0acH, 0bdH, 0d3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IFKABAKD@?U?$PN?T?Z?$LH?$KC?K?M?S?N?O?$LH?$LH?$LP?$LM?d?W?$KC?$LC?a?P?E?O?$KC?4?4?4@
CONST	SEGMENT
??_C@_0BM@IFKABAKD@?U?$PN?T?Z?$LH?$KC?K?M?S?N?O?$LH?$LH?$LP?$LM?d?W?$KC?$LC?a?P?E?O?$KC?4?4?4@ DB 0d5H
	DB	0fdH, 0d4H, 0daH, 0b7H, 0a2H, 0cbH, 0cdH, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0d7H, 0a2H, 0b2H, 0e1H, 0d0H, 0c5H, 0cfH
	DB	0a2H, '...', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NEANHCGA@?P?$KN?$LF?w?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@
CONST	SEGMENT
??_C@_0CP@NEANHCGA@?P?$KN?$LF?w?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@ DB 0d0H
	DB	0adH, 0b5H, 0f7H, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0c1H, 0acH
	DB	0bdH, 0d3H, 0caH, 0a7H, 0b0H, 0dcH, ' [ %ld ]', 0a3H, 0acH, '%'
	DB	'ld ', 0c3H, 0ebH, 0baH, 0f3H, 0bdH, 0abH, 0d6H, 0d8H, 0d0H, 0c2H
	DB	0c1H, 0acH, 0bdH, 0d3H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA DD 0551H ; `CAttemperEngineSink::OnEventTCPSocketLink'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CN@ONGINNEE@?S?k?T?$LM?U?$LN?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@
CONST	SEGMENT
??_C@_0CN@ONGINNEE@?S?k?T?$LM?U?$LN?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@ DB 0d3H
	DB	0ebH, 0d4H, 0bcH, 0d5H, 0bdH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H
	DB	0b5H, 0c4H, 0c1H, 0acH, 0bdH, 0d3H, 0b9H, 0d8H, 0b1H, 0d5H, 0c1H
	DB	0cbH, 0a3H, 0acH, '%ld ', 0c3H, 0ebH, 0baH, 0f3H, 0bdH, 0abH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0c1H, 0acH, 0bdH, 0d3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HPLNLDC@?S?k?P?$KN?$LF?w?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@
CONST	SEGMENT
??_C@_0CN@HPLNLDC@?S?k?P?$KN?$LF?w?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@ DB 0d3H
	DB	0ebH, 0d0H, 0adH, 0b5H, 0f7H, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H
	DB	0b5H, 0c4H, 0c1H, 0acH, 0bdH, 0d3H, 0b9H, 0d8H, 0b1H, 0d5H, 0c1H
	DB	0cbH, 0a3H, 0acH, '%ld ', 0c3H, 0ebH, 0baH, 0f3H, 0bdH, 0abH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0c1H, 0acH, 0bdH, 0d3H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z@4JA DD 051cH ; `CAttemperEngineSink::OnEventTCPSocketShut'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z@4JA DD 0420H ; `CAttemperEngineSink::OnEventDataBase'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BH@ENKFPCCP@?$LG?$KI?J?$LB?F?w?R?l?$LD?$KD?$KD?$LKTimerID?$DN?$CFd@
CONST	SEGMENT
??_C@_0BH@ENKFPCCP@?$LG?$KI?J?$LB?F?w?R?l?$LD?$KD?$KD?$LKTimerID?$DN?$CFd@ DB 0b6H
	DB	0a8H, 0caH, 0b1H, 0c6H, 0f7H, 0d2H, 0ecH, 0b3H, 0a3H, 0a3H, 0baH
	DB	'TimerID=%d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z@4JA DD 01ceH ; `CAttemperEngineSink::OnEventTimer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@BAEBLECI@?U?$PN?T?Z?A?$KM?$LN?S?T?$LM?U?$LN?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@
CONST	SEGMENT
??_C@_0BN@BAEBLECI@?U?$PN?T?Z?A?$KM?$LN?S?T?$LM?U?$LN?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@ DB 0d5H
	DB	0fdH, 0d4H, 0daH, 0c1H, 0acH, 0bdH, 0d3H, 0d4H, 0bcH, 0d5H, 0bdH
	DB	0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, ' [ %s:%d ]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EEJNAPCD@?U?$PN?T?Z?A?$KM?$LN?S?P?$KN?$LF?w?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@
CONST	SEGMENT
??_C@_0BN@EEJNAPCD@?U?$PN?T?Z?A?$KM?$LN?S?P?$KN?$LF?w?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@ DB 0d5H
	DB	0fdH, 0d4H, 0daH, 0c1H, 0acH, 0bdH, 0d3H, 0d0H, 0adH, 0b5H, 0f7H
	DB	0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, ' [ %s:%d ]', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA DD 011cH ; `CAttemperEngineSink::OnAttemperEngineConclude'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA DD 0a6H ; `CAttemperEngineSink::OnAttemperEngineStart'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CAttemperEngineSink@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CAttemperEngineSink@@UAE@XZ@4JA DD 07eH ; `CAttemperEngineSink::~CAttemperEngineSink'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?THIS_FILE@@3PADA DB 'g:\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H
	DB	0feH, 0ceH, 0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H
	DB	0a3H, 0bfH, 0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H
	DB	0e9H, 0bcH, 0feH, '\', 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH
	DB	0f1H, 0c6H, 0f7H, '\attemperenginesink.cpp', 00H ; THIS_FILE
_DATA	ENDS
;	COMDAT ??_7CAttemperEngineSink@@6BIServerUserItemSink@@@
CONST	SEGMENT
??_7CAttemperEngineSink@@6BIServerUserItemSink@@@ DD FLAT:??_R4CAttemperEngineSink@@6BIServerUserItemSink@@@ ; CAttemperEngineSink::`vftable'
	DD	FLAT:?Release@CAttemperEngineSink@@W7AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngineSink@@W7AEPAXABU_GUID@@K@Z
	DD	FLAT:?OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z
	DD	FLAT:?OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z
	DD	FLAT:?OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z
	DD	FLAT:?OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngineSink@@6BIMainServiceFrame@@@
CONST	SEGMENT
??_7CAttemperEngineSink@@6BIMainServiceFrame@@@ DD FLAT:??_R4CAttemperEngineSink@@6BIMainServiceFrame@@@ ; CAttemperEngineSink::`vftable'
	DD	FLAT:?Release@CAttemperEngineSink@@W3AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngineSink@@W3AEPAXABU_GUID@@K@Z
	DD	FLAT:?SendRoomMessage@CAttemperEngineSink@@UAE_NKPBDG_N@Z
	DD	FLAT:?SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z
	DD	FLAT:?SendRoomMessage@CAttemperEngineSink@@UAE_NPBDG@Z
	DD	FLAT:?SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z
	DD	FLAT:?SendGameMessage@CAttemperEngineSink@@UAE_NPBDG@Z
	DD	FLAT:?SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z
	DD	FLAT:?SendData@CAttemperEngineSink@@UAE_NKGGPAXG@Z
	DD	FLAT:?SendData@CAttemperEngineSink@@UAE_NEGGPAXG@Z
	DD	FLAT:?SendDataBatchToMobileUser@CAttemperEngineSink@@UAE_NGGGPAXG@Z
	DD	FLAT:?SendDataBatchToCheatUser@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z
	DD	FLAT:?DisconnectCorrespond@CAttemperEngineSink@@UAE_NXZ
	DD	FLAT:?InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z
	DD	FLAT:?DeleteDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z
	DD	FLAT:?SensitiveWordFilter@CAttemperEngineSink@@UAEXPBDPADH@Z
	DD	FLAT:?UnLockAndroidUser@CAttemperEngineSink@@UAEXGG@Z
	DD	FLAT:?DismissPersonalTable@CAttemperEngineSink@@UAEXGG@Z
	DD	FLAT:?CancelCreateTable@CAttemperEngineSink@@UAEXKKKKGK@Z
	DD	FLAT:?UpdateTablePlayerCount@CAttemperEngineSink@@UAEXGGG@Z
	DD	FLAT:?PersonalRoomWriteJoinInfo@CAttemperEngineSink@@UAEXKGGKKPAD@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngineSink@@6BIAttemperEngineSink@@@
CONST	SEGMENT
??_7CAttemperEngineSink@@6BIAttemperEngineSink@@@ DD FLAT:??_R4CAttemperEngineSink@@6BIAttemperEngineSink@@@ ; CAttemperEngineSink::`vftable'
	DD	FLAT:?Release@CAttemperEngineSink@@UAEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
	DD	FLAT:?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z
	DD	FLAT:?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z
	DD	FLAT:?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z
	DD	FLAT:?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z
	DD	FLAT:?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z
	DD	FLAT:?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
	DD	FLAT:?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z
	DD	FLAT:??_ECAttemperEngineSink@@UAEPAXI@Z
	DD	FLAT:?GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z
	DD	FLAT:?GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KKKAAK@@6B@
CONST	SEGMENT
??_7?$CMap@KKKAAK@@6B@ DD FLAT:??_R4?$CMap@KKKAAK@@6B@	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KKKAAK@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KKKAAK@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KKKAAK@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KKKAAK@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@ ; CWHArray<CTableFrame *,CTableFrame * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CSensitiveWordsFilter@@6B@
CONST	SEGMENT
??_7CSensitiveWordsFilter@@6B@ DD FLAT:??_R4CSensitiveWordsFilter@@6B@ ; CSensitiveWordsFilter::`vftable'
	DD	FLAT:??_ECSensitiveWordsFilter@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PBDABQBD@@6B@
CONST	SEGMENT
??_7?$CWHArray@PBDABQBD@@6B@ DD FLAT:??_R4?$CWHArray@PBDABQBD@@6B@ ; CWHArray<char const *,char const * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PBDABQBD@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@
CONST	SEGMENT
??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@ DB 'PersonalRoomService.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7IMainServiceFrame@@6B@
CONST	SEGMENT
??_7IMainServiceFrame@@6B@ DD FLAT:??_R4IMainServiceFrame@@6B@ ; IMainServiceFrame::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IServerUserItemSink@@6B@
CONST	SEGMENT
??_7IServerUserItemSink@@6B@ DD FLAT:??_R4IServerUserItemSink@@6B@ ; IServerUserItemSink::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IAttemperEngineSink@@6B@
CONST	SEGMENT
??_7IAttemperEngineSink@@6B@ DD FLAT:??_R4IAttemperEngineSink@@6B@ ; IAttemperEngineSink::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z@4JA DD 09aH ; `CRecvPacketHelper::GetData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA DD 072H ; `CSendPacketHelper::AddPacket'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\p'
	DB	'acketaide.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPBDG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPBDG@Z@4JA DD 05cH ; `CSendPacketHelper::AddPacket'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBNHGHMI@atlTraceString@
CONST	SEGMENT
??_C@_0P@MBNHGHMI@atlTraceString@ DB 'atlTraceString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ$0
__ehfuncinfo$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$0
__tryblocktable$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ DD 01H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$4
__unwindtable$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$3
	DD	00H
	DD	00H
__ehfuncinfo$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z$0
__ehfuncinfo$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z$0
__ehfuncinfo$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z$0
__ehfuncinfo$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z$0
__unwindtable$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z$2
__ehfuncinfo$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
	DD	01H
	DD	FLAT:__tryblocktable$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z$0
__unwindtable$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z$2
__ehfuncinfo$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
	DD	01H
	DD	FLAT:__tryblocktable$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$2
__catchsym$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$0
__unwindtable$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
	DD	02H
	DD	FLAT:__tryblocktable$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$4
	DD	00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$4
__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$2
__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$0
__ehfuncinfo$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	03H
	DD	FLAT:__tryblocktable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$6
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$7
	DD	04H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CAttemperEngineSink@@UAE@XZ$20 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CAttemperEngineSink@@UAE@XZ$4
__catchsym$??1CAttemperEngineSink@@UAE@XZ$19 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CAttemperEngineSink@@UAE@XZ$2
__catchsym$??1CAttemperEngineSink@@UAE@XZ$18 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CAttemperEngineSink@@UAE@XZ$0
__ehfuncinfo$??1CAttemperEngineSink@@UAE@XZ DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$??1CAttemperEngineSink@@UAE@XZ
	DD	03H
	DD	FLAT:__tryblocktable$??1CAttemperEngineSink@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__tryblocktable$??1CAttemperEngineSink@@UAE@XZ DD 0cH
	DD	0cH
	DD	0dH
	DD	01H
	DD	FLAT:__catchsym$??1CAttemperEngineSink@@UAE@XZ$18
	DD	0eH
	DD	0eH
	DD	0fH
	DD	01H
	DD	FLAT:__catchsym$??1CAttemperEngineSink@@UAE@XZ$19
	DD	010H
	DD	010H
	DD	011H
	DD	01H
	DD	FLAT:__catchsym$??1CAttemperEngineSink@@UAE@XZ$20
__unwindtable$??1CAttemperEngineSink@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$6
	DD	00H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$7
	DD	01H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$8
	DD	02H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$9
	DD	03H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$10
	DD	04H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$11
	DD	05H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$12
	DD	06H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$13
	DD	07H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$14
	DD	08H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$15
	DD	09H
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$16
	DD	0aH
	DD	FLAT:__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$17
	DD	0bH
	DD	00H
	DD	0bH
	DD	00H
	DD	0bH
	DD	00H
	DD	0bH
	DD	00H
	DD	0bH
	DD	00H
	DD	0bH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CAttemperEngineSink@@QAE@XZ DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$??0CAttemperEngineSink@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CAttemperEngineSink@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$10
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KKKAAK@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KKKAAK@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KKKAAK@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KKKAAK@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KKKAAK@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp /ZI
;	COMDAT ?QueryInterface@CAttemperEngineSink@@W7AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngineSink@@W7AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngineSink::QueryInterface`adjustor{8}', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ; CAttemperEngineSink::QueryInterface
?QueryInterface@CAttemperEngineSink@@W7AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngineSink::QueryInterface`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp /ZI
;	COMDAT ?Release@CAttemperEngineSink@@W7AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngineSink@@W7AEXXZ PROC		; [thunk]:CAttemperEngineSink::Release`adjustor{8}', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngineSink@@UAEXXZ ; CAttemperEngineSink::Release
?Release@CAttemperEngineSink@@W7AEXXZ ENDP		; [thunk]:CAttemperEngineSink::Release`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp /ZI
;	COMDAT ?QueryInterface@CAttemperEngineSink@@W3AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngineSink@@W3AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngineSink::QueryInterface`adjustor{4}', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ; CAttemperEngineSink::QueryInterface
?QueryInterface@CAttemperEngineSink@@W3AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngineSink::QueryInterface`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odsp /ZI
;	COMDAT ?Release@CAttemperEngineSink@@W3AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngineSink@@W3AEXXZ PROC		; [thunk]:CAttemperEngineSink::Release`adjustor{4}', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngineSink@@UAEXXZ ; CAttemperEngineSink::Release
?Release@CAttemperEngineSink@@W3AEXXZ ENDP		; [thunk]:CAttemperEngineSink::Release`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KKKAAK@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KKKAAK@@QAE@K@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KKKAAK@@IAE@K@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KKKAAK@@QAE@K@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KKKAAK@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KKKAAK@@IAE@K@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KKKAAK@@IAE@K@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@UtagDistributeInfo@@ABU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@UtagDistributeInfo@@ABU1@@@UAEPAXI@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@UtagDistributeInfo@@ABU1@@@UAEPAXI@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHH@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2b		 jle	 SHORT $LN7@RemoveAt
  000b4	6b 45 f8 0c	 imul	 eax, DWORD PTR _nMoveCount$[ebp], 12
  000b8	50		 push	 eax
  000b9	6b 4d 08 0c	 imul	 ecx, DWORD PTR _nIndex$[ebp], 12
  000bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c3	03 c1		 add	 eax, ecx
  000c5	6b 4d 0c 0c	 imul	 ecx, DWORD PTR _nCount$[ebp], 12
  000c9	03 c1		 add	 eax, ecx
  000cb	50		 push	 eax
  000cc	6b 55 08 0c	 imul	 edx, DWORD PTR _nIndex$[ebp], 12
  000d0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	03 50 04	 add	 edx, DWORD PTR [eax+4]
  000d6	52		 push	 edx
  000d7	e8 00 00 00 00	 call	 _memmove
  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e5	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000e8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000eb	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHH@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	6b 45 08 0c	 imul	 eax, DWORD PTR _nIndex$[ebp], 12
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN3@ElementAt:

; 237  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ PROC ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ENDP ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ PROC	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ ENDP	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@UtagDistributeInfo@@ABU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@UtagDistributeInfo@@ABU1@@@QAE@XZ PROC	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::CWHArray<tagDistributeInfo,tagDistributeInfo const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@UtagDistributeInfo@@ABU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@UtagDistributeInfo@@ABU1@@@QAE@XZ ENDP	; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::CWHArray<tagDistributeInfo,tagDistributeInfo const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ PROC		; _snprintf_s<64>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	6a 40		 push	 64			; 00000040H
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vsnprintf_s
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ ENDP		; _snprintf_s<64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ PROC		; _snprintf_s<256>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 00 01 00 00	 push	 256			; 00000100H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ ENDP		; _snprintf_s<256>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ PROC		; _snprintf_s<512>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 00 02 00 00	 push	 512			; 00000200H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ENDP		; _snprintf_s<512>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\serviceunits.h
;	COMDAT ?GetServiceStatus@CServiceUnits@@QAE?AW4enServiceStatus@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetServiceStatus@CServiceUnits@@QAE?AW4enServiceStatus@@XZ PROC ; CServiceUnits::GetServiceStatus, COMDAT
; _this$ = ecx

; 113  : 	enServiceStatus GetServiceStatus() { return m_ServiceStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 1c 02 00
	00		 mov	 eax, DWORD PTR [eax+540]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetServiceStatus@CServiceUnits@@QAE?AW4enServiceStatus@@XZ ENDP ; CServiceUnits::GetServiceStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCAttemperEngineSink@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAttemperEngineSink@@UAEPAXI@Z PROC			; CAttemperEngineSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CAttemperEngineSink@@UAE@XZ ; CAttemperEngineSink::~CAttemperEngineSink
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 3f 02 00	 push	 147416			; 00023fd8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCAttemperEngineSink@@UAEPAXI@Z ENDP			; CAttemperEngineSink::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?RemoveSystemMessage@CAttemperEngineSink@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RemoveSystemMessage@CAttemperEngineSink@@IAEXXZ PROC	; CAttemperEngineSink::RemoveSystemMessage, COMDAT
; _this$ = ecx

; 1049 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1050 : 	//缓存消息
; 1051 : 	m_SystemMessageBuffer.Append(m_SystemMessageActive);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 68 3f 02 00	 add	 eax, 147304		; 00023f68H
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  0001e	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Append

; 1052 : 	m_SystemMessageActive.RemoveAll();

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  0002c	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAll

; 1053 : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?RemoveSystemMessage@CAttemperEngineSink@@IAEXXZ ENDP	; CAttemperEngineSink::RemoveSystemMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSendMessage$ = 8					; size = 4
_wDataSize$ = 12					; size = 2
?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z PROC ; CAttemperEngineSink::SendSystemMessage, COMDAT
; _this$ = ecx

; 10809: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10810: 	//消息处理
; 10811: 	ASSERT(pSendMessage!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pSendMessage$[ebp], 0
  00010	75 18		 jne	 SHORT $LN8@SendSystem
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN8@SendSystem
  00029	cc		 int	 3
$LN8@SendSystem:

; 10812: 
; 10813: 	//效验数据
; 10814: 	ASSERT(wDataSize==sizeof(CMD_GR_SendMessage)-sizeof(pSendMessage->szSystemMessage)+sizeof(TCHAR)*pSendMessage->wChatLength);

  0002a	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _pSendMessage$[ebp]
  00031	0f b7 51 10	 movzx	 edx, WORD PTR [ecx+16]
  00035	83 c2 12	 add	 edx, 18			; 00000012H
  00038	3b c2		 cmp	 eax, edx
  0003a	74 18		 je	 SHORT $LN9@SendSystem
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z@4JA
  00041	83 c0 05	 add	 eax, 5
  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004f	85 c0		 test	 eax, eax
  00051	74 01		 je	 SHORT $LN9@SendSystem
  00053	cc		 int	 3
$LN9@SendSystem:

; 10815: 	if (wDataSize!=sizeof(CMD_GR_SendMessage)-sizeof(pSendMessage->szSystemMessage)+sizeof(TCHAR)*pSendMessage->wChatLength) 

  00054	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00058	8b 4d 08	 mov	 ecx, DWORD PTR _pSendMessage$[ebp]
  0005b	0f b7 51 10	 movzx	 edx, WORD PTR [ecx+16]
  0005f	83 c2 12	 add	 edx, 18			; 00000012H
  00062	3b c2		 cmp	 eax, edx
  00064	74 07		 je	 SHORT $LN2@SendSystem

; 10816: 		return false;

  00066	32 c0		 xor	 al, al
  00068	e9 88 00 00 00	 jmp	 $LN1@SendSystem
$LN2@SendSystem:

; 10817: 
; 10818: 	//所有房间
; 10819: 	if(pSendMessage->cbAllRoom == TRUE)

  0006d	8b 45 08	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  00070	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  00074	83 f9 01	 cmp	 ecx, 1
  00077	75 2f		 jne	 SHORT $LN3@SendSystem

; 10820: 	{
; 10821: 		pSendMessage->cbAllRoom=FALSE;

  00079	8b 45 08	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  0007c	c6 40 02 00	 mov	 BYTE PTR [eax+2], 0

; 10822: 		m_pITCPSocketService->SendData(MDM_CS_MANAGER_SERVICE,SUB_CS_C_SYSTEM_MESSAGE,pSendMessage,wDataSize);

  00080	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00084	50		 push	 eax
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _pSendMessage$[ebp]
  00088	51		 push	 ecx
  00089	6a 01		 push	 1
  0008b	6a 05		 push	 5
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00090	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	8b 10		 mov	 edx, DWORD PTR [eax]
  0009b	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  000a1	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000a4	ff d0		 call	 eax

; 10823: 	}
; 10824: 	else

  000a6	eb 4b		 jmp	 SHORT $LN4@SendSystem
$LN3@SendSystem:

; 10825: 	{
; 10826: 		//发送系统消息
; 10827: 		if(pSendMessage->cbGame == TRUE)

  000a8	8b 45 08	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  000ab	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000ae	83 f9 01	 cmp	 ecx, 1
  000b1	75 1a		 jne	 SHORT $LN5@SendSystem

; 10828: 			SendGameMessage(pSendMessage->szSystemMessage,SMT_CHAT);

  000b3	6a 01		 push	 1
  000b5	8b 45 08	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  000b8	83 c0 12	 add	 eax, 18			; 00000012H
  000bb	50		 push	 eax
  000bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	83 c1 04	 add	 ecx, 4
  000c2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c8	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000cb	ff d2		 call	 edx
$LN5@SendSystem:

; 10829: 		if(pSendMessage->cbRoom == TRUE)

  000cd	8b 45 08	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  000d0	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  000d4	83 f9 01	 cmp	 ecx, 1
  000d7	75 1a		 jne	 SHORT $LN4@SendSystem

; 10830: 			SendRoomMessage(pSendMessage->szSystemMessage,SMT_CHAT);

  000d9	6a 01		 push	 1
  000db	8b 45 08	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  000de	83 c0 12	 add	 eax, 18			; 00000012H
  000e1	50		 push	 eax
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	83 c1 04	 add	 ecx, 4
  000e8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000eb	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ee	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000f1	ff d2		 call	 edx
$LN4@SendSystem:

; 10831: 	}
; 10832: 
; 10833: 	return true;

  000f3	b0 01		 mov	 al, 1
$LN1@SendSystem:

; 10834: }

  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 08 00	 ret	 8
?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z ENDP ; CAttemperEngineSink::SendSystemMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?MobileUserImmediately@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
_wChairID$1 = -44					; size = 2
_pTableFrame$2 = -40					; size = 4
_nTableIndex$3 = -36					; size = 4
_i$4 = -32						; size = 4
_wChairID$5 = -28					; size = 2
_pTableFrame$6 = -24					; size = 4
_nTableIndex$7 = -20					; size = 4
_i$8 = -16						; size = 4
_nStartIndex$ = -12					; size = 4
_bDynamicJoin$ = -5					; size = 1
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?MobileUserImmediately@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z PROC ; CAttemperEngineSink::MobileUserImmediately, COMDAT
; _this$ = ecx

; 10749: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10750: 	//动态加入
; 10751: 	bool bDynamicJoin=true;

  0000c	c6 45 fb 01	 mov	 BYTE PTR _bDynamicJoin$[ebp], 1

; 10752: 	if (m_pGameServiceAttrib->cbDynamicJoin==FALSE) bDynamicJoin=false;

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00016	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  0001a	85 d2		 test	 edx, edx
  0001c	75 04		 jne	 SHORT $LN8@MobileUser
  0001e	c6 45 fb 00	 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN8@MobileUser:

; 10753: 	if (CServerRule::IsAllowDynamicJoin(m_pGameServiceOption->dwServerRule)==false) bDynamicJoin=false;

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00028	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  00031	83 c4 04	 add	 esp, 4
  00034	0f b6 c0	 movzx	 eax, al
  00037	85 c0		 test	 eax, eax
  00039	75 04		 jne	 SHORT $LN9@MobileUser
  0003b	c6 45 fb 00	 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN9@MobileUser:

; 10754: 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00045	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00049	83 fa 10	 cmp	 edx, 16			; 00000010H
  0004c	75 04		 jne	 SHORT $LN10@MobileUser

; 10755: 	{
; 10756: 		bDynamicJoin=false;

  0004e	c6 45 fb 00	 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN10@MobileUser:

; 10757: 	}
; 10758: 
; 10759: 	//查找桌子
; 10760: 	INT nStartIndex=rand()%m_pGameServiceOption->wTableCount;

  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0005e	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  00062	99		 cdq
  00063	f7 f9		 idiv	 ecx
  00065	89 55 f4	 mov	 DWORD PTR _nStartIndex$[ebp], edx

; 10761: 	for (INT_PTR i=0;i<(m_pGameServiceOption->wTableCount);i++)

  00068	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$8[ebp], 0
  0006f	eb 09		 jmp	 SHORT $LN4@MobileUser
$LN2@MobileUser:
  00071	8b 45 f0	 mov	 eax, DWORD PTR _i$8[ebp]
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 f0	 mov	 DWORD PTR _i$8[ebp], eax
$LN4@MobileUser:
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00080	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00084	39 55 f0	 cmp	 DWORD PTR _i$8[ebp], edx
  00087	0f 8d d0 00 00
	00		 jge	 $LN3@MobileUser

; 10762: 	{
; 10763: 		//定义变量
; 10764: 		INT nTableIndex=((INT)i+nStartIndex)%(INT)(m_pGameServiceOption->wTableCount);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR _i$8[ebp]
  00090	03 45 f4	 add	 eax, DWORD PTR _nStartIndex$[ebp]
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00099	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  0009d	99		 cdq
  0009e	f7 f9		 idiv	 ecx
  000a0	89 55 ec	 mov	 DWORD PTR _nTableIndex$7[ebp], edx

; 10765: 
; 10766: 		//获取桌子
; 10767: 		CTableFrame * pTableFrame=m_TableFrameArray[nTableIndex];

  000a3	8b 45 ec	 mov	 eax, DWORD PTR _nTableIndex$7[ebp]
  000a6	50		 push	 eax
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000b0	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	89 4d e8	 mov	 DWORD PTR _pTableFrame$6[ebp], ecx

; 10768: 		if ((pTableFrame->IsGameStarted()==true)&&(bDynamicJoin==false)) continue;

  000ba	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$6[ebp]
  000bd	8b 10		 mov	 edx, DWORD PTR [eax]
  000bf	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  000c2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c5	ff d0		 call	 eax
  000c7	0f b6 c8	 movzx	 ecx, al
  000ca	83 f9 01	 cmp	 ecx, 1
  000cd	75 0a		 jne	 SHORT $LN11@MobileUser
  000cf	0f b6 45 fb	 movzx	 eax, BYTE PTR _bDynamicJoin$[ebp]
  000d3	85 c0		 test	 eax, eax
  000d5	75 02		 jne	 SHORT $LN11@MobileUser
  000d7	eb 98		 jmp	 SHORT $LN2@MobileUser
$LN11@MobileUser:

; 10769: 		if(pTableFrame->IsTableLocked()) continue;

  000d9	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$6[ebp]
  000dc	8b 10		 mov	 edx, DWORD PTR [eax]
  000de	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  000e1	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  000e4	ff d0		 call	 eax
  000e6	0f b6 c8	 movzx	 ecx, al
  000e9	85 c9		 test	 ecx, ecx
  000eb	74 02		 je	 SHORT $LN12@MobileUser
  000ed	eb 82		 jmp	 SHORT $LN2@MobileUser
$LN12@MobileUser:

; 10770: 		if(pTableFrame->GetChairCount()==pTableFrame->GetNullChairCount()) continue;

  000ef	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$6[ebp]
  000f2	8b 10		 mov	 edx, DWORD PTR [eax]
  000f4	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  000f7	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000fa	ff d0		 call	 eax
  000fc	0f b7 f0	 movzx	 esi, ax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  00102	8b 11		 mov	 edx, DWORD PTR [ecx]
  00104	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  00107	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0010a	ff d0		 call	 eax
  0010c	0f b7 c8	 movzx	 ecx, ax
  0010f	3b f1		 cmp	 esi, ecx
  00111	75 05		 jne	 SHORT $LN13@MobileUser
  00113	e9 59 ff ff ff	 jmp	 $LN2@MobileUser
$LN13@MobileUser:

; 10771: 
; 10772: 		//无效过滤
; 10773: 		WORD wChairID=pTableFrame->GetRandNullChairID();

  00118	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  0011b	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00120	66 89 45 e4	 mov	 WORD PTR _wChairID$5[ebp], ax

; 10774: 		if (wChairID==INVALID_CHAIR) continue;

  00124	0f b7 45 e4	 movzx	 eax, WORD PTR _wChairID$5[ebp]
  00128	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0012d	75 05		 jne	 SHORT $LN14@MobileUser
  0012f	e9 3d ff ff ff	 jmp	 $LN2@MobileUser
$LN14@MobileUser:

; 10775: 
; 10776: 		//用户坐下
; 10777: 		pTableFrame->PerformSitDownAction(wChairID,pIServerUserItem);

  00134	6a 00		 push	 0
  00136	6a 00		 push	 0
  00138	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0013b	50		 push	 eax
  0013c	0f b7 4d e4	 movzx	 ecx, WORD PTR _wChairID$5[ebp]
  00140	51		 push	 ecx
  00141	8b 55 e8	 mov	 edx, DWORD PTR _pTableFrame$6[ebp]
  00144	8b 02		 mov	 eax, DWORD PTR [edx]
  00146	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  00149	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  0014f	ff d2		 call	 edx

; 10778: 		return true;

  00151	b0 01		 mov	 al, 1
  00153	e9 08 01 00 00	 jmp	 $LN1@MobileUser

; 10779: 	}

  00158	e9 14 ff ff ff	 jmp	 $LN2@MobileUser
$LN3@MobileUser:

; 10780: 
; 10781: 	//查找桌子
; 10782: 	nStartIndex=rand()%m_pGameServiceOption->wTableCount;

  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00163	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00169	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  0016d	99		 cdq
  0016e	f7 f9		 idiv	 ecx
  00170	89 55 f4	 mov	 DWORD PTR _nStartIndex$[ebp], edx

; 10783: 	for (INT_PTR i=0;i<(m_pGameServiceOption->wTableCount);i++)

  00173	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  0017a	eb 09		 jmp	 SHORT $LN7@MobileUser
$LN5@MobileUser:
  0017c	8b 45 e0	 mov	 eax, DWORD PTR _i$4[ebp]
  0017f	83 c0 01	 add	 eax, 1
  00182	89 45 e0	 mov	 DWORD PTR _i$4[ebp], eax
$LN7@MobileUser:
  00185	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00188	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0018b	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  0018f	39 55 e0	 cmp	 DWORD PTR _i$4[ebp], edx
  00192	0f 8d a4 00 00
	00		 jge	 $LN6@MobileUser

; 10784: 	{
; 10785: 		//定义变量
; 10786: 		INT nTableIndex=((INT)i+nStartIndex)%(INT)(m_pGameServiceOption->wTableCount);

  00198	8b 45 e0	 mov	 eax, DWORD PTR _i$4[ebp]
  0019b	03 45 f4	 add	 eax, DWORD PTR _nStartIndex$[ebp]
  0019e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  001a4	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  001a8	99		 cdq
  001a9	f7 f9		 idiv	 ecx
  001ab	89 55 dc	 mov	 DWORD PTR _nTableIndex$3[ebp], edx

; 10787: 
; 10788: 		//获取桌子
; 10789: 		CTableFrame * pTableFrame=m_TableFrameArray[nTableIndex];

  001ae	8b 45 dc	 mov	 eax, DWORD PTR _nTableIndex$3[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001bb	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c2	89 4d d8	 mov	 DWORD PTR _pTableFrame$2[ebp], ecx

; 10790: 		if ((pTableFrame->IsGameStarted()==true)&&(bDynamicJoin==false)) continue;

  001c5	8b 45 d8	 mov	 eax, DWORD PTR _pTableFrame$2[ebp]
  001c8	8b 10		 mov	 edx, DWORD PTR [eax]
  001ca	8b 4d d8	 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  001cd	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  001d0	ff d0		 call	 eax
  001d2	0f b6 c8	 movzx	 ecx, al
  001d5	83 f9 01	 cmp	 ecx, 1
  001d8	75 0a		 jne	 SHORT $LN15@MobileUser
  001da	0f b6 45 fb	 movzx	 eax, BYTE PTR _bDynamicJoin$[ebp]
  001de	85 c0		 test	 eax, eax
  001e0	75 02		 jne	 SHORT $LN15@MobileUser
  001e2	eb 98		 jmp	 SHORT $LN5@MobileUser
$LN15@MobileUser:

; 10791: 		if(pTableFrame->IsTableLocked()) continue;

  001e4	8b 45 d8	 mov	 eax, DWORD PTR _pTableFrame$2[ebp]
  001e7	8b 10		 mov	 edx, DWORD PTR [eax]
  001e9	8b 4d d8	 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  001ec	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  001ef	ff d0		 call	 eax
  001f1	0f b6 c8	 movzx	 ecx, al
  001f4	85 c9		 test	 ecx, ecx
  001f6	74 02		 je	 SHORT $LN16@MobileUser
  001f8	eb 82		 jmp	 SHORT $LN5@MobileUser
$LN16@MobileUser:

; 10792: 
; 10793: 		//无效过滤
; 10794: 		WORD wChairID=pTableFrame->GetRandNullChairID();

  001fa	8b 4d d8	 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  001fd	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00202	66 89 45 d4	 mov	 WORD PTR _wChairID$1[ebp], ax

; 10795: 		if (wChairID==INVALID_CHAIR) continue;

  00206	0f b7 45 d4	 movzx	 eax, WORD PTR _wChairID$1[ebp]
  0020a	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0020f	75 05		 jne	 SHORT $LN17@MobileUser
  00211	e9 66 ff ff ff	 jmp	 $LN5@MobileUser
$LN17@MobileUser:

; 10796: 
; 10797: 		//用户坐下
; 10798: 		pTableFrame->PerformSitDownAction(wChairID,pIServerUserItem);

  00216	6a 00		 push	 0
  00218	6a 00		 push	 0
  0021a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0021d	50		 push	 eax
  0021e	0f b7 4d d4	 movzx	 ecx, WORD PTR _wChairID$1[ebp]
  00222	51		 push	 ecx
  00223	8b 55 d8	 mov	 edx, DWORD PTR _pTableFrame$2[ebp]
  00226	8b 02		 mov	 eax, DWORD PTR [edx]
  00228	8b 4d d8	 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  0022b	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  00231	ff d2		 call	 edx

; 10799: 		return true;

  00233	b0 01		 mov	 al, 1
  00235	eb 29		 jmp	 SHORT $LN1@MobileUser

; 10800: 	}

  00237	e9 40 ff ff ff	 jmp	 $LN5@MobileUser
$LN6@MobileUser:

; 10801: 
; 10802: 	//失败
; 10803: 	m_TableFrameArray[0]->SendRequestFailure(pIServerUserItem,TEXT("没找到可进入的游戏桌！"),REQUEST_FAILURE_NORMAL);

  0023c	6a 00		 push	 0
  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GBDECKFN@?C?$LL?U?R?$LF?$LN?$LP?I?$LN?x?H?k?$LF?D?S?N?O?$LH?W?$MA?$KD?$KB@
  00243	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00246	50		 push	 eax
  00247	6a 00		 push	 0
  00249	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024c	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00252	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00257	8b 08		 mov	 ecx, DWORD PTR [eax]
  00259	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 10804: 	return true;

  0025e	b0 01		 mov	 al, 1
$LN1@MobileUser:

; 10805: }

  00260	5f		 pop	 edi
  00261	5e		 pop	 esi
  00262	5b		 pop	 ebx
  00263	8b e5		 mov	 esp, ebp
  00265	5d		 pop	 ebp
  00266	c2 04 00	 ret	 4
?MobileUserImmediately@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ENDP ; CAttemperEngineSink::MobileUserImmediately
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv142 = -16960						; size = 4
tv237 = -16958						; size = 2
_wHeadSize$1 = -16444					; size = 2
_wMaxDeskPos$2 = -16440					; size = 2
_wDestPos$3 = -16436					; size = 2
_pIUserItem$4 = -16432					; size = 4
_wEnumIndex$ = -16428					; size = 2
_SendPacket$ = -16424					; size = 8
_pUserInfo$ = -16416					; size = 4
_bViewModeAll$ = -16409					; size = 1
_wLastPagePos$ = -16408					; size = 2
_wEverySendPage$ = -16404				; size = 2
_wTagerDeskCount$ = -16400				; size = 2
_wTagerDeskPos$ = -16396				; size = 2
_wMobileUserRule$ = -16392				; size = 2
_pUserInfoHead$ = -16388				; size = 4
_cbBuffer$ = -16384					; size = 16376
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
?SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z PROC ; CAttemperEngineSink::SendUserInfoPacketBatchToPage, COMDAT
; _this$ = ecx

; 10653: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 40 42 00 00	 mov	 eax, 16960		; 00004240H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 10654: 	ASSERT(pIServerUserItem!=NULL && pIServerUserItem->GetTableID()!=INVALID_TABLE);

  0001d	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00021	74 18		 je	 SHORT $LN21@SendUserIn
  00023	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0002b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0002e	ff d0		 call	 eax
  00030	0f b7 c8	 movzx	 ecx, ax
  00033	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00039	75 19		 jne	 SHORT $LN22@SendUserIn
$LN21@SendUserIn:
  0003b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z@4JA
  00041	83 c2 01	 add	 edx, 1
  00044	52		 push	 edx
  00045	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004f	85 c0		 test	 eax, eax
  00051	74 01		 je	 SHORT $LN22@SendUserIn
  00053	cc		 int	 3
$LN22@SendUserIn:

; 10655: 	if (pIServerUserItem==NULL || pIServerUserItem->GetTableID()==INVALID_TABLE) return false;

  00054	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00058	74 18		 je	 SHORT $LN5@SendUserIn
  0005a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00062	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00065	ff d0		 call	 eax
  00067	0f b7 c8	 movzx	 ecx, ax
  0006a	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00070	75 07		 jne	 SHORT $LN4@SendUserIn
$LN5@SendUserIn:
  00072	32 c0		 xor	 al, al
  00074	e9 13 05 00 00	 jmp	 $LN1@SendUserIn
$LN4@SendUserIn:

; 10656: 
; 10657: 	//变量定义
; 10658: 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 10659: 	ZeroMemory(cbBuffer,sizeof(cbBuffer));

  00079	68 f8 3f 00 00	 push	 16376			; 00003ff8H
  0007e	6a 00		 push	 0
  00080	8d 85 00 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _memset
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10660: 	tagMobileUserInfoHead * pUserInfoHead=(tagMobileUserInfoHead *)cbBuffer;

  0008f	8d 85 00 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  00095	89 85 fc bf ff
	ff		 mov	 DWORD PTR _pUserInfoHead$[ebp], eax

; 10661: 	WORD wMobileUserRule = pIServerUserItem->GetMobileUserRule();

  0009b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0009e	8b 10		 mov	 edx, DWORD PTR [eax]
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000a3	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  000a9	ff d0		 call	 eax
  000ab	66 89 85 f8 bf
	ff ff		 mov	 WORD PTR _wMobileUserRule$[ebp], ax

; 10662: 	WORD wTagerDeskPos = pIServerUserItem->GetMobileUserDeskPos();

  000b2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b5	8b 10		 mov	 edx, DWORD PTR [eax]
  000b7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ba	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  000c0	ff d0		 call	 eax
  000c2	66 89 85 f4 bf
	ff ff		 mov	 WORD PTR _wTagerDeskPos$[ebp], ax

; 10663: 	WORD wTagerDeskCount=m_pInitParameter->m_wVisibleTableCount;

  000c9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000cf	66 8b 51 6c	 mov	 dx, WORD PTR [ecx+108]
  000d3	66 89 95 f0 bf
	ff ff		 mov	 WORD PTR _wTagerDeskCount$[ebp], dx

; 10664: 	WORD wEverySendPage = m_pInitParameter->m_wEverySendPageCount;

  000da	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000e0	66 8b 51 6e	 mov	 dx, WORD PTR [ecx+110]
  000e4	66 89 95 ec bf
	ff ff		 mov	 WORD PTR _wEverySendPage$[ebp], dx

; 10665: 	WORD wLastPagePos=(m_pGameServiceOption->wTableCount/wTagerDeskCount)*wTagerDeskCount;

  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000f1	0f b7 41 46	 movzx	 eax, WORD PTR [ecx+70]
  000f5	0f b7 8d f0 bf
	ff ff		 movzx	 ecx, WORD PTR _wTagerDeskCount$[ebp]
  000fc	99		 cdq
  000fd	f7 f9		 idiv	 ecx
  000ff	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  00106	0f af c2	 imul	 eax, edx
  00109	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _wLastPagePos$[ebp], ax

; 10666: 	bool bViewModeAll = ((wMobileUserRule&VIEW_MODE_ALL)!=0);

  00110	0f b7 85 f8 bf
	ff ff		 movzx	 eax, WORD PTR _wMobileUserRule$[ebp]
  00117	83 e0 01	 and	 eax, 1
  0011a	74 0c		 je	 SHORT $LN23@SendUserIn
  0011c	c7 85 c0 bd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv142[ebp], 1
  00126	eb 0a		 jmp	 SHORT $LN24@SendUserIn
$LN23@SendUserIn:
  00128	c7 85 c0 bd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN24@SendUserIn:
  00132	8a 8d c0 bd ff
	ff		 mov	 cl, BYTE PTR tv142[ebp]
  00138	88 8d e7 bf ff
	ff		 mov	 BYTE PTR _bViewModeAll$[ebp], cl

; 10667: 
; 10668: 	//定义变量
; 10669: 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  0013e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00141	8b 10		 mov	 edx, DWORD PTR [eax]
  00143	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00146	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00149	ff d0		 call	 eax
  0014b	89 85 e0 bf ff
	ff		 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 10670: 	CSendPacketHelper SendPacket(cbBuffer+sizeof(tagMobileUserInfoHead),sizeof(cbBuffer)-sizeof(tagMobileUserInfoHead));

  00151	68 7f 3f 00 00	 push	 16255			; 00003f7fH
  00156	8d 85 79 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp+121]
  0015c	50		 push	 eax
  0015d	8d 8d d8 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00163	e8 00 00 00 00	 call	 ??0CSendPacketHelper@@QAE@PAXG@Z ; CSendPacketHelper::CSendPacketHelper

; 10671: 
; 10672: 	//用户属性
; 10673: 	pUserInfoHead->wFaceID=pUserInfo->wFaceID;

  00168	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0016e	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00174	66 8b 91 88 00
	00 00		 mov	 dx, WORD PTR [ecx+136]
  0017b	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 10674: 	pUserInfoHead->dwGameID=pUserInfo->dwGameID;

  0017f	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00185	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0018b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0018e	89 10		 mov	 DWORD PTR [eax], edx

; 10675: 	pUserInfoHead->dwUserID=pUserInfo->dwUserID;

  00190	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00196	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0019c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019e	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 10676: 	pUserInfoHead->dwCustomID=pUserInfo->dwCustomID;

  001a1	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001a7	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001ad	8b 91 8a 00 00
	00		 mov	 edx, DWORD PTR [ecx+138]
  001b3	89 50 0a	 mov	 DWORD PTR [eax+10], edx

; 10677: 	pUserInfoHead->dwAgentID=pUserInfo->dwAgentID;

  001b6	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001bc	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001c2	8b 91 fc 00 00
	00		 mov	 edx, DWORD PTR [ecx+252]
  001c8	89 50 71	 mov	 DWORD PTR [eax+113], edx

; 10678: 
; 10679: 	//用户属性
; 10680: 	pUserInfoHead->cbGender=pUserInfo->cbGender;

  001cb	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001d1	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001d7	8a 91 8e 00 00
	00		 mov	 dl, BYTE PTR [ecx+142]
  001dd	88 50 0e	 mov	 BYTE PTR [eax+14], dl

; 10681: 	pUserInfoHead->cbMemberOrder=pUserInfo->cbMemberOrder;

  001e0	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001e6	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001ec	8a 91 8f 00 00
	00		 mov	 dl, BYTE PTR [ecx+143]
  001f2	88 50 0f	 mov	 BYTE PTR [eax+15], dl

; 10682: 
; 10683: 	//用户状态
; 10684: 	pUserInfoHead->wTableID=pUserInfo->wTableID;

  001f5	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001fb	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00201	66 8b 91 91 00
	00 00		 mov	 dx, WORD PTR [ecx+145]
  00208	66 89 50 10	 mov	 WORD PTR [eax+16], dx

; 10685: 	pUserInfoHead->wChairID=pUserInfo->wChairID;

  0020c	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00212	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00218	66 8b 91 95 00
	00 00		 mov	 dx, WORD PTR [ecx+149]
  0021f	66 89 50 12	 mov	 WORD PTR [eax+18], dx

; 10686: 	pUserInfoHead->cbUserStatus=pUserInfo->cbUserStatus;

  00223	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00229	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0022f	8a 91 97 00 00
	00		 mov	 dl, BYTE PTR [ecx+151]
  00235	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 10687: 
; 10688: 	//用户局数
; 10689: 	pUserInfoHead->dwWinCount=pUserInfo->dwWinCount;

  00238	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0023e	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00244	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  0024a	89 50 55	 mov	 DWORD PTR [eax+85], edx

; 10690: 	pUserInfoHead->dwLostCount=pUserInfo->dwLostCount;

  0024d	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00253	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00259	8b 91 dc 00 00
	00		 mov	 edx, DWORD PTR [ecx+220]
  0025f	89 50 59	 mov	 DWORD PTR [eax+89], edx

; 10691: 	pUserInfoHead->dwDrawCount=pUserInfo->dwDrawCount;

  00262	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00268	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0026e	8b 91 e0 00 00
	00		 mov	 edx, DWORD PTR [ecx+224]
  00274	89 50 5d	 mov	 DWORD PTR [eax+93], edx

; 10692: 	pUserInfoHead->dwFleeCount=pUserInfo->dwFleeCount;

  00277	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0027d	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00283	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  00289	89 50 61	 mov	 DWORD PTR [eax+97], edx

; 10693: 	pUserInfoHead->dwExperience=pUserInfo->dwExperience;

  0028c	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00292	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00298	8b 91 ec 00 00
	00		 mov	 edx, DWORD PTR [ecx+236]
  0029e	89 50 65	 mov	 DWORD PTR [eax+101], edx

; 10694: 	pUserInfoHead->lIntegralCount=pUserInfo->lIntegralCount;

  002a1	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  002a7	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  002ad	8b 91 f4 00 00
	00		 mov	 edx, DWORD PTR [ecx+244]
  002b3	89 50 69	 mov	 DWORD PTR [eax+105], edx
  002b6	8b 89 f8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+248]
  002bc	89 48 6d	 mov	 DWORD PTR [eax+109], ecx

; 10695: 
; 10696: 	//用户成绩
; 10697: 	/*pUserInfoHead->lIngot=pUserInfo->lIngot;
; 10698: 	pUserInfoHead->dBeans=pUserInfo->dBeans;
; 10699: 	pUserInfoHead->lScore = pUserInfo->lScore;*/
; 10700: 	pUserInfoHead->bConsumptionType = pUserInfo->bConsumptionType;

  002bf	8b b5 e0 bf ff
	ff		 mov	 esi, DWORD PTR _pUserInfo$[ebp]
  002c5	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  002cb	8b bd fc bf ff
	ff		 mov	 edi, DWORD PTR _pUserInfoHead$[ebp]
  002d1	83 c7 15	 add	 edi, 21			; 00000015H
  002d4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002d9	f3 a5		 rep movsd

; 10701: 
; 10702: 	pUserInfoHead->bConsumptionType.lScore += pIServerUserItem->GetTrusteeScore();

  002db	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002e3	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  002e9	ff d0		 call	 eax
  002eb	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  002f1	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  002f4	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  002f7	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  002fd	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  00300	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 10703: 	pUserInfoHead->bConsumptionType.lScore += pIServerUserItem->GetFrozenedScore();

  00303	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0030b	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00311	ff d0		 call	 eax
  00313	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00319	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  0031c	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  0031f	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00325	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  00328	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 10704: 	pUserInfoHead->dwClientAddr=pIServerUserItem->GetClientAddr();

  0032b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0032e	8b 10		 mov	 edx, DWORD PTR [eax]
  00330	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00333	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00336	ff d0		 call	 eax
  00338	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  0033e	89 41 75	 mov	 DWORD PTR [ecx+117], eax

; 10705: 
; 10706: 	//叠加信息
; 10707: 	SendPacket.AddPacket(pUserInfo->szNickName,DTP_GR_NICK_NAME);

  00341	6a 0a		 push	 10			; 0000000aH
  00343	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00349	83 c0 0c	 add	 eax, 12			; 0000000cH
  0034c	50		 push	 eax
  0034d	8d 8d d8 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00353	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 10708: 
; 10709: 	//枚举用户
; 10710: 	WORD wEnumIndex=0;

  00358	33 c0		 xor	 eax, eax
  0035a	66 89 85 d4 bf
	ff ff		 mov	 WORD PTR _wEnumIndex$[ebp], ax
$LN2@SendUserIn:

; 10711: 	while(wEnumIndex<m_ServerUserManager.GetUserItemCount())

  00361	0f b7 b5 d4 bf
	ff ff		 movzx	 esi, WORD PTR _wEnumIndex$[ebp]
  00368	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0036b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00371	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00374	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  0037a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0037d	ff d0		 call	 eax
  0037f	3b f0		 cmp	 esi, eax
  00381	0f 83 03 02 00
	00		 jae	 $LN3@SendUserIn

; 10712: 	{
; 10713: 		//过滤用户
; 10714: 		IServerUserItem *pIUserItem=m_ServerUserManager.EnumUserItem(wEnumIndex++);

  00387	66 8b 85 d4 bf
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  0038e	66 89 85 c2 bd
	ff ff		 mov	 WORD PTR tv237[ebp], ax
  00395	0f b7 8d c2 bd
	ff ff		 movzx	 ecx, WORD PTR tv237[ebp]
  0039c	51		 push	 ecx
  0039d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a0	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  003a6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003a9	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  003af	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  003b2	ff d2		 call	 edx
  003b4	89 85 d0 bf ff
	ff		 mov	 DWORD PTR _pIUserItem$4[ebp], eax
  003ba	66 8b 85 d4 bf
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  003c1	66 83 c0 01	 add	 ax, 1
  003c5	66 89 85 d4 bf
	ff ff		 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 10715: 		if (pIUserItem==NULL) continue;

  003cc	83 bd d0 bf ff
	ff 00		 cmp	 DWORD PTR _pIUserItem$4[ebp], 0
  003d3	75 02		 jne	 SHORT $LN6@SendUserIn
  003d5	eb 8a		 jmp	 SHORT $LN2@SendUserIn
$LN6@SendUserIn:

; 10716: 		if (pIUserItem->IsMobileUser()==false) continue;

  003d7	8b 85 d0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$4[ebp]
  003dd	8b 10		 mov	 edx, DWORD PTR [eax]
  003df	8b 8d d0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$4[ebp]
  003e5	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  003eb	ff d0		 call	 eax
  003ed	0f b6 c8	 movzx	 ecx, al
  003f0	85 c9		 test	 ecx, ecx
  003f2	75 05		 jne	 SHORT $LN7@SendUserIn
  003f4	e9 68 ff ff ff	 jmp	 $LN2@SendUserIn
$LN7@SendUserIn:

; 10717: 
; 10718: 		//部分可视
; 10719: 		if(!bViewModeAll)

  003f9	0f b6 85 e7 bf
	ff ff		 movzx	 eax, BYTE PTR _bViewModeAll$[ebp]
  00400	85 c0		 test	 eax, eax
  00402	0f 85 36 01 00
	00		 jne	 $LN8@SendUserIn

; 10720: 		{
; 10721: 			WORD wDestPos=pIUserItem->GetMobileUserDeskPos();

  00408	8b 85 d0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$4[ebp]
  0040e	8b 10		 mov	 edx, DWORD PTR [eax]
  00410	8b 8d d0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$4[ebp]
  00416	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  0041c	ff d0		 call	 eax
  0041e	66 89 85 cc bf
	ff ff		 mov	 WORD PTR _wDestPos$3[ebp], ax

; 10722: 			WORD wMaxDeskPos = m_pGameServiceOption->wTableCount-wTagerDeskCount;

  00425	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00428	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0042b	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  0042f	0f b7 85 f0 bf
	ff ff		 movzx	 eax, WORD PTR _wTagerDeskCount$[ebp]
  00436	2b d0		 sub	 edx, eax
  00438	66 89 95 c8 bf
	ff ff		 mov	 WORD PTR _wMaxDeskPos$2[ebp], dx

; 10723: 			if(wDestPos > wMaxDeskPos) wDestPos = wMaxDeskPos;

  0043f	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  00446	0f b7 8d c8 bf
	ff ff		 movzx	 ecx, WORD PTR _wMaxDeskPos$2[ebp]
  0044d	3b c1		 cmp	 eax, ecx
  0044f	7e 0e		 jle	 SHORT $LN9@SendUserIn
  00451	66 8b 85 c8 bf
	ff ff		 mov	 ax, WORD PTR _wMaxDeskPos$2[ebp]
  00458	66 89 85 cc bf
	ff ff		 mov	 WORD PTR _wDestPos$3[ebp], ax
$LN9@SendUserIn:

; 10724: 
; 10725: 			if (wTagerDeskPos==0)

  0045f	0f b7 85 f4 bf
	ff ff		 movzx	 eax, WORD PTR _wTagerDeskPos$[ebp]
  00466	85 c0		 test	 eax, eax
  00468	75 29		 jne	 SHORT $LN10@SendUserIn

; 10726: 			{
; 10727: 				if ((wDestPos < 0)||(wDestPos > 2*wTagerDeskCount))continue;

  0046a	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  00471	85 c0		 test	 eax, eax
  00473	7c 14		 jl	 SHORT $LN13@SendUserIn
  00475	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  0047c	0f b7 8d f0 bf
	ff ff		 movzx	 ecx, WORD PTR _wTagerDeskCount$[ebp]
  00483	d1 e1		 shl	 ecx, 1
  00485	3b c1		 cmp	 eax, ecx
  00487	7e 05		 jle	 SHORT $LN12@SendUserIn
$LN13@SendUserIn:
  00489	e9 d3 fe ff ff	 jmp	 $LN2@SendUserIn
$LN12@SendUserIn:

; 10728: 			}

  0048e	e9 ab 00 00 00	 jmp	 $LN8@SendUserIn
$LN10@SendUserIn:

; 10729: 			else if (wTagerDeskPos==wLastPagePos)

  00493	0f b7 85 f4 bf
	ff ff		 movzx	 eax, WORD PTR _wTagerDeskPos$[ebp]
  0049a	0f b7 8d e8 bf
	ff ff		 movzx	 ecx, WORD PTR _wLastPagePos$[ebp]
  004a1	3b c1		 cmp	 eax, ecx
  004a3	75 3f		 jne	 SHORT $LN14@SendUserIn

; 10730: 			{
; 10731: 				if ((wDestPos < wLastPagePos-2*wTagerDeskCount)||(wDestPos > wLastPagePos+wTagerDeskCount))continue;

  004a5	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  004ac	0f b7 8d e8 bf
	ff ff		 movzx	 ecx, WORD PTR _wLastPagePos$[ebp]
  004b3	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  004ba	d1 e2		 shl	 edx, 1
  004bc	2b ca		 sub	 ecx, edx
  004be	3b c1		 cmp	 eax, ecx
  004c0	7c 1b		 jl	 SHORT $LN17@SendUserIn
  004c2	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  004c9	0f b7 8d e8 bf
	ff ff		 movzx	 ecx, WORD PTR _wLastPagePos$[ebp]
  004d0	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  004d7	03 ca		 add	 ecx, edx
  004d9	3b c1		 cmp	 eax, ecx
  004db	7e 05		 jle	 SHORT $LN16@SendUserIn
$LN17@SendUserIn:
  004dd	e9 7f fe ff ff	 jmp	 $LN2@SendUserIn
$LN16@SendUserIn:

; 10732: 			}
; 10733: 			else

  004e2	eb 5a		 jmp	 SHORT $LN8@SendUserIn
$LN14@SendUserIn:

; 10734: 			{
; 10735: 				if ((wDestPos < wTagerDeskPos-wEverySendPage*wTagerDeskCount)||(wDestPos > wTagerDeskPos+wEverySendPage*wTagerDeskCount+wTagerDeskCount-1))continue;

  004e4	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  004eb	0f b7 8d f4 bf
	ff ff		 movzx	 ecx, WORD PTR _wTagerDeskPos$[ebp]
  004f2	0f b7 95 ec bf
	ff ff		 movzx	 edx, WORD PTR _wEverySendPage$[ebp]
  004f9	0f b7 b5 f0 bf
	ff ff		 movzx	 esi, WORD PTR _wTagerDeskCount$[ebp]
  00500	0f af d6	 imul	 edx, esi
  00503	2b ca		 sub	 ecx, edx
  00505	3b c1		 cmp	 eax, ecx
  00507	7c 30		 jl	 SHORT $LN19@SendUserIn
  00509	0f b7 85 cc bf
	ff ff		 movzx	 eax, WORD PTR _wDestPos$3[ebp]
  00510	0f b7 8d f4 bf
	ff ff		 movzx	 ecx, WORD PTR _wTagerDeskPos$[ebp]
  00517	0f b7 95 ec bf
	ff ff		 movzx	 edx, WORD PTR _wEverySendPage$[ebp]
  0051e	0f b7 b5 f0 bf
	ff ff		 movzx	 esi, WORD PTR _wTagerDeskCount$[ebp]
  00525	0f af d6	 imul	 edx, esi
  00528	03 ca		 add	 ecx, edx
  0052a	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  00531	8d 4c 11 ff	 lea	 ecx, DWORD PTR [ecx+edx-1]
  00535	3b c1		 cmp	 eax, ecx
  00537	7e 05		 jle	 SHORT $LN8@SendUserIn
$LN19@SendUserIn:
  00539	e9 23 fe ff ff	 jmp	 $LN2@SendUserIn
$LN8@SendUserIn:

; 10736: 			}
; 10737: 		}
; 10738: 
; 10739: 		//发送数据
; 10740: 		WORD wHeadSize=sizeof(tagMobileUserInfoHead);

  0053e	b8 79 00 00 00	 mov	 eax, 121		; 00000079H
  00543	66 89 85 c4 bf
	ff ff		 mov	 WORD PTR _wHeadSize$1[ebp], ax

; 10741: 		SendData(pIUserItem,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  0054a	0f b7 b5 c4 bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$1[ebp]
  00551	8d 8d d8 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00557	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  0055c	0f b7 c0	 movzx	 eax, ax
  0055f	03 f0		 add	 esi, eax
  00561	56		 push	 esi
  00562	8d 8d 00 c0 ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00568	51		 push	 ecx
  00569	6a 64		 push	 100			; 00000064H
  0056b	6a 03		 push	 3
  0056d	8b 95 d0 bf ff
	ff		 mov	 edx, DWORD PTR _pIUserItem$4[ebp]
  00573	52		 push	 edx
  00574	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00577	83 c1 04	 add	 ecx, 4
  0057a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0057d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00580	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00583	ff d0		 call	 eax

; 10742: 	}

  00585	e9 d7 fd ff ff	 jmp	 $LN2@SendUserIn
$LN3@SendUserIn:

; 10743: 
; 10744: 	return true;

  0058a	b0 01		 mov	 al, 1
$LN1@SendUserIn:

; 10745: }

  0058c	5f		 pop	 edi
  0058d	5e		 pop	 esi
  0058e	5b		 pop	 ebx
  0058f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00592	33 cd		 xor	 ecx, ebp
  00594	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00599	8b e5		 mov	 esp, ebp
  0059b	5d		 pop	 ebp
  0059c	c2 04 00	 ret	 4
?SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ENDP ; CAttemperEngineSink::SendUserInfoPacketBatchToPage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendVisibleTableUserInfoToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
tv79 = -16956						; size = 4
tv138 = -16954						; size = 2
_wHeadSize$1 = -16440					; size = 2
_SendPacket$2 = -16436					; size = 8
_pUserInfo$3 = -16428					; size = 4
_wLastPagePos$4 = -16424				; size = 2
_wUserPagePos$5 = -16420				; size = 2
_pIUserItem$6 = -16416					; size = 4
_wEnumIndex$ = -16412					; size = 2
_bViewModeAll$ = -16405					; size = 1
_wEverySendPage$ = -16404				; size = 2
_wTagerDeskCount$ = -16400				; size = 2
_wTagerDeskPos$ = -16396				; size = 2
_wMobileUserRule$ = -16392				; size = 2
_pUserInfoHead$ = -16388				; size = 4
_cbBuffer$ = -16384					; size = 16376
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_wTablePos$ = 12					; size = 2
?SendVisibleTableUserInfoToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z PROC ; CAttemperEngineSink::SendVisibleTableUserInfoToMobileUser, COMDAT
; _this$ = ecx

; 10562: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 3c 42 00 00	 mov	 eax, 16956		; 0000423cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 10563: 	//变量定义
; 10564: 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 10565: 	tagMobileUserInfoHead * pUserInfoHead=(tagMobileUserInfoHead *)cbBuffer;

  0001d	8d 85 00 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  00023	89 85 fc bf ff
	ff		 mov	 DWORD PTR _pUserInfoHead$[ebp], eax

; 10566: 	WORD wMobileUserRule = pIServerUserItem->GetMobileUserRule();

  00029	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00031	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00037	ff d0		 call	 eax
  00039	66 89 85 f8 bf
	ff ff		 mov	 WORD PTR _wMobileUserRule$[ebp], ax

; 10567: 	WORD wTagerDeskPos = pIServerUserItem->GetMobileUserDeskPos();

  00040	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00048	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  0004e	ff d0		 call	 eax
  00050	66 89 85 f4 bf
	ff ff		 mov	 WORD PTR _wTagerDeskPos$[ebp], ax

; 10568: 	WORD wTagerDeskCount = m_pInitParameter->m_wVisibleTableCount;

  00057	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0005d	66 8b 51 6c	 mov	 dx, WORD PTR [ecx+108]
  00061	66 89 95 f0 bf
	ff ff		 mov	 WORD PTR _wTagerDeskCount$[ebp], dx

; 10569: 	WORD wEverySendPage = m_pInitParameter->m_wEverySendPageCount;

  00068	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0006e	66 8b 51 6e	 mov	 dx, WORD PTR [ecx+110]
  00072	66 89 95 ec bf
	ff ff		 mov	 WORD PTR _wEverySendPage$[ebp], dx

; 10570: 	bool bViewModeAll = ((wMobileUserRule&VIEW_MODE_ALL)!=0);

  00079	0f b7 85 f8 bf
	ff ff		 movzx	 eax, WORD PTR _wMobileUserRule$[ebp]
  00080	83 e0 01	 and	 eax, 1
  00083	74 0c		 je	 SHORT $LN20@SendVisibl
  00085	c7 85 c4 bd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv79[ebp], 1
  0008f	eb 0a		 jmp	 SHORT $LN21@SendVisibl
$LN20@SendVisibl:
  00091	c7 85 c4 bd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN21@SendVisibl:
  0009b	8a 8d c4 bd ff
	ff		 mov	 cl, BYTE PTR tv79[ebp]
  000a1	88 8d eb bf ff
	ff		 mov	 BYTE PTR _bViewModeAll$[ebp], cl

; 10571: 	if(wTagerDeskCount==0) wTagerDeskCount=1;

  000a7	0f b7 85 f0 bf
	ff ff		 movzx	 eax, WORD PTR _wTagerDeskCount$[ebp]
  000ae	85 c0		 test	 eax, eax
  000b0	75 0c		 jne	 SHORT $LN4@SendVisibl
  000b2	b8 01 00 00 00	 mov	 eax, 1
  000b7	66 89 85 f0 bf
	ff ff		 mov	 WORD PTR _wTagerDeskCount$[ebp], ax
$LN4@SendVisibl:

; 10572: 
; 10573: 	//枚举用户
; 10574: 	WORD wEnumIndex=0;

  000be	33 c0		 xor	 eax, eax
  000c0	66 89 85 e4 bf
	ff ff		 mov	 WORD PTR _wEnumIndex$[ebp], ax
$LN2@SendVisibl:

; 10575: 	while(wEnumIndex<m_ServerUserManager.GetUserItemCount())

  000c7	0f b7 b5 e4 bf
	ff ff		 movzx	 esi, WORD PTR _wEnumIndex$[ebp]
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000d7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  000e0	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000e3	ff d0		 call	 eax
  000e5	3b f0		 cmp	 esi, eax
  000e7	0f 83 2b 04 00
	00		 jae	 $LN3@SendVisibl

; 10576: 	{
; 10577: 		//过滤用户
; 10578: 		IServerUserItem *pIUserItem=m_ServerUserManager.EnumUserItem(wEnumIndex++);

  000ed	66 8b 85 e4 bf
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  000f4	66 89 85 c6 bd
	ff ff		 mov	 WORD PTR tv138[ebp], ax
  000fb	0f b7 8d c6 bd
	ff ff		 movzx	 ecx, WORD PTR tv138[ebp]
  00102	51		 push	 ecx
  00103	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0010c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010f	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00115	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00118	ff d2		 call	 edx
  0011a	89 85 e0 bf ff
	ff		 mov	 DWORD PTR _pIUserItem$6[ebp], eax
  00120	66 8b 85 e4 bf
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00127	66 83 c0 01	 add	 ax, 1
  0012b	66 89 85 e4 bf
	ff ff		 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 10579: 		if (pIUserItem==NULL) continue;

  00132	83 bd e0 bf ff
	ff 00		 cmp	 DWORD PTR _pIUserItem$6[ebp], 0
  00139	75 02		 jne	 SHORT $LN5@SendVisibl
  0013b	eb 8a		 jmp	 SHORT $LN2@SendVisibl
$LN5@SendVisibl:

; 10580: 		if (pIUserItem==pIServerUserItem) continue;

  0013d	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$6[ebp]
  00143	3b 45 08	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00146	75 05		 jne	 SHORT $LN6@SendVisibl
  00148	e9 7a ff ff ff	 jmp	 $LN2@SendVisibl
$LN6@SendVisibl:

; 10581: 		if (pIUserItem->GetTableID()==INVALID_TABLE) continue;

  0014d	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$6[ebp]
  00153	8b 10		 mov	 edx, DWORD PTR [eax]
  00155	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$6[ebp]
  0015b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0015e	ff d0		 call	 eax
  00160	0f b7 c8	 movzx	 ecx, ax
  00163	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00169	75 05		 jne	 SHORT $LN7@SendVisibl
  0016b	e9 57 ff ff ff	 jmp	 $LN2@SendVisibl
$LN7@SendVisibl:

; 10582: 
; 10583: 		//部分可视
; 10584: 		if(wTablePos!=INVALID_WORD && !bViewModeAll)

  00170	0f b7 45 0c	 movzx	 eax, WORD PTR _wTablePos$[ebp]
  00174	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00179	0f 84 24 01 00
	00		 je	 $LN8@SendVisibl
  0017f	0f b6 85 eb bf
	ff ff		 movzx	 eax, BYTE PTR _bViewModeAll$[ebp]
  00186	85 c0		 test	 eax, eax
  00188	0f 85 15 01 00
	00		 jne	 $LN8@SendVisibl

; 10585: 		{
; 10586: 			WORD wUserPagePos=pIUserItem->GetMobileUserDeskPos();

  0018e	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$6[ebp]
  00194	8b 10		 mov	 edx, DWORD PTR [eax]
  00196	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$6[ebp]
  0019c	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  001a2	ff d0		 call	 eax
  001a4	66 89 85 dc bf
	ff ff		 mov	 WORD PTR _wUserPagePos$5[ebp], ax

; 10587: 			WORD wLastPagePos=(m_pGameServiceOption->wTableCount/wTagerDeskCount)*wTagerDeskCount;

  001ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ae	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001b1	0f b7 41 46	 movzx	 eax, WORD PTR [ecx+70]
  001b5	0f b7 8d f0 bf
	ff ff		 movzx	 ecx, WORD PTR _wTagerDeskCount$[ebp]
  001bc	99		 cdq
  001bd	f7 f9		 idiv	 ecx
  001bf	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  001c6	0f af c2	 imul	 eax, edx
  001c9	66 89 85 d8 bf
	ff ff		 mov	 WORD PTR _wLastPagePos$4[ebp], ax

; 10588: 
; 10589: 			if (wTablePos==0)

  001d0	0f b7 45 0c	 movzx	 eax, WORD PTR _wTablePos$[ebp]
  001d4	85 c0		 test	 eax, eax
  001d6	75 29		 jne	 SHORT $LN9@SendVisibl

; 10590: 			{
; 10591: 				if ((wUserPagePos < 0)||(wUserPagePos > 2*wTagerDeskCount))continue;

  001d8	0f b7 85 dc bf
	ff ff		 movzx	 eax, WORD PTR _wUserPagePos$5[ebp]
  001df	85 c0		 test	 eax, eax
  001e1	7c 14		 jl	 SHORT $LN12@SendVisibl
  001e3	0f b7 85 dc bf
	ff ff		 movzx	 eax, WORD PTR _wUserPagePos$5[ebp]
  001ea	0f b7 8d f0 bf
	ff ff		 movzx	 ecx, WORD PTR _wTagerDeskCount$[ebp]
  001f1	d1 e1		 shl	 ecx, 1
  001f3	3b c1		 cmp	 eax, ecx
  001f5	7e 05		 jle	 SHORT $LN11@SendVisibl
$LN12@SendVisibl:
  001f7	e9 cb fe ff ff	 jmp	 $LN2@SendVisibl
$LN11@SendVisibl:

; 10592: 			}

  001fc	e9 a2 00 00 00	 jmp	 $LN8@SendVisibl
$LN9@SendVisibl:

; 10593: 			else if (wTablePos==wLastPagePos)

  00201	0f b7 45 0c	 movzx	 eax, WORD PTR _wTablePos$[ebp]
  00205	0f b7 8d d8 bf
	ff ff		 movzx	 ecx, WORD PTR _wLastPagePos$4[ebp]
  0020c	3b c1		 cmp	 eax, ecx
  0020e	75 3f		 jne	 SHORT $LN13@SendVisibl

; 10594: 			{
; 10595: 				if ((wUserPagePos < wLastPagePos-2*wTagerDeskCount)||(wUserPagePos > wLastPagePos+wTagerDeskCount))continue;

  00210	0f b7 85 dc bf
	ff ff		 movzx	 eax, WORD PTR _wUserPagePos$5[ebp]
  00217	0f b7 8d d8 bf
	ff ff		 movzx	 ecx, WORD PTR _wLastPagePos$4[ebp]
  0021e	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  00225	d1 e2		 shl	 edx, 1
  00227	2b ca		 sub	 ecx, edx
  00229	3b c1		 cmp	 eax, ecx
  0022b	7c 1b		 jl	 SHORT $LN16@SendVisibl
  0022d	0f b7 85 dc bf
	ff ff		 movzx	 eax, WORD PTR _wUserPagePos$5[ebp]
  00234	0f b7 8d d8 bf
	ff ff		 movzx	 ecx, WORD PTR _wLastPagePos$4[ebp]
  0023b	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  00242	03 ca		 add	 ecx, edx
  00244	3b c1		 cmp	 eax, ecx
  00246	7e 05		 jle	 SHORT $LN15@SendVisibl
$LN16@SendVisibl:
  00248	e9 7a fe ff ff	 jmp	 $LN2@SendVisibl
$LN15@SendVisibl:

; 10596: 			}
; 10597: 			else

  0024d	eb 54		 jmp	 SHORT $LN8@SendVisibl
$LN13@SendVisibl:

; 10598: 			{
; 10599: 				if ((wUserPagePos < wTablePos-wEverySendPage*wTagerDeskCount)||(wUserPagePos > wTablePos+wEverySendPage*wTagerDeskCount+wTagerDeskCount-1))continue;

  0024f	0f b7 85 dc bf
	ff ff		 movzx	 eax, WORD PTR _wUserPagePos$5[ebp]
  00256	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wTablePos$[ebp]
  0025a	0f b7 95 ec bf
	ff ff		 movzx	 edx, WORD PTR _wEverySendPage$[ebp]
  00261	0f b7 b5 f0 bf
	ff ff		 movzx	 esi, WORD PTR _wTagerDeskCount$[ebp]
  00268	0f af d6	 imul	 edx, esi
  0026b	2b ca		 sub	 ecx, edx
  0026d	3b c1		 cmp	 eax, ecx
  0026f	7c 2d		 jl	 SHORT $LN18@SendVisibl
  00271	0f b7 85 dc bf
	ff ff		 movzx	 eax, WORD PTR _wUserPagePos$5[ebp]
  00278	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wTablePos$[ebp]
  0027c	0f b7 95 ec bf
	ff ff		 movzx	 edx, WORD PTR _wEverySendPage$[ebp]
  00283	0f b7 b5 f0 bf
	ff ff		 movzx	 esi, WORD PTR _wTagerDeskCount$[ebp]
  0028a	0f af d6	 imul	 edx, esi
  0028d	03 ca		 add	 ecx, edx
  0028f	0f b7 95 f0 bf
	ff ff		 movzx	 edx, WORD PTR _wTagerDeskCount$[ebp]
  00296	8d 4c 11 ff	 lea	 ecx, DWORD PTR [ecx+edx-1]
  0029a	3b c1		 cmp	 eax, ecx
  0029c	7e 05		 jle	 SHORT $LN8@SendVisibl
$LN18@SendVisibl:
  0029e	e9 24 fe ff ff	 jmp	 $LN2@SendVisibl
$LN8@SendVisibl:

; 10600: 			}
; 10601: 		}
; 10602: 
; 10603: 		//定义变量
; 10604: 		tagUserInfo * pUserInfo=pIUserItem->GetUserInfo();

  002a3	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$6[ebp]
  002a9	8b 10		 mov	 edx, DWORD PTR [eax]
  002ab	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$6[ebp]
  002b1	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  002b4	ff d0		 call	 eax
  002b6	89 85 d4 bf ff
	ff		 mov	 DWORD PTR _pUserInfo$3[ebp], eax

; 10605: 		ZeroMemory(cbBuffer,sizeof(cbBuffer));

  002bc	68 f8 3f 00 00	 push	 16376			; 00003ff8H
  002c1	6a 00		 push	 0
  002c3	8d 85 00 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 _memset
  002cf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10606: 		CSendPacketHelper SendPacket(cbBuffer+sizeof(tagMobileUserInfoHead),sizeof(cbBuffer)-sizeof(tagMobileUserInfoHead));

  002d2	68 7f 3f 00 00	 push	 16255			; 00003f7fH
  002d7	8d 85 79 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp+121]
  002dd	50		 push	 eax
  002de	8d 8d cc bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$2[ebp]
  002e4	e8 00 00 00 00	 call	 ??0CSendPacketHelper@@QAE@PAXG@Z ; CSendPacketHelper::CSendPacketHelper

; 10607: 
; 10608: 		//用户属性
; 10609: 		pUserInfoHead->wFaceID=pUserInfo->wFaceID;

  002e9	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  002ef	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  002f5	66 8b 91 88 00
	00 00		 mov	 dx, WORD PTR [ecx+136]
  002fc	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 10610: 		pUserInfoHead->dwGameID=pUserInfo->dwGameID;

  00300	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00306	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  0030c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0030f	89 10		 mov	 DWORD PTR [eax], edx

; 10611: 		pUserInfoHead->dwUserID=pUserInfo->dwUserID;

  00311	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00317	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  0031d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0031f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 10612: 		pUserInfoHead->dwCustomID=pUserInfo->dwCustomID;

  00322	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00328	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  0032e	8b 91 8a 00 00
	00		 mov	 edx, DWORD PTR [ecx+138]
  00334	89 50 0a	 mov	 DWORD PTR [eax+10], edx

; 10613: 		pUserInfoHead->dwAgentID=pUserInfo->dwAgentID;

  00337	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0033d	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  00343	8b 91 fc 00 00
	00		 mov	 edx, DWORD PTR [ecx+252]
  00349	89 50 71	 mov	 DWORD PTR [eax+113], edx

; 10614: 
; 10615: 		//用户属性
; 10616: 		pUserInfoHead->cbGender=pUserInfo->cbGender;

  0034c	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00352	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  00358	8a 91 8e 00 00
	00		 mov	 dl, BYTE PTR [ecx+142]
  0035e	88 50 0e	 mov	 BYTE PTR [eax+14], dl

; 10617: 		pUserInfoHead->cbMemberOrder=pUserInfo->cbMemberOrder;

  00361	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00367	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  0036d	8a 91 8f 00 00
	00		 mov	 dl, BYTE PTR [ecx+143]
  00373	88 50 0f	 mov	 BYTE PTR [eax+15], dl

; 10618: 
; 10619: 		//用户状态
; 10620: 		pUserInfoHead->wTableID=pUserInfo->wTableID;

  00376	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0037c	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  00382	66 8b 91 91 00
	00 00		 mov	 dx, WORD PTR [ecx+145]
  00389	66 89 50 10	 mov	 WORD PTR [eax+16], dx

; 10621: 		pUserInfoHead->wChairID=pUserInfo->wChairID;

  0038d	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00393	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  00399	66 8b 91 95 00
	00 00		 mov	 dx, WORD PTR [ecx+149]
  003a0	66 89 50 12	 mov	 WORD PTR [eax+18], dx

; 10622: 		pUserInfoHead->cbUserStatus=pUserInfo->cbUserStatus;

  003a4	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  003aa	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  003b0	8a 91 97 00 00
	00		 mov	 dl, BYTE PTR [ecx+151]
  003b6	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 10623: 
; 10624: 		//用户局数
; 10625: 		pUserInfoHead->dwWinCount=pUserInfo->dwWinCount;

  003b9	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  003bf	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  003c5	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  003cb	89 50 55	 mov	 DWORD PTR [eax+85], edx

; 10626: 		pUserInfoHead->dwLostCount=pUserInfo->dwLostCount;

  003ce	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  003d4	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  003da	8b 91 dc 00 00
	00		 mov	 edx, DWORD PTR [ecx+220]
  003e0	89 50 59	 mov	 DWORD PTR [eax+89], edx

; 10627: 		pUserInfoHead->dwDrawCount=pUserInfo->dwDrawCount;

  003e3	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  003e9	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  003ef	8b 91 e0 00 00
	00		 mov	 edx, DWORD PTR [ecx+224]
  003f5	89 50 5d	 mov	 DWORD PTR [eax+93], edx

; 10628: 		pUserInfoHead->dwFleeCount=pUserInfo->dwFleeCount;

  003f8	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  003fe	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  00404	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  0040a	89 50 61	 mov	 DWORD PTR [eax+97], edx

; 10629: 		pUserInfoHead->dwExperience=pUserInfo->dwExperience;

  0040d	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00413	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  00419	8b 91 ec 00 00
	00		 mov	 edx, DWORD PTR [ecx+236]
  0041f	89 50 65	 mov	 DWORD PTR [eax+101], edx

; 10630: 		pUserInfoHead->lIntegralCount=pUserInfo->lIntegralCount;

  00422	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00428	8b 8d d4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$3[ebp]
  0042e	8b 91 f4 00 00
	00		 mov	 edx, DWORD PTR [ecx+244]
  00434	89 50 69	 mov	 DWORD PTR [eax+105], edx
  00437	8b 89 f8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+248]
  0043d	89 48 6d	 mov	 DWORD PTR [eax+109], ecx

; 10631: 
; 10632: 		//用户成绩
; 10633: 		/*pUserInfoHead->lIngot=pUserInfo->lIngot;
; 10634: 		pUserInfoHead->dBeans=pUserInfo->dBeans;
; 10635: 		pUserInfoHead->lScore = pUserInfo->lScore;*/
; 10636: 		pUserInfoHead->bConsumptionType = pUserInfo->bConsumptionType;

  00440	8b b5 d4 bf ff
	ff		 mov	 esi, DWORD PTR _pUserInfo$3[ebp]
  00446	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  0044c	8b bd fc bf ff
	ff		 mov	 edi, DWORD PTR _pUserInfoHead$[ebp]
  00452	83 c7 15	 add	 edi, 21			; 00000015H
  00455	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0045a	f3 a5		 rep movsd

; 10637: 		pUserInfoHead->bConsumptionType.lScore += pIUserItem->GetTrusteeScore();

  0045c	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$6[ebp]
  00462	8b 10		 mov	 edx, DWORD PTR [eax]
  00464	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$6[ebp]
  0046a	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00470	ff d0		 call	 eax
  00472	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00478	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  0047b	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  0047e	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00484	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  00487	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 10638: 		pUserInfoHead->bConsumptionType.lScore += pIUserItem->GetFrozenedScore();

  0048a	8b 85 e0 bf ff
	ff		 mov	 eax, DWORD PTR _pIUserItem$6[ebp]
  00490	8b 10		 mov	 edx, DWORD PTR [eax]
  00492	8b 8d e0 bf ff
	ff		 mov	 ecx, DWORD PTR _pIUserItem$6[ebp]
  00498	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  0049e	ff d0		 call	 eax
  004a0	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  004a6	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  004a9	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  004ac	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  004b2	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  004b5	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 10639: 
; 10640: 		//叠加信息
; 10641: 		SendPacket.AddPacket(pUserInfo->szNickName,DTP_GR_NICK_NAME);

  004b8	6a 0a		 push	 10			; 0000000aH
  004ba	8b 85 d4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$3[ebp]
  004c0	83 c0 0c	 add	 eax, 12			; 0000000cH
  004c3	50		 push	 eax
  004c4	8d 8d cc bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$2[ebp]
  004ca	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 10642: 
; 10643: 		//发送数据
; 10644: 		WORD wHeadSize=sizeof(tagMobileUserInfoHead);

  004cf	b8 79 00 00 00	 mov	 eax, 121		; 00000079H
  004d4	66 89 85 c8 bf
	ff ff		 mov	 WORD PTR _wHeadSize$1[ebp], ax

; 10645: 		SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  004db	0f b7 b5 c8 bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$1[ebp]
  004e2	8d 8d cc bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$2[ebp]
  004e8	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  004ed	0f b7 c0	 movzx	 eax, ax
  004f0	03 f0		 add	 esi, eax
  004f2	56		 push	 esi
  004f3	8d 8d 00 c0 ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  004f9	51		 push	 ecx
  004fa	6a 64		 push	 100			; 00000064H
  004fc	6a 03		 push	 3
  004fe	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00501	52		 push	 edx
  00502	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00505	83 c1 04	 add	 ecx, 4
  00508	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0050b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0050e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00511	ff d0		 call	 eax

; 10646: 	}

  00513	e9 af fb ff ff	 jmp	 $LN2@SendVisibl
$LN3@SendVisibl:

; 10647: 
; 10648: 	return true;

  00518	b0 01		 mov	 al, 1

; 10649: }

  0051a	5f		 pop	 edi
  0051b	5e		 pop	 esi
  0051c	5b		 pop	 ebx
  0051d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00520	33 cd		 xor	 ecx, ebp
  00522	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00527	8b e5		 mov	 esp, ebp
  00529	5d		 pop	 ebp
  0052a	c2 08 00	 ret	 8
?SendVisibleTableUserInfoToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ENDP ; CAttemperEngineSink::SendVisibleTableUserInfoToMobileUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z
_TEXT	SEGMENT
_pITargetUserItem$1 = -16412				; size = 4
_wBindIndex$2 = -16408					; size = 2
_wHeadSize$ = -16404					; size = 2
_SendPacket$ = -16400					; size = 8
_pUserInfoHead$ = -16392				; size = 4
_pUserInfo$ = -16388					; size = 4
_cbBuffer$ = -16384					; size = 16376
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_dwSocketID$ = 12					; size = 4
?SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z PROC ; CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser, COMDAT
; _this$ = ecx

; 10486: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 1c 42 00 00	 mov	 eax, 16924		; 0000421cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 10487: 	//效验参数
; 10488: 	ASSERT(pIServerUserItem!=NULL);

  0001d	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00021	75 18		 jne	 SHORT $LN10@SendUserIn
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z@4JA
  00028	83 c0 02	 add	 eax, 2
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN10@SendUserIn
  0003a	cc		 int	 3
$LN10@SendUserIn:

; 10489: 	if (pIServerUserItem==NULL) return false;

  0003b	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003f	75 07		 jne	 SHORT $LN2@SendUserIn
  00041	32 c0		 xor	 al, al
  00043	e9 6c 03 00 00	 jmp	 $LN1@SendUserIn
$LN2@SendUserIn:

; 10490: 
; 10491: 	//变量定义
; 10492: 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 10493: 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  00048	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00050	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00053	ff d0		 call	 eax
  00055	89 85 fc bf ff
	ff		 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 10494: 	tagMobileUserInfoHead * pUserInfoHead=(tagMobileUserInfoHead *)cbBuffer;

  0005b	8d 85 00 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  00061	89 85 f8 bf ff
	ff		 mov	 DWORD PTR _pUserInfoHead$[ebp], eax

; 10495: 	CSendPacketHelper SendPacket(cbBuffer+sizeof(tagMobileUserInfoHead),sizeof(cbBuffer)-sizeof(tagMobileUserInfoHead));

  00067	68 7f 3f 00 00	 push	 16255			; 00003f7fH
  0006c	8d 85 79 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp+121]
  00072	50		 push	 eax
  00073	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00079	e8 00 00 00 00	 call	 ??0CSendPacketHelper@@QAE@PAXG@Z ; CSendPacketHelper::CSendPacketHelper

; 10496: 
; 10497: 	//用户属性
; 10498: 	pUserInfoHead->wFaceID=pUserInfo->wFaceID;

  0007e	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00084	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0008a	66 8b 91 88 00
	00 00		 mov	 dx, WORD PTR [ecx+136]
  00091	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 10499: 	pUserInfoHead->dwGameID=pUserInfo->dwGameID;

  00095	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0009b	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000a1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a4	89 10		 mov	 DWORD PTR [eax], edx

; 10500: 	pUserInfoHead->dwUserID=pUserInfo->dwUserID;

  000a6	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000ac	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 10501: 	pUserInfoHead->dwCustomID=pUserInfo->dwCustomID;

  000b7	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000bd	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000c3	8b 91 8a 00 00
	00		 mov	 edx, DWORD PTR [ecx+138]
  000c9	89 50 0a	 mov	 DWORD PTR [eax+10], edx

; 10502: 	pUserInfoHead->dwAgentID=pUserInfo->dwAgentID;

  000cc	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000d2	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000d8	8b 91 fc 00 00
	00		 mov	 edx, DWORD PTR [ecx+252]
  000de	89 50 71	 mov	 DWORD PTR [eax+113], edx

; 10503: 
; 10504: 	//用户属性
; 10505: 	pUserInfoHead->cbGender=pUserInfo->cbGender;

  000e1	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000e7	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000ed	8a 91 8e 00 00
	00		 mov	 dl, BYTE PTR [ecx+142]
  000f3	88 50 0e	 mov	 BYTE PTR [eax+14], dl

; 10506: 	pUserInfoHead->cbMemberOrder=pUserInfo->cbMemberOrder;

  000f6	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000fc	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00102	8a 91 8f 00 00
	00		 mov	 dl, BYTE PTR [ecx+143]
  00108	88 50 0f	 mov	 BYTE PTR [eax+15], dl

; 10507: 
; 10508: 	//用户状态
; 10509: 	pUserInfoHead->wTableID=pUserInfo->wTableID;

  0010b	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00111	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00117	66 8b 91 91 00
	00 00		 mov	 dx, WORD PTR [ecx+145]
  0011e	66 89 50 10	 mov	 WORD PTR [eax+16], dx

; 10510: 	pUserInfoHead->wChairID=pUserInfo->wChairID;

  00122	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00128	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0012e	66 8b 91 95 00
	00 00		 mov	 dx, WORD PTR [ecx+149]
  00135	66 89 50 12	 mov	 WORD PTR [eax+18], dx

; 10511: 	pUserInfoHead->cbUserStatus=pUserInfo->cbUserStatus;

  00139	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0013f	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00145	8a 91 97 00 00
	00		 mov	 dl, BYTE PTR [ecx+151]
  0014b	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 10512: 
; 10513: 	//用户局数
; 10514: 	pUserInfoHead->dwWinCount=pUserInfo->dwWinCount;

  0014e	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00154	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0015a	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  00160	89 50 55	 mov	 DWORD PTR [eax+85], edx

; 10515: 	pUserInfoHead->dwLostCount=pUserInfo->dwLostCount;

  00163	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00169	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0016f	8b 91 dc 00 00
	00		 mov	 edx, DWORD PTR [ecx+220]
  00175	89 50 59	 mov	 DWORD PTR [eax+89], edx

; 10516: 	pUserInfoHead->dwDrawCount=pUserInfo->dwDrawCount;

  00178	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0017e	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00184	8b 91 e0 00 00
	00		 mov	 edx, DWORD PTR [ecx+224]
  0018a	89 50 5d	 mov	 DWORD PTR [eax+93], edx

; 10517: 	pUserInfoHead->dwFleeCount=pUserInfo->dwFleeCount;

  0018d	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00193	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00199	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  0019f	89 50 61	 mov	 DWORD PTR [eax+97], edx

; 10518: 	pUserInfoHead->dwExperience=pUserInfo->dwExperience;

  001a2	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001a8	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001ae	8b 91 ec 00 00
	00		 mov	 edx, DWORD PTR [ecx+236]
  001b4	89 50 65	 mov	 DWORD PTR [eax+101], edx

; 10519: 	pUserInfoHead->lIntegralCount=pUserInfo->lIntegralCount;

  001b7	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001bd	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001c3	8b 91 f4 00 00
	00		 mov	 edx, DWORD PTR [ecx+244]
  001c9	89 50 69	 mov	 DWORD PTR [eax+105], edx
  001cc	8b 89 f8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+248]
  001d2	89 48 6d	 mov	 DWORD PTR [eax+109], ecx

; 10520: 	//用户成绩
; 10521: 	/*pUserInfoHead->dBeans=pUserInfo->dBeans;
; 10522: 	pUserInfoHead->lIngot=pUserInfo->lIngot;
; 10523: 	pUserInfoHead->lScore = pUserInfo->lScore;*/
; 10524: 	pUserInfoHead->bConsumptionType = pUserInfo->bConsumptionType;

  001d5	8b b5 fc bf ff
	ff		 mov	 esi, DWORD PTR _pUserInfo$[ebp]
  001db	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  001e1	8b bd f8 bf ff
	ff		 mov	 edi, DWORD PTR _pUserInfoHead$[ebp]
  001e7	83 c7 15	 add	 edi, 21			; 00000015H
  001ea	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  001ef	f3 a5		 rep movsd

; 10525: 
; 10526: 	pUserInfoHead->bConsumptionType.lScore += pIServerUserItem->GetTrusteeScore();

  001f1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001f9	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  001ff	ff d0		 call	 eax
  00201	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00207	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  0020a	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  0020d	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00213	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  00216	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 10527: 	pUserInfoHead->bConsumptionType.lScore += pIServerUserItem->GetFrozenedScore();

  00219	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0021c	8b 10		 mov	 edx, DWORD PTR [eax]
  0021e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00221	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00227	ff d0		 call	 eax
  00229	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  0022f	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  00232	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  00235	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  0023b	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  0023e	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 10528: 
; 10529: 	pUserInfoHead->dwClientAddr=pIServerUserItem->GetClientAddr();

  00241	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00244	8b 10		 mov	 edx, DWORD PTR [eax]
  00246	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00249	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0024c	ff d0		 call	 eax
  0024e	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00254	89 41 75	 mov	 DWORD PTR [ecx+117], eax

; 10530: 
; 10531: 	//叠加信息
; 10532: 	SendPacket.AddPacket(pUserInfo->szNickName,DTP_GR_NICK_NAME);

  00257	6a 0a		 push	 10			; 0000000aH
  00259	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0025f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00262	50		 push	 eax
  00263	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00269	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 10533: 	SendPacket.AddPacket(pUserInfo->szUnderWrite,DTP_GR_UNDER_WRITE);

  0026e	6a 0c		 push	 12			; 0000000cH
  00270	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00276	83 c0 4c	 add	 eax, 76			; 0000004cH
  00279	50		 push	 eax
  0027a	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00280	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 10534: 
; 10535: 	//发送数据
; 10536: 	WORD wHeadSize=sizeof(tagMobileUserInfoHead);

  00285	b8 79 00 00 00	 mov	 eax, 121		; 00000079H
  0028a	66 89 85 ec bf
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 10537: 	if (dwSocketID==INVALID_DWORD)

  00291	83 7d 0c ff	 cmp	 DWORD PTR _dwSocketID$[ebp], -1
  00295	75 47		 jne	 SHORT $LN3@SendUserIn

; 10538: 	{
; 10539: 		SendDataBatchToMobileUser(pUserInfo->wTableID,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  00297	0f b7 b5 ec bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$[ebp]
  0029e	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  002a4	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  002a9	0f b7 c0	 movzx	 eax, ax
  002ac	03 f0		 add	 esi, eax
  002ae	56		 push	 esi
  002af	8d 8d 00 c0 ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  002b5	51		 push	 ecx
  002b6	6a 64		 push	 100			; 00000064H
  002b8	6a 03		 push	 3
  002ba	8b 95 fc bf ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$[ebp]
  002c0	0f b7 82 91 00
	00 00		 movzx	 eax, WORD PTR [edx+145]
  002c7	50		 push	 eax
  002c8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002cb	83 c1 04	 add	 ecx, 4
  002ce	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002d1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002d4	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  002d7	ff d2		 call	 edx

; 10540: 	}
; 10541: 	else

  002d9	e9 d4 00 00 00	 jmp	 $LN4@SendUserIn
$LN3@SendUserIn:

; 10542: 	{
; 10543: 		//获取用户
; 10544: 		WORD wBindIndex=LOWORD(dwSocketID);

  002de	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002e1	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  002e6	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 10545: 		IServerUserItem * pITargetUserItem=GetBindUserItem(wBindIndex);

  002ed	0f b7 85 e8 bf
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  002f4	50		 push	 eax
  002f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  002fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002fd	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00300	ff d0		 call	 eax
  00302	89 85 e4 bf ff
	ff		 mov	 DWORD PTR _pITargetUserItem$1[ebp], eax

; 10546: 		ASSERT(pITargetUserItem!=NULL);

  00308	83 bd e4 bf ff
	ff 00		 cmp	 DWORD PTR _pITargetUserItem$1[ebp], 0
  0030f	75 18		 jne	 SHORT $LN11@SendUserIn
  00311	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z@4JA
  00316	83 c0 3c	 add	 eax, 60			; 0000003cH
  00319	50		 push	 eax
  0031a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0031f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00324	85 c0		 test	 eax, eax
  00326	74 01		 je	 SHORT $LN11@SendUserIn
  00328	cc		 int	 3
$LN11@SendUserIn:

; 10547: 		if (pITargetUserItem==NULL) return true;

  00329	83 bd e4 bf ff
	ff 00		 cmp	 DWORD PTR _pITargetUserItem$1[ebp], 0
  00330	75 04		 jne	 SHORT $LN5@SendUserIn
  00332	b0 01		 mov	 al, 1
  00334	eb 7e		 jmp	 SHORT $LN1@SendUserIn
$LN5@SendUserIn:

; 10548: 		if (pITargetUserItem->IsMobileUser()==false) return true;

  00336	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pITargetUserItem$1[ebp]
  0033c	8b 10		 mov	 edx, DWORD PTR [eax]
  0033e	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pITargetUserItem$1[ebp]
  00344	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  0034a	ff d0		 call	 eax
  0034c	0f b6 c8	 movzx	 ecx, al
  0034f	85 c9		 test	 ecx, ecx
  00351	75 04		 jne	 SHORT $LN6@SendUserIn
  00353	b0 01		 mov	 al, 1
  00355	eb 5d		 jmp	 SHORT $LN1@SendUserIn
$LN6@SendUserIn:

; 10549: 
; 10550: 		//发送玩家和目标玩家是同一人 或者 发送玩家已坐下
; 10551: 		if (pIServerUserItem==pITargetUserItem || pIServerUserItem->GetTableID()!=INVALID_TABLE)

  00357	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0035a	3b 85 e4 bf ff
	ff		 cmp	 eax, DWORD PTR _pITargetUserItem$1[ebp]
  00360	74 18		 je	 SHORT $LN8@SendUserIn
  00362	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00365	8b 10		 mov	 edx, DWORD PTR [eax]
  00367	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0036a	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0036d	ff d0		 call	 eax
  0036f	0f b7 c8	 movzx	 ecx, ax
  00372	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00378	74 38		 je	 SHORT $LN4@SendUserIn
$LN8@SendUserIn:

; 10552: 		{
; 10553: 			SendData(dwSocketID,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  0037a	0f b7 b5 ec bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$[ebp]
  00381	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00387	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  0038c	0f b7 c0	 movzx	 eax, ax
  0038f	03 f0		 add	 esi, eax
  00391	56		 push	 esi
  00392	8d 8d 00 c0 ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00398	51		 push	 ecx
  00399	6a 64		 push	 100			; 00000064H
  0039b	6a 03		 push	 3
  0039d	8b 55 0c	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  003a0	52		 push	 edx
  003a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a4	83 c1 04	 add	 ecx, 4
  003a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003aa	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  003ad	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  003b0	ff d0		 call	 eax
$LN4@SendUserIn:

; 10554: 		}
; 10555: 	}
; 10556: 
; 10557: 	return true;

  003b2	b0 01		 mov	 al, 1
$LN1@SendUserIn:

; 10558: }

  003b4	5f		 pop	 edi
  003b5	5e		 pop	 esi
  003b6	5b		 pop	 ebx
  003b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003ba	33 cd		 xor	 ecx, ebp
  003bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003c1	8b e5		 mov	 esp, ebp
  003c3	5d		 pop	 ebp
  003c4	c2 08 00	 ret	 8
?SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z ENDP ; CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SetMobileUserParameter@CAttemperEngineSink@@IAEXPAUIServerUserItem@@EGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_cbDeviceType$ = 12					; size = 1
_wBehaviorFlags$ = 16					; size = 2
_wPageTableCount$ = 20					; size = 2
?SetMobileUserParameter@CAttemperEngineSink@@IAEXPAUIServerUserItem@@EGG@Z PROC ; CAttemperEngineSink::SetMobileUserParameter, COMDAT
; _this$ = ecx

; 10479: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10480: 	if(wPageTableCount > m_pGameServiceOption->wTableCount)wPageTableCount=m_pGameServiceOption->wTableCount;

  0000c	0f b7 45 14	 movzx	 eax, WORD PTR _wPageTableCount$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00016	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  0001a	3b c1		 cmp	 eax, ecx
  0001c	7e 0e		 jle	 SHORT $LN2@SetMobileU
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00024	66 8b 51 46	 mov	 dx, WORD PTR [ecx+70]
  00028	66 89 55 14	 mov	 WORD PTR _wPageTableCount$[ebp], dx
$LN2@SetMobileU:

; 10481: 	pIServerUserItem->SetMobileUserRule(wBehaviorFlags);

  0002c	0f b7 45 10	 movzx	 eax, WORD PTR _wBehaviorFlags$[ebp]
  00030	50		 push	 eax
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00034	8b 11		 mov	 edx, DWORD PTR [ecx]
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00039	8b 82 28 01 00
	00		 mov	 eax, DWORD PTR [edx+296]
  0003f	ff d0		 call	 eax

; 10482: }

  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 10 00	 ret	 16			; 00000010H
?SetMobileUserParameter@CAttemperEngineSink@@IAEXPAUIServerUserItem@@EGG@Z ENDP ; CAttemperEngineSink::SetMobileUserParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
_pServiceUnits$ = -8					; size = 4
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::SendUIControlPacket, COMDAT
; _this$ = ecx

; 10263: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10264: 	//发送数据
; 10265: 	CServiceUnits * pServiceUnits=CServiceUnits::g_pServiceUnits;

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pServiceUnits@CServiceUnits@@2PAV1@A ; CServiceUnits::g_pServiceUnits
  00011	89 45 f8	 mov	 DWORD PTR _pServiceUnits$[ebp], eax

; 10266: 	pServiceUnits->PostControlRequest(wRequestID,pData,wDataSize);

  00014	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0001c	51		 push	 ecx
  0001d	0f b7 55 08	 movzx	 edx, WORD PTR _wRequestID$[ebp]
  00021	52		 push	 edx
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _pServiceUnits$[ebp]
  00025	e8 00 00 00 00	 call	 ?PostControlRequest@CServiceUnits@@QAE_NGPAXG@Z ; CServiceUnits::PostControlRequest

; 10267: 
; 10268: 	return true;

  0002a	b0 01		 mov	 al, 1

; 10269: }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 0c 00	 ret	 12			; 0000000cH
?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::SendUIControlPacket
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?InitPersonalRoomServiceManager@CAttemperEngineSink@@IAE_NXZ
_TEXT	SEGMENT
tv135 = -120						; size = 4
tv129 = -120						; size = 4
tv92 = -120						; size = 4
_PersonalRoomManagerParameter$ = -52			; size = 48
_this$ = -4						; size = 4
?InitPersonalRoomServiceManager@CAttemperEngineSink@@IAE_NXZ PROC ; CAttemperEngineSink::InitPersonalRoomServiceManager, COMDAT
; _this$ = ecx

; 10231: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10232: 	//参数校验
; 10233: 	if(m_pIPersonalRoomServiceManager==NULL) return true;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  00016	75 07		 jne	 SHORT $LN2@InitPerson
  00018	b0 01		 mov	 al, 1
  0001a	e9 26 01 00 00	 jmp	 $LN1@InitPerson
$LN2@InitPerson:

; 10234: 
; 10235: 	//桌子参数
; 10236: 	tagPersonalRoomManagerParameter PersonalRoomManagerParameter;
; 10237: 	ZeroMemory(&PersonalRoomManagerParameter,sizeof(PersonalRoomManagerParameter));

  0001f	6a 30		 push	 48			; 00000030H
  00021	6a 00		 push	 0
  00023	8d 45 cc	 lea	 eax, DWORD PTR _PersonalRoomManagerParameter$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10238: 
; 10239: 	//配置参数
; 10240: 	PersonalRoomManagerParameter.pPersonalRoomOption= &m_PersonalRoomOption;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c0 48	 add	 eax, 72			; 00000048H
  00035	89 45 cc	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp], eax

; 10241: 	PersonalRoomManagerParameter.pGameServiceOption=m_pGameServiceOption;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0003e	89 4d d0	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+4], ecx

; 10242: 	PersonalRoomManagerParameter.pGameServiceAttrib=m_pGameServiceAttrib;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00047	89 4d d4	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+8], ecx

; 10243: 
; 10244: 	//内核组件
; 10245: 	PersonalRoomManagerParameter.pITimerEngine=m_pITimerEngine;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00053	89 4d d8	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+12], ecx

; 10246: 	PersonalRoomManagerParameter.pICorrespondManager=m_pIDBCorrespondManager;

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0005f	89 4d dc	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+16], ecx

; 10247: 	PersonalRoomManagerParameter.pITCPNetworkEngine = m_pITCPNetworkEngine;

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  0006b	89 4d e4	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+24], ecx

; 10248: 	PersonalRoomManagerParameter.pITCPSocketService = m_pPrsnlRmITCPSocketService;

  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  00077	89 4d e8	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+28], ecx

; 10249: 	PersonalRoomManagerParameter.pTCPNetworkEngine=QUERY_OBJECT_PTR_INTERFACE(m_pIAttemperEngine,ITCPNetworkEngineEvent);

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	83 b8 ac 3f 02
	00 00		 cmp	 DWORD PTR [eax+147372], 0
  00084	75 09		 jne	 SHORT $LN4@InitPerson
  00086	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
  0008d	eb 26		 jmp	 SHORT $LN5@InitPerson
$LN4@InitPerson:
  0008f	68 00 01 01 06	 push	 100729088		; 06010100H
  00094	68 00 00 00 00	 push	 OFFSET ?IID_ITCPNetworkEngineEvent@@3U_GUID@@B
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	8b 91 ac 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147372]
  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	8b 12		 mov	 edx, DWORD PTR [edx]
  000a7	8b 88 ac 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147372]
  000ad	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b0	ff d0		 call	 eax
  000b2	89 45 88	 mov	 DWORD PTR tv92[ebp], eax
$LN5@InitPerson:
  000b5	8b 4d 88	 mov	 ecx, DWORD PTR tv92[ebp]
  000b8	89 4d e0	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+20], ecx

; 10250: 	//服务组件
; 10251: 	PersonalRoomManagerParameter.pIMainServiceFrame=this;

  000bb	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  000bf	74 0b		 je	 SHORT $LN6@InitPerson
  000c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 88	 mov	 DWORD PTR tv129[ebp], eax
  000ca	eb 07		 jmp	 SHORT $LN7@InitPerson
$LN6@InitPerson:
  000cc	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN7@InitPerson:
  000d3	8b 4d 88	 mov	 ecx, DWORD PTR tv129[ebp]
  000d6	89 4d f4	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+40], ecx

; 10252: 	PersonalRoomManagerParameter.pIServerUserItemSink=this;

  000d9	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  000dd	74 0b		 je	 SHORT $LN8@InitPerson
  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	83 c0 08	 add	 eax, 8
  000e5	89 45 88	 mov	 DWORD PTR tv135[ebp], eax
  000e8	eb 07		 jmp	 SHORT $LN9@InitPerson
$LN8@InitPerson:
  000ea	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN9@InitPerson:
  000f1	8b 4d 88	 mov	 ecx, DWORD PTR tv135[ebp]
  000f4	89 4d f8	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+44], ecx

; 10253: 	PersonalRoomManagerParameter.pIAndroidUserManager=&m_AndroidUserManager;

  000f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	05 28 de 00 00	 add	 eax, 56872		; 0000de28H
  000ff	89 45 ec	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+32], eax

; 10254: 	PersonalRoomManagerParameter.pIServerUserManager=QUERY_OBJECT_INTERFACE(m_ServerUserManager,IServerUserManager);		

  00102	68 00 01 01 06	 push	 100729088		; 06010100H
  00107	68 00 00 00 00	 push	 OFFSET ?IID_IServerUserManager@@3U_GUID@@B
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00115	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00118	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  0011e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00121	ff d0		 call	 eax
  00123	89 45 f0	 mov	 DWORD PTR _PersonalRoomManagerParameter$[ebp+36], eax

; 10255: 
; 10256: 	//初始化接口
; 10257: 	m_pIPersonalRoomServiceManager->InitPersonalRooomInterface(PersonalRoomManagerParameter);

  00126	8d 45 cc	 lea	 eax, DWORD PTR _PersonalRoomManagerParameter$[ebp]
  00129	50		 push	 eax
  0012a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	8b 91 c8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147400]
  00133	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00136	8b 12		 mov	 edx, DWORD PTR [edx]
  00138	8b 88 c8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147400]
  0013e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00141	ff d0		 call	 eax

; 10258: 	return true;

  00143	b0 01		 mov	 al, 1
$LN1@InitPerson:

; 10259: }

  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
?InitPersonalRoomServiceManager@CAttemperEngineSink@@IAE_NXZ ENDP ; CAttemperEngineSink::InitPersonalRoomServiceManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?InitMatchServiceManager@CAttemperEngineSink@@IAE_NXZ
_TEXT	SEGMENT
tv133 = -112						; size = 4
tv95 = -112						; size = 4
tv90 = -112						; size = 4
_MatchManagerParameter$ = -44				; size = 40
_this$ = -4						; size = 4
?InitMatchServiceManager@CAttemperEngineSink@@IAE_NXZ PROC ; CAttemperEngineSink::InitMatchServiceManager, COMDAT
; _this$ = ecx

; 10199: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10200: 	//参数校验
; 10201: 	if(m_pIMatchServiceManager==NULL) return true;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00016	75 07		 jne	 SHORT $LN2@InitMatchS
  00018	b0 01		 mov	 al, 1
  0001a	e9 0e 01 00 00	 jmp	 $LN1@InitMatchS
$LN2@InitMatchS:

; 10202: 
; 10203: 	//桌子参数
; 10204: 	tagMatchManagerParameter MatchManagerParameter;
; 10205: 	ZeroMemory(&MatchManagerParameter,sizeof(MatchManagerParameter));

  0001f	6a 28		 push	 40			; 00000028H
  00021	6a 00		 push	 0
  00023	8d 45 d4	 lea	 eax, DWORD PTR _MatchManagerParameter$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10206: 
; 10207: 	//配置参数
; 10208: 	MatchManagerParameter.pGameMatchOption=m_pGameMatchOption;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00035	89 4d d4	 mov	 DWORD PTR _MatchManagerParameter$[ebp], ecx

; 10209: 	MatchManagerParameter.pGameServiceOption=m_pGameServiceOption;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0003e	89 4d d8	 mov	 DWORD PTR _MatchManagerParameter$[ebp+4], ecx

; 10210: 	MatchManagerParameter.pGameServiceAttrib=m_pGameServiceAttrib;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00047	89 4d dc	 mov	 DWORD PTR _MatchManagerParameter$[ebp+8], ecx

; 10211: 
; 10212: 	//内核组件
; 10213: 	MatchManagerParameter.pITimerEngine=m_pITimerEngine;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00053	89 4d e0	 mov	 DWORD PTR _MatchManagerParameter$[ebp+12], ecx

; 10214: 	MatchManagerParameter.pICorrespondManager=m_pIDBCorrespondManager;

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0005f	89 4d e4	 mov	 DWORD PTR _MatchManagerParameter$[ebp+16], ecx

; 10215: 	MatchManagerParameter.pTCPNetworkEngine=QUERY_OBJECT_PTR_INTERFACE(m_pIAttemperEngine,ITCPNetworkEngineEvent);

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 b8 ac 3f 02
	00 00		 cmp	 DWORD PTR [eax+147372], 0
  0006c	75 09		 jne	 SHORT $LN4@InitMatchS
  0006e	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
  00075	eb 26		 jmp	 SHORT $LN5@InitMatchS
$LN4@InitMatchS:
  00077	68 00 01 01 06	 push	 100729088		; 06010100H
  0007c	68 00 00 00 00	 push	 OFFSET ?IID_ITCPNetworkEngineEvent@@3U_GUID@@B
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 91 ac 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147372]
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 12		 mov	 edx, DWORD PTR [edx]
  0008f	8b 88 ac 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147372]
  00095	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00098	ff d0		 call	 eax
  0009a	89 45 90	 mov	 DWORD PTR tv90[ebp], eax
$LN5@InitMatchS:
  0009d	8b 4d 90	 mov	 ecx, DWORD PTR tv90[ebp]
  000a0	89 4d e8	 mov	 DWORD PTR _MatchManagerParameter$[ebp+20], ecx

; 10216: 
; 10217: 	//服务组件
; 10218: 	MatchManagerParameter.pIMainServiceFrame=this;

  000a3	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  000a7	74 0b		 je	 SHORT $LN6@InitMatchS
  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	83 c0 04	 add	 eax, 4
  000af	89 45 90	 mov	 DWORD PTR tv95[ebp], eax
  000b2	eb 07		 jmp	 SHORT $LN7@InitMatchS
$LN6@InitMatchS:
  000b4	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN7@InitMatchS:
  000bb	8b 4d 90	 mov	 ecx, DWORD PTR tv95[ebp]
  000be	89 4d f4	 mov	 DWORD PTR _MatchManagerParameter$[ebp+32], ecx

; 10219: 	MatchManagerParameter.pIServerUserItemSink=this;

  000c1	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  000c5	74 0b		 je	 SHORT $LN8@InitMatchS
  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	83 c0 08	 add	 eax, 8
  000cd	89 45 90	 mov	 DWORD PTR tv133[ebp], eax
  000d0	eb 07		 jmp	 SHORT $LN9@InitMatchS
$LN8@InitMatchS:
  000d2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN9@InitMatchS:
  000d9	8b 4d 90	 mov	 ecx, DWORD PTR tv133[ebp]
  000dc	89 4d f8	 mov	 DWORD PTR _MatchManagerParameter$[ebp+36], ecx

; 10220: 	MatchManagerParameter.pIAndroidUserManager=&m_AndroidUserManager;

  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	05 28 de 00 00	 add	 eax, 56872		; 0000de28H
  000e7	89 45 ec	 mov	 DWORD PTR _MatchManagerParameter$[ebp+24], eax

; 10221: 	MatchManagerParameter.pIServerUserManager=QUERY_OBJECT_INTERFACE(m_ServerUserManager,IServerUserManager);		

  000ea	68 00 01 01 06	 push	 100729088		; 06010100H
  000ef	68 00 00 00 00	 push	 OFFSET ?IID_IServerUserManager@@3U_GUID@@B
  000f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00106	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00109	ff d0		 call	 eax
  0010b	89 45 f0	 mov	 DWORD PTR _MatchManagerParameter$[ebp+28], eax

; 10222: 
; 10223: 	//初始化接口
; 10224: 	m_pIMatchServiceManager->InitMatchInterface(MatchManagerParameter);

  0010e	8d 45 d4	 lea	 eax, DWORD PTR _MatchManagerParameter$[ebp]
  00111	50		 push	 eax
  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  0011b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	8b 12		 mov	 edx, DWORD PTR [edx]
  00120	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00126	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00129	ff d0		 call	 eax

; 10225: 
; 10226: 	return true;

  0012b	b0 01		 mov	 al, 1
$LN1@InitMatchS:

; 10227: }

  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
?InitMatchServiceManager@CAttemperEngineSink@@IAE_NXZ ENDP ; CAttemperEngineSink::InitMatchServiceManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ
_TEXT	SEGMENT
tv235 = -140						; size = 4
tv200 = -140						; size = 4
tv241 = -136						; size = 4
tv206 = -136						; size = 4
tv161 = -136						; size = 4
tv74 = -136						; size = 4
$T2 = -132						; size = 4
$T3 = -128						; size = 4
_i$4 = -60						; size = 2
_TableFrameParameter$ = -56				; size = 40
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ PROC	; CAttemperEngineSink::InitTableFrameArray, COMDAT
; _this$ = ecx

; 10144: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 10145: 	//桌子参数
; 10146: 	tagTableFrameParameter TableFrameParameter;
; 10147: 	ZeroMemory(&TableFrameParameter,sizeof(TableFrameParameter));

  0002e	6a 28		 push	 40			; 00000028H
  00030	6a 00		 push	 0
  00032	8d 45 c8	 lea	 eax, DWORD PTR _TableFrameParameter$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _memset
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10148: 
; 10149: 	//内核组件
; 10150: 	TableFrameParameter.pITimerEngine=m_pITimerEngine;

  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00047	89 4d c8	 mov	 DWORD PTR _TableFrameParameter$[ebp], ecx

; 10151: 	TableFrameParameter.pIKernelDataBaseEngine=m_pIKernelDataBaseEngine;

  0004a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 88 d0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147408]
  00053	89 4d d0	 mov	 DWORD PTR _TableFrameParameter$[ebp+8], ecx

; 10152: 	TableFrameParameter.pIRecordDataBaseEngine=m_pIRecordDataBaseEngine;

  00056	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 88 cc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147404]
  0005f	89 4d cc	 mov	 DWORD PTR _TableFrameParameter$[ebp+4], ecx

; 10153: 
; 10154: 	//服务组件
; 10155: 	TableFrameParameter.pIMainServiceFrame=this;

  00062	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  00066	74 0e		 je	 SHORT $LN9@InitTableF
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	83 c0 04	 add	 eax, 4
  0006e	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  00074	eb 0a		 jmp	 SHORT $LN10@InitTableF
$LN9@InitTableF:
  00076	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN10@InitTableF:
  00080	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv74[ebp]
  00086	89 4d d4	 mov	 DWORD PTR _TableFrameParameter$[ebp+12], ecx

; 10156: 	TableFrameParameter.pIAndroidUserManager=&m_AndroidUserManager;

  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	05 28 de 00 00	 add	 eax, 56872		; 0000de28H
  00091	89 45 d8	 mov	 DWORD PTR _TableFrameParameter$[ebp+16], eax

; 10157: 	TableFrameParameter.pIGameServiceManager=m_pIGameServiceManager;

  00094	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 88 b8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147384]
  0009d	89 4d dc	 mov	 DWORD PTR _TableFrameParameter$[ebp+20], ecx

; 10158: 
; 10159: 	//配置参数
; 10160: 	TableFrameParameter.pGameParameter=m_pGameParameter;

  000a0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000a6	89 4d e0	 mov	 DWORD PTR _TableFrameParameter$[ebp+24], ecx

; 10161: 	TableFrameParameter.pGameMatchOption=m_pGameMatchOption;

  000a9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000af	89 4d e4	 mov	 DWORD PTR _TableFrameParameter$[ebp+28], ecx

; 10162: 	TableFrameParameter.pGameServiceAttrib=m_pGameServiceAttrib;

  000b2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000b8	89 4d e8	 mov	 DWORD PTR _TableFrameParameter$[ebp+32], ecx

; 10163: 	TableFrameParameter.pGameServiceOption=m_pGameServiceOption;

  000bb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000c1	89 4d ec	 mov	 DWORD PTR _TableFrameParameter$[ebp+36], ecx

; 10164: 
; 10165: 	//桌子容器	
; 10166: 	m_TableFrameArray.SetSize(m_pGameServiceOption->wTableCount);

  000c4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000ca	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  000ce	52		 push	 edx
  000cf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000d8	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::SetSize

; 10167: 	ZeroMemory(m_TableFrameArray.GetData(),m_pGameServiceOption->wTableCount*sizeof(CTableFrame *));

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000e3	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  000e7	c1 e2 02	 shl	 edx, 2
  000ea	52		 push	 edx
  000eb	6a 00		 push	 0
  000ed	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000f6	e8 00 00 00 00	 call	 ?GetData@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEPAPAVCTableFrame@@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetData
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 _memset
  00101	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10168: 
; 10169: 	//创建桌子
; 10170: 	for (WORD i=0;i<m_pGameServiceOption->wTableCount;i++)

  00104	33 c0		 xor	 eax, eax
  00106	66 89 45 c4	 mov	 WORD PTR _i$4[ebp], ax
  0010a	eb 0c		 jmp	 SHORT $LN4@InitTableF
$LN2@InitTableF:
  0010c	66 8b 45 c4	 mov	 ax, WORD PTR _i$4[ebp]
  00110	66 83 c0 01	 add	 ax, 1
  00114	66 89 45 c4	 mov	 WORD PTR _i$4[ebp], ax
$LN4@InitTableF:
  00118	0f b7 45 c4	 movzx	 eax, WORD PTR _i$4[ebp]
  0011c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00122	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  00126	3b c1		 cmp	 eax, ecx
  00128	0f 8d da 01 00
	00		 jge	 $LN3@InitTableF

; 10171: 	{
; 10172: 		//创建对象
; 10173: 		m_TableFrameArray[i]=new CTableFrame;

  0012e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ@4JA
  00133	83 c0 1d	 add	 eax, 29			; 0000001dH
  00136	50		 push	 eax
  00137	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0013c	68 20 4a 00 00	 push	 18976			; 00004a20H
  00141	e8 00 00 00 00	 call	 ??2@YAPAXIPBDH@Z	; operator new
  00146	83 c4 0c	 add	 esp, 12			; 0000000cH
  00149	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0014f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00156	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  0015d	74 13		 je	 SHORT $LN11@InitTableF
  0015f	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00165	e8 00 00 00 00	 call	 ??0CTableFrame@@QAE@XZ	; CTableFrame::CTableFrame
  0016a	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv161[ebp], eax
  00170	eb 0a		 jmp	 SHORT $LN12@InitTableF
$LN11@InitTableF:
  00172	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv161[ebp], 0
$LN12@InitTableF:
  0017c	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv161[ebp]
  00182	89 4d 80	 mov	 DWORD PTR $T3[ebp], ecx
  00185	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0018c	0f b7 55 c4	 movzx	 edx, WORD PTR _i$4[ebp]
  00190	52		 push	 edx
  00191	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0019a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0019f	8b 4d 80	 mov	 ecx, DWORD PTR $T3[ebp]
  001a2	89 08		 mov	 DWORD PTR [eax], ecx

; 10174: 
; 10175: 		//配置桌子
; 10176: 		if (m_TableFrameArray[i]->InitializationFrame(i,TableFrameParameter)==false)

  001a4	8d 45 c8	 lea	 eax, DWORD PTR _TableFrameParameter$[ebp]
  001a7	50		 push	 eax
  001a8	0f b7 4d c4	 movzx	 ecx, WORD PTR _i$4[ebp]
  001ac	51		 push	 ecx
  001ad	0f b7 55 c4	 movzx	 edx, WORD PTR _i$4[ebp]
  001b1	52		 push	 edx
  001b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001bb	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c2	e8 00 00 00 00	 call	 ?InitializationFrame@CTableFrame@@QAE_NGAAUtagTableFrameParameter@@@Z ; CTableFrame::InitializationFrame
  001c7	0f b6 c0	 movzx	 eax, al
  001ca	85 c0		 test	 eax, eax
  001cc	75 07		 jne	 SHORT $LN5@InitTableF

; 10177: 		{
; 10178: 			return false;

  001ce	32 c0		 xor	 al, al
  001d0	e9 35 01 00 00	 jmp	 $LN1@InitTableF
$LN5@InitTableF:

; 10179: 		}
; 10180: 
; 10181: 		//绑定桌子
; 10182: 		if(m_pIMatchServiceManager!=NULL)

  001d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001d8	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  001df	0f 84 87 00 00
	00		 je	 $LN6@InitTableF

; 10183: 		{
; 10184: 			m_pIMatchServiceManager->BindTableFrame(QUERY_OBJECT_PTR_INTERFACE((m_TableFrameArray[i]),ITableFrame),i);

  001e5	0f b7 45 c4	 movzx	 eax, WORD PTR _i$4[ebp]
  001e9	50		 push	 eax
  001ea	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001f3	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001f8	83 38 00	 cmp	 DWORD PTR [eax], 0
  001fb	75 0c		 jne	 SHORT $LN13@InitTableF
  001fd	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
  00207	eb 3e		 jmp	 SHORT $LN14@InitTableF
$LN13@InitTableF:
  00209	0f b7 4d c4	 movzx	 ecx, WORD PTR _i$4[ebp]
  0020d	51		 push	 ecx
  0020e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00211	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00217	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0021c	8b 10		 mov	 edx, DWORD PTR [eax]
  0021e	89 95 74 ff ff
	ff		 mov	 DWORD PTR tv200[ebp], edx
  00224	68 00 01 01 06	 push	 100729088		; 06010100H
  00229	68 00 00 00 00	 push	 OFFSET ?IID_ITableFrame@@3U_GUID@@B
  0022e	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  00234	8b 10		 mov	 edx, DWORD PTR [eax]
  00236	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv200[ebp]
  0023c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0023f	ff d0		 call	 eax
  00241	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv206[ebp], eax
$LN14@InitTableF:
  00247	0f b7 4d c4	 movzx	 ecx, WORD PTR _i$4[ebp]
  0024b	51		 push	 ecx
  0024c	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv206[ebp]
  00252	52		 push	 edx
  00253	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00256	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  0025c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0025f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00261	8b 8a c4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147396]
  00267	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0026a	ff d2		 call	 edx
$LN6@InitTableF:

; 10185: 		}
; 10186: 
; 10187: 		//约战服务绑定桌子
; 10188: 		if(m_pIPersonalRoomServiceManager!=NULL)

  0026c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0026f	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  00276	0f 84 87 00 00
	00		 je	 $LN7@InitTableF

; 10189: 		{
; 10190: 			m_pIPersonalRoomServiceManager->BindTableFrame(QUERY_OBJECT_PTR_INTERFACE((m_TableFrameArray[i]),ITableFrame),i);

  0027c	0f b7 45 c4	 movzx	 eax, WORD PTR _i$4[ebp]
  00280	50		 push	 eax
  00281	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00284	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0028a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0028f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00292	75 0c		 jne	 SHORT $LN15@InitTableF
  00294	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv241[ebp], 0
  0029e	eb 3e		 jmp	 SHORT $LN16@InitTableF
$LN15@InitTableF:
  002a0	0f b7 4d c4	 movzx	 ecx, WORD PTR _i$4[ebp]
  002a4	51		 push	 ecx
  002a5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  002a8	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  002ae	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  002b3	8b 10		 mov	 edx, DWORD PTR [eax]
  002b5	89 95 74 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], edx
  002bb	68 00 01 01 06	 push	 100729088		; 06010100H
  002c0	68 00 00 00 00	 push	 OFFSET ?IID_ITableFrame@@3U_GUID@@B
  002c5	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv235[ebp]
  002cb	8b 10		 mov	 edx, DWORD PTR [eax]
  002cd	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv235[ebp]
  002d3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002d6	ff d0		 call	 eax
  002d8	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv241[ebp], eax
$LN16@InitTableF:
  002de	0f b7 4d c4	 movzx	 ecx, WORD PTR _i$4[ebp]
  002e2	51		 push	 ecx
  002e3	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv241[ebp]
  002e9	52		 push	 edx
  002ea	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002ed	8b 88 c8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147400]
  002f3	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  002f6	8b 01		 mov	 eax, DWORD PTR [ecx]
  002f8	8b 8a c8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147400]
  002fe	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00301	ff d2		 call	 edx
$LN7@InitTableF:

; 10191: 		}
; 10192: 	}	

  00303	e9 04 fe ff ff	 jmp	 $LN2@InitTableF
$LN3@InitTableF:

; 10193: 
; 10194: 	return true;

  00308	b0 01		 mov	 al, 1
$LN1@InitTableF:

; 10195: }

  0030a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0030d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00314	59		 pop	 ecx
  00315	5f		 pop	 edi
  00316	5e		 pop	 esi
  00317	5b		 pop	 ebx
  00318	8b e5		 mov	 esp, ebp
  0031a	5d		 pop	 ebp
  0031b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ$0:
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ@4JA
  00005	83 c0 1d	 add	 eax, 29			; 0000001dH
  00008	50		 push	 eax
  00009	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0000e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXPBDH@Z	; operator delete
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	c3		 ret	 0
__ehhandler$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ:
  0001e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00022	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00025	8b 8a 70 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-144]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ ENDP	; CAttemperEngineSink::InitTableFrameArray
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?InitAndroidUser@CAttemperEngineSink@@IAE_NXZ
_TEXT	SEGMENT
tv95 = -120						; size = 4
_AndroidUserParameter$ = -52				; size = 48
_this$ = -4						; size = 4
?InitAndroidUser@CAttemperEngineSink@@IAE_NXZ PROC	; CAttemperEngineSink::InitAndroidUser, COMDAT
; _this$ = ecx

; 10106: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10107: 	//机器参数
; 10108: 	tagAndroidUserParameter AndroidUserParameter;
; 10109: 	ZeroMemory(&AndroidUserParameter,sizeof(AndroidUserParameter));

  0000c	6a 30		 push	 48			; 00000030H
  0000e	6a 00		 push	 0
  00010	8d 45 cc	 lea	 eax, DWORD PTR _AndroidUserParameter$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10110: 
; 10111: 	//配置参数
; 10112: 	AndroidUserParameter.bServiceContinue=true;

  0001c	c6 45 cc 01	 mov	 BYTE PTR _AndroidUserParameter$[ebp], 1

; 10113: 	AndroidUserParameter.pGameParameter=m_pGameParameter;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00026	89 4d d8	 mov	 DWORD PTR _AndroidUserParameter$[ebp+12], ecx

; 10114: 	AndroidUserParameter.pGameServiceAttrib=m_pGameServiceAttrib;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0002f	89 4d dc	 mov	 DWORD PTR _AndroidUserParameter$[ebp+16], ecx

; 10115: 	AndroidUserParameter.pGameServiceOption=m_pGameServiceOption;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00038	89 4d e0	 mov	 DWORD PTR _AndroidUserParameter$[ebp+20], ecx

; 10116: 	AndroidUserParameter.pGameMatchOption=m_pGameMatchOption;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00041	89 4d e4	 mov	 DWORD PTR _AndroidUserParameter$[ebp+24], ecx

; 10117: 
; 10118: 	//服务组件
; 10119: 	AndroidUserParameter.pITimerEngine=m_pITimerEngine;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0004d	89 4d e8	 mov	 DWORD PTR _AndroidUserParameter$[ebp+28], ecx

; 10120: 	AndroidUserParameter.pIServerUserManager=&m_ServerUserManager;

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	05 d8 dd 00 00	 add	 eax, 56792		; 0000ddd8H
  00058	89 45 ec	 mov	 DWORD PTR _AndroidUserParameter$[ebp+32], eax

; 10121: 	AndroidUserParameter.pIGameServiceManager=m_pIGameServiceManager;

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 88 b8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147384]
  00064	89 4d f0	 mov	 DWORD PTR _AndroidUserParameter$[ebp+36], ecx

; 10122: 	AndroidUserParameter.pIGameServiceSustomTime=m_pIGameServiceSustomTime;

  00067	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 88 bc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147388]
  00070	89 4d f4	 mov	 DWORD PTR _AndroidUserParameter$[ebp+40], ecx

; 10123: 	AndroidUserParameter.pITCPNetworkEngineEvent=QUERY_OBJECT_PTR_INTERFACE(m_pIAttemperEngine,ITCPNetworkEngineEvent);

  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	83 b8 ac 3f 02
	00 00		 cmp	 DWORD PTR [eax+147372], 0
  0007d	75 09		 jne	 SHORT $LN5@InitAndroi
  0007f	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
  00086	eb 26		 jmp	 SHORT $LN6@InitAndroi
$LN5@InitAndroi:
  00088	68 00 01 01 06	 push	 100729088		; 06010100H
  0008d	68 00 00 00 00	 push	 OFFSET ?IID_ITCPNetworkEngineEvent@@3U_GUID@@B
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 91 ac 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147372]
  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 12		 mov	 edx, DWORD PTR [edx]
  000a0	8b 88 ac 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147372]
  000a6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a9	ff d0		 call	 eax
  000ab	89 45 88	 mov	 DWORD PTR tv95[ebp], eax
$LN6@InitAndroi:
  000ae	8b 4d 88	 mov	 ecx, DWORD PTR tv95[ebp]
  000b1	89 4d f8	 mov	 DWORD PTR _AndroidUserParameter$[ebp+44], ecx

; 10124: 
; 10125: 	//服务配置
; 10126: 	if(m_pGameServiceAttrib->wChairCount>=MAX_CHAIR)

  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000ba	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  000be	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  000c4	7c 12		 jl	 SHORT $LN2@InitAndroi

; 10127: 	{
; 10128: 		AndroidUserParameter.bServiceContinue=false;

  000c6	c6 45 cc 00	 mov	 BYTE PTR _AndroidUserParameter$[ebp], 0

; 10129: 		AndroidUserParameter.dwMinSitInterval=MIN_INTERVAL_TIME;

  000ca	c7 45 d0 0a 00
	00 00		 mov	 DWORD PTR _AndroidUserParameter$[ebp+4], 10 ; 0000000aH

; 10130: 		AndroidUserParameter.dwMaxSitInterval=MAX_INTERVAL_TIME;	

  000d1	c7 45 d4 3c 00
	00 00		 mov	 DWORD PTR _AndroidUserParameter$[ebp+8], 60 ; 0000003cH
$LN2@InitAndroi:

; 10131: 	}
; 10132: 
; 10133: 	//设置对象
; 10134: 	if (m_AndroidUserManager.InitAndroidUser(AndroidUserParameter)==false)

  000d8	8d 45 cc	 lea	 eax, DWORD PTR _AndroidUserParameter$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000e5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  000ee	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000f1	ff d2		 call	 edx
  000f3	0f b6 c0	 movzx	 eax, al
  000f6	85 c0		 test	 eax, eax
  000f8	75 04		 jne	 SHORT $LN3@InitAndroi

; 10135: 	{
; 10136: 		return false;

  000fa	32 c0		 xor	 al, al
  000fc	eb 02		 jmp	 SHORT $LN1@InitAndroi
$LN3@InitAndroi:

; 10137: 	}
; 10138: 
; 10139: 	return true;

  000fe	b0 01		 mov	 al, 1
$LN1@InitAndroi:

; 10140: }

  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
?InitAndroidUser@CAttemperEngineSink@@IAE_NXZ ENDP	; CAttemperEngineSink::InitAndroidUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SaveVideoDataInfo@CAttemperEngineSink@@QAE_NPADGGPAEG@Z
_TEXT	SEGMENT
_VideoData$ = -10036					; size = 10028
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pVideoNumber$ = 8					; size = 4
_wServerID$ = 12					; size = 2
_wTableID$ = 16						; size = 2
_pVideoData$ = 20					; size = 4
_wSize$ = 24						; size = 2
?SaveVideoDataInfo@CAttemperEngineSink@@QAE_NPADGGPAEG@Z PROC ; CAttemperEngineSink::SaveVideoDataInfo, COMDAT
; _this$ = ecx

; 9961 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 34 29 00 00	 mov	 eax, 10548		; 00002934H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9962 : 	//退还费用
; 9963 : 	DBR_GR_WriteVideoData VideoData;
; 9964 : 	ZeroMemory(&VideoData, sizeof(DBR_GR_WriteJoinInfo));

  0001d	6a 34		 push	 52			; 00000034H
  0001f	6a 00		 push	 0
  00021	8d 85 cc d8 ff
	ff		 lea	 eax, DWORD PTR _VideoData$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _memset
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9965 : 
; 9966 : 	memcpy(VideoData.szVideoID,  pVideoNumber, sizeof(VideoData.szVideoID));

  00030	6a 16		 push	 22			; 00000016H
  00032	8b 45 08	 mov	 eax, DWORD PTR _pVideoNumber$[ebp]
  00035	50		 push	 eax
  00036	8d 8d cc d8 ff
	ff		 lea	 ecx, DWORD PTR _VideoData$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 _memcpy
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9967 :     VideoData.wServerID = wServerID;

  00045	66 8b 45 0c	 mov	 ax, WORD PTR _wServerID$[ebp]
  00049	66 89 85 e2 d8
	ff ff		 mov	 WORD PTR _VideoData$[ebp+22], ax

; 9968 :     VideoData.wTableID	= wTableID;

  00050	66 8b 45 10	 mov	 ax, WORD PTR _wTableID$[ebp]
  00054	66 89 85 e4 d8
	ff ff		 mov	 WORD PTR _VideoData$[ebp+24], ax

; 9969 : 	memcpy(&VideoData.cbVideoData,pVideoData,wSize);

  0005b	0f b7 45 18	 movzx	 eax, WORD PTR _wSize$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 14	 mov	 ecx, DWORD PTR _pVideoData$[ebp]
  00063	51		 push	 ecx
  00064	8d 95 e6 d8 ff
	ff		 lea	 edx, DWORD PTR _VideoData$[ebp+26]
  0006a	52		 push	 edx
  0006b	e8 00 00 00 00	 call	 _memcpy
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9970 : 	VideoData.wVideoSize = wSize;

  00073	66 8b 45 18	 mov	 ax, WORD PTR _wSize$[ebp]
  00077	66 89 45 f6	 mov	 WORD PTR _VideoData$[ebp+10026], ax

; 9971 :     
; 9972 : 	//投递数据
; 9973 : 	m_pIDBCorrespondManager->PostDataBaseRequest(0, DBR_GR_WRITE_VIDEO_DATA_INFO, 0, &VideoData, sizeof(DBR_GR_WriteVideoData));

  0007b	6a 00		 push	 0
  0007d	68 2c 27 00 00	 push	 10028			; 0000272cH
  00082	8d 85 cc d8 ff
	ff		 lea	 eax, DWORD PTR _VideoData$[ebp]
  00088	50		 push	 eax
  00089	6a 00		 push	 0
  0008b	68 41 06 00 00	 push	 1601			; 00000641H
  00090	6a 00		 push	 0
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  0009b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000a4	8b 12		 mov	 edx, DWORD PTR [edx]
  000a6	51		 push	 ecx
  000a7	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000aa	ff d0		 call	 eax
  000ac	83 c4 1c	 add	 esp, 28			; 0000001cH

; 9974 : 
; 9975 : 	return true;

  000af	b0 01		 mov	 al, 1

; 9976 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b7	33 cd		 xor	 ecx, ebp
  000b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 14 00	 ret	 20			; 00000014H
?SaveVideoDataInfo@CAttemperEngineSink@@QAE_NPADGGPAEG@Z ENDP ; CAttemperEngineSink::SaveVideoDataInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SaveVideoPlayerInfo@CAttemperEngineSink@@QAE_NKPAD@Z
_TEXT	SEGMENT
_pServerUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_pVideoNumber$ = 12					; size = 4
?SaveVideoPlayerInfo@CAttemperEngineSink@@QAE_NKPAD@Z PROC ; CAttemperEngineSink::SaveVideoPlayerInfo, COMDAT
; _this$ = ecx

; 9950 : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9951 : 	IServerUserItem* pServerUserItem = m_ServerUserManager.SearchUserItem(dwUserID);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00022	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00025	ff d2		 call	 edx
  00027	89 45 f8	 mov	 DWORD PTR _pServerUserItem$[ebp], eax

; 9952 : 	if(pServerUserItem != NULL)

  0002a	83 7d f8 00	 cmp	 DWORD PTR _pServerUserItem$[ebp], 0
  0002e	74 11		 je	 SHORT $LN2@SaveVideoP

; 9953 : 	{
; 9954 : 		pServerUserItem->SetVideoNumber(pVideoNumber);

  00030	8b 45 0c	 mov	 eax, DWORD PTR _pVideoNumber$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00037	8b 11		 mov	 edx, DWORD PTR [ecx]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  0003c	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0003f	ff d0		 call	 eax
$LN2@SaveVideoP:

; 9955 : 	}
; 9956 : 
; 9957 : 	return true;

  00041	b0 01		 mov	 al, 1

; 9958 : }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?SaveVideoPlayerInfo@CAttemperEngineSink@@QAE_NKPAD@Z ENDP ; CAttemperEngineSink::SaveVideoPlayerInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?GetPropertyType@CAttemperEngineSink@@QAEGG@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wPropertyIndex$ = 8					; size = 2
?GetPropertyType@CAttemperEngineSink@@QAEGG@Z PROC	; CAttemperEngineSink::GetPropertyType, COMDAT
; _this$ = ecx

; 9925 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9926 : 	switch(wPropertyIndex)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b8 1a	 cmp	 DWORD PTR tv65[ebp], 26	; 0000001aH
  00017	7f 26		 jg	 SHORT $LN7@GetPropert
  00019	83 7d b8 14	 cmp	 DWORD PTR tv65[ebp], 20	; 00000014H
  0001d	7d 3b		 jge	 SHORT $LN5@GetPropert
  0001f	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00022	83 e9 01	 sub	 ecx, 1
  00025	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  00028	83 7d b8 0e	 cmp	 DWORD PTR tv65[ebp], 14	; 0000000eH
  0002c	77 33		 ja	 SHORT $LN2@GetPropert
  0002e	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00031	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN9@GetPropert[edx]
  00038	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetPropert[eax*4]
$LN7@GetPropert:
  0003f	81 7d b8 32 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 306 ; 00000132H
  00046	7c 19		 jl	 SHORT $LN2@GetPropert
  00048	81 7d b8 35 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 309 ; 00000135H
  0004f	7e 09		 jle	 SHORT $LN5@GetPropert
  00051	eb 0e		 jmp	 SHORT $LN2@GetPropert
$LN4@GetPropert:

; 9927 : 	{
; 9928 : 	case PROPERTY_ID_CAR:	case PROPERTY_ID_EGG: 	case PROPERTY_ID_CLAP: 	case PROPERTY_ID_KISS: 	case PROPERTY_ID_BEER:
; 9929 : 	case PROPERTY_ID_CAKE: 	case PROPERTY_ID_RING:  case PROPERTY_ID_BEAT: 	case PROPERTY_ID_BOMB:  case PROPERTY_ID_SMOKE:
; 9930 : 	case PROPERTY_ID_VILLA: case PROPERTY_ID_BRICK: case PROPERTY_ID_FLOWER: 
; 9931 : 		{
; 9932 : 			return PT_TYPE_PRESENT;

  00053	b8 02 00 00 00	 mov	 eax, 2
  00058	eb 26		 jmp	 SHORT $LN1@GetPropert
$LN5@GetPropert:

; 9933 : 		};
; 9934 :     case PROPERTY_ID_TWO_CARD: 	case PROPERTY_ID_FOUR_CARD:  case PROPERTY_ID_SCORE_CLEAR:     case PROPERTY_ID_ESCAPE_CLEAR:
; 9935 : 	case PROPERTY_ID_TRUMPET:	case PROPERTY_ID_TYPHON:     case PROPERTY_ID_GUARDKICK_CARD:  case PROPERTY_ID_POSSESS:
; 9936 : 	case PROPERTY_ID_BLUERING_CARD: case PROPERTY_ID_YELLOWRING_CARD: case PROPERTY_ID_WHITERING_CARD: case PROPERTY_ID_REDRING_CARD:
; 9937 : 	case PROPERTY_ID_VIPROOM_CARD: 
; 9938 : 		{
; 9939 : 			return PT_TYPE_PROPERTY;

  0005a	b8 01 00 00 00	 mov	 eax, 1
  0005f	eb 1f		 jmp	 SHORT $LN1@GetPropert
$LN2@GetPropert:

; 9940 : 		};
; 9941 : 	}
; 9942 : 
; 9943 : 	ASSERT(false);

  00061	33 c0		 xor	 eax, eax
  00063	75 19		 jne	 SHORT $LN8@GetPropert
  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetPropertyType@CAttemperEngineSink@@QAEGG@Z@4JA
  0006b	83 c1 12	 add	 ecx, 18			; 00000012H
  0006e	51		 push	 ecx
  0006f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN8@GetPropert
  0007d	cc		 int	 3
$LN8@GetPropert:

; 9944 : 
; 9945 : 	return PT_TYPE_ERROR;

  0007e	33 c0		 xor	 eax, eax
$LN1@GetPropert:

; 9946 : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
  00089	0f 1f 00	 npad	 3
$LN10@GetPropert:
  0008c	00 00 00 00	 DD	 $LN4@GetPropert
  00090	00 00 00 00	 DD	 $LN5@GetPropert
$LN9@GetPropert:
  00094	00		 DB	 0
  00095	00		 DB	 0
  00096	00		 DB	 0
  00097	00		 DB	 0
  00098	00		 DB	 0
  00099	00		 DB	 0
  0009a	00		 DB	 0
  0009b	00		 DB	 0
  0009c	00		 DB	 0
  0009d	00		 DB	 0
  0009e	00		 DB	 0
  0009f	00		 DB	 0
  000a0	00		 DB	 0
  000a1	01		 DB	 1
  000a2	01		 DB	 1
?GetPropertyType@CAttemperEngineSink@@QAEGG@Z ENDP	; CAttemperEngineSink::GetPropertyType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wBindIndex$ = 8					; size = 2
?GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z PROC ; CAttemperEngineSink::GetBindParameter, COMDAT
; _this$ = ecx

; 9901 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9902 : 	//无效连接
; 9903 : 	if (wBindIndex==INVALID_WORD) return NULL;

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00010	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00015	75 04		 jne	 SHORT $LN2@GetBindPar
  00017	33 c0		 xor	 eax, eax
  00019	eb 6a		 jmp	 SHORT $LN1@GetBindPar
$LN2@GetBindPar:

; 9904 : 
; 9905 : 	//常规连接
; 9906 : 	if (wBindIndex<m_pGameServiceOption->wMaxPlayer)

  0001b	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00025	0f b7 4a 44	 movzx	 ecx, WORD PTR [edx+68]
  00029	3b c1		 cmp	 eax, ecx
  0002b	7d 0f		 jge	 SHORT $LN3@GetBindPar

; 9907 : 	{
; 9908 : 		return m_pNormalParameter+wBindIndex;

  0002d	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00031	c1 e0 05	 shl	 eax, 5
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	03 41 18	 add	 eax, DWORD PTR [ecx+24]
  0003a	eb 49		 jmp	 SHORT $LN1@GetBindPar
$LN3@GetBindPar:

; 9909 : 	}
; 9910 : 
; 9911 : 	//机器连接
; 9912 : 	if ((wBindIndex>=INDEX_ANDROID)&&(wBindIndex<(INDEX_ANDROID+MAX_ANDROID)))

  0003c	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00040	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00045	7c 1f		 jl	 SHORT $LN4@GetBindPar
  00047	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0004b	3d 00 28 00 00	 cmp	 eax, 10240		; 00002800H
  00050	7d 14		 jge	 SHORT $LN4@GetBindPar

; 9913 : 	{
; 9914 : 		return m_pAndroidParameter+(wBindIndex-INDEX_ANDROID);

  00052	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00056	2d 00 20 00 00	 sub	 eax, 8192		; 00002000H
  0005b	c1 e0 05	 shl	 eax, 5
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	03 41 1c	 add	 eax, DWORD PTR [ecx+28]
  00064	eb 1f		 jmp	 SHORT $LN1@GetBindPar
$LN4@GetBindPar:

; 9915 : 	}
; 9916 : 
; 9917 : 	//错误断言
; 9918 : 	ASSERT(FALSE);

  00066	33 c0		 xor	 eax, eax
  00068	75 19		 jne	 SHORT $LN6@GetBindPar
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z@4JA
  00070	83 c1 11	 add	 ecx, 17			; 00000011H
  00073	51		 push	 ecx
  00074	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00079	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007e	85 c0		 test	 eax, eax
  00080	74 01		 je	 SHORT $LN6@GetBindPar
  00082	cc		 int	 3
$LN6@GetBindPar:

; 9919 : 
; 9920 : 	return NULL;

  00083	33 c0		 xor	 eax, eax
$LN1@GetBindPar:

; 9921 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?GetBindParameter@CAttemperEngineSink@@UAEPAUtagBindParameter@@G@Z ENDP ; CAttemperEngineSink::GetBindParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
_pBindParameter$ = -8					; size = 4
_this$ = -4						; size = 4
_wBindIndex$ = 8					; size = 2
?GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z PROC ; CAttemperEngineSink::GetBindUserItem, COMDAT
; _this$ = ecx

; 9883 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9884 : 	//获取参数
; 9885 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0001c	ff d0		 call	 eax
  0001e	89 45 f8	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 9886 : 
; 9887 : 	//获取用户
; 9888 : 	if (pBindParameter!=NULL)

  00021	83 7d f8 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  00025	74 08		 je	 SHORT $LN2@GetBindUse

; 9889 : 	{
; 9890 : 		return pBindParameter->pIServerUserItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0002a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0002d	eb 1f		 jmp	 SHORT $LN1@GetBindUse
$LN2@GetBindUse:

; 9891 : 	}
; 9892 : 
; 9893 : 	//错误断言
; 9894 : 	ASSERT(FALSE);

  0002f	33 c0		 xor	 eax, eax
  00031	75 19		 jne	 SHORT $LN4@GetBindUse
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z@4JA
  00039	83 c1 0b	 add	 ecx, 11			; 0000000bH
  0003c	51		 push	 ecx
  0003d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00042	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00047	85 c0		 test	 eax, eax
  00049	74 01		 je	 SHORT $LN4@GetBindUse
  0004b	cc		 int	 3
$LN4@GetBindUse:

; 9895 : 
; 9896 : 	return NULL;

  0004c	33 c0		 xor	 eax, eax
$LN1@GetBindUse:

; 9897 : }

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?GetBindUserItem@CAttemperEngineSink@@UAEPAUIServerUserItem@@G@Z ENDP ; CAttemperEngineSink::GetBindUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z
_TEXT	SEGMENT
_wHeadSize$ = -280					; size = 2
_wDataSize$ = -276					; size = 2
_PropertyFailure$ = -272				; size = 262
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pszDescribe$ = 12					; size = 4
_lErrorCode$ = 16					; size = 4
_wRequestArea$ = 20					; size = 2
?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z PROC ; CAttemperEngineSink::SendPropertyFailure, COMDAT
; _this$ = ecx

; 9592 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9593 : 	//变量定义
; 9594 : 	CMD_GR_PropertyFailure PropertyFailure;
; 9595 : 	ZeroMemory(&PropertyFailure,sizeof(PropertyFailure));

  00019	68 06 01 00 00	 push	 262			; 00000106H
  0001e	6a 00		 push	 0
  00020	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _PropertyFailure$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9596 : 
; 9597 : 	//设置变量
; 9598 : 	PropertyFailure.lErrorCode=lErrorCode;

  0002f	8b 45 10	 mov	 eax, DWORD PTR _lErrorCode$[ebp]
  00032	89 85 f2 fe ff
	ff		 mov	 DWORD PTR _PropertyFailure$[ebp+2], eax

; 9599 : 	PropertyFailure.wRequestArea=wRequestArea;

  00038	66 8b 45 14	 mov	 ax, WORD PTR _wRequestArea$[ebp]
  0003c	66 89 85 f0 fe
	ff ff		 mov	 WORD PTR _PropertyFailure$[ebp], ax

; 9600 : 	lstrcpyn(PropertyFailure.szDescribeString,pszDescribe,CountArray(PropertyFailure.szDescribeString));

  00043	68 00 01 00 00	 push	 256			; 00000100H
  00048	8b 45 0c	 mov	 eax, DWORD PTR _pszDescribe$[ebp]
  0004b	50		 push	 eax
  0004c	8d 8d f6 fe ff
	ff		 lea	 ecx, DWORD PTR _PropertyFailure$[ebp+6]
  00052	51		 push	 ecx
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9601 : 
; 9602 : 	//发送数据
; 9603 : 	WORD wDataSize=CountStringBuffer(PropertyFailure.szDescribeString);

  00059	8d 85 f6 fe ff
	ff		 lea	 eax, DWORD PTR _PropertyFailure$[ebp+6]
  0005f	50		 push	 eax
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00066	83 c0 01	 add	 eax, 1
  00069	66 89 85 ec fe
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 9604 : 	WORD wHeadSize=sizeof(PropertyFailure)-sizeof(PropertyFailure.szDescribeString);

  00070	b8 06 00 00 00	 mov	 eax, 6
  00075	66 89 85 e8 fe
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 9605 : 	SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_PROPERTY_FAILURE,&PropertyFailure,wHeadSize+wDataSize);

  0007c	0f b7 85 e8 fe
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00083	0f b7 8d ec fe
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0008a	03 c1		 add	 eax, ecx
  0008c	50		 push	 eax
  0008d	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _PropertyFailure$[ebp]
  00093	52		 push	 edx
  00094	68 ca 00 00 00	 push	 202			; 000000caH
  00099	6a 03		 push	 3
  0009b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0009e	50		 push	 eax
  0009f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	83 c1 04	 add	 ecx, 4
  000a5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ab	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000ae	ff d2		 call	 edx

; 9606 : 
; 9607 : 	return true;

  000b0	b0 01		 mov	 al, 1

; 9608 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 10 00	 ret	 16			; 00000010H
?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ENDP ; CAttemperEngineSink::SendPropertyFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z
_TEXT	SEGMENT
_wHeadSize$ = -276					; size = 2
_wDataSize$ = -272					; size = 2
_RequestFailure$ = -268					; size = 260
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pszDescribe$ = 12					; size = 4
_lErrorCode$ = 16					; size = 4
?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z PROC ; CAttemperEngineSink::SendRequestFailure, COMDAT
; _this$ = ecx

; 9573 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9574 : 	//变量定义
; 9575 : 	CMD_GR_RequestFailure RequestFailure;
; 9576 : 	ZeroMemory(&RequestFailure,sizeof(RequestFailure));

  00019	68 04 01 00 00	 push	 260			; 00000104H
  0001e	6a 00		 push	 0
  00020	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _RequestFailure$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9577 : 
; 9578 : 	//设置变量
; 9579 : 	RequestFailure.lErrorCode=lErrorCode;

  0002f	8b 45 10	 mov	 eax, DWORD PTR _lErrorCode$[ebp]
  00032	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _RequestFailure$[ebp], eax

; 9580 : 	lstrcpyn(RequestFailure.szDescribeString,pszDescribe,CountArray(RequestFailure.szDescribeString));

  00038	68 00 01 00 00	 push	 256			; 00000100H
  0003d	8b 45 0c	 mov	 eax, DWORD PTR _pszDescribe$[ebp]
  00040	50		 push	 eax
  00041	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _RequestFailure$[ebp+4]
  00047	51		 push	 ecx
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9581 : 
; 9582 : 	//发送数据
; 9583 : 	WORD wDataSize=CountStringBuffer(RequestFailure.szDescribeString);

  0004e	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _RequestFailure$[ebp+4]
  00054	50		 push	 eax
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0005b	83 c0 01	 add	 eax, 1
  0005e	66 89 85 f0 fe
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 9584 : 	WORD wHeadSize=sizeof(RequestFailure)-sizeof(RequestFailure.szDescribeString);

  00065	b8 04 00 00 00	 mov	 eax, 4
  0006a	66 89 85 ec fe
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 9585 : 	SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_REQUEST_FAILURE,&RequestFailure,wHeadSize+wDataSize);

  00071	0f b7 85 ec fe
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00078	0f b7 8d f0 fe
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0007f	03 c1		 add	 eax, ecx
  00081	50		 push	 eax
  00082	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _RequestFailure$[ebp]
  00088	52		 push	 edx
  00089	6a 67		 push	 103			; 00000067H
  0008b	6a 03		 push	 3
  0008d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	83 c1 04	 add	 ecx, 4
  00097	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009d	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000a0	ff d2		 call	 edx

; 9586 : 
; 9587 : 	return true;

  000a2	b0 01		 mov	 al, 1

; 9588 : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 0c 00	 ret	 12			; 0000000cH
?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ENDP ; CAttemperEngineSink::SendRequestFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z
_TEXT	SEGMENT
_wHeadSize$ = -152					; size = 2
_wDataSize$ = -148					; size = 2
_UserInsureFailure$ = -144				; size = 133
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pszString$ = 12					; size = 4
_lErrorCode$ = 16					; size = 4
_cbActivityGame$ = 20					; size = 1
?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z PROC ; CAttemperEngineSink::SendInsureFailure, COMDAT
; _this$ = ecx

; 9547 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9548 : 	//效验参数
; 9549 : 	ASSERT(pIServerUserItem!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 18		 jne	 SHORT $LN4@SendInsure
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z@4JA
  00024	83 c0 02	 add	 eax, 2
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN4@SendInsure
  00036	cc		 int	 3
$LN4@SendInsure:

; 9550 : 	if (pIServerUserItem==NULL) return false;

  00037	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003b	75 07		 jne	 SHORT $LN2@SendInsure
  0003d	32 c0		 xor	 al, al
  0003f	e9 94 00 00 00	 jmp	 $LN1@SendInsure
$LN2@SendInsure:

; 9551 : 
; 9552 : 	//变量定义
; 9553 : 	CMD_GR_S_UserInsureFailure UserInsureFailure;
; 9554 : 	ZeroMemory(&UserInsureFailure,sizeof(UserInsureFailure));

  00044	68 85 00 00 00	 push	 133			; 00000085H
  00049	6a 00		 push	 0
  0004b	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _UserInsureFailure$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9555 : 
; 9556 : 	//构造数据
; 9557 : 	UserInsureFailure.cbActivityGame=cbActivityGame;

  0005a	8a 45 14	 mov	 al, BYTE PTR _cbActivityGame$[ebp]
  0005d	88 85 70 ff ff
	ff		 mov	 BYTE PTR _UserInsureFailure$[ebp], al

; 9558 : 	UserInsureFailure.lErrorCode=lErrorCode;

  00063	8b 45 10	 mov	 eax, DWORD PTR _lErrorCode$[ebp]
  00066	89 85 71 ff ff
	ff		 mov	 DWORD PTR _UserInsureFailure$[ebp+1], eax

; 9559 : 	lstrcpyn(UserInsureFailure.szDescribeString,pszString,CountArray(UserInsureFailure.szDescribeString));

  0006c	68 80 00 00 00	 push	 128			; 00000080H
  00071	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00074	50		 push	 eax
  00075	8d 8d 75 ff ff
	ff		 lea	 ecx, DWORD PTR _UserInsureFailure$[ebp+5]
  0007b	51		 push	 ecx
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9560 : 
; 9561 : 	//数据属性
; 9562 : 	WORD wDataSize=CountStringBuffer(UserInsureFailure.szDescribeString);

  00082	8d 85 75 ff ff
	ff		 lea	 eax, DWORD PTR _UserInsureFailure$[ebp+5]
  00088	50		 push	 eax
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0008f	83 c0 01	 add	 eax, 1
  00092	66 89 85 6c ff
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 9563 : 	WORD wHeadSize=sizeof(UserInsureFailure)-sizeof(UserInsureFailure.szDescribeString);

  00099	b8 05 00 00 00	 mov	 eax, 5
  0009e	66 89 85 68 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 9564 : 
; 9565 : 	//发送数据
; 9566 : 	SendData(pIServerUserItem,MDM_GR_INSURE,SUB_GR_USER_INSURE_FAILURE,&UserInsureFailure,wHeadSize+wDataSize);

  000a5	0f b7 85 68 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  000ac	0f b7 8d 6c ff
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b3	03 c1		 add	 eax, ecx
  000b5	50		 push	 eax
  000b6	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _UserInsureFailure$[ebp]
  000bc	52		 push	 edx
  000bd	6a 66		 push	 102			; 00000066H
  000bf	6a 05		 push	 5
  000c1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	83 c1 04	 add	 ecx, 4
  000cb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d1	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000d4	ff d2		 call	 edx

; 9567 : 
; 9568 : 	return true;

  000d6	b0 01		 mov	 al, 1
$LN1@SendInsure:

; 9569 : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000de	33 cd		 xor	 ecx, ebp
  000e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 10 00	 ret	 16			; 00000010H
?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ENDP ; CAttemperEngineSink::SendInsureFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z
_TEXT	SEGMENT
_wHeadSize$ = -148					; size = 2
_wDataSize$ = -144					; size = 2
_LogonFailure$ = -140					; size = 132
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pszString$ = 8						; size = 4
_lErrorCode$ = 12					; size = 4
_dwSocketID$ = 16					; size = 4
?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z PROC ; CAttemperEngineSink::SendLogonFailure, COMDAT
; _this$ = ecx

; 9526 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9527 : 	//变量定义
; 9528 : 	CMD_GR_LogonFailure LogonFailure;
; 9529 : 	ZeroMemory(&LogonFailure,sizeof(LogonFailure));

  00019	68 84 00 00 00	 push	 132			; 00000084H
  0001e	6a 00		 push	 0
  00020	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _LogonFailure$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9530 : 
; 9531 : 	//构造数据
; 9532 : 	LogonFailure.lErrorCode=lErrorCode;

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _lErrorCode$[ebp]
  00032	89 85 74 ff ff
	ff		 mov	 DWORD PTR _LogonFailure$[ebp], eax

; 9533 : 	lstrcpyn(LogonFailure.szDescribeString,pszString,CountArray(LogonFailure.szDescribeString));

  00038	68 80 00 00 00	 push	 128			; 00000080H
  0003d	8b 45 08	 mov	 eax, DWORD PTR _pszString$[ebp]
  00040	50		 push	 eax
  00041	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _LogonFailure$[ebp+4]
  00047	51		 push	 ecx
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9534 : 
; 9535 : 	//数据属性
; 9536 : 	WORD wDataSize=CountStringBuffer(LogonFailure.szDescribeString);

  0004e	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _LogonFailure$[ebp+4]
  00054	50		 push	 eax
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0005b	83 c0 01	 add	 eax, 1
  0005e	66 89 85 70 ff
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 9537 : 	WORD wHeadSize=sizeof(LogonFailure)-sizeof(LogonFailure.szDescribeString);

  00065	b8 04 00 00 00	 mov	 eax, 4
  0006a	66 89 85 6c ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 9538 : 
; 9539 : 	//发送数据
; 9540 : 	SendData(dwSocketID,MDM_GR_LOGON,SUB_GR_LOGON_FAILURE,&LogonFailure,wHeadSize+wDataSize);

  00071	0f b7 85 6c ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00078	0f b7 8d 70 ff
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0007f	03 c1		 add	 eax, ecx
  00081	50		 push	 eax
  00082	8d 95 74 ff ff
	ff		 lea	 edx, DWORD PTR _LogonFailure$[ebp]
  00088	52		 push	 edx
  00089	6a 65		 push	 101			; 00000065H
  0008b	6a 01		 push	 1
  0008d	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	83 c1 04	 add	 ecx, 4
  00097	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009d	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000a0	ff d2		 call	 edx

; 9541 : 
; 9542 : 	return true;

  000a2	b0 01		 mov	 al, 1

; 9543 : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 0c 00	 ret	 12			; 0000000cH
?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ENDP ; CAttemperEngineSink::SendLogonFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
tv131 = -158						; size = 2
_pIServerUserItemSend$ = -92				; size = 4
_wUserIndex$ = -88					; size = 2
_PropertyEffect$ = -84					; size = 74
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_wPropKind$ = 12					; size = 2
?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z PROC ; CAttemperEngineSink::SendPropertyEffect, COMDAT
; _this$ = ecx

; 9724 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9725 : 	//参数校验
; 9726 : 	if(pIServerUserItem==NULL) return false;

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 07		 jne	 SHORT $LN4@SendProper
  0001f	32 c0		 xor	 al, al
  00021	e9 ea 00 00 00	 jmp	 $LN1@SendProper
$LN4@SendProper:

; 9727 : 
; 9728 : 	//构造结构
; 9729 : 	CMD_GR_S_PropertyEffect  PropertyEffect={0};

  00026	6a 4a		 push	 74			; 0000004aH
  00028	6a 00		 push	 0
  0002a	8d 45 ac	 lea	 eax, DWORD PTR _PropertyEffect$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _memset
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9730 : 	PropertyEffect.wPropKind = (BYTE)wPropKind;

  00036	8a 45 0c	 mov	 al, BYTE PTR _wPropKind$[ebp]
  00039	88 45 b0	 mov	 BYTE PTR _PropertyEffect$[ebp+4], al

; 9731 : 	PropertyEffect.wUserID = pIServerUserItem->GetUserID();

  0003c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00044	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00047	ff d0		 call	 eax
  00049	89 45 ac	 mov	 DWORD PTR _PropertyEffect$[ebp], eax

; 9732 : 	PropertyEffect.cbMemberOrder=pIServerUserItem->GetMemberOrder();

  0004c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0004f	8b 10		 mov	 edx, DWORD PTR [eax]
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00054	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  0005a	ff d0		 call	 eax
  0005c	88 45 b1	 mov	 BYTE PTR _PropertyEffect$[ebp+5], al

; 9733 : 	PropertyEffect.dwFleeCount = pIServerUserItem->GetUserInfo()->dwFleeCount;

  0005f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00067	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0006a	ff d0		 call	 eax
  0006c	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  00072	89 4d b2	 mov	 DWORD PTR _PropertyEffect$[ebp+6], ecx

; 9734 : 	//PropertyEffect.lScore = pIServerUserItem->GetUserInfo()->lScore;
; 9735 : 	PropertyEffect.bConsumptionType = pIServerUserItem->GetUserInfo()->bConsumptionType;

  00075	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00078	8b 10		 mov	 edx, DWORD PTR [eax]
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007d	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00080	ff d0		 call	 eax
  00082	05 98 00 00 00	 add	 eax, 152		; 00000098H
  00087	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0008c	8b f0		 mov	 esi, eax
  0008e	8d 7d b6	 lea	 edi, DWORD PTR _PropertyEffect$[ebp+10]
  00091	f3 a5		 rep movsd

; 9736 : 
; 9737 : 	//在线用户
; 9738 : 	WORD wUserIndex=0;

  00093	33 c0		 xor	 eax, eax
  00095	66 89 45 a8	 mov	 WORD PTR _wUserIndex$[ebp], ax

; 9739 : 	IServerUserItem * pIServerUserItemSend=NULL;

  00099	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItemSend$[ebp], 0
$LN2@SendProper:

; 9740 : 	while (true)

  000a0	b8 01 00 00 00	 mov	 eax, 1
  000a5	85 c0		 test	 eax, eax
  000a7	74 65		 je	 SHORT $LN3@SendProper

; 9741 : 	{
; 9742 : 		pIServerUserItemSend=m_ServerUserManager.EnumUserItem(wUserIndex++);

  000a9	66 8b 45 a8	 mov	 ax, WORD PTR _wUserIndex$[ebp]
  000ad	66 89 85 62 ff
	ff ff		 mov	 WORD PTR tv131[ebp], ax
  000b4	0f b7 8d 62 ff
	ff ff		 movzx	 ecx, WORD PTR tv131[ebp]
  000bb	51		 push	 ecx
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000ce	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000d1	ff d2		 call	 edx
  000d3	89 45 a4	 mov	 DWORD PTR _pIServerUserItemSend$[ebp], eax
  000d6	66 8b 45 a8	 mov	 ax, WORD PTR _wUserIndex$[ebp]
  000da	66 83 c0 01	 add	 ax, 1
  000de	66 89 45 a8	 mov	 WORD PTR _wUserIndex$[ebp], ax

; 9743 : 		if (pIServerUserItemSend==NULL) break;

  000e2	83 7d a4 00	 cmp	 DWORD PTR _pIServerUserItemSend$[ebp], 0
  000e6	75 02		 jne	 SHORT $LN5@SendProper
  000e8	eb 24		 jmp	 SHORT $LN3@SendProper
$LN5@SendProper:

; 9744 : 		SendData(pIServerUserItemSend,MDM_GR_PROPERTY,SUB_GR_PROPERTY_EFFECT,&PropertyEffect,sizeof(PropertyEffect));

  000ea	6a 4a		 push	 74			; 0000004aH
  000ec	8d 45 ac	 lea	 eax, DWORD PTR _PropertyEffect$[ebp]
  000ef	50		 push	 eax
  000f0	68 cc 00 00 00	 push	 204			; 000000ccH
  000f5	6a 08		 push	 8
  000f7	8b 4d a4	 mov	 ecx, DWORD PTR _pIServerUserItemSend$[ebp]
  000fa	51		 push	 ecx
  000fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	83 c1 04	 add	 ecx, 4
  00101	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00107	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0010a	ff d2		 call	 edx

; 9745 : 	}

  0010c	eb 92		 jmp	 SHORT $LN2@SendProper
$LN3@SendProper:

; 9746 : 
; 9747 : 	return true;

  0010e	b0 01		 mov	 al, 1
$LN1@SendProper:

; 9748 : }

  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00116	33 cd		 xor	 ecx, ebp
  00118	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c2 08 00	 ret	 8
?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ENDP ; CAttemperEngineSink::SendPropertyEffect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendPropertyMessage@CAttemperEngineSink@@IAE_NKKGG@Z
_TEXT	SEGMENT
tv76 = -94						; size = 2
_pIServerUserItemSend$ = -28				; size = 4
_wUserIndex$ = -24					; size = 2
_PropertyMessage$ = -20					; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwSourceID$ = 8					; size = 4
_dwTargerID$ = 12					; size = 4
_wPropertyIndex$ = 16					; size = 2
_wPropertyCount$ = 20					; size = 2
?SendPropertyMessage@CAttemperEngineSink@@IAE_NKKGG@Z PROC ; CAttemperEngineSink::SendPropertyMessage, COMDAT
; _this$ = ecx

; 9701 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9702 : 	//构造结构
; 9703 : 	CMD_GR_S_PropertyMessage  PropertyMessage;
; 9704 : 	PropertyMessage.wPropertyIndex=wPropertyIndex;

  00016	66 8b 45 10	 mov	 ax, WORD PTR _wPropertyIndex$[ebp]
  0001a	66 89 45 ec	 mov	 WORD PTR _PropertyMessage$[ebp], ax

; 9705 : 	PropertyMessage.dwSourceUserID=dwSourceID;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _dwSourceID$[ebp]
  00021	89 45 f0	 mov	 DWORD PTR _PropertyMessage$[ebp+4], eax

; 9706 : 	PropertyMessage.dwTargerUserID=dwTargerID;

  00024	8b 45 0c	 mov	 eax, DWORD PTR _dwTargerID$[ebp]
  00027	89 45 f4	 mov	 DWORD PTR _PropertyMessage$[ebp+8], eax

; 9707 : 	PropertyMessage.wPropertyCount=wPropertyCount;

  0002a	66 8b 45 14	 mov	 ax, WORD PTR _wPropertyCount$[ebp]
  0002e	66 89 45 ee	 mov	 WORD PTR _PropertyMessage$[ebp+2], ax

; 9708 : 
; 9709 : 	//在线用户
; 9710 : 	WORD wUserIndex=0;

  00032	33 c0		 xor	 eax, eax
  00034	66 89 45 e8	 mov	 WORD PTR _wUserIndex$[ebp], ax

; 9711 : 	IServerUserItem * pIServerUserItemSend=NULL;

  00038	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItemSend$[ebp], 0
$LN2@SendProper:

; 9712 : 	while (true)

  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	85 c0		 test	 eax, eax
  00046	74 5f		 je	 SHORT $LN3@SendProper

; 9713 : 	{
; 9714 : 		pIServerUserItemSend=m_ServerUserManager.EnumUserItem(wUserIndex++);

  00048	66 8b 45 e8	 mov	 ax, WORD PTR _wUserIndex$[ebp]
  0004c	66 89 45 a2	 mov	 WORD PTR tv76[ebp], ax
  00050	0f b7 4d a2	 movzx	 ecx, WORD PTR tv76[ebp]
  00054	51		 push	 ecx
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0005e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00067	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0006a	ff d2		 call	 edx
  0006c	89 45 e4	 mov	 DWORD PTR _pIServerUserItemSend$[ebp], eax
  0006f	66 8b 45 e8	 mov	 ax, WORD PTR _wUserIndex$[ebp]
  00073	66 83 c0 01	 add	 ax, 1
  00077	66 89 45 e8	 mov	 WORD PTR _wUserIndex$[ebp], ax

; 9715 : 		if (pIServerUserItemSend==NULL) break;

  0007b	83 7d e4 00	 cmp	 DWORD PTR _pIServerUserItemSend$[ebp], 0
  0007f	75 02		 jne	 SHORT $LN4@SendProper
  00081	eb 24		 jmp	 SHORT $LN3@SendProper
$LN4@SendProper:

; 9716 : 		SendData(pIServerUserItemSend,MDM_GR_PROPERTY,SUB_GR_PROPERTY_MESSAGE,&PropertyMessage,sizeof(PropertyMessage));

  00083	6a 0c		 push	 12			; 0000000cH
  00085	8d 45 ec	 lea	 eax, DWORD PTR _PropertyMessage$[ebp]
  00088	50		 push	 eax
  00089	68 cb 00 00 00	 push	 203			; 000000cbH
  0008e	6a 08		 push	 8
  00090	8b 4d e4	 mov	 ecx, DWORD PTR _pIServerUserItemSend$[ebp]
  00093	51		 push	 ecx
  00094	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	83 c1 04	 add	 ecx, 4
  0009a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a0	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000a3	ff d2		 call	 edx

; 9717 : 	}

  000a5	eb 98		 jmp	 SHORT $LN2@SendProper
$LN3@SendProper:

; 9718 : 
; 9719 : 	return true;

  000a7	b0 01		 mov	 al, 1

; 9720 : }

  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000af	33 cd		 xor	 ecx, ebp
  000b1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 10 00	 ret	 16			; 00000010H
?SendPropertyMessage@CAttemperEngineSink@@IAE_NKKGG@Z ENDP ; CAttemperEngineSink::SendPropertyMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventPropertyBuyPrep@CAttemperEngineSink@@IAE_NGGPAUIServerUserItem@@0@Z
_TEXT	SEGMENT
tv188 = -364						; size = 4
tv177 = -362						; size = 2
_szMessage$1 = -296					; size = 128
_dwCurrFleeCount$2 = -168				; size = 4
_szMessage$3 = -164					; size = 128
_lCurrScore$4 = -36					; size = 8
_pTableFrame$5 = -28					; size = 4
_pIServerUserItem$6 = -24				; size = 4
_wEnumIndex$7 = -20					; size = 2
_wTableID$8 = -16					; size = 2
_pPropertyInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_cbRequestArea$ = 8					; size = 2
_wPropertyIndex$ = 12					; size = 2
_pISourceUserItem$ = 16					; size = 4
_pTargetUserItem$ = 20					; size = 4
?OnEventPropertyBuyPrep@CAttemperEngineSink@@IAE_NGGPAUIServerUserItem@@0@Z PROC ; CAttemperEngineSink::OnEventPropertyBuyPrep, COMDAT
; _this$ = ecx

; 9752 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 6c 01 00
	00		 sub	 esp, 364		; 0000016cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9753 : 	//目标玩家
; 9754 : 	if ( pTargetUserItem == NULL )

  00019	83 7d 14 00	 cmp	 DWORD PTR _pTargetUserItem$[ebp], 0
  0001d	75 1f		 jne	 SHORT $LN7@OnEventPro

; 9755 : 	{
; 9756 : 		//发送消息
; 9757 : 		SendPropertyFailure(pISourceUserItem,TEXT("赠送失败，您要赠送的玩家已经离开！"), 0L,cbRequestArea);

  0001f	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  00023	50		 push	 eax
  00024	6a 00		 push	 0
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@EJEBAEKE@?T?y?K?M?J?$KH?$LA?$NM?$KD?$KM?D?z?R?$KK?T?y?K?M?$LF?D?M?f?$LM?R?R?Q?$LO?$KN?$MA?k?$LP@
  0002b	8b 4d 10	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9758 : 
; 9759 : 		return false;

  00037	32 c0		 xor	 al, al
  00039	e9 57 03 00 00	 jmp	 $LN1@OnEventPro
$LN7@OnEventPro:

; 9760 : 	}
; 9761 : 
; 9762 : 	//房间判断
; 9763 : 	if ( (m_pGameServiceOption->wServerType == GAME_GENRE_GOLD || m_pGameServiceOption->wServerType == GAME_GENRE_MATCH ) && 

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00044	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00048	83 fa 01	 cmp	 edx, 1
  0004b	74 0f		 je	 SHORT $LN9@OnEventPro
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00053	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00057	83 fa 04	 cmp	 edx, 4
  0005a	75 45		 jne	 SHORT $LN8@OnEventPro
$LN9@OnEventPro:
  0005c	0f b7 45 0c	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  00060	3d 34 01 00 00	 cmp	 eax, 308		; 00000134H
  00065	74 1b		 je	 SHORT $LN10@OnEventPro
  00067	0f b7 45 0c	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  0006b	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0006e	74 12		 je	 SHORT $LN10@OnEventPro
  00070	0f b7 45 0c	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  00074	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00077	74 09		 je	 SHORT $LN10@OnEventPro
  00079	0f b7 45 0c	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  0007d	83 f8 15	 cmp	 eax, 21			; 00000015H
  00080	75 1f		 jne	 SHORT $LN8@OnEventPro
$LN10@OnEventPro:

; 9764 : 		(wPropertyIndex== PROPERTY_ID_SCORE_CLEAR||wPropertyIndex==PROPERTY_ID_TWO_CARD||wPropertyIndex == PROPERTY_ID_FOUR_CARD||wPropertyIndex == PROPERTY_ID_POSSESS) )
; 9765 : 	{
; 9766 : 		//发送消息
; 9767 : 		SendPropertyFailure(pISourceUserItem,TEXT("此房间不可以使用此道具,购买失败"), 0L,cbRequestArea);

  00082	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DODBMCGI@?$LE?K?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LF?$MA?$LO?$NP?0?$LJ?$LK?B?r?J?$KH?$LA?$NM@
  0008e	8b 4d 10	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  00091	51		 push	 ecx
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9768 : 
; 9769 : 		return false;

  0009a	32 c0		 xor	 al, al
  0009c	e9 f4 02 00 00	 jmp	 $LN1@OnEventPro
$LN8@OnEventPro:

; 9770 : 	}
; 9771 : 
; 9772 : 	//查找道具
; 9773 : 	tagPropertyInfo * pPropertyInfo=m_GamePropertyManager.SearchPropertyItem(wPropertyIndex);

  000a1	0f b7 45 0c	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SearchPropertyItem@CGamePropertyManager@@QAEPAUtagPropertyInfo@@G@Z
  000b5	89 45 f4	 mov	 DWORD PTR _pPropertyInfo$[ebp], eax

; 9774 : 
; 9775 : 	//有效效验
; 9776 : 	if(pPropertyInfo==NULL)

  000b8	83 7d f4 00	 cmp	 DWORD PTR _pPropertyInfo$[ebp], 0
  000bc	75 1f		 jne	 SHORT $LN11@OnEventPro

; 9777 : 	{
; 9778 : 		//发送消息
; 9779 : 		SendPropertyFailure(pISourceUserItem,TEXT("此道具还未启用,购买失败！"), 0L,cbRequestArea);

  000be	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  000c2	50		 push	 eax
  000c3	6a 00		 push	 0
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@PJNAMAD@?$LE?K?$LF?$MA?$LO?$NP?$LL?$LJ?N?$LE?F?t?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@
  000ca	8b 4d 10	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9780 : 
; 9781 : 		return false;

  000d6	32 c0		 xor	 al, al
  000d8	e9 b8 02 00 00	 jmp	 $LN1@OnEventPro
$LN11@OnEventPro:

; 9782 : 	}
; 9783 : 
; 9784 : 	//自己使用
; 9785 :     if((pPropertyInfo->wServiceArea&PT_SERVICE_AREA_MESELF)==0 && pISourceUserItem==pTargetUserItem) 

  000dd	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyInfo$[ebp]
  000e0	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  000e4	83 e1 01	 and	 ecx, 1
  000e7	75 27		 jne	 SHORT $LN12@OnEventPro
  000e9	8b 45 10	 mov	 eax, DWORD PTR _pISourceUserItem$[ebp]
  000ec	3b 45 14	 cmp	 eax, DWORD PTR _pTargetUserItem$[ebp]
  000ef	75 1f		 jne	 SHORT $LN12@OnEventPro

; 9786 : 	{
; 9787 : 		//发送消息
; 9788 : 		SendPropertyFailure(pISourceUserItem,TEXT("此道具不可自己使用,购买失败！"), 0L,cbRequestArea);

  000f1	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  000f5	50		 push	 eax
  000f6	6a 00		 push	 0
  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BJFEPHFF@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?W?T?$LM?$LK?J?$LJ?S?C?0?$LJ?$LK?B?r?J?$KH?$LA?$NM?$KD?$KB@
  000fd	8b 4d 10	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  00100	51		 push	 ecx
  00101	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9789 : 
; 9790 : 		return false;

  00109	32 c0		 xor	 al, al
  0010b	e9 85 02 00 00	 jmp	 $LN1@OnEventPro
$LN12@OnEventPro:

; 9791 : 	}
; 9792 : 
; 9793 : 	//玩家使用
; 9794 : 	if((pPropertyInfo->wServiceArea&PT_SERVICE_AREA_PLAYER)==0 && pISourceUserItem!=pTargetUserItem) 

  00110	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyInfo$[ebp]
  00113	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00117	83 e1 02	 and	 ecx, 2
  0011a	75 27		 jne	 SHORT $LN13@OnEventPro
  0011c	8b 45 10	 mov	 eax, DWORD PTR _pISourceUserItem$[ebp]
  0011f	3b 45 14	 cmp	 eax, DWORD PTR _pTargetUserItem$[ebp]
  00122	74 1f		 je	 SHORT $LN13@OnEventPro

; 9795 : 	{
; 9796 : 		//发送消息
; 9797 : 		SendPropertyFailure(pISourceUserItem,TEXT("此道具不可赠送给玩家,只能自己使用,购买失败！"), 0L,cbRequestArea);

  00124	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  00128	50		 push	 eax
  00129	6a 00		 push	 0
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@PKMMDIPC@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?M?f?$LM?R?0?V?$LL?D?$NM?W?T?$LM?$LK?J?$LJ@
  00130	8b 4d 10	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  00133	51		 push	 ecx
  00134	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9798 : 
; 9799 : 		return false;

  0013c	32 c0		 xor	 al, al
  0013e	e9 52 02 00 00	 jmp	 $LN1@OnEventPro
$LN13@OnEventPro:

; 9800 : 	}
; 9801 : 
; 9802 : 	//旁观范围
; 9803 : 	if((pPropertyInfo->wServiceArea&PT_SERVICE_AREA_LOOKON)==0)  

  00143	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyInfo$[ebp]
  00146	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0014a	83 e1 04	 and	 ecx, 4
  0014d	0f 85 af 00 00
	00		 jne	 $LN14@OnEventPro

; 9804 : 	{
; 9805 : 		//变量定义
; 9806 : 		WORD wTableID = pTargetUserItem->GetTableID();

  00153	8b 45 14	 mov	 eax, DWORD PTR _pTargetUserItem$[ebp]
  00156	8b 10		 mov	 edx, DWORD PTR [eax]
  00158	8b 4d 14	 mov	 ecx, DWORD PTR _pTargetUserItem$[ebp]
  0015b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0015e	ff d0		 call	 eax
  00160	66 89 45 f0	 mov	 WORD PTR _wTableID$8[ebp], ax

; 9807 : 		if(wTableID!=INVALID_TABLE)

  00164	0f b7 45 f0	 movzx	 eax, WORD PTR _wTableID$8[ebp]
  00168	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0016d	0f 84 8f 00 00
	00		 je	 $LN14@OnEventPro

; 9808 : 		{
; 9809 : 			//变量定义
; 9810 : 			WORD wEnumIndex=0;

  00173	33 c0		 xor	 eax, eax
  00175	66 89 45 ec	 mov	 WORD PTR _wEnumIndex$7[ebp], ax

; 9811 : 			IServerUserItem * pIServerUserItem=NULL;

  00179	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItem$6[ebp], 0

; 9812 : 
; 9813 : 			//获取桌子
; 9814 : 			CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  00180	0f b7 45 f0	 movzx	 eax, WORD PTR _wTableID$8[ebp]
  00184	50		 push	 eax
  00185	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0018e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00193	8b 08		 mov	 ecx, DWORD PTR [eax]
  00195	89 4d e4	 mov	 DWORD PTR _pTableFrame$5[ebp], ecx
$LN4@OnEventPro:

; 9815 : 	
; 9816 : 			//枚举用户
; 9817 : 			do
; 9818 : 			{
; 9819 : 				//获取用户
; 9820 : 				pIServerUserItem=pTableFrame->EnumLookonUserItem(wEnumIndex++);

  00198	66 8b 45 ec	 mov	 ax, WORD PTR _wEnumIndex$7[ebp]
  0019c	66 89 85 96 fe
	ff ff		 mov	 WORD PTR tv177[ebp], ax
  001a3	0f b7 8d 96 fe
	ff ff		 movzx	 ecx, WORD PTR tv177[ebp]
  001aa	51		 push	 ecx
  001ab	8b 55 e4	 mov	 edx, DWORD PTR _pTableFrame$5[ebp]
  001ae	8b 02		 mov	 eax, DWORD PTR [edx]
  001b0	8b 4d e4	 mov	 ecx, DWORD PTR _pTableFrame$5[ebp]
  001b3	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  001b9	ff d2		 call	 edx
  001bb	89 45 e8	 mov	 DWORD PTR _pIServerUserItem$6[ebp], eax
  001be	66 8b 45 ec	 mov	 ax, WORD PTR _wEnumIndex$7[ebp]
  001c2	66 83 c0 01	 add	 ax, 1
  001c6	66 89 45 ec	 mov	 WORD PTR _wEnumIndex$7[ebp], ax

; 9821 : 				if( pIServerUserItem==NULL) break;

  001ca	83 7d e8 00	 cmp	 DWORD PTR _pIServerUserItem$6[ebp], 0
  001ce	75 02		 jne	 SHORT $LN16@OnEventPro
  001d0	eb 30		 jmp	 SHORT $LN14@OnEventPro
$LN16@OnEventPro:

; 9822 : 				if( pIServerUserItem==pTargetUserItem )

  001d2	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$6[ebp]
  001d5	3b 45 14	 cmp	 eax, DWORD PTR _pTargetUserItem$[ebp]
  001d8	75 1f		 jne	 SHORT $LN2@OnEventPro

; 9823 : 				{
; 9824 : 					//发送消息
; 9825 : 					SendPropertyFailure(pISourceUserItem,TEXT("此道具不可赠送给旁观用户,购买失败！"), 0L,cbRequestArea);

  001da	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  001de	50		 push	 eax
  001df	6a 00		 push	 0
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@NGJLFFIP@?$LE?K?$LF?$MA?$LO?$NP?$LC?$LL?$LP?I?T?y?K?M?$LI?x?E?T?$LJ?$NL?S?C?$LL?$KH?0?$LJ?$LK?B?r?J?$KH@
  001e6	8b 4d 10	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  001e9	51		 push	 ecx
  001ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9826 : 
; 9827 : 					return false;

  001f2	32 c0		 xor	 al, al
  001f4	e9 9c 01 00 00	 jmp	 $LN1@OnEventPro
$LN2@OnEventPro:

; 9828 : 				}
; 9829 : 			} while (true);

  001f9	b8 01 00 00 00	 mov	 eax, 1
  001fe	85 c0		 test	 eax, eax
  00200	75 96		 jne	 SHORT $LN4@OnEventPro
$LN14@OnEventPro:

; 9830 : 		}
; 9831 : 	}
; 9832 : 
; 9833 : 	//道具判断
; 9834 : 	switch(wPropertyIndex)

  00202	0f b7 45 0c	 movzx	 eax, WORD PTR _wPropertyIndex$[ebp]
  00206	89 85 94 fe ff
	ff		 mov	 DWORD PTR tv188[ebp], eax
  0020c	81 bd 94 fe ff
	ff 34 01 00 00	 cmp	 DWORD PTR tv188[ebp], 308 ; 00000134H
  00216	74 15		 je	 SHORT $LN18@OnEventPro
  00218	81 bd 94 fe ff
	ff 35 01 00 00	 cmp	 DWORD PTR tv188[ebp], 309 ; 00000135H
  00222	0f 84 bf 00 00
	00		 je	 $LN22@OnEventPro
  00228	e9 66 01 00 00	 jmp	 $LN5@OnEventPro
$LN18@OnEventPro:

; 9835 : 	{
; 9836 : 	case PROPERTY_ID_SCORE_CLEAR :			//负分清零
; 9837 : 		{
; 9838 : 			//变量定义
; 9839 : 			SCORE lCurrScore = pTargetUserItem->GetUserScore();

  0022d	8b 45 14	 mov	 eax, DWORD PTR _pTargetUserItem$[ebp]
  00230	8b 10		 mov	 edx, DWORD PTR [eax]
  00232	8b 4d 14	 mov	 ecx, DWORD PTR _pTargetUserItem$[ebp]
  00235	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  0023b	ff d0		 call	 eax
  0023d	89 45 dc	 mov	 DWORD PTR _lCurrScore$4[ebp], eax
  00240	89 55 e0	 mov	 DWORD PTR _lCurrScore$4[ebp+4], edx

; 9840 : 			if( lCurrScore >= 0)

  00243	83 7d e0 00	 cmp	 DWORD PTR _lCurrScore$4[ebp+4], 0
  00247	0f 8c 95 00 00
	00		 jl	 $LN19@OnEventPro
  0024d	7f 0a		 jg	 SHORT $LN27@OnEventPro
  0024f	83 7d dc 00	 cmp	 DWORD PTR _lCurrScore$4[ebp], 0
  00253	0f 82 89 00 00
	00		 jb	 $LN19@OnEventPro
$LN27@OnEventPro:

; 9841 : 			{
; 9842 : 				//变量定义
; 9843 : 				TCHAR szMessage[128]=TEXT("");

  00259	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0025e	88 85 5c ff ff
	ff		 mov	 BYTE PTR _szMessage$3[ebp], al
  00264	6a 7f		 push	 127			; 0000007fH
  00266	6a 00		 push	 0
  00268	8d 85 5d ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$3[ebp+1]
  0026e	50		 push	 eax
  0026f	e8 00 00 00 00	 call	 _memset
  00274	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9844 : 				if ( pISourceUserItem==pTargetUserItem ) 

  00277	8b 45 10	 mov	 eax, DWORD PTR _pISourceUserItem$[ebp]
  0027a	3b 45 14	 cmp	 eax, DWORD PTR _pTargetUserItem$[ebp]
  0027d	75 1b		 jne	 SHORT $LN20@OnEventPro

; 9845 : 					_sntprintf_s(szMessage,CountArray(szMessage),TEXT("您现在的积分已经是非负数，不需要使用负分清零道具！"));

  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@NEAJDNEE@?D?z?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC?$LL?P?h?R@
  00284	68 80 00 00 00	 push	 128			; 00000080H
  00289	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$3[ebp]
  0028f	50		 push	 eax
  00290	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00295	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9846 : 				else

  00298	eb 27		 jmp	 SHORT $LN21@OnEventPro
$LN20@OnEventPro:

; 9847 : 					_sntprintf_s(szMessage,CountArray(szMessage),TEXT("[ %s ]现在的积分已经是非负数，不需要使用负分清零道具！"), pTargetUserItem->GetNickName());

  0029a	8b 45 14	 mov	 eax, DWORD PTR _pTargetUserItem$[ebp]
  0029d	8b 10		 mov	 edx, DWORD PTR [eax]
  0029f	8b 4d 14	 mov	 ecx, DWORD PTR _pTargetUserItem$[ebp]
  002a2	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  002a5	ff d0		 call	 eax
  002a7	50		 push	 eax
  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@KNCICMPD@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?$LL?$PN?$LH?V?R?Q?$LO?$KN?J?G?$LH?G?$LI?$LK?J?$PN?$KD?$KM?$LC@
  002ad	68 80 00 00 00	 push	 128			; 00000080H
  002b2	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$3[ebp]
  002b8	51		 push	 ecx
  002b9	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  002be	83 c4 10	 add	 esp, 16			; 00000010H
$LN21@OnEventPro:

; 9848 : 
; 9849 : 				//发送消息
; 9850 : 				SendPropertyFailure(pISourceUserItem,szMessage, 0L,cbRequestArea);

  002c1	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  002c5	50		 push	 eax
  002c6	6a 00		 push	 0
  002c8	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$3[ebp]
  002ce	51		 push	 ecx
  002cf	8b 55 10	 mov	 edx, DWORD PTR _pISourceUserItem$[ebp]
  002d2	52		 push	 edx
  002d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d6	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9851 : 
; 9852 : 				return false;

  002db	32 c0		 xor	 al, al
  002dd	e9 b3 00 00 00	 jmp	 $LN1@OnEventPro
$LN19@OnEventPro:

; 9853 : 			}
; 9854 : 			break;

  002e2	e9 ac 00 00 00	 jmp	 $LN5@OnEventPro
$LN22@OnEventPro:

; 9855 : 		}
; 9856 : 	case PROPERTY_ID_ESCAPE_CLEAR :			 //逃跑清零
; 9857 : 		{
; 9858 : 			//变量定义
; 9859 : 			DWORD dwCurrFleeCount = pTargetUserItem->GetUserInfo()->dwFleeCount;

  002e7	8b 45 14	 mov	 eax, DWORD PTR _pTargetUserItem$[ebp]
  002ea	8b 10		 mov	 edx, DWORD PTR [eax]
  002ec	8b 4d 14	 mov	 ecx, DWORD PTR _pTargetUserItem$[ebp]
  002ef	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  002f2	ff d0		 call	 eax
  002f4	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  002fa	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _dwCurrFleeCount$2[ebp], ecx

; 9860 : 			if ( dwCurrFleeCount==0 )

  00300	83 bd 58 ff ff
	ff 00		 cmp	 DWORD PTR _dwCurrFleeCount$2[ebp], 0
  00307	0f 85 86 00 00
	00		 jne	 $LN5@OnEventPro

; 9861 : 			{
; 9862 : 				//变量定义
; 9863 : 				TCHAR szMessage[128]=TEXT("");		

  0030d	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00312	88 85 d8 fe ff
	ff		 mov	 BYTE PTR _szMessage$1[ebp], al
  00318	6a 7f		 push	 127			; 0000007fH
  0031a	6a 00		 push	 0
  0031c	8d 85 d9 fe ff
	ff		 lea	 eax, DWORD PTR _szMessage$1[ebp+1]
  00322	50		 push	 eax
  00323	e8 00 00 00 00	 call	 _memset
  00328	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9864 : 				if ( pISourceUserItem == pTargetUserItem ) 

  0032b	8b 45 10	 mov	 eax, DWORD PTR _pISourceUserItem$[ebp]
  0032e	3b 45 14	 cmp	 eax, DWORD PTR _pTargetUserItem$[ebp]
  00331	75 1b		 jne	 SHORT $LN24@OnEventPro

; 9865 : 					_sntprintf_s(szMessage,CountArray(szMessage),TEXT("您现在的逃跑率已经为0，不需要使用逃跑清零道具！"));

  00333	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@MICEKNAN@?D?z?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h?R?$KK?J?$LJ@
  00338	68 80 00 00 00	 push	 128			; 00000080H
  0033d	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _szMessage$1[ebp]
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00349	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9866 : 				else

  0034c	eb 27		 jmp	 SHORT $LN25@OnEventPro
$LN24@OnEventPro:

; 9867 : 					_sntprintf_s(szMessage,CountArray(szMessage),TEXT("[ %s ]现在的逃跑率已经为0，不需要使用逃跑清零道具！"), pTargetUserItem->GetNickName());

  0034e	8b 45 14	 mov	 eax, DWORD PTR _pTargetUserItem$[ebp]
  00351	8b 10		 mov	 edx, DWORD PTR [eax]
  00353	8b 4d 14	 mov	 ecx, DWORD PTR _pTargetUserItem$[ebp]
  00356	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00359	ff d0		 call	 eax
  0035b	50		 push	 eax
  0035c	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@EDOEDLLN@?$FL?5?$CFs?5?$FN?O?V?T?Z?$LF?D?L?S?E?$NM?B?J?R?Q?$LO?$KN?N?$KK0?$KD?$KM?$LC?$LL?P?h@
  00361	68 80 00 00 00	 push	 128			; 00000080H
  00366	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _szMessage$1[ebp]
  0036c	51		 push	 ecx
  0036d	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00372	83 c4 10	 add	 esp, 16			; 00000010H
$LN25@OnEventPro:

; 9868 : 
; 9869 : 				//发送消息
; 9870 : 				SendPropertyFailure(pISourceUserItem,szMessage,0L,cbRequestArea);

  00375	0f b7 45 08	 movzx	 eax, WORD PTR _cbRequestArea$[ebp]
  00379	50		 push	 eax
  0037a	6a 00		 push	 0
  0037c	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _szMessage$1[ebp]
  00382	51		 push	 ecx
  00383	8b 55 10	 mov	 edx, DWORD PTR _pISourceUserItem$[ebp]
  00386	52		 push	 edx
  00387	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0038a	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 9871 : 
; 9872 : 				return false;

  0038f	32 c0		 xor	 al, al
  00391	eb 02		 jmp	 SHORT $LN1@OnEventPro
$LN5@OnEventPro:

; 9873 : 			}
; 9874 : 			break;
; 9875 : 		}
; 9876 : 	}
; 9877 : 
; 9878 : 	return true;

  00393	b0 01		 mov	 al, 1
$LN1@OnEventPro:

; 9879 : }

  00395	5f		 pop	 edi
  00396	5e		 pop	 esi
  00397	5b		 pop	 ebx
  00398	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0039b	33 cd		 xor	 ecx, ebp
  0039d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a2	8b e5		 mov	 esp, ebp
  003a4	5d		 pop	 ebp
  003a5	c2 10 00	 ret	 16			; 00000010H
?OnEventPropertyBuyPrep@CAttemperEngineSink@@IAE_NGGPAUIServerUserItem@@0@Z ENDP ; CAttemperEngineSink::OnEventPropertyBuyPrep
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z
_TEXT	SEGMENT
tv139 = -16932						; size = 4
_wHeadSize$1 = -16416					; size = 2
_pITargetUserItem$2 = -16412				; size = 4
_wBindIndex$3 = -16408					; size = 2
_wHeadSize$4 = -16404					; size = 2
_SendPacket$ = -16400					; size = 8
_pUserInfoHead$ = -16392				; size = 4
_pUserInfo$ = -16388					; size = 4
_cbBuffer$ = -16384					; size = 16376
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_dwSocketID$ = 12					; size = 4
_bSendAndroidFalg$ = 16					; size = 1
?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z PROC ; CAttemperEngineSink::SendUserInfoPacket, COMDAT
; _this$ = ecx

; 9612 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 24 42 00 00	 mov	 eax, 16932		; 00004224H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9613 : 	//效验参数
; 9614 : 	ASSERT(pIServerUserItem!=NULL);

  0001d	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00021	75 18		 jne	 SHORT $LN8@SendUserIn
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z@4JA
  00028	83 c0 02	 add	 eax, 2
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN8@SendUserIn
  0003a	cc		 int	 3
$LN8@SendUserIn:

; 9615 : 	if (pIServerUserItem==NULL) return false;

  0003b	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003f	75 07		 jne	 SHORT $LN2@SendUserIn
  00041	32 c0		 xor	 al, al
  00043	e9 29 04 00 00	 jmp	 $LN1@SendUserIn
$LN2@SendUserIn:

; 9616 : 
; 9617 : 	//变量定义
; 9618 : 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 9619 : 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  00048	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00050	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00053	ff d0		 call	 eax
  00055	89 85 fc bf ff
	ff		 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 9620 : 	tagUserInfoHead * pUserInfoHead=(tagUserInfoHead *)cbBuffer;

  0005b	8d 85 00 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  00061	89 85 f8 bf ff
	ff		 mov	 DWORD PTR _pUserInfoHead$[ebp], eax

; 9621 : 	CSendPacketHelper SendPacket(cbBuffer+sizeof(tagUserInfoHead),sizeof(cbBuffer)-sizeof(tagUserInfoHead));

  00067	68 71 3f 00 00	 push	 16241			; 00003f71H
  0006c	8d 85 87 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp+135]
  00072	50		 push	 eax
  00073	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00079	e8 00 00 00 00	 call	 ??0CSendPacketHelper@@QAE@PAXG@Z ; CSendPacketHelper::CSendPacketHelper

; 9622 : 
; 9623 : 	//用户属性
; 9624 : 	pUserInfoHead->wFaceID=pUserInfo->wFaceID;

  0007e	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00084	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0008a	66 8b 91 88 00
	00 00		 mov	 dx, WORD PTR [ecx+136]
  00091	66 89 50 0c	 mov	 WORD PTR [eax+12], dx

; 9625 : 	pUserInfoHead->dwGameID=pUserInfo->dwGameID;

  00095	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0009b	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000a1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a4	89 10		 mov	 DWORD PTR [eax], edx

; 9626 : 	pUserInfoHead->dwUserID=pUserInfo->dwUserID;

  000a6	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000ac	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 9627 : 	pUserInfoHead->dwGroupID=pUserInfo->dwGroupID;

  000b7	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000bd	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000c3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000c6	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 9628 : 	pUserInfoHead->dwCustomID=pUserInfo->dwCustomID;

  000c9	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000cf	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000d5	8b 91 8a 00 00
	00		 mov	 edx, DWORD PTR [ecx+138]
  000db	89 50 0e	 mov	 DWORD PTR [eax+14], edx

; 9629 : 	pUserInfoHead->dwAgentID=pUserInfo->dwAgentID;

  000de	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000e4	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  000ea	8b 91 fc 00 00
	00		 mov	 edx, DWORD PTR [ecx+252]
  000f0	89 90 83 00 00
	00		 mov	 DWORD PTR [eax+131], edx

; 9630 : 
; 9631 : 	//用户属性	
; 9632 : 	pUserInfoHead->cbGender=pUserInfo->cbGender;

  000f6	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  000fc	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00102	8a 91 8e 00 00
	00		 mov	 dl, BYTE PTR [ecx+142]
  00108	88 50 13	 mov	 BYTE PTR [eax+19], dl

; 9633 : 	pUserInfoHead->cbMemberOrder=pUserInfo->cbMemberOrder;

  0010b	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00111	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00117	8a 91 8f 00 00
	00		 mov	 dl, BYTE PTR [ecx+143]
  0011d	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 9634 : 	pUserInfoHead->cbMasterOrder=pUserInfo->cbMasterOrder;

  00120	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00126	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0012c	8a 91 90 00 00
	00		 mov	 dl, BYTE PTR [ecx+144]
  00132	88 50 15	 mov	 BYTE PTR [eax+21], dl

; 9635 : 	pUserInfoHead->bIsAndroid=pIServerUserItem->IsAndroidUser()&&bSendAndroidFalg;

  00135	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00138	8b 10		 mov	 edx, DWORD PTR [eax]
  0013a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0013d	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00143	ff d0		 call	 eax
  00145	0f b6 c8	 movzx	 ecx, al
  00148	85 c9		 test	 ecx, ecx
  0014a	74 14		 je	 SHORT $LN9@SendUserIn
  0014c	0f b6 55 10	 movzx	 edx, BYTE PTR _bSendAndroidFalg$[ebp]
  00150	85 d2		 test	 edx, edx
  00152	74 0c		 je	 SHORT $LN9@SendUserIn
  00154	c7 85 dc bd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv139[ebp], 1
  0015e	eb 0a		 jmp	 SHORT $LN10@SendUserIn
$LN9@SendUserIn:
  00160	c7 85 dc bd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv139[ebp], 0
$LN10@SendUserIn:
  0016a	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00170	8a 8d dc bd ff
	ff		 mov	 cl, BYTE PTR tv139[ebp]
  00176	88 48 12	 mov	 BYTE PTR [eax+18], cl

; 9636 : 
; 9637 : 	//用户状态
; 9638 : 	pUserInfoHead->wTableID=pUserInfo->wTableID;

  00179	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0017f	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00185	66 8b 91 91 00
	00 00		 mov	 dx, WORD PTR [ecx+145]
  0018c	66 89 50 16	 mov	 WORD PTR [eax+22], dx

; 9639 : 	pUserInfoHead->wChairID=pUserInfo->wChairID;

  00190	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00196	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0019c	66 8b 91 95 00
	00 00		 mov	 dx, WORD PTR [ecx+149]
  001a3	66 89 50 18	 mov	 WORD PTR [eax+24], dx

; 9640 : 	pUserInfoHead->cbUserStatus=pUserInfo->cbUserStatus;

  001a7	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001ad	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001b3	8a 91 97 00 00
	00		 mov	 dl, BYTE PTR [ecx+151]
  001b9	88 50 1a	 mov	 BYTE PTR [eax+26], dl

; 9641 : 
; 9642 : 	//用户局数
; 9643 : 	pUserInfoHead->dwWinCount=pUserInfo->dwWinCount;

  001bc	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001c2	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001c8	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  001ce	89 50 63	 mov	 DWORD PTR [eax+99], edx

; 9644 : 	pUserInfoHead->dwLostCount=pUserInfo->dwLostCount;

  001d1	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001d7	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001dd	8b 91 dc 00 00
	00		 mov	 edx, DWORD PTR [ecx+220]
  001e3	89 50 67	 mov	 DWORD PTR [eax+103], edx

; 9645 : 	pUserInfoHead->dwDrawCount=pUserInfo->dwDrawCount;

  001e6	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  001ec	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  001f2	8b 91 e0 00 00
	00		 mov	 edx, DWORD PTR [ecx+224]
  001f8	89 50 6b	 mov	 DWORD PTR [eax+107], edx

; 9646 : 	pUserInfoHead->dwFleeCount=pUserInfo->dwFleeCount;

  001fb	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00201	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00207	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  0020d	89 50 6f	 mov	 DWORD PTR [eax+111], edx

; 9647 : 	pUserInfoHead->dwExperience=pUserInfo->dwExperience;

  00210	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00216	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  0021c	8b 91 ec 00 00
	00		 mov	 edx, DWORD PTR [ecx+236]
  00222	89 50 73	 mov	 DWORD PTR [eax+115], edx

; 9648 : 	pUserInfoHead->lLoveLiness=pUserInfo->lLoveLiness;

  00225	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  0022b	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00231	8b 91 f0 00 00
	00		 mov	 edx, DWORD PTR [ecx+240]
  00237	89 50 77	 mov	 DWORD PTR [eax+119], edx

; 9649 : 	pUserInfoHead->lIntegralCount=pUserInfo->lIntegralCount;

  0023a	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$[ebp]
  00240	8b 8d fc bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$[ebp]
  00246	8b 91 f4 00 00
	00		 mov	 edx, DWORD PTR [ecx+244]
  0024c	89 50 7b	 mov	 DWORD PTR [eax+123], edx
  0024f	8b 89 f8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+248]
  00255	89 48 7f	 mov	 DWORD PTR [eax+127], ecx

; 9650 : 
; 9651 : 	//用户积分
; 9652 : 	/*pUserInfoHead->lGrade=pUserInfo->lGrade;
; 9653 : 	pUserInfoHead->lInsure=pUserInfo->lInsure;
; 9654 : 	pUserInfoHead->lIngot=pUserInfo->lIngot;
; 9655 : 	pUserInfoHead->dBeans = pUserInfo->dBeans;
; 9656 : 	pUserInfoHead->lScore=pUserInfo->lScore;*/
; 9657 : 	pUserInfoHead->bConsumptionType = pUserInfo->bConsumptionType;

  00258	8b b5 fc bf ff
	ff		 mov	 esi, DWORD PTR _pUserInfo$[ebp]
  0025e	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  00264	8b bd f8 bf ff
	ff		 mov	 edi, DWORD PTR _pUserInfoHead$[ebp]
  0026a	83 c7 1b	 add	 edi, 27			; 0000001bH
  0026d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00272	f3 a5		 rep movsd

; 9658 : 
; 9659 : 	pUserInfoHead->bConsumptionType.lScore += pIServerUserItem->GetTrusteeScore();

  00274	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00277	8b 10		 mov	 edx, DWORD PTR [eax]
  00279	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0027c	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00282	ff d0		 call	 eax
  00284	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  0028a	03 41 2b	 add	 eax, DWORD PTR [ecx+43]
  0028d	13 51 2f	 adc	 edx, DWORD PTR [ecx+47]
  00290	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  00296	89 41 2b	 mov	 DWORD PTR [ecx+43], eax
  00299	89 51 2f	 mov	 DWORD PTR [ecx+47], edx

; 9660 : 	pUserInfoHead->bConsumptionType.lScore += pIServerUserItem->GetFrozenedScore();

  0029c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0029f	8b 10		 mov	 edx, DWORD PTR [eax]
  002a1	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002a4	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  002aa	ff d0		 call	 eax
  002ac	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  002b2	03 41 2b	 add	 eax, DWORD PTR [ecx+43]
  002b5	13 51 2f	 adc	 edx, DWORD PTR [ecx+47]
  002b8	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  002be	89 41 2b	 mov	 DWORD PTR [ecx+43], eax
  002c1	89 51 2f	 mov	 DWORD PTR [ecx+47], edx

; 9661 : 	pUserInfoHead->lFirstScore = pIServerUserItem->GetFormerScore()->bConsumptionType.lScore;

  002c4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002c7	8b 10		 mov	 edx, DWORD PTR [eax]
  002c9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002cc	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002cf	ff d0		 call	 eax
  002d1	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$[ebp]
  002d7	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  002da	89 51 5b	 mov	 DWORD PTR [ecx+91], edx
  002dd	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  002e0	89 41 5f	 mov	 DWORD PTR [ecx+95], eax

; 9662 : 
; 9663 : 	//叠加信息
; 9664 : 	SendPacket.AddPacket(pUserInfo->szNickName,DTP_GR_NICK_NAME);

  002e3	6a 0a		 push	 10			; 0000000aH
  002e5	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  002eb	83 c0 0c	 add	 eax, 12			; 0000000cH
  002ee	50		 push	 eax
  002ef	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  002f5	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 9665 : 	SendPacket.AddPacket(pUserInfo->szGroupName,DTP_GR_GROUP_NAME);

  002fa	6a 0b		 push	 11			; 0000000bH
  002fc	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00302	83 c0 2c	 add	 eax, 44			; 0000002cH
  00305	50		 push	 eax
  00306	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  0030c	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 9666 : 	SendPacket.AddPacket(pUserInfo->szUnderWrite,DTP_GR_UNDER_WRITE);

  00311	6a 0c		 push	 12			; 0000000cH
  00313	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00319	83 c0 4c	 add	 eax, 76			; 0000004cH
  0031c	50		 push	 eax
  0031d	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00323	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 9667 : 	SendPacket.AddPacket(pUserInfo->szQQ,DTP_GR_QQ);

  00328	6a 0d		 push	 13			; 0000000dH
  0032a	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00330	83 c0 6c	 add	 eax, 108		; 0000006cH
  00333	50		 push	 eax
  00334	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  0033a	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 9668 : 	SendPacket.AddPacket(pUserInfo->szMobilePhone,DTP_GR_MOBILE_PHONE);

  0033f	6a 0e		 push	 14			; 0000000eH
  00341	8b 85 fc bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00347	83 c0 7c	 add	 eax, 124		; 0000007cH
  0034a	50		 push	 eax
  0034b	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00351	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 9669 : 
; 9670 : 	//发送数据
; 9671 : 	if (dwSocketID==INVALID_DWORD)

  00356	83 7d 0c ff	 cmp	 DWORD PTR _dwSocketID$[ebp], -1
  0035a	75 55		 jne	 SHORT $LN3@SendUserIn

; 9672 : 	{
; 9673 : 		WORD wHeadSize=sizeof(tagUserInfoHead);

  0035c	b8 87 00 00 00	 mov	 eax, 135		; 00000087H
  00361	66 89 85 ec bf
	ff ff		 mov	 WORD PTR _wHeadSize$4[ebp], ax

; 9674 : 		SendData(BG_COMPUTER,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  00368	0f b7 b5 ec bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$4[ebp]
  0036f	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00375	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  0037a	0f b7 c0	 movzx	 eax, ax
  0037d	03 f0		 add	 esi, eax
  0037f	56		 push	 esi
  00380	8d 8d 00 c0 ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00386	51		 push	 ecx
  00387	6a 64		 push	 100			; 00000064H
  00389	6a 03		 push	 3
  0038b	6a 02		 push	 2
  0038d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00390	83 c1 04	 add	 ecx, 4
  00393	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00396	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00399	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0039c	ff d2		 call	 edx

; 9675 : 		SendUserInfoPacketBatchToMobileUser(pIServerUserItem,INVALID_DWORD);

  0039e	6a ff		 push	 -1
  003a0	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003a3	50		 push	 eax
  003a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a7	e8 00 00 00 00	 call	 ?SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z ; CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser

; 9676 : 	}
; 9677 : 	else

  003ac	e9 be 00 00 00	 jmp	 $LN4@SendUserIn
$LN3@SendUserIn:

; 9678 : 	{
; 9679 : 		//获取用户
; 9680 : 		WORD wBindIndex=LOWORD(dwSocketID);

  003b1	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  003b4	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  003b9	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _wBindIndex$3[ebp], ax

; 9681 : 		IServerUserItem * pITargetUserItem=GetBindUserItem(wBindIndex);

  003c0	0f b7 85 e8 bf
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  003c7	50		 push	 eax
  003c8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  003cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003d0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  003d3	ff d0		 call	 eax
  003d5	89 85 e4 bf ff
	ff		 mov	 DWORD PTR _pITargetUserItem$2[ebp], eax

; 9682 : 		ASSERT(pITargetUserItem!=NULL);

  003db	83 bd e4 bf ff
	ff 00		 cmp	 DWORD PTR _pITargetUserItem$2[ebp], 0
  003e2	75 18		 jne	 SHORT $LN11@SendUserIn
  003e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z@4JA
  003e9	83 c0 46	 add	 eax, 70			; 00000046H
  003ec	50		 push	 eax
  003ed	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  003f2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003f7	85 c0		 test	 eax, eax
  003f9	74 01		 je	 SHORT $LN11@SendUserIn
  003fb	cc		 int	 3
$LN11@SendUserIn:

; 9683 : 
; 9684 : 		if (pITargetUserItem->IsMobileUser()==false)

  003fc	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pITargetUserItem$2[ebp]
  00402	8b 10		 mov	 edx, DWORD PTR [eax]
  00404	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pITargetUserItem$2[ebp]
  0040a	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  00410	ff d0		 call	 eax
  00412	0f b6 c8	 movzx	 ecx, al
  00415	85 c9		 test	 ecx, ecx
  00417	75 46		 jne	 SHORT $LN5@SendUserIn

; 9685 : 		{
; 9686 : 			WORD wHeadSize=sizeof(tagUserInfoHead);

  00419	b8 87 00 00 00	 mov	 eax, 135		; 00000087H
  0041e	66 89 85 e0 bf
	ff ff		 mov	 WORD PTR _wHeadSize$1[ebp], ax

; 9687 : 			SendData(dwSocketID,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  00425	0f b7 b5 e0 bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$1[ebp]
  0042c	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$[ebp]
  00432	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  00437	0f b7 c0	 movzx	 eax, ax
  0043a	03 f0		 add	 esi, eax
  0043c	56		 push	 esi
  0043d	8d 8d 00 c0 ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00443	51		 push	 ecx
  00444	6a 64		 push	 100			; 00000064H
  00446	6a 03		 push	 3
  00448	8b 55 0c	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0044b	52		 push	 edx
  0044c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0044f	83 c1 04	 add	 ecx, 4
  00452	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00455	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00458	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0045b	ff d0		 call	 eax

; 9688 : 		}
; 9689 : 		else

  0045d	eb 10		 jmp	 SHORT $LN4@SendUserIn
$LN5@SendUserIn:

; 9690 : 		{
; 9691 : 			SendUserInfoPacketBatchToMobileUser(pIServerUserItem,dwSocketID);

  0045f	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00462	50		 push	 eax
  00463	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00466	51		 push	 ecx
  00467	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0046a	e8 00 00 00 00	 call	 ?SendUserInfoPacketBatchToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K@Z ; CAttemperEngineSink::SendUserInfoPacketBatchToMobileUser
$LN4@SendUserIn:

; 9692 : 		}
; 9693 : 	}
; 9694 : 
; 9695 : 	return true;

  0046f	b0 01		 mov	 al, 1
$LN1@SendUserIn:

; 9696 : }

  00471	5f		 pop	 edi
  00472	5e		 pop	 esi
  00473	5b		 pop	 ebx
  00474	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00477	33 cd		 xor	 ecx, ebp
  00479	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0047e	8b e5		 mov	 esp, ebp
  00480	5d		 pop	 ebp
  00481	c2 0c 00	 ret	 12			; 0000000cH
?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ENDP ; CAttemperEngineSink::SendUserInfoPacket
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z
_TEXT	SEGMENT
tv138 = -160						; size = 4
tv88 = -160						; size = 4
_wDataSize$1 = -92					; size = 2
_wHeadSize$2 = -88					; size = 2
_TaskFinish$3 = -84					; size = 66
_dwSpanSecond$ = -16					; size = 4
_pTaskParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pUserTaskEntry$ = 12					; size = 4
_iRoom$ = 16						; size = 4
_iRoomNum$ = 20						; size = 4
_iPlayCount$ = 24					; size = 4
?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z PROC ; CAttemperEngineSink::PerformRoomTaskProgress, COMDAT
; _this$ = ecx

; 9277 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9278 : 	//参数校验
; 9279 : 	ASSERT(pIServerUserItem!=NULL && pUserTaskEntry!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	74 06		 je	 SHORT $LN21@PerformRoo
  0001f	83 7d 0c 00	 cmp	 DWORD PTR _pUserTaskEntry$[ebp], 0
  00023	75 18		 jne	 SHORT $LN22@PerformRoo
$LN21@PerformRoo:
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z@4JA
  0002a	83 c0 02	 add	 eax, 2
  0002d	50		 push	 eax
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN22@PerformRoo
  0003c	cc		 int	 3
$LN22@PerformRoo:

; 9280 : 	if(pIServerUserItem==NULL || pUserTaskEntry==NULL) return false;

  0003d	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00041	74 06		 je	 SHORT $LN5@PerformRoo
  00043	83 7d 0c 00	 cmp	 DWORD PTR _pUserTaskEntry$[ebp], 0
  00047	75 07		 jne	 SHORT $LN4@PerformRoo
$LN5@PerformRoo:
  00049	32 c0		 xor	 al, al
  0004b	e9 26 02 00 00	 jmp	 $LN1@PerformRoo
$LN4@PerformRoo:

; 9281 : 
; 9282 : 	//状态校验
; 9283 : 	if(pUserTaskEntry->pTaskParameter==NULL) return true;

  00050	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00053	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00057	75 07		 jne	 SHORT $LN6@PerformRoo
  00059	b0 01		 mov	 al, 1
  0005b	e9 16 02 00 00	 jmp	 $LN1@PerformRoo
$LN6@PerformRoo:

; 9284 : 	if(pUserTaskEntry->cbTaskStatus!=TASK_STATUS_UNFINISH) return true;

  00060	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00063	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00066	85 c9		 test	 ecx, ecx
  00068	74 07		 je	 SHORT $LN7@PerformRoo
  0006a	b0 01		 mov	 al, 1
  0006c	e9 05 02 00 00	 jmp	 $LN1@PerformRoo
$LN7@PerformRoo:

; 9285 : 	
; 9286 : 	//任务参数
; 9287 : 	tagTaskParameter * pTaskParameter = pUserTaskEntry->pTaskParameter;

  00071	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00074	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00077	89 4d f4	 mov	 DWORD PTR _pTaskParameter$[ebp], ecx

; 9288 : 
; 9289 : 	//获取时间
; 9290 : 	DWORD dwSpanSecond=(DWORD)time(NULL)-pUserTaskEntry->dwLastUpdateTime;

  0007a	6a 00		 push	 0
  0007c	e8 00 00 00 00	 call	 _time
  00081	83 c4 04	 add	 esp, 4
  00084	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00087	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0008a	89 45 f0	 mov	 DWORD PTR _dwSpanSecond$[ebp], eax

; 9291 : 	dwSpanSecond=__min(dwSpanSecond,pUserTaskEntry->dwResidueTime);

  0008d	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00090	8b 4d f0	 mov	 ecx, DWORD PTR _dwSpanSecond$[ebp]
  00093	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00096	73 0b		 jae	 SHORT $LN23@PerformRoo
  00098	8b 55 f0	 mov	 edx, DWORD PTR _dwSpanSecond$[ebp]
  0009b	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv88[ebp], edx
  000a1	eb 0c		 jmp	 SHORT $LN24@PerformRoo
$LN23@PerformRoo:
  000a3	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000a6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a9	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv88[ebp], ecx
$LN24@PerformRoo:
  000af	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv88[ebp]
  000b5	89 55 f0	 mov	 DWORD PTR _dwSpanSecond$[ebp], edx

; 9292 : 
; 9293 : 	//更新时间	
; 9294 : 	pUserTaskEntry->dwResidueTime-=dwSpanSecond;

  000b8	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000be	2b 4d f0	 sub	 ecx, DWORD PTR _dwSpanSecond$[ebp]
  000c1	8b 55 0c	 mov	 edx, DWORD PTR _pUserTaskEntry$[ebp]
  000c4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 9295 : 	pUserTaskEntry->dwLastUpdateTime=(DWORD)time(NULL);

  000c7	6a 00		 push	 0
  000c9	e8 00 00 00 00	 call	 _time
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  000d4	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 9296 : 
; 9297 : 	//任务超时
; 9298 : 	if(pUserTaskEntry->dwResidueTime == 0)

  000d7	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000da	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000de	75 19		 jne	 SHORT $LN8@PerformRoo

; 9299 : 	{		
; 9300 : 		pUserTaskEntry->wTaskProgress=0;

  000e0	33 c0		 xor	 eax, eax
  000e2	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  000e5	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 9301 : 		pUserTaskEntry->pTaskParameter=NULL;		

  000e9	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000ec	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 9302 : 		pUserTaskEntry->cbTaskStatus=TASK_STATUS_FAILED;		

  000f3	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000f6	c6 00 02	 mov	 BYTE PTR [eax], 2
$LN8@PerformRoo:

; 9303 : 	}
; 9304 : 
; 9305 : 	//任务未完成
; 9306 : 	if(pUserTaskEntry->cbTaskStatus==TASK_STATUS_UNFINISH)

  000f9	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000fc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000ff	85 c9		 test	 ecx, ecx
  00101	0f 85 dc 00 00
	00		 jne	 $LN9@PerformRoo

; 9307 : 	{
; 9308 : 		//任务类型
; 9309 : 		switch(pTaskParameter->wTaskType)

  00107	8b 45 f4	 mov	 eax, DWORD PTR _pTaskParameter$[ebp]
  0010a	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0010e	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  00114	81 bd 60 ff ff
	ff 00 01 00 00	 cmp	 DWORD PTR tv138[ebp], 256 ; 00000100H
  0011e	74 1d		 je	 SHORT $LN10@PerformRoo
  00120	81 bd 60 ff ff
	ff 01 01 00 00	 cmp	 DWORD PTR tv138[ebp], 257 ; 00000101H
  0012a	74 3f		 je	 SHORT $LN12@PerformRoo
  0012c	81 bd 60 ff ff
	ff 02 01 00 00	 cmp	 DWORD PTR tv138[ebp], 258 ; 00000102H
  00136	74 61		 je	 SHORT $LN14@PerformRoo
  00138	e9 89 00 00 00	 jmp	 $LN17@PerformRoo
$LN10@PerformRoo:

; 9310 : 		{
; 9311 : 		case TASK_TYPE_CREATE_ROOM:			//创建房间
; 9312 : 			{
; 9313 : 				//更新状态
; 9314 : 				pUserTaskEntry->wTaskProgress += (WORD)iRoom;

  0013d	0f b7 45 10	 movzx	 eax, WORD PTR _iRoom$[ebp]
  00141	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00144	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00148	03 d0		 add	 edx, eax
  0014a	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0014d	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 9315 : 				if(pUserTaskEntry->wTaskProgress>=pTaskParameter->wTaskObject)

  00151	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00154	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00158	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  0015b	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  0015f	3b c8		 cmp	 ecx, eax
  00161	7c 06		 jl	 SHORT $LN11@PerformRoo

; 9316 : 				{
; 9317 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  00163	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00166	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN11@PerformRoo:

; 9318 : 				}
; 9319 : 
; 9320 : 				break;

  00169	eb 78		 jmp	 SHORT $LN9@PerformRoo
$LN12@PerformRoo:

; 9321 : 			};
; 9322 : 		case TASK_TYPE_CONSUME_ROOM:			//消耗房卡
; 9323 : 			{
; 9324 : 				//更新状态
; 9325 : 				pUserTaskEntry->wTaskProgress += (WORD)iRoomNum;

  0016b	0f b7 45 14	 movzx	 eax, WORD PTR _iRoomNum$[ebp]
  0016f	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00172	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00176	03 d0		 add	 edx, eax
  00178	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0017b	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 9326 : 				if(pUserTaskEntry->wTaskProgress>=pTaskParameter->wTaskObject)

  0017f	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00182	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00186	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  00189	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  0018d	3b c8		 cmp	 ecx, eax
  0018f	7c 06		 jl	 SHORT $LN13@PerformRoo

; 9327 : 				{
; 9328 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  00191	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00194	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN13@PerformRoo:

; 9329 : 				}
; 9330 : 				break;

  00197	eb 4a		 jmp	 SHORT $LN9@PerformRoo
$LN14@PerformRoo:

; 9331 : 			};
; 9332 : 		case TASK_TYPE_PLAY_INNINGS:			//约战局数
; 9333 : 			{
; 9334 : 				//更新状态
; 9335 : 				pUserTaskEntry->wTaskProgress = (WORD)iPlayCount;

  00199	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0019c	66 8b 4d 18	 mov	 cx, WORD PTR _iPlayCount$[ebp]
  001a0	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 9336 : 				if(pUserTaskEntry->wTaskProgress==pTaskParameter->wTaskObject)

  001a4	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001a7	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  001ab	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  001ae	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  001b2	3b c8		 cmp	 ecx, eax
  001b4	75 08		 jne	 SHORT $LN15@PerformRoo

; 9337 : 				{
; 9338 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  001b6	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001b9	c6 00 01	 mov	 BYTE PTR [eax], 1

; 9339 : 				}
; 9340 : 				else

  001bc	eb 06		 jmp	 SHORT $LN16@PerformRoo
$LN15@PerformRoo:

; 9341 : 				{
; 9342 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_FAILED;

  001be	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001c1	c6 00 02	 mov	 BYTE PTR [eax], 2
$LN16@PerformRoo:

; 9343 : 				}
; 9344 : 
; 9345 : 				break;

  001c4	eb 1d		 jmp	 SHORT $LN9@PerformRoo
$LN17@PerformRoo:

; 9346 : 			};		
; 9347 : 		default:
; 9348 : 			{
; 9349 : 				ASSERT(FALSE);

  001c6	33 c0		 xor	 eax, eax
  001c8	75 19		 jne	 SHORT $LN9@PerformRoo
  001ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z@4JA
  001d0	83 c1 48	 add	 ecx, 72			; 00000048H
  001d3	51		 push	 ecx
  001d4	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  001d9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001de	85 c0		 test	 eax, eax
  001e0	74 01		 je	 SHORT $LN9@PerformRoo
  001e2	cc		 int	 3
$LN9@PerformRoo:

; 9350 : 				break;
; 9351 : 			};
; 9352 : 		}
; 9353 : 	}
; 9354 : 
; 9355 : 	//任务完成
; 9356 : 	if(pUserTaskEntry->cbTaskStatus==TASK_STATUS_SUCCESS)

  001e3	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001e6	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001e9	83 f9 01	 cmp	 ecx, 1
  001ec	75 5e		 jne	 SHORT $LN18@PerformRoo

; 9357 : 	{
; 9358 : 		//构造结构
; 9359 : 		CMD_GR_S_TaskFinish TaskFinish;
; 9360 : 		TaskFinish.wFinishTaskID=pTaskParameter->wTaskID;

  001ee	8b 45 f4	 mov	 eax, DWORD PTR _pTaskParameter$[ebp]
  001f1	66 8b 08	 mov	 cx, WORD PTR [eax]
  001f4	66 89 4d ac	 mov	 WORD PTR _TaskFinish$3[ebp], cx

; 9361 : 		lstrcpyn(TaskFinish.szTaskName,pTaskParameter->szTaskName,CountArray(TaskFinish.szTaskName));

  001f8	6a 40		 push	 64			; 00000040H
  001fa	8b 45 f4	 mov	 eax, DWORD PTR _pTaskParameter$[ebp]
  001fd	83 c0 2d	 add	 eax, 45			; 0000002dH
  00200	50		 push	 eax
  00201	8d 4d ae	 lea	 ecx, DWORD PTR _TaskFinish$3[ebp+2]
  00204	51		 push	 ecx
  00205	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9362 : 
; 9363 : 		//发送消息
; 9364 : 		WORD wHeadSize = sizeof(TaskFinish)-sizeof(TaskFinish.szTaskName);

  0020b	b8 02 00 00 00	 mov	 eax, 2
  00210	66 89 45 a8	 mov	 WORD PTR _wHeadSize$2[ebp], ax

; 9365 : 		WORD wDataSize = wHeadSize + CountStringBuffer(TaskFinish.szTaskName);

  00214	0f b7 75 a8	 movzx	 esi, WORD PTR _wHeadSize$2[ebp]
  00218	8d 45 ae	 lea	 eax, DWORD PTR _TaskFinish$3[ebp+2]
  0021b	50		 push	 eax
  0021c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00222	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  00226	66 89 4d a4	 mov	 WORD PTR _wDataSize$1[ebp], cx

; 9366 : 		SendData(pIServerUserItem,MDM_GR_TASK,SUB_GR_TASK_FINISH,&TaskFinish,wDataSize);

  0022a	0f b7 45 a4	 movzx	 eax, WORD PTR _wDataSize$1[ebp]
  0022e	50		 push	 eax
  0022f	8d 4d ac	 lea	 ecx, DWORD PTR _TaskFinish$3[ebp]
  00232	51		 push	 ecx
  00233	6a 0c		 push	 12			; 0000000cH
  00235	6a 06		 push	 6
  00237	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0023a	52		 push	 edx
  0023b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023e	83 c1 04	 add	 ecx, 4
  00241	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00244	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00247	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0024a	ff d0		 call	 eax
$LN18@PerformRoo:

; 9367 : 	}
; 9368 : 
; 9369 : 	//递归调用
; 9370 : 	if(pUserTaskEntry->pNextTaskEntry!=NULL)

  0024c	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0024f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00253	74 1f		 je	 SHORT $LN19@PerformRoo

; 9371 : 	{
; 9372 : 		PerformRoomTaskProgress(pIServerUserItem,pUserTaskEntry->pNextStatusEntry,iRoom,iRoomNum,iPlayCount);

  00255	8b 45 18	 mov	 eax, DWORD PTR _iPlayCount$[ebp]
  00258	50		 push	 eax
  00259	8b 4d 14	 mov	 ecx, DWORD PTR _iRoomNum$[ebp]
  0025c	51		 push	 ecx
  0025d	8b 55 10	 mov	 edx, DWORD PTR _iRoom$[ebp]
  00260	52		 push	 edx
  00261	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00264	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00267	51		 push	 ecx
  00268	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0026b	52		 push	 edx
  0026c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026f	e8 00 00 00 00	 call	 ?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z ; CAttemperEngineSink::PerformRoomTaskProgress
$LN19@PerformRoo:

; 9373 : 	}
; 9374 : 
; 9375 : 	return true;

  00274	b0 01		 mov	 al, 1
$LN1@PerformRoo:

; 9376 : }

  00276	5f		 pop	 edi
  00277	5e		 pop	 esi
  00278	5b		 pop	 ebx
  00279	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0027c	33 cd		 xor	 ecx, ebp
  0027e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00283	8b e5		 mov	 esp, ebp
  00285	5d		 pop	 ebp
  00286	c2 14 00	 ret	 20			; 00000014H
?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@HHH@Z ENDP ; CAttemperEngineSink::PerformRoomTaskProgress
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_iRoom$ = 12						; size = 4
_iRoomNum$ = 16						; size = 4
_iPlayCount$ = 20					; size = 4
?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z PROC ; CAttemperEngineSink::PerformRoomTaskProgress, COMDAT
; _this$ = ecx

; 9264 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9265 : 	//查找任务
; 9266 : 	//tagUserTaskEntry * pUserTaskEntry=m_UserTaskManager.GetUserTaskEntry(pIServerUserItem->GetUserID(),TASK_STATUS_UNFINISH); 
; 9267 : 	//	//推进任务
; 9268 : 	//if(pUserTaskEntry!=NULL)
; 9269 : 	//{
; 9270 : 	//	PerformRoomTaskProgress(pIServerUserItem,pUserTaskEntry,iRoom,iRoomNum,iPlayCount);
; 9271 : 	//}
; 9272 : 	
; 9273 : 	return true;

  0000c	b0 01		 mov	 al, 1

; 9274 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z ENDP ; CAttemperEngineSink::PerformRoomTaskProgress
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z
_TEXT	SEGMENT
tv186 = -112						; size = 4
tv182 = -112						; size = 4
_pTableFrame$1 = -44					; size = 4
_wChairID$2 = -40					; size = 2
_wTableID$3 = -36					; size = 2
_bIsOffLine$ = -29					; size = 1
_pTargetParameter$ = -28				; size = 4
_bAndroidUser$ = -22					; size = 1
_bSameMachineID$ = -21					; size = 1
_pszMachineID$ = -20					; size = 4
_pSourceParameter$4 = -16				; size = 4
_wSourceIndex$5 = -12					; size = 2
_pszMessage$6 = -8					; size = 4
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_szMachineID$ = 12					; size = 4
_wTargetIndex$ = 16					; size = 2
_cbDeviceType$ = 20					; size = 1
_wBehaviorFlags$ = 24					; size = 2
_wPageTableCount$ = 28					; size = 2
?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z PROC ; CAttemperEngineSink::SwitchUserItemConnect, COMDAT
; _this$ = ecx

; 9431 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9432 : 	//效验参数
; 9433 : 	ASSERT((pIServerUserItem!=NULL)&&(wTargetIndex!=INVALID_WORD));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	74 0b		 je	 SHORT $LN18@SwitchUser
  00012	0f b7 45 10	 movzx	 eax, WORD PTR _wTargetIndex$[ebp]
  00016	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0001b	75 19		 jne	 SHORT $LN19@SwitchUser
$LN18@SwitchUser:
  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z@4JA
  00023	83 c1 02	 add	 ecx, 2
  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00031	85 c0		 test	 eax, eax
  00033	74 01		 je	 SHORT $LN19@SwitchUser
  00035	cc		 int	 3
$LN19@SwitchUser:

; 9434 : 	if ((pIServerUserItem==NULL)||(wTargetIndex==INVALID_WORD)) return false;

  00036	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003a	74 0b		 je	 SHORT $LN3@SwitchUser
  0003c	0f b7 45 10	 movzx	 eax, WORD PTR _wTargetIndex$[ebp]
  00040	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00045	75 07		 jne	 SHORT $LN2@SwitchUser
$LN3@SwitchUser:
  00047	32 c0		 xor	 al, al
  00049	e9 52 03 00 00	 jmp	 $LN1@SwitchUser
$LN2@SwitchUser:

; 9435 : 
; 9436 : 	//断开用户
; 9437 : 	if (pIServerUserItem->GetBindIndex()!=INVALID_WORD)

  0004e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00051	8b 10		 mov	 edx, DWORD PTR [eax]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00056	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00059	ff d0		 call	 eax
  0005b	0f b7 c8	 movzx	 ecx, ax
  0005e	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00064	0f 84 e8 00 00
	00		 je	 $LN4@SwitchUser

; 9438 : 	{
; 9439 : 		//发送通知
; 9440 : 		LPCTSTR pszMessage=TEXT("请注意，您的帐号在另一地方进入了此游戏房间，您被迫离开！");

  0006a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pszMessage$6[ebp], OFFSET ??_C@_0DJ@GOKIFCOM@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@

; 9441 : 		SendRoomMessage(pIServerUserItem,pszMessage,SMT_CHAT|SMT_EJECT|SMT_GLOBAL|SMT_CLOSE_ROOM);

  00071	68 07 01 00 00	 push	 263			; 00000107H
  00076	8b 45 f8	 mov	 eax, DWORD PTR _pszMessage$6[ebp]
  00079	50		 push	 eax
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	83 c1 04	 add	 ecx, 4
  00084	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00087	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0008a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0008d	ff d2		 call	 edx

; 9442 : 
; 9443 : 		//绑定参数
; 9444 : 		WORD wSourceIndex=pIServerUserItem->GetBindIndex();

  0008f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00092	8b 10		 mov	 edx, DWORD PTR [eax]
  00094	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00097	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009a	ff d0		 call	 eax
  0009c	66 89 45 f4	 mov	 WORD PTR _wSourceIndex$5[ebp], ax

; 9445 : 		tagBindParameter * pSourceParameter=GetBindParameter(wSourceIndex);

  000a0	0f b7 45 f4	 movzx	 eax, WORD PTR _wSourceIndex$5[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000b0	ff d0		 call	 eax
  000b2	89 45 f0	 mov	 DWORD PTR _pSourceParameter$4[ebp], eax

; 9446 : 
; 9447 : 		//解除绑定
; 9448 : 		ASSERT((pSourceParameter!=NULL)&&(pSourceParameter->pIServerUserItem==pIServerUserItem));

  000b5	83 7d f0 00	 cmp	 DWORD PTR _pSourceParameter$4[ebp], 0
  000b9	74 0b		 je	 SHORT $LN20@SwitchUser
  000bb	8b 45 f0	 mov	 eax, DWORD PTR _pSourceParameter$4[ebp]
  000be	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000c1	3b 4d 08	 cmp	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c4	74 19		 je	 SHORT $LN21@SwitchUser
$LN20@SwitchUser:
  000c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z@4JA
  000cc	83 c2 11	 add	 edx, 17			; 00000011H
  000cf	52		 push	 edx
  000d0	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000d5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000da	85 c0		 test	 eax, eax
  000dc	74 01		 je	 SHORT $LN21@SwitchUser
  000de	cc		 int	 3
$LN21@SwitchUser:

; 9449 : 		if ((pSourceParameter!=NULL)&&(pSourceParameter->pIServerUserItem==pIServerUserItem)) pSourceParameter->pIServerUserItem=NULL;

  000df	83 7d f0 00	 cmp	 DWORD PTR _pSourceParameter$4[ebp], 0
  000e3	74 15		 je	 SHORT $LN5@SwitchUser
  000e5	8b 45 f0	 mov	 eax, DWORD PTR _pSourceParameter$4[ebp]
  000e8	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000eb	3b 4d 08	 cmp	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ee	75 0a		 jne	 SHORT $LN5@SwitchUser
  000f0	8b 45 f0	 mov	 eax, DWORD PTR _pSourceParameter$4[ebp]
  000f3	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN5@SwitchUser:

; 9450 : 
; 9451 : 		//断开用户
; 9452 : 		if (pIServerUserItem->IsAndroidUser()==true)

  000fa	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000fd	8b 10		 mov	 edx, DWORD PTR [eax]
  000ff	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00102	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00108	ff d0		 call	 eax
  0010a	0f b6 c8	 movzx	 ecx, al
  0010d	83 f9 01	 cmp	 ecx, 1
  00110	75 21		 jne	 SHORT $LN6@SwitchUser

; 9453 : 		{
; 9454 : 			m_AndroidUserManager.DeleteAndroidUserItem(pSourceParameter->dwSocketID,false);

  00112	6a 00		 push	 0
  00114	8b 45 f0	 mov	 eax, DWORD PTR _pSourceParameter$4[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	51		 push	 ecx
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00123	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00126	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  0012c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0012f	ff d2		 call	 edx

; 9455 : 		}
; 9456 : 		else

  00131	eb 1f		 jmp	 SHORT $LN4@SwitchUser
$LN6@SwitchUser:

; 9457 : 		{
; 9458 : 			m_pITCPNetworkEngine->ShutDownSocket(pSourceParameter->dwSocketID);

  00133	8b 45 f0	 mov	 eax, DWORD PTR _pSourceParameter$4[ebp]
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	51		 push	 ecx
  00139	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013c	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00142	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00145	8b 10		 mov	 edx, DWORD PTR [eax]
  00147	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  0014d	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00150	ff d0		 call	 eax
$LN4@SwitchUser:

; 9459 : 		}
; 9460 : 	}
; 9461 : 
; 9462 : 	//机器判断
; 9463 : 	LPCTSTR pszMachineID=pIServerUserItem->GetMachineID();

  00152	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00155	8b 10		 mov	 edx, DWORD PTR [eax]
  00157	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0015a	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0015d	ff d0		 call	 eax
  0015f	89 45 ec	 mov	 DWORD PTR _pszMachineID$[ebp], eax

; 9464 : 	bool bSameMachineID=(lstrcmp(pszMachineID,szMachineID)==0);

  00162	8b 45 0c	 mov	 eax, DWORD PTR _szMachineID$[ebp]
  00165	50		 push	 eax
  00166	8b 4d ec	 mov	 ecx, DWORD PTR _pszMachineID$[ebp]
  00169	51		 push	 ecx
  0016a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00170	85 c0		 test	 eax, eax
  00172	75 09		 jne	 SHORT $LN22@SwitchUser
  00174	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv182[ebp], 1
  0017b	eb 07		 jmp	 SHORT $LN23@SwitchUser
$LN22@SwitchUser:
  0017d	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv182[ebp], 0
$LN23@SwitchUser:
  00184	8a 55 90	 mov	 dl, BYTE PTR tv182[ebp]
  00187	88 55 eb	 mov	 BYTE PTR _bSameMachineID$[ebp], dl

; 9465 : 
; 9466 : 	//变量定义
; 9467 : 	bool bAndroidUser=(wTargetIndex>=INDEX_ANDROID);

  0018a	0f b7 45 10	 movzx	 eax, WORD PTR _wTargetIndex$[ebp]
  0018e	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00193	7c 09		 jl	 SHORT $LN24@SwitchUser
  00195	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv186[ebp], 1
  0019c	eb 07		 jmp	 SHORT $LN25@SwitchUser
$LN24@SwitchUser:
  0019e	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN25@SwitchUser:
  001a5	8a 4d 90	 mov	 cl, BYTE PTR tv186[ebp]
  001a8	88 4d ea	 mov	 BYTE PTR _bAndroidUser$[ebp], cl

; 9468 : 	tagBindParameter * pTargetParameter=GetBindParameter(wTargetIndex);

  001ab	0f b7 45 10	 movzx	 eax, WORD PTR _wTargetIndex$[ebp]
  001af	50		 push	 eax
  001b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b8	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  001bb	ff d0		 call	 eax
  001bd	89 45 e4	 mov	 DWORD PTR _pTargetParameter$[ebp], eax

; 9469 : 
; 9470 : 	//激活用户
; 9471 : 	pTargetParameter->pIServerUserItem=pIServerUserItem;

  001c0	8b 45 e4	 mov	 eax, DWORD PTR _pTargetParameter$[ebp]
  001c3	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001c6	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 9472 : 	pIServerUserItem->SetUserParameter(pTargetParameter->dwClientAddr,wTargetIndex,szMachineID,bAndroidUser,false);

  001c9	6a 00		 push	 0
  001cb	0f b6 45 ea	 movzx	 eax, BYTE PTR _bAndroidUser$[ebp]
  001cf	50		 push	 eax
  001d0	8b 4d 0c	 mov	 ecx, DWORD PTR _szMachineID$[ebp]
  001d3	51		 push	 ecx
  001d4	0f b7 55 10	 movzx	 edx, WORD PTR _wTargetIndex$[ebp]
  001d8	52		 push	 edx
  001d9	8b 45 e4	 mov	 eax, DWORD PTR _pTargetParameter$[ebp]
  001dc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001df	51		 push	 ecx
  001e0	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001e3	8b 02		 mov	 eax, DWORD PTR [edx]
  001e5	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e8	8b 90 20 01 00
	00		 mov	 edx, DWORD PTR [eax+288]
  001ee	ff d2		 call	 edx

; 9473 : 
; 9474 : 	//手机标识
; 9475 : 	if(pTargetParameter->cbClientKind==CLIENT_KIND_MOBILE)

  001f0	8b 45 e4	 mov	 eax, DWORD PTR _pTargetParameter$[ebp]
  001f3	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  001f7	83 f9 02	 cmp	 ecx, 2
  001fa	75 2d		 jne	 SHORT $LN8@SwitchUser

; 9476 : 	{
; 9477 : 		pIServerUserItem->SetMobileUser(true);

  001fc	6a 01		 push	 1
  001fe	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00201	8b 10		 mov	 edx, DWORD PTR [eax]
  00203	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00206	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  0020c	ff d0		 call	 eax

; 9478 : 		SetMobileUserParameter(pIServerUserItem,cbDeviceType,wBehaviorFlags,wPageTableCount);

  0020e	0f b7 45 1c	 movzx	 eax, WORD PTR _wPageTableCount$[ebp]
  00212	50		 push	 eax
  00213	0f b7 4d 18	 movzx	 ecx, WORD PTR _wBehaviorFlags$[ebp]
  00217	51		 push	 ecx
  00218	0f b6 55 14	 movzx	 edx, BYTE PTR _cbDeviceType$[ebp]
  0021c	52		 push	 edx
  0021d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00220	50		 push	 eax
  00221	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00224	e8 00 00 00 00	 call	 ?SetMobileUserParameter@CAttemperEngineSink@@IAEXPAUIServerUserItem@@EGG@Z ; CAttemperEngineSink::SetMobileUserParameter
$LN8@SwitchUser:

; 9479 : 	}
; 9480 : 
; 9481 : 	//状态切换
; 9482 : 	bool bIsOffLine=false;

  00229	c6 45 e3 00	 mov	 BYTE PTR _bIsOffLine$[ebp], 0

; 9483 : 	if (pIServerUserItem->GetUserStatus()==US_OFFLINE)

  0022d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00230	8b 10		 mov	 edx, DWORD PTR [eax]
  00232	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00235	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00238	ff d0		 call	 eax
  0023a	0f b6 c8	 movzx	 ecx, al
  0023d	83 f9 06	 cmp	 ecx, 6
  00240	0f 85 b9 00 00
	00		 jne	 $LN9@SwitchUser

; 9484 : 	{
; 9485 : 		//变量定义
; 9486 : 		WORD wTableID=pIServerUserItem->GetTableID();

  00246	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00249	8b 10		 mov	 edx, DWORD PTR [eax]
  0024b	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0024e	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00251	ff d0		 call	 eax
  00253	66 89 45 dc	 mov	 WORD PTR _wTableID$3[ebp], ax

; 9487 : 		WORD wChairID=pIServerUserItem->GetChairID();

  00257	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0025a	8b 10		 mov	 edx, DWORD PTR [eax]
  0025c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0025f	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00262	ff d0		 call	 eax
  00264	66 89 45 d8	 mov	 WORD PTR _wChairID$2[ebp], ax

; 9488 : 
; 9489 : 		//设置状态
; 9490 : 		bIsOffLine=true;

  00268	c6 45 e3 01	 mov	 BYTE PTR _bIsOffLine$[ebp], 1

; 9491 : 		if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  0026c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0026f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00272	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00276	83 fa 10	 cmp	 edx, 16			; 00000010H
  00279	75 68		 jne	 SHORT $LN10@SwitchUser

; 9492 : 		{
; 9493 : 			CTableFrame* pTableFrame = m_TableFrameArray[wTableID];

  0027b	0f b7 45 dc	 movzx	 eax, WORD PTR _wTableID$3[ebp]
  0027f	50		 push	 eax
  00280	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00289	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0028e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00290	89 4d d4	 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 9494 : 			if(pTableFrame->IsGameStarted())

  00293	8b 45 d4	 mov	 eax, DWORD PTR _pTableFrame$1[ebp]
  00296	8b 10		 mov	 edx, DWORD PTR [eax]
  00298	8b 4d d4	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  0029b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0029e	ff d0		 call	 eax
  002a0	0f b6 c8	 movzx	 ecx, al
  002a3	85 c9		 test	 ecx, ecx
  002a5	74 1e		 je	 SHORT $LN12@SwitchUser

; 9495 : 				pIServerUserItem->SetUserStatus(US_PLAYING,wTableID,wChairID);

  002a7	0f b7 45 d8	 movzx	 eax, WORD PTR _wChairID$2[ebp]
  002ab	50		 push	 eax
  002ac	0f b7 4d dc	 movzx	 ecx, WORD PTR _wTableID$3[ebp]
  002b0	51		 push	 ecx
  002b1	6a 05		 push	 5
  002b3	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  002b6	8b 02		 mov	 eax, DWORD PTR [edx]
  002b8	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002bb	8b 90 fc 00 00
	00		 mov	 edx, DWORD PTR [eax+252]
  002c1	ff d2		 call	 edx

; 9496 : 			else

  002c3	eb 1c		 jmp	 SHORT $LN13@SwitchUser
$LN12@SwitchUser:

; 9497 : 				pIServerUserItem->SetUserStatus(US_SIT,wTableID,wChairID);

  002c5	0f b7 45 d8	 movzx	 eax, WORD PTR _wChairID$2[ebp]
  002c9	50		 push	 eax
  002ca	0f b7 4d dc	 movzx	 ecx, WORD PTR _wTableID$3[ebp]
  002ce	51		 push	 ecx
  002cf	6a 02		 push	 2
  002d1	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  002d4	8b 02		 mov	 eax, DWORD PTR [edx]
  002d6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002d9	8b 90 fc 00 00
	00		 mov	 edx, DWORD PTR [eax+252]
  002df	ff d2		 call	 edx
$LN13@SwitchUser:

; 9498 : 		}
; 9499 : 		else

  002e1	eb 1c		 jmp	 SHORT $LN9@SwitchUser
$LN10@SwitchUser:

; 9500 : 			pIServerUserItem->SetUserStatus(US_PLAYING,wTableID,wChairID);

  002e3	0f b7 45 d8	 movzx	 eax, WORD PTR _wChairID$2[ebp]
  002e7	50		 push	 eax
  002e8	0f b7 4d dc	 movzx	 ecx, WORD PTR _wTableID$3[ebp]
  002ec	51		 push	 ecx
  002ed	6a 05		 push	 5
  002ef	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  002f2	8b 02		 mov	 eax, DWORD PTR [edx]
  002f4	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002f7	8b 90 fc 00 00
	00		 mov	 edx, DWORD PTR [eax+252]
  002fd	ff d2		 call	 edx
$LN9@SwitchUser:

; 9501 : 	}
; 9502 : 
; 9503 : 	//取消托管
; 9504 : 	if (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  002ff	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00302	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00305	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00309	83 fa 04	 cmp	 edx, 4
  0030c	75 4e		 jne	 SHORT $LN14@SwitchUser
  0030e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00311	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00314	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00318	83 fa 01	 cmp	 edx, 1
  0031b	75 3f		 jne	 SHORT $LN14@SwitchUser

; 9505 : 	{
; 9506 : 		if (pIServerUserItem->IsTrusteeUser()==true && pIServerUserItem->GetUserStatus()!=US_PLAYING)

  0031d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00320	8b 10		 mov	 edx, DWORD PTR [eax]
  00322	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00325	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  0032b	ff d0		 call	 eax
  0032d	0f b6 c8	 movzx	 ecx, al
  00330	83 f9 01	 cmp	 ecx, 1
  00333	75 27		 jne	 SHORT $LN14@SwitchUser
  00335	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00338	8b 10		 mov	 edx, DWORD PTR [eax]
  0033a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0033d	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00340	ff d0		 call	 eax
  00342	0f b6 c8	 movzx	 ecx, al
  00345	83 f9 05	 cmp	 ecx, 5
  00348	74 12		 je	 SHORT $LN14@SwitchUser

; 9507 : 		{
; 9508 : 			pIServerUserItem->SetTrusteeUser(false);

  0034a	6a 00		 push	 0
  0034c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0034f	8b 10		 mov	 edx, DWORD PTR [eax]
  00351	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00354	8b 82 bc 00 00
	00		 mov	 eax, DWORD PTR [edx+188]
  0035a	ff d0		 call	 eax
$LN14@SwitchUser:

; 9509 : 		}
; 9510 : 	}
; 9511 : 
; 9512 : 	//登录事件
; 9513 : 	OnEventUserLogon(pIServerUserItem,true);

  0035c	6a 01		 push	 1
  0035e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00361	50		 push	 eax
  00362	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00365	e8 00 00 00 00	 call	 ?OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z ; CAttemperEngineSink::OnEventUserLogon

; 9514 : 
; 9515 : 	//安全提示
; 9516 : 	if ((bAndroidUser==false)&&(bIsOffLine==false)&&(bSameMachineID==false))

  0036a	0f b6 45 ea	 movzx	 eax, BYTE PTR _bAndroidUser$[ebp]
  0036e	85 c0		 test	 eax, eax
  00370	75 2c		 jne	 SHORT $LN16@SwitchUser
  00372	0f b6 45 e3	 movzx	 eax, BYTE PTR _bIsOffLine$[ebp]
  00376	85 c0		 test	 eax, eax
  00378	75 24		 jne	 SHORT $LN16@SwitchUser
  0037a	0f b6 45 eb	 movzx	 eax, BYTE PTR _bSameMachineID$[ebp]
  0037e	85 c0		 test	 eax, eax
  00380	75 1c		 jne	 SHORT $LN16@SwitchUser

; 9517 : 	{
; 9518 : 		SendRoomMessage(pIServerUserItem,TEXT("请注意，您的帐号在另一地方进入了此游戏房间，对方被迫离开！"),SMT_EJECT|SMT_CHAT|SMT_GLOBAL);

  00382	6a 07		 push	 7
  00384	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@JOMAFBAE@?G?k?W?$KC?R?b?$KD?$KM?D?z?$LF?D?U?J?$LK?E?T?Z?A?m?R?$LL?$LF?X?$LH?$LN?$LN?x?H?k?A@
  00389	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0038c	50		 push	 eax
  0038d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00390	83 c1 04	 add	 ecx, 4
  00393	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00396	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00399	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0039c	ff d2		 call	 edx
$LN16@SwitchUser:

; 9519 : 	}
; 9520 : 
; 9521 : 	return true;

  0039e	b0 01		 mov	 al, 1
$LN1@SwitchUser:

; 9522 : }

  003a0	5f		 pop	 edi
  003a1	5e		 pop	 esi
  003a2	5b		 pop	 ebx
  003a3	8b e5		 mov	 esp, ebp
  003a5	5d		 pop	 ebp
  003a6	c2 18 00	 ret	 24			; 00000018H
?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z ENDP ; CAttemperEngineSink::SwitchUserItemConnect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z
_TEXT	SEGMENT
tv145 = -160						; size = 4
tv95 = -160						; size = 4
_wDataSize$1 = -92					; size = 2
_wHeadSize$2 = -88					; size = 2
_TaskFinish$3 = -84					; size = 66
_dwSpanSecond$ = -16					; size = 4
_pTaskParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_pUserTaskEntry$ = 12					; size = 4
_dwWinCount$ = 16					; size = 4
_dwLostCount$ = 20					; size = 4
_dwDrawCount$ = 24					; size = 4
?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z PROC ; CAttemperEngineSink::PerformTaskProgress, COMDAT
; _this$ = ecx

; 9141 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9142 : 	//参数校验
; 9143 : 	ASSERT(pIServerUserItem!=NULL && pUserTaskEntry!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	74 06		 je	 SHORT $LN27@PerformTas
  0001f	83 7d 0c 00	 cmp	 DWORD PTR _pUserTaskEntry$[ebp], 0
  00023	75 18		 jne	 SHORT $LN28@PerformTas
$LN27@PerformTas:
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z@4JA
  0002a	83 c0 02	 add	 eax, 2
  0002d	50		 push	 eax
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN28@PerformTas
  0003c	cc		 int	 3
$LN28@PerformTas:

; 9144 : 	if(pIServerUserItem==NULL || pUserTaskEntry==NULL) return false;

  0003d	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00041	74 06		 je	 SHORT $LN5@PerformTas
  00043	83 7d 0c 00	 cmp	 DWORD PTR _pUserTaskEntry$[ebp], 0
  00047	75 07		 jne	 SHORT $LN4@PerformTas
$LN5@PerformTas:
  00049	32 c0		 xor	 al, al
  0004b	e9 9b 02 00 00	 jmp	 $LN1@PerformTas
$LN4@PerformTas:

; 9145 : 
; 9146 : 	//状态校验
; 9147 : 	if(pUserTaskEntry->pTaskParameter==NULL) return true;

  00050	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00053	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00057	75 07		 jne	 SHORT $LN6@PerformTas
  00059	b0 01		 mov	 al, 1
  0005b	e9 8b 02 00 00	 jmp	 $LN1@PerformTas
$LN6@PerformTas:

; 9148 : 	if(pUserTaskEntry->cbTaskStatus!=TASK_STATUS_UNFINISH) return true;

  00060	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00063	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00066	85 c9		 test	 ecx, ecx
  00068	74 07		 je	 SHORT $LN7@PerformTas
  0006a	b0 01		 mov	 al, 1
  0006c	e9 7a 02 00 00	 jmp	 $LN1@PerformTas
$LN7@PerformTas:

; 9149 : 	if(pUserTaskEntry->pTaskParameter->wKindID!=m_pGameServiceOption->wKindID) return true;

  00071	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00074	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00077	0f b7 51 07	 movzx	 edx, WORD PTR [ecx+7]
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00081	0f b7 01	 movzx	 eax, WORD PTR [ecx]
  00084	3b d0		 cmp	 edx, eax
  00086	74 07		 je	 SHORT $LN8@PerformTas
  00088	b0 01		 mov	 al, 1
  0008a	e9 5c 02 00 00	 jmp	 $LN1@PerformTas
$LN8@PerformTas:

; 9150 : 
; 9151 : 	//任务参数
; 9152 : 	tagTaskParameter * pTaskParameter = pUserTaskEntry->pTaskParameter;

  0008f	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00092	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00095	89 4d f4	 mov	 DWORD PTR _pTaskParameter$[ebp], ecx

; 9153 : 
; 9154 : 	//获取时间
; 9155 : 	DWORD dwSpanSecond=(DWORD)time(NULL)-pUserTaskEntry->dwLastUpdateTime;

  00098	6a 00		 push	 0
  0009a	e8 00 00 00 00	 call	 _time
  0009f	83 c4 04	 add	 esp, 4
  000a2	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  000a5	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  000a8	89 45 f0	 mov	 DWORD PTR _dwSpanSecond$[ebp], eax

; 9156 : 	dwSpanSecond=__min(dwSpanSecond,pUserTaskEntry->dwResidueTime);

  000ab	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000ae	8b 4d f0	 mov	 ecx, DWORD PTR _dwSpanSecond$[ebp]
  000b1	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  000b4	73 0b		 jae	 SHORT $LN29@PerformTas
  000b6	8b 55 f0	 mov	 edx, DWORD PTR _dwSpanSecond$[ebp]
  000b9	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], edx
  000bf	eb 0c		 jmp	 SHORT $LN30@PerformTas
$LN29@PerformTas:
  000c1	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000c4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c7	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
$LN30@PerformTas:
  000cd	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv95[ebp]
  000d3	89 55 f0	 mov	 DWORD PTR _dwSpanSecond$[ebp], edx

; 9157 : 
; 9158 : 	//更新时间	
; 9159 : 	pUserTaskEntry->dwResidueTime-=dwSpanSecond;

  000d6	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000d9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dc	2b 4d f0	 sub	 ecx, DWORD PTR _dwSpanSecond$[ebp]
  000df	8b 55 0c	 mov	 edx, DWORD PTR _pUserTaskEntry$[ebp]
  000e2	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 9160 : 	pUserTaskEntry->dwLastUpdateTime=(DWORD)time(NULL);

  000e5	6a 00		 push	 0
  000e7	e8 00 00 00 00	 call	 _time
  000ec	83 c4 04	 add	 esp, 4
  000ef	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  000f2	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 9161 : 
; 9162 : 	//任务超时
; 9163 : 	if(pUserTaskEntry->dwResidueTime == 0)

  000f5	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  000f8	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000fc	75 19		 jne	 SHORT $LN9@PerformTas

; 9164 : 	{		
; 9165 : 		pUserTaskEntry->wTaskProgress=0;

  000fe	33 c0		 xor	 eax, eax
  00100	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00103	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 9166 : 		pUserTaskEntry->pTaskParameter=NULL;		

  00107	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0010a	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 9167 : 		pUserTaskEntry->cbTaskStatus=TASK_STATUS_FAILED;		

  00111	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00114	c6 00 02	 mov	 BYTE PTR [eax], 2
$LN9@PerformTas:

; 9168 : 	}
; 9169 : 
; 9170 : 	//任务未完成
; 9171 : 	if(pUserTaskEntry->cbTaskStatus==TASK_STATUS_UNFINISH)

  00117	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0011a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0011d	85 c9		 test	 ecx, ecx
  0011f	0f 85 33 01 00
	00		 jne	 $LN10@PerformTas

; 9172 : 	{
; 9173 : 		//任务类型
; 9174 : 		switch(pTaskParameter->wTaskType)

  00125	8b 45 f4	 mov	 eax, DWORD PTR _pTaskParameter$[ebp]
  00128	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0012c	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv145[ebp], ecx
  00132	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv145[ebp]
  00138	83 ea 01	 sub	 edx, 1
  0013b	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv145[ebp], edx
  00141	83 bd 60 ff ff
	ff 07		 cmp	 DWORD PTR tv145[ebp], 7
  00148	0f 87 ed 00 00
	00		 ja	 $LN23@PerformTas
  0014e	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv145[ebp]
  00154	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN32@PerformTas[eax*4]
$LN11@PerformTas:

; 9175 : 		{
; 9176 : 		case TASK_TYPE_WIN_INNINGS:			//赢局任务
; 9177 : 			{
; 9178 : 				//更新状态
; 9179 : 				pUserTaskEntry->wTaskProgress += (WORD)dwWinCount;

  0015b	0f b7 45 10	 movzx	 eax, WORD PTR _dwWinCount$[ebp]
  0015f	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00162	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00166	03 d0		 add	 edx, eax
  00168	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0016b	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 9180 : 				if(pUserTaskEntry->wTaskProgress>=pTaskParameter->wTaskObject)

  0016f	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00172	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00176	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  00179	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  0017d	3b c8		 cmp	 ecx, eax
  0017f	7c 06		 jl	 SHORT $LN12@PerformTas

; 9181 : 				{
; 9182 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  00181	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00184	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN12@PerformTas:

; 9183 : 				}
; 9184 : 
; 9185 : 				break;

  00187	e9 cc 00 00 00	 jmp	 $LN10@PerformTas
$LN13@PerformTas:

; 9186 : 			};
; 9187 : 		case TASK_TYPE_SUM_INNINGS:			//总局任务
; 9188 : 			{
; 9189 : 				//更新状态
; 9190 : 				pUserTaskEntry->wTaskProgress += (WORD)dwWinCount+(WORD)dwLostCount+(WORD)dwDrawCount;

  0018c	0f b7 45 10	 movzx	 eax, WORD PTR _dwWinCount$[ebp]
  00190	0f b7 4d 14	 movzx	 ecx, WORD PTR _dwLostCount$[ebp]
  00194	03 c1		 add	 eax, ecx
  00196	0f b7 55 18	 movzx	 edx, WORD PTR _dwDrawCount$[ebp]
  0019a	03 c2		 add	 eax, edx
  0019c	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  0019f	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  001a3	03 d0		 add	 edx, eax
  001a5	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001a8	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 9191 : 				if(pUserTaskEntry->wTaskProgress>=pTaskParameter->wTaskObject)

  001ac	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001af	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  001b3	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  001b6	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  001ba	3b c8		 cmp	 ecx, eax
  001bc	7c 06		 jl	 SHORT $LN14@PerformTas

; 9192 : 				{
; 9193 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  001be	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001c1	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN14@PerformTas:

; 9194 : 				}
; 9195 : 				break;

  001c4	e9 8f 00 00 00	 jmp	 $LN10@PerformTas
$LN15@PerformTas:

; 9196 : 			};
; 9197 : 		case TASK_TYPE_FIRST_WIN:			//首胜任务
; 9198 : 			{
; 9199 : 				//更新状态
; 9200 : 				pUserTaskEntry->wTaskProgress = (WORD)dwWinCount;

  001c9	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001cc	66 8b 4d 10	 mov	 cx, WORD PTR _dwWinCount$[ebp]
  001d0	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 9201 : 				if(pUserTaskEntry->wTaskProgress==pTaskParameter->wTaskObject)

  001d4	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001d7	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  001db	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  001de	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  001e2	3b c8		 cmp	 ecx, eax
  001e4	75 08		 jne	 SHORT $LN16@PerformTas

; 9202 : 				{
; 9203 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  001e6	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001e9	c6 00 01	 mov	 BYTE PTR [eax], 1

; 9204 : 				}
; 9205 : 				else

  001ec	eb 06		 jmp	 SHORT $LN17@PerformTas
$LN16@PerformTas:

; 9206 : 				{
; 9207 : 					pUserTaskEntry->cbTaskStatus=TASK_STATUS_FAILED;

  001ee	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001f1	c6 00 02	 mov	 BYTE PTR [eax], 2
$LN17@PerformTas:

; 9208 : 				}
; 9209 : 
; 9210 : 				break;

  001f4	eb 62		 jmp	 SHORT $LN10@PerformTas
$LN18@PerformTas:

; 9211 : 			};
; 9212 : 		case TASK_TYPE_KEEP_WIN:			//连赢任务
; 9213 : 			{
; 9214 : 
; 9215 : 				if (dwLostCount>0 || dwDrawCount>0)

  001f6	83 7d 14 00	 cmp	 DWORD PTR _dwLostCount$[ebp], 0
  001fa	77 06		 ja	 SHORT $LN21@PerformTas
  001fc	83 7d 18 00	 cmp	 DWORD PTR _dwDrawCount$[ebp], 0
  00200	76 0b		 jbe	 SHORT $LN19@PerformTas
$LN21@PerformTas:

; 9216 : 				{
; 9217 : 					pUserTaskEntry->wTaskProgress=0;

  00202	33 c0		 xor	 eax, eax
  00204	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00207	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 9218 : 				}
; 9219 : 				else

  0020b	eb 2c		 jmp	 SHORT $LN20@PerformTas
$LN19@PerformTas:

; 9220 : 				{
; 9221 : 					//更新状态
; 9222 : 					pUserTaskEntry->wTaskProgress += (WORD)dwWinCount;

  0020d	0f b7 45 10	 movzx	 eax, WORD PTR _dwWinCount$[ebp]
  00211	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserTaskEntry$[ebp]
  00214	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00218	03 d0		 add	 edx, eax
  0021a	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0021d	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 9223 : 					if(pUserTaskEntry->wTaskProgress==pTaskParameter->wTaskObject)

  00221	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00224	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00228	8b 55 f4	 mov	 edx, DWORD PTR _pTaskParameter$[ebp]
  0022b	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  0022f	3b c8		 cmp	 ecx, eax
  00231	75 06		 jne	 SHORT $LN20@PerformTas

; 9224 : 					{
; 9225 : 						pUserTaskEntry->cbTaskStatus=TASK_STATUS_SUCCESS;

  00233	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  00236	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN20@PerformTas:

; 9226 : 					}
; 9227 : 				}
; 9228 : 
; 9229 : 				break;

  00239	eb 1d		 jmp	 SHORT $LN10@PerformTas
$LN23@PerformTas:

; 9230 : 			};
; 9231 : 		default:
; 9232 : 			{
; 9233 : 				ASSERT(FALSE);

  0023b	33 c0		 xor	 eax, eax
  0023d	75 19		 jne	 SHORT $LN10@PerformTas
  0023f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z@4JA
  00245	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00248	51		 push	 ecx
  00249	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0024e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00253	85 c0		 test	 eax, eax
  00255	74 01		 je	 SHORT $LN10@PerformTas
  00257	cc		 int	 3
$LN10@PerformTas:

; 9234 : 				break;
; 9235 : 			};
; 9236 : 		}
; 9237 : 	}
; 9238 : 
; 9239 : 	//任务完成
; 9240 : 	if(pUserTaskEntry->cbTaskStatus==TASK_STATUS_SUCCESS)

  00258	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  0025b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0025e	83 f9 01	 cmp	 ecx, 1
  00261	75 5e		 jne	 SHORT $LN24@PerformTas

; 9241 : 	{
; 9242 : 		//构造结构
; 9243 : 		CMD_GR_S_TaskFinish TaskFinish;
; 9244 : 		TaskFinish.wFinishTaskID=pTaskParameter->wTaskID;

  00263	8b 45 f4	 mov	 eax, DWORD PTR _pTaskParameter$[ebp]
  00266	66 8b 08	 mov	 cx, WORD PTR [eax]
  00269	66 89 4d ac	 mov	 WORD PTR _TaskFinish$3[ebp], cx

; 9245 : 		lstrcpyn(TaskFinish.szTaskName,pTaskParameter->szTaskName,CountArray(TaskFinish.szTaskName));

  0026d	6a 40		 push	 64			; 00000040H
  0026f	8b 45 f4	 mov	 eax, DWORD PTR _pTaskParameter$[ebp]
  00272	83 c0 2d	 add	 eax, 45			; 0000002dH
  00275	50		 push	 eax
  00276	8d 4d ae	 lea	 ecx, DWORD PTR _TaskFinish$3[ebp+2]
  00279	51		 push	 ecx
  0027a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9246 : 
; 9247 : 		//发送消息
; 9248 : 		WORD wHeadSize = sizeof(TaskFinish)-sizeof(TaskFinish.szTaskName);

  00280	b8 02 00 00 00	 mov	 eax, 2
  00285	66 89 45 a8	 mov	 WORD PTR _wHeadSize$2[ebp], ax

; 9249 : 		WORD wDataSize = wHeadSize + CountStringBuffer(TaskFinish.szTaskName);

  00289	0f b7 75 a8	 movzx	 esi, WORD PTR _wHeadSize$2[ebp]
  0028d	8d 45 ae	 lea	 eax, DWORD PTR _TaskFinish$3[ebp+2]
  00290	50		 push	 eax
  00291	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00297	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  0029b	66 89 4d a4	 mov	 WORD PTR _wDataSize$1[ebp], cx

; 9250 : 		SendData(pIServerUserItem,MDM_GR_TASK,SUB_GR_TASK_FINISH,&TaskFinish,wDataSize);

  0029f	0f b7 45 a4	 movzx	 eax, WORD PTR _wDataSize$1[ebp]
  002a3	50		 push	 eax
  002a4	8d 4d ac	 lea	 ecx, DWORD PTR _TaskFinish$3[ebp]
  002a7	51		 push	 ecx
  002a8	6a 0c		 push	 12			; 0000000cH
  002aa	6a 06		 push	 6
  002ac	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  002af	52		 push	 edx
  002b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b3	83 c1 04	 add	 ecx, 4
  002b6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002b9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002bc	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  002bf	ff d0		 call	 eax
$LN24@PerformTas:

; 9251 : 	}
; 9252 : 
; 9253 : 	//递归调用
; 9254 : 	if(pUserTaskEntry->pNextTaskEntry!=NULL)

  002c1	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  002c4	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  002c8	74 1f		 je	 SHORT $LN25@PerformTas

; 9255 : 	{
; 9256 : 		PerformTaskProgress(pIServerUserItem,pUserTaskEntry->pNextStatusEntry,dwWinCount,dwLostCount,dwDrawCount);

  002ca	8b 45 18	 mov	 eax, DWORD PTR _dwDrawCount$[ebp]
  002cd	50		 push	 eax
  002ce	8b 4d 14	 mov	 ecx, DWORD PTR _dwLostCount$[ebp]
  002d1	51		 push	 ecx
  002d2	8b 55 10	 mov	 edx, DWORD PTR _dwWinCount$[ebp]
  002d5	52		 push	 edx
  002d6	8b 45 0c	 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  002d9	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  002dc	51		 push	 ecx
  002dd	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  002e0	52		 push	 edx
  002e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e4	e8 00 00 00 00	 call	 ?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z ; CAttemperEngineSink::PerformTaskProgress
$LN25@PerformTas:

; 9257 : 	}
; 9258 : 
; 9259 : 	return true;

  002e9	b0 01		 mov	 al, 1
$LN1@PerformTas:

; 9260 : }

  002eb	5f		 pop	 edi
  002ec	5e		 pop	 esi
  002ed	5b		 pop	 ebx
  002ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002f1	33 cd		 xor	 ecx, ebp
  002f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f8	8b e5		 mov	 esp, ebp
  002fa	5d		 pop	 ebp
  002fb	c2 14 00	 ret	 20			; 00000014H
  002fe	66 90		 npad	 2
$LN32@PerformTas:
  00300	00 00 00 00	 DD	 $LN11@PerformTas
  00304	00 00 00 00	 DD	 $LN13@PerformTas
  00308	00 00 00 00	 DD	 $LN23@PerformTas
  0030c	00 00 00 00	 DD	 $LN15@PerformTas
  00310	00 00 00 00	 DD	 $LN23@PerformTas
  00314	00 00 00 00	 DD	 $LN23@PerformTas
  00318	00 00 00 00	 DD	 $LN23@PerformTas
  0031c	00 00 00 00	 DD	 $LN18@PerformTas
?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z ENDP ; CAttemperEngineSink::PerformTaskProgress
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z
_TEXT	SEGMENT
_UpdateNotify$1 = -28					; size = 15
_bAdviceUpdateClient$ = -10				; size = 1
_bMustUpdateClient$ = -9				; size = 1
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwPlazaVersion$ = 8					; size = 4
_dwFrameVersion$ = 12					; size = 4
_dwClientVersion$ = 16					; size = 4
_dwSocketID$ = 20					; size = 4
?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z PROC ; CAttemperEngineSink::PerformCheckVersion, COMDAT
; _this$ = ecx

; 9379 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9380 : 	//变量定义
; 9381 : 	bool bMustUpdateClient=false;

  00016	c6 45 f7 00	 mov	 BYTE PTR _bMustUpdateClient$[ebp], 0

; 9382 : 	bool bAdviceUpdateClient=false;

  0001a	c6 45 f6 00	 mov	 BYTE PTR _bAdviceUpdateClient$[ebp], 0

; 9383 : 
; 9384 : 	//游戏版本
; 9385 : 	if (VERSION_EFFICACY==TRUE)

  0001e	33 c0		 xor	 eax, eax
  00020	0f 84 89 00 00
	00		 je	 $LN2@PerformChe

; 9386 : 	{
; 9387 : 		if (GetSubVer(dwClientVersion)<GetSubVer(m_pGameServiceAttrib->dwClientVersion)) bAdviceUpdateClient=true;

  00026	8b 45 10	 mov	 eax, DWORD PTR _dwClientVersion$[ebp]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  0002f	83 c4 04	 add	 esp, 4
  00032	0f b6 f0	 movzx	 esi, al
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  0003b	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00044	83 c4 04	 add	 esp, 4
  00047	0f b6 c8	 movzx	 ecx, al
  0004a	3b f1		 cmp	 esi, ecx
  0004c	7d 04		 jge	 SHORT $LN4@PerformChe
  0004e	c6 45 f6 01	 mov	 BYTE PTR _bAdviceUpdateClient$[ebp], 1
$LN4@PerformChe:

; 9388 : 		if (GetMainVer(dwClientVersion)!=GetMainVer(m_pGameServiceAttrib->dwClientVersion)) bMustUpdateClient=true;

  00052	8b 45 10	 mov	 eax, DWORD PTR _dwClientVersion$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  0005b	83 c4 04	 add	 esp, 4
  0005e	0f b6 f0	 movzx	 esi, al
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00067	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00070	83 c4 04	 add	 esp, 4
  00073	0f b6 c8	 movzx	 ecx, al
  00076	3b f1		 cmp	 esi, ecx
  00078	74 04		 je	 SHORT $LN5@PerformChe
  0007a	c6 45 f7 01	 mov	 BYTE PTR _bMustUpdateClient$[ebp], 1
$LN5@PerformChe:

; 9389 : 		if (GetProductVer(dwClientVersion)!=GetProductVer(m_pGameServiceAttrib->dwClientVersion)) bMustUpdateClient=true;

  0007e	8b 45 10	 mov	 eax, DWORD PTR _dwClientVersion$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00087	83 c4 04	 add	 esp, 4
  0008a	0f b6 f0	 movzx	 esi, al
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00093	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  0009c	83 c4 04	 add	 esp, 4
  0009f	0f b6 c8	 movzx	 ecx, al
  000a2	3b f1		 cmp	 esi, ecx
  000a4	74 04		 je	 SHORT $LN6@PerformChe
  000a6	c6 45 f7 01	 mov	 BYTE PTR _bMustUpdateClient$[ebp], 1
$LN6@PerformChe:

; 9390 : 	}
; 9391 : 	else

  000aa	e9 84 00 00 00	 jmp	 $LN3@PerformChe
$LN2@PerformChe:

; 9392 : 	{
; 9393 : 		if (GetSubVer(dwClientVersion)<GetSubVer(m_pGameParameter->dwClientVersion)) bAdviceUpdateClient=true;

  000af	8b 45 10	 mov	 eax, DWORD PTR _dwClientVersion$[ebp]
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  000b8	83 c4 04	 add	 esp, 4
  000bb	0f b6 f0	 movzx	 esi, al
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000c4	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  000cd	83 c4 04	 add	 esp, 4
  000d0	0f b6 c8	 movzx	 ecx, al
  000d3	3b f1		 cmp	 esi, ecx
  000d5	7d 04		 jge	 SHORT $LN7@PerformChe
  000d7	c6 45 f6 01	 mov	 BYTE PTR _bAdviceUpdateClient$[ebp], 1
$LN7@PerformChe:

; 9394 : 		if (GetMainVer(dwClientVersion)!=GetMainVer(m_pGameParameter->dwClientVersion)) bMustUpdateClient=true;

  000db	8b 45 10	 mov	 eax, DWORD PTR _dwClientVersion$[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  000e4	83 c4 04	 add	 esp, 4
  000e7	0f b6 f0	 movzx	 esi, al
  000ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000f0	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  000f9	83 c4 04	 add	 esp, 4
  000fc	0f b6 c8	 movzx	 ecx, al
  000ff	3b f1		 cmp	 esi, ecx
  00101	74 04		 je	 SHORT $LN8@PerformChe
  00103	c6 45 f7 01	 mov	 BYTE PTR _bMustUpdateClient$[ebp], 1
$LN8@PerformChe:

; 9395 : 		if (GetProductVer(dwClientVersion)!=GetProductVer(m_pGameParameter->dwClientVersion)) bMustUpdateClient=true;

  00107	8b 45 10	 mov	 eax, DWORD PTR _dwClientVersion$[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00110	83 c4 04	 add	 esp, 4
  00113	0f b6 f0	 movzx	 esi, al
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0011c	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00125	83 c4 04	 add	 esp, 4
  00128	0f b6 c8	 movzx	 ecx, al
  0012b	3b f1		 cmp	 esi, ecx
  0012d	74 04		 je	 SHORT $LN3@PerformChe
  0012f	c6 45 f7 01	 mov	 BYTE PTR _bMustUpdateClient$[ebp], 1
$LN3@PerformChe:

; 9396 : 	}
; 9397 : 
; 9398 : 	//更新通知
; 9399 : 	if ((bMustUpdateClient==true)||(bAdviceUpdateClient==true))

  00133	0f b6 45 f7	 movzx	 eax, BYTE PTR _bMustUpdateClient$[ebp]
  00137	83 f8 01	 cmp	 eax, 1
  0013a	74 0d		 je	 SHORT $LN11@PerformChe
  0013c	0f b6 45 f6	 movzx	 eax, BYTE PTR _bAdviceUpdateClient$[ebp]
  00140	83 f8 01	 cmp	 eax, 1
  00143	0f 85 86 00 00
	00		 jne	 $LN10@PerformChe
$LN11@PerformChe:

; 9400 : 	{
; 9401 : 		//变量定义
; 9402 : 		CMD_GR_UpdateNotify UpdateNotify;
; 9403 : 		ZeroMemory(&UpdateNotify,sizeof(UpdateNotify));

  00149	6a 0f		 push	 15			; 0000000fH
  0014b	6a 00		 push	 0
  0014d	8d 45 e4	 lea	 eax, DWORD PTR _UpdateNotify$1[ebp]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 _memset
  00156	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9404 : 
; 9405 : 		//变量定义
; 9406 : 		UpdateNotify.cbMustUpdatePlaza=false;

  00159	c6 45 e4 00	 mov	 BYTE PTR _UpdateNotify$1[ebp], 0

; 9407 : 		UpdateNotify.cbMustUpdateClient=bMustUpdateClient;

  0015d	8a 45 f7	 mov	 al, BYTE PTR _bMustUpdateClient$[ebp]
  00160	88 45 e5	 mov	 BYTE PTR _UpdateNotify$1[ebp+1], al

; 9408 : 		UpdateNotify.cbAdviceUpdateClient=bAdviceUpdateClient;

  00163	8a 45 f6	 mov	 al, BYTE PTR _bAdviceUpdateClient$[ebp]
  00166	88 45 e6	 mov	 BYTE PTR _UpdateNotify$1[ebp+2], al

; 9409 : 
; 9410 : 		//当前版本
; 9411 : 		UpdateNotify.dwCurrentPlazaVersion=VERSION_PLAZA;

  00169	c7 45 e7 01 00
	00 06		 mov	 DWORD PTR _UpdateNotify$1[ebp+3], 100663297 ; 06000001H

; 9412 : 		UpdateNotify.dwCurrentFrameVersion=VERSION_FRAME;

  00170	c7 45 eb 01 00
	00 06		 mov	 DWORD PTR _UpdateNotify$1[ebp+7], 100663297 ; 06000001H

; 9413 : 		UpdateNotify.dwCurrentClientVersion=m_pGameServiceAttrib->dwClientVersion;

  00177	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0017d	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00180	89 55 ef	 mov	 DWORD PTR _UpdateNotify$1[ebp+11], edx

; 9414 : 
; 9415 : 		//发送消息
; 9416 : 		SendData(dwSocketID,MDM_GR_LOGON,SUB_GR_UPDATE_NOTIFY,&UpdateNotify,sizeof(UpdateNotify));

  00183	6a 0f		 push	 15			; 0000000fH
  00185	8d 45 e4	 lea	 eax, DWORD PTR _UpdateNotify$1[ebp]
  00188	50		 push	 eax
  00189	68 c8 00 00 00	 push	 200			; 000000c8H
  0018e	6a 01		 push	 1
  00190	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00193	51		 push	 ecx
  00194	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	83 c1 04	 add	 ecx, 4
  0019a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0019d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001a0	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  001a3	ff d2		 call	 edx

; 9417 : 
; 9418 : 		//中止判断
; 9419 : 		if (bMustUpdateClient==true)

  001a5	0f b6 45 f7	 movzx	 eax, BYTE PTR _bMustUpdateClient$[ebp]
  001a9	83 f8 01	 cmp	 eax, 1
  001ac	75 21		 jne	 SHORT $LN10@PerformChe

; 9420 : 		{
; 9421 : 			m_pITCPNetworkEngine->ShutDownSocket(dwSocketID);

  001ae	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  001bb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001be	8b 12		 mov	 edx, DWORD PTR [edx]
  001c0	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  001c6	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  001c9	ff d0		 call	 eax

; 9422 : 			return false;

  001cb	32 c0		 xor	 al, al
  001cd	eb 02		 jmp	 SHORT $LN1@PerformChe
$LN10@PerformChe:

; 9423 : 		}
; 9424 : 	}
; 9425 : 
; 9426 : 	return true;

  001cf	b0 01		 mov	 al, 1
$LN1@PerformChe:

; 9427 : }

  001d1	5f		 pop	 edi
  001d2	5e		 pop	 esi
  001d3	5b		 pop	 ebx
  001d4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d7	33 cd		 xor	 ecx, ebp
  001d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c2 10 00	 ret	 16			; 00000010H
?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z ENDP ; CAttemperEngineSink::PerformCheckVersion
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z
_TEXT	SEGMENT
_LeaveGameServer$ = -232				; size = 224
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwUserID$ = 8						; size = 4
_dwInoutIndex$ = 12					; size = 4
_dwLeaveReason$ = 16					; size = 4
?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z PROC ; CAttemperEngineSink::PerformUnlockScore, COMDAT
; _this$ = ecx

; 9114 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9115 : 	//变量定义
; 9116 : 	DBR_GR_LeaveGameServer LeaveGameServer;
; 9117 : 	ZeroMemory(&LeaveGameServer,sizeof(LeaveGameServer));

  00019	68 e0 00 00 00	 push	 224			; 000000e0H
  0001e	6a 00		 push	 0
  00020	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _LeaveGameServer$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9118 : 
; 9119 : 	//设置变量
; 9120 : 	LeaveGameServer.dwUserID=dwUserID;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  00032	89 85 18 ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp], eax

; 9121 : 	LeaveGameServer.dwInoutIndex=dwInoutIndex;

  00038	8b 45 0c	 mov	 eax, DWORD PTR _dwInoutIndex$[ebp]
  0003b	89 85 1c ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp+4], eax

; 9122 : 	LeaveGameServer.dwLeaveReason=dwLeaveReason;

  00041	8b 45 10	 mov	 eax, DWORD PTR _dwLeaveReason$[ebp]
  00044	89 85 20 ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp+8], eax

; 9123 : 
; 9124 : 	//是否为约战类型
; 9125 : 	if(m_bHasPersonalRoomService)

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	0f b6 88 b9 00
	00 00		 movzx	 ecx, BYTE PTR [eax+185]
  00054	85 c9		 test	 ecx, ecx
  00056	74 09		 je	 SHORT $LN2@PerformUnl

; 9126 : 	{
; 9127 : 		LeaveGameServer.cbIsPersonalRoom = 1;

  00058	c6 85 28 ff ff
	ff 01		 mov	 BYTE PTR _LeaveGameServer$[ebp+16], 1

; 9128 : 	}
; 9129 : 	else

  0005f	eb 07		 jmp	 SHORT $LN3@PerformUnl
$LN2@PerformUnl:

; 9130 : 	{
; 9131 : 		LeaveGameServer.cbIsPersonalRoom = 0;

  00061	c6 85 28 ff ff
	ff 00		 mov	 BYTE PTR _LeaveGameServer$[ebp+16], 0
$LN3@PerformUnl:

; 9132 : 	}
; 9133 : 	//投递请求
; 9134 : 	m_pIDBCorrespondManager->PostDataBaseRequest(dwUserID,DBR_GR_LEAVE_GAME_SERVER,0L,&LeaveGameServer,sizeof(LeaveGameServer));

  00068	6a 00		 push	 0
  0006a	68 e0 00 00 00	 push	 224			; 000000e0H
  0006f	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _LeaveGameServer$[ebp]
  00075	50		 push	 eax
  00076	6a 00		 push	 0
  00078	68 c9 00 00 00	 push	 201			; 000000c9H
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  00080	51		 push	 ecx
  00081	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  00093	8b 00		 mov	 eax, DWORD PTR [eax]
  00095	52		 push	 edx
  00096	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00099	ff d1		 call	 ecx
  0009b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 9135 : 
; 9136 : 	return true;

  0009e	b0 01		 mov	 al, 1

; 9137 : }

  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a6	33 cd		 xor	 ecx, ebp
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 0c 00	 ret	 12			; 0000000cH
?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ENDP ; CAttemperEngineSink::PerformUnlockScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PerformDistribute@CAttemperEngineSink@@IAE_NXZ
_TEXT	SEGMENT
tv379 = -304						; size = 4
tv377 = -302						; size = 2
tv375 = -302						; size = 2
tv362 = -300						; size = 4
tv327 = -300						; size = 4
tv312 = -300						; size = 4
tv300 = -300						; size = 4
tv378 = -296						; size = 4
tv376 = -296						; size = 4
tv374 = -296						; size = 4
tv373 = -296						; size = 4
tv372 = -296						; size = 4
tv371 = -296						; size = 4
tv370 = -296						; size = 4
tv368 = -296						; size = 4
tv367 = -296						; size = 4
tv365 = -296						; size = 4
tv363 = -296						; size = 4
tv361 = -296						; size = 4
tv360 = -296						; size = 4
tv358 = -296						; size = 4
tv147 = -296						; size = 4
tv366 = -294						; size = 2
tv364 = -294						; size = 2
tv359 = -294						; size = 2
tv74 = -294						; size = 2
tv369 = -293						; size = 1
_wTableID$2 = -228					; size = 2
_nIndex$3 = -224					; size = 4
_pIServerUserItem$4 = -220				; size = 4
_wChairID$5 = -216					; size = 2
_nIndex$6 = -212					; size = 4
_nSitFailedIndex$7 = -208				; size = 4
_bSitSuccess$8 = -201					; size = 1
_pTableFrame$9 = -200					; size = 4
_i$10 = -196						; size = 2
_pCurrTableFrame$11 = -192				; size = 4
_wDistributeCount$12 = -188				; size = 2
_wChairCount$13 = -184					; size = 2
_wRandCount$14 = -180					; size = 2
_DistributeInfoArray$15 = -176				; size = 20
_szMessage$16 = -156					; size = 128
_strMessage$17 = -28					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?PerformDistribute@CAttemperEngineSink@@IAE_NXZ PROC	; CAttemperEngineSink::PerformDistribute, COMDAT
; _this$ = ecx

; 9980 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 9981 : 	//人数校验
; 9982 : 	if(m_DistributeManage.GetCount()<m_pGameServiceOption->wMinDistributeUser) return false;

  00035	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0003b	0f b7 b1 92 00
	00 00		 movzx	 esi, WORD PTR [ecx+146]
  00042	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  0004b	e8 00 00 00 00	 call	 ?GetCount@CDistributeManager@@QAEGXZ ; CDistributeManager::GetCount
  00050	0f b7 d0	 movzx	 edx, ax
  00053	3b d6		 cmp	 edx, esi
  00055	7d 07		 jge	 SHORT $LN2@PerformDis
  00057	32 c0		 xor	 al, al
  00059	e9 ce 06 00 00	 jmp	 $LN1@PerformDis
$LN2@PerformDis:

; 9983 : 
; 9984 : 	//分配用户
; 9985 : 	while(true)

  0005e	b8 01 00 00 00	 mov	 eax, 1
  00063	85 c0		 test	 eax, eax
  00065	0f 84 bf 06 00
	00		 je	 $LN3@PerformDis

; 9986 : 	{
; 9987 : 		CString strMessage;

  0006b	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 9988 : 		TCHAR szMessage[128]={0};		

  0007b	68 80 00 00 00	 push	 128			; 00000080H
  00080	6a 00		 push	 0
  00082	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$16[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 _memset
  0008e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9989 : 
; 9990 : 		try

  00091	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 9991 : 		{
; 9992 : 			//人数校验
; 9993 : 			if(m_DistributeManage.GetCount()<m_pGameServiceOption->wMinPartakeGameUser) break;

  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  0009e	e8 00 00 00 00	 call	 ?GetCount@CDistributeManager@@QAEGXZ ; CDistributeManager::GetCount
  000a3	66 89 85 da fe
	ff ff		 mov	 WORD PTR tv74[ebp], ax
  000aa	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000b0	0f b7 91 98 00
	00 00		 movzx	 edx, WORD PTR [ecx+152]
  000b7	0f b7 85 da fe
	ff ff		 movzx	 eax, WORD PTR tv74[ebp]
  000be	3b c2		 cmp	 eax, edx
  000c0	7d 1c		 jge	 SHORT $LN17@PerformDis
  000c2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c9	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000d2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d9	e9 4c 06 00 00	 jmp	 $LN3@PerformDis
$LN17@PerformDis:

; 9994 : 
; 9995 : 			//变量定义
; 9996 : 			CDistributeInfoArray DistributeInfoArray;

  000de	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  000e4	e8 00 00 00 00	 call	 ??0?$CWHArray@UtagDistributeInfo@@ABU1@@@QAE@XZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::CWHArray<tagDistributeInfo,tagDistributeInfo const &>
  000e9	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv358[ebp], eax
  000ef	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 9997 : 
; 9998 : 			strMessage.Append(TEXT("分配用户1\r\n"));

  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OHDHAOMF@?$LH?V?E?d?S?C?$LL?$KH1?$AN?6@
  000f8	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z

; 9999 : 
; 10000: 			//获取用户
; 10001: 			srand(GetTickCount());

  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00107	50		 push	 eax
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__srand
  0010e	83 c4 04	 add	 esp, 4

; 10002: 			WORD wRandCount = __max(m_pGameServiceOption->wMaxPartakeGameUser-m_pGameServiceOption->wMinPartakeGameUser+1,1);

  00111	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00117	0f b7 91 98 00
	00 00		 movzx	 edx, WORD PTR [ecx+152]
  0011e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00121	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00124	0f b7 81 9a 00
	00 00		 movzx	 eax, WORD PTR [ecx+154]
  0012b	2b c2		 sub	 eax, edx
  0012d	83 c0 01	 add	 eax, 1
  00130	83 f8 01	 cmp	 eax, 1
  00133	7e 27		 jle	 SHORT $LN29@PerformDis
  00135	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0013b	0f b7 82 98 00
	00 00		 movzx	 eax, WORD PTR [edx+152]
  00142	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00145	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00148	0f b7 8a 9a 00
	00 00		 movzx	 ecx, WORD PTR [edx+154]
  0014f	2b c8		 sub	 ecx, eax
  00151	83 c1 01	 add	 ecx, 1
  00154	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  0015a	eb 0a		 jmp	 SHORT $LN30@PerformDis
$LN29@PerformDis:
  0015c	c7 85 d8 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv147[ebp], 1
$LN30@PerformDis:
  00166	66 8b 95 d8 fe
	ff ff		 mov	 dx, WORD PTR tv147[ebp]
  0016d	66 89 95 4c ff
	ff ff		 mov	 WORD PTR _wRandCount$14[ebp], dx

; 10003: 			WORD wChairCount = m_pGameServiceOption->wMinPartakeGameUser+rand()%wRandCount;

  00174	0f b7 b5 4c ff
	ff ff		 movzx	 esi, WORD PTR _wRandCount$14[ebp]
  0017b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00181	99		 cdq
  00182	f7 fe		 idiv	 esi
  00184	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00187	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0018a	0f b7 81 98 00
	00 00		 movzx	 eax, WORD PTR [ecx+152]
  00191	03 c2		 add	 eax, edx
  00193	66 89 85 48 ff
	ff ff		 mov	 WORD PTR _wChairCount$13[ebp], ax

; 10004: 			WORD wDistributeCount = m_DistributeManage.PerformDistribute(DistributeInfoArray,wChairCount);

  0019a	0f b7 85 48 ff
	ff ff		 movzx	 eax, WORD PTR _wChairCount$13[ebp]
  001a1	50		 push	 eax
  001a2	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  001a8	51		 push	 ecx
  001a9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  001b2	e8 00 00 00 00	 call	 ?PerformDistribute@CDistributeManager@@QAEGAAV?$CWHArray@UtagDistributeInfo@@ABU1@@@G@Z ; CDistributeManager::PerformDistribute
  001b7	66 89 85 da fe
	ff ff		 mov	 WORD PTR tv359[ebp], ax
  001be	66 8b 95 da fe
	ff ff		 mov	 dx, WORD PTR tv359[ebp]
  001c5	66 89 95 44 ff
	ff ff		 mov	 WORD PTR _wDistributeCount$12[ebp], dx

; 10005: 			if(wDistributeCount < wChairCount) break;

  001cc	0f b7 85 48 ff
	ff ff		 movzx	 eax, WORD PTR _wChairCount$13[ebp]
  001d3	0f b7 8d 44 ff
	ff ff		 movzx	 ecx, WORD PTR _wDistributeCount$12[ebp]
  001da	3b c8		 cmp	 ecx, eax
  001dc	7d 2b		 jge	 SHORT $LN18@PerformDis
  001de	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  001e2	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  001e8	e8 00 00 00 00	 call	 ??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
  001ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001f4	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  001f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00204	e9 21 05 00 00	 jmp	 $LN3@PerformDis
$LN18@PerformDis:

; 10006: 
; 10007: 			strMessage.Append(TEXT("分配用户2\r\n"));

  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PFICKBCL@?$LH?V?E?d?S?C?$LL?$KH2?$AN?6@
  0020e	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  00211	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z

; 10008: 
; 10009: 			//寻找位置
; 10010: 			CTableFrame * pCurrTableFrame=NULL;

  00217	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pCurrTableFrame$11[ebp], 0

; 10011: 			for (WORD i=0;i<m_TableFrameArray.GetCount();i++)

  00221	33 c0		 xor	 eax, eax
  00223	66 89 85 3c ff
	ff ff		 mov	 WORD PTR _i$10[ebp], ax
  0022a	eb 12		 jmp	 SHORT $LN6@PerformDis
$LN4@PerformDis:
  0022c	66 8b 85 3c ff
	ff ff		 mov	 ax, WORD PTR _i$10[ebp]
  00233	66 83 c0 01	 add	 ax, 1
  00237	66 89 85 3c ff
	ff ff		 mov	 WORD PTR _i$10[ebp], ax
$LN6@PerformDis:
  0023e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00241	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00247	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  0024c	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv360[ebp], eax
  00252	0f b7 85 3c ff
	ff ff		 movzx	 eax, WORD PTR _i$10[ebp]
  00259	3b 85 d8 fe ff
	ff		 cmp	 eax, DWORD PTR tv360[ebp]
  0025f	0f 8d a5 00 00
	00		 jge	 $LN5@PerformDis

; 10012: 			{
; 10013: 				//获取对象
; 10014: 				ASSERT(m_TableFrameArray[i]!=NULL);

  00265	0f b7 85 3c ff
	ff ff		 movzx	 eax, WORD PTR _i$10[ebp]
  0026c	50		 push	 eax
  0026d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00270	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00276	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0027b	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv361[ebp], eax
  00281	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv361[ebp]
  00287	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0028a	75 24		 jne	 SHORT $LN31@PerformDis
  0028c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??PerformDistribute@CAttemperEngineSink@@IAE_NXZ@4JA
  00292	83 c2 22	 add	 edx, 34			; 00000022H
  00295	52		 push	 edx
  00296	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0029b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002a0	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv362[ebp], eax
  002a6	83 bd d4 fe ff
	ff 00		 cmp	 DWORD PTR tv362[ebp], 0
  002ad	74 01		 je	 SHORT $LN31@PerformDis
  002af	cc		 int	 3
$LN31@PerformDis:

; 10015: 				CTableFrame * pTableFrame=m_TableFrameArray[i];

  002b0	0f b7 85 3c ff
	ff ff		 movzx	 eax, WORD PTR _i$10[ebp]
  002b7	50		 push	 eax
  002b8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002bb	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  002c1	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  002c6	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv363[ebp], eax
  002cc	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv363[ebp]
  002d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d4	89 95 38 ff ff
	ff		 mov	 DWORD PTR _pTableFrame$9[ebp], edx

; 10016: 
; 10017: 				//状态判断
; 10018: 				if (pTableFrame->GetSitUserCount()==0)

  002da	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$9[ebp]
  002e0	e8 00 00 00 00	 call	 ?GetSitUserCount@CTableFrame@@QAEGXZ ; CTableFrame::GetSitUserCount
  002e5	66 89 85 da fe
	ff ff		 mov	 WORD PTR tv364[ebp], ax
  002ec	0f b7 85 da fe
	ff ff		 movzx	 eax, WORD PTR tv364[ebp]
  002f3	85 c0		 test	 eax, eax
  002f5	75 0e		 jne	 SHORT $LN19@PerformDis

; 10019: 				{
; 10020: 					pCurrTableFrame=pTableFrame;

  002f7	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$9[ebp]
  002fd	89 85 40 ff ff
	ff		 mov	 DWORD PTR _pCurrTableFrame$11[ebp], eax

; 10021: 					break;

  00303	eb 05		 jmp	 SHORT $LN5@PerformDis
$LN19@PerformDis:

; 10022: 				}
; 10023: 			}

  00305	e9 22 ff ff ff	 jmp	 $LN4@PerformDis
$LN5@PerformDis:

; 10024: 
; 10025: 			strMessage.Append(TEXT("分配用户3\r\n"));

  0030a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ENDOMGEO@?$LH?V?E?d?S?C?$LL?$KH3?$AN?6@
  0030f	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  00312	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z

; 10026: 
; 10027: 			//桌子判断
; 10028: 			if(pCurrTableFrame==NULL) break;

  00318	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR _pCurrTableFrame$11[ebp], 0
  0031f	75 2b		 jne	 SHORT $LN20@PerformDis
  00321	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00325	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  0032b	e8 00 00 00 00	 call	 ??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
  00330	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00337	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  0033a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00340	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00347	e9 de 03 00 00	 jmp	 $LN3@PerformDis
$LN20@PerformDis:

; 10029: 
; 10030: 			//玩家坐下
; 10031: 			bool bSitSuccess=true;

  0034c	c6 85 37 ff ff
	ff 01		 mov	 BYTE PTR _bSitSuccess$8[ebp], 1

; 10032: 			INT_PTR nSitFailedIndex=INVALID_CHAIR;

  00353	c7 85 30 ff ff
	ff ff ff 00 00	 mov	 DWORD PTR _nSitFailedIndex$7[ebp], 65535 ; 0000ffffH

; 10033: 			for(INT_PTR nIndex=0;nIndex<DistributeInfoArray.GetCount();nIndex++)

  0035d	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _nIndex$6[ebp], 0
  00367	eb 0f		 jmp	 SHORT $LN9@PerformDis
$LN7@PerformDis:
  00369	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$6[ebp]
  0036f	83 c0 01	 add	 eax, 1
  00372	89 85 2c ff ff
	ff		 mov	 DWORD PTR _nIndex$6[ebp], eax
$LN9@PerformDis:
  00378	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  0037e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  00383	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv365[ebp], eax
  00389	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$6[ebp]
  0038f	3b 85 d8 fe ff
	ff		 cmp	 eax, DWORD PTR tv365[ebp]
  00395	0f 8d 13 01 00
	00		 jge	 $LN8@PerformDis

; 10034: 			{
; 10035: 				//变量定义
; 10036: 				WORD wChairID=pCurrTableFrame->GetNullChairID();

  0039b	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pCurrTableFrame$11[ebp]
  003a1	8b 10		 mov	 edx, DWORD PTR [eax]
  003a3	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _pCurrTableFrame$11[ebp]
  003a9	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  003af	ff d0		 call	 eax
  003b1	66 89 85 da fe
	ff ff		 mov	 WORD PTR tv366[ebp], ax
  003b8	66 8b 8d da fe
	ff ff		 mov	 cx, WORD PTR tv366[ebp]
  003bf	66 89 8d 28 ff
	ff ff		 mov	 WORD PTR _wChairID$5[ebp], cx

; 10037: 
; 10038: 				//分配用户
; 10039: 				if (wChairID!=INVALID_CHAIR)

  003c6	0f b7 85 28 ff
	ff ff		 movzx	 eax, WORD PTR _wChairID$5[ebp]
  003cd	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  003d2	0f 84 d1 00 00
	00		 je	 $LN21@PerformDis

; 10040: 				{
; 10041: 					//获取用户
; 10042: 					IServerUserItem * pIServerUserItem=DistributeInfoArray[nIndex].pIServerUserItem;

  003d8	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$6[ebp]
  003de	50		 push	 eax
  003df	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  003e5	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  003ea	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv367[ebp], eax
  003f0	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv367[ebp]
  003f6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  003f9	89 95 24 ff ff
	ff		 mov	 DWORD PTR _pIServerUserItem$4[ebp], edx

; 10043: 
; 10044: 					_sntprintf_s(szMessage,CountArray(szMessage),TEXT("分配用户4-%s\r\n"),pIServerUserItem->GetNickName());

  003ff	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  00405	8b 10		 mov	 edx, DWORD PTR [eax]
  00407	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$4[ebp]
  0040d	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00410	ff d0		 call	 eax
  00412	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv368[ebp], eax
  00418	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv368[ebp]
  0041e	51		 push	 ecx
  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CMOCDKCC@?$LH?V?E?d?S?C?$LL?$KH4?9?$CFs?$AN?6@
  00424	68 80 00 00 00	 push	 128			; 00000080H
  00429	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR _szMessage$16[ebp]
  0042f	52		 push	 edx
  00430	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00435	83 c4 10	 add	 esp, 16			; 00000010H

; 10045: 					strMessage.Append(szMessage);

  00438	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$16[ebp]
  0043e	50		 push	 eax
  0043f	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  00442	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z

; 10046: 
; 10047: 					//用户坐下
; 10048: 					if(pCurrTableFrame->PerformSitDownAction(wChairID,pIServerUserItem)==false)

  00448	6a 00		 push	 0
  0044a	6a 00		 push	 0
  0044c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  00452	50		 push	 eax
  00453	0f b7 8d 28 ff
	ff ff		 movzx	 ecx, WORD PTR _wChairID$5[ebp]
  0045a	51		 push	 ecx
  0045b	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _pCurrTableFrame$11[ebp]
  00461	8b 02		 mov	 eax, DWORD PTR [edx]
  00463	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _pCurrTableFrame$11[ebp]
  00469	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  0046f	ff d2		 call	 edx
  00471	88 85 db fe ff
	ff		 mov	 BYTE PTR tv369[ebp], al
  00477	0f b6 85 db fe
	ff ff		 movzx	 eax, BYTE PTR tv369[ebp]
  0047e	85 c0		 test	 eax, eax
  00480	75 27		 jne	 SHORT $LN21@PerformDis

; 10049: 					{
; 10050: 						strMessage.Format(TEXT("坐下失败！"));

  00482	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JCGJHCKC@?W?x?O?B?J?$KH?$LA?$NM?$KD?$KB@
  00487	8d 45 e4	 lea	 eax, DWORD PTR _strMessage$17[ebp]
  0048a	50		 push	 eax
  0048b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  00491	83 c4 08	 add	 esp, 8

; 10051: 						bSitSuccess=false;

  00494	c6 85 37 ff ff
	ff 00		 mov	 BYTE PTR _bSitSuccess$8[ebp], 0

; 10052: 						nSitFailedIndex=nIndex;

  0049b	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$6[ebp]
  004a1	89 85 30 ff ff
	ff		 mov	 DWORD PTR _nSitFailedIndex$7[ebp], eax

; 10053: 						break;

  004a7	eb 05		 jmp	 SHORT $LN8@PerformDis
$LN21@PerformDis:

; 10054: 					}					
; 10055: 				}
; 10056: 			}

  004a9	e9 bb fe ff ff	 jmp	 $LN7@PerformDis
$LN8@PerformDis:

; 10057: 
; 10058: 			//坐下结果
; 10059: 			if(bSitSuccess)

  004ae	0f b6 85 37 ff
	ff ff		 movzx	 eax, BYTE PTR _bSitSuccess$8[ebp]
  004b5	85 c0		 test	 eax, eax
  004b7	74 77		 je	 SHORT $LN23@PerformDis

; 10060: 			{
; 10061: 				strMessage.Append(TEXT("分配用户5"));

  004b9	68 00 00 00 00	 push	 OFFSET ??_C@_09FMIBEIGP@?$LH?V?E?d?S?C?$LL?$KH5@
  004be	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  004c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z
$LN10@PerformDis:

; 10062: 
; 10063: 				//移除结点
; 10064: 				while(DistributeInfoArray.GetCount()>0)

  004c7	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  004cd	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  004d2	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv370[ebp], eax
  004d8	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR tv370[ebp], 0
  004df	7e 3c		 jle	 SHORT $LN11@PerformDis

; 10065: 				{
; 10066: 					m_DistributeManage.RemoveDistributeNode((tagDistributeNode *)DistributeInfoArray[0].pPertainNode);

  004e1	6a 00		 push	 0
  004e3	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  004e9	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  004ee	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv371[ebp], eax
  004f4	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv371[ebp]
  004fa	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  004fd	51		 push	 ecx
  004fe	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00501	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  00507	e8 00 00 00 00	 call	 ?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z ; CDistributeManager::RemoveDistributeNode

; 10067: 					DistributeInfoArray.RemoveAt(0);

  0050c	6a 01		 push	 1
  0050e	6a 00		 push	 0
  00510	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  00516	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEXHH@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::RemoveAt

; 10068: 				}

  0051b	eb aa		 jmp	 SHORT $LN10@PerformDis
$LN11@PerformDis:

; 10069: 
; 10070: 				strMessage.Append(TEXT("分配用户6"));

  0051d	68 00 00 00 00	 push	 OFFSET ??_C@_09HHKMBLKM@?$LH?V?E?d?S?C?$LL?$KH6@
  00522	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  00525	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z

; 10071: 			}
; 10072: 			else

  0052b	e9 a9 01 00 00	 jmp	 $LN24@PerformDis
$LN23@PerformDis:

; 10073: 			{
; 10074: 				strMessage.Append(TEXT("分配用户7"));

  00530	68 00 00 00 00	 push	 OFFSET ??_C@_09GOLHCKON@?$LH?V?E?d?S?C?$LL?$KH7@
  00535	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  00538	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z

; 10075: 
; 10076: 				for(INT_PTR nIndex=0;nIndex<DistributeInfoArray.GetCount();nIndex++)

  0053e	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _nIndex$3[ebp], 0
  00548	eb 0f		 jmp	 SHORT $LN14@PerformDis
$LN12@PerformDis:
  0054a	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$3[ebp]
  00550	83 c0 01	 add	 eax, 1
  00553	89 85 20 ff ff
	ff		 mov	 DWORD PTR _nIndex$3[ebp], eax
$LN14@PerformDis:
  00559	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  0055f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@UtagDistributeInfo@@ABU1@@@QBEHXZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::GetCount
  00564	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv372[ebp], eax
  0056a	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$3[ebp]
  00570	3b 85 d8 fe ff
	ff		 cmp	 eax, DWORD PTR tv372[ebp]
  00576	0f 8d 4f 01 00
	00		 jge	 $LN13@PerformDis

; 10077: 				{
; 10078: 					if(nSitFailedIndex==nIndex)

  0057c	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _nSitFailedIndex$7[ebp]
  00582	3b 85 20 ff ff
	ff		 cmp	 eax, DWORD PTR _nIndex$3[ebp]
  00588	75 35		 jne	 SHORT $LN25@PerformDis

; 10079: 					{
; 10080: 						m_DistributeManage.RemoveDistributeNode((tagDistributeNode *)DistributeInfoArray[nIndex].pPertainNode);

  0058a	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$3[ebp]
  00590	50		 push	 eax
  00591	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  00597	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  0059c	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv373[ebp], eax
  005a2	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv373[ebp]
  005a8	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  005ab	52		 push	 edx
  005ac	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005af	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  005b5	e8 00 00 00 00	 call	 ?RemoveDistributeNode@CDistributeManager@@QAEXPAUtagDistributeNode@@@Z ; CDistributeManager::RemoveDistributeNode

; 10081: 					}
; 10082: 					else

  005ba	e9 07 01 00 00	 jmp	 $LN26@PerformDis
$LN25@PerformDis:

; 10083: 					{
; 10084: 						//用户起立
; 10085: 						if (DistributeInfoArray[nIndex].pIServerUserItem->GetTableID()!=INVALID_TABLE)

  005bf	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$3[ebp]
  005c5	50		 push	 eax
  005c6	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  005cc	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  005d1	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv374[ebp], eax
  005d7	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv374[ebp]
  005dd	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  005e0	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv300[ebp], edx
  005e6	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR tv300[ebp]
  005ec	8b 10		 mov	 edx, DWORD PTR [eax]
  005ee	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv300[ebp]
  005f4	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  005f7	ff d0		 call	 eax
  005f9	66 89 85 d2 fe
	ff ff		 mov	 WORD PTR tv375[ebp], ax
  00600	0f b7 8d d2 fe
	ff ff		 movzx	 ecx, WORD PTR tv375[ebp]
  00607	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0060d	0f 84 b3 00 00
	00		 je	 $LN26@PerformDis

; 10086: 						{
; 10087: 							WORD wTableID=DistributeInfoArray[nIndex].pIServerUserItem->GetTableID();

  00613	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$3[ebp]
  00619	50		 push	 eax
  0061a	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  00620	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  00625	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv376[ebp], eax
  0062b	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv376[ebp]
  00631	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00634	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv312[ebp], edx
  0063a	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR tv312[ebp]
  00640	8b 10		 mov	 edx, DWORD PTR [eax]
  00642	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv312[ebp]
  00648	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0064b	ff d0		 call	 eax
  0064d	66 89 85 d2 fe
	ff ff		 mov	 WORD PTR tv377[ebp], ax
  00654	66 8b 8d d2 fe
	ff ff		 mov	 cx, WORD PTR tv377[ebp]
  0065b	66 89 8d 1c ff
	ff ff		 mov	 WORD PTR _wTableID$2[ebp], cx

; 10088: 							m_TableFrameArray[wTableID]->PerformStandUpAction(DistributeInfoArray[nIndex].pIServerUserItem);

  00662	0f b7 85 1c ff
	ff ff		 movzx	 eax, WORD PTR _wTableID$2[ebp]
  00669	50		 push	 eax
  0066a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0066d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00673	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00678	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv378[ebp], eax
  0067e	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv378[ebp]
  00684	8b 11		 mov	 edx, DWORD PTR [ecx]
  00686	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv327[ebp], edx
  0068c	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _nIndex$3[ebp]
  00692	50		 push	 eax
  00693	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  00699	e8 00 00 00 00	 call	 ??A?$CWHArray@UtagDistributeInfo@@ABU1@@@QAEAAUtagDistributeInfo@@H@Z ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::operator[]
  0069e	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv379[ebp], eax
  006a4	6a 00		 push	 0
  006a6	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR tv379[ebp]
  006ac	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  006af	52		 push	 edx
  006b0	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR tv327[ebp]
  006b6	8b 10		 mov	 edx, DWORD PTR [eax]
  006b8	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv327[ebp]
  006be	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  006c4	ff d0		 call	 eax
$LN26@PerformDis:

; 10089: 						}
; 10090: 					}
; 10091: 				}

  006c6	e9 7f fe ff ff	 jmp	 $LN12@PerformDis
$LN13@PerformDis:

; 10092: 
; 10093: 				strMessage.Append(TEXT("分配用户8"));

  006cb	68 00 00 00 00	 push	 OFFSET ??_C@_09OJCPDGCC@?$LH?V?E?d?S?C?$LL?$KH8@
  006d0	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  006d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXPBD@Z
$LN24@PerformDis:

; 10094: 			}	
; 10095: 		}catch(...)

  006d9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  006dd	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  006e3	e8 00 00 00 00	 call	 ??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
  006e8	eb 1b		 jmp	 SHORT $LN32@PerformDis
__catch$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$0:

; 10096: 		{
; 10097: 			CTraceService::TraceString(strMessage,TraceLevel_Exception);

  006ea	6a 03		 push	 3
  006ec	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  006ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  006f5	50		 push	 eax
  006f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  006fc	83 c4 08	 add	 esp, 8

; 10098: 		}

  006ff	b8 00 00 00 00	 mov	 eax, $LN37@PerformDis
  00704	c3		 ret	 0
$LN32@PerformDis:
  00705	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0070c	eb 07		 jmp	 SHORT __tryend$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$1
$LN37@PerformDis:
  0070e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$1:

; 10099: 	}

  00715	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0071c	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  0071f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00725	e9 34 f9 ff ff	 jmp	 $LN2@PerformDis
$LN3@PerformDis:

; 10100: 
; 10101: 	return true;

  0072a	b0 01		 mov	 al, 1
$LN1@PerformDis:

; 10102: }

  0072c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0072f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00736	59		 pop	 ecx
  00737	5f		 pop	 edi
  00738	5e		 pop	 esi
  00739	5b		 pop	 ebx
  0073a	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0073d	33 cd		 xor	 ecx, ebp
  0073f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00744	8b e5		 mov	 esp, ebp
  00746	5d		 pop	 ebp
  00747	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$2:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _strMessage$17[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ$3:
  00009	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _DistributeInfoArray$15[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1?$CWHArray@UtagDistributeInfo@@ABU1@@@UAE@XZ ; CWHArray<tagDistributeInfo,tagDistributeInfo const &>::~CWHArray<tagDistributeInfo,tagDistributeInfo const &>
__ehhandler$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a cc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-308]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PerformDistribute@CAttemperEngineSink@@IAE_NXZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PerformDistribute@CAttemperEngineSink@@IAE_NXZ ENDP	; CAttemperEngineSink::PerformDistribute
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventUserLogout@CAttemperEngineSink@@IAEXPAUIServerUserItem@@K@Z
_TEXT	SEGMENT
_UserLeave$1 = -240					; size = 4
_pUserTaskEntry$ = -236					; size = 4
_LeaveGameServer$ = -232				; size = 224
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_dwLeaveReason$ = 12					; size = 4
?OnEventUserLogout@CAttemperEngineSink@@IAEXPAUIServerUserItem@@K@Z PROC ; CAttemperEngineSink::OnEventUserLogout, COMDAT
; _this$ = ecx

; 9027 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 9028 : 	//变量定义
; 9029 : 	DBR_GR_LeaveGameServer LeaveGameServer;
; 9030 : 	ZeroMemory(&LeaveGameServer,sizeof(LeaveGameServer));

  00019	68 e0 00 00 00	 push	 224			; 000000e0H
  0001e	6a 00		 push	 0
  00020	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _LeaveGameServer$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9031 : 
; 9032 : 	//提取成绩
; 9033 : 	pIServerUserItem->QueryRecordInfo(LeaveGameServer.RecordInfo);

  0002f	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _LeaveGameServer$[ebp+24]
  00035	50		 push	 eax
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0003e	8b 82 f4 00 00
	00		 mov	 eax, DWORD PTR [edx+244]
  00044	ff d0		 call	 eax

; 9034 : 	pIServerUserItem->DistillVariation(LeaveGameServer.VariationInfo);

  00046	8d 45 80	 lea	 eax, DWORD PTR _LeaveGameServer$[ebp+104]
  00049	50		 push	 eax
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0004d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00052	8b 82 f8 00 00
	00		 mov	 eax, DWORD PTR [edx+248]
  00058	ff d0		 call	 eax

; 9035 : 
; 9036 :     //用户信息
; 9037 : 	LeaveGameServer.dwLeaveReason=dwLeaveReason;

  0005a	8b 45 0c	 mov	 eax, DWORD PTR _dwLeaveReason$[ebp]
  0005d	89 85 20 ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp+8], eax

; 9038 : 	LeaveGameServer.dwUserID=pIServerUserItem->GetUserID();

  00063	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00066	8b 10		 mov	 edx, DWORD PTR [eax]
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0006b	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0006e	ff d0		 call	 eax
  00070	89 85 18 ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp], eax

; 9039 : 	LeaveGameServer.dwInoutIndex=pIServerUserItem->GetInoutIndex();

  00076	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00079	8b 10		 mov	 edx, DWORD PTR [eax]
  0007b	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007e	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00081	ff d0		 call	 eax
  00083	89 85 1c ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp+4], eax

; 9040 : 	LeaveGameServer.dwOnLineTimeCount=(DWORD)(time(NULL))-pIServerUserItem->GetLogonTime();

  00089	6a 00		 push	 0
  0008b	e8 00 00 00 00	 call	 _time
  00090	83 c4 04	 add	 esp, 4
  00093	8b f0		 mov	 esi, eax
  00095	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00098	8b 10		 mov	 edx, DWORD PTR [eax]
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0009d	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000a0	ff d0		 call	 eax
  000a2	2b f0		 sub	 esi, eax
  000a4	89 b5 24 ff ff
	ff		 mov	 DWORD PTR _LeaveGameServer$[ebp+12], esi

; 9041 : 
; 9042 : 	//调整分数
; 9043 : 	if(pIServerUserItem->IsAndroidUser()==true)

  000aa	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000b2	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  000b8	ff d0		 call	 eax
  000ba	0f b6 c8	 movzx	 ecx, al
  000bd	83 f9 01	 cmp	 ecx, 1
  000c0	75 20		 jne	 SHORT $LN2@OnEventUse

; 9044 : 	{
; 9045 : 		LeaveGameServer.VariationInfo.lScore=0;

  000c2	0f 57 c0	 xorps	 xmm0, xmm0
  000c5	66 0f 13 45 80	 movlpd	 QWORD PTR _LeaveGameServer$[ebp+104], xmm0

; 9046 : 		LeaveGameServer.VariationInfo.lGrade=0;

  000ca	0f 57 c0	 xorps	 xmm0, xmm0
  000cd	66 0f 13 45 88	 movlpd	 QWORD PTR _LeaveGameServer$[ebp+112], xmm0

; 9047 : 		LeaveGameServer.VariationInfo.lInsure=0;

  000d2	0f 57 c0	 xorps	 xmm0, xmm0
  000d5	66 0f 13 45 90	 movlpd	 QWORD PTR _LeaveGameServer$[ebp+120], xmm0

; 9048 : 		LeaveGameServer.VariationInfo.lRevenue=0;

  000da	0f 57 c0	 xorps	 xmm0, xmm0
  000dd	66 0f 13 45 98	 movlpd	 QWORD PTR _LeaveGameServer$[ebp+128], xmm0
$LN2@OnEventUse:

; 9049 : 	}
; 9050 : 
; 9051 : 	//连接信息
; 9052 : 	LeaveGameServer.dwClientAddr=pIServerUserItem->GetClientAddr();

  000e2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000e5	8b 10		 mov	 edx, DWORD PTR [eax]
  000e7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ea	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000ed	ff d0		 call	 eax
  000ef	89 45 d0	 mov	 DWORD PTR _LeaveGameServer$[ebp+184], eax

; 9053 : 	lstrcpyn(LeaveGameServer.szMachineID,pIServerUserItem->GetMachineID(),CountArray(LeaveGameServer.szMachineID));

  000f2	6a 21		 push	 33			; 00000021H
  000f4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f7	8b 10		 mov	 edx, DWORD PTR [eax]
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000fc	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000ff	ff d0		 call	 eax
  00101	50		 push	 eax
  00102	8d 4d d4	 lea	 ecx, DWORD PTR _LeaveGameServer$[ebp+188]
  00105	51		 push	 ecx
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 9054 : 
; 9055 : 	//是否为约战类型
; 9056 : 	if(m_bHasPersonalRoomService)

  0010c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	0f b6 88 b9 00
	00 00		 movzx	 ecx, BYTE PTR [eax+185]
  00116	85 c9		 test	 ecx, ecx
  00118	74 09		 je	 SHORT $LN3@OnEventUse

; 9057 : 	{
; 9058 : 		LeaveGameServer.cbIsPersonalRoom = 1;

  0011a	c6 85 28 ff ff
	ff 01		 mov	 BYTE PTR _LeaveGameServer$[ebp+16], 1

; 9059 : 	}
; 9060 : 	else

  00121	eb 07		 jmp	 SHORT $LN4@OnEventUse
$LN3@OnEventUse:

; 9061 : 	{
; 9062 : 		LeaveGameServer.cbIsPersonalRoom = 0;

  00123	c6 85 28 ff ff
	ff 00		 mov	 BYTE PTR _LeaveGameServer$[ebp+16], 0
$LN4@OnEventUse:

; 9063 : 	}
; 9064 : 
; 9065 : 	//投递请求
; 9066 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_LEAVE_GAME_SERVER,0L,&LeaveGameServer,sizeof(LeaveGameServer), TRUE);

  0012a	6a 01		 push	 1
  0012c	68 e0 00 00 00	 push	 224			; 000000e0H
  00131	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _LeaveGameServer$[ebp]
  00137	50		 push	 eax
  00138	6a 00		 push	 0
  0013a	68 c9 00 00 00	 push	 201			; 000000c9H
  0013f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00142	8b 11		 mov	 edx, DWORD PTR [ecx]
  00144	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00147	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0014a	ff d0		 call	 eax
  0014c	50		 push	 eax
  0014d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  00156	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00159	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0015f	8b 12		 mov	 edx, DWORD PTR [edx]
  00161	51		 push	 ecx
  00162	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00165	ff d0		 call	 eax
  00167	83 c4 1c	 add	 esp, 28			; 0000001cH

; 9067 : 
; 9068 : 	//查找对象
; 9069 : 	tagUserTaskEntry * pUserTaskEntry=m_UserTaskManager.GetUserTaskEntry(pIServerUserItem->GetUserID(),TASK_STATUS_UNFINISH|TASK_STATUS_FAILED); 

  0016a	6a 02		 push	 2
  0016c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0016f	8b 10		 mov	 edx, DWORD PTR [eax]
  00171	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00174	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00177	ff d0		 call	 eax
  00179	50		 push	 eax
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00183	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00186	8b 82 bc 3e 02
	00		 mov	 eax, DWORD PTR [edx+147132]
  0018c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0018f	ff d2		 call	 edx
  00191	89 85 14 ff ff
	ff		 mov	 DWORD PTR _pUserTaskEntry$[ebp], eax

; 9070 : 
; 9071 : 	//推进任务
; 9072 : 	if(pUserTaskEntry!=NULL)

  00197	83 bd 14 ff ff
	ff 00		 cmp	 DWORD PTR _pUserTaskEntry$[ebp], 0
  0019e	74 1f		 je	 SHORT $LN5@OnEventUse

; 9073 : 	{
; 9074 : 		PerformTaskProgress(pIServerUserItem,pUserTaskEntry,LeaveGameServer.VariationInfo.dwWinCount,LeaveGameServer.VariationInfo.dwLostCount,LeaveGameServer.VariationInfo.dwDrawCount);

  001a0	8b 45 a8	 mov	 eax, DWORD PTR _LeaveGameServer$[ebp+144]
  001a3	50		 push	 eax
  001a4	8b 4d a4	 mov	 ecx, DWORD PTR _LeaveGameServer$[ebp+140]
  001a7	51		 push	 ecx
  001a8	8b 55 a0	 mov	 edx, DWORD PTR _LeaveGameServer$[ebp+136]
  001ab	52		 push	 edx
  001ac	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _pUserTaskEntry$[ebp]
  001b2	50		 push	 eax
  001b3	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b6	51		 push	 ecx
  001b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	e8 00 00 00 00	 call	 ?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z ; CAttemperEngineSink::PerformTaskProgress
$LN5@OnEventUse:

; 9075 : 	}
; 9076 : 	
; 9077 : 	//汇总用户
; 9078 : 	if (m_bCollectUser==true)

  001bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c2	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  001c6	83 f9 01	 cmp	 ecx, 1
  001c9	75 4c		 jne	 SHORT $LN6@OnEventUse

; 9079 : 	{
; 9080 : 		//变量定义
; 9081 : 		CMD_CS_C_UserLeave UserLeave;
; 9082 : 		ZeroMemory(&UserLeave,sizeof(UserLeave));

  001cb	6a 04		 push	 4
  001cd	6a 00		 push	 0
  001cf	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _UserLeave$1[ebp]
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 _memset
  001db	83 c4 0c	 add	 esp, 12			; 0000000cH

; 9083 : 
; 9084 : 		//设置变量
; 9085 : 		UserLeave.dwUserID=pIServerUserItem->GetUserID();

  001de	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e6	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  001e9	ff d0		 call	 eax
  001eb	89 85 10 ff ff
	ff		 mov	 DWORD PTR _UserLeave$1[ebp], eax

; 9086 : 
; 9087 : 		//发送消息
; 9088 : 		m_pITCPSocketService->SendData(MDM_CS_USER_COLLECT,SUB_CS_C_USER_LEAVE,&UserLeave,sizeof(UserLeave));

  001f1	6a 04		 push	 4
  001f3	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _UserLeave$1[ebp]
  001f9	50		 push	 eax
  001fa	6a 02		 push	 2
  001fc	6a 03		 push	 3
  001fe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00201	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00207	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020a	8b 12		 mov	 edx, DWORD PTR [edx]
  0020c	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00212	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00215	ff d0		 call	 eax
$LN6@OnEventUse:

; 9089 : 	}
; 9090 : 
; 9091 : 	//玩家退赛
; 9092 : 	if (m_pIMatchServiceManager!=NULL) 

  00217	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021a	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00221	74 26		 je	 SHORT $LN7@OnEventUse

; 9093 : 	{
; 9094 : 		m_pIMatchServiceManager->OnEventUserQuitMatch(pIServerUserItem, 0);

  00223	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00228	6a 00		 push	 0
  0022a	6a 00		 push	 0
  0022c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0022f	50		 push	 eax
  00230	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00233	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  00239	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0023c	8b 12		 mov	 edx, DWORD PTR [edx]
  0023e	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00244	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00247	ff d0		 call	 eax
$LN7@OnEventUse:

; 9095 : 	}
; 9096 : 
; 9097 : 	//删除分组
; 9098 : 	DeleteDistribute(pIServerUserItem);

  00249	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0024c	50		 push	 eax
  0024d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	83 c1 04	 add	 ecx, 4
  00253	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00256	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00259	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  0025c	ff d2		 call	 edx

; 9099 : 
; 9100 : 	//移除任务
; 9101 : 	m_UserTaskManager.RemoveUserTask(pIServerUserItem->GetUserID());

  0025e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00261	8b 10		 mov	 edx, DWORD PTR [eax]
  00263	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00266	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00269	ff d0		 call	 eax
  0026b	50		 push	 eax
  0026c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026f	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00275	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00278	8b 82 bc 3e 02
	00		 mov	 eax, DWORD PTR [edx+147132]
  0027e	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00281	ff d2		 call	 edx

; 9102 : 
; 9103 : 	//删除用户
; 9104 : 	m_ServerUserManager.DeleteUserItem(pIServerUserItem);

  00283	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00286	50		 push	 eax
  00287	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0028a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00290	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00293	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00299	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0029c	ff d2		 call	 edx

; 9105 : 
; 9106 : 	//登出通知
; 9107 : 	if(m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventUserLogout(pIServerUserItem);

  0029e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a1	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  002a8	74 1d		 je	 SHORT $LN1@OnEventUse
  002aa	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002ad	50		 push	 eax
  002ae	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  002b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ba	8b 12		 mov	 edx, DWORD PTR [edx]
  002bc	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  002c2	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  002c5	ff d0		 call	 eax
$LN1@OnEventUse:

; 9108 : 
; 9109 : 	return;
; 9110 : }

  002c7	5f		 pop	 edi
  002c8	5e		 pop	 esi
  002c9	5b		 pop	 ebx
  002ca	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002cd	33 cd		 xor	 ecx, ebp
  002cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002d4	8b e5		 mov	 esp, ebp
  002d6	5d		 pop	 ebp
  002d7	c2 08 00	 ret	 8
?OnEventUserLogout@CAttemperEngineSink@@IAEXPAUIServerUserItem@@K@Z ENDP ; CAttemperEngineSink::OnEventUserLogout
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z
_TEXT	SEGMENT
tv705 = -6928						; size = 4
tv689 = -6928						; size = 4
tv649 = -6928						; size = 4
tv466 = -6928						; size = 4
tv460 = -6928						; size = 4
tv442 = -6928						; size = 4
tv306 = -6928						; size = 4
tv290 = -6928						; size = 4
tv601 = -6926						; size = 2
tv359 = -6926						; size = 2
tv246 = -6926						; size = 2
_wMobileUserRule$1 = -6412				; size = 2
_wSendSize$2 = -6408					; size = 2
_wHeadSize$3 = -6404					; size = 2
_pTableFrame$4 = -6400					; size = 4
_i$5 = -6396						; size = 2
_TableInfo$6 = -6392					; size = 3074
_pIServerUserItemSend$7 = -3316				; size = 4
_bSendAndroidFlag$8 = -3309				; size = 1
_wUserIndex$9 = -3308					; size = 2
_ConfigServer$10 = -3304				; size = 10
_szMessage$11 = -3292					; size = 128
_bHasUserTaskEntry$12 = -3163				; size = 1
_bHasTaskParameter$13 = -3162				; size = 1
_LogonFinish$14 = -3161					; size = 1
_pBindParameterSend$15 = -3160				; size = 4
_wBindIndexSend$16 = -3156				; size = 2
_wSendSize$17 = -3152					; size = 2
_wHeadSize$18 = -3148					; size = 2
_pTableFrame$19 = -3144					; size = 4
_i$20 = -3140						; size = 2
_TableInfo$21 = -3136					; size = 3074
_pIServerUserItemSend$22 = -60				; size = 4
_bSendAndroidFlag$23 = -53				; size = 1
_wUserIndex$24 = -52					; size = 2
_wConfigColumnInfo$25 = -48				; size = 2
_wConfigColumnHead$26 = -44				; size = 2
_ConfigServer$27 = -40					; size = 10
_LogonSuccess$28 = -28					; size = 8
_pBindParameter$ = -20					; size = 4
_bAndroidUser$ = -13					; size = 1
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_bAlreadyOnLine$ = 12					; size = 1
?OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z PROC ; CAttemperEngineSink::OnEventUserLogon, COMDAT
; _this$ = ecx

; 8773 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 10 1b 00 00	 mov	 eax, 6928		; 00001b10H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 8774 : 	//获取参数
; 8775 : 	WORD wBindIndex=pIServerUserItem->GetBindIndex();

  0001d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00020	8b 10		 mov	 edx, DWORD PTR [eax]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	ff d0		 call	 eax
  0002a	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8776 : 	bool bAndroidUser=pIServerUserItem->IsAndroidUser();

  0002e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00036	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0003c	ff d0		 call	 eax
  0003e	88 45 f3	 mov	 BYTE PTR _bAndroidUser$[ebp], al

; 8777 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00041	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00045	50		 push	 eax
  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00051	ff d0		 call	 eax
  00053	89 45 ec	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 8778 : 
; 8779 : 	//登录处理
; 8780 : 	if (pIServerUserItem->IsMobileUser()==false)

  00056	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0005e	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  00064	ff d0		 call	 eax
  00066	0f b6 c8	 movzx	 ecx, al
  00069	85 c9		 test	 ecx, ecx
  0006b	0f 85 62 06 00
	00		 jne	 $LN14@OnEventUse

; 8781 : 	{
; 8782 : 		//变量定义
; 8783 : 		CMD_GR_LogonSuccess LogonSuccess;
; 8784 : 		CMD_GR_ConfigServer ConfigServer;
; 8785 : 		ZeroMemory(&LogonSuccess,sizeof(LogonSuccess));

  00071	6a 08		 push	 8
  00073	6a 00		 push	 0
  00075	8d 45 e4	 lea	 eax, DWORD PTR _LogonSuccess$28[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 _memset
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8786 : 		ZeroMemory(&ConfigServer,sizeof(ConfigServer));

  00081	6a 0a		 push	 10			; 0000000aH
  00083	6a 00		 push	 0
  00085	8d 45 d8	 lea	 eax, DWORD PTR _ConfigServer$27[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 _memset
  0008e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8787 : 
; 8788 : 		//登录成功
; 8789 : 		LogonSuccess.dwUserRight=pIServerUserItem->GetUserRight();

  00091	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00094	8b 10		 mov	 edx, DWORD PTR [eax]
  00096	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00099	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0009c	ff d0		 call	 eax
  0009e	89 45 e4	 mov	 DWORD PTR _LogonSuccess$28[ebp], eax

; 8790 : 		LogonSuccess.dwMasterRight=pIServerUserItem->GetMasterRight();

  000a1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000a9	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  000ac	ff d0		 call	 eax
  000ae	89 45 e8	 mov	 DWORD PTR _LogonSuccess$28[ebp+4], eax

; 8791 : 		SendData(pBindParameter->dwSocketID,MDM_GR_LOGON,SUB_GR_LOGON_SUCCESS,&LogonSuccess,sizeof(LogonSuccess));

  000b1	6a 08		 push	 8
  000b3	8d 45 e4	 lea	 eax, DWORD PTR _LogonSuccess$28[ebp]
  000b6	50		 push	 eax
  000b7	6a 64		 push	 100			; 00000064H
  000b9	6a 01		 push	 1
  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	52		 push	 edx
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	83 c1 04	 add	 ecx, 4
  000c7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000cd	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000d0	ff d0		 call	 eax

; 8792 : 
; 8793 : 		//登录通知
; 8794 : 		if (m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventUserLogon(pIServerUserItem);

  000d2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  000dc	74 1d		 je	 SHORT $LN16@OnEventUse
  000de	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000e1	50		 push	 eax
  000e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 12		 mov	 edx, DWORD PTR [edx]
  000f0	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  000f6	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000f9	ff d0		 call	 eax
$LN16@OnEventUse:

; 8795 : 
; 8796 : 		//房间配置
; 8797 : 		ConfigServer.wTableCount=m_pGameServiceOption->wTableCount;

  000fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fe	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00101	66 8b 51 46	 mov	 dx, WORD PTR [ecx+70]
  00105	66 89 55 d8	 mov	 WORD PTR _ConfigServer$27[ebp], dx

; 8798 : 		ConfigServer.wChairCount=m_pGameServiceAttrib->wChairCount;

  00109	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0010f	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  00113	66 89 55 da	 mov	 WORD PTR _ConfigServer$27[ebp+2], dx

; 8799 : 		ConfigServer.wServerType=m_pGameServiceOption->wServerType;

  00117	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0011d	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  00121	66 89 55 dc	 mov	 WORD PTR _ConfigServer$27[ebp+4], dx

; 8800 : 		ConfigServer.dwServerRule=m_pGameServiceOption->dwServerRule;

  00125	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00128	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0012b	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0012e	89 55 de	 mov	 DWORD PTR _ConfigServer$27[ebp+6], edx

; 8801 : 		SendData(pBindParameter->dwSocketID,MDM_GR_CONFIG,SUB_GR_CONFIG_SERVER,&ConfigServer,sizeof(ConfigServer));

  00131	6a 0a		 push	 10			; 0000000aH
  00133	8d 45 d8	 lea	 eax, DWORD PTR _ConfigServer$27[ebp]
  00136	50		 push	 eax
  00137	6a 65		 push	 101			; 00000065H
  00139	6a 02		 push	 2
  0013b	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  0013e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00140	52		 push	 edx
  00141	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	83 c1 04	 add	 ecx, 4
  00147	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014d	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00150	ff d0		 call	 eax

; 8802 : 
; 8803 : 		//列表配置
; 8804 : 		WORD wConfigColumnHead=sizeof(m_DataConfigColumn)-sizeof(m_DataConfigColumn.ColumnItem);

  00152	b8 01 00 00 00	 mov	 eax, 1
  00157	66 89 45 d4	 mov	 WORD PTR _wConfigColumnHead$26[ebp], ax

; 8805 : 		WORD wConfigColumnInfo=m_DataConfigColumn.cbColumnCount*sizeof(m_DataConfigColumn.ColumnItem[0]);

  0015b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	0f b6 88 ba 00
	00 00		 movzx	 ecx, BYTE PTR [eax+186]
  00165	6b d1 12	 imul	 edx, ecx, 18
  00168	66 89 55 d0	 mov	 WORD PTR _wConfigColumnInfo$25[ebp], dx

; 8806 : 		SendData(pBindParameter->dwSocketID,MDM_GR_CONFIG,SUB_GR_CONFIG_COLUMN,&m_DataConfigColumn,wConfigColumnHead+wConfigColumnInfo);

  0016c	0f b7 45 d4	 movzx	 eax, WORD PTR _wConfigColumnHead$26[ebp]
  00170	0f b7 4d d0	 movzx	 ecx, WORD PTR _wConfigColumnInfo$25[ebp]
  00174	03 c1		 add	 eax, ecx
  00176	50		 push	 eax
  00177	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0017a	81 c2 ba 00 00
	00		 add	 edx, 186		; 000000baH
  00180	52		 push	 edx
  00181	6a 64		 push	 100			; 00000064H
  00183	6a 02		 push	 2
  00185	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00188	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018a	51		 push	 ecx
  0018b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	83 c1 04	 add	 ecx, 4
  00191	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00194	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00197	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0019a	ff d2		 call	 edx

; 8807 : 
; 8808 : 
; 8809 : 		//配置完成
; 8810 : 		SendData(pBindParameter->dwSocketID,MDM_GR_CONFIG,SUB_GR_CONFIG_FINISH,NULL,0);

  0019c	6a 00		 push	 0
  0019e	6a 00		 push	 0
  001a0	6a 67		 push	 103			; 00000067H
  001a2	6a 02		 push	 2
  001a4	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a9	51		 push	 ecx
  001aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	83 c1 04	 add	 ecx, 4
  001b0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001b3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001b6	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  001b9	ff d2		 call	 edx

; 8811 : 
; 8812 : 		//发送自己信息给自己
; 8813 : 		SendUserInfoPacket(pIServerUserItem,pBindParameter->dwSocketID);

  001bb	6a 00		 push	 0
  001bd	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c2	51		 push	 ecx
  001c3	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001c6	52		 push	 edx
  001c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket

; 8814 : 
; 8815 : 		//变量定义		
; 8816 : 		WORD wUserIndex=0;

  001cf	33 c0		 xor	 eax, eax
  001d1	66 89 45 cc	 mov	 WORD PTR _wUserIndex$24[ebp], ax

; 8817 : 		bool bSendAndroidFlag=false;

  001d5	c6 45 cb 00	 mov	 BYTE PTR _bSendAndroidFlag$23[ebp], 0

; 8818 : 		IServerUserItem * pIServerUserItemSend=NULL;

  001d9	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _pIServerUserItemSend$22[ebp], 0

; 8819 : 
; 8820 : 		//权限判断		
; 8821 : 		if(CUserRight::IsGameCheatUser(pIServerUserItem->GetUserRight())==true ||

  001e0	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001e3	8b 10		 mov	 edx, DWORD PTR [eax]
  001e5	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e8	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  001eb	ff d0		 call	 eax
  001ed	50		 push	 eax
  001ee	e8 00 00 00 00	 call	 ?IsGameCheatUser@CUserRight@@SA_NK@Z ; CUserRight::IsGameCheatUser
  001f3	83 c4 04	 add	 esp, 4
  001f6	0f b6 c8	 movzx	 ecx, al
  001f9	83 f9 01	 cmp	 ecx, 1
  001fc	74 1e		 je	 SHORT $LN18@OnEventUse
  001fe	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00201	8b 10		 mov	 edx, DWORD PTR [eax]
  00203	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00206	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00209	ff d0		 call	 eax
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  00211	83 c4 04	 add	 esp, 4
  00214	0f b6 c8	 movzx	 ecx, al
  00217	83 f9 01	 cmp	 ecx, 1
  0021a	75 04		 jne	 SHORT $LN2@OnEventUse
$LN18@OnEventUse:

; 8822 : 		   CMasterRight::CanManagerAndroid(pIServerUserItem->GetMasterRight())==true)
; 8823 : 		{
; 8824 : 			bSendAndroidFlag=true;

  0021c	c6 45 cb 01	 mov	 BYTE PTR _bSendAndroidFlag$23[ebp], 1
$LN2@OnEventUse:

; 8825 : 		}
; 8826 : 
; 8827 : 		//发送其他已在线用户给自己（除自己以外）		
; 8828 : 		while (true)

  00220	b8 01 00 00 00	 mov	 eax, 1
  00225	85 c0		 test	 eax, eax
  00227	74 64		 je	 SHORT $LN3@OnEventUse

; 8829 : 		{
; 8830 : 			pIServerUserItemSend=m_ServerUserManager.EnumUserItem(wUserIndex++);

  00229	66 8b 45 cc	 mov	 ax, WORD PTR _wUserIndex$24[ebp]
  0022d	66 89 85 f2 e4
	ff ff		 mov	 WORD PTR tv246[ebp], ax
  00234	0f b7 8d f2 e4
	ff ff		 movzx	 ecx, WORD PTR tv246[ebp]
  0023b	51		 push	 ecx
  0023c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00245	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00248	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0024e	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00251	ff d2		 call	 edx
  00253	89 45 c4	 mov	 DWORD PTR _pIServerUserItemSend$22[ebp], eax
  00256	66 8b 45 cc	 mov	 ax, WORD PTR _wUserIndex$24[ebp]
  0025a	66 83 c0 01	 add	 ax, 1
  0025e	66 89 45 cc	 mov	 WORD PTR _wUserIndex$24[ebp], ax

; 8831 : 			if (pIServerUserItemSend==NULL) break;

  00262	83 7d c4 00	 cmp	 DWORD PTR _pIServerUserItemSend$22[ebp], 0
  00266	75 02		 jne	 SHORT $LN19@OnEventUse
  00268	eb 23		 jmp	 SHORT $LN3@OnEventUse
$LN19@OnEventUse:

; 8832 : 			if (pIServerUserItemSend==pIServerUserItem) continue;

  0026a	8b 45 c4	 mov	 eax, DWORD PTR _pIServerUserItemSend$22[ebp]
  0026d	3b 45 08	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00270	75 02		 jne	 SHORT $LN20@OnEventUse
  00272	eb ac		 jmp	 SHORT $LN2@OnEventUse
$LN20@OnEventUse:

; 8833 : 			SendUserInfoPacket(pIServerUserItemSend,pBindParameter->dwSocketID,bSendAndroidFlag);

  00274	0f b6 45 cb	 movzx	 eax, BYTE PTR _bSendAndroidFlag$23[ebp]
  00278	50		 push	 eax
  00279	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  0027c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027e	52		 push	 edx
  0027f	8b 45 c4	 mov	 eax, DWORD PTR _pIServerUserItemSend$22[ebp]
  00282	50		 push	 eax
  00283	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00286	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket

; 8834 : 		}

  0028b	eb 93		 jmp	 SHORT $LN2@OnEventUse
$LN3@OnEventUse:

; 8835 : 
; 8836 : 		//桌子状态
; 8837 : 		CMD_GR_TableInfo TableInfo;
; 8838 : 		TableInfo.wTableCount=(WORD)m_TableFrameArray.GetCount();

  0028d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00290	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00296	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  0029b	66 89 85 c0 f3
	ff ff		 mov	 WORD PTR _TableInfo$21[ebp], ax

; 8839 : 		ASSERT(TableInfo.wTableCount<CountArray(TableInfo.TableStatusArray));

  002a2	0f b7 85 c0 f3
	ff ff		 movzx	 eax, WORD PTR _TableInfo$21[ebp]
  002a9	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  002ae	72 19		 jb	 SHORT $LN47@OnEventUse
  002b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z@4JA
  002b6	83 c1 42	 add	 ecx, 66			; 00000042H
  002b9	51		 push	 ecx
  002ba	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  002bf	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002c4	85 c0		 test	 eax, eax
  002c6	74 01		 je	 SHORT $LN47@OnEventUse
  002c8	cc		 int	 3
$LN47@OnEventUse:

; 8840 : 		for (WORD i=0;i<TableInfo.wTableCount;i++)

  002c9	33 c0		 xor	 eax, eax
  002cb	66 89 85 bc f3
	ff ff		 mov	 WORD PTR _i$20[ebp], ax
  002d2	eb 12		 jmp	 SHORT $LN6@OnEventUse
$LN4@OnEventUse:
  002d4	66 8b 85 bc f3
	ff ff		 mov	 ax, WORD PTR _i$20[ebp]
  002db	66 83 c0 01	 add	 ax, 1
  002df	66 89 85 bc f3
	ff ff		 mov	 WORD PTR _i$20[ebp], ax
$LN6@OnEventUse:
  002e6	0f b7 85 bc f3
	ff ff		 movzx	 eax, WORD PTR _i$20[ebp]
  002ed	0f b7 8d c0 f3
	ff ff		 movzx	 ecx, WORD PTR _TableInfo$21[ebp]
  002f4	3b c1		 cmp	 eax, ecx
  002f6	0f 8d d5 00 00
	00		 jge	 $LN5@OnEventUse

; 8841 : 		{
; 8842 : 			CTableFrame * pTableFrame=m_TableFrameArray[i];

  002fc	0f b7 85 bc f3
	ff ff		 movzx	 eax, WORD PTR _i$20[ebp]
  00303	50		 push	 eax
  00304	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00307	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0030d	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00312	8b 08		 mov	 ecx, DWORD PTR [eax]
  00314	89 8d b8 f3 ff
	ff		 mov	 DWORD PTR _pTableFrame$19[ebp], ecx

; 8843 : 			TableInfo.TableStatusArray[i].cbTableLock=pTableFrame->IsTableLocked()?TRUE:FALSE;

  0031a	8b 85 b8 f3 ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$19[ebp]
  00320	8b 10		 mov	 edx, DWORD PTR [eax]
  00322	8b 8d b8 f3 ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$19[ebp]
  00328	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0032b	ff d0		 call	 eax
  0032d	0f b6 c8	 movzx	 ecx, al
  00330	85 c9		 test	 ecx, ecx
  00332	74 0c		 je	 SHORT $LN48@OnEventUse
  00334	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv290[ebp], 1
  0033e	eb 0a		 jmp	 SHORT $LN49@OnEventUse
$LN48@OnEventUse:
  00340	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv290[ebp], 0
$LN49@OnEventUse:
  0034a	0f b7 95 bc f3
	ff ff		 movzx	 edx, WORD PTR _i$20[ebp]
  00351	6b c2 06	 imul	 eax, edx, 6
  00354	8a 8d f0 e4 ff
	ff		 mov	 cl, BYTE PTR tv290[ebp]
  0035a	88 8c 05 c2 f3
	ff ff		 mov	 BYTE PTR _TableInfo$21[ebp+eax+2], cl

; 8844 : 			TableInfo.TableStatusArray[i].cbPlayStatus=pTableFrame->IsTableStarted()?TRUE:FALSE;

  00361	8b 85 b8 f3 ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$19[ebp]
  00367	8b 10		 mov	 edx, DWORD PTR [eax]
  00369	8b 8d b8 f3 ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$19[ebp]
  0036f	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00372	ff d0		 call	 eax
  00374	0f b6 c8	 movzx	 ecx, al
  00377	85 c9		 test	 ecx, ecx
  00379	74 0c		 je	 SHORT $LN50@OnEventUse
  0037b	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv306[ebp], 1
  00385	eb 0a		 jmp	 SHORT $LN51@OnEventUse
$LN50@OnEventUse:
  00387	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv306[ebp], 0
$LN51@OnEventUse:
  00391	0f b7 95 bc f3
	ff ff		 movzx	 edx, WORD PTR _i$20[ebp]
  00398	6b c2 06	 imul	 eax, edx, 6
  0039b	8a 8d f0 e4 ff
	ff		 mov	 cl, BYTE PTR tv306[ebp]
  003a1	88 8c 05 c3 f3
	ff ff		 mov	 BYTE PTR _TableInfo$21[ebp+eax+3], cl

; 8845 : 			TableInfo.TableStatusArray[i].lCellScore=pTableFrame->GetCellScore();

  003a8	8b 85 b8 f3 ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$19[ebp]
  003ae	8b 10		 mov	 edx, DWORD PTR [eax]
  003b0	8b 8d b8 f3 ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$19[ebp]
  003b6	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  003b9	ff d0		 call	 eax
  003bb	0f b7 8d bc f3
	ff ff		 movzx	 ecx, WORD PTR _i$20[ebp]
  003c2	6b d1 06	 imul	 edx, ecx, 6
  003c5	89 84 15 c4 f3
	ff ff		 mov	 DWORD PTR _TableInfo$21[ebp+edx+4], eax

; 8846 : 		}

  003cc	e9 03 ff ff ff	 jmp	 $LN4@OnEventUse
$LN5@OnEventUse:

; 8847 : 
; 8848 : 		//桌子状态
; 8849 : 		WORD wHeadSize=sizeof(TableInfo)-sizeof(TableInfo.TableStatusArray);

  003d1	b8 02 00 00 00	 mov	 eax, 2
  003d6	66 89 85 b4 f3
	ff ff		 mov	 WORD PTR _wHeadSize$18[ebp], ax

; 8850 : 		WORD wSendSize=wHeadSize+TableInfo.wTableCount*sizeof(TableInfo.TableStatusArray[0]);

  003dd	0f b7 85 b4 f3
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$18[ebp]
  003e4	0f b7 8d c0 f3
	ff ff		 movzx	 ecx, WORD PTR _TableInfo$21[ebp]
  003eb	6b d1 06	 imul	 edx, ecx, 6
  003ee	03 c2		 add	 eax, edx
  003f0	66 89 85 b0 f3
	ff ff		 mov	 WORD PTR _wSendSize$17[ebp], ax

; 8851 : 		SendData(pBindParameter->dwSocketID,MDM_GR_STATUS,SUB_GR_TABLE_INFO,&TableInfo,wSendSize);

  003f7	0f b7 85 b0 f3
	ff ff		 movzx	 eax, WORD PTR _wSendSize$17[ebp]
  003fe	50		 push	 eax
  003ff	8d 8d c0 f3 ff
	ff		 lea	 ecx, DWORD PTR _TableInfo$21[ebp]
  00405	51		 push	 ecx
  00406	6a 64		 push	 100			; 00000064H
  00408	6a 04		 push	 4
  0040a	8b 55 ec	 mov	 edx, DWORD PTR _pBindParameter$[ebp]
  0040d	8b 02		 mov	 eax, DWORD PTR [edx]
  0040f	50		 push	 eax
  00410	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00413	83 c1 04	 add	 ecx, 4
  00416	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00419	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0041c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0041f	ff d2		 call	 edx

; 8852 : 
; 8853 : 		//发送自己的信息给其他在线用户
; 8854 : 		if (bAlreadyOnLine==false)

  00421	0f b6 45 0c	 movzx	 eax, BYTE PTR _bAlreadyOnLine$[ebp]
  00425	85 c0		 test	 eax, eax
  00427	0f 85 2a 01 00
	00		 jne	 $LN21@OnEventUse

; 8855 : 		{
; 8856 : 			//自己是机器人
; 8857 : 			if (pIServerUserItem->IsAndroidUser()==true)

  0042d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00430	8b 10		 mov	 edx, DWORD PTR [eax]
  00432	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00435	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0043b	ff d0		 call	 eax
  0043d	0f b6 c8	 movzx	 ecx, al
  00440	83 f9 01	 cmp	 ecx, 1
  00443	0f 85 fe 00 00
	00		 jne	 $LN22@OnEventUse

; 8858 : 			{
; 8859 : 				//设置变量
; 8860 : 				wUserIndex=0;

  00449	33 c0		 xor	 eax, eax
  0044b	66 89 45 cc	 mov	 WORD PTR _wUserIndex$24[ebp], ax
$LN7@OnEventUse:

; 8861 : 				while (true)

  0044f	b8 01 00 00 00	 mov	 eax, 1
  00454	85 c0		 test	 eax, eax
  00456	0f 84 e9 00 00
	00		 je	 $LN8@OnEventUse

; 8862 : 				{
; 8863 : 					pIServerUserItemSend=m_ServerUserManager.EnumUserItem(wUserIndex++);

  0045c	66 8b 45 cc	 mov	 ax, WORD PTR _wUserIndex$24[ebp]
  00460	66 89 85 f2 e4
	ff ff		 mov	 WORD PTR tv359[ebp], ax
  00467	0f b7 8d f2 e4
	ff ff		 movzx	 ecx, WORD PTR tv359[ebp]
  0046e	51		 push	 ecx
  0046f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00472	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00478	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0047b	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00481	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00484	ff d2		 call	 edx
  00486	89 45 c4	 mov	 DWORD PTR _pIServerUserItemSend$22[ebp], eax
  00489	66 8b 45 cc	 mov	 ax, WORD PTR _wUserIndex$24[ebp]
  0048d	66 83 c0 01	 add	 ax, 1
  00491	66 89 45 cc	 mov	 WORD PTR _wUserIndex$24[ebp], ax

; 8864 : 					if (pIServerUserItemSend==NULL) break;

  00495	83 7d c4 00	 cmp	 DWORD PTR _pIServerUserItemSend$22[ebp], 0
  00499	75 05		 jne	 SHORT $LN24@OnEventUse
  0049b	e9 a5 00 00 00	 jmp	 $LN8@OnEventUse
$LN24@OnEventUse:

; 8865 : 					if (pIServerUserItemSend==pIServerUserItem) continue;

  004a0	8b 45 c4	 mov	 eax, DWORD PTR _pIServerUserItemSend$22[ebp]
  004a3	3b 45 08	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004a6	75 02		 jne	 SHORT $LN25@OnEventUse
  004a8	eb a5		 jmp	 SHORT $LN7@OnEventUse
$LN25@OnEventUse:

; 8866 : 
; 8867 : 					//设置权限
; 8868 : 					bSendAndroidFlag=false;

  004aa	c6 45 cb 00	 mov	 BYTE PTR _bSendAndroidFlag$23[ebp], 0

; 8869 : 					if(CUserRight::IsGameCheatUser(pIServerUserItemSend->GetUserRight())==true ||

  004ae	8b 45 c4	 mov	 eax, DWORD PTR _pIServerUserItemSend$22[ebp]
  004b1	8b 10		 mov	 edx, DWORD PTR [eax]
  004b3	8b 4d c4	 mov	 ecx, DWORD PTR _pIServerUserItemSend$22[ebp]
  004b6	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  004b9	ff d0		 call	 eax
  004bb	50		 push	 eax
  004bc	e8 00 00 00 00	 call	 ?IsGameCheatUser@CUserRight@@SA_NK@Z ; CUserRight::IsGameCheatUser
  004c1	83 c4 04	 add	 esp, 4
  004c4	0f b6 c8	 movzx	 ecx, al
  004c7	83 f9 01	 cmp	 ecx, 1
  004ca	74 1e		 je	 SHORT $LN27@OnEventUse
  004cc	8b 45 c4	 mov	 eax, DWORD PTR _pIServerUserItemSend$22[ebp]
  004cf	8b 10		 mov	 edx, DWORD PTR [eax]
  004d1	8b 4d c4	 mov	 ecx, DWORD PTR _pIServerUserItemSend$22[ebp]
  004d4	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  004d7	ff d0		 call	 eax
  004d9	50		 push	 eax
  004da	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  004df	83 c4 04	 add	 esp, 4
  004e2	0f b6 c8	 movzx	 ecx, al
  004e5	83 f9 01	 cmp	 ecx, 1
  004e8	75 04		 jne	 SHORT $LN26@OnEventUse
$LN27@OnEventUse:

; 8870 : 					   CMasterRight::CanManagerAndroid(pIServerUserItemSend->GetMasterRight())==true )
; 8871 : 					{
; 8872 : 						bSendAndroidFlag=true;

  004ea	c6 45 cb 01	 mov	 BYTE PTR _bSendAndroidFlag$23[ebp], 1
$LN26@OnEventUse:

; 8873 : 					}
; 8874 : 
; 8875 : 					//获取参数
; 8876 : 					WORD wBindIndexSend=pIServerUserItemSend->GetBindIndex();

  004ee	8b 45 c4	 mov	 eax, DWORD PTR _pIServerUserItemSend$22[ebp]
  004f1	8b 10		 mov	 edx, DWORD PTR [eax]
  004f3	8b 4d c4	 mov	 ecx, DWORD PTR _pIServerUserItemSend$22[ebp]
  004f6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  004f9	ff d0		 call	 eax
  004fb	66 89 85 ac f3
	ff ff		 mov	 WORD PTR _wBindIndexSend$16[ebp], ax

; 8877 : 					tagBindParameter * pBindParameterSend=GetBindParameter(wBindIndexSend);

  00502	0f b7 85 ac f3
	ff ff		 movzx	 eax, WORD PTR _wBindIndexSend$16[ebp]
  00509	50		 push	 eax
  0050a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0050d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0050f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00512	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00515	ff d0		 call	 eax
  00517	89 85 a8 f3 ff
	ff		 mov	 DWORD PTR _pBindParameterSend$15[ebp], eax

; 8878 : 					if (pBindParameterSend!=NULL)

  0051d	83 bd a8 f3 ff
	ff 00		 cmp	 DWORD PTR _pBindParameterSend$15[ebp], 0
  00524	74 1a		 je	 SHORT $LN28@OnEventUse

; 8879 : 					{
; 8880 : 						//发送信息
; 8881 : 						SendUserInfoPacket(pIServerUserItem,pBindParameterSend->dwSocketID,bSendAndroidFlag);

  00526	0f b6 45 cb	 movzx	 eax, BYTE PTR _bSendAndroidFlag$23[ebp]
  0052a	50		 push	 eax
  0052b	8b 8d a8 f3 ff
	ff		 mov	 ecx, DWORD PTR _pBindParameterSend$15[ebp]
  00531	8b 11		 mov	 edx, DWORD PTR [ecx]
  00533	52		 push	 edx
  00534	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00537	50		 push	 eax
  00538	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0053b	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket
$LN28@OnEventUse:

; 8882 : 					}
; 8883 : 				}

  00540	e9 0a ff ff ff	 jmp	 $LN7@OnEventUse
$LN8@OnEventUse:

; 8884 : 			}
; 8885 : 			else

  00545	eb 10		 jmp	 SHORT $LN21@OnEventUse
$LN22@OnEventUse:

; 8886 : 			{
; 8887 : 				SendUserInfoPacket(pIServerUserItem,INVALID_DWORD);

  00547	6a 00		 push	 0
  00549	6a ff		 push	 -1
  0054b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0054e	50		 push	 eax
  0054f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00552	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket
$LN21@OnEventUse:

; 8888 : 			}
; 8889 : 		}
; 8890 : 
; 8891 : 		//构造结构
; 8892 : 		CMD_GR_LogonFinish LogonFinish;
; 8893 : 		bool bHasTaskParameter=m_UserTaskManager.GetTaskParameterCount()>0;

  00557	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0055a	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00560	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00563	8b 90 bc 3e 02
	00		 mov	 edx, DWORD PTR [eax+147132]
  00569	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0056c	ff d0		 call	 eax
  0056e	0f b7 c8	 movzx	 ecx, ax
  00571	85 c9		 test	 ecx, ecx
  00573	7e 0c		 jle	 SHORT $LN52@OnEventUse
  00575	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv442[ebp], 1
  0057f	eb 0a		 jmp	 SHORT $LN53@OnEventUse
$LN52@OnEventUse:
  00581	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv442[ebp], 0
$LN53@OnEventUse:
  0058b	8a 95 f0 e4 ff
	ff		 mov	 dl, BYTE PTR tv442[ebp]
  00591	88 95 a6 f3 ff
	ff		 mov	 BYTE PTR _bHasTaskParameter$13[ebp], dl

; 8894 : 		bool bHasUserTaskEntry=m_UserTaskManager.GetUserTaskEntry(pIServerUserItem->GetUserID())!=NULL;

  00597	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0059a	8b 10		 mov	 edx, DWORD PTR [eax]
  0059c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0059f	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  005a2	ff d0		 call	 eax
  005a4	50		 push	 eax
  005a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005a8	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  005ae	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005b1	8b 82 bc 3e 02
	00		 mov	 eax, DWORD PTR [edx+147132]
  005b7	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  005ba	ff d2		 call	 edx
  005bc	85 c0		 test	 eax, eax
  005be	74 0c		 je	 SHORT $LN54@OnEventUse
  005c0	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv460[ebp], 1
  005ca	eb 0a		 jmp	 SHORT $LN55@OnEventUse
$LN54@OnEventUse:
  005cc	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv460[ebp], 0
$LN55@OnEventUse:
  005d6	8a 85 f0 e4 ff
	ff		 mov	 al, BYTE PTR tv460[ebp]
  005dc	88 85 a5 f3 ff
	ff		 mov	 BYTE PTR _bHasUserTaskEntry$12[ebp], al

; 8895 : 		LogonFinish.bGuideTask = bHasTaskParameter&&!bHasUserTaskEntry;

  005e2	0f b6 85 a6 f3
	ff ff		 movzx	 eax, BYTE PTR _bHasTaskParameter$13[ebp]
  005e9	85 c0		 test	 eax, eax
  005eb	74 17		 je	 SHORT $LN56@OnEventUse
  005ed	0f b6 8d a5 f3
	ff ff		 movzx	 ecx, BYTE PTR _bHasUserTaskEntry$12[ebp]
  005f4	85 c9		 test	 ecx, ecx
  005f6	75 0c		 jne	 SHORT $LN56@OnEventUse
  005f8	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv466[ebp], 1
  00602	eb 0a		 jmp	 SHORT $LN57@OnEventUse
$LN56@OnEventUse:
  00604	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv466[ebp], 0
$LN57@OnEventUse:
  0060e	8a 95 f0 e4 ff
	ff		 mov	 dl, BYTE PTR tv466[ebp]
  00614	88 95 a7 f3 ff
	ff		 mov	 BYTE PTR _LogonFinish$14[ebp], dl

; 8896 : 
; 8897 : 		//登录完成
; 8898 : 		SendData(pBindParameter->dwSocketID,MDM_GR_LOGON,SUB_GR_LOGON_FINISH,&LogonFinish,sizeof(LogonFinish));

  0061a	6a 01		 push	 1
  0061c	8d 85 a7 f3 ff
	ff		 lea	 eax, DWORD PTR _LogonFinish$14[ebp]
  00622	50		 push	 eax
  00623	6a 66		 push	 102			; 00000066H
  00625	6a 01		 push	 1
  00627	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  0062a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0062c	52		 push	 edx
  0062d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00630	83 c1 04	 add	 ecx, 4
  00633	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00636	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00639	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0063c	ff d0		 call	 eax

; 8899 : 
; 8900 : 		//登录完成
; 8901 : 		if (m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventUserLogonFinish(pIServerUserItem);

  0063e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00641	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00648	74 1d		 je	 SHORT $LN29@OnEventUse
  0064a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0064d	50		 push	 eax
  0064e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00651	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  00657	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0065a	8b 12		 mov	 edx, DWORD PTR [edx]
  0065c	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00662	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00665	ff d0		 call	 eax
$LN29@OnEventUse:

; 8902 : 
; 8903 : 		//欢迎消息
; 8904 : 		if (bAndroidUser==false)

  00667	0f b6 45 f3	 movzx	 eax, BYTE PTR _bAndroidUser$[ebp]
  0066b	85 c0		 test	 eax, eax
  0066d	75 5f		 jne	 SHORT $LN30@OnEventUse

; 8905 : 		{
; 8906 : 			//构造提示
; 8907 : 			TCHAR szMessage[128]=TEXT("");

  0066f	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00674	88 85 24 f3 ff
	ff		 mov	 BYTE PTR _szMessage$11[ebp], al
  0067a	6a 7f		 push	 127			; 0000007fH
  0067c	6a 00		 push	 0
  0067e	8d 85 25 f3 ff
	ff		 lea	 eax, DWORD PTR _szMessage$11[ebp+1]
  00684	50		 push	 eax
  00685	e8 00 00 00 00	 call	 _memset
  0068a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8908 : 			_sntprintf_s(szMessage,CountArray(szMessage),TEXT("欢迎您进入“%s”游戏房间，祝您游戏愉快！"),m_pGameServiceAttrib->szGameName);

  0068d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00690	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00693	83 c1 06	 add	 ecx, 6
  00696	51		 push	 ecx
  00697	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@KGCLMCGJ@?$LL?$LG?S?$KN?D?z?$LN?x?H?k?$KB?$LA?$CFs?$KB?$LB?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KM?W?$KD?D?z?S@
  0069c	68 80 00 00 00	 push	 128			; 00000080H
  006a1	8d 95 24 f3 ff
	ff		 lea	 edx, DWORD PTR _szMessage$11[ebp]
  006a7	52		 push	 edx
  006a8	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  006ad	83 c4 10	 add	 esp, 16			; 00000010H

; 8909 : 
; 8910 : 			//发送消息
; 8911 : 			SendRoomMessage(pIServerUserItem,szMessage,SMT_CHAT);

  006b0	6a 01		 push	 1
  006b2	8d 85 24 f3 ff
	ff		 lea	 eax, DWORD PTR _szMessage$11[ebp]
  006b8	50		 push	 eax
  006b9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006bc	51		 push	 ecx
  006bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006c0	83 c1 04	 add	 ecx, 4
  006c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006c6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  006c9	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  006cc	ff d2		 call	 edx
$LN30@OnEventUse:

; 8912 : 		}
; 8913 : 	}
; 8914 : 	else

  006ce	e9 4a 04 00 00	 jmp	 $LN15@OnEventUse
$LN14@OnEventUse:

; 8915 : 	{
; 8916 : 		//登录通知
; 8917 : 		if (m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventUserLogon(pIServerUserItem);

  006d3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006d6	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  006dd	74 1d		 je	 SHORT $LN31@OnEventUse
  006df	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006e2	50		 push	 eax
  006e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006e6	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  006ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006ef	8b 12		 mov	 edx, DWORD PTR [edx]
  006f1	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  006f7	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  006fa	ff d0		 call	 eax
$LN31@OnEventUse:

; 8918 : 
; 8919 : 		//变量定义
; 8920 : 		CMD_GR_ConfigServer ConfigServer;
; 8921 : 		ZeroMemory(&ConfigServer,sizeof(ConfigServer));		

  006fc	6a 0a		 push	 10			; 0000000aH
  006fe	6a 00		 push	 0
  00700	8d 85 18 f3 ff
	ff		 lea	 eax, DWORD PTR _ConfigServer$10[ebp]
  00706	50		 push	 eax
  00707	e8 00 00 00 00	 call	 _memset
  0070c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8922 : 
; 8923 : 		//房间配置
; 8924 : 		ConfigServer.wTableCount=m_pGameServiceOption->wTableCount;

  0070f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00712	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00715	66 8b 51 46	 mov	 dx, WORD PTR [ecx+70]
  00719	66 89 95 18 f3
	ff ff		 mov	 WORD PTR _ConfigServer$10[ebp], dx

; 8925 : 		ConfigServer.wChairCount=m_pGameServiceAttrib->wChairCount;

  00720	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00723	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00726	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  0072a	66 89 95 1a f3
	ff ff		 mov	 WORD PTR _ConfigServer$10[ebp+2], dx

; 8926 : 		ConfigServer.wServerType=m_pGameServiceOption->wServerType;

  00731	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00734	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00737	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  0073b	66 89 95 1c f3
	ff ff		 mov	 WORD PTR _ConfigServer$10[ebp+4], dx

; 8927 : 		ConfigServer.dwServerRule=m_pGameServiceOption->dwServerRule;		

  00742	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00745	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00748	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0074b	89 95 1e f3 ff
	ff		 mov	 DWORD PTR _ConfigServer$10[ebp+6], edx

; 8928 : 		SendData(pBindParameter->dwSocketID,MDM_GR_CONFIG,SUB_GR_CONFIG_SERVER,&ConfigServer,sizeof(ConfigServer));		

  00751	6a 0a		 push	 10			; 0000000aH
  00753	8d 85 18 f3 ff
	ff		 lea	 eax, DWORD PTR _ConfigServer$10[ebp]
  00759	50		 push	 eax
  0075a	6a 65		 push	 101			; 00000065H
  0075c	6a 02		 push	 2
  0075e	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  00761	8b 11		 mov	 edx, DWORD PTR [ecx]
  00763	52		 push	 edx
  00764	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00767	83 c1 04	 add	 ecx, 4
  0076a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0076d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00770	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00773	ff d0		 call	 eax

; 8929 : 
; 8930 : 		//配置完成
; 8931 : 		SendData(pBindParameter->dwSocketID,MDM_GR_CONFIG,SUB_GR_CONFIG_FINISH,NULL,0);

  00775	6a 00		 push	 0
  00777	6a 00		 push	 0
  00779	6a 67		 push	 103			; 00000067H
  0077b	6a 02		 push	 2
  0077d	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00780	8b 08		 mov	 ecx, DWORD PTR [eax]
  00782	51		 push	 ecx
  00783	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00786	83 c1 04	 add	 ecx, 4
  00789	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0078c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0078f	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00792	ff d2		 call	 edx

; 8932 : 
; 8933 : 		//发送自己信息给自己
; 8934 : 		SendUserInfoPacket(pIServerUserItem,pBindParameter->dwSocketID);

  00794	6a 00		 push	 0
  00796	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00799	8b 08		 mov	 ecx, DWORD PTR [eax]
  0079b	51		 push	 ecx
  0079c	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0079f	52		 push	 edx
  007a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a3	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket

; 8935 : 
; 8936 : 		//变量定义		
; 8937 : 		WORD wUserIndex=0;

  007a8	33 c0		 xor	 eax, eax
  007aa	66 89 85 14 f3
	ff ff		 mov	 WORD PTR _wUserIndex$9[ebp], ax

; 8938 : 		bool bSendAndroidFlag=false;

  007b1	c6 85 13 f3 ff
	ff 00		 mov	 BYTE PTR _bSendAndroidFlag$8[ebp], 0

; 8939 : 		IServerUserItem * pIServerUserItemSend=NULL;

  007b8	c7 85 0c f3 ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItemSend$7[ebp], 0

; 8940 : 
; 8941 : 		//权限判断		
; 8942 : 		if(CUserRight::IsGameCheatUser(pIServerUserItem->GetUserRight())==true ||

  007c2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007c5	8b 10		 mov	 edx, DWORD PTR [eax]
  007c7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007ca	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  007cd	ff d0		 call	 eax
  007cf	50		 push	 eax
  007d0	e8 00 00 00 00	 call	 ?IsGameCheatUser@CUserRight@@SA_NK@Z ; CUserRight::IsGameCheatUser
  007d5	83 c4 04	 add	 esp, 4
  007d8	0f b6 c8	 movzx	 ecx, al
  007db	83 f9 01	 cmp	 ecx, 1
  007de	74 1e		 je	 SHORT $LN33@OnEventUse
  007e0	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  007e3	8b 10		 mov	 edx, DWORD PTR [eax]
  007e5	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  007e8	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  007eb	ff d0		 call	 eax
  007ed	50		 push	 eax
  007ee	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  007f3	83 c4 04	 add	 esp, 4
  007f6	0f b6 c8	 movzx	 ecx, al
  007f9	83 f9 01	 cmp	 ecx, 1
  007fc	75 07		 jne	 SHORT $LN9@OnEventUse
$LN33@OnEventUse:

; 8943 : 			CMasterRight::CanManagerAndroid(pIServerUserItem->GetMasterRight())==true)
; 8944 : 		{
; 8945 : 			bSendAndroidFlag=true;

  007fe	c6 85 13 f3 ff
	ff 01		 mov	 BYTE PTR _bSendAndroidFlag$8[ebp], 1
$LN9@OnEventUse:

; 8946 : 		}
; 8947 : 
; 8948 : 		//发送其他已在线用户给自己（除自己以外）	
; 8949 : 		while (true)

  00805	b8 01 00 00 00	 mov	 eax, 1
  0080a	85 c0		 test	 eax, eax
  0080c	74 7f		 je	 SHORT $LN10@OnEventUse

; 8950 : 		{
; 8951 : 			pIServerUserItemSend=m_ServerUserManager.EnumUserItem(wUserIndex++);

  0080e	66 8b 85 14 f3
	ff ff		 mov	 ax, WORD PTR _wUserIndex$9[ebp]
  00815	66 89 85 f2 e4
	ff ff		 mov	 WORD PTR tv601[ebp], ax
  0081c	0f b7 8d f2 e4
	ff ff		 movzx	 ecx, WORD PTR tv601[ebp]
  00823	51		 push	 ecx
  00824	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00827	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0082d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00830	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00836	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00839	ff d2		 call	 edx
  0083b	89 85 0c f3 ff
	ff		 mov	 DWORD PTR _pIServerUserItemSend$7[ebp], eax
  00841	66 8b 85 14 f3
	ff ff		 mov	 ax, WORD PTR _wUserIndex$9[ebp]
  00848	66 83 c0 01	 add	 ax, 1
  0084c	66 89 85 14 f3
	ff ff		 mov	 WORD PTR _wUserIndex$9[ebp], ax

; 8952 : 			if (pIServerUserItemSend==NULL) break;

  00853	83 bd 0c f3 ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItemSend$7[ebp], 0
  0085a	75 02		 jne	 SHORT $LN34@OnEventUse
  0085c	eb 2f		 jmp	 SHORT $LN10@OnEventUse
$LN34@OnEventUse:

; 8953 : 			if (pIServerUserItemSend==pIServerUserItem) continue;

  0085e	8b 85 0c f3 ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItemSend$7[ebp]
  00864	3b 45 08	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00867	75 02		 jne	 SHORT $LN35@OnEventUse
  00869	eb 9a		 jmp	 SHORT $LN9@OnEventUse
$LN35@OnEventUse:

; 8954 : 			SendUserInfoPacket(pIServerUserItemSend,pBindParameter->dwSocketID,bSendAndroidFlag);

  0086b	0f b6 85 13 f3
	ff ff		 movzx	 eax, BYTE PTR _bSendAndroidFlag$8[ebp]
  00872	50		 push	 eax
  00873	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  00876	8b 11		 mov	 edx, DWORD PTR [ecx]
  00878	52		 push	 edx
  00879	8b 85 0c f3 ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItemSend$7[ebp]
  0087f	50		 push	 eax
  00880	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00883	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket

; 8955 : 		}

  00888	e9 78 ff ff ff	 jmp	 $LN9@OnEventUse
$LN10@OnEventUse:

; 8956 : 
; 8957 : 		//发送自己的信息给其他在线用户
; 8958 : 		SendUserInfoPacket(pIServerUserItem,INVALID_DWORD);

  0088d	6a 00		 push	 0
  0088f	6a ff		 push	 -1
  00891	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00894	50		 push	 eax
  00895	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00898	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket

; 8959 : 
; 8960 : 		//登录完成
; 8961 : 		SendData(pBindParameter->dwSocketID,MDM_GR_LOGON,SUB_GR_LOGON_FINISH,NULL,0);

  0089d	6a 00		 push	 0
  0089f	6a 00		 push	 0
  008a1	6a 66		 push	 102			; 00000066H
  008a3	6a 01		 push	 1
  008a5	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  008a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  008aa	51		 push	 ecx
  008ab	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008ae	83 c1 04	 add	 ecx, 4
  008b1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  008b4	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  008b7	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  008ba	ff d2		 call	 edx

; 8962 : 
; 8963 : 		//旁观用户
; 8964 : 		if (pIServerUserItem->GetUserStatus()==US_LOOKON)

  008bc	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008bf	8b 10		 mov	 edx, DWORD PTR [eax]
  008c1	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  008c4	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  008c7	ff d0		 call	 eax
  008c9	0f b6 c8	 movzx	 ecx, al
  008cc	83 f9 04	 cmp	 ecx, 4
  008cf	75 43		 jne	 SHORT $LN36@OnEventUse

; 8965 : 		{
; 8966 : 			m_TableFrameArray[pIServerUserItem->GetTableID()]->PerformStandUpAction(pIServerUserItem);

  008d1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008d4	8b 10		 mov	 edx, DWORD PTR [eax]
  008d6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  008d9	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  008dc	ff d0		 call	 eax
  008de	0f b7 c8	 movzx	 ecx, ax
  008e1	51		 push	 ecx
  008e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008e5	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  008eb	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  008f0	8b 10		 mov	 edx, DWORD PTR [eax]
  008f2	89 95 f0 e4 ff
	ff		 mov	 DWORD PTR tv649[ebp], edx
  008f8	6a 00		 push	 0
  008fa	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  008fd	50		 push	 eax
  008fe	8b 8d f0 e4 ff
	ff		 mov	 ecx, DWORD PTR tv649[ebp]
  00904	8b 11		 mov	 edx, DWORD PTR [ecx]
  00906	8b 8d f0 e4 ff
	ff		 mov	 ecx, DWORD PTR tv649[ebp]
  0090c	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00912	ff d0		 call	 eax
$LN36@OnEventUse:

; 8967 : 		}
; 8968 : 
; 8969 : 		//桌子状态
; 8970 : 		CMD_GR_TableInfo TableInfo;
; 8971 : 		TableInfo.wTableCount=(WORD)m_TableFrameArray.GetCount();

  00914	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00917	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0091d	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00922	66 89 85 08 e7
	ff ff		 mov	 WORD PTR _TableInfo$6[ebp], ax

; 8972 : 		ASSERT(TableInfo.wTableCount<CountArray(TableInfo.TableStatusArray));

  00929	0f b7 85 08 e7
	ff ff		 movzx	 eax, WORD PTR _TableInfo$6[ebp]
  00930	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  00935	72 1c		 jb	 SHORT $LN58@OnEventUse
  00937	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z@4JA
  0093d	81 c1 c7 00 00
	00		 add	 ecx, 199		; 000000c7H
  00943	51		 push	 ecx
  00944	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00949	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0094e	85 c0		 test	 eax, eax
  00950	74 01		 je	 SHORT $LN58@OnEventUse
  00952	cc		 int	 3
$LN58@OnEventUse:

; 8973 : 		for (WORD i=0;i<TableInfo.wTableCount;i++)

  00953	33 c0		 xor	 eax, eax
  00955	66 89 85 04 e7
	ff ff		 mov	 WORD PTR _i$5[ebp], ax
  0095c	eb 12		 jmp	 SHORT $LN13@OnEventUse
$LN11@OnEventUse:
  0095e	66 8b 85 04 e7
	ff ff		 mov	 ax, WORD PTR _i$5[ebp]
  00965	66 83 c0 01	 add	 ax, 1
  00969	66 89 85 04 e7
	ff ff		 mov	 WORD PTR _i$5[ebp], ax
$LN13@OnEventUse:
  00970	0f b7 85 04 e7
	ff ff		 movzx	 eax, WORD PTR _i$5[ebp]
  00977	0f b7 8d 08 e7
	ff ff		 movzx	 ecx, WORD PTR _TableInfo$6[ebp]
  0097e	3b c1		 cmp	 eax, ecx
  00980	0f 8d d5 00 00
	00		 jge	 $LN12@OnEventUse

; 8974 : 		{
; 8975 : 			CTableFrame * pTableFrame=m_TableFrameArray[i];

  00986	0f b7 85 04 e7
	ff ff		 movzx	 eax, WORD PTR _i$5[ebp]
  0098d	50		 push	 eax
  0098e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00991	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00997	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0099c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0099e	89 8d 00 e7 ff
	ff		 mov	 DWORD PTR _pTableFrame$4[ebp], ecx

; 8976 : 			TableInfo.TableStatusArray[i].cbTableLock=pTableFrame->IsTableLocked()?TRUE:FALSE;

  009a4	8b 85 00 e7 ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$4[ebp]
  009aa	8b 10		 mov	 edx, DWORD PTR [eax]
  009ac	8b 8d 00 e7 ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  009b2	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  009b5	ff d0		 call	 eax
  009b7	0f b6 c8	 movzx	 ecx, al
  009ba	85 c9		 test	 ecx, ecx
  009bc	74 0c		 je	 SHORT $LN59@OnEventUse
  009be	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv689[ebp], 1
  009c8	eb 0a		 jmp	 SHORT $LN60@OnEventUse
$LN59@OnEventUse:
  009ca	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv689[ebp], 0
$LN60@OnEventUse:
  009d4	0f b7 95 04 e7
	ff ff		 movzx	 edx, WORD PTR _i$5[ebp]
  009db	6b c2 06	 imul	 eax, edx, 6
  009de	8a 8d f0 e4 ff
	ff		 mov	 cl, BYTE PTR tv689[ebp]
  009e4	88 8c 05 0a e7
	ff ff		 mov	 BYTE PTR _TableInfo$6[ebp+eax+2], cl

; 8977 : 			TableInfo.TableStatusArray[i].cbPlayStatus=pTableFrame->IsTableStarted()?TRUE:FALSE;

  009eb	8b 85 00 e7 ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$4[ebp]
  009f1	8b 10		 mov	 edx, DWORD PTR [eax]
  009f3	8b 8d 00 e7 ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  009f9	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  009fc	ff d0		 call	 eax
  009fe	0f b6 c8	 movzx	 ecx, al
  00a01	85 c9		 test	 ecx, ecx
  00a03	74 0c		 je	 SHORT $LN61@OnEventUse
  00a05	c7 85 f0 e4 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv705[ebp], 1
  00a0f	eb 0a		 jmp	 SHORT $LN62@OnEventUse
$LN61@OnEventUse:
  00a11	c7 85 f0 e4 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv705[ebp], 0
$LN62@OnEventUse:
  00a1b	0f b7 95 04 e7
	ff ff		 movzx	 edx, WORD PTR _i$5[ebp]
  00a22	6b c2 06	 imul	 eax, edx, 6
  00a25	8a 8d f0 e4 ff
	ff		 mov	 cl, BYTE PTR tv705[ebp]
  00a2b	88 8c 05 0b e7
	ff ff		 mov	 BYTE PTR _TableInfo$6[ebp+eax+3], cl

; 8978 : 			TableInfo.TableStatusArray[i].lCellScore=pTableFrame->GetCellScore();

  00a32	8b 85 00 e7 ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$4[ebp]
  00a38	8b 10		 mov	 edx, DWORD PTR [eax]
  00a3a	8b 8d 00 e7 ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  00a40	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00a43	ff d0		 call	 eax
  00a45	0f b7 8d 04 e7
	ff ff		 movzx	 ecx, WORD PTR _i$5[ebp]
  00a4c	6b d1 06	 imul	 edx, ecx, 6
  00a4f	89 84 15 0c e7
	ff ff		 mov	 DWORD PTR _TableInfo$6[ebp+edx+4], eax

; 8979 : 		}

  00a56	e9 03 ff ff ff	 jmp	 $LN11@OnEventUse
$LN12@OnEventUse:

; 8980 : 
; 8981 : 		//桌子状态
; 8982 : 		WORD wHeadSize=sizeof(TableInfo)-sizeof(TableInfo.TableStatusArray);

  00a5b	b8 02 00 00 00	 mov	 eax, 2
  00a60	66 89 85 fc e6
	ff ff		 mov	 WORD PTR _wHeadSize$3[ebp], ax

; 8983 : 		WORD wSendSize=wHeadSize+TableInfo.wTableCount*sizeof(TableInfo.TableStatusArray[0]);

  00a67	0f b7 85 fc e6
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$3[ebp]
  00a6e	0f b7 8d 08 e7
	ff ff		 movzx	 ecx, WORD PTR _TableInfo$6[ebp]
  00a75	6b d1 06	 imul	 edx, ecx, 6
  00a78	03 c2		 add	 eax, edx
  00a7a	66 89 85 f8 e6
	ff ff		 mov	 WORD PTR _wSendSize$2[ebp], ax

; 8984 : 		SendData(pBindParameter->dwSocketID,MDM_GR_STATUS,SUB_GR_TABLE_INFO,&TableInfo,wSendSize);

  00a81	0f b7 85 f8 e6
	ff ff		 movzx	 eax, WORD PTR _wSendSize$2[ebp]
  00a88	50		 push	 eax
  00a89	8d 8d 08 e7 ff
	ff		 lea	 ecx, DWORD PTR _TableInfo$6[ebp]
  00a8f	51		 push	 ecx
  00a90	6a 64		 push	 100			; 00000064H
  00a92	6a 04		 push	 4
  00a94	8b 55 ec	 mov	 edx, DWORD PTR _pBindParameter$[ebp]
  00a97	8b 02		 mov	 eax, DWORD PTR [edx]
  00a99	50		 push	 eax
  00a9a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a9d	83 c1 04	 add	 ecx, 4
  00aa0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00aa3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00aa6	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00aa9	ff d2		 call	 edx

; 8985 : 
; 8986 : 		//立即登录
; 8987 : 		if(pIServerUserItem->GetTableID()==INVALID_TABLE)

  00aab	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00aae	8b 10		 mov	 edx, DWORD PTR [eax]
  00ab0	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00ab3	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00ab6	ff d0		 call	 eax
  00ab8	0f b7 c8	 movzx	 ecx, ax
  00abb	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00ac1	75 31		 jne	 SHORT $LN37@OnEventUse

; 8988 : 		{
; 8989 : 			WORD wMobileUserRule =  pIServerUserItem->GetMobileUserRule();

  00ac3	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00ac6	8b 10		 mov	 edx, DWORD PTR [eax]
  00ac8	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00acb	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00ad1	ff d0		 call	 eax
  00ad3	66 89 85 f4 e6
	ff ff		 mov	 WORD PTR _wMobileUserRule$1[ebp], ax

; 8990 : 			if((wMobileUserRule&BEHAVIOR_LOGON_IMMEDIATELY)!=0)

  00ada	0f b7 85 f4 e6
	ff ff		 movzx	 eax, WORD PTR _wMobileUserRule$1[ebp]
  00ae1	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00ae6	74 0c		 je	 SHORT $LN37@OnEventUse

; 8991 : 			{
; 8992 : 				MobileUserImmediately(pIServerUserItem);

  00ae8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00aeb	50		 push	 eax
  00aec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00aef	e8 00 00 00 00	 call	 ?MobileUserImmediately@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::MobileUserImmediately
$LN37@OnEventUse:

; 8993 : 			}
; 8994 : 			//else
; 8995 : 			//{
; 8996 : 			//	SendViewTableUserInfoPacketToMobileUser(pIServerUserItem,INVALID_WORD);
; 8997 : 			//}
; 8998 : 		}
; 8999 : 
; 9000 : 		//登录完成
; 9001 : 		if (m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventUserLogonFinish(pIServerUserItem);

  00af4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00af7	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00afe	74 1d		 je	 SHORT $LN15@OnEventUse
  00b00	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00b03	50		 push	 eax
  00b04	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b07	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  00b0d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b10	8b 12		 mov	 edx, DWORD PTR [edx]
  00b12	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00b18	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00b1b	ff d0		 call	 eax
$LN15@OnEventUse:

; 9002 : 	}
; 9003 : 
; 9004 : 	//网络设置
; 9005 : 	if (bAndroidUser==false)

  00b1d	0f b6 45 f3	 movzx	 eax, BYTE PTR _bAndroidUser$[ebp]
  00b21	85 c0		 test	 eax, eax
  00b23	0f 85 8c 00 00
	00		 jne	 $LN40@OnEventUse

; 9006 : 	{
; 9007 : 		if (pBindParameter->cbClientKind==CLIENT_KIND_MOBILE)

  00b29	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00b2c	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00b30	83 f9 02	 cmp	 ecx, 2
  00b33	75 41		 jne	 SHORT $LN41@OnEventUse

; 9008 : 		{
; 9009 : 			if (LOWORD(pBindParameter->dwSocketID) < m_pGameServiceOption->wMaxPlayer)

  00b35	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00b38	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b3a	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00b40	0f b7 d1	 movzx	 edx, cx
  00b43	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b46	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00b49	0f b7 41 44	 movzx	 eax, WORD PTR [ecx+68]
  00b4d	3b d0		 cmp	 edx, eax
  00b4f	7d 23		 jge	 SHORT $LN43@OnEventUse

; 9010 : 				m_pITCPNetworkEngine->AllowBatchSend(pBindParameter->dwSocketID,true,BG_MOBILE);

  00b51	6a 01		 push	 1
  00b53	6a 01		 push	 1
  00b55	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00b58	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b5a	51		 push	 ecx
  00b5b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b5e	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00b64	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b67	8b 10		 mov	 edx, DWORD PTR [eax]
  00b69	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00b6f	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00b72	ff d0		 call	 eax
$LN43@OnEventUse:

; 9011 : 		}
; 9012 : 		else

  00b74	eb 3f		 jmp	 SHORT $LN40@OnEventUse
$LN41@OnEventUse:

; 9013 : 		{
; 9014 : 			if (LOWORD(pBindParameter->dwSocketID) < m_pGameServiceOption->wMaxPlayer)

  00b76	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00b79	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b7b	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00b81	0f b7 d1	 movzx	 edx, cx
  00b84	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b87	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00b8a	0f b7 41 44	 movzx	 eax, WORD PTR [ecx+68]
  00b8e	3b d0		 cmp	 edx, eax
  00b90	7d 23		 jge	 SHORT $LN40@OnEventUse

; 9015 : 				m_pITCPNetworkEngine->AllowBatchSend(pBindParameter->dwSocketID,true,BG_COMPUTER);

  00b92	6a 02		 push	 2
  00b94	6a 01		 push	 1
  00b96	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00b99	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b9b	51		 push	 ecx
  00b9c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b9f	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00ba5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ba8	8b 10		 mov	 edx, DWORD PTR [eax]
  00baa	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00bb0	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00bb3	ff d0		 call	 eax
$LN40@OnEventUse:

; 9016 : 		}
; 9017 : 	}
; 9018 : 
; 9019 : 	//登录通知
; 9020 : 	if(m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventUserLogon(pIServerUserItem);

  00bb5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bb8	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00bbf	74 1d		 je	 SHORT $LN1@OnEventUse
  00bc1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00bc4	50		 push	 eax
  00bc5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bc8	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  00bce	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bd1	8b 12		 mov	 edx, DWORD PTR [edx]
  00bd3	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00bd9	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00bdc	ff d0		 call	 eax
$LN1@OnEventUse:

; 9021 : 
; 9022 : 	return;
; 9023 : }

  00bde	5f		 pop	 edi
  00bdf	5e		 pop	 esi
  00be0	5b		 pop	 ebx
  00be1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00be4	33 cd		 xor	 ecx, ebp
  00be6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00beb	8b e5		 mov	 esp, ebp
  00bed	5d		 pop	 ebp
  00bee	c2 08 00	 ret	 8
?OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z ENDP ; CAttemperEngineSink::OnEventUserLogon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubQueryUserRoomScore@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubQueryUserRoomScore@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubQueryUserRoomScore, COMDAT
; _this$ = ecx

; 8745 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8746 : 	////OutputDebugString(TEXT("ptdt *** OnTCPNetworkSubHostDissumeTable"));
; 8747 : 	////校验数据
; 8748 : 	//ASSERT(wDataSize == sizeof(CMD_GR_QUERY_USER_ROOM_SCORE));
; 8749 : 	//if(wDataSize != sizeof(CMD_GR_QUERY_USER_ROOM_SCORE)) return false;
; 8750 : 
; 8751 : 	////提取数据
; 8752 : 	//CMD_GR_QUERY_USER_ROOM_SCORE * pQueryUserRoomScore = (CMD_GR_QUERY_USER_ROOM_SCORE*)pData;
; 8753 : 	//ASSERT(pQueryUserRoomScore!=NULL);
; 8754 : 	////获取用户
; 8755 : 	//WORD wBindIndex=LOWORD(dwSocketID);
; 8756 : 	//IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);
; 8757 : 	//if (pIServerUserItem==NULL) return false;
; 8758 : 
; 8759 : 	////发送数据
; 8760 : 	//DBR_GR_QUERY_USER_ROOM_INFO QUERY_USER_ROOM_INFO;
; 8761 : 	//ZeroMemory(&QUERY_USER_ROOM_INFO, sizeof(DBR_GR_QUERY_USER_ROOM_INFO));
; 8762 : 	//QUERY_USER_ROOM_INFO.dwUserID = pQueryUserRoomScore->dwUserID;//请求房间成绩的玩家
; 8763 : 
; 8764 : 	////投递数据
; 8765 : 	//m_pIDBCorrespondManager->PostDataBaseRequest(QUERY_USER_ROOM_INFO.dwUserID, DBR_GR_QUERY_USER_ROOM_SCORE, dwSocketID, &QUERY_USER_ROOM_INFO, sizeof(DBR_GR_QUERY_USER_ROOM_INFO));
; 8766 : 
; 8767 : 	return true;

  0000c	b0 01		 mov	 al, 1

; 8768 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubQueryUserRoomScore@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubQueryUserRoomScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
$T1 = -228						; size = 48
$T2 = -180						; size = 48
_DismissTable$ = -68					; size = 12
_CancelCreateTable$ = -56				; size = 32
_pTableFrame$ = -24					; size = 4
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pCancelRequest$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubHostDissumeTable, COMDAT
; _this$ = ecx

; 8682 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 8683 : 	//校验数据
; 8684 : 	ASSERT(wDataSize == sizeof(CMD_GR_HostDissumeGame));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 08	 cmp	 eax, 8
  00020	74 19		 je	 SHORT $LN7@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN7@OnTCPNetwo
  0003a	cc		 int	 3
$LN7@OnTCPNetwo:

; 8685 : 	if (wDataSize != sizeof(CMD_GR_HostDissumeGame)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 08	 cmp	 eax, 8
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 df 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8686 : 
; 8687 : 	//提取数据
; 8688 : 	CMD_GR_HostDissumeGame * pCancelRequest = (CMD_GR_HostDissumeGame*)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pCancelRequest$[ebp], eax

; 8689 : 	ASSERT(pCancelRequest != NULL);

  00051	83 7d f4 00	 cmp	 DWORD PTR _pCancelRequest$[ebp], 0
  00055	75 18		 jne	 SHORT $LN8@OnTCPNetwo
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005c	83 c0 07	 add	 eax, 7
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00065	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006a	85 c0		 test	 eax, eax
  0006c	74 01		 je	 SHORT $LN8@OnTCPNetwo
  0006e	cc		 int	 3
$LN8@OnTCPNetwo:

; 8690 : 	//获取用户
; 8691 : 	WORD wBindIndex = LOWORD(dwSocketID);

  0006f	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00072	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00077	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8692 : 	IServerUserItem * pIServerUserItem = GetBindUserItem(wBindIndex);

  0007b	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0008b	ff d0		 call	 eax
  0008d	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8693 : 	if (pIServerUserItem == NULL) return false;

  00090	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00094	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00096	32 c0		 xor	 al, al
  00098	e9 8d 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8694 : 
; 8695 : 	//获取桌子
; 8696 : 	CTableFrame* pTableFrame = m_TableFrameArray[pCancelRequest->dwTableID];

  0009d	8b 45 f4	 mov	 eax, DWORD PTR _pCancelRequest$[ebp]
  000a0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a3	51		 push	 ecx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000ad	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000b2	8b 10		 mov	 edx, DWORD PTR [eax]
  000b4	89 55 e8	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 8697 : 	ASSERT(pTableFrame != NULL);

  000b7	83 7d e8 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  000bb	75 18		 jne	 SHORT $LN9@OnTCPNetwo
  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000c2	83 c0 0f	 add	 eax, 15			; 0000000fH
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000cb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d0	85 c0		 test	 eax, eax
  000d2	74 01		 je	 SHORT $LN9@OnTCPNetwo
  000d4	cc		 int	 3
$LN9@OnTCPNetwo:

; 8698 : 
; 8699 : 	//如果强制解散的玩家不是房主，不允许解散
; 8700 : 	if (pTableFrame->GetTableOwner() != pCancelRequest->dwUserID)

  000d5	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  000d8	8b 10		 mov	 edx, DWORD PTR [eax]
  000da	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000dd	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  000e0	ff d0		 call	 eax
  000e2	8b 4d f4	 mov	 ecx, DWORD PTR _pCancelRequest$[ebp]
  000e5	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e7	74 07		 je	 SHORT $LN4@OnTCPNetwo

; 8701 : 	{
; 8702 : 		return true;

  000e9	b0 01		 mov	 al, 1
  000eb	e9 3a 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 8703 : 	}
; 8704 : 
; 8705 : 	//投递数据
; 8706 : 	DBR_GR_CancelCreateTable CancelCreateTable;
; 8707 : 	ZeroMemory(&CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  000f0	6a 20		 push	 32			; 00000020H
  000f2	6a 00		 push	 0
  000f4	8d 45 c8	 lea	 eax, DWORD PTR _CancelCreateTable$[ebp]
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 _memset
  000fd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8708 : 
; 8709 : 	CancelCreateTable.dwUserID = pTableFrame->GetTableOwner();

  00100	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00108	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  0010b	ff d0		 call	 eax
  0010d	89 45 c8	 mov	 DWORD PTR _CancelCreateTable$[ebp], eax

; 8710 : 	CancelCreateTable.dwReason = 3;

  00110	c7 45 d8 03 00
	00 00		 mov	 DWORD PTR _CancelCreateTable$[ebp+16], 3

; 8711 : 	CancelCreateTable.dwDrawCountLimit = pTableFrame->GetPersonalTableParameter().dwPlayTurnCount;

  00117	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0011d	50		 push	 eax
  0011e	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00121	8b 11		 mov	 edx, DWORD PTR [ecx]
  00123	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00126	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00129	ff d0		 call	 eax
  0012b	8b 48 13	 mov	 ecx, DWORD PTR [eax+19]
  0012e	89 4d dc	 mov	 DWORD PTR _CancelCreateTable$[ebp+20], ecx

; 8712 : 	CancelCreateTable.dwDrawTimeLimit = pTableFrame->GetPersonalTableParameter().dwPlayTimeLimit;

  00131	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00137	50		 push	 eax
  00138	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0013b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013d	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00140	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00143	ff d0		 call	 eax
  00145	8b 48 17	 mov	 ecx, DWORD PTR [eax+23]
  00148	89 4d e0	 mov	 DWORD PTR _CancelCreateTable$[ebp+24], ecx

; 8713 : 	CancelCreateTable.dwServerID = m_pGameServiceOption->wServerID;

  0014b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00151	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  00155	89 55 cc	 mov	 DWORD PTR _CancelCreateTable$[ebp+4], edx

; 8714 : 	CancelCreateTable.dwTableID = pTableFrame->GetTableID();

  00158	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0015b	8b 10		 mov	 edx, DWORD PTR [eax]
  0015d	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00160	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00163	ff d0		 call	 eax
  00165	0f b7 c8	 movzx	 ecx, ax
  00168	89 4d d4	 mov	 DWORD PTR _CancelCreateTable$[ebp+12], ecx

; 8715 : 
; 8716 : 
; 8717 : 
; 8718 : 	m_pIDBCorrespondManager->PostDataBaseRequest(CancelCreateTable.dwUserID, DBR_GR_HOST_CANCEL_CREATE_TABLE, dwSocketID, &CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  0016b	6a 00		 push	 0
  0016d	6a 20		 push	 32			; 00000020H
  0016f	8d 45 c8	 lea	 eax, DWORD PTR _CancelCreateTable$[ebp]
  00172	50		 push	 eax
  00173	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00176	51		 push	 ecx
  00177	68 1c 05 00 00	 push	 1308			; 0000051cH
  0017c	8b 55 c8	 mov	 edx, DWORD PTR _CancelCreateTable$[ebp]
  0017f	52		 push	 edx
  00180	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00183	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00189	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0018c	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00192	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00194	50		 push	 eax
  00195	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00198	ff d2		 call	 edx
  0019a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 8719 : 
; 8720 : 
; 8721 : 	pTableFrame->HostDissumeGame(true);

  0019d	6a 01		 push	 1
  0019f	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  001a2	8b 10		 mov	 edx, DWORD PTR [eax]
  001a4	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001a7	8b 82 44 01 00
	00		 mov	 eax, DWORD PTR [edx+324]
  001ad	ff d0		 call	 eax

; 8722 : 
; 8723 : 	if (pTableFrame)

  001af	83 7d e8 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  001b3	74 0f		 je	 SHORT $LN5@OnTCPNetwo

; 8724 : 	{
; 8725 : 		pTableFrame->SetPersonalTableLocked(false);

  001b5	6a 00		 push	 0
  001b7	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  001ba	8b 10		 mov	 edx, DWORD PTR [eax]
  001bc	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001bf	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  001c2	ff d0		 call	 eax
$LN5@OnTCPNetwo:

; 8726 : 	}
; 8727 : 
; 8728 : 
; 8729 : 	//发送数据
; 8730 : 	CMD_CS_C_DismissTable DismissTable;

  001c4	8d 4d bc	 lea	 ecx, DWORD PTR _DismissTable$[ebp]
  001c7	e8 00 00 00 00	 call	 ??0CMD_CS_C_DismissTable@@QAE@XZ ; CMD_CS_C_DismissTable::CMD_CS_C_DismissTable

; 8731 : 	ZeroMemory(&DismissTable, sizeof(CMD_CS_C_DismissTable));

  001cc	6a 0c		 push	 12			; 0000000cH
  001ce	6a 00		 push	 0
  001d0	8d 45 bc	 lea	 eax, DWORD PTR _DismissTable$[ebp]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 _memset
  001d9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8732 : 	DismissTable.dwSocketID = dwSocketID;

  001dc	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001df	89 45 bc	 mov	 DWORD PTR _DismissTable$[ebp], eax

; 8733 : 	DismissTable.dwServerID = m_pGameServiceOption->wServerID;

  001e2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001e8	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  001ec	89 55 c0	 mov	 DWORD PTR _DismissTable$[ebp+4], edx

; 8734 : 	DismissTable.dwTableID = pTableFrame->GetTableID();

  001ef	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  001f2	8b 10		 mov	 edx, DWORD PTR [eax]
  001f4	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001f7	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001fa	ff d0		 call	 eax
  001fc	0f b7 c8	 movzx	 ecx, ax
  001ff	89 4d c4	 mov	 DWORD PTR _DismissTable$[ebp+8], ecx

; 8735 : 
; 8736 : 	//发送消息
; 8737 : 	m_pITCPSocketService->SendData(MDM_CS_SERVICE_INFO, SUB_CS_C_DISMISS_TABLE, &DismissTable, sizeof(CMD_CS_C_DismissTable));

  00202	6a 0c		 push	 12			; 0000000cH
  00204	8d 45 bc	 lea	 eax, DWORD PTR _DismissTable$[ebp]
  00207	50		 push	 eax
  00208	68 89 00 00 00	 push	 137			; 00000089H
  0020d	6a 02		 push	 2
  0020f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00212	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00218	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021b	8b 12		 mov	 edx, DWORD PTR [edx]
  0021d	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00223	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00226	ff d0		 call	 eax

; 8738 : 
; 8739 : 
; 8740 : 	return true;

  00228	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8741 : }

  0022a	5f		 pop	 edi
  0022b	5e		 pop	 esi
  0022c	5b		 pop	 ebx
  0022d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00230	33 cd		 xor	 ecx, ebp
  00232	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00237	8b e5		 mov	 esp, ebp
  00239	5d		 pop	 ebp
  0023a	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubHostDissumeTable@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubHostDissumeTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pUserItem$1 = -32					; size = 4
_i$2 = -28						; size = 4
_wChairCount$ = -24					; size = 2
_pTableFrame$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pRequestReply$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubRequestReply, COMDAT
; _this$ = ecx

; 8645 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8646 : 	//校验数据
; 8647 : 	ASSERT(wDataSize == sizeof(CMD_GR_RequestReply));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 09	 cmp	 eax, 9
  00013	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0002d	cc		 int	 3
$LN11@OnTCPNetwo:

; 8648 : 	if (wDataSize != sizeof(CMD_GR_RequestReply)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 09	 cmp	 eax, 9
  00035	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 30 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8649 : 
; 8650 : 	//提取数据
; 8651 : 	CMD_GR_RequestReply * pRequestReply = (CMD_GR_RequestReply*)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pRequestReply$[ebp], eax

; 8652 : 	ASSERT(pRequestReply != NULL);

  00044	83 7d f8 00	 cmp	 DWORD PTR _pRequestReply$[ebp], 0
  00048	75 18		 jne	 SHORT $LN12@OnTCPNetwo
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0004f	83 c0 07	 add	 eax, 7
  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN12@OnTCPNetwo
  00061	cc		 int	 3
$LN12@OnTCPNetwo:

; 8653 : 
; 8654 : 	//获取用户
; 8655 : 	WORD wBindIndex = LOWORD(dwSocketID);

  00062	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00065	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0006a	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8656 : 	IServerUserItem * pIServerUserItem = GetBindUserItem(wBindIndex);

  0006e	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00072	50		 push	 eax
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007e	ff d0		 call	 eax
  00080	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8657 : 	if (pIServerUserItem == NULL) return false;

  00083	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00087	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00089	32 c0		 xor	 al, al
  0008b	e9 de 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8658 : 
; 8659 : 	//获取桌子
; 8660 : 	CTableFrame* pTableFrame = m_TableFrameArray[pRequestReply->dwTableID];

  00090	8b 45 f8	 mov	 eax, DWORD PTR _pRequestReply$[ebp]
  00093	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00096	51		 push	 ecx
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000a0	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000a5	8b 10		 mov	 edx, DWORD PTR [eax]
  000a7	89 55 ec	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 8661 : 	ASSERT(pTableFrame != NULL);

  000aa	83 7d ec 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  000ae	75 18		 jne	 SHORT $LN13@OnTCPNetwo
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000b5	83 c0 10	 add	 eax, 16			; 00000010H
  000b8	50		 push	 eax
  000b9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000be	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c3	85 c0		 test	 eax, eax
  000c5	74 01		 je	 SHORT $LN13@OnTCPNetwo
  000c7	cc		 int	 3
$LN13@OnTCPNetwo:

; 8662 : 	//if(pRequestReply->dwUserID == pTableFrame->GetTableOwner()->GetUserID()) return false;
; 8663 : 
; 8664 : 	//转发数据
; 8665 : 	WORD wChairCount = pTableFrame->GetChairCount();

  000c8	8b 45 ec	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  000cb	8b 10		 mov	 edx, DWORD PTR [eax]
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000d0	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000d3	ff d0		 call	 eax
  000d5	66 89 45 e8	 mov	 WORD PTR _wChairCount$[ebp], ax

; 8666 : 	for (int i = 0; i < wChairCount; ++i)

  000d9	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  000e0	eb 09		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  000e2	8b 45 e4	 mov	 eax, DWORD PTR _i$2[ebp]
  000e5	83 c0 01	 add	 eax, 1
  000e8	89 45 e4	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@OnTCPNetwo:
  000eb	0f b7 45 e8	 movzx	 eax, WORD PTR _wChairCount$[ebp]
  000ef	39 45 e4	 cmp	 DWORD PTR _i$2[ebp], eax
  000f2	7d 4f		 jge	 SHORT $LN3@OnTCPNetwo

; 8667 : 	{
; 8668 : 		//过滤用户
; 8669 : 		IServerUserItem* pUserItem = pTableFrame->GetTableUserItem(i);

  000f4	0f b7 45 e4	 movzx	 eax, WORD PTR _i$2[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000fc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fe	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00101	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00107	ff d0		 call	 eax
  00109	89 45 e0	 mov	 DWORD PTR _pUserItem$1[ebp], eax

; 8670 : 		if (pUserItem == NULL || pUserItem == pIServerUserItem) continue;

  0010c	83 7d e0 00	 cmp	 DWORD PTR _pUserItem$1[ebp], 0
  00110	74 08		 je	 SHORT $LN8@OnTCPNetwo
  00112	8b 45 e0	 mov	 eax, DWORD PTR _pUserItem$1[ebp]
  00115	3b 45 f0	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00118	75 02		 jne	 SHORT $LN7@OnTCPNetwo
$LN8@OnTCPNetwo:
  0011a	eb c6		 jmp	 SHORT $LN2@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8671 : 
; 8672 : 		SendData(pUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_REQUEST_REPLY, pData, wDataSize);

  0011c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00120	50		 push	 eax
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00124	51		 push	 ecx
  00125	6a 06		 push	 6
  00127	68 d2 00 00 00	 push	 210			; 000000d2H
  0012c	8b 55 e0	 mov	 edx, DWORD PTR _pUserItem$1[ebp]
  0012f	52		 push	 edx
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	83 c1 04	 add	 ecx, 4
  00136	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00139	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0013c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0013f	ff d0		 call	 eax

; 8673 : 	}

  00141	eb 9f		 jmp	 SHORT $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8674 : 
; 8675 : 	if (pTableFrame->CancelTableRequestReply(pRequestReply->dwUserID, pRequestReply->cbAgree) == false) return false;

  00143	8b 45 f8	 mov	 eax, DWORD PTR _pRequestReply$[ebp]
  00146	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  0014a	51		 push	 ecx
  0014b	8b 55 f8	 mov	 edx, DWORD PTR _pRequestReply$[ebp]
  0014e	8b 02		 mov	 eax, DWORD PTR [edx]
  00150	50		 push	 eax
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00154	8b 11		 mov	 edx, DWORD PTR [ecx]
  00156	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00159	8b 82 3c 01 00
	00		 mov	 eax, DWORD PTR [edx+316]
  0015f	ff d0		 call	 eax
  00161	0f b6 c8	 movzx	 ecx, al
  00164	85 c9		 test	 ecx, ecx
  00166	75 04		 jne	 SHORT $LN9@OnTCPNetwo
  00168	32 c0		 xor	 al, al
  0016a	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 8676 : 
; 8677 : 	return true;

  0016c	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8678 : }

  0016e	5f		 pop	 edi
  0016f	5e		 pop	 esi
  00170	5b		 pop	 ebx
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubRequestReply@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubRequestReply
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pUserItem$1 = -32					; size = 4
_i$2 = -28						; size = 4
_wChairCount$ = -24					; size = 2
_pTableFrame$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pCancelRequest$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubCancelRequest, COMDAT
; _this$ = ecx

; 8609 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8610 : 	//校验数据
; 8611 : 	ASSERT(wDataSize == sizeof(CMD_GR_CancelRequest));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00013	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0002d	cc		 int	 3
$LN11@OnTCPNetwo:

; 8612 : 	if (wDataSize != sizeof(CMD_GR_CancelRequest)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00035	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 30 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8613 : 
; 8614 : 	//提取数据
; 8615 : 	CMD_GR_CancelRequest * pCancelRequest = (CMD_GR_CancelRequest*)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pCancelRequest$[ebp], eax

; 8616 : 	ASSERT(pCancelRequest != NULL);

  00044	83 7d f8 00	 cmp	 DWORD PTR _pCancelRequest$[ebp], 0
  00048	75 18		 jne	 SHORT $LN12@OnTCPNetwo
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0004f	83 c0 07	 add	 eax, 7
  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN12@OnTCPNetwo
  00061	cc		 int	 3
$LN12@OnTCPNetwo:

; 8617 : 	//获取用户
; 8618 : 	WORD wBindIndex = LOWORD(dwSocketID);

  00062	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00065	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0006a	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8619 : 	IServerUserItem * pIServerUserItem = GetBindUserItem(wBindIndex);

  0006e	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00072	50		 push	 eax
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007e	ff d0		 call	 eax
  00080	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8620 : 	if (pIServerUserItem == NULL) return false;

  00083	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00087	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00089	32 c0		 xor	 al, al
  0008b	e9 de 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8621 : 
; 8622 : 	//获取桌子
; 8623 : 	CTableFrame* pTableFrame = m_TableFrameArray[pCancelRequest->dwTableID];

  00090	8b 45 f8	 mov	 eax, DWORD PTR _pCancelRequest$[ebp]
  00093	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00096	51		 push	 ecx
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000a0	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000a5	8b 10		 mov	 edx, DWORD PTR [eax]
  000a7	89 55 ec	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 8624 : 	ASSERT(pTableFrame != NULL);

  000aa	83 7d ec 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  000ae	75 18		 jne	 SHORT $LN13@OnTCPNetwo
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000b5	83 c0 0f	 add	 eax, 15			; 0000000fH
  000b8	50		 push	 eax
  000b9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000be	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c3	85 c0		 test	 eax, eax
  000c5	74 01		 je	 SHORT $LN13@OnTCPNetwo
  000c7	cc		 int	 3
$LN13@OnTCPNetwo:

; 8625 : 	//if(pCancelRequest->dwUserID != pTableFrame->GetTableOwner()->GetUserID()) return false;
; 8626 : 
; 8627 : 	if (pTableFrame->CancelTableRequest(pCancelRequest->dwUserID, pCancelRequest->dwChairID) == false) return false;

  000c8	8b 45 f8	 mov	 eax, DWORD PTR _pCancelRequest$[ebp]
  000cb	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  000cf	51		 push	 ecx
  000d0	8b 55 f8	 mov	 edx, DWORD PTR _pCancelRequest$[ebp]
  000d3	8b 02		 mov	 eax, DWORD PTR [edx]
  000d5	50		 push	 eax
  000d6	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000d9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000db	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000de	8b 82 38 01 00
	00		 mov	 eax, DWORD PTR [edx+312]
  000e4	ff d0		 call	 eax
  000e6	0f b6 c8	 movzx	 ecx, al
  000e9	85 c9		 test	 ecx, ecx
  000eb	75 04		 jne	 SHORT $LN7@OnTCPNetwo
  000ed	32 c0		 xor	 al, al
  000ef	eb 7d		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8628 : 
; 8629 : 	//转发数据
; 8630 : 	WORD wChairCount = pTableFrame->GetChairCount();

  000f1	8b 45 ec	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  000f4	8b 10		 mov	 edx, DWORD PTR [eax]
  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000f9	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000fc	ff d0		 call	 eax
  000fe	66 89 45 e8	 mov	 WORD PTR _wChairCount$[ebp], ax

; 8631 : 	for (int i = 0; i < wChairCount; ++i)

  00102	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00109	eb 09		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  0010b	8b 45 e4	 mov	 eax, DWORD PTR _i$2[ebp]
  0010e	83 c0 01	 add	 eax, 1
  00111	89 45 e4	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@OnTCPNetwo:
  00114	0f b7 45 e8	 movzx	 eax, WORD PTR _wChairCount$[ebp]
  00118	39 45 e4	 cmp	 DWORD PTR _i$2[ebp], eax
  0011b	7d 4f		 jge	 SHORT $LN3@OnTCPNetwo

; 8632 : 	{
; 8633 : 		//过滤用户
; 8634 : 
; 8635 : 		IServerUserItem* pUserItem = pTableFrame->GetTableUserItem(i);

  0011d	0f b7 45 e4	 movzx	 eax, WORD PTR _i$2[ebp]
  00121	50		 push	 eax
  00122	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00125	8b 11		 mov	 edx, DWORD PTR [ecx]
  00127	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0012a	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00130	ff d0		 call	 eax
  00132	89 45 e0	 mov	 DWORD PTR _pUserItem$1[ebp], eax

; 8636 : 		if (pUserItem == NULL || pUserItem == pIServerUserItem) continue;

  00135	83 7d e0 00	 cmp	 DWORD PTR _pUserItem$1[ebp], 0
  00139	74 08		 je	 SHORT $LN9@OnTCPNetwo
  0013b	8b 45 e0	 mov	 eax, DWORD PTR _pUserItem$1[ebp]
  0013e	3b 45 f0	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00141	75 02		 jne	 SHORT $LN8@OnTCPNetwo
$LN9@OnTCPNetwo:
  00143	eb c6		 jmp	 SHORT $LN2@OnTCPNetwo
$LN8@OnTCPNetwo:

; 8637 : 
; 8638 : 		SendData(pUserItem, MDM_GR_PERSONAL_TABLE, SUB_GR_CANCEL_REQUEST, pData, wDataSize);

  00145	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00149	50		 push	 eax
  0014a	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  0014d	51		 push	 ecx
  0014e	6a 05		 push	 5
  00150	68 d2 00 00 00	 push	 210			; 000000d2H
  00155	8b 55 e0	 mov	 edx, DWORD PTR _pUserItem$1[ebp]
  00158	52		 push	 edx
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	83 c1 04	 add	 ecx, 4
  0015f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00162	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00165	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00168	ff d0		 call	 eax

; 8639 : 	}

  0016a	eb 9f		 jmp	 SHORT $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8640 : 
; 8641 : 	return true;

  0016c	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8642 : }

  0016e	5f		 pop	 edi
  0016f	5e		 pop	 esi
  00170	5b		 pop	 ebx
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubCancelRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubCancelRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_CreateFailure$ = -312					; size = 132
_CreateTable$1 = -180					; size = 140
_dwTableID$2 = -40					; size = 4
_pTableFrame$3 = -36					; size = 4
_i$4 = -32						; size = 4
_nSize$ = -28						; size = 4
_pBindParameter$ = -24					; size = 4
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pCreateTable$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubCreateTable, COMDAT
; _this$ = ecx

; 8541 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 78 01 00
	00		 sub	 esp, 376		; 00000178H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 8542 : 	//效验数据
; 8543 : 	ASSERT(wDataSize == sizeof(CMD_GR_CreateTable));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 7d	 cmp	 eax, 125		; 0000007dH
  00020	74 19		 je	 SHORT $LN9@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN9@OnTCPNetwo
  0003a	cc		 int	 3
$LN9@OnTCPNetwo:

; 8544 : 	if (wDataSize != sizeof(CMD_GR_CreateTable)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 7d	 cmp	 eax, 125		; 0000007dH
  00042	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 6b 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8545 : 
; 8546 : 	//提取数据
; 8547 : 	CMD_GR_CreateTable * pCreateTable = (CMD_GR_CreateTable*)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pCreateTable$[ebp], eax

; 8548 : 	ASSERT(pCreateTable != NULL);

  00051	83 7d f4 00	 cmp	 DWORD PTR _pCreateTable$[ebp], 0
  00055	75 18		 jne	 SHORT $LN10@OnTCPNetwo
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005c	83 c0 07	 add	 eax, 7
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00065	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006a	85 c0		 test	 eax, eax
  0006c	74 01		 je	 SHORT $LN10@OnTCPNetwo
  0006e	cc		 int	 3
$LN10@OnTCPNetwo:

; 8549 : 
; 8550 : 	//获取用户
; 8551 : 	WORD wBindIndex = LOWORD(dwSocketID);

  0006f	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00072	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00077	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8552 : 	IServerUserItem * pIServerUserItem = GetBindUserItem(wBindIndex);

  0007b	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0008b	ff d0		 call	 eax
  0008d	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8553 : 	if (pIServerUserItem == NULL) return false;

  00090	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00094	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00096	32 c0		 xor	 al, al
  00098	e9 19 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8554 : 
; 8555 : 	tagBindParameter* pBindParameter = GetBindParameter(wBindIndex);

  0009d	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000ad	ff d0		 call	 eax
  000af	89 45 e8	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 8556 : 
; 8557 : 
; 8558 : 	//寻找空闲桌子
; 8559 : 	INT_PTR nSize = m_TableFrameArray.GetCount();

  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000bb	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  000c0	89 45 e4	 mov	 DWORD PTR _nSize$[ebp], eax

; 8560 : 
; 8561 : 	for (INT_PTR i = 0; i < nSize; ++i)

  000c3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  000ca	eb 09		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  000cc	8b 45 e0	 mov	 eax, DWORD PTR _i$4[ebp]
  000cf	83 c0 01	 add	 eax, 1
  000d2	89 45 e0	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@OnTCPNetwo:
  000d5	8b 45 e0	 mov	 eax, DWORD PTR _i$4[ebp]
  000d8	3b 45 e4	 cmp	 eax, DWORD PTR _nSize$[ebp]
  000db	0f 8d 6c 01 00
	00		 jge	 $LN3@OnTCPNetwo

; 8562 : 	{
; 8563 : 		CTableFrame* pTableFrame = m_TableFrameArray.GetAt(i);

  000e1	8b 45 e0	 mov	 eax, DWORD PTR _i$4[ebp]
  000e4	50		 push	 eax
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000ee	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::GetAt
  000f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f5	89 4d dc	 mov	 DWORD PTR _pTableFrame$3[ebp], ecx

; 8564 : 		if (pTableFrame->GetNullChairCount() == pTableFrame->GetChairCount() && pTableFrame->IsPersonalTableLocked() == false)

  000f8	8b 45 dc	 mov	 eax, DWORD PTR _pTableFrame$3[ebp]
  000fb	8b 10		 mov	 edx, DWORD PTR [eax]
  000fd	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  00100	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00103	ff d0		 call	 eax
  00105	0f b7 f0	 movzx	 esi, ax
  00108	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  0010b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010d	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  00110	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00113	ff d0		 call	 eax
  00115	0f b7 c8	 movzx	 ecx, ax
  00118	3b f1		 cmp	 esi, ecx
  0011a	0f 85 28 01 00
	00		 jne	 $LN7@OnTCPNetwo
  00120	8b 45 dc	 mov	 eax, DWORD PTR _pTableFrame$3[ebp]
  00123	8b 10		 mov	 edx, DWORD PTR [eax]
  00125	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  00128	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0012b	ff d0		 call	 eax
  0012d	0f b6 c8	 movzx	 ecx, al
  00130	85 c9		 test	 ecx, ecx
  00132	0f 85 10 01 00
	00		 jne	 $LN7@OnTCPNetwo

; 8565 : 		{
; 8566 : 			//锁定桌子
; 8567 : 			pTableFrame->SetPersonalTableLocked(true);

  00138	6a 01		 push	 1
  0013a	8b 45 dc	 mov	 eax, DWORD PTR _pTableFrame$3[ebp]
  0013d	8b 10		 mov	 edx, DWORD PTR [eax]
  0013f	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  00142	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00145	ff d0		 call	 eax

; 8568 : 
; 8569 : 			//桌子号
; 8570 : 			DWORD dwTableID = pTableFrame->GetTableID();

  00147	8b 45 dc	 mov	 eax, DWORD PTR _pTableFrame$3[ebp]
  0014a	8b 10		 mov	 edx, DWORD PTR [eax]
  0014c	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  0014f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00152	ff d0		 call	 eax
  00154	0f b7 c8	 movzx	 ecx, ax
  00157	89 4d d8	 mov	 DWORD PTR _dwTableID$2[ebp], ecx

; 8571 : 
; 8572 : 			//构造数据
; 8573 : 			DBR_GR_CreateTable CreateTable;
; 8574 : 			ZeroMemory(&CreateTable, sizeof(DBR_GR_CreateTable));

  0015a	68 8c 00 00 00	 push	 140			; 0000008cH
  0015f	6a 00		 push	 0
  00161	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _CreateTable$1[ebp]
  00167	50		 push	 eax
  00168	e8 00 00 00 00	 call	 _memset
  0016d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8575 : 
; 8576 : 			CreateTable.dwUserID = pIServerUserItem->GetUserID();

  00170	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00173	8b 10		 mov	 edx, DWORD PTR [eax]
  00175	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00178	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0017b	ff d0		 call	 eax
  0017d	89 85 4c ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp], eax

; 8577 : 			CreateTable.dwClientAddr = pBindParameter->dwClientAddr;

  00183	8b 45 e8	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00186	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00189	89 8d 50 ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+4], ecx

; 8578 : 			CreateTable.dwServerID = m_pGameServiceOption->wServerID;

  0018f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00192	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00195	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  00199	89 95 58 ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+12], edx

; 8579 : 			CreateTable.dwTableID = dwTableID;

  0019f	8b 45 d8	 mov	 eax, DWORD PTR _dwTableID$2[ebp]
  001a2	89 85 5c ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+16], eax

; 8580 : 			CreateTable.dwDrawCountLimit = pCreateTable->dwDrawCountLimit;

  001a8	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001ab	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001ae	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+24], ecx

; 8581 : 			CreateTable.dwDrawTimeLimit = pCreateTable->dwDrawTimeLimit;

  001b4	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001b7	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  001ba	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+28], ecx

; 8582 : 			CreateTable.lCellScore = pCreateTable->lCellScore;

  001c0	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c5	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+8], ecx

; 8583 : 			CreateTable.dwRoomTax = pCreateTable->dwRoomTax;

  001cb	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001ce	8b 48 12	 mov	 ecx, DWORD PTR [eax+18]
  001d1	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _CreateTable$1[ebp+32], ecx

; 8584 : 			CreateTable.wJoinGamePeopleCount = pCreateTable->wJoinGamePeopleCount;

  001d7	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001da	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  001de	66 89 8d 60 ff
	ff ff		 mov	 WORD PTR _CreateTable$1[ebp+20], cx

; 8585 : 			CreateTable.cbPassword = pCreateTable->cbPassword;

  001e5	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001e8	8a 48 16	 mov	 cl, BYTE PTR [eax+22]
  001eb	88 8d 70 ff ff
	ff		 mov	 BYTE PTR _CreateTable$1[ebp+36], cl

; 8586 : 			memcpy(CreateTable.cbGameRule, pCreateTable->cbGameRule, CountArray(CreateTable.cbGameRule));

  001f1	6a 64		 push	 100			; 00000064H
  001f3	8b 45 f4	 mov	 eax, DWORD PTR _pCreateTable$[ebp]
  001f6	83 c0 18	 add	 eax, 24			; 00000018H
  001f9	50		 push	 eax
  001fa	8d 8d 71 ff ff
	ff		 lea	 ecx, DWORD PTR _CreateTable$1[ebp+37]
  00200	51		 push	 ecx
  00201	e8 00 00 00 00	 call	 _memcpy
  00206	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8587 : 
; 8588 : 			//投递数据
; 8589 : 			m_pIDBCorrespondManager->PostDataBaseRequest(CreateTable.dwUserID, DBR_GR_CREATE_TABLE, dwSocketID, &CreateTable, sizeof(DBR_GR_CreateTable));

  00209	6a 00		 push	 0
  0020b	68 8c 00 00 00	 push	 140			; 0000008cH
  00210	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _CreateTable$1[ebp]
  00216	50		 push	 eax
  00217	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0021a	51		 push	 ecx
  0021b	68 15 05 00 00	 push	 1301			; 00000515H
  00220	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR _CreateTable$1[ebp]
  00226	52		 push	 edx
  00227	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0022a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00230	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00233	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00239	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0023b	50		 push	 eax
  0023c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0023f	ff d2		 call	 edx
  00241	83 c4 1c	 add	 esp, 28			; 0000001cH

; 8590 : 
; 8591 : 			return true;

  00244	b0 01		 mov	 al, 1
  00246	eb 6e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8592 : 		}
; 8593 : 	}

  00248	e9 7f fe ff ff	 jmp	 $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8594 : 
; 8595 : 	//构造数据
; 8596 : 	CMD_GR_CreateFailure CreateFailure;
; 8597 : 	ZeroMemory(&CreateFailure, sizeof(CMD_GR_CreateFailure));

  0024d	68 84 00 00 00	 push	 132			; 00000084H
  00252	6a 00		 push	 0
  00254	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$[ebp]
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 _memset
  00260	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8598 : 
; 8599 : 	CreateFailure.lErrorCode = 1;

  00263	c7 85 c8 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _CreateFailure$[ebp], 1

; 8600 : 	lstrcpyn(CreateFailure.szDescribeString, TEXT("目前该游戏约战房间已满，请稍后再试！"), CountArray(CreateFailure.szDescribeString));

  0026d	68 80 00 00 00	 push	 128			; 00000080H
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DJFGALCD@?D?$LP?G?$LA?$LI?C?S?N?O?$LH?T?$LM?U?$LN?$LH?$LP?$LM?d?R?Q?B?z?$KD?$KM?G?k?I?T?$LK?s?T@
  00277	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$[ebp+4]
  0027d	50		 push	 eax
  0027e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 8601 : 
; 8602 : 	//发送数据
; 8603 : 	m_pITCPNetworkEngine->SendData(dwSocketID, MDM_GR_PERSONAL_TABLE, SUB_GR_CREATE_FAILURE, &CreateFailure, sizeof(CMD_GR_CreateFailure));

  00284	68 84 00 00 00	 push	 132			; 00000084H
  00289	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$[ebp]
  0028f	50		 push	 eax
  00290	6a 03		 push	 3
  00292	68 d2 00 00 00	 push	 210			; 000000d2H
  00297	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0029a	51		 push	 ecx
  0029b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0029e	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  002a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a7	8b 10		 mov	 edx, DWORD PTR [eax]
  002a9	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  002af	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  002b2	ff d0		 call	 eax

; 8604 : 
; 8605 : 	return true;

  002b4	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8606 : }

  002b6	5f		 pop	 edi
  002b7	5e		 pop	 esi
  002b8	5b		 pop	 ebx
  002b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bc	33 cd		 xor	 ecx, ebp
  002be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c3	8b e5		 mov	 esp, ebp
  002c5	5d		 pop	 ebp
  002c6	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubCreateTable@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubCreateTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$1 = -16420					; size = 4
_i$2 = -16413						; size = 1
_pTableFrame$3 = -16412					; size = 4
_wSendDataSize$ = -16408				; size = 2
_cbBuffer$ = -16404					; size = 16384
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pRoomCheat$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubRoomCheat, COMDAT
; _this$ = ecx

; 8492 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 24 42 00 00	 mov	 eax, 16932		; 00004224H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 8493 : 	//效验数据
; 8494 : 	ASSERT(wDataSize >= sizeof(CMD_GR_RoomCheat));

  0001d	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00021	83 f8 04	 cmp	 eax, 4
  00024	73 19		 jae	 SHORT $LN12@OnTCPNetwo
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0002c	83 c1 02	 add	 ecx, 2
  0002f	51		 push	 ecx
  00030	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00035	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003a	85 c0		 test	 eax, eax
  0003c	74 01		 je	 SHORT $LN12@OnTCPNetwo
  0003e	cc		 int	 3
$LN12@OnTCPNetwo:

; 8495 : 	if (wDataSize < sizeof(CMD_GR_RoomCheat)) return false;

  0003f	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00043	83 f8 04	 cmp	 eax, 4
  00046	73 07		 jae	 SHORT $LN5@OnTCPNetwo
  00048	32 c0		 xor	 al, al
  0004a	e9 c7 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8496 : 
; 8497 : 	//提取数据
; 8498 : 	CMD_GR_RoomCheat * pRoomCheat = (CMD_GR_RoomCheat*)pData;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00052	89 45 f4	 mov	 DWORD PTR _pRoomCheat$[ebp], eax

; 8499 : 	ASSERT(pRoomCheat != NULL);

  00055	83 7d f4 00	 cmp	 DWORD PTR _pRoomCheat$[ebp], 0
  00059	75 18		 jne	 SHORT $LN13@OnTCPNetwo
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00060	83 c0 07	 add	 eax, 7
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00069	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006e	85 c0		 test	 eax, eax
  00070	74 01		 je	 SHORT $LN13@OnTCPNetwo
  00072	cc		 int	 3
$LN13@OnTCPNetwo:

; 8500 : 
; 8501 : 	//获取用户
; 8502 : 	WORD wBindIndex = LOWORD(dwSocketID);

  00073	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00076	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0007b	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8503 : 	IServerUserItem * pIServerUserItem = GetBindUserItem(wBindIndex);

  0007f	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00083	50		 push	 eax
  00084	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0008f	ff d0		 call	 eax
  00091	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8504 : 	if (pIServerUserItem == NULL) return false;

  00094	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00098	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  0009a	32 c0		 xor	 al, al
  0009c	e9 75 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8505 : 
; 8506 : 	//变量定义
; 8507 : 	BYTE cbBuffer[SOCKET_TCP_BUFFER];
; 8508 : 	ZeroMemory(cbBuffer, sizeof(cbBuffer));

  000a1	68 00 40 00 00	 push	 16384			; 00004000H
  000a6	6a 00		 push	 0
  000a8	8d 85 ec bf ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 _memset
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8509 : 	WORD wSendDataSize = 0;

  000b7	33 c0		 xor	 eax, eax
  000b9	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 8510 : 	CopyMemory(cbBuffer, pRoomCheat + 1, wDataSize - sizeof(CMD_GR_RoomCheat));

  000c0	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000c4	83 e8 04	 sub	 eax, 4
  000c7	50		 push	 eax
  000c8	8b 4d f4	 mov	 ecx, DWORD PTR _pRoomCheat$[ebp]
  000cb	83 c1 04	 add	 ecx, 4
  000ce	51		 push	 ecx
  000cf	8d 95 ec bf ff
	ff		 lea	 edx, DWORD PTR _cbBuffer$[ebp]
  000d5	52		 push	 edx
  000d6	e8 00 00 00 00	 call	 _memcpy
  000db	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8511 : 	wSendDataSize = wDataSize - sizeof(CMD_GR_RoomCheat);

  000de	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000e2	83 e8 04	 sub	 eax, 4
  000e5	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 8512 : 
; 8513 : 	//消息处理 
; 8514 : 	if (pRoomCheat->wTableID != INVALID_TABLE)

  000ec	8b 45 f4	 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  000ef	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000f3	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  000f9	0f 84 97 00 00
	00		 je	 $LN7@OnTCPNetwo

; 8515 : 	{
; 8516 : 		//指定桌
; 8517 : 		ASSERT(pRoomCheat->wTableID < m_TableFrameArray.GetCount());

  000ff	8b 45 f4	 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00102	0f b7 70 02	 movzx	 esi, WORD PTR [eax+2]
  00106	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0010f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00114	3b f0		 cmp	 esi, eax
  00116	7c 19		 jl	 SHORT $LN14@OnTCPNetwo
  00118	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0011e	83 c1 19	 add	 ecx, 25			; 00000019H
  00121	51		 push	 ecx
  00122	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00127	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0012c	85 c0		 test	 eax, eax
  0012e	74 01		 je	 SHORT $LN14@OnTCPNetwo
  00130	cc		 int	 3
$LN14@OnTCPNetwo:

; 8518 : 		if (pRoomCheat->wTableID >= m_TableFrameArray.GetCount()) return false;

  00131	8b 45 f4	 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00134	0f b7 70 02	 movzx	 esi, WORD PTR [eax+2]
  00138	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00141	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00146	3b f0		 cmp	 esi, eax
  00148	7c 07		 jl	 SHORT $LN9@OnTCPNetwo
  0014a	32 c0		 xor	 al, al
  0014c	e9 c5 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 8519 : 
; 8520 : 		CTableFrame * pTableFrame = m_TableFrameArray[pRoomCheat->wTableID];

  00151	8b 45 f4	 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00154	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00158	51		 push	 ecx
  00159	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00162	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00167	8b 10		 mov	 edx, DWORD PTR [eax]
  00169	89 95 e4 bf ff
	ff		 mov	 DWORD PTR _pTableFrame$3[ebp], edx

; 8521 : 		pTableFrame->OnEventSocketFrame(pRoomCheat->wSubCmdID, cbBuffer, wSendDataSize, pIServerUserItem);

  0016f	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00172	50		 push	 eax
  00173	0f b7 8d e8 bf
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  0017a	51		 push	 ecx
  0017b	8d 95 ec bf ff
	ff		 lea	 edx, DWORD PTR _cbBuffer$[ebp]
  00181	52		 push	 edx
  00182	8b 45 f4	 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00185	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00188	51		 push	 ecx
  00189	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  0018f	e8 00 00 00 00	 call	 ?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ; CTableFrame::OnEventSocketFrame

; 8522 : 	}
; 8523 : 	else

  00194	eb 7e		 jmp	 SHORT $LN8@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8524 : 	{
; 8525 : 		//遍历所有桌
; 8526 : 		for (BYTE i = 0; i < m_TableFrameArray.GetCount(); i++)

  00196	c6 85 e3 bf ff
	ff 00		 mov	 BYTE PTR _i$2[ebp], 0
  0019d	eb 0e		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  0019f	8a 85 e3 bf ff
	ff		 mov	 al, BYTE PTR _i$2[ebp]
  001a5	04 01		 add	 al, 1
  001a7	88 85 e3 bf ff
	ff		 mov	 BYTE PTR _i$2[ebp], al
$LN4@OnTCPNetwo:
  001ad	0f b6 b5 e3 bf
	ff ff		 movzx	 esi, BYTE PTR _i$2[ebp]
  001b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b7	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001bd	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  001c2	3b f0		 cmp	 esi, eax
  001c4	7d 4e		 jge	 SHORT $LN8@OnTCPNetwo

; 8527 : 		{
; 8528 : 			CTableFrame * pTableFrame = m_TableFrameArray[i];

  001c6	0f b6 85 e3 bf
	ff ff		 movzx	 eax, BYTE PTR _i$2[ebp]
  001cd	50		 push	 eax
  001ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001d7	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001de	89 8d dc bf ff
	ff		 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 8529 : 			if (pTableFrame != NULL)

  001e4	83 bd dc bf ff
	ff 00		 cmp	 DWORD PTR _pTableFrame$1[ebp], 0
  001eb	74 25		 je	 SHORT $LN10@OnTCPNetwo

; 8530 : 			{
; 8531 : 				pTableFrame->OnEventSocketFrame(pRoomCheat->wSubCmdID, cbBuffer, wSendDataSize, pIServerUserItem);

  001ed	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001f0	50		 push	 eax
  001f1	0f b7 8d e8 bf
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  001f8	51		 push	 ecx
  001f9	8d 95 ec bf ff
	ff		 lea	 edx, DWORD PTR _cbBuffer$[ebp]
  001ff	52		 push	 edx
  00200	8b 45 f4	 mov	 eax, DWORD PTR _pRoomCheat$[ebp]
  00203	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00206	51		 push	 ecx
  00207	8b 8d dc bf ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  0020d	e8 00 00 00 00	 call	 ?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ; CTableFrame::OnEventSocketFrame
$LN10@OnTCPNetwo:

; 8532 : 			}
; 8533 : 		}

  00212	eb 8b		 jmp	 SHORT $LN2@OnTCPNetwo
$LN8@OnTCPNetwo:

; 8534 : 	}
; 8535 : 
; 8536 : 	return true;

  00214	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8537 : }

  00216	5f		 pop	 edi
  00217	5e		 pop	 esi
  00218	5b		 pop	 ebx
  00219	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0021c	33 cd		 xor	 ecx, ebp
  0021e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00223	8b e5		 mov	 esp, ebp
  00225	5d		 pop	 ebp
  00226	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubRoomCheat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_szMessage$ = -152					; size = 128
_pITargetUserItem$ = -24				; size = 4
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pSendWarning$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubWarningUser, COMDAT
; _this$ = ecx

; 8457 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 8458 : 	//效验数据
; 8459 : 	ASSERT(wDataSize==sizeof(CMD_GR_SendWarning));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 86 00 00 00	 cmp	 eax, 134		; 00000086H
  00022	74 19		 je	 SHORT $LN8@OnTCPNetwo
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN8@OnTCPNetwo
  0003c	cc		 int	 3
$LN8@OnTCPNetwo:

; 8460 : 	if (wDataSize!=sizeof(CMD_GR_SendWarning)) return false;

  0003d	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 86 00 00 00	 cmp	 eax, 134		; 00000086H
  00046	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00048	32 c0		 xor	 al, al
  0004a	e9 aa 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8461 : 
; 8462 : 	//提取数据
; 8463 : 	CMD_GR_SendWarning * pSendWarning = (CMD_GR_SendWarning*)pData;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00052	89 45 f4	 mov	 DWORD PTR _pSendWarning$[ebp], eax

; 8464 : 	ASSERT(pSendWarning!=NULL);

  00055	83 7d f4 00	 cmp	 DWORD PTR _pSendWarning$[ebp], 0
  00059	75 18		 jne	 SHORT $LN9@OnTCPNetwo
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00060	83 c0 07	 add	 eax, 7
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00069	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006e	85 c0		 test	 eax, eax
  00070	74 01		 je	 SHORT $LN9@OnTCPNetwo
  00072	cc		 int	 3
$LN9@OnTCPNetwo:

; 8465 : 
; 8466 : 	//获取用户
; 8467 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00073	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00076	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0007b	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8468 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0007f	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00083	50		 push	 eax
  00084	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0008f	ff d0		 call	 eax
  00091	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8469 : 	if (pIServerUserItem==NULL) return false;

  00094	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00098	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0009a	32 c0		 xor	 al, al
  0009c	e9 58 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8470 : 
; 8471 : 	IServerUserItem * pITargetUserItem=m_ServerUserManager.SearchUserItem(pSendWarning->dwTargetUserID);

  000a1	8b 45 f4	 mov	 eax, DWORD PTR _pSendWarning$[ebp]
  000a4	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  000a7	51		 push	 ecx
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000b1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b4	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000ba	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000bd	ff d2		 call	 edx
  000bf	89 45 e8	 mov	 DWORD PTR _pITargetUserItem$[ebp], eax

; 8472 : 	if(pITargetUserItem==NULL) return true;

  000c2	83 7d e8 00	 cmp	 DWORD PTR _pITargetUserItem$[ebp], 0
  000c6	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  000c8	b0 01		 mov	 al, 1
  000ca	e9 2a 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 8473 : 
; 8474 : 	//权限判断
; 8475 : 	ASSERT(CMasterRight::CanSendWarning(pIServerUserItem->GetMasterRight())==true);

  000cf	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d2	8b 10		 mov	 edx, DWORD PTR [eax]
  000d4	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d7	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  000da	ff d0		 call	 eax
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ?CanSendWarning@CMasterRight@@SA_NK@Z ; CMasterRight::CanSendWarning
  000e2	83 c4 04	 add	 esp, 4
  000e5	0f b6 c8	 movzx	 ecx, al
  000e8	83 f9 01	 cmp	 ecx, 1
  000eb	74 19		 je	 SHORT $LN10@OnTCPNetwo
  000ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000f3	83 c2 12	 add	 edx, 18			; 00000012H
  000f6	52		 push	 edx
  000f7	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000fc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00101	85 c0		 test	 eax, eax
  00103	74 01		 je	 SHORT $LN10@OnTCPNetwo
  00105	cc		 int	 3
$LN10@OnTCPNetwo:

; 8476 : 	if (CMasterRight::CanSendWarning(pIServerUserItem->GetMasterRight())==false) return false;

  00106	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00109	8b 10		 mov	 edx, DWORD PTR [eax]
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0010e	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00111	ff d0		 call	 eax
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?CanSendWarning@CMasterRight@@SA_NK@Z ; CMasterRight::CanSendWarning
  00119	83 c4 04	 add	 esp, 4
  0011c	0f b6 c8	 movzx	 ecx, al
  0011f	85 c9		 test	 ecx, ecx
  00121	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  00123	32 c0		 xor	 al, al
  00125	e9 cf 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8477 : 
; 8478 : 	//权限判断
; 8479 : 	ASSERT(pIServerUserItem->GetMasterOrder()>pITargetUserItem->GetMasterOrder());

  0012a	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0012d	8b 10		 mov	 edx, DWORD PTR [eax]
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00132	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00138	ff d0		 call	 eax
  0013a	0f b6 f0	 movzx	 esi, al
  0013d	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00140	8b 11		 mov	 edx, DWORD PTR [ecx]
  00142	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00145	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0014b	ff d0		 call	 eax
  0014d	0f b6 c8	 movzx	 ecx, al
  00150	3b f1		 cmp	 esi, ecx
  00152	7f 19		 jg	 SHORT $LN11@OnTCPNetwo
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0015a	83 c2 16	 add	 edx, 22			; 00000016H
  0015d	52		 push	 edx
  0015e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00163	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00168	85 c0		 test	 eax, eax
  0016a	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0016c	cc		 int	 3
$LN11@OnTCPNetwo:

; 8480 : 	if(pIServerUserItem->GetMasterOrder()<pITargetUserItem->GetMasterOrder()) return false;

  0016d	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00170	8b 10		 mov	 edx, DWORD PTR [eax]
  00172	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00175	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0017b	ff d0		 call	 eax
  0017d	0f b6 f0	 movzx	 esi, al
  00180	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00183	8b 11		 mov	 edx, DWORD PTR [ecx]
  00185	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00188	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0018e	ff d0		 call	 eax
  00190	0f b6 c8	 movzx	 ecx, al
  00193	3b f1		 cmp	 esi, ecx
  00195	7d 04		 jge	 SHORT $LN6@OnTCPNetwo
  00197	32 c0		 xor	 al, al
  00199	eb 5e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8481 : 
; 8482 : 	//发送警告
; 8483 : 	TCHAR szMessage[128]=TEXT("");

  0019b	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  001a0	88 85 68 ff ff
	ff		 mov	 BYTE PTR _szMessage$[ebp], al
  001a6	6a 7f		 push	 127			; 0000007fH
  001a8	6a 00		 push	 0
  001aa	8d 85 69 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp+1]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 _memset
  001b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8484 : 	_sntprintf_s(szMessage,CountArray(szMessage),TEXT("警告：%s"),pSendWarning->szWarningMessage);

  001b9	8b 45 f4	 mov	 eax, DWORD PTR _pSendWarning$[ebp]
  001bc	83 c0 06	 add	 eax, 6
  001bf	50		 push	 eax
  001c0	68 00 00 00 00	 push	 OFFSET ??_C@_08EGGGBJKA@?$LO?$KP?$LI?f?$KD?$LK?$CFs@
  001c5	68 80 00 00 00	 push	 128			; 00000080H
  001ca	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$[ebp]
  001d0	51		 push	 ecx
  001d1	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001d6	83 c4 10	 add	 esp, 16			; 00000010H

; 8485 : 	SendRoomMessage(pITargetUserItem,szMessage,SMT_EJECT);

  001d9	6a 02		 push	 2
  001db	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp]
  001e1	50		 push	 eax
  001e2	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  001e5	51		 push	 ecx
  001e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	83 c1 04	 add	 ecx, 4
  001ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001ef	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001f2	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001f5	ff d2		 call	 edx

; 8486 : 
; 8487 : 	return true;

  001f7	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8488 : }

  001f9	5f		 pop	 edi
  001fa	5e		 pop	 esi
  001fb	5b		 pop	 ebx
  001fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ff	33 cd		 xor	 ecx, ebp
  00201	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00206	8b e5		 mov	 esp, ebp
  00208	5d		 pop	 ebp
  00209	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubWarningUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$ = -20					; size = 4
_pDismissGame$ = -16					; size = 4
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubDismissGame, COMDAT
; _this$ = ecx

; 8425 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8426 : 	//效验数据
; 8427 : 	ASSERT(wDataSize==sizeof(CMD_GR_DismissGame));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 02	 cmp	 eax, 2
  00013	74 19		 je	 SHORT $LN9@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN9@OnTCPNetwo
  0002d	cc		 int	 3
$LN9@OnTCPNetwo:

; 8428 : 	if (wDataSize!=sizeof(CMD_GR_DismissGame)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 02	 cmp	 eax, 2
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 02 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8429 : 
; 8430 : 	//获取用户
; 8431 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0003e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00046	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8432 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0004a	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005a	ff d0		 call	 eax
  0005c	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8433 : 	if (pIServerUserItem==NULL) return false;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00063	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00065	32 c0		 xor	 al, al
  00067	e9 d4 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8434 : 
; 8435 : 	//权限判断
; 8436 : 	ASSERT(CMasterRight::CanDismissGame(pIServerUserItem->GetMasterRight())==true);

  0006c	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00074	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00077	ff d0		 call	 eax
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?CanDismissGame@CMasterRight@@SA_NK@Z ; CMasterRight::CanDismissGame
  0007f	83 c4 04	 add	 esp, 4
  00082	0f b6 c8	 movzx	 ecx, al
  00085	83 f9 01	 cmp	 ecx, 1
  00088	74 19		 je	 SHORT $LN10@OnTCPNetwo
  0008a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00090	83 c2 0b	 add	 edx, 11			; 0000000bH
  00093	52		 push	 edx
  00094	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00099	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009e	85 c0		 test	 eax, eax
  000a0	74 01		 je	 SHORT $LN10@OnTCPNetwo
  000a2	cc		 int	 3
$LN10@OnTCPNetwo:

; 8437 : 	if (CMasterRight::CanDismissGame(pIServerUserItem->GetMasterRight())==false) return false;

  000a3	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  000ae	ff d0		 call	 eax
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?CanDismissGame@CMasterRight@@SA_NK@Z ; CMasterRight::CanDismissGame
  000b6	83 c4 04	 add	 esp, 4
  000b9	0f b6 c8	 movzx	 ecx, al
  000bc	85 c9		 test	 ecx, ecx
  000be	75 04		 jne	 SHORT $LN4@OnTCPNetwo
  000c0	32 c0		 xor	 al, al
  000c2	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 8438 : 
; 8439 : 	//消息处理
; 8440 : 	CMD_GR_DismissGame * pDismissGame=(CMD_GR_DismissGame *)pData;

  000c4	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  000c7	89 45 f0	 mov	 DWORD PTR _pDismissGame$[ebp], eax

; 8441 : 	//效验数据
; 8442 : 	if(pDismissGame->wDismissTableNum >= m_TableFrameArray.GetCount()) return true;

  000ca	8b 45 f0	 mov	 eax, DWORD PTR _pDismissGame$[ebp]
  000cd	0f b7 30	 movzx	 esi, WORD PTR [eax]
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000d9	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  000de	3b f0		 cmp	 esi, eax
  000e0	7c 04		 jl	 SHORT $LN5@OnTCPNetwo
  000e2	b0 01		 mov	 al, 1
  000e4	eb 5a		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8443 : 
; 8444 : 	//解散游戏
; 8445 : 	CTableFrame *pTableFrame=m_TableFrameArray[pDismissGame->wDismissTableNum];

  000e6	8b 45 f0	 mov	 eax, DWORD PTR _pDismissGame$[ebp]
  000e9	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ec	51		 push	 ecx
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000f6	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000fb	8b 10		 mov	 edx, DWORD PTR [eax]
  000fd	89 55 ec	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 8446 : 	if(pTableFrame)

  00100	83 7d ec 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  00104	74 38		 je	 SHORT $LN6@OnTCPNetwo

; 8447 : 	{
; 8448 : 		if(pTableFrame->IsGameStarted()) pTableFrame->DismissGame();

  00106	8b 45 ec	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00109	8b 10		 mov	 edx, DWORD PTR [eax]
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0010e	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00111	ff d0		 call	 eax
  00113	0f b6 c8	 movzx	 ecx, al
  00116	85 c9		 test	 ecx, ecx
  00118	74 0d		 je	 SHORT $LN7@OnTCPNetwo
  0011a	8b 45 ec	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0011d	8b 10		 mov	 edx, DWORD PTR [eax]
  0011f	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00122	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00125	ff d0		 call	 eax
$LN7@OnTCPNetwo:

; 8449 : 		pTableFrame->SendGameMessage(TEXT("抱歉，此桌已被管理员解散游戏"),SMT_EJECT);

  00127	6a 02		 push	 2
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HMAGCPIB@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?W?$MA?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?$LN?b?I?$KC?S?N?O?$LH@
  0012e	8b 45 ec	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00131	8b 10		 mov	 edx, DWORD PTR [eax]
  00133	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00136	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0013c	ff d0		 call	 eax
$LN6@OnTCPNetwo:

; 8450 : 	}
; 8451 : 
; 8452 : 	return true;

  0013e	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8453 : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubDismissGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
$T1 = -88						; size = 4
_pSendMessage$2 = -20					; size = 4
_pSysMessage$ = -16					; size = 4
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubSendMessage, COMDAT
; _this$ = ecx

; 8380 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8381 : 	//获取用户
; 8382 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8383 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8384 : 	if (pIServerUserItem==NULL) return false;

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00031	75 07		 jne	 SHORT $LN2@OnTCPNetwo
  00033	32 c0		 xor	 al, al
  00035	e9 83 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8385 : 
; 8386 : 	//权限判断
; 8387 : 	ASSERT(CMasterRight::CanIssueMessage(pIServerUserItem->GetMasterRight())==true);

  0003a	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0003d	8b 10		 mov	 edx, DWORD PTR [eax]
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00042	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00045	ff d0		 call	 eax
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?CanIssueMessage@CMasterRight@@SA_NK@Z ; CMasterRight::CanIssueMessage
  0004d	83 c4 04	 add	 esp, 4
  00050	0f b6 c8	 movzx	 ecx, al
  00053	83 f9 01	 cmp	 ecx, 1
  00056	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005e	83 c2 07	 add	 edx, 7
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00067	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006c	85 c0		 test	 eax, eax
  0006e	74 01		 je	 SHORT $LN11@OnTCPNetwo
  00070	cc		 int	 3
$LN11@OnTCPNetwo:

; 8388 : 	if (CMasterRight::CanIssueMessage(pIServerUserItem->GetMasterRight())==false) return false;

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00079	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  0007c	ff d0		 call	 eax
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?CanIssueMessage@CMasterRight@@SA_NK@Z ; CMasterRight::CanIssueMessage
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 c8	 movzx	 ecx, al
  0008a	85 c9		 test	 ecx, ecx
  0008c	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0008e	32 c0		 xor	 al, al
  00090	e9 28 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8389 : 
; 8390 : 	//变量定义
; 8391 : 	CMD_GR_SendMessage *pSysMessage = (CMD_GR_SendMessage *)pData;

  00095	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00098	89 45 f0	 mov	 DWORD PTR _pSysMessage$[ebp], eax

; 8392 : 
; 8393 : 	if(pSysMessage->cbLoop==TRUE)

  0009b	8b 45 f0	 mov	 eax, DWORD PTR _pSysMessage$[ebp]
  0009e	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  000a2	83 f9 01	 cmp	 ecx, 1
  000a5	0f 85 01 01 00
	00		 jne	 $LN4@OnTCPNetwo

; 8394 : 	{
; 8395 : 		//定于变量
; 8396 : 		tagSystemMessage  *pSendMessage=new tagSystemMessage;

  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000b0	83 c0 10	 add	 eax, 16			; 00000010H
  000b3	50		 push	 eax
  000b4	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b9	68 9e 00 00 00	 push	 158			; 0000009eH
  000be	e8 00 00 00 00	 call	 ??2@YAPAXIPBDH@Z	; operator new
  000c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c6	89 45 a8	 mov	 DWORD PTR $T1[ebp], eax
  000c9	8b 4d a8	 mov	 ecx, DWORD PTR $T1[ebp]
  000cc	89 4d ec	 mov	 DWORD PTR _pSendMessage$2[ebp], ecx

; 8397 : 		ZeroMemory(pSendMessage, sizeof(tagSystemMessage));

  000cf	68 9e 00 00 00	 push	 158			; 0000009eH
  000d4	6a 00		 push	 0
  000d6	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 _memset
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8398 : 
; 8399 : 		//构造消息
; 8400 : 		pSendMessage->dwLastTime=(DWORD)time(NULL);

  000e2	6a 00		 push	 0
  000e4	e8 00 00 00 00	 call	 _time
  000e9	83 c4 04	 add	 esp, 4
  000ec	8b 4d ec	 mov	 ecx, DWORD PTR _pSendMessage$2[ebp]
  000ef	89 01		 mov	 DWORD PTR [ecx], eax

; 8401 : 		pSendMessage->SystemMessage.dwMessageID=TEMP_MESSAGE_ID;

  000f1	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  000f4	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1

; 8402 : 		pSendMessage->SystemMessage.cbAllRoom=pSysMessage->cbAllRoom;

  000fb	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _pSysMessage$[ebp]
  00101	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00104	88 50 09	 mov	 BYTE PTR [eax+9], dl

; 8403 : 		if(pSysMessage->cbRoom==TRUE && pSysMessage->cbGame==TRUE)

  00107	8b 45 f0	 mov	 eax, DWORD PTR _pSysMessage$[ebp]
  0010a	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0010e	83 f9 01	 cmp	 ecx, 1
  00111	75 14		 jne	 SHORT $LN5@OnTCPNetwo
  00113	8b 45 f0	 mov	 eax, DWORD PTR _pSysMessage$[ebp]
  00116	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00119	83 f9 01	 cmp	 ecx, 1
  0011c	75 09		 jne	 SHORT $LN5@OnTCPNetwo

; 8404 : 			pSendMessage->SystemMessage.cbMessageType=3;

  0011e	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  00121	c6 40 08 03	 mov	 BYTE PTR [eax+8], 3
  00125	eb 27		 jmp	 SHORT $LN6@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8405 : 		else if(pSysMessage->cbRoom==TRUE)

  00127	8b 45 f0	 mov	 eax, DWORD PTR _pSysMessage$[ebp]
  0012a	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0012e	83 f9 01	 cmp	 ecx, 1
  00131	75 09		 jne	 SHORT $LN7@OnTCPNetwo

; 8406 : 			pSendMessage->SystemMessage.cbMessageType=2;

  00133	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  00136	c6 40 08 02	 mov	 BYTE PTR [eax+8], 2
  0013a	eb 12		 jmp	 SHORT $LN6@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8407 : 		else if(pSysMessage->cbGame==TRUE)

  0013c	8b 45 f0	 mov	 eax, DWORD PTR _pSysMessage$[ebp]
  0013f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00142	83 f9 01	 cmp	 ecx, 1
  00145	75 07		 jne	 SHORT $LN6@OnTCPNetwo

; 8408 : 			pSendMessage->SystemMessage.cbMessageType=1;

  00147	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  0014a	c6 40 08 01	 mov	 BYTE PTR [eax+8], 1
$LN6@OnTCPNetwo:

; 8409 : 		pSendMessage->SystemMessage.dwTimeRate=pSysMessage->dwTimeRate;

  0014e	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  00151	8b 4d f0	 mov	 ecx, DWORD PTR _pSysMessage$[ebp]
  00154	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00157	89 50 0a	 mov	 DWORD PTR [eax+10], edx

; 8410 : 		pSendMessage->SystemMessage.tStartTime=(DWORD)time(NULL);

  0015a	6a 00		 push	 0
  0015c	e8 00 00 00 00	 call	 _time
  00161	83 c4 04	 add	 esp, 4
  00164	33 c9		 xor	 ecx, ecx
  00166	8b 55 ec	 mov	 edx, DWORD PTR _pSendMessage$2[ebp]
  00169	89 42 0e	 mov	 DWORD PTR [edx+14], eax
  0016c	89 4a 12	 mov	 DWORD PTR [edx+18], ecx

; 8411 : 		pSendMessage->SystemMessage.tConcludeTime=pSysMessage->tConcludeTime;

  0016f	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$2[ebp]
  00172	8b 4d f0	 mov	 ecx, DWORD PTR _pSysMessage$[ebp]
  00175	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00178	89 50 16	 mov	 DWORD PTR [eax+22], edx
  0017b	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0017e	89 48 1a	 mov	 DWORD PTR [eax+26], ecx

; 8412 : 		lstrcpyn(pSendMessage->SystemMessage.szSystemMessage, pSysMessage->szSystemMessage, CountArray(pSendMessage->SystemMessage.szSystemMessage));

  00181	68 80 00 00 00	 push	 128			; 00000080H
  00186	8b 45 f0	 mov	 eax, DWORD PTR _pSysMessage$[ebp]
  00189	83 c0 12	 add	 eax, 18			; 00000012H
  0018c	50		 push	 eax
  0018d	8b 4d ec	 mov	 ecx, DWORD PTR _pSendMessage$2[ebp]
  00190	83 c1 1e	 add	 ecx, 30			; 0000001eH
  00193	51		 push	 ecx
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 8413 : 
; 8414 : 		//记录消息
; 8415 : 		m_SystemMessageActive.Add(pSendMessage);

  0019a	8d 45 ec	 lea	 eax, DWORD PTR _pSendMessage$2[ebp]
  0019d	50		 push	 eax
  0019e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  001a7	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add
$LN4@OnTCPNetwo:

; 8416 : 	}
; 8417 : 
; 8418 : 
; 8419 : 	//消息处理
; 8420 : 	return SendSystemMessage((CMD_GR_SendMessage *)pData, wDataSize);

  001ac	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001b0	50		 push	 eax
  001b1	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  001b4	51		 push	 ecx
  001b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b8	e8 00 00 00 00	 call	 ?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z ; CAttemperEngineSink::SendSystemMessage
$LN1@OnTCPNetwo:

; 8421 : }

  001bd	5f		 pop	 edi
  001be	5e		 pop	 esi
  001bf	5b		 pop	 ebx
  001c0	8b e5		 mov	 esp, ebp
  001c2	5d		 pop	 ebp
  001c3	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubSendMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv218 = -98						; size = 2
tv191 = -98						; size = 2
_pITargerUserItem$ = -32				; size = 4
_wEnumIndex$ = -28					; size = 2
_pTableFrame$1 = -24					; size = 4
_i$2 = -20						; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pKillAllUser$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubKickAllUser, COMDAT
; _this$ = ecx

; 8330 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8331 : 	//消息处理
; 8332 : 	CMD_GR_KickAllUser * pKillAllUser=(CMD_GR_KickAllUser *)pData;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pKillAllUser$[ebp], eax

; 8333 : 
; 8334 : 	//效验数据
; 8335 : 	ASSERT(wDataSize<=sizeof(CMD_GR_KickAllUser));

  00012	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00016	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0001b	76 19		 jbe	 SHORT $LN14@OnTCPNetwo
  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00023	83 c1 05	 add	 ecx, 5
  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00031	85 c0		 test	 eax, eax
  00033	74 01		 je	 SHORT $LN14@OnTCPNetwo
  00035	cc		 int	 3
$LN14@OnTCPNetwo:

; 8336 : 	if( wDataSize > sizeof(CMD_GR_KickAllUser) ) return false;

  00036	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003a	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  0003f	76 07		 jbe	 SHORT $LN7@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 d0 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8337 : 	ASSERT(wDataSize==CountStringBuffer(pKillAllUser->szKickMessage));

  00048	0f b7 75 0c	 movzx	 esi, WORD PTR _wDataSize$[ebp]
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pKillAllUser$[ebp]
  0004f	50		 push	 eax
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00056	83 c0 01	 add	 eax, 1
  00059	3b f0		 cmp	 esi, eax
  0005b	74 19		 je	 SHORT $LN15@OnTCPNetwo
  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00063	83 c1 07	 add	 ecx, 7
  00066	51		 push	 ecx
  00067	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0006c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00071	85 c0		 test	 eax, eax
  00073	74 01		 je	 SHORT $LN15@OnTCPNetwo
  00075	cc		 int	 3
$LN15@OnTCPNetwo:

; 8338 : 	if (wDataSize!=CountStringBuffer(pKillAllUser->szKickMessage)) return false;

  00076	0f b7 75 0c	 movzx	 esi, WORD PTR _wDataSize$[ebp]
  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pKillAllUser$[ebp]
  0007d	50		 push	 eax
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00084	83 c0 01	 add	 eax, 1
  00087	3b f0		 cmp	 esi, eax
  00089	74 07		 je	 SHORT $LN8@OnTCPNetwo
  0008b	32 c0		 xor	 al, al
  0008d	e9 86 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 8339 : 
; 8340 : 	//获取用户
; 8341 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00092	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00095	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0009a	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8342 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0009e	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ae	ff d0		 call	 eax
  000b0	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8343 : 	if (pIServerUserItem==NULL) return false;

  000b3	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000b7	75 07		 jne	 SHORT $LN9@OnTCPNetwo
  000b9	32 c0		 xor	 al, al
  000bb	e9 58 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 8344 : 
; 8345 : 	//权限判断
; 8346 : 	ASSERT(CMasterRight::CanKillUser(pIServerUserItem->GetMasterRight())==true);

  000c0	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c8	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  000cb	ff d0		 call	 eax
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?CanKillUser@CMasterRight@@SA_NK@Z ; CMasterRight::CanKillUser
  000d3	83 c4 04	 add	 esp, 4
  000d6	0f b6 c8	 movzx	 ecx, al
  000d9	83 f9 01	 cmp	 ecx, 1
  000dc	74 19		 je	 SHORT $LN16@OnTCPNetwo
  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000e4	83 c2 10	 add	 edx, 16			; 00000010H
  000e7	52		 push	 edx
  000e8	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000ed	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000f2	85 c0		 test	 eax, eax
  000f4	74 01		 je	 SHORT $LN16@OnTCPNetwo
  000f6	cc		 int	 3
$LN16@OnTCPNetwo:

; 8347 : 	if (CMasterRight::CanKillUser(pIServerUserItem->GetMasterRight())==false) return false;

  000f7	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000fa	8b 10		 mov	 edx, DWORD PTR [eax]
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ff	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00102	ff d0		 call	 eax
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?CanKillUser@CMasterRight@@SA_NK@Z ; CMasterRight::CanKillUser
  0010a	83 c4 04	 add	 esp, 4
  0010d	0f b6 c8	 movzx	 ecx, al
  00110	85 c9		 test	 ecx, ecx
  00112	75 07		 jne	 SHORT $LN10@OnTCPNetwo
  00114	32 c0		 xor	 al, al
  00116	e9 fd 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 8348 : 
; 8349 : 	//解散所有游戏
; 8350 : 	for (INT_PTR i=0;i<m_TableFrameArray.GetCount();i++)

  0011b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00122	eb 09		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  00124	8b 45 ec	 mov	 eax, DWORD PTR _i$2[ebp]
  00127	83 c0 01	 add	 eax, 1
  0012a	89 45 ec	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@OnTCPNetwo:
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00136	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  0013b	39 45 ec	 cmp	 DWORD PTR _i$2[ebp], eax
  0013e	7d 3c		 jge	 SHORT $LN3@OnTCPNetwo

; 8351 : 	{
; 8352 : 		//获取桌子
; 8353 : 		CTableFrame * pTableFrame=m_TableFrameArray[i];

  00140	8b 45 ec	 mov	 eax, DWORD PTR _i$2[ebp]
  00143	50		 push	 eax
  00144	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0014d	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00152	8b 08		 mov	 ecx, DWORD PTR [eax]
  00154	89 4d e8	 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 8354 : 		if ( !pTableFrame->IsGameStarted() ) continue;

  00157	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$1[ebp]
  0015a	8b 10		 mov	 edx, DWORD PTR [eax]
  0015c	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  0015f	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00162	ff d0		 call	 eax
  00164	0f b6 c8	 movzx	 ecx, al
  00167	85 c9		 test	 ecx, ecx
  00169	75 02		 jne	 SHORT $LN11@OnTCPNetwo
  0016b	eb b7		 jmp	 SHORT $LN2@OnTCPNetwo
$LN11@OnTCPNetwo:

; 8355 : 
; 8356 : 		pTableFrame->DismissGame();

  0016d	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$1[ebp]
  00170	8b 10		 mov	 edx, DWORD PTR [eax]
  00172	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  00175	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00178	ff d0		 call	 eax

; 8357 : 	}

  0017a	eb a8		 jmp	 SHORT $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8358 : 
; 8359 : 
; 8360 : 	//变量定义
; 8361 : 	WORD wEnumIndex=0;

  0017c	33 c0		 xor	 eax, eax
  0017e	66 89 45 e4	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 8362 : 	IServerUserItem * pITargerUserItem= m_ServerUserManager.EnumUserItem(wEnumIndex++);

  00182	66 8b 45 e4	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00186	66 89 45 9e	 mov	 WORD PTR tv191[ebp], ax
  0018a	0f b7 4d 9e	 movzx	 ecx, WORD PTR tv191[ebp]
  0018e	51		 push	 ecx
  0018f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00198	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0019b	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  001a1	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  001a4	ff d2		 call	 edx
  001a6	89 45 e0	 mov	 DWORD PTR _pITargerUserItem$[ebp], eax
  001a9	66 8b 45 e4	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  001ad	66 83 c0 01	 add	 ax, 1
  001b1	66 89 45 e4	 mov	 WORD PTR _wEnumIndex$[ebp], ax
$LN5@OnTCPNetwo:

; 8363 : 	while(pITargerUserItem!=NULL)

  001b5	83 7d e0 00	 cmp	 DWORD PTR _pITargerUserItem$[ebp], 0
  001b9	74 5b		 je	 SHORT $LN6@OnTCPNetwo

; 8364 : 	{
; 8365 : 		if(pITargerUserItem!=pIServerUserItem)

  001bb	8b 45 e0	 mov	 eax, DWORD PTR _pITargerUserItem$[ebp]
  001be	3b 45 f0	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001c1	74 1e		 je	 SHORT $LN12@OnTCPNetwo

; 8366 : 		{
; 8367 : 			//发送消息
; 8368 : 			SendRoomMessage(pITargerUserItem,pKillAllUser->szKickMessage,SMT_CHAT|SMT_EJECT|SMT_CLOSE_LINK|SMT_CLOSE_ROOM);

  001c3	68 03 05 00 00	 push	 1283			; 00000503H
  001c8	8b 45 f8	 mov	 eax, DWORD PTR _pKillAllUser$[ebp]
  001cb	50		 push	 eax
  001cc	8b 4d e0	 mov	 ecx, DWORD PTR _pITargerUserItem$[ebp]
  001cf	51		 push	 ecx
  001d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d3	83 c1 04	 add	 ecx, 4
  001d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001d9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001dc	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001df	ff d2		 call	 edx
$LN12@OnTCPNetwo:

; 8369 : 		}
; 8370 : 
; 8371 : 		//枚举用户
; 8372 : 		pITargerUserItem= m_ServerUserManager.EnumUserItem(wEnumIndex++);

  001e1	66 8b 45 e4	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  001e5	66 89 45 9e	 mov	 WORD PTR tv218[ebp], ax
  001e9	0f b7 4d 9e	 movzx	 ecx, WORD PTR tv218[ebp]
  001ed	51		 push	 ecx
  001ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  001f7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001fa	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00200	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00203	ff d2		 call	 edx
  00205	89 45 e0	 mov	 DWORD PTR _pITargerUserItem$[ebp], eax
  00208	66 8b 45 e4	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  0020c	66 83 c0 01	 add	 ax, 1
  00210	66 89 45 e4	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 8373 : 	}

  00214	eb 9f		 jmp	 SHORT $LN5@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8374 : 
; 8375 : 	return true;

  00216	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8376 : }

  00218	5f		 pop	 edi
  00219	5e		 pop	 esi
  0021a	5b		 pop	 ebx
  0021b	8b e5		 mov	 esp, ebp
  0021d	5d		 pop	 ebp
  0021e	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubKickAllUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_cur$1 = -32						; size = 4
_dwRemoveRight$ = -28					; size = 4
_dwAddRight$ = -24					; size = 4
_pITargerUserItem$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pLimitUserChat$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubLimitUserChat, COMDAT
; _this$ = ecx

; 8246 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8247 : 	//效验数据
; 8248 : 	ASSERT(wDataSize==sizeof(CMD_GR_LimitUserChat));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 06	 cmp	 eax, 6
  00013	74 19		 je	 SHORT $LN25@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN25@OnTCPNetwo
  0002d	cc		 int	 3
$LN25@OnTCPNetwo:

; 8249 : 	if (wDataSize!=sizeof(CMD_GR_LimitUserChat)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 06	 cmp	 eax, 6
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 2d 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8250 : 
; 8251 : 	//消息处理
; 8252 : 	CMD_GR_LimitUserChat * pLimitUserChat=(CMD_GR_LimitUserChat *)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pLimitUserChat$[ebp], eax

; 8253 : 
; 8254 : 	//获取用户
; 8255 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00044	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00047	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004c	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8256 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00050	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00054	50		 push	 eax
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8257 : 	if (pIServerUserItem==NULL) return false;

  00065	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00069	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0006b	32 c0		 xor	 al, al
  0006d	e9 f9 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8258 : 
; 8259 : 	//目标用户
; 8260 : 	IServerUserItem * pITargerUserItem=m_ServerUserManager.SearchUserItem(pLimitUserChat->dwTargetUserID);

  00072	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	51		 push	 ecx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00081	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0008a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008d	ff d2		 call	 edx
  0008f	89 45 ec	 mov	 DWORD PTR _pITargerUserItem$[ebp], eax

; 8261 : 	if (pITargerUserItem==NULL) return true;

  00092	83 7d ec 00	 cmp	 DWORD PTR _pITargerUserItem$[ebp], 0
  00096	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  00098	b0 01		 mov	 al, 1
  0009a	e9 cc 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 8262 : 
; 8263 : 	//变量定义
; 8264 : 	DWORD dwAddRight = 0, dwRemoveRight = 0;

  0009f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _dwAddRight$[ebp], 0
  000a6	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dwRemoveRight$[ebp], 0

; 8265 : 
; 8266 : 	//大厅聊天
; 8267 : 	if (pLimitUserChat->cbLimitFlags==OSF_ROOM_CHAT)

  000ad	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  000b0	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  000b4	83 f9 01	 cmp	 ecx, 1
  000b7	75 44		 jne	 SHORT $LN5@OnTCPNetwo

; 8268 : 	{
; 8269 : 		if (CMasterRight::CanLimitRoomChat(pIServerUserItem->GetMasterRight())==false) return false;

  000b9	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000bc	8b 10		 mov	 edx, DWORD PTR [eax]
  000be	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c1	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  000c4	ff d0		 call	 eax
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?CanLimitRoomChat@CMasterRight@@SA_NK@Z ; CMasterRight::CanLimitRoomChat
  000cc	83 c4 04	 add	 esp, 4
  000cf	0f b6 c8	 movzx	 ecx, al
  000d2	85 c9		 test	 ecx, ecx
  000d4	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  000d6	32 c0		 xor	 al, al
  000d8	e9 8e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8270 : 
; 8271 : 		if( pLimitUserChat->cbLimitValue == TRUE )

  000dd	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  000e0	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  000e4	83 f9 01	 cmp	 ecx, 1
  000e7	75 0b		 jne	 SHORT $LN7@OnTCPNetwo

; 8272 : 			dwAddRight |= UR_CANNOT_ROOM_CHAT;

  000e9	8b 45 e8	 mov	 eax, DWORD PTR _dwAddRight$[ebp]
  000ec	83 c8 08	 or	 eax, 8
  000ef	89 45 e8	 mov	 DWORD PTR _dwAddRight$[ebp], eax

; 8273 : 		else

  000f2	eb 09		 jmp	 SHORT $LN5@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8274 : 			dwRemoveRight |= UR_CANNOT_ROOM_CHAT;

  000f4	8b 45 e4	 mov	 eax, DWORD PTR _dwRemoveRight$[ebp]
  000f7	83 c8 08	 or	 eax, 8
  000fa	89 45 e4	 mov	 DWORD PTR _dwRemoveRight$[ebp], eax
$LN5@OnTCPNetwo:

; 8275 : 	}
; 8276 : 
; 8277 : 	//游戏聊天
; 8278 : 	if (pLimitUserChat->cbLimitFlags==OSF_GAME_CHAT)

  000fd	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  00100	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00104	83 f9 02	 cmp	 ecx, 2
  00107	75 44		 jne	 SHORT $LN9@OnTCPNetwo

; 8279 : 	{
; 8280 : 		if (CMasterRight::CanLimitGameChat(pIServerUserItem->GetMasterRight())==false) return false;

  00109	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00111	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00114	ff d0		 call	 eax
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?CanLimitGameChat@CMasterRight@@SA_NK@Z ; CMasterRight::CanLimitGameChat
  0011c	83 c4 04	 add	 esp, 4
  0011f	0f b6 c8	 movzx	 ecx, al
  00122	85 c9		 test	 ecx, ecx
  00124	75 07		 jne	 SHORT $LN10@OnTCPNetwo
  00126	32 c0		 xor	 al, al
  00128	e9 3e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 8281 : 
; 8282 : 		if( pLimitUserChat->cbLimitValue == TRUE )

  0012d	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  00130	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00134	83 f9 01	 cmp	 ecx, 1
  00137	75 0b		 jne	 SHORT $LN11@OnTCPNetwo

; 8283 : 			dwAddRight |= UR_CANNOT_GAME_CHAT;

  00139	8b 45 e8	 mov	 eax, DWORD PTR _dwAddRight$[ebp]
  0013c	83 c8 10	 or	 eax, 16			; 00000010H
  0013f	89 45 e8	 mov	 DWORD PTR _dwAddRight$[ebp], eax

; 8284 : 		else

  00142	eb 09		 jmp	 SHORT $LN9@OnTCPNetwo
$LN11@OnTCPNetwo:

; 8285 : 			dwRemoveRight |= UR_CANNOT_GAME_CHAT;

  00144	8b 45 e4	 mov	 eax, DWORD PTR _dwRemoveRight$[ebp]
  00147	83 c8 10	 or	 eax, 16			; 00000010H
  0014a	89 45 e4	 mov	 DWORD PTR _dwRemoveRight$[ebp], eax
$LN9@OnTCPNetwo:

; 8286 : 	}
; 8287 : 
; 8288 : 	//大厅私聊
; 8289 : 	if (pLimitUserChat->cbLimitFlags==OSF_ROOM_WISPER)

  0014d	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  00150	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00154	83 f9 03	 cmp	 ecx, 3
  00157	75 44		 jne	 SHORT $LN13@OnTCPNetwo

; 8290 : 	{
; 8291 : 		if (CMasterRight::CanLimitWisper(pIServerUserItem->GetMasterRight())==false) return false;

  00159	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0015c	8b 10		 mov	 edx, DWORD PTR [eax]
  0015e	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00161	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00164	ff d0		 call	 eax
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 ?CanLimitWisper@CMasterRight@@SA_NK@Z ; CMasterRight::CanLimitWisper
  0016c	83 c4 04	 add	 esp, 4
  0016f	0f b6 c8	 movzx	 ecx, al
  00172	85 c9		 test	 ecx, ecx
  00174	75 07		 jne	 SHORT $LN14@OnTCPNetwo
  00176	32 c0		 xor	 al, al
  00178	e9 ee 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 8292 : 
; 8293 : 		if( pLimitUserChat->cbLimitValue == TRUE )

  0017d	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  00180	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00184	83 f9 01	 cmp	 ecx, 1
  00187	75 0b		 jne	 SHORT $LN15@OnTCPNetwo

; 8294 : 			dwAddRight |= UR_CANNOT_WISPER;

  00189	8b 45 e8	 mov	 eax, DWORD PTR _dwAddRight$[ebp]
  0018c	83 c8 04	 or	 eax, 4
  0018f	89 45 e8	 mov	 DWORD PTR _dwAddRight$[ebp], eax

; 8295 : 		else

  00192	eb 09		 jmp	 SHORT $LN13@OnTCPNetwo
$LN15@OnTCPNetwo:

; 8296 : 			dwRemoveRight |= UR_CANNOT_WISPER;

  00194	8b 45 e4	 mov	 eax, DWORD PTR _dwRemoveRight$[ebp]
  00197	83 c8 04	 or	 eax, 4
  0019a	89 45 e4	 mov	 DWORD PTR _dwRemoveRight$[ebp], eax
$LN13@OnTCPNetwo:

; 8297 : 	}
; 8298 : 
; 8299 : 	//发送喇叭
; 8300 : 	if(pLimitUserChat->cbLimitFlags==OSF_SEND_BUGLE)

  0019d	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  001a0	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  001a4	83 f9 0c	 cmp	 ecx, 12			; 0000000cH
  001a7	75 44		 jne	 SHORT $LN17@OnTCPNetwo

; 8301 : 	{
; 8302 : 		if (CMasterRight::CanLimitUserChat(pIServerUserItem->GetMasterRight())==false) return false;

  001a9	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ac	8b 10		 mov	 edx, DWORD PTR [eax]
  001ae	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b1	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  001b4	ff d0		 call	 eax
  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 ?CanLimitUserChat@CMasterRight@@SA_NK@Z ; CMasterRight::CanLimitUserChat
  001bc	83 c4 04	 add	 esp, 4
  001bf	0f b6 c8	 movzx	 ecx, al
  001c2	85 c9		 test	 ecx, ecx
  001c4	75 07		 jne	 SHORT $LN18@OnTCPNetwo
  001c6	32 c0		 xor	 al, al
  001c8	e9 9e 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 8303 : 
; 8304 : 		if(pLimitUserChat->cbLimitValue == TRUE)

  001cd	8b 45 f8	 mov	 eax, DWORD PTR _pLimitUserChat$[ebp]
  001d0	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  001d4	83 f9 01	 cmp	 ecx, 1
  001d7	75 0b		 jne	 SHORT $LN19@OnTCPNetwo

; 8305 : 			dwAddRight |= UR_CANNOT_BUGLE;

  001d9	8b 45 e8	 mov	 eax, DWORD PTR _dwAddRight$[ebp]
  001dc	83 c8 20	 or	 eax, 32			; 00000020H
  001df	89 45 e8	 mov	 DWORD PTR _dwAddRight$[ebp], eax

; 8306 : 		else

  001e2	eb 09		 jmp	 SHORT $LN17@OnTCPNetwo
$LN19@OnTCPNetwo:

; 8307 : 			dwRemoveRight |= UR_CANNOT_BUGLE;

  001e4	8b 45 e4	 mov	 eax, DWORD PTR _dwRemoveRight$[ebp]
  001e7	83 c8 20	 or	 eax, 32			; 00000020H
  001ea	89 45 e4	 mov	 DWORD PTR _dwRemoveRight$[ebp], eax
$LN17@OnTCPNetwo:

; 8308 : 	}
; 8309 : 
; 8310 : 	if( dwAddRight != 0 || dwRemoveRight != 0 )

  001ed	83 7d e8 00	 cmp	 DWORD PTR _dwAddRight$[ebp], 0
  001f1	75 06		 jne	 SHORT $LN23@OnTCPNetwo
  001f3	83 7d e4 00	 cmp	 DWORD PTR _dwRemoveRight$[ebp], 0
  001f7	74 6c		 je	 SHORT $LN21@OnTCPNetwo
$LN23@OnTCPNetwo:

; 8311 : 	{
; 8312 : 		pITargerUserItem->ModifyUserRight(dwAddRight,dwRemoveRight);

  001f9	6a 00		 push	 0
  001fb	8b 45 e4	 mov	 eax, DWORD PTR _dwRemoveRight$[ebp]
  001fe	50		 push	 eax
  001ff	8b 4d e8	 mov	 ecx, DWORD PTR _dwAddRight$[ebp]
  00202	51		 push	 ecx
  00203	8b 55 ec	 mov	 edx, DWORD PTR _pITargerUserItem$[ebp]
  00206	8b 02		 mov	 eax, DWORD PTR [edx]
  00208	8b 4d ec	 mov	 ecx, DWORD PTR _pITargerUserItem$[ebp]
  0020b	8b 90 08 01 00
	00		 mov	 edx, DWORD PTR [eax+264]
  00211	ff d2		 call	 edx

; 8313 : 
; 8314 : 		//发送通知
; 8315 : 		CMD_GR_ConfigUserRight cur = {0};

  00213	33 c0		 xor	 eax, eax
  00215	89 45 e0	 mov	 DWORD PTR _cur$1[ebp], eax

; 8316 : 		cur.dwUserRight = pITargerUserItem->GetUserRight();

  00218	8b 45 ec	 mov	 eax, DWORD PTR _pITargerUserItem$[ebp]
  0021b	8b 10		 mov	 edx, DWORD PTR [eax]
  0021d	8b 4d ec	 mov	 ecx, DWORD PTR _pITargerUserItem$[ebp]
  00220	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00223	ff d0		 call	 eax
  00225	89 45 e0	 mov	 DWORD PTR _cur$1[ebp], eax

; 8317 : 
; 8318 : 		SendData( pITargerUserItem,MDM_GR_CONFIG,SUB_GR_CONFIG_USER_RIGHT,&cur,sizeof(cur) );

  00228	6a 04		 push	 4
  0022a	8d 45 e0	 lea	 eax, DWORD PTR _cur$1[ebp]
  0022d	50		 push	 eax
  0022e	6a 68		 push	 104			; 00000068H
  00230	6a 02		 push	 2
  00232	8b 4d ec	 mov	 ecx, DWORD PTR _pITargerUserItem$[ebp]
  00235	51		 push	 ecx
  00236	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00239	83 c1 04	 add	 ecx, 4
  0023c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0023f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00242	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00245	ff d2		 call	 edx

; 8319 : 
; 8320 : 		//发送消息
; 8321 : 		SendRoomMessage(pIServerUserItem,TEXT("用户聊天权限配置成功！"),SMT_CHAT);

  00247	6a 01		 push	 1
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DNGDNDFB@?S?C?$LL?$KH?A?D?L?l?H?$KI?O?$NO?E?d?V?C?$LD?I?$LJ?$KG?$KD?$KB@
  0024e	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00251	50		 push	 eax
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00255	83 c1 04	 add	 ecx, 4
  00258	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0025b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0025e	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00261	ff d2		 call	 edx
  00263	eb 04		 jmp	 SHORT $LN22@OnTCPNetwo
$LN21@OnTCPNetwo:

; 8322 : 	}
; 8323 : 	else return false;

  00265	32 c0		 xor	 al, al
  00267	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN22@OnTCPNetwo:

; 8324 : 
; 8325 : 	return true;

  00269	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8326 : }

  0026b	5f		 pop	 edi
  0026c	5e		 pop	 esi
  0026d	5b		 pop	 ebx
  0026e	8b e5		 mov	 esp, ebp
  00270	5d		 pop	 ebp
  00271	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubLimitUserChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pszMessage$ = -32					; size = 4
_pTableFrame$1 = -28					; size = 4
_wTargerTableID$ = -24					; size = 2
_pITargetUserItem$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pKickUser$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubManagerKickUser, COMDAT
; _this$ = ecx

; 8194 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 8195 : 	//效验参数
; 8196 : 	ASSERT(wDataSize==sizeof(CMD_GR_KickUser));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 04	 cmp	 eax, 4
  00013	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0002d	cc		 int	 3
$LN11@OnTCPNetwo:

; 8197 : 	if (wDataSize!=sizeof(CMD_GR_KickUser)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 04	 cmp	 eax, 4
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 06 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8198 : 
; 8199 : 	//变量定义
; 8200 : 	CMD_GR_KickUser * pKickUser=(CMD_GR_KickUser *)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pKickUser$[ebp], eax

; 8201 : 
; 8202 : 	//获取用户
; 8203 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00044	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00047	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004c	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8204 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00050	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00054	50		 push	 eax
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8205 : 
; 8206 : 	//用户效验
; 8207 : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->GetMasterOrder()>0));

  00065	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00069	74 17		 je	 SHORT $LN12@OnTCPNetwo
  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0006e	8b 10		 mov	 edx, DWORD PTR [eax]
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00073	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00079	ff d0		 call	 eax
  0007b	0f b6 c8	 movzx	 ecx, al
  0007e	85 c9		 test	 ecx, ecx
  00080	7f 19		 jg	 SHORT $LN13@OnTCPNetwo
$LN12@OnTCPNetwo:
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00088	83 c2 0d	 add	 edx, 13			; 0000000dH
  0008b	52		 push	 edx
  0008c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00091	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00096	85 c0		 test	 eax, eax
  00098	74 01		 je	 SHORT $LN13@OnTCPNetwo
  0009a	cc		 int	 3
$LN13@OnTCPNetwo:

; 8208 : 	if ((pIServerUserItem==NULL)||(pIServerUserItem->GetMasterOrder()==0)) return false;

  0009b	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0009f	74 17		 je	 SHORT $LN4@OnTCPNetwo
  000a1	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000a9	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  000af	ff d0		 call	 eax
  000b1	0f b6 c8	 movzx	 ecx, al
  000b4	85 c9		 test	 ecx, ecx
  000b6	75 07		 jne	 SHORT $LN3@OnTCPNetwo
$LN4@OnTCPNetwo:
  000b8	32 c0		 xor	 al, al
  000ba	e9 85 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8209 : 
; 8210 : 	//权限判断
; 8211 : 	ASSERT(CMasterRight::CanKillUser(pIServerUserItem->GetMasterRight())==true);

  000bf	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c7	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  000ca	ff d0		 call	 eax
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ?CanKillUser@CMasterRight@@SA_NK@Z ; CMasterRight::CanKillUser
  000d2	83 c4 04	 add	 esp, 4
  000d5	0f b6 c8	 movzx	 ecx, al
  000d8	83 f9 01	 cmp	 ecx, 1
  000db	74 19		 je	 SHORT $LN14@OnTCPNetwo
  000dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000e3	83 c2 11	 add	 edx, 17			; 00000011H
  000e6	52		 push	 edx
  000e7	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000ec	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000f1	85 c0		 test	 eax, eax
  000f3	74 01		 je	 SHORT $LN14@OnTCPNetwo
  000f5	cc		 int	 3
$LN14@OnTCPNetwo:

; 8212 : 	if (CMasterRight::CanKillUser(pIServerUserItem->GetMasterRight())==false) return false;

  000f6	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f9	8b 10		 mov	 edx, DWORD PTR [eax]
  000fb	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000fe	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00101	ff d0		 call	 eax
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?CanKillUser@CMasterRight@@SA_NK@Z ; CMasterRight::CanKillUser
  00109	83 c4 04	 add	 esp, 4
  0010c	0f b6 c8	 movzx	 ecx, al
  0010f	85 c9		 test	 ecx, ecx
  00111	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  00113	32 c0		 xor	 al, al
  00115	e9 2a 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 8213 : 
; 8214 : 	//目标用户
; 8215 : 	IServerUserItem * pITargetUserItem = m_ServerUserManager.SearchUserItem(pKickUser->dwTargetUserID);

  0011a	8b 45 f8	 mov	 eax, DWORD PTR _pKickUser$[ebp]
  0011d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011f	51		 push	 ecx
  00120	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00129	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0012c	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00132	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00135	ff d2		 call	 edx
  00137	89 45 ec	 mov	 DWORD PTR _pITargetUserItem$[ebp], eax

; 8216 : 	if(pITargetUserItem==NULL) return true;

  0013a	83 7d ec 00	 cmp	 DWORD PTR _pITargetUserItem$[ebp], 0
  0013e	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00140	b0 01		 mov	 al, 1
  00142	e9 fd 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 8217 : 
; 8218 : 	//用户状态
; 8219 : 	if(pITargetUserItem->GetUserStatus()==US_PLAYING) return true;

  00147	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  0014a	8b 10		 mov	 edx, DWORD PTR [eax]
  0014c	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  0014f	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00152	ff d0		 call	 eax
  00154	0f b6 c8	 movzx	 ecx, al
  00157	83 f9 05	 cmp	 ecx, 5
  0015a	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  0015c	b0 01		 mov	 al, 1
  0015e	e9 e1 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 8220 : 
; 8221 : 	//踢出记录
; 8222 : 	m_KickUserItemMap[pITargetUserItem->GetUserID()]=(DWORD)time(NULL);

  00163	6a 00		 push	 0
  00165	e8 00 00 00 00	 call	 _time
  0016a	83 c4 04	 add	 esp, 4
  0016d	8b f0		 mov	 esi, eax
  0016f	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00172	8b 10		 mov	 edx, DWORD PTR [eax]
  00174	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00177	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0017a	ff d0		 call	 eax
  0017c	50		 push	 eax
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  00186	e8 00 00 00 00	 call	 ??A?$CMap@KKKAAK@@QAEAAKK@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::operator[]
  0018b	89 30		 mov	 DWORD PTR [eax], esi

; 8223 : 
; 8224 : 	//请离桌子
; 8225 : 	WORD wTargerTableID = pITargetUserItem->GetTableID();

  0018d	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00190	8b 10		 mov	 edx, DWORD PTR [eax]
  00192	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00195	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00198	ff d0		 call	 eax
  0019a	66 89 45 e8	 mov	 WORD PTR _wTargerTableID$[ebp], ax

; 8226 : 	if(wTargerTableID != INVALID_TABLE)

  0019e	0f b7 45 e8	 movzx	 eax, WORD PTR _wTargerTableID$[ebp]
  001a2	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  001a7	74 58		 je	 SHORT $LN8@OnTCPNetwo

; 8227 : 	{
; 8228 : 		//发送消息
; 8229 : 		SendGameMessage(pITargetUserItem,TEXT("你已被管理员请离桌子！"),SMT_CHAT|SMT_EJECT|SMT_CLOSE_GAME);

  001a9	68 03 02 00 00	 push	 515			; 00000203H
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LKMDCKF@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?W?$MA?W?S?$KD?$KB@
  001b3	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  001b6	50		 push	 eax
  001b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 04	 add	 ecx, 4
  001bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001c0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001c3	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  001c6	ff d2		 call	 edx

; 8230 : 
; 8231 : 		CTableFrame * pTableFrame=m_TableFrameArray[wTargerTableID];

  001c8	0f b7 45 e8	 movzx	 eax, WORD PTR _wTargerTableID$[ebp]
  001cc	50		 push	 eax
  001cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001d6	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 4d e4	 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 8232 : 		if (pTableFrame->PerformStandUpAction(pITargetUserItem)==false) return true;

  001e0	6a 00		 push	 0
  001e2	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  001e5	50		 push	 eax
  001e6	8b 4d e4	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  001e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  001eb	8b 4d e4	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  001ee	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  001f4	ff d0		 call	 eax
  001f6	0f b6 c8	 movzx	 ecx, al
  001f9	85 c9		 test	 ecx, ecx
  001fb	75 04		 jne	 SHORT $LN8@OnTCPNetwo
  001fd	b0 01		 mov	 al, 1
  001ff	eb 43		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 8233 : 	}
; 8234 : 
; 8235 : 	//发送通知
; 8236 : 	LPCTSTR pszMessage=TEXT("你已被管理员请离此游戏房间！");

  00201	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pszMessage$[ebp], OFFSET ??_C@_0BN@NHDPIONK@?D?c?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$MA?k?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$KD?$KB@

; 8237 : 	SendRoomMessage(pITargetUserItem,pszMessage,SMT_CHAT|SMT_EJECT|SMT_GLOBAL|SMT_CLOSE_ROOM);

  00208	68 07 01 00 00	 push	 263			; 00000107H
  0020d	8b 45 e0	 mov	 eax, DWORD PTR _pszMessage$[ebp]
  00210	50		 push	 eax
  00211	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00214	51		 push	 ecx
  00215	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00218	83 c1 04	 add	 ecx, 4
  0021b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0021e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00221	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00224	ff d2		 call	 edx

; 8238 : 
; 8239 : 	pITargetUserItem->SetUserStatus(US_NULL,INVALID_TABLE,INVALID_CHAIR);

  00226	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0022b	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00230	6a 00		 push	 0
  00232	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00235	8b 10		 mov	 edx, DWORD PTR [eax]
  00237	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  0023a	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00240	ff d0		 call	 eax

; 8240 : 
; 8241 : 	return true;

  00242	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8242 : }

  00244	5f		 pop	 edi
  00245	5e		 pop	 esi
  00246	5b		 pop	 ebx
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubManagerKickUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv378 = -348						; size = 4
_szBuffer$ = -280					; size = 128
_ServerModify$1 = -152					; size = 120
_pServiceUnits$ = -32					; size = 4
_bModifyServer$ = -25					; size = 1
_pIServerUserItem$ = -24				; size = 4
_wBindIndex$ = -20					; size = 2
_pServerOptionInfo$ = -16				; size = 4
_pServerOption$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubOptionServer, COMDAT
; _this$ = ecx

; 8027 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 8028 : 	//效验参数
; 8029 : 	ASSERT(wDataSize==sizeof(CMD_GR_ServerOption));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 56	 cmp	 eax, 86			; 00000056H
  00020	74 19		 je	 SHORT $LN17@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN17@OnTCPNetwo
  0003a	cc		 int	 3
$LN17@OnTCPNetwo:

; 8030 : 	if (wDataSize!=sizeof(CMD_GR_ServerOption)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 56	 cmp	 eax, 86			; 00000056H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 1d 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 8031 : 
; 8032 : 	//变量定义
; 8033 : 	CMD_GR_ServerOption * pServerOption=(CMD_GR_ServerOption *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pServerOption$[ebp], eax

; 8034 : 	tagServerOptionInfo * pServerOptionInfo=&pServerOption->ServerOptionInfo;

  00051	8b 45 f4	 mov	 eax, DWORD PTR _pServerOption$[ebp]
  00054	89 45 f0	 mov	 DWORD PTR _pServerOptionInfo$[ebp], eax

; 8035 : 
; 8036 : 	//获取用户
; 8037 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00057	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0005a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0005f	66 89 45 ec	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 8038 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00063	0f b7 45 ec	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00067	50		 push	 eax
  00068	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00073	ff d0		 call	 eax
  00075	89 45 e8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 8039 : 
; 8040 : 	//用户效验
; 8041 : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->GetMasterOrder()>0));

  00078	83 7d e8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0007c	74 17		 je	 SHORT $LN18@OnTCPNetwo
  0007e	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00081	8b 10		 mov	 edx, DWORD PTR [eax]
  00083	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00086	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0008c	ff d0		 call	 eax
  0008e	0f b6 c8	 movzx	 ecx, al
  00091	85 c9		 test	 ecx, ecx
  00093	7f 19		 jg	 SHORT $LN19@OnTCPNetwo
$LN18@OnTCPNetwo:
  00095	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0009b	83 c2 0e	 add	 edx, 14			; 0000000eH
  0009e	52		 push	 edx
  0009f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000a4	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a9	85 c0		 test	 eax, eax
  000ab	74 01		 je	 SHORT $LN19@OnTCPNetwo
  000ad	cc		 int	 3
$LN19@OnTCPNetwo:

; 8042 : 	if ((pIServerUserItem==NULL)||(pIServerUserItem->GetMasterOrder()==0)) return false;

  000ae	83 7d e8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000b2	74 17		 je	 SHORT $LN4@OnTCPNetwo
  000b4	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000bc	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  000c2	ff d0		 call	 eax
  000c4	0f b6 c8	 movzx	 ecx, al
  000c7	85 c9		 test	 ecx, ecx
  000c9	75 07		 jne	 SHORT $LN3@OnTCPNetwo
$LN4@OnTCPNetwo:
  000cb	32 c0		 xor	 al, al
  000cd	e9 96 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 8043 : 
; 8044 : 	//变量定义
; 8045 : 	bool bModifyServer=false;

  000d2	c6 45 e7 00	 mov	 BYTE PTR _bModifyServer$[ebp], 0

; 8046 : 
; 8047 : 	//挂接节点
; 8048 : 	if (m_pGameServiceOption->wNodeID!=pServerOptionInfo->wNodeID)

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000dc	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  000e0	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  000e3	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000e7	3b d1		 cmp	 edx, ecx
  000e9	74 15		 je	 SHORT $LN5@OnTCPNetwo

; 8049 : 	{
; 8050 : 		bModifyServer=true;

  000eb	c6 45 e7 01	 mov	 BYTE PTR _bModifyServer$[ebp], 1

; 8051 : 		m_pGameServiceOption->wNodeID=pServerOptionInfo->wNodeID;

  000ef	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000f5	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  000f8	66 8b 42 02	 mov	 ax, WORD PTR [edx+2]
  000fc	66 89 41 02	 mov	 WORD PTR [ecx+2], ax
$LN5@OnTCPNetwo:

; 8052 : 	}
; 8053 : 
; 8054 : 	//挂接类型
; 8055 : 	if ((pServerOptionInfo->wKindID!=0)&&(m_pGameServiceOption->wKindID!=pServerOptionInfo->wKindID))

  00100	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00103	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00106	85 c9		 test	 ecx, ecx
  00108	74 26		 je	 SHORT $LN6@OnTCPNetwo
  0010a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00110	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00113	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00116	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00119	3b d1		 cmp	 edx, ecx
  0011b	74 13		 je	 SHORT $LN6@OnTCPNetwo

; 8056 : 	{
; 8057 : 		bModifyServer=true;

  0011d	c6 45 e7 01	 mov	 BYTE PTR _bModifyServer$[ebp], 1

; 8058 : 		m_pGameServiceOption->wKindID=pServerOptionInfo->wKindID;

  00121	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00124	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00127	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  0012a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0012d	66 89 01	 mov	 WORD PTR [ecx], ax
$LN6@OnTCPNetwo:

; 8059 : 	}
; 8060 : 	
; 8061 : 	//挂接排序
; 8062 : 	if ((pServerOptionInfo->wSortID!=0)&&(m_pGameServiceOption->wSortID!=pServerOptionInfo->wSortID))

  00130	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00133	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00137	85 c9		 test	 ecx, ecx
  00139	74 2a		 je	 SHORT $LN7@OnTCPNetwo
  0013b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00141	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00145	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00148	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0014c	3b d1		 cmp	 edx, ecx
  0014e	74 15		 je	 SHORT $LN7@OnTCPNetwo

; 8063 : 	{
; 8064 : 		bModifyServer=true;

  00150	c6 45 e7 01	 mov	 BYTE PTR _bModifyServer$[ebp], 1

; 8065 : 		m_pGameServiceOption->wSortID=pServerOptionInfo->wSortID;

  00154	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00157	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0015a	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  0015d	66 8b 42 04	 mov	 ax, WORD PTR [edx+4]
  00161	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
$LN7@OnTCPNetwo:

; 8066 : 	}
; 8067 : 
; 8068 : 	//房间名字
; 8069 : 	if ((pServerOptionInfo->szServerName[0]!=0)&&(lstrcmp(m_pGameServiceOption->szServerName,pServerOptionInfo->szServerName)!=0))

  00165	b8 01 00 00 00	 mov	 eax, 1
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  00170	0f be 44 0a 36	 movsx	 eax, BYTE PTR [edx+ecx+54]
  00175	85 c0		 test	 eax, eax
  00177	74 38		 je	 SHORT $LN8@OnTCPNetwo
  00179	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  0017c	83 c0 36	 add	 eax, 54			; 00000036H
  0017f	50		 push	 eax
  00180	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00186	83 c2 50	 add	 edx, 80			; 00000050H
  00189	52		 push	 edx
  0018a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00190	85 c0		 test	 eax, eax
  00192	74 1d		 je	 SHORT $LN8@OnTCPNetwo

; 8070 : 	{
; 8071 : 		bModifyServer=true;

  00194	c6 45 e7 01	 mov	 BYTE PTR _bModifyServer$[ebp], 1

; 8072 : 		lstrcpyn(m_pGameServiceOption->szServerName,pServerOptionInfo->szServerName,CountArray(m_pGameServiceOption->szServerName));

  00198	6a 20		 push	 32			; 00000020H
  0019a	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  0019d	83 c0 36	 add	 eax, 54			; 00000036H
  001a0	50		 push	 eax
  001a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  001a7	83 c2 50	 add	 edx, 80			; 00000050H
  001aa	52		 push	 edx
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN8@OnTCPNetwo:

; 8073 : 	}
; 8074 : 
; 8075 : 	//税收配置
; 8076 : 	m_pGameServiceOption->wRevenueRatio=pServerOptionInfo->wRevenueRatio;

  001b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001b4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001b7	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  001ba	66 8b 42 06	 mov	 ax, WORD PTR [edx+6]
  001be	66 89 41 0c	 mov	 WORD PTR [ecx+12], ax

; 8077 : 	m_pGameServiceOption->lServiceScore=pServerOptionInfo->lServiceScore;

  001c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001c8	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  001cb	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001ce	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  001d1	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  001d4	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 8078 : 
; 8079 : 	//房间配置
; 8080 : 	m_pGameServiceOption->lRestrictScore=pServerOptionInfo->lRestrictScore;

  001d7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001da	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001dd	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  001e0	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001e3	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  001e6	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  001e9	89 51 1c	 mov	 DWORD PTR [ecx+28], edx

; 8081 : 	m_pGameServiceOption->lMinTableScore=pServerOptionInfo->lMinTableScore;

  001ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ef	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001f2	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  001f5	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  001f8	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  001fb	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  001fe	89 51 24	 mov	 DWORD PTR [ecx+36], edx

; 8082 : 	m_pGameServiceOption->lMinEnterScore=pServerOptionInfo->lMinEnterScore;

  00201	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00204	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00207	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  0020a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0020d	89 41 28	 mov	 DWORD PTR [ecx+40], eax
  00210	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  00213	89 51 2c	 mov	 DWORD PTR [ecx+44], edx

; 8083 : 	m_pGameServiceOption->lMaxEnterScore=pServerOptionInfo->lMaxEnterScore;

  00216	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00219	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0021c	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  0021f	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00222	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  00225	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00228	89 51 34	 mov	 DWORD PTR [ecx+52], edx

; 8084 : 
; 8085 : 	//会员限制
; 8086 : 	m_pGameServiceOption->cbMinEnterMember=pServerOptionInfo->cbMinEnterMember;

  0022b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0022e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00231	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  00234	8a 42 30	 mov	 al, BYTE PTR [edx+48]
  00237	88 41 38	 mov	 BYTE PTR [ecx+56], al

; 8087 : 	m_pGameServiceOption->cbMaxEnterMember=pServerOptionInfo->cbMaxEnterMember;

  0023a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0023d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00240	8b 55 f0	 mov	 edx, DWORD PTR _pServerOptionInfo$[ebp]
  00243	8a 42 31	 mov	 al, BYTE PTR [edx+49]
  00246	88 41 39	 mov	 BYTE PTR [ecx+57], al

; 8088 : 
; 8089 : 	//聊天规则
; 8090 : 	CServerRule::SetForfendGameChat(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendGameChat(pServerOptionInfo->dwServerRule));

  00249	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  0024c	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  0024f	51		 push	 ecx
  00250	e8 00 00 00 00	 call	 ?IsForfendGameChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameChat
  00255	83 c4 04	 add	 esp, 4
  00258	0f b6 d0	 movzx	 edx, al
  0025b	52		 push	 edx
  0025c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0025f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00262	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00265	51		 push	 ecx
  00266	e8 00 00 00 00	 call	 ?SetForfendGameChat@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameChat
  0026b	83 c4 08	 add	 esp, 8

; 8091 : 	CServerRule::SetForfendRoomChat(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendRoomChat(pServerOptionInfo->dwServerRule));

  0026e	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00271	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00274	51		 push	 ecx
  00275	e8 00 00 00 00	 call	 ?IsForfendRoomChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomChat
  0027a	83 c4 04	 add	 esp, 4
  0027d	0f b6 d0	 movzx	 edx, al
  00280	52		 push	 edx
  00281	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00284	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00287	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0028a	51		 push	 ecx
  0028b	e8 00 00 00 00	 call	 ?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendRoomChat
  00290	83 c4 08	 add	 esp, 8

; 8092 : 	CServerRule::SetForfendWisperChat(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendWisperChat(pServerOptionInfo->dwServerRule));

  00293	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00296	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00299	51		 push	 ecx
  0029a	e8 00 00 00 00	 call	 ?IsForfendWisperChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperChat
  0029f	83 c4 04	 add	 esp, 4
  002a2	0f b6 d0	 movzx	 edx, al
  002a5	52		 push	 edx
  002a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a9	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  002ac	83 c1 3c	 add	 ecx, 60			; 0000003cH
  002af	51		 push	 ecx
  002b0	e8 00 00 00 00	 call	 ?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendWisperChat
  002b5	83 c4 08	 add	 esp, 8

; 8093 : 	CServerRule::SetForfendWisperOnGame(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendWisperOnGame(pServerOptionInfo->dwServerRule));

  002b8	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  002bb	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  002be	51		 push	 ecx
  002bf	e8 00 00 00 00	 call	 ?IsForfendWisperOnGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperOnGame
  002c4	83 c4 04	 add	 esp, 4
  002c7	0f b6 d0	 movzx	 edx, al
  002ca	52		 push	 edx
  002cb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ce	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  002d1	83 c1 3c	 add	 ecx, 60			; 0000003cH
  002d4	51		 push	 ecx
  002d5	e8 00 00 00 00	 call	 ?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendWisperOnGame
  002da	83 c4 08	 add	 esp, 8

; 8094 : 
; 8095 : 	//房间规则
; 8096 : 	CServerRule::SetForfendRoomEnter(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendRoomEnter(pServerOptionInfo->dwServerRule));

  002dd	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  002e0	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  002e3	51		 push	 ecx
  002e4	e8 00 00 00 00	 call	 ?IsForfendRoomEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomEnter
  002e9	83 c4 04	 add	 esp, 4
  002ec	0f b6 d0	 movzx	 edx, al
  002ef	52		 push	 edx
  002f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f3	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  002f6	83 c1 3c	 add	 ecx, 60			; 0000003cH
  002f9	51		 push	 ecx
  002fa	e8 00 00 00 00	 call	 ?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendRoomEnter
  002ff	83 c4 08	 add	 esp, 8

; 8097 : 	CServerRule::SetForfendGameEnter(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendGameEnter(pServerOptionInfo->dwServerRule));

  00302	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00305	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00308	51		 push	 ecx
  00309	e8 00 00 00 00	 call	 ?IsForfendGameEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameEnter
  0030e	83 c4 04	 add	 esp, 4
  00311	0f b6 d0	 movzx	 edx, al
  00314	52		 push	 edx
  00315	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00318	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0031b	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0031e	51		 push	 ecx
  0031f	e8 00 00 00 00	 call	 ?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameEnter
  00324	83 c4 08	 add	 esp, 8

; 8098 : 	CServerRule::SetForfendGameLookon(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendGameLookon(pServerOptionInfo->dwServerRule));

  00327	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  0032a	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  0032d	51		 push	 ecx
  0032e	e8 00 00 00 00	 call	 ?IsForfendGameLookon@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameLookon
  00333	83 c4 04	 add	 esp, 4
  00336	0f b6 d0	 movzx	 edx, al
  00339	52		 push	 edx
  0033a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0033d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00340	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00343	51		 push	 ecx
  00344	e8 00 00 00 00	 call	 ?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameLookon
  00349	83 c4 08	 add	 esp, 8

; 8099 : 
; 8100 : 	//银行规则
; 8101 : 	CServerRule::SetForfendTakeInRoom(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendTakeInRoom(pServerOptionInfo->dwServerRule));

  0034c	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  0034f	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00352	51		 push	 ecx
  00353	e8 00 00 00 00	 call	 ?IsForfendTakeInRoom@CServerRule@@SA_NK@Z ; CServerRule::IsForfendTakeInRoom
  00358	83 c4 04	 add	 esp, 4
  0035b	0f b6 d0	 movzx	 edx, al
  0035e	52		 push	 edx
  0035f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00362	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00365	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00368	51		 push	 ecx
  00369	e8 00 00 00 00	 call	 ?SetForfendTakeInRoom@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendTakeInRoom
  0036e	83 c4 08	 add	 esp, 8

; 8102 : 	CServerRule::SetForfendTakeInGame(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendTakeInGame(pServerOptionInfo->dwServerRule));

  00371	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00374	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00377	51		 push	 ecx
  00378	e8 00 00 00 00	 call	 ?IsForfendTakeInGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendTakeInGame
  0037d	83 c4 04	 add	 esp, 4
  00380	0f b6 d0	 movzx	 edx, al
  00383	52		 push	 edx
  00384	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00387	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0038a	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0038d	51		 push	 ecx
  0038e	e8 00 00 00 00	 call	 ?SetForfendTakeInGame@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendTakeInGame
  00393	83 c4 08	 add	 esp, 8

; 8103 : 	CServerRule::SetForfendSaveInRoom(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendSaveInRoom(pServerOptionInfo->dwServerRule));

  00396	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00399	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  0039c	51		 push	 ecx
  0039d	e8 00 00 00 00	 call	 ?IsForfendSaveInRoom@CServerRule@@SA_NK@Z ; CServerRule::IsForfendSaveInRoom
  003a2	83 c4 04	 add	 esp, 4
  003a5	0f b6 d0	 movzx	 edx, al
  003a8	52		 push	 edx
  003a9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ac	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003af	83 c1 3c	 add	 ecx, 60			; 0000003cH
  003b2	51		 push	 ecx
  003b3	e8 00 00 00 00	 call	 ?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendSaveInRoom
  003b8	83 c4 08	 add	 esp, 8

; 8104 : 	CServerRule::SetForfendSaveInGame(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendSaveInGame(pServerOptionInfo->dwServerRule));

  003bb	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  003be	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  003c1	51		 push	 ecx
  003c2	e8 00 00 00 00	 call	 ?IsForfendSaveInGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendSaveInGame
  003c7	83 c4 04	 add	 esp, 4
  003ca	0f b6 d0	 movzx	 edx, al
  003cd	52		 push	 edx
  003ce	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003d1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003d4	83 c1 3c	 add	 ecx, 60			; 0000003cH
  003d7	51		 push	 ecx
  003d8	e8 00 00 00 00	 call	 ?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendSaveInGame
  003dd	83 c4 08	 add	 esp, 8

; 8105 : 
; 8106 : 	//其他规则
; 8107 : 	CServerRule::SetRecordGameTrack(m_pGameServiceOption->dwServerRule,CServerRule::IsRecordGameTrack(pServerOptionInfo->dwServerRule));

  003e0	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  003e3	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  003e6	51		 push	 ecx
  003e7	e8 00 00 00 00	 call	 ?IsRecordGameTrack@CServerRule@@SA_NK@Z ; CServerRule::IsRecordGameTrack
  003ec	83 c4 04	 add	 esp, 4
  003ef	0f b6 d0	 movzx	 edx, al
  003f2	52		 push	 edx
  003f3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003f6	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003f9	83 c1 3c	 add	 ecx, 60			; 0000003cH
  003fc	51		 push	 ecx
  003fd	e8 00 00 00 00	 call	 ?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z ; CServerRule::SetRecordGameTrack
  00402	83 c4 08	 add	 esp, 8

; 8108 : 	CServerRule::SetForfendGameRule(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendGameRule(pServerOptionInfo->dwServerRule));

  00405	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00408	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  0040b	51		 push	 ecx
  0040c	e8 00 00 00 00	 call	 ?IsForfendGameRule@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameRule
  00411	83 c4 04	 add	 esp, 4
  00414	0f b6 d0	 movzx	 edx, al
  00417	52		 push	 edx
  00418	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0041b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0041e	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00421	51		 push	 ecx
  00422	e8 00 00 00 00	 call	 ?SetForfendGameRule@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameRule
  00427	83 c4 08	 add	 esp, 8

; 8109 : 	CServerRule::SetForfendLockTable(m_pGameServiceOption->dwServerRule,CServerRule::IsForfendLockTable(pServerOptionInfo->dwServerRule));

  0042a	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  0042d	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00430	51		 push	 ecx
  00431	e8 00 00 00 00	 call	 ?IsForfendLockTable@CServerRule@@SA_NK@Z ; CServerRule::IsForfendLockTable
  00436	83 c4 04	 add	 esp, 4
  00439	0f b6 d0	 movzx	 edx, al
  0043c	52		 push	 edx
  0043d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00440	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00443	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00446	51		 push	 ecx
  00447	e8 00 00 00 00	 call	 ?SetForfendLockTable@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendLockTable
  0044c	83 c4 08	 add	 esp, 8

; 8110 : 
; 8111 : 	//动态加入
; 8112 : 	if (m_pGameServiceAttrib->cbDynamicJoin==TRUE)

  0044f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00452	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00455	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  00459	83 fa 01	 cmp	 edx, 1
  0045c	75 25		 jne	 SHORT $LN9@OnTCPNetwo

; 8113 : 	{
; 8114 : 		CServerRule::SetAllowDynamicJoin(m_pGameServiceOption->dwServerRule,CServerRule::IsAllowDynamicJoin(pServerOptionInfo->dwServerRule));

  0045e	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00461	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00464	51		 push	 ecx
  00465	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  0046a	83 c4 04	 add	 esp, 4
  0046d	0f b6 d0	 movzx	 edx, al
  00470	52		 push	 edx
  00471	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00474	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00477	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0047a	51		 push	 ecx
  0047b	e8 00 00 00 00	 call	 ?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowDynamicJoin
  00480	83 c4 08	 add	 esp, 8
$LN9@OnTCPNetwo:

; 8115 : 	}
; 8116 : 
; 8117 : 	//机器管理
; 8118 : 	if (m_pGameServiceAttrib->cbAndroidUser==TRUE)

  00483	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00486	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00489	0f b6 51 26	 movzx	 edx, BYTE PTR [ecx+38]
  0048d	83 fa 01	 cmp	 edx, 1
  00490	75 25		 jne	 SHORT $LN10@OnTCPNetwo

; 8119 : 	{
; 8120 : 		CServerRule::SetAllowAndroidAttend(m_pGameServiceOption->dwServerRule,CServerRule::IsAllowAndroidAttend(pServerOptionInfo->dwServerRule));

  00492	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00495	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00498	51		 push	 ecx
  00499	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  0049e	83 c4 04	 add	 esp, 4
  004a1	0f b6 d0	 movzx	 edx, al
  004a4	52		 push	 edx
  004a5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004a8	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004ab	83 c1 3c	 add	 ecx, 60			; 0000003cH
  004ae	51		 push	 ecx
  004af	e8 00 00 00 00	 call	 ?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowAndroidAttend
  004b4	83 c4 08	 add	 esp, 8
$LN10@OnTCPNetwo:

; 8121 : 	}
; 8122 : 
; 8123 : 	//断线托管
; 8124 : 	if (m_pGameServiceAttrib->cbOffLineTrustee==TRUE)

  004b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004ba	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  004bd	0f b6 51 28	 movzx	 edx, BYTE PTR [ecx+40]
  004c1	83 fa 01	 cmp	 edx, 1
  004c4	75 25		 jne	 SHORT $LN11@OnTCPNetwo

; 8125 : 	{
; 8126 : 		CServerRule::SetAllowOffLineTrustee(m_pGameServiceOption->dwServerRule,CServerRule::IsAllowOffLineTrustee(pServerOptionInfo->dwServerRule));

  004c6	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  004c9	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  004cc	51		 push	 ecx
  004cd	e8 00 00 00 00	 call	 ?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z ; CServerRule::IsAllowOffLineTrustee
  004d2	83 c4 04	 add	 esp, 4
  004d5	0f b6 d0	 movzx	 edx, al
  004d8	52		 push	 edx
  004d9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004dc	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004df	83 c1 3c	 add	 ecx, 60			; 0000003cH
  004e2	51		 push	 ecx
  004e3	e8 00 00 00 00	 call	 ?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowOffLineTrustee
  004e8	83 c4 08	 add	 esp, 8
$LN11@OnTCPNetwo:

; 8127 : 	}
; 8128 : 
; 8129 : 	//记录成绩
; 8130 : 	if ((m_pGameServiceOption->wServerType&(GAME_GENRE_GOLD|GAME_GENRE_MATCH))==0)

  004eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004ee	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004f1	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  004f5	83 e2 05	 and	 edx, 5
  004f8	75 25		 jne	 SHORT $LN12@OnTCPNetwo

; 8131 : 	{
; 8132 : 		CServerRule::SetRecordGameScore(m_pGameServiceOption->dwServerRule,CServerRule::IsRecordGameScore(pServerOptionInfo->dwServerRule));

  004fa	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  004fd	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00500	51		 push	 ecx
  00501	e8 00 00 00 00	 call	 ?IsRecordGameScore@CServerRule@@SA_NK@Z ; CServerRule::IsRecordGameScore
  00506	83 c4 04	 add	 esp, 4
  00509	0f b6 d0	 movzx	 edx, al
  0050c	52		 push	 edx
  0050d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00510	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00513	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00516	51		 push	 ecx
  00517	e8 00 00 00 00	 call	 ?SetRecordGameScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetRecordGameScore
  0051c	83 c4 08	 add	 esp, 8
$LN12@OnTCPNetwo:

; 8133 : 	}
; 8134 : 
; 8135 : 	//立即写分
; 8136 : 	if ((m_pGameServiceOption->wServerType&(GAME_GENRE_GOLD|GAME_GENRE_MATCH))==0)

  0051f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00522	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00525	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00529	83 e2 05	 and	 edx, 5
  0052c	75 25		 jne	 SHORT $LN13@OnTCPNetwo

; 8137 : 	{
; 8138 : 		CServerRule::SetImmediateWriteScore(m_pGameServiceOption->dwServerRule,CServerRule::IsImmediateWriteScore(pServerOptionInfo->dwServerRule));

  0052e	8b 45 f0	 mov	 eax, DWORD PTR _pServerOptionInfo$[ebp]
  00531	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00534	51		 push	 ecx
  00535	e8 00 00 00 00	 call	 ?IsImmediateWriteScore@CServerRule@@SA_NK@Z ; CServerRule::IsImmediateWriteScore
  0053a	83 c4 04	 add	 esp, 4
  0053d	0f b6 d0	 movzx	 edx, al
  00540	52		 push	 edx
  00541	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00544	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00547	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0054a	51		 push	 ecx
  0054b	e8 00 00 00 00	 call	 ?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetImmediateWriteScore
  00550	83 c4 08	 add	 esp, 8
$LN13@OnTCPNetwo:

; 8139 : 	}
; 8140 : 
; 8141 : 	//调整参数
; 8142 : 	CServiceUnits * pServiceUnits=CServiceUnits::g_pServiceUnits;

  00553	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pServiceUnits@CServiceUnits@@2PAV1@A ; CServiceUnits::g_pServiceUnits
  00558	89 45 e0	 mov	 DWORD PTR _pServiceUnits$[ebp], eax

; 8143 : 	pServiceUnits->RectifyServiceParameter();

  0055b	8b 4d e0	 mov	 ecx, DWORD PTR _pServiceUnits$[ebp]
  0055e	e8 00 00 00 00	 call	 ?RectifyServiceParameter@CServiceUnits@@IAE_NXZ ; CServiceUnits::RectifyServiceParameter

; 8144 : 
; 8145 : 	//发送修改
; 8146 : 	if (bModifyServer==true)

  00563	0f b6 45 e7	 movzx	 eax, BYTE PTR _bModifyServer$[ebp]
  00567	83 f8 01	 cmp	 eax, 1
  0056a	0f 85 75 01 00
	00		 jne	 $LN14@OnTCPNetwo

; 8147 : 	{
; 8148 : 		//变量定义
; 8149 : 		CMD_CS_C_ServerModify ServerModify;
; 8150 : 		ZeroMemory(&ServerModify,sizeof(ServerModify));

  00570	6a 78		 push	 120			; 00000078H
  00572	6a 00		 push	 0
  00574	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$1[ebp]
  0057a	50		 push	 eax
  0057b	e8 00 00 00 00	 call	 _memset
  00580	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8151 : 
; 8152 : 		//服务端口
; 8153 : 		ServerModify.wServerPort=pServiceUnits->m_TCPNetworkEngine->GetCurrentPort();

  00583	8b 4d e0	 mov	 ecx, DWORD PTR _pServiceUnits$[ebp]
  00586	81 c1 78 ff 02
	00		 add	 ecx, 196472		; 0002ff78H
  0058c	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ; CTempldateHelper<ITCPNetworkEngine>::operator->
  00591	89 85 a4 fe ff
	ff		 mov	 DWORD PTR tv378[ebp], eax
  00597	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR tv378[ebp]
  0059d	8b 10		 mov	 edx, DWORD PTR [eax]
  0059f	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR tv378[ebp]
  005a5	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  005a8	ff d0		 call	 eax
  005aa	66 89 85 6e ff
	ff ff		 mov	 WORD PTR _ServerModify$1[ebp+6], ax

; 8154 : 
; 8155 : 		//房间信息
; 8156 : 		ServerModify.wKindID=m_pGameServiceOption->wKindID;

  005b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005b4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005b7	66 8b 11	 mov	 dx, WORD PTR [ecx]
  005ba	66 89 95 6a ff
	ff ff		 mov	 WORD PTR _ServerModify$1[ebp+2], dx

; 8157 : 		ServerModify.wNodeID=m_pGameServiceOption->wNodeID;

  005c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005c4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005c7	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  005cb	66 89 95 6c ff
	ff ff		 mov	 WORD PTR _ServerModify$1[ebp+4], dx

; 8158 : 		ServerModify.wSortID=m_pGameServiceOption->wSortID;

  005d2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005d5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005d8	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  005dc	66 89 95 68 ff
	ff ff		 mov	 WORD PTR _ServerModify$1[ebp], dx

; 8159 : 		ServerModify.dwAndroidCount=m_ServerUserManager.GetAndroidCount();

  005e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e6	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  005ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005ef	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  005f5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  005f8	ff d0		 call	 eax
  005fa	89 85 74 ff ff
	ff		 mov	 DWORD PTR _ServerModify$1[ebp+12], eax

; 8160 : 		ServerModify.dwOnLineCount=m_ServerUserManager.GetUserItemCount()-ServerModify.dwAndroidCount;

  00600	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00603	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00609	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0060c	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00612	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00615	ff d0		 call	 eax
  00617	2b 85 74 ff ff
	ff		 sub	 eax, DWORD PTR _ServerModify$1[ebp+12]
  0061d	89 85 70 ff ff
	ff		 mov	 DWORD PTR _ServerModify$1[ebp+8], eax

; 8161 : 		ServerModify.dwFullCount=m_pGameServiceOption->wMaxPlayer-RESERVE_USER_COUNT;

  00623	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00626	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00629	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  0062d	83 ea 28	 sub	 edx, 40			; 00000028H
  00630	89 95 78 ff ff
	ff		 mov	 DWORD PTR _ServerModify$1[ebp+16], edx

; 8162 : 		ServerModify.dwSetCount = m_pGameServiceOption->dwSetPlayerCount;

  00636	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00639	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0063c	8b 91 cc 00 00
	00		 mov	 edx, DWORD PTR [ecx+204]
  00642	89 95 7c ff ff
	ff		 mov	 DWORD PTR _ServerModify$1[ebp+20], edx

; 8163 : 		lstrcpyn(ServerModify.szServerName,m_pGameServiceOption->szServerName,CountArray(ServerModify.szServerName));

  00648	6a 20		 push	 32			; 00000020H
  0064a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0064d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00650	83 c1 50	 add	 ecx, 80			; 00000050H
  00653	51		 push	 ecx
  00654	8d 55 a0	 lea	 edx, DWORD PTR _ServerModify$1[ebp+56]
  00657	52		 push	 edx
  00658	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 8164 : 		lstrcpyn(ServerModify.szServerAddr,m_pInitParameter->m_ServiceAddress.szAddress,CountArray(ServerModify.szServerAddr));

  0065e	6a 20		 push	 32			; 00000020H
  00660	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00663	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00666	83 c1 70	 add	 ecx, 112		; 00000070H
  00669	51		 push	 ecx
  0066a	8d 55 80	 lea	 edx, DWORD PTR _ServerModify$1[ebp+24]
  0066d	52		 push	 edx
  0066e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 8165 : 		lstrcpyn(ServerModify.szGameInfomation, m_pGameServiceOption->szGameInfomation, CountArray(ServerModify.szGameInfomation));

  00674	6a 20		 push	 32			; 00000020H
  00676	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00679	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0067c	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  00682	51		 push	 ecx
  00683	8d 55 c0	 lea	 edx, DWORD PTR _ServerModify$1[ebp+88]
  00686	52		 push	 edx
  00687	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 8166 : 
; 8167 : 		//发送数据
; 8168 : 		m_pITCPSocketService->SendData(MDM_CS_SERVICE_INFO,SUB_CS_C_SERVER_MODIFY,&ServerModify,sizeof(ServerModify));

  0068d	6a 78		 push	 120			; 00000078H
  0068f	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$1[ebp]
  00695	50		 push	 eax
  00696	6a 02		 push	 2
  00698	6a 02		 push	 2
  0069a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069d	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  006a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006a6	8b 12		 mov	 edx, DWORD PTR [edx]
  006a8	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  006ae	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  006b1	ff d0		 call	 eax

; 8169 : 
; 8170 : 		//发送数据
; 8171 : 		if (m_pPrsnlRmITCPSocketService)

  006b3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006b6	83 b8 c0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147392], 0
  006bd	74 26		 je	 SHORT $LN14@OnTCPNetwo

; 8172 : 		{
; 8173 : 			m_pPrsnlRmITCPSocketService->SendData(MDM_CS_SERVICE_INFO,SUB_CS_C_SERVER_MODIFY,&ServerModify,sizeof(ServerModify));

  006bf	6a 78		 push	 120			; 00000078H
  006c1	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$1[ebp]
  006c7	50		 push	 eax
  006c8	6a 02		 push	 2
  006ca	6a 02		 push	 2
  006cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006cf	8b 91 c0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147392]
  006d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006d8	8b 12		 mov	 edx, DWORD PTR [edx]
  006da	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  006e0	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  006e3	ff d0		 call	 eax
$LN14@OnTCPNetwo:

; 8174 : 		}
; 8175 : 		
; 8176 : 		
; 8177 : 	}
; 8178 : 
; 8179 : 	//发送信息
; 8180 : 	SendRoomMessage(pIServerUserItem,TEXT("当前游戏服务器房间的“运行值”状态配置数据修改成功"),SMT_CHAT|SMT_EJECT);

  006e5	6a 03		 push	 3
  006e7	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@HAEGHLFE@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$PO?N?q?F?w?$LH?$LP?$LM?d?$LF?D?$KB?$LA?T?K?P?P?V?$LF?$KB?$LB?W@
  006ec	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006ef	50		 push	 eax
  006f0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006f3	83 c1 04	 add	 ecx, 4
  006f6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006f9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  006fc	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  006ff	ff d2		 call	 edx

; 8181 : 
; 8182 : 	//输出信息
; 8183 : 	TCHAR szBuffer[128]=TEXT("");

  00701	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00706	88 85 e8 fe ff
	ff		 mov	 BYTE PTR _szBuffer$[ebp], al
  0070c	6a 7f		 push	 127			; 0000007fH
  0070e	6a 00		 push	 0
  00710	8d 85 e9 fe ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00716	50		 push	 eax
  00717	e8 00 00 00 00	 call	 _memset
  0071c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 8184 : 	_sntprintf_s(szBuffer,CountArray(szBuffer),TEXT("远程修改房间配置通知 管理员 %s [ %ld ]"),pIServerUserItem->GetNickName(),pIServerUserItem->GetUserID());

  0071f	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00722	8b 10		 mov	 edx, DWORD PTR [eax]
  00724	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00727	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0072a	ff d0		 call	 eax
  0072c	50		 push	 eax
  0072d	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00730	8b 11		 mov	 edx, DWORD PTR [ecx]
  00732	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00735	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00738	ff d0		 call	 eax
  0073a	50		 push	 eax
  0073b	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EPNGOIIN@?T?$LG?$LD?L?P?$NO?$LI?D?$LH?$LP?$LM?d?E?d?V?C?M?$KI?V?$KK?5?$LJ?$NM?$MA?m?T?$LB?5?$CFs?5@
  00740	68 80 00 00 00	 push	 128			; 00000080H
  00745	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  0074b	51		 push	 ecx
  0074c	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00751	83 c4 14	 add	 esp, 20			; 00000014H

; 8185 : 
; 8186 : 	//输出信息
; 8187 : 	CTraceService::TraceString(szBuffer,TraceLevel_Info);

  00754	6a 00		 push	 0
  00756	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0075c	50		 push	 eax
  0075d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00763	83 c4 08	 add	 esp, 8

; 8188 : 
; 8189 : 	return true;

  00766	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8190 : }

  00768	5f		 pop	 edi
  00769	5e		 pop	 esi
  0076a	5b		 pop	 ebx
  0076b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0076e	33 cd		 xor	 ecx, ebp
  00770	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00775	8b e5		 mov	 esp, ebp
  00777	5d		 pop	 ebp
  00778	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubOptionServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_OptionCurrent$ = -108					; size = 90
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubQueryOption, COMDAT
; _this$ = ecx

; 7953 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7954 : 	//获取用户
; 7955 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00019	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7956 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7957 : 
; 7958 : 	//用户效验
; 7959 : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->GetMasterOrder()>0));

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003e	74 17		 je	 SHORT $LN9@OnTCPNetwo
  00040	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00048	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0004e	ff d0		 call	 eax
  00050	0f b6 c8	 movzx	 ecx, al
  00053	85 c9		 test	 ecx, ecx
  00055	7f 19		 jg	 SHORT $LN10@OnTCPNetwo
$LN9@OnTCPNetwo:
  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005d	83 c2 06	 add	 edx, 6
  00060	52		 push	 edx
  00061	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00066	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006b	85 c0		 test	 eax, eax
  0006d	74 01		 je	 SHORT $LN10@OnTCPNetwo
  0006f	cc		 int	 3
$LN10@OnTCPNetwo:

; 7960 : 	if ((pIServerUserItem==NULL)||(pIServerUserItem->GetMasterOrder()==0)) return false;

  00070	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00074	74 17		 je	 SHORT $LN3@OnTCPNetwo
  00076	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00079	8b 10		 mov	 edx, DWORD PTR [eax]
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007e	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00084	ff d0		 call	 eax
  00086	0f b6 c8	 movzx	 ecx, al
  00089	85 c9		 test	 ecx, ecx
  0008b	75 07		 jne	 SHORT $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:
  0008d	32 c0		 xor	 al, al
  0008f	e9 f4 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7961 : 
; 7962 : 	//变量定义
; 7963 : 	CMD_GR_OptionCurrent OptionCurrent;
; 7964 : 	ZeroMemory(&OptionCurrent,sizeof(OptionCurrent));

  00094	6a 5a		 push	 90			; 0000005aH
  00096	6a 00		 push	 0
  00098	8d 45 94	 lea	 eax, DWORD PTR _OptionCurrent$[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 _memset
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7965 : 
; 7966 : 	//挂接属性
; 7967 : 	OptionCurrent.ServerOptionInfo.wKindID=m_pGameServiceOption->wKindID;

  000a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000aa	66 8b 11	 mov	 dx, WORD PTR [ecx]
  000ad	66 89 55 98	 mov	 WORD PTR _OptionCurrent$[ebp+4], dx

; 7968 : 	OptionCurrent.ServerOptionInfo.wNodeID=m_pGameServiceOption->wNodeID;

  000b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000b7	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  000bb	66 89 55 9a	 mov	 WORD PTR _OptionCurrent$[ebp+6], dx

; 7969 : 	OptionCurrent.ServerOptionInfo.wSortID=m_pGameServiceOption->wSortID;

  000bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000c5	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  000c9	66 89 55 9c	 mov	 WORD PTR _OptionCurrent$[ebp+8], dx

; 7970 : 
; 7971 : 	//房间配置
; 7972 : 	OptionCurrent.ServerOptionInfo.wRevenueRatio=m_pGameServiceOption->wRevenueRatio;

  000cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000d3	66 8b 51 0c	 mov	 dx, WORD PTR [ecx+12]
  000d7	66 89 55 9e	 mov	 WORD PTR _OptionCurrent$[ebp+10], dx

; 7973 : 	OptionCurrent.ServerOptionInfo.lServiceScore=m_pGameServiceOption->lServiceScore;

  000db	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000de	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000e1	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000e4	89 55 a0	 mov	 DWORD PTR _OptionCurrent$[ebp+12], edx
  000e7	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  000ea	89 45 a4	 mov	 DWORD PTR _OptionCurrent$[ebp+16], eax

; 7974 : 	OptionCurrent.ServerOptionInfo.lRestrictScore=m_pGameServiceOption->lRestrictScore;

  000ed	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000f3	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000f6	89 55 a8	 mov	 DWORD PTR _OptionCurrent$[ebp+20], edx
  000f9	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000fc	89 45 ac	 mov	 DWORD PTR _OptionCurrent$[ebp+24], eax

; 7975 : 	OptionCurrent.ServerOptionInfo.lMinTableScore=m_pGameServiceOption->lMinTableScore;

  000ff	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00102	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00105	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00108	89 55 b0	 mov	 DWORD PTR _OptionCurrent$[ebp+28], edx
  0010b	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0010e	89 45 b4	 mov	 DWORD PTR _OptionCurrent$[ebp+32], eax

; 7976 : 	OptionCurrent.ServerOptionInfo.lMinEnterScore=m_pGameServiceOption->lMinEnterScore;

  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00117	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  0011a	89 55 b8	 mov	 DWORD PTR _OptionCurrent$[ebp+36], edx
  0011d	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00120	89 45 bc	 mov	 DWORD PTR _OptionCurrent$[ebp+40], eax

; 7977 : 	OptionCurrent.ServerOptionInfo.lMaxEnterScore=m_pGameServiceOption->lMaxEnterScore;

  00123	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00126	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00129	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0012c	89 55 c0	 mov	 DWORD PTR _OptionCurrent$[ebp+44], edx
  0012f	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  00132	89 45 c4	 mov	 DWORD PTR _OptionCurrent$[ebp+48], eax

; 7978 : 
; 7979 : 	//会员限制
; 7980 : 	OptionCurrent.ServerOptionInfo.cbMinEnterMember=m_pGameServiceOption->cbMinEnterMember;

  00135	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00138	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0013b	8a 51 38	 mov	 dl, BYTE PTR [ecx+56]
  0013e	88 55 c8	 mov	 BYTE PTR _OptionCurrent$[ebp+52], dl

; 7981 : 	OptionCurrent.ServerOptionInfo.cbMaxEnterMember=m_pGameServiceOption->cbMaxEnterMember;

  00141	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00144	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00147	8a 51 39	 mov	 dl, BYTE PTR [ecx+57]
  0014a	88 55 c9	 mov	 BYTE PTR _OptionCurrent$[ebp+53], dl

; 7982 : 
; 7983 : 	//房间属性
; 7984 : 	OptionCurrent.ServerOptionInfo.dwServerRule=m_pGameServiceOption->dwServerRule;

  0014d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00150	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00153	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00156	89 55 ca	 mov	 DWORD PTR _OptionCurrent$[ebp+54], edx

; 7985 : 	lstrcpyn(OptionCurrent.ServerOptionInfo.szServerName,m_pGameServiceOption->szServerName,CountArray(OptionCurrent.ServerOptionInfo.szServerName));

  00159	6a 20		 push	 32			; 00000020H
  0015b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00161	83 c1 50	 add	 ecx, 80			; 00000050H
  00164	51		 push	 ecx
  00165	8d 55 ce	 lea	 edx, DWORD PTR _OptionCurrent$[ebp+58]
  00168	52		 push	 edx
  00169	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7986 : 
; 7987 : 	//聊天规则
; 7988 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_GAME_CHAT;

  0016f	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  00172	83 c8 01	 or	 eax, 1
  00175	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7989 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_ROOM_CHAT;

  00178	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  0017b	83 c8 02	 or	 eax, 2
  0017e	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7990 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_WISPER_CHAT;

  00181	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  00184	83 c8 04	 or	 eax, 4
  00187	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7991 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_WISPER_ON_GAME;

  0018a	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  0018d	83 c8 08	 or	 eax, 8
  00190	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7992 : 
; 7993 : 	//房间规则
; 7994 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_ROOM_ENTER;

  00193	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  00196	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  0019b	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7995 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_GAME_ENTER;

  0019e	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001a1	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  001a6	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7996 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_GAME_LOOKON;

  001a9	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001ac	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  001b1	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 7997 : 
; 7998 : 	//银行规则
; 7999 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_TAKE_IN_ROOM;

  001b4	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001b7	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  001bc	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8000 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_TAKE_IN_GAME;

  001bf	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001c2	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  001c7	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8001 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_SAVE_IN_ROOM;

  001ca	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001cd	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  001d2	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8002 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_SAVE_IN_GAME;

  001d5	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001d8	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  001dd	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8003 : 
; 8004 : 	//其他规则
; 8005 : 	//OptionCurrent.dwRuleMask|=SR_RECORD_GAME_TRACK;
; 8006 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_GAME_RULE;

  001e0	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001e3	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  001e8	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8007 : 	OptionCurrent.dwRuleMask|=SR_FORFEND_LOCK_TABLE;

  001eb	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001ee	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  001f3	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8008 : 	OptionCurrent.dwRuleMask|=SR_ALLOW_ANDROID_SIMULATE;

  001f6	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  001f9	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  001fe	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax

; 8009 : 
; 8010 : 	//组件规则
; 8011 : 	if (m_pGameServiceAttrib->cbDynamicJoin==TRUE) OptionCurrent.dwRuleMask|=SR_ALLOW_DYNAMIC_JOIN;

  00201	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00204	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00207	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  0020b	83 fa 01	 cmp	 edx, 1
  0020e	75 09		 jne	 SHORT $LN4@OnTCPNetwo
  00210	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  00213	83 c8 10	 or	 eax, 16			; 00000010H
  00216	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax
$LN4@OnTCPNetwo:

; 8012 : 	if (m_pGameServiceAttrib->cbAndroidUser==TRUE) OptionCurrent.dwRuleMask|=SR_ALLOW_ANDROID_ATTEND;

  00219	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021c	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0021f	0f b6 51 26	 movzx	 edx, BYTE PTR [ecx+38]
  00223	83 fa 01	 cmp	 edx, 1
  00226	75 0b		 jne	 SHORT $LN5@OnTCPNetwo
  00228	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  0022b	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  00230	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax
$LN5@OnTCPNetwo:

; 8013 : 	//if (m_pGameServiceAttrib->cbOffLineTrustee==TRUE) OptionCurrent.dwRuleMask|=SR_ALLOW_OFFLINE_TRUSTEE;
; 8014 : 
; 8015 : 	//模式规则
; 8016 : 	if ((m_pGameServiceOption->wServerType&(GAME_GENRE_GOLD|GAME_GENRE_MATCH))==0) OptionCurrent.dwRuleMask|=SR_RECORD_GAME_SCORE;

  00233	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00236	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00239	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0023d	83 e2 05	 and	 edx, 5
  00240	75 0b		 jne	 SHORT $LN6@OnTCPNetwo
  00242	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  00245	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  0024a	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax
$LN6@OnTCPNetwo:

; 8017 : 	if ((m_pGameServiceOption->wServerType&(GAME_GENRE_GOLD|GAME_GENRE_MATCH))==0) OptionCurrent.dwRuleMask|=SR_IMMEDIATE_WRITE_SCORE;

  0024d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00250	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00253	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00257	83 e2 05	 and	 edx, 5
  0025a	75 0b		 jne	 SHORT $LN7@OnTCPNetwo
  0025c	8b 45 94	 mov	 eax, DWORD PTR _OptionCurrent$[ebp]
  0025f	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  00264	89 45 94	 mov	 DWORD PTR _OptionCurrent$[ebp], eax
$LN7@OnTCPNetwo:

; 8018 : 
; 8019 : 	//发送数据
; 8020 : 	SendData(pIServerUserItem,MDM_GR_MANAGE,SUB_GR_OPTION_CURRENT,&OptionCurrent,sizeof(OptionCurrent));

  00267	6a 5a		 push	 90			; 0000005aH
  00269	8d 45 94	 lea	 eax, DWORD PTR _OptionCurrent$[ebp]
  0026c	50		 push	 eax
  0026d	6a 09		 push	 9
  0026f	6a 09		 push	 9
  00271	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00274	51		 push	 ecx
  00275	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	83 c1 04	 add	 ecx, 4
  0027b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0027e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00281	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00284	ff d2		 call	 edx

; 8021 : 
; 8022 : 	return true;

  00286	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 8023 : }

  00288	5f		 pop	 edi
  00289	5e		 pop	 esi
  0028a	5b		 pop	 ebx
  0028b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0028e	33 cd		 xor	 ecx, ebp
  00290	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00295	8b e5		 mov	 esp, ebp
  00297	5d		 pop	 ebp
  00298	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubQueryOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_ExchangeScore$ = -76					; size = 56
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pExchangeScore$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByBeans, COMDAT
; _this$ = ecx

; 7272 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7273 : 	//参数校验
; 7274 : 	ASSERT(wDataSize==sizeof(CMD_GR_ExchangeScoreByBeans));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7275 : 	if(wDataSize!=sizeof(CMD_GR_ExchangeScoreByBeans)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 db 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7276 : 
; 7277 : 	//构造结构
; 7278 : 	CMD_GR_ExchangeScoreByBeans * pExchangeScore = (CMD_GR_ExchangeScoreByBeans*)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pExchangeScore$[ebp], eax

; 7279 : 	pExchangeScore->szMachineID[CountArray(pExchangeScore->szMachineID)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pExchangeScore$[ebp]
  0005c	c6 44 01 0c 00	 mov	 BYTE PTR [ecx+eax+12], 0

; 7280 : 
; 7281 : 	//获取用户
; 7282 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00061	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00064	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00069	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7283 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0006d	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00071	50		 push	 eax
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8b 11		 mov	 edx, DWORD PTR [ecx]
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007d	ff d0		 call	 eax
  0007f	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7284 : 
; 7285 : 	//用户效验
; 7286 : 	ASSERT(pIServerUserItem!=NULL);

  00082	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00086	75 18		 jne	 SHORT $LN6@OnTCPNetwo
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0008d	83 c0 0e	 add	 eax, 14			; 0000000eH
  00090	50		 push	 eax
  00091	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00096	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009b	85 c0		 test	 eax, eax
  0009d	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0009f	cc		 int	 3
$LN6@OnTCPNetwo:

; 7287 : 	if (pIServerUserItem==NULL) return false;

  000a0	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a4	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  000a6	32 c0		 xor	 al, al
  000a8	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7288 : 
; 7289 : 	//构造结构
; 7290 : 	DBR_GR_ExchangeScoreByBeans ExchangeScore;
; 7291 : 	ZeroMemory(&ExchangeScore,sizeof(ExchangeScore));

  000aa	6a 38		 push	 56			; 00000038H
  000ac	6a 00		 push	 0
  000ae	8d 45 b4	 lea	 eax, DWORD PTR _ExchangeScore$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 _memset
  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7292 : 
; 7293 : 	//设置变量
; 7294 : 	ExchangeScore.dwUserID=pExchangeScore->dwUserID;

  000ba	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	89 4d b4	 mov	 DWORD PTR _ExchangeScore$[ebp], ecx

; 7295 : 	ExchangeScore.dExchangeBeans=pExchangeScore->dExchangeBeans;

  000c2	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  000c5	f2 0f 10 40 04	 movsd	 xmm0, QWORD PTR [eax+4]
  000ca	f2 0f 11 45 bc	 movsd	 QWORD PTR _ExchangeScore$[ebp+8], xmm0

; 7296 : 	ExchangeScore.dwClientAddr=pIServerUserItem->GetClientAddr();

  000cf	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d2	8b 10		 mov	 edx, DWORD PTR [eax]
  000d4	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d7	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000da	ff d0		 call	 eax
  000dc	89 45 c4	 mov	 DWORD PTR _ExchangeScore$[ebp+16], eax

; 7297 : 	lstrcpyn(ExchangeScore.szMachineID,pExchangeScore->szMachineID,CountArray(ExchangeScore.szMachineID));

  000df	6a 21		 push	 33			; 00000021H
  000e1	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  000e4	83 c0 0c	 add	 eax, 12			; 0000000cH
  000e7	50		 push	 eax
  000e8	8d 4d c8	 lea	 ecx, DWORD PTR _ExchangeScore$[ebp+20]
  000eb	51		 push	 ecx
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7298 : 
; 7299 : 	//投递请求
; 7300 : 	m_pIDBCorrespondManager->PostDataBaseRequest(ExchangeScore.dwUserID,DBR_GR_EXCHANGE_SCORE_BEANS,dwSocketID,&ExchangeScore,sizeof(ExchangeScore));

  000f2	6a 00		 push	 0
  000f4	6a 38		 push	 56			; 00000038H
  000f6	8d 45 b4	 lea	 eax, DWORD PTR _ExchangeScore$[ebp]
  000f9	50		 push	 eax
  000fa	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000fd	51		 push	 ecx
  000fe	68 23 03 00 00	 push	 803			; 00000323H
  00103	8b 55 b4	 mov	 edx, DWORD PTR _ExchangeScore$[ebp]
  00106	52		 push	 edx
  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00110	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00113	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00119	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0011b	50		 push	 eax
  0011c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011f	ff d2		 call	 edx
  00121	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7301 : 
; 7302 : 	return true;

  00124	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7303 : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	33 cd		 xor	 ecx, ebp
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByBeans
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv190 = -144						; size = 4
tv181 = -144						; size = 4
_ExchangeScore$ = -76					; size = 56
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pExchangeScore$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByIngot, COMDAT
; _this$ = ecx

; 7233 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7234 : 	//参数校验
; 7235 : 	ASSERT(wDataSize==sizeof(CMD_GR_ExchangeScoreByIngot));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00020	74 19		 je	 SHORT $LN6@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0003a	cc		 int	 3
$LN6@OnTCPNetwo:

; 7236 : 	if(wDataSize!=sizeof(CMD_GR_ExchangeScoreByIngot)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 42 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7237 : 
; 7238 : 	//构造结构
; 7239 : 	CMD_GR_ExchangeScoreByIngot * pExchangeScore = (CMD_GR_ExchangeScoreByIngot*)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pExchangeScore$[ebp], eax

; 7240 : 	pExchangeScore->szMachineID[CountArray(pExchangeScore->szMachineID)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pExchangeScore$[ebp]
  0005c	c6 44 01 0c 00	 mov	 BYTE PTR [ecx+eax+12], 0

; 7241 : 
; 7242 : 	//获取用户
; 7243 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00061	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00064	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00069	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7244 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0006d	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00071	50		 push	 eax
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8b 11		 mov	 edx, DWORD PTR [ecx]
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007d	ff d0		 call	 eax
  0007f	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7245 : 
; 7246 : 	//用户效验
; 7247 : 	ASSERT(pIServerUserItem!=NULL);

  00082	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00086	75 18		 jne	 SHORT $LN7@OnTCPNetwo
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0008d	83 c0 0e	 add	 eax, 14			; 0000000eH
  00090	50		 push	 eax
  00091	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00096	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009b	85 c0		 test	 eax, eax
  0009d	74 01		 je	 SHORT $LN7@OnTCPNetwo
  0009f	cc		 int	 3
$LN7@OnTCPNetwo:

; 7248 : 	if (pIServerUserItem==NULL) return false;

  000a0	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a4	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  000a6	32 c0		 xor	 al, al
  000a8	e9 e0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7249 : 
; 7250 : 	//数据校验
; 7251 : 	ASSERT(pExchangeScore->lExchangeIngot>0);

  000ad	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  000b0	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv181[ebp], eax
  000b6	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv181[ebp]
  000bc	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  000c0	7f 26		 jg	 SHORT $LN8@OnTCPNetwo
  000c2	7c 0c		 jl	 SHORT $LN9@OnTCPNetwo
  000c4	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv181[ebp]
  000ca	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  000ce	77 18		 ja	 SHORT $LN8@OnTCPNetwo
$LN9@OnTCPNetwo:
  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000d5	83 c0 12	 add	 eax, 18			; 00000012H
  000d8	50		 push	 eax
  000d9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000de	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000e3	85 c0		 test	 eax, eax
  000e5	74 01		 je	 SHORT $LN8@OnTCPNetwo
  000e7	cc		 int	 3
$LN8@OnTCPNetwo:

; 7252 : 	if (pExchangeScore->lExchangeIngot<=0) return false;

  000e8	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  000eb	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv190[ebp], eax
  000f1	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv190[ebp]
  000f7	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  000fb	7f 12		 jg	 SHORT $LN4@OnTCPNetwo
  000fd	7c 0c		 jl	 SHORT $LN10@OnTCPNetwo
  000ff	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv190[ebp]
  00105	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00109	77 04		 ja	 SHORT $LN4@OnTCPNetwo
$LN10@OnTCPNetwo:
  0010b	32 c0		 xor	 al, al
  0010d	eb 7e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 7253 : 
; 7254 : 	//构造结构
; 7255 : 	DBR_GR_ExchangeScoreByIngot ExchangeScore;
; 7256 : 	ZeroMemory(&ExchangeScore,sizeof(ExchangeScore));

  0010f	6a 38		 push	 56			; 00000038H
  00111	6a 00		 push	 0
  00113	8d 45 b4	 lea	 eax, DWORD PTR _ExchangeScore$[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 _memset
  0011c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7257 : 
; 7258 : 	//设置变量
; 7259 : 	ExchangeScore.dwUserID=pExchangeScore->dwUserID;

  0011f	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  00122	8b 08		 mov	 ecx, DWORD PTR [eax]
  00124	89 4d b4	 mov	 DWORD PTR _ExchangeScore$[ebp], ecx

; 7260 : 	ExchangeScore.lExchangeIngot=pExchangeScore->lExchangeIngot;

  00127	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  0012a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012d	89 4d bc	 mov	 DWORD PTR _ExchangeScore$[ebp+8], ecx
  00130	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00133	89 55 c0	 mov	 DWORD PTR _ExchangeScore$[ebp+12], edx

; 7261 : 	ExchangeScore.dwClientAddr=pIServerUserItem->GetClientAddr();

  00136	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00139	8b 10		 mov	 edx, DWORD PTR [eax]
  0013b	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0013e	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00141	ff d0		 call	 eax
  00143	89 45 c4	 mov	 DWORD PTR _ExchangeScore$[ebp+16], eax

; 7262 : 	lstrcpyn(ExchangeScore.szMachineID,pExchangeScore->szMachineID,CountArray(ExchangeScore.szMachineID));

  00146	6a 21		 push	 33			; 00000021H
  00148	8b 45 f4	 mov	 eax, DWORD PTR _pExchangeScore$[ebp]
  0014b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0014e	50		 push	 eax
  0014f	8d 4d c8	 lea	 ecx, DWORD PTR _ExchangeScore$[ebp+20]
  00152	51		 push	 ecx
  00153	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7263 : 
; 7264 : 	//投递请求
; 7265 : 	m_pIDBCorrespondManager->PostDataBaseRequest(ExchangeScore.dwUserID,DBR_GR_EXCHANGE_SCORE_INGOT,dwSocketID,&ExchangeScore,sizeof(ExchangeScore));

  00159	6a 00		 push	 0
  0015b	6a 38		 push	 56			; 00000038H
  0015d	8d 45 b4	 lea	 eax, DWORD PTR _ExchangeScore$[ebp]
  00160	50		 push	 eax
  00161	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00164	51		 push	 ecx
  00165	68 22 03 00 00	 push	 802			; 00000322H
  0016a	8b 55 b4	 mov	 edx, DWORD PTR _ExchangeScore$[ebp]
  0016d	52		 push	 edx
  0016e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00171	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00177	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0017a	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00180	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00182	50		 push	 eax
  00183	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00186	ff d2		 call	 edx
  00188	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7266 : 
; 7267 : 	return true;

  0018b	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7268 : }

  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5b		 pop	 ebx
  00190	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00193	33 cd		 xor	 ecx, ebp
  00195	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByIngot
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_PurchaseMember$ = -68					; size = 48
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pPurchaseMember$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubPurchaseMember, COMDAT
; _this$ = ecx

; 7197 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7198 : 	//参数校验
; 7199 : 	ASSERT(wDataSize==sizeof(CMD_GR_PurchaseMember));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 28	 cmp	 eax, 40			; 00000028H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7200 : 	if(wDataSize!=sizeof(CMD_GR_PurchaseMember)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 28	 cmp	 eax, 40			; 00000028H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 e5 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7201 : 
; 7202 : 	//构造结构
; 7203 : 	CMD_GR_PurchaseMember * pPurchaseMember = (CMD_GR_PurchaseMember*)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pPurchaseMember$[ebp], eax

; 7204 : 	pPurchaseMember->szMachineID[CountArray(pPurchaseMember->szMachineID)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pPurchaseMember$[ebp]
  0005c	c6 44 01 07 00	 mov	 BYTE PTR [ecx+eax+7], 0

; 7205 : 
; 7206 : 	//获取用户
; 7207 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00061	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00064	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00069	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7208 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0006d	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00071	50		 push	 eax
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8b 11		 mov	 edx, DWORD PTR [ecx]
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007d	ff d0		 call	 eax
  0007f	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7209 : 
; 7210 : 	//用户效验
; 7211 : 	ASSERT(pIServerUserItem!=NULL);

  00082	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00086	75 18		 jne	 SHORT $LN6@OnTCPNetwo
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0008d	83 c0 0e	 add	 eax, 14			; 0000000eH
  00090	50		 push	 eax
  00091	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00096	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009b	85 c0		 test	 eax, eax
  0009d	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0009f	cc		 int	 3
$LN6@OnTCPNetwo:

; 7212 : 	if (pIServerUserItem==NULL) return false;

  000a0	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a4	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  000a6	32 c0		 xor	 al, al
  000a8	e9 83 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7213 : 
; 7214 : 	//构造结构
; 7215 : 	DBR_GR_PurchaseMember PurchaseMember;
; 7216 : 	ZeroMemory(&PurchaseMember,sizeof(PurchaseMember));

  000ad	6a 30		 push	 48			; 00000030H
  000af	6a 00		 push	 0
  000b1	8d 45 bc	 lea	 eax, DWORD PTR _PurchaseMember$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 _memset
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7217 : 
; 7218 : 	//设置变量
; 7219 : 	PurchaseMember.dwUserID=pPurchaseMember->dwUserID;

  000bd	8b 45 f4	 mov	 eax, DWORD PTR _pPurchaseMember$[ebp]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d bc	 mov	 DWORD PTR _PurchaseMember$[ebp], ecx

; 7220 : 	PurchaseMember.cbMemberOrder=pPurchaseMember->cbMemberOrder;

  000c5	8b 45 f4	 mov	 eax, DWORD PTR _pPurchaseMember$[ebp]
  000c8	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000cb	88 4d c0	 mov	 BYTE PTR _PurchaseMember$[ebp+4], cl

; 7221 : 	PurchaseMember.wPurchaseTime=pPurchaseMember->wPurchaseTime;

  000ce	8b 45 f4	 mov	 eax, DWORD PTR _pPurchaseMember$[ebp]
  000d1	66 8b 48 05	 mov	 cx, WORD PTR [eax+5]
  000d5	66 89 4d c2	 mov	 WORD PTR _PurchaseMember$[ebp+6], cx

; 7222 : 	PurchaseMember.dwClientAddr=pIServerUserItem->GetClientAddr();

  000d9	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000dc	8b 10		 mov	 edx, DWORD PTR [eax]
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e1	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000e4	ff d0		 call	 eax
  000e6	89 45 c4	 mov	 DWORD PTR _PurchaseMember$[ebp+8], eax

; 7223 : 	lstrcpyn(PurchaseMember.szMachineID,pPurchaseMember->szMachineID,CountArray(PurchaseMember.szMachineID));

  000e9	6a 21		 push	 33			; 00000021H
  000eb	8b 45 f4	 mov	 eax, DWORD PTR _pPurchaseMember$[ebp]
  000ee	83 c0 07	 add	 eax, 7
  000f1	50		 push	 eax
  000f2	8d 4d c8	 lea	 ecx, DWORD PTR _PurchaseMember$[ebp+12]
  000f5	51		 push	 ecx
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7224 : 
; 7225 : 	//投递请求
; 7226 : 	m_pIDBCorrespondManager->PostDataBaseRequest(PurchaseMember.dwUserID,DBR_GR_PURCHASE_MEMBER,dwSocketID,&PurchaseMember,sizeof(PurchaseMember));

  000fc	6a 00		 push	 0
  000fe	6a 30		 push	 48			; 00000030H
  00100	8d 45 bc	 lea	 eax, DWORD PTR _PurchaseMember$[ebp]
  00103	50		 push	 eax
  00104	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00107	51		 push	 ecx
  00108	68 21 03 00 00	 push	 801			; 00000321H
  0010d	8b 55 bc	 mov	 edx, DWORD PTR _PurchaseMember$[ebp]
  00110	52		 push	 edx
  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0011a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011d	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00123	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00125	50		 push	 eax
  00126	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00129	ff d2		 call	 edx
  0012b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7227 : 
; 7228 : 	return true;

  0012e	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7229 : }

  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
  00132	5b		 pop	 ebx
  00133	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00136	33 cd		 xor	 ecx, ebp
  00138	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubPurchaseMember
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubQueryExchangeInfo@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_wSendDataSize$ = -356					; size = 2
_ExchangeParameter$ = -352				; size = 344
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubQueryExchangeInfo@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubQueryExchangeInfo, COMDAT
; _this$ = ecx

; 7173 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 01 00
	00		 sub	 esp, 420		; 000001a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7174 : 	//构造结构
; 7175 : 	CMD_GR_ExchangeParameter ExchangeParameter;
; 7176 : 	ZeroMemory(&ExchangeParameter,sizeof(ExchangeParameter));

  00019	68 58 01 00 00	 push	 344			; 00000158H
  0001e	6a 00		 push	 0
  00020	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR _ExchangeParameter$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7177 : 
; 7178 : 	//设置变量
; 7179 : 	ExchangeParameter.wMemberCount=m_wMemberCount;

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	66 8b 88 48 03
	00 00		 mov	 cx, WORD PTR [eax+840]
  00039	66 89 8d ac fe
	ff ff		 mov	 WORD PTR _ExchangeParameter$[ebp+12], cx

; 7180 : 	ExchangeParameter.dwExchangeRate=m_pGameParameter->dwExchangeRate;

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00046	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00049	89 95 a0 fe ff
	ff		 mov	 DWORD PTR _ExchangeParameter$[ebp], edx

; 7181 : 	ExchangeParameter.dwPresentExchangeRate=m_pGameParameter->dwPresentExchangeRate;	

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00055	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00058	89 95 a4 fe ff
	ff		 mov	 DWORD PTR _ExchangeParameter$[ebp+4], edx

; 7182 : 	ExchangeParameter.dwRateGold=m_pGameParameter->dwRateGold;	

  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00064	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00067	89 95 a8 fe ff
	ff		 mov	 DWORD PTR _ExchangeParameter$[ebp+8], edx

; 7183 : 	CopyMemory(ExchangeParameter.MemberParameter,m_MemberParameter,sizeof(tagMemberParameter)*m_wMemberCount);

  0006d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00070	0f b7 88 48 03
	00 00		 movzx	 ecx, WORD PTR [eax+840]
  00077	6b d1 21	 imul	 edx, ecx, 33
  0007a	52		 push	 edx
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	05 4a 03 00 00	 add	 eax, 842		; 0000034aH
  00083	50		 push	 eax
  00084	8d 8d ae fe ff
	ff		 lea	 ecx, DWORD PTR _ExchangeParameter$[ebp+14]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 _memcpy
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7184 : 
; 7185 : 	//计算大小
; 7186 : 	WORD wSendDataSize = sizeof(ExchangeParameter)-sizeof(ExchangeParameter.MemberParameter);

  00093	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00098	66 89 85 9c fe
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 7187 : 	wSendDataSize += sizeof(tagMemberParameter)*ExchangeParameter.wMemberCount;

  0009f	0f b7 85 ac fe
	ff ff		 movzx	 eax, WORD PTR _ExchangeParameter$[ebp+12]
  000a6	6b c8 21	 imul	 ecx, eax, 33
  000a9	0f b7 95 9c fe
	ff ff		 movzx	 edx, WORD PTR _wSendDataSize$[ebp]
  000b0	03 d1		 add	 edx, ecx
  000b2	66 89 95 9c fe
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 7188 : 
; 7189 : 	//发送数据
; 7190 : 	m_pITCPNetworkEngine->SendData(dwSocketID,MDM_GR_EXCHANGE,SUB_GR_EXCHANGE_PARAM_INFO,&ExchangeParameter,wSendDataSize);

  000b9	0f b7 85 9c fe
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  000c0	50		 push	 eax
  000c1	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR _ExchangeParameter$[ebp]
  000c7	51		 push	 ecx
  000c8	68 91 01 00 00	 push	 401			; 00000191H
  000cd	6a 07		 push	 7
  000cf	8b 55 10	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  000d2	52		 push	 edx
  000d3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d6	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  000dc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000df	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e1	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  000e7	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000ea	ff d2		 call	 edx

; 7191 : 
; 7192 : 	return true;

  000ec	b0 01		 mov	 al, 1

; 7193 : }

  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f4	33 cd		 xor	 ecx, ebp
  000f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubQueryExchangeInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubQueryExchangeInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_MemberInfo$ = -96					; size = 80
_pIServerUserItem$ = -16				; size = 4
_pMemberInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubMemberDayGift, COMDAT
; _this$ = ecx

; 7881 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7882 : 	//参数校验
; 7883 : 	ASSERT(wDataSize==sizeof(CMD_GR_MemberDayGift));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 46	 cmp	 eax, 70			; 00000046H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7884 : 	if(wDataSize!=sizeof(CMD_GR_MemberDayGift)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 46	 cmp	 eax, 70			; 00000046H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 cc 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7885 : 
; 7886 : 	//提取数据
; 7887 : 	CMD_GR_MemberDayGift * pMemberInfo= (CMD_GR_MemberDayGift *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pMemberInfo$[ebp], eax

; 7888 : 	pMemberInfo->szPassword[CountArray(pMemberInfo->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pMemberInfo$[ebp]
  0005c	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7889 : 	pMemberInfo->szMachineID[CountArray(pMemberInfo->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pMemberInfo$[ebp]
  0006c	c6 44 01 25 00	 mov	 BYTE PTR [ecx+eax+37], 0

; 7890 : 
; 7891 : 	//查找用户
; 7892 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pMemberInfo->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00089	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008c	ff d2		 call	 edx
  0008e	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7893 : 	if(pIServerUserItem==NULL) return false;

  00091	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00095	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00097	32 c0		 xor	 al, al
  00099	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7894 : 
; 7895 : 	//构造结构
; 7896 : 	DBR_GR_MemberDayGift MemberInfo;
; 7897 : 	MemberInfo.dwUserID = pMemberInfo->dwUserID;

  0009b	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	89 4d a0	 mov	 DWORD PTR _MemberInfo$[ebp], ecx

; 7898 : 	MemberInfo.dwClientAddr=pIServerUserItem->GetClientAddr();

  000a3	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000ae	ff d0		 call	 eax
  000b0	89 45 c8	 mov	 DWORD PTR _MemberInfo$[ebp+40], eax

; 7899 : 	lstrcpyn(MemberInfo.szPassword,pMemberInfo->szPassword,CountArray(MemberInfo.szPassword));

  000b3	6a 21		 push	 33			; 00000021H
  000b5	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  000b8	83 c0 04	 add	 eax, 4
  000bb	50		 push	 eax
  000bc	8d 4d a4	 lea	 ecx, DWORD PTR _MemberInfo$[ebp+4]
  000bf	51		 push	 ecx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7900 : 	lstrcpyn(MemberInfo.szMachineID,pMemberInfo->szMachineID,CountArray(MemberInfo.szMachineID));

  000c6	6a 21		 push	 33			; 00000021H
  000c8	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  000cb	83 c0 25	 add	 eax, 37			; 00000025H
  000ce	50		 push	 eax
  000cf	8d 4d cc	 lea	 ecx, DWORD PTR _MemberInfo$[ebp+44]
  000d2	51		 push	 ecx
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7901 : 
; 7902 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_MEMBER_DAY_GIFT,dwSocketID,&MemberInfo,sizeof(MemberInfo));

  000d9	6a 00		 push	 0
  000db	6a 50		 push	 80			; 00000050H
  000dd	8d 45 a0	 lea	 eax, DWORD PTR _MemberInfo$[ebp]
  000e0	50		 push	 eax
  000e1	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000e4	51		 push	 ecx
  000e5	68 b2 04 00 00	 push	 1202			; 000004b2H
  000ea	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000ed	8b 02		 mov	 eax, DWORD PTR [edx]
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f2	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000f5	ff d2		 call	 edx
  000f7	50		 push	 eax
  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00101	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0010a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0010c	50		 push	 eax
  0010d	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00110	ff d2		 call	 edx
  00112	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7903 : 
; 7904 : 	return true;

  00115	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7905 : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011d	33 cd		 xor	 ecx, ebp
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubMemberDayGift
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_MemberInfo$ = -96					; size = 80
_pIServerUserItem$ = -16				; size = 4
_pMemberInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubMemberDayPresent, COMDAT
; _this$ = ecx

; 7853 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7854 : 	//参数校验
; 7855 : 	ASSERT(wDataSize==sizeof(CMD_GR_MemberDayPresent));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 46	 cmp	 eax, 70			; 00000046H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7856 : 	if(wDataSize!=sizeof(CMD_GR_MemberDayPresent)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 46	 cmp	 eax, 70			; 00000046H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 cc 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7857 : 
; 7858 : 	//提取数据
; 7859 : 	CMD_GR_MemberDayPresent * pMemberInfo= (CMD_GR_MemberDayPresent *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pMemberInfo$[ebp], eax

; 7860 : 	pMemberInfo->szPassword[CountArray(pMemberInfo->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pMemberInfo$[ebp]
  0005c	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7861 : 	pMemberInfo->szMachineID[CountArray(pMemberInfo->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pMemberInfo$[ebp]
  0006c	c6 44 01 25 00	 mov	 BYTE PTR [ecx+eax+37], 0

; 7862 : 
; 7863 : 	//查找用户
; 7864 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pMemberInfo->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00089	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008c	ff d2		 call	 edx
  0008e	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7865 : 	if(pIServerUserItem==NULL) return false;

  00091	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00095	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00097	32 c0		 xor	 al, al
  00099	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7866 : 
; 7867 : 	//构造结构
; 7868 : 	DBR_GR_MemberDayPresent MemberInfo;
; 7869 : 	MemberInfo.dwUserID = pMemberInfo->dwUserID;

  0009b	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	89 4d a0	 mov	 DWORD PTR _MemberInfo$[ebp], ecx

; 7870 : 	MemberInfo.dwClientAddr=pIServerUserItem->GetClientAddr();

  000a3	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000ae	ff d0		 call	 eax
  000b0	89 45 c8	 mov	 DWORD PTR _MemberInfo$[ebp+40], eax

; 7871 : 	lstrcpyn(MemberInfo.szPassword,pMemberInfo->szPassword,CountArray(MemberInfo.szPassword));

  000b3	6a 21		 push	 33			; 00000021H
  000b5	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  000b8	83 c0 04	 add	 eax, 4
  000bb	50		 push	 eax
  000bc	8d 4d a4	 lea	 ecx, DWORD PTR _MemberInfo$[ebp+4]
  000bf	51		 push	 ecx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7872 : 	lstrcpyn(MemberInfo.szMachineID,pMemberInfo->szMachineID,CountArray(MemberInfo.szMachineID));

  000c6	6a 21		 push	 33			; 00000021H
  000c8	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  000cb	83 c0 25	 add	 eax, 37			; 00000025H
  000ce	50		 push	 eax
  000cf	8d 4d cc	 lea	 ecx, DWORD PTR _MemberInfo$[ebp+44]
  000d2	51		 push	 ecx
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7873 : 
; 7874 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_MEMBER_DAY_PRESENT,dwSocketID,&MemberInfo,sizeof(MemberInfo));

  000d9	6a 00		 push	 0
  000db	6a 50		 push	 80			; 00000050H
  000dd	8d 45 a0	 lea	 eax, DWORD PTR _MemberInfo$[ebp]
  000e0	50		 push	 eax
  000e1	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000e4	51		 push	 ecx
  000e5	68 b1 04 00 00	 push	 1201			; 000004b1H
  000ea	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000ed	8b 02		 mov	 eax, DWORD PTR [edx]
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f2	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000f5	ff d2		 call	 edx
  000f7	50		 push	 eax
  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00101	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0010a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0010c	50		 push	 eax
  0010d	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00110	ff d2		 call	 edx
  00112	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7875 : 
; 7876 : 	return true;

  00115	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7877 : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011d	33 cd		 xor	 ecx, ebp
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubMemberDayPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_MemberInfo$ = -96					; size = 80
_pIServerUserItem$ = -16				; size = 4
_pMemberInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubMemberQueryInfo, COMDAT
; _this$ = ecx

; 7825 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7826 : 	//参数校验
; 7827 : 	ASSERT(wDataSize==sizeof(CMD_GR_MemberQueryInfo));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 46	 cmp	 eax, 70			; 00000046H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7828 : 	if(wDataSize!=sizeof(CMD_GR_MemberQueryInfo)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 46	 cmp	 eax, 70			; 00000046H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 cc 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7829 : 
; 7830 : 	//提取数据
; 7831 : 	CMD_GR_MemberQueryInfo * pMemberInfo= (CMD_GR_MemberQueryInfo *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pMemberInfo$[ebp], eax

; 7832 : 	pMemberInfo->szPassword[CountArray(pMemberInfo->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pMemberInfo$[ebp]
  0005c	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7833 : 	pMemberInfo->szMachineID[CountArray(pMemberInfo->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pMemberInfo$[ebp]
  0006c	c6 44 01 25 00	 mov	 BYTE PTR [ecx+eax+37], 0

; 7834 : 
; 7835 : 	//查找用户
; 7836 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pMemberInfo->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00089	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008c	ff d2		 call	 edx
  0008e	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7837 : 	if(pIServerUserItem==NULL) return false;

  00091	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00095	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00097	32 c0		 xor	 al, al
  00099	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7838 : 
; 7839 : 	//构造结构
; 7840 : 	DBR_GR_MemberQueryInfo MemberInfo;
; 7841 : 	MemberInfo.dwUserID = pMemberInfo->dwUserID;

  0009b	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	89 4d a0	 mov	 DWORD PTR _MemberInfo$[ebp], ecx

; 7842 : 	MemberInfo.dwClientAddr=pIServerUserItem->GetClientAddr();

  000a3	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000ae	ff d0		 call	 eax
  000b0	89 45 c8	 mov	 DWORD PTR _MemberInfo$[ebp+40], eax

; 7843 : 	lstrcpyn(MemberInfo.szPassword,pMemberInfo->szPassword,CountArray(MemberInfo.szPassword));

  000b3	6a 21		 push	 33			; 00000021H
  000b5	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  000b8	83 c0 04	 add	 eax, 4
  000bb	50		 push	 eax
  000bc	8d 4d a4	 lea	 ecx, DWORD PTR _MemberInfo$[ebp+4]
  000bf	51		 push	 ecx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7844 : 	lstrcpyn(MemberInfo.szMachineID,pMemberInfo->szMachineID,CountArray(MemberInfo.szMachineID));

  000c6	6a 21		 push	 33			; 00000021H
  000c8	8b 45 f4	 mov	 eax, DWORD PTR _pMemberInfo$[ebp]
  000cb	83 c0 25	 add	 eax, 37			; 00000025H
  000ce	50		 push	 eax
  000cf	8d 4d cc	 lea	 ecx, DWORD PTR _MemberInfo$[ebp+44]
  000d2	51		 push	 ecx
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7845 : 
; 7846 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_MEMBER_QUERY_INFO,dwSocketID,&MemberInfo,sizeof(MemberInfo));

  000d9	6a 00		 push	 0
  000db	6a 50		 push	 80			; 00000050H
  000dd	8d 45 a0	 lea	 eax, DWORD PTR _MemberInfo$[ebp]
  000e0	50		 push	 eax
  000e1	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000e4	51		 push	 ecx
  000e5	68 b0 04 00 00	 push	 1200			; 000004b0H
  000ea	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000ed	8b 02		 mov	 eax, DWORD PTR [edx]
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f2	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000f5	ff d2		 call	 edx
  000f7	50		 push	 eax
  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00101	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0010a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0010c	50		 push	 eax
  0010d	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00110	ff d2		 call	 edx
  00112	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7847 : 
; 7848 : 	return true;

  00115	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7849 : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011d	33 cd		 xor	 ecx, ebp
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubMemberQueryInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_TaskTake$ = -100					; size = 84
_pIServerUserItem$ = -16				; size = 4
_pTaskTake$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubGiveUpTaskRequest, COMDAT
; _this$ = ecx

; 7795 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7796 : 	//参数校验
; 7797 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_TakeGiveUp));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 48	 cmp	 eax, 72			; 00000048H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7798 : 	if(wDataSize!=sizeof(CMD_GR_C_TakeGiveUp)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 48	 cmp	 eax, 72			; 00000048H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 db 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7799 : 
; 7800 : 	//提取数据
; 7801 : 	CMD_GR_C_TakeGiveUp * pTaskTake = (CMD_GR_C_TakeGiveUp *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pTaskTake$[ebp], eax

; 7802 : 	pTaskTake->szPassword[CountArray(pTaskTake->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pTaskTake$[ebp]
  0005c	c6 44 01 06 00	 mov	 BYTE PTR [ecx+eax+6], 0

; 7803 : 	pTaskTake->szMachineID[CountArray(pTaskTake->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pTaskTake$[ebp]
  0006c	c6 44 01 27 00	 mov	 BYTE PTR [ecx+eax+39], 0

; 7804 : 
; 7805 : 	//查找用户
; 7806 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pTaskTake->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  00074	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00077	51		 push	 ecx
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00081	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0008a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008d	ff d2		 call	 edx
  0008f	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7807 : 	if(pIServerUserItem==NULL) return false;

  00092	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00096	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00098	32 c0		 xor	 al, al
  0009a	e9 87 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7808 : 
; 7809 : 	//构造结构
; 7810 : 	DBR_GR_TaskGiveUp TaskTake;
; 7811 : 	TaskTake.dwUserID = pTaskTake->dwUserID;

  0009f	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000a2	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  000a5	89 4d a0	 mov	 DWORD PTR _TaskTake$[ebp+4], ecx

; 7812 : 	TaskTake.wTaskID = pTaskTake->wTaskID;

  000a8	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000ab	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ae	66 89 4d 9c	 mov	 WORD PTR _TaskTake$[ebp], cx

; 7813 : 	TaskTake.dwClientAddr=pIServerUserItem->GetClientAddr();

  000b2	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b5	8b 10		 mov	 edx, DWORD PTR [eax]
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ba	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000bd	ff d0		 call	 eax
  000bf	89 45 c8	 mov	 DWORD PTR _TaskTake$[ebp+44], eax

; 7814 : 	lstrcpyn(TaskTake.szPassword,pTaskTake->szPassword,CountArray(TaskTake.szPassword));

  000c2	6a 21		 push	 33			; 00000021H
  000c4	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000c7	83 c0 06	 add	 eax, 6
  000ca	50		 push	 eax
  000cb	8d 4d a4	 lea	 ecx, DWORD PTR _TaskTake$[ebp+8]
  000ce	51		 push	 ecx
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7815 : 	lstrcpyn(TaskTake.szMachineID,pTaskTake->szMachineID,CountArray(TaskTake.szMachineID));

  000d5	6a 21		 push	 33			; 00000021H
  000d7	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000da	83 c0 27	 add	 eax, 39			; 00000027H
  000dd	50		 push	 eax
  000de	8d 4d cc	 lea	 ecx, DWORD PTR _TaskTake$[ebp+48]
  000e1	51		 push	 ecx
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7816 : 
; 7817 : 	//投递请求
; 7818 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_TASK_GIVEUP,dwSocketID,&TaskTake,sizeof(TaskTake));

  000e8	6a 00		 push	 0
  000ea	6a 54		 push	 84			; 00000054H
  000ec	8d 45 9c	 lea	 eax, DWORD PTR _TaskTake$[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000f3	51		 push	 ecx
  000f4	68 c0 02 00 00	 push	 704			; 000002c0H
  000f9	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000fc	8b 02		 mov	 eax, DWORD PTR [edx]
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00101	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00104	ff d2		 call	 edx
  00106	50		 push	 eax
  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00110	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00113	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00119	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0011b	50		 push	 eax
  0011c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011f	ff d2		 call	 edx
  00121	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7819 : 
; 7820 : 	return true;

  00124	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7821 : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	33 cd		 xor	 ecx, ebp
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubGiveUpTaskRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_TaskQueryInfo$ = -56					; size = 40
_pIServerUserItem$ = -16				; size = 4
_pLoadTaskInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubLoadTaskInfoRequest, COMDAT
; _this$ = ecx

; 7770 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7771 : 	//参数校验
; 7772 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_LoadTaskInfo));

  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001a	83 f8 25	 cmp	 eax, 37			; 00000025H
  0001d	74 19		 je	 SHORT $LN5@OnTCPNetwo
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00025	83 c1 02	 add	 ecx, 2
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00033	85 c0		 test	 eax, eax
  00035	74 01		 je	 SHORT $LN5@OnTCPNetwo
  00037	cc		 int	 3
$LN5@OnTCPNetwo:

; 7773 : 	if(wDataSize!=sizeof(CMD_GR_C_LoadTaskInfo)) return false;

  00038	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003c	83 f8 25	 cmp	 eax, 37			; 00000025H
  0003f	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 99 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7774 : 
; 7775 : 	//提取数据
; 7776 : 	CMD_GR_C_LoadTaskInfo * pLoadTaskInfo = (CMD_GR_C_LoadTaskInfo *)pData;

  00048	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004b	89 45 f4	 mov	 DWORD PTR _pLoadTaskInfo$[ebp], eax

; 7777 : 	pLoadTaskInfo->szPassword[CountArray(pLoadTaskInfo->szPassword)-1]=0;

  0004e	b8 01 00 00 00	 mov	 eax, 1
  00053	c1 e0 05	 shl	 eax, 5
  00056	8b 4d f4	 mov	 ecx, DWORD PTR _pLoadTaskInfo$[ebp]
  00059	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7778 : 
; 7779 : 	//查找用户
; 7780 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pLoadTaskInfo->dwUserID);

  0005e	8b 45 f4	 mov	 eax, DWORD PTR _pLoadTaskInfo$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	51		 push	 ecx
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0006d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00070	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00076	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00079	ff d2		 call	 edx
  0007b	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7781 : 	if(pIServerUserItem==NULL) return false;

  0007e	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00082	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00084	32 c0		 xor	 al, al
  00086	eb 59		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7782 : 
; 7783 : 	//构造结构
; 7784 : 	DBR_GR_TaskQueryInfo TaskQueryInfo;
; 7785 : 	TaskQueryInfo.dwUserID = pLoadTaskInfo->dwUserID;

  00088	8b 45 f4	 mov	 eax, DWORD PTR _pLoadTaskInfo$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 4d c8	 mov	 DWORD PTR _TaskQueryInfo$[ebp], ecx

; 7786 : 	lstrcpyn(TaskQueryInfo.szPassword,pLoadTaskInfo->szPassword,CountArray(TaskQueryInfo.szPassword));

  00090	6a 21		 push	 33			; 00000021H
  00092	8b 45 f4	 mov	 eax, DWORD PTR _pLoadTaskInfo$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	50		 push	 eax
  00099	8d 4d cc	 lea	 ecx, DWORD PTR _TaskQueryInfo$[ebp+4]
  0009c	51		 push	 ecx
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7787 : 
; 7788 : 	//投递请求
; 7789 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_TASK_QUERY_INFO,dwSocketID,&TaskQueryInfo,sizeof(TaskQueryInfo));

  000a3	6a 00		 push	 0
  000a5	6a 28		 push	 40			; 00000028H
  000a7	8d 45 c8	 lea	 eax, DWORD PTR _TaskQueryInfo$[ebp]
  000aa	50		 push	 eax
  000ab	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000ae	51		 push	 ecx
  000af	68 bf 02 00 00	 push	 703			; 000002bfH
  000b4	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000b7	8b 02		 mov	 eax, DWORD PTR [edx]
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000bc	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000bf	ff d2		 call	 edx
  000c1	50		 push	 eax
  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000cb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000d4	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000d6	50		 push	 eax
  000d7	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000da	ff d2		 call	 edx
  000dc	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7790 : 
; 7791 : 	return true;

  000df	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7792 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e7	33 cd		 xor	 ecx, ebp
  000e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubLoadTaskInfoRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_TaskReward$ = -100					; size = 84
_pIServerUserItem$ = -16				; size = 4
_pTaskReward$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubTaskRewardRequest, COMDAT
; _this$ = ecx

; 7740 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7741 : 	//参数校验
; 7742 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_TaskReward));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 48	 cmp	 eax, 72			; 00000048H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7743 : 	if(wDataSize!=sizeof(CMD_GR_C_TaskReward)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 48	 cmp	 eax, 72			; 00000048H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 db 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7744 : 
; 7745 : 	//提取数据
; 7746 : 	CMD_GR_C_TaskReward * pTaskReward = (CMD_GR_C_TaskReward *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pTaskReward$[ebp], eax

; 7747 : 	pTaskReward->szPassword[CountArray(pTaskReward->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pTaskReward$[ebp]
  0005c	c6 44 01 06 00	 mov	 BYTE PTR [ecx+eax+6], 0

; 7748 : 	pTaskReward->szMachineID[CountArray(pTaskReward->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pTaskReward$[ebp]
  0006c	c6 44 01 27 00	 mov	 BYTE PTR [ecx+eax+39], 0

; 7749 : 
; 7750 : 	//查找用户
; 7751 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pTaskReward->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pTaskReward$[ebp]
  00074	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00077	51		 push	 ecx
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00081	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0008a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008d	ff d2		 call	 edx
  0008f	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7752 : 	if(pIServerUserItem==NULL) return false;

  00092	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00096	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00098	32 c0		 xor	 al, al
  0009a	e9 87 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7753 : 
; 7754 : 	//构造结构
; 7755 : 	DBR_GR_TaskReward TaskReward;
; 7756 : 	TaskReward.dwUserID = pTaskReward->dwUserID;

  0009f	8b 45 f4	 mov	 eax, DWORD PTR _pTaskReward$[ebp]
  000a2	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  000a5	89 4d a0	 mov	 DWORD PTR _TaskReward$[ebp+4], ecx

; 7757 : 	TaskReward.wTaskID = pTaskReward->wTaskID;

  000a8	8b 45 f4	 mov	 eax, DWORD PTR _pTaskReward$[ebp]
  000ab	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ae	66 89 4d 9c	 mov	 WORD PTR _TaskReward$[ebp], cx

; 7758 : 	TaskReward.dwClientAddr=pIServerUserItem->GetClientAddr();

  000b2	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b5	8b 10		 mov	 edx, DWORD PTR [eax]
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ba	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000bd	ff d0		 call	 eax
  000bf	89 45 c8	 mov	 DWORD PTR _TaskReward$[ebp+44], eax

; 7759 : 	lstrcpyn(TaskReward.szPassword,pTaskReward->szPassword,CountArray(TaskReward.szPassword));

  000c2	6a 21		 push	 33			; 00000021H
  000c4	8b 45 f4	 mov	 eax, DWORD PTR _pTaskReward$[ebp]
  000c7	83 c0 06	 add	 eax, 6
  000ca	50		 push	 eax
  000cb	8d 4d a4	 lea	 ecx, DWORD PTR _TaskReward$[ebp+8]
  000ce	51		 push	 ecx
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7760 : 	lstrcpyn(TaskReward.szMachineID,pTaskReward->szMachineID,CountArray(TaskReward.szMachineID));

  000d5	6a 21		 push	 33			; 00000021H
  000d7	8b 45 f4	 mov	 eax, DWORD PTR _pTaskReward$[ebp]
  000da	83 c0 27	 add	 eax, 39			; 00000027H
  000dd	50		 push	 eax
  000de	8d 4d cc	 lea	 ecx, DWORD PTR _TaskReward$[ebp+48]
  000e1	51		 push	 ecx
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7761 : 
; 7762 : 	//投递请求
; 7763 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_TASK_REWARD,dwSocketID,&TaskReward,sizeof(TaskReward));

  000e8	6a 00		 push	 0
  000ea	6a 54		 push	 84			; 00000054H
  000ec	8d 45 9c	 lea	 eax, DWORD PTR _TaskReward$[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000f3	51		 push	 ecx
  000f4	68 bd 02 00 00	 push	 701			; 000002bdH
  000f9	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000fc	8b 02		 mov	 eax, DWORD PTR [edx]
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00101	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00104	ff d2		 call	 edx
  00106	50		 push	 eax
  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00110	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00113	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00119	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0011b	50		 push	 eax
  0011c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011f	ff d2		 call	 edx
  00121	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7764 : 
; 7765 : 	return true;

  00124	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7766 : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	33 cd		 xor	 ecx, ebp
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubTaskRewardRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_TaskTake$ = -100					; size = 84
_pIServerUserItem$ = -16				; size = 4
_pTaskTake$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubTakeTaskRequest, COMDAT
; _this$ = ecx

; 7710 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7711 : 	//参数校验
; 7712 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_TakeTask));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 48	 cmp	 eax, 72			; 00000048H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7713 : 	if(wDataSize!=sizeof(CMD_GR_C_TakeTask)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 48	 cmp	 eax, 72			; 00000048H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 db 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7714 : 
; 7715 : 	//提取数据
; 7716 : 	CMD_GR_C_TakeTask * pTaskTake = (CMD_GR_C_TakeTask *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pTaskTake$[ebp], eax

; 7717 : 	pTaskTake->szPassword[CountArray(pTaskTake->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pTaskTake$[ebp]
  0005c	c6 44 01 06 00	 mov	 BYTE PTR [ecx+eax+6], 0

; 7718 : 	pTaskTake->szMachineID[CountArray(pTaskTake->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pTaskTake$[ebp]
  0006c	c6 44 01 27 00	 mov	 BYTE PTR [ecx+eax+39], 0

; 7719 : 
; 7720 : 	//查找用户
; 7721 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pTaskTake->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  00074	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00077	51		 push	 ecx
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00081	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0008a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008d	ff d2		 call	 edx
  0008f	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7722 : 	if(pIServerUserItem==NULL) return false;

  00092	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00096	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00098	32 c0		 xor	 al, al
  0009a	e9 87 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7723 : 
; 7724 : 	//构造结构
; 7725 : 	DBR_GR_TaskTake TaskTake;
; 7726 : 	TaskTake.dwUserID = pTaskTake->dwUserID;

  0009f	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000a2	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  000a5	89 4d a0	 mov	 DWORD PTR _TaskTake$[ebp+4], ecx

; 7727 : 	TaskTake.wTaskID = pTaskTake->wTaskID;

  000a8	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000ab	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ae	66 89 4d 9c	 mov	 WORD PTR _TaskTake$[ebp], cx

; 7728 : 	TaskTake.dwClientAddr=pIServerUserItem->GetClientAddr();

  000b2	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b5	8b 10		 mov	 edx, DWORD PTR [eax]
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ba	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000bd	ff d0		 call	 eax
  000bf	89 45 c8	 mov	 DWORD PTR _TaskTake$[ebp+44], eax

; 7729 : 	lstrcpyn(TaskTake.szPassword,pTaskTake->szPassword,CountArray(TaskTake.szPassword));

  000c2	6a 21		 push	 33			; 00000021H
  000c4	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000c7	83 c0 06	 add	 eax, 6
  000ca	50		 push	 eax
  000cb	8d 4d a4	 lea	 ecx, DWORD PTR _TaskTake$[ebp+8]
  000ce	51		 push	 ecx
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7730 : 	lstrcpyn(TaskTake.szMachineID,pTaskTake->szMachineID,CountArray(TaskTake.szMachineID));

  000d5	6a 21		 push	 33			; 00000021H
  000d7	8b 45 f4	 mov	 eax, DWORD PTR _pTaskTake$[ebp]
  000da	83 c0 27	 add	 eax, 39			; 00000027H
  000dd	50		 push	 eax
  000de	8d 4d cc	 lea	 ecx, DWORD PTR _TaskTake$[ebp+48]
  000e1	51		 push	 ecx
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7731 : 
; 7732 : 	//投递请求
; 7733 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_TASK_TAKE,dwSocketID,&TaskTake,sizeof(TaskTake));

  000e8	6a 00		 push	 0
  000ea	6a 54		 push	 84			; 00000054H
  000ec	8d 45 9c	 lea	 eax, DWORD PTR _TaskTake$[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000f3	51		 push	 ecx
  000f4	68 bc 02 00 00	 push	 700			; 000002bcH
  000f9	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000fc	8b 02		 mov	 eax, DWORD PTR [edx]
  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00101	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00104	ff d2		 call	 edx
  00106	50		 push	 eax
  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00110	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00113	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00119	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0011b	50		 push	 eax
  0011c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011f	ff d2		 call	 edx
  00121	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7734 : 
; 7735 : 	return true;

  00124	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7736 : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	33 cd		 xor	 ecx, ebp
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubTakeTaskRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_TakeBaseEnsure$ = -96					; size = 80
_pIServerUserItem$ = -16				; size = 4
_pBaseEnsureTake$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureTakeRequest, COMDAT
; _this$ = ecx

; 7924 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7925 : 	//参数校验
; 7926 : 	ASSERT(wDataSize==sizeof(CMD_GR_BaseEnsureTake));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 46	 cmp	 eax, 70			; 00000046H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 7927 : 	if(wDataSize!=sizeof(CMD_GR_BaseEnsureTake)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 46	 cmp	 eax, 70			; 00000046H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 cc 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7928 : 
; 7929 : 	//提取数据
; 7930 : 	CMD_GR_BaseEnsureTake * pBaseEnsureTake = (CMD_GR_BaseEnsureTake *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pBaseEnsureTake$[ebp], eax

; 7931 : 	pBaseEnsureTake->szPassword[CountArray(pBaseEnsureTake->szPassword)-1]=0;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	c1 e0 05	 shl	 eax, 5
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _pBaseEnsureTake$[ebp]
  0005c	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7932 : 	pBaseEnsureTake->szMachineID[CountArray(pBaseEnsureTake->szMachineID)-1]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	c1 e0 05	 shl	 eax, 5
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pBaseEnsureTake$[ebp]
  0006c	c6 44 01 25 00	 mov	 BYTE PTR [ecx+eax+37], 0

; 7933 : 
; 7934 : 	//查找用户
; 7935 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pBaseEnsureTake->dwUserID);

  00071	8b 45 f4	 mov	 eax, DWORD PTR _pBaseEnsureTake$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00089	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008c	ff d2		 call	 edx
  0008e	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7936 : 	if(pIServerUserItem==NULL) return false;

  00091	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00095	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00097	32 c0		 xor	 al, al
  00099	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7937 : 
; 7938 : 	//构造结构
; 7939 : 	DBR_GR_TakeBaseEnsure TakeBaseEnsure;
; 7940 : 	TakeBaseEnsure.dwUserID = pBaseEnsureTake->dwUserID;

  0009b	8b 45 f4	 mov	 eax, DWORD PTR _pBaseEnsureTake$[ebp]
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	89 4d a0	 mov	 DWORD PTR _TakeBaseEnsure$[ebp], ecx

; 7941 : 	TakeBaseEnsure.dwClientAddr=pIServerUserItem->GetClientAddr();

  000a3	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000ae	ff d0		 call	 eax
  000b0	89 45 c8	 mov	 DWORD PTR _TakeBaseEnsure$[ebp+40], eax

; 7942 : 	lstrcpyn(TakeBaseEnsure.szPassword,pBaseEnsureTake->szPassword,CountArray(TakeBaseEnsure.szPassword));

  000b3	6a 21		 push	 33			; 00000021H
  000b5	8b 45 f4	 mov	 eax, DWORD PTR _pBaseEnsureTake$[ebp]
  000b8	83 c0 04	 add	 eax, 4
  000bb	50		 push	 eax
  000bc	8d 4d a4	 lea	 ecx, DWORD PTR _TakeBaseEnsure$[ebp+4]
  000bf	51		 push	 ecx
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7943 : 	lstrcpyn(TakeBaseEnsure.szMachineID,pBaseEnsureTake->szMachineID,CountArray(TakeBaseEnsure.szMachineID));

  000c6	6a 21		 push	 33			; 00000021H
  000c8	8b 45 f4	 mov	 eax, DWORD PTR _pBaseEnsureTake$[ebp]
  000cb	83 c0 25	 add	 eax, 37			; 00000025H
  000ce	50		 push	 eax
  000cf	8d 4d cc	 lea	 ecx, DWORD PTR _TakeBaseEnsure$[ebp+44]
  000d2	51		 push	 ecx
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7944 : 
; 7945 : 	//投递请求
; 7946 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_BASEENSURE_TAKE,dwSocketID,&TakeBaseEnsure,sizeof(TakeBaseEnsure));

  000d9	6a 00		 push	 0
  000db	6a 50		 push	 80			; 00000050H
  000dd	8d 45 a0	 lea	 eax, DWORD PTR _TakeBaseEnsure$[ebp]
  000e0	50		 push	 eax
  000e1	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000e4	51		 push	 ecx
  000e5	68 4c 04 00 00	 push	 1100			; 0000044cH
  000ea	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000ed	8b 02		 mov	 eax, DWORD PTR [edx]
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f2	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000f5	ff d2		 call	 edx
  000f7	50		 push	 eax
  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00101	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00104	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0010a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0010c	50		 push	 eax
  0010d	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00110	ff d2		 call	 edx
  00112	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7947 : 
; 7948 : 	return true;

  00115	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7949 : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011d	33 cd		 xor	 ecx, ebp
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureTakeRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubBaseEnsureQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_BaseEnsureParameter$ = -28				; size = 17
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubBaseEnsureQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureQueryRequest, COMDAT
; _this$ = ecx

; 7909 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7910 : 	//构造结构
; 7911 : 	CMD_GR_BaseEnsureParamter BaseEnsureParameter;
; 7912 : 	BaseEnsureParameter.cbTakeTimes=m_BaseEnsureParameter.cbTakeTimes;

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8a 88 0b 03 00
	00		 mov	 cl, BYTE PTR [eax+779]
  0001f	88 4d f4	 mov	 BYTE PTR _BaseEnsureParameter$[ebp+16], cl

; 7913 : 	BaseEnsureParameter.lScoreAmount=m_BaseEnsureParameter.lScoreAmount;

  00022	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 88 03 03 00
	00		 mov	 ecx, DWORD PTR [eax+771]
  0002b	89 4d ec	 mov	 DWORD PTR _BaseEnsureParameter$[ebp+8], ecx
  0002e	8b 90 07 03 00
	00		 mov	 edx, DWORD PTR [eax+775]
  00034	89 55 f0	 mov	 DWORD PTR _BaseEnsureParameter$[ebp+12], edx

; 7914 : 	BaseEnsureParameter.lScoreCondition=m_BaseEnsureParameter.lScoreCondition;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 88 fb 02 00
	00		 mov	 ecx, DWORD PTR [eax+763]
  00040	89 4d e4	 mov	 DWORD PTR _BaseEnsureParameter$[ebp], ecx
  00043	8b 90 ff 02 00
	00		 mov	 edx, DWORD PTR [eax+767]
  00049	89 55 e8	 mov	 DWORD PTR _BaseEnsureParameter$[ebp+4], edx

; 7915 : 
; 7916 : 	//投递请求
; 7917 : 	m_pITCPNetworkEngine->SendData(dwSocketID,MDM_GR_BASEENSURE,SUB_GR_BASEENSURE_PARAMETER,&BaseEnsureParameter,sizeof(BaseEnsureParameter));

  0004c	6a 11		 push	 17			; 00000011H
  0004e	8d 45 e4	 lea	 eax, DWORD PTR _BaseEnsureParameter$[ebp]
  00051	50		 push	 eax
  00052	68 06 01 00 00	 push	 262			; 00000106H
  00057	6a 0b		 push	 11			; 0000000bH
  00059	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00060	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00071	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00074	ff d0		 call	 eax

; 7918 : 
; 7919 : 	return true;

  00076	b0 01		 mov	 al, 1

; 7920 : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007e	33 cd		 xor	 ecx, ebp
  00080	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubBaseEnsureQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureQueryRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_CheckInDone$ = -100					; size = 80
_pCheckInDone$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubCheckInDoneRequest, COMDAT
; _this$ = ecx

; 7681 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7682 : 	//参数校验
; 7683 : 	ASSERT(wDataSize==sizeof(CMD_GR_CheckInDone));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 46	 cmp	 eax, 70			; 00000046H
  00020	74 19		 je	 SHORT $LN4@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN4@OnTCPNetwo
  0003a	cc		 int	 3
$LN4@OnTCPNetwo:

; 7684 : 	if(wDataSize!=sizeof(CMD_GR_CheckInDone)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 46	 cmp	 eax, 70			; 00000046H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 c3 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7685 : 
; 7686 : 	//获取用户
; 7687 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0004b	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0004e	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00053	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7688 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00057	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00067	ff d0		 call	 eax
  00069	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7689 : 
; 7690 : 	//提取数据
; 7691 : 	CMD_GR_CheckInDone *pCheckInDone = (CMD_GR_CheckInDone *)pData;

  0006c	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0006f	89 45 ec	 mov	 DWORD PTR _pCheckInDone$[ebp], eax

; 7692 : 	pCheckInDone->szPassword[CountArray(pCheckInDone->szPassword)-1]=0;

  00072	b8 01 00 00 00	 mov	 eax, 1
  00077	c1 e0 05	 shl	 eax, 5
  0007a	8b 4d ec	 mov	 ecx, DWORD PTR _pCheckInDone$[ebp]
  0007d	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7693 : 	pCheckInDone->szMachineID[CountArray(pCheckInDone->szMachineID)-1]=0;

  00082	b8 01 00 00 00	 mov	 eax, 1
  00087	c1 e0 05	 shl	 eax, 5
  0008a	8b 4d ec	 mov	 ecx, DWORD PTR _pCheckInDone$[ebp]
  0008d	c6 44 01 25 00	 mov	 BYTE PTR [ecx+eax+37], 0

; 7694 : 
; 7695 : 	//构造结构
; 7696 : 	DBR_GR_CheckInDone CheckInDone;
; 7697 : 	CheckInDone.dwUserID = pCheckInDone->dwUserID;

  00092	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInDone$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	89 4d 9c	 mov	 DWORD PTR _CheckInDone$[ebp], ecx

; 7698 : 	CheckInDone.dwClientAddr=pIServerUserItem->GetClientAddr();

  0009a	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0009d	8b 10		 mov	 edx, DWORD PTR [eax]
  0009f	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000a2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000a5	ff d0		 call	 eax
  000a7	89 45 c4	 mov	 DWORD PTR _CheckInDone$[ebp+40], eax

; 7699 : 	lstrcpyn(CheckInDone.szPassword,pCheckInDone->szPassword,CountArray(CheckInDone.szPassword));

  000aa	6a 21		 push	 33			; 00000021H
  000ac	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInDone$[ebp]
  000af	83 c0 04	 add	 eax, 4
  000b2	50		 push	 eax
  000b3	8d 4d a0	 lea	 ecx, DWORD PTR _CheckInDone$[ebp+4]
  000b6	51		 push	 ecx
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7700 : 	lstrcpyn(CheckInDone.szMachineID,pCheckInDone->szMachineID,CountArray(CheckInDone.szMachineID));

  000bd	6a 21		 push	 33			; 00000021H
  000bf	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInDone$[ebp]
  000c2	83 c0 25	 add	 eax, 37			; 00000025H
  000c5	50		 push	 eax
  000c6	8d 4d c8	 lea	 ecx, DWORD PTR _CheckInDone$[ebp+44]
  000c9	51		 push	 ecx
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7701 : 
; 7702 : 	//投递请求
; 7703 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_CHECKIN_DONE,dwSocketID,&CheckInDone,sizeof(CheckInDone));

  000d0	6a 00		 push	 0
  000d2	6a 50		 push	 80			; 00000050H
  000d4	8d 45 9c	 lea	 eax, DWORD PTR _CheckInDone$[ebp]
  000d7	50		 push	 eax
  000d8	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000db	51		 push	 ecx
  000dc	68 e8 03 00 00	 push	 1000			; 000003e8H
  000e1	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000e4	8b 02		 mov	 eax, DWORD PTR [edx]
  000e6	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e9	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000ec	ff d2		 call	 edx
  000ee	50		 push	 eax
  000ef	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000f8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fb	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00101	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00103	50		 push	 eax
  00104	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00107	ff d2		 call	 edx
  00109	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7704 : 
; 7705 : 	return true;

  0010c	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7706 : }

  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00114	33 cd		 xor	 ecx, ebp
  00116	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubCheckInDoneRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_CheckInQueryInfo$ = -60				; size = 40
_pCheckInQueryInfo$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubCheckInQueryRequest, COMDAT
; _this$ = ecx

; 7655 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7656 : 	//参数校验
; 7657 : 	ASSERT(wDataSize==sizeof(CMD_GR_CheckInQueryInfo));

  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001a	83 f8 25	 cmp	 eax, 37			; 00000025H
  0001d	74 19		 je	 SHORT $LN4@OnTCPNetwo
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00025	83 c1 02	 add	 ecx, 2
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00033	85 c0		 test	 eax, eax
  00035	74 01		 je	 SHORT $LN4@OnTCPNetwo
  00037	cc		 int	 3
$LN4@OnTCPNetwo:

; 7658 : 	if(wDataSize!=sizeof(CMD_GR_CheckInQueryInfo)) return false;

  00038	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003c	83 f8 25	 cmp	 eax, 37			; 00000025H
  0003f	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 90 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7659 : 
; 7660 : 	//获取用户
; 7661 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00048	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0004b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00050	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7662 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00054	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00058	50		 push	 eax
  00059	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00064	ff d0		 call	 eax
  00066	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7663 : 
; 7664 : 	//提取数据
; 7665 : 	CMD_GR_CheckInQueryInfo *pCheckInQueryInfo = (CMD_GR_CheckInQueryInfo *)pData;

  00069	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0006c	89 45 ec	 mov	 DWORD PTR _pCheckInQueryInfo$[ebp], eax

; 7666 : 	pCheckInQueryInfo->szPassword[CountArray(pCheckInQueryInfo->szPassword)-1]=0;

  0006f	b8 01 00 00 00	 mov	 eax, 1
  00074	c1 e0 05	 shl	 eax, 5
  00077	8b 4d ec	 mov	 ecx, DWORD PTR _pCheckInQueryInfo$[ebp]
  0007a	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7667 : 
; 7668 : 
; 7669 : 	//构造结构
; 7670 : 	DBR_GR_CheckInQueryInfo CheckInQueryInfo;
; 7671 : 	CheckInQueryInfo.dwUserID = pCheckInQueryInfo->dwUserID;

  0007f	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInQueryInfo$[ebp]
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	89 4d c4	 mov	 DWORD PTR _CheckInQueryInfo$[ebp], ecx

; 7672 : 	lstrcpyn(CheckInQueryInfo.szPassword,pCheckInQueryInfo->szPassword,CountArray(CheckInQueryInfo.szPassword));

  00087	6a 21		 push	 33			; 00000021H
  00089	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInQueryInfo$[ebp]
  0008c	83 c0 04	 add	 eax, 4
  0008f	50		 push	 eax
  00090	8d 4d c8	 lea	 ecx, DWORD PTR _CheckInQueryInfo$[ebp+4]
  00093	51		 push	 ecx
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7673 : 
; 7674 : 	//投递请求
; 7675 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_CHECKIN_QUERY_INFO,dwSocketID,&CheckInQueryInfo,sizeof(CheckInQueryInfo));

  0009a	6a 00		 push	 0
  0009c	6a 28		 push	 40			; 00000028H
  0009e	8d 45 c4	 lea	 eax, DWORD PTR _CheckInQueryInfo$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000a5	51		 push	 ecx
  000a6	68 e9 03 00 00	 push	 1001			; 000003e9H
  000ab	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000ae	8b 02		 mov	 eax, DWORD PTR [edx]
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000b3	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000b6	ff d2		 call	 edx
  000b8	50		 push	 eax
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000c2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c5	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000cb	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000cd	50		 push	 eax
  000ce	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000d1	ff d2		 call	 edx
  000d3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7676 : 
; 7677 : 	return true;

  000d6	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7678 : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000de	33 cd		 xor	 ecx, ebp
  000e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubCheckInQueryRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_QueryTransferUserInfo$ = -68				; size = 40
_i$1 = -28						; size = 4
_nLen$2 = -24						; size = 4
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pQueryUserInfoRequest$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubQueryUserInfoRequest, COMDAT
; _this$ = ecx

; 7595 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7596 : 	//效验参数
; 7597 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_QueryUserInfoRequest));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 22	 cmp	 eax, 34			; 00000022H
  00020	74 19		 je	 SHORT $LN13@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN13@OnTCPNetwo
  0003a	cc		 int	 3
$LN13@OnTCPNetwo:

; 7598 : 	if (wDataSize!=sizeof(CMD_GR_C_QueryUserInfoRequest)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 22	 cmp	 eax, 34			; 00000022H
  00042	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 c2 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 7599 : 
; 7600 : 	//房间判断
; 7601 : 	ASSERT((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)!=0);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00051	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00055	83 e2 01	 and	 edx, 1
  00058	75 18		 jne	 SHORT $LN14@OnTCPNetwo
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c0 06	 add	 eax, 6
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN14@OnTCPNetwo
  00071	cc		 int	 3
$LN14@OnTCPNetwo:

; 7602 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)==0) return false;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00078	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0007c	83 e2 01	 and	 edx, 1
  0007f	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 85 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 7603 : 
; 7604 : 	//变量定义
; 7605 : 	CMD_GR_C_QueryUserInfoRequest * pQueryUserInfoRequest=(CMD_GR_C_QueryUserInfoRequest *)pData;

  00088	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0008b	89 45 f4	 mov	 DWORD PTR _pQueryUserInfoRequest$[ebp], eax

; 7606 : 	pQueryUserInfoRequest->szAccounts[CountArray(pQueryUserInfoRequest->szAccounts)-1]=0;

  0008e	b8 01 00 00 00	 mov	 eax, 1
  00093	6b c8 1f	 imul	 ecx, eax, 31
  00096	8b 55 f4	 mov	 edx, DWORD PTR _pQueryUserInfoRequest$[ebp]
  00099	c6 44 0a 02 00	 mov	 BYTE PTR [edx+ecx+2], 0

; 7607 : 
; 7608 : 	//获取用户
; 7609 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0009e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000a1	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000a6	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7610 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  000aa	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000ae	50		 push	 eax
  000af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ba	ff d0		 call	 eax
  000bc	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7611 : 
; 7612 : 	//用户效验
; 7613 : 	ASSERT(pIServerUserItem!=NULL);

  000bf	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000c3	75 18		 jne	 SHORT $LN15@OnTCPNetwo
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000ca	83 c0 12	 add	 eax, 18			; 00000012H
  000cd	50		 push	 eax
  000ce	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000d3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d8	85 c0		 test	 eax, eax
  000da	74 01		 je	 SHORT $LN15@OnTCPNetwo
  000dc	cc		 int	 3
$LN15@OnTCPNetwo:

; 7614 : 	if (pIServerUserItem==NULL) return false;

  000dd	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000e1	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  000e3	32 c0		 xor	 al, al
  000e5	e9 23 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 7615 : 
; 7616 : 	//ID判断
; 7617 : 	if(pQueryUserInfoRequest->cbByNickName==FALSE)

  000ea	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  000ed	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  000f1	85 c9		 test	 ecx, ecx
  000f3	0f 85 92 00 00
	00		 jne	 $LN8@OnTCPNetwo

; 7618 : 	{
; 7619 : 		//长度判断
; 7620 : 		int nLen=lstrlen(pQueryUserInfoRequest->szAccounts);

  000f9	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  000fc	83 c0 02	 add	 eax, 2
  000ff	50		 push	 eax
  00100	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00106	89 45 e8	 mov	 DWORD PTR _nLen$2[ebp], eax

; 7621 : 		if(nLen>=8)

  00109	83 7d e8 08	 cmp	 DWORD PTR _nLen$2[ebp], 8
  0010d	7c 21		 jl	 SHORT $LN9@OnTCPNetwo

; 7622 : 		{
; 7623 : 			SendInsureFailure(pIServerUserItem,TEXT("请输入合法的玩家ID！"), 0, pQueryUserInfoRequest->cbActivityGame);

  0010f	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  00112	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00115	51		 push	 ecx
  00116	6a 00		 push	 0
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KCLAAAGP@?G?k?J?d?H?k?$LK?O?$LH?$KI?$LF?D?M?f?$LM?RID?$KD?$KB@
  0011d	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00120	52		 push	 edx
  00121	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7624 : 			return true;

  00129	b0 01		 mov	 al, 1
  0012b	e9 dd 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 7625 : 		}
; 7626 : 
; 7627 : 		//合法判断
; 7628 : 		for(int i=0; i<nLen; i++)

  00130	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00137	eb 09		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  00139	8b 45 e4	 mov	 eax, DWORD PTR _i$1[ebp]
  0013c	83 c0 01	 add	 eax, 1
  0013f	89 45 e4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@OnTCPNetwo:
  00142	8b 45 e4	 mov	 eax, DWORD PTR _i$1[ebp]
  00145	3b 45 e8	 cmp	 eax, DWORD PTR _nLen$2[ebp]
  00148	7d 41		 jge	 SHORT $LN8@OnTCPNetwo

; 7629 : 		{
; 7630 : 			if(pQueryUserInfoRequest->szAccounts[i] < TEXT('0') || pQueryUserInfoRequest->szAccounts[i] > TEXT('9'))

  0014a	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  0014d	03 45 e4	 add	 eax, DWORD PTR _i$1[ebp]
  00150	0f be 48 02	 movsx	 ecx, BYTE PTR [eax+2]
  00154	83 f9 30	 cmp	 ecx, 48			; 00000030H
  00157	7c 0f		 jl	 SHORT $LN11@OnTCPNetwo
  00159	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  0015c	03 45 e4	 add	 eax, DWORD PTR _i$1[ebp]
  0015f	0f be 48 02	 movsx	 ecx, BYTE PTR [eax+2]
  00163	83 f9 39	 cmp	 ecx, 57			; 00000039H
  00166	7e 21		 jle	 SHORT $LN10@OnTCPNetwo
$LN11@OnTCPNetwo:

; 7631 : 			{
; 7632 : 				SendInsureFailure(pIServerUserItem,TEXT("请输入合法的玩家ID！"), 0, pQueryUserInfoRequest->cbActivityGame);

  00168	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  0016b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0016e	51		 push	 ecx
  0016f	6a 00		 push	 0
  00171	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KCLAAAGP@?G?k?J?d?H?k?$LK?O?$LH?$KI?$LF?D?M?f?$LM?RID?$KD?$KB@
  00176	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00179	52		 push	 edx
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7633 : 				return true;

  00182	b0 01		 mov	 al, 1
  00184	e9 84 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 7634 : 			}
; 7635 : 		}

  00189	eb ae		 jmp	 SHORT $LN2@OnTCPNetwo
$LN8@OnTCPNetwo:

; 7636 : 	}
; 7637 : 
; 7638 : 	//变量定义
; 7639 : 	DBR_GR_QueryTransferUserInfo QueryTransferUserInfo;
; 7640 : 	ZeroMemory(&QueryTransferUserInfo,sizeof(QueryTransferUserInfo));

  0018b	6a 28		 push	 40			; 00000028H
  0018d	6a 00		 push	 0
  0018f	8d 45 bc	 lea	 eax, DWORD PTR _QueryTransferUserInfo$[ebp]
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 _memset
  00198	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7641 : 
; 7642 : 	//构造数据	
; 7643 : 	QueryTransferUserInfo.dwUserID=pIServerUserItem->GetUserID();

  0019b	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0019e	8b 10		 mov	 edx, DWORD PTR [eax]
  001a0	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001a3	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  001a6	ff d0		 call	 eax
  001a8	89 45 e0	 mov	 DWORD PTR _QueryTransferUserInfo$[ebp+36], eax

; 7644 : 	QueryTransferUserInfo.cbByNickName=pQueryUserInfoRequest->cbByNickName;

  001ab	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  001ae	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  001b1	88 4d bd	 mov	 BYTE PTR _QueryTransferUserInfo$[ebp+1], cl

; 7645 : 	QueryTransferUserInfo.cbActivityGame=pQueryUserInfoRequest->cbActivityGame;	

  001b4	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  001b7	8a 08		 mov	 cl, BYTE PTR [eax]
  001b9	88 4d bc	 mov	 BYTE PTR _QueryTransferUserInfo$[ebp], cl

; 7646 : 	lstrcpyn(QueryTransferUserInfo.szAccounts,pQueryUserInfoRequest->szAccounts,CountArray(QueryTransferUserInfo.szAccounts));	

  001bc	6a 20		 push	 32			; 00000020H
  001be	8b 45 f4	 mov	 eax, DWORD PTR _pQueryUserInfoRequest$[ebp]
  001c1	83 c0 02	 add	 eax, 2
  001c4	50		 push	 eax
  001c5	8d 4d be	 lea	 ecx, DWORD PTR _QueryTransferUserInfo$[ebp+2]
  001c8	51		 push	 ecx
  001c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7647 : 
; 7648 : 	//投递请求
; 7649 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_QUERY_TRANSFER_USER_INFO,dwSocketID,&QueryTransferUserInfo,sizeof(QueryTransferUserInfo));

  001cf	6a 00		 push	 0
  001d1	6a 28		 push	 40			; 00000028H
  001d3	8d 45 bc	 lea	 eax, DWORD PTR _QueryTransferUserInfo$[ebp]
  001d6	50		 push	 eax
  001d7	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  001da	51		 push	 ecx
  001db	68 95 01 00 00	 push	 405			; 00000195H
  001e0	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001e3	8b 02		 mov	 eax, DWORD PTR [edx]
  001e5	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e8	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  001eb	ff d2		 call	 edx
  001ed	50		 push	 eax
  001ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f1	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  001f7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001fa	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00200	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00202	50		 push	 eax
  00203	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00206	ff d2		 call	 edx
  00208	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7650 : 
; 7651 : 	return true;

  0020b	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7652 : }

  0020d	5f		 pop	 edi
  0020e	5e		 pop	 esi
  0020f	5b		 pop	 ebx
  00210	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00213	33 cd		 xor	 ecx, ebp
  00215	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021a	8b e5		 mov	 esp, ebp
  0021c	5d		 pop	 ebp
  0021d	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubQueryUserInfoRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv227 = -216						; size = 4
tv218 = -216						; size = 4
_UserTransferScore$ = -148				; size = 128
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pTransferScoreRequest$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubTransferScoreRequest, COMDAT
; _this$ = ecx

; 7548 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7549 : 	//效验参数
; 7550 : 	ASSERT(wDataSize==sizeof(CMD_GP_C_TransferScoreRequest));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 6e	 cmp	 eax, 110		; 0000006eH
  00020	74 19		 je	 SHORT $LN7@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN7@OnTCPNetwo
  0003a	cc		 int	 3
$LN7@OnTCPNetwo:

; 7551 : 	if (wDataSize!=sizeof(CMD_GP_C_TransferScoreRequest)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 6e	 cmp	 eax, 110		; 0000006eH
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 ea 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7552 : 
; 7553 : 	//房间判断
; 7554 : 	ASSERT(m_pGameServiceOption->wServerType&GAME_GENRE_GOLD);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00051	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00055	83 e2 01	 and	 edx, 1
  00058	75 18		 jne	 SHORT $LN8@OnTCPNetwo
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c0 06	 add	 eax, 6
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN8@OnTCPNetwo
  00071	cc		 int	 3
$LN8@OnTCPNetwo:

; 7555 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)==0) return false;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00078	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0007c	83 e2 01	 and	 edx, 1
  0007f	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 ad 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7556 : 
; 7557 : 	//变量定义
; 7558 : 	CMD_GP_C_TransferScoreRequest * pTransferScoreRequest=(CMD_GP_C_TransferScoreRequest *)pData;

  00088	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0008b	89 45 f4	 mov	 DWORD PTR _pTransferScoreRequest$[ebp], eax

; 7559 : 	pTransferScoreRequest->szInsurePass[CountArray(pTransferScoreRequest->szInsurePass)-1]=0;

  0008e	b8 01 00 00 00	 mov	 eax, 1
  00093	c1 e0 05	 shl	 eax, 5
  00096	8b 4d f4	 mov	 ecx, DWORD PTR _pTransferScoreRequest$[ebp]
  00099	c6 44 01 2d 00	 mov	 BYTE PTR [ecx+eax+45], 0

; 7560 : 
; 7561 : 	//效验参数
; 7562 : 	ASSERT(pTransferScoreRequest->lTransferScore>0L);

  0009e	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  000a1	89 85 28 ff ff
	ff		 mov	 DWORD PTR tv218[ebp], eax
  000a7	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv218[ebp]
  000ad	83 79 05 00	 cmp	 DWORD PTR [ecx+5], 0
  000b1	7f 26		 jg	 SHORT $LN9@OnTCPNetwo
  000b3	7c 0c		 jl	 SHORT $LN11@OnTCPNetwo
  000b5	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR tv218[ebp]
  000bb	83 7a 01 00	 cmp	 DWORD PTR [edx+1], 0
  000bf	77 18		 ja	 SHORT $LN9@OnTCPNetwo
$LN11@OnTCPNetwo:
  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000c6	83 c0 0e	 add	 eax, 14			; 0000000eH
  000c9	50		 push	 eax
  000ca	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000cf	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d4	85 c0		 test	 eax, eax
  000d6	74 01		 je	 SHORT $LN9@OnTCPNetwo
  000d8	cc		 int	 3
$LN9@OnTCPNetwo:

; 7563 : 	if (pTransferScoreRequest->lTransferScore<=0L) return false;

  000d9	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  000dc	89 85 28 ff ff
	ff		 mov	 DWORD PTR tv227[ebp], eax
  000e2	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv227[ebp]
  000e8	83 79 05 00	 cmp	 DWORD PTR [ecx+5], 0
  000ec	7f 15		 jg	 SHORT $LN4@OnTCPNetwo
  000ee	7c 0c		 jl	 SHORT $LN12@OnTCPNetwo
  000f0	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR tv227[ebp]
  000f6	83 7a 01 00	 cmp	 DWORD PTR [edx+1], 0
  000fa	77 07		 ja	 SHORT $LN4@OnTCPNetwo
$LN12@OnTCPNetwo:
  000fc	32 c0		 xor	 al, al
  000fe	e9 32 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 7564 : 
; 7565 : 	//获取用户
; 7566 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00103	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00106	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0010b	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7567 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0010f	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00113	50		 push	 eax
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 11		 mov	 edx, DWORD PTR [ecx]
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0011f	ff d0		 call	 eax
  00121	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7568 : 
; 7569 : 	//用户效验
; 7570 : 	ASSERT(pIServerUserItem!=NULL);

  00124	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00128	75 18		 jne	 SHORT $LN10@OnTCPNetwo
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0012f	83 c0 16	 add	 eax, 22			; 00000016H
  00132	50		 push	 eax
  00133	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00138	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0013d	85 c0		 test	 eax, eax
  0013f	74 01		 je	 SHORT $LN10@OnTCPNetwo
  00141	cc		 int	 3
$LN10@OnTCPNetwo:

; 7571 : 	if (pIServerUserItem==NULL) return false;

  00142	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00146	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  00148	32 c0		 xor	 al, al
  0014a	e9 e6 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 7572 : 
; 7573 : 	//变量定义
; 7574 : 	DBR_GR_UserTransferScore UserTransferScore;
; 7575 : 	ZeroMemory(&UserTransferScore,sizeof(UserTransferScore));

  0014f	68 80 00 00 00	 push	 128			; 00000080H
  00154	6a 00		 push	 0
  00156	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _UserTransferScore$[ebp]
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memset
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7576 : 
; 7577 : 	//构造数据
; 7578 : 	UserTransferScore.cbActivityGame=pTransferScoreRequest->cbActivityGame;

  00165	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  00168	8a 08		 mov	 cl, BYTE PTR [eax]
  0016a	88 8d 6c ff ff
	ff		 mov	 BYTE PTR _UserTransferScore$[ebp], cl

; 7579 : 	UserTransferScore.dwUserID=pIServerUserItem->GetUserID();

  00170	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00173	8b 10		 mov	 edx, DWORD PTR [eax]
  00175	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00178	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0017b	ff d0		 call	 eax
  0017d	89 85 70 ff ff
	ff		 mov	 DWORD PTR _UserTransferScore$[ebp+4], eax

; 7580 : 	UserTransferScore.dwClientAddr=pIServerUserItem->GetClientAddr();

  00183	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00186	8b 10		 mov	 edx, DWORD PTR [eax]
  00188	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0018b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0018e	ff d0		 call	 eax
  00190	89 85 74 ff ff
	ff		 mov	 DWORD PTR _UserTransferScore$[ebp+8], eax

; 7581 : 	UserTransferScore.lTransferScore=pTransferScoreRequest->lTransferScore;

  00196	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  00199	8b 48 01	 mov	 ecx, DWORD PTR [eax+1]
  0019c	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _UserTransferScore$[ebp+16], ecx
  001a2	8b 50 05	 mov	 edx, DWORD PTR [eax+5]
  001a5	89 55 80	 mov	 DWORD PTR _UserTransferScore$[ebp+20], edx

; 7582 : 	UserTransferScore.dwGameID = pTransferScoreRequest->dwGameID;

  001a8	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  001ab	8b 48 09	 mov	 ecx, DWORD PTR [eax+9]
  001ae	89 4d 84	 mov	 DWORD PTR _UserTransferScore$[ebp+24], ecx

; 7583 : 	lstrcpyn(UserTransferScore.szMachineID,pIServerUserItem->GetMachineID(),CountArray(UserTransferScore.szMachineID));

  001b1	6a 21		 push	 33			; 00000021H
  001b3	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001b6	8b 10		 mov	 edx, DWORD PTR [eax]
  001b8	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001bb	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001be	ff d0		 call	 eax
  001c0	50		 push	 eax
  001c1	8d 4d a9	 lea	 ecx, DWORD PTR _UserTransferScore$[ebp+61]
  001c4	51		 push	 ecx
  001c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7584 : 	lstrcpyn(UserTransferScore.szPassword,pTransferScoreRequest->szInsurePass,CountArray(UserTransferScore.szPassword));

  001cb	6a 21		 push	 33			; 00000021H
  001cd	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  001d0	83 c0 2d	 add	 eax, 45			; 0000002dH
  001d3	50		 push	 eax
  001d4	8d 4d 88	 lea	 ecx, DWORD PTR _UserTransferScore$[ebp+28]
  001d7	51		 push	 ecx
  001d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7585 : 	lstrcpyn(UserTransferScore.szTransRemark,pTransferScoreRequest->szTransRemark,CountArray(UserTransferScore.szTransRemark));

  001de	6a 20		 push	 32			; 00000020H
  001e0	8b 45 f4	 mov	 eax, DWORD PTR _pTransferScoreRequest$[ebp]
  001e3	83 c0 4e	 add	 eax, 78			; 0000004eH
  001e6	50		 push	 eax
  001e7	8d 4d ca	 lea	 ecx, DWORD PTR _UserTransferScore$[ebp+94]
  001ea	51		 push	 ecx
  001eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7586 : 
; 7587 : 	//投递请求
; 7588 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_USER_TRANSFER_SCORE,dwSocketID,&UserTransferScore,sizeof(UserTransferScore));

  001f1	6a 00		 push	 0
  001f3	68 80 00 00 00	 push	 128			; 00000080H
  001f8	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _UserTransferScore$[ebp]
  001fe	50		 push	 eax
  001ff	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00202	51		 push	 ecx
  00203	68 93 01 00 00	 push	 403			; 00000193H
  00208	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0020b	8b 02		 mov	 eax, DWORD PTR [edx]
  0020d	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00210	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00213	ff d2		 call	 edx
  00215	50		 push	 eax
  00216	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00219	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0021f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00222	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00228	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0022a	50		 push	 eax
  0022b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0022e	ff d2		 call	 edx
  00230	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7589 : 
; 7590 : 	return true;

  00233	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7591 : }

  00235	5f		 pop	 edi
  00236	5e		 pop	 esi
  00237	5b		 pop	 ebx
  00238	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0023b	33 cd		 xor	 ecx, ebp
  0023d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00242	8b e5		 mov	 esp, ebp
  00244	5d		 pop	 ebp
  00245	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubTransferScoreRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv254 = -176						; size = 4
tv245 = -176						; size = 4
_UserTakeScore$ = -108					; size = 88
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pTakeScoreRequest$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubTakeScoreRequest, COMDAT
; _this$ = ecx

; 7487 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7488 : 	//效验参数
; 7489 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_TakeScoreRequest));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 2a	 cmp	 eax, 42			; 0000002aH
  00020	74 19		 je	 SHORT $LN9@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN9@OnTCPNetwo
  0003a	cc		 int	 3
$LN9@OnTCPNetwo:

; 7490 : 	if (wDataSize!=sizeof(CMD_GR_C_TakeScoreRequest)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 2a	 cmp	 eax, 42			; 0000002aH
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 3f 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7491 : 
; 7492 : 	//房间判断
; 7493 : 	ASSERT(m_pGameServiceOption->wServerType&GAME_GENRE_GOLD);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00051	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00055	83 e2 01	 and	 edx, 1
  00058	75 18		 jne	 SHORT $LN10@OnTCPNetwo
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c0 06	 add	 eax, 6
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN10@OnTCPNetwo
  00071	cc		 int	 3
$LN10@OnTCPNetwo:

; 7494 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)==0) return false;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00078	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0007c	83 e2 01	 and	 edx, 1
  0007f	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 02 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7495 : 
; 7496 : 	//变量定义
; 7497 : 	CMD_GR_C_TakeScoreRequest * pTakeScoreRequest=(CMD_GR_C_TakeScoreRequest *)pData;

  00088	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0008b	89 45 f4	 mov	 DWORD PTR _pTakeScoreRequest$[ebp], eax

; 7498 : 	pTakeScoreRequest->szInsurePass[CountArray(pTakeScoreRequest->szInsurePass)-1]=0;

  0008e	b8 01 00 00 00	 mov	 eax, 1
  00093	c1 e0 05	 shl	 eax, 5
  00096	8b 4d f4	 mov	 ecx, DWORD PTR _pTakeScoreRequest$[ebp]
  00099	c6 44 01 09 00	 mov	 BYTE PTR [ecx+eax+9], 0

; 7499 : 
; 7500 : 	//效验参数
; 7501 : 	ASSERT(pTakeScoreRequest->lTakeScore>0L);

  0009e	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  000a1	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv245[ebp], eax
  000a7	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv245[ebp]
  000ad	83 79 05 00	 cmp	 DWORD PTR [ecx+5], 0
  000b1	7f 26		 jg	 SHORT $LN11@OnTCPNetwo
  000b3	7c 0c		 jl	 SHORT $LN13@OnTCPNetwo
  000b5	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv245[ebp]
  000bb	83 7a 01 00	 cmp	 DWORD PTR [edx+1], 0
  000bf	77 18		 ja	 SHORT $LN11@OnTCPNetwo
$LN13@OnTCPNetwo:
  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000c6	83 c0 0e	 add	 eax, 14			; 0000000eH
  000c9	50		 push	 eax
  000ca	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000cf	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d4	85 c0		 test	 eax, eax
  000d6	74 01		 je	 SHORT $LN11@OnTCPNetwo
  000d8	cc		 int	 3
$LN11@OnTCPNetwo:

; 7502 : 	if (pTakeScoreRequest->lTakeScore<=0L) return false;

  000d9	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  000dc	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv254[ebp], eax
  000e2	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv254[ebp]
  000e8	83 79 05 00	 cmp	 DWORD PTR [ecx+5], 0
  000ec	7f 15		 jg	 SHORT $LN4@OnTCPNetwo
  000ee	7c 0c		 jl	 SHORT $LN14@OnTCPNetwo
  000f0	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv254[ebp]
  000f6	83 7a 01 00	 cmp	 DWORD PTR [edx+1], 0
  000fa	77 07		 ja	 SHORT $LN4@OnTCPNetwo
$LN14@OnTCPNetwo:
  000fc	32 c0		 xor	 al, al
  000fe	e9 87 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 7503 : 
; 7504 : 	//获取用户
; 7505 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00103	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00106	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0010b	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7506 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0010f	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00113	50		 push	 eax
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 11		 mov	 edx, DWORD PTR [ecx]
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0011f	ff d0		 call	 eax
  00121	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7507 : 
; 7508 : 	//用户效验
; 7509 : 	ASSERT(pIServerUserItem!=NULL);

  00124	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00128	75 18		 jne	 SHORT $LN12@OnTCPNetwo
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0012f	83 c0 16	 add	 eax, 22			; 00000016H
  00132	50		 push	 eax
  00133	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00138	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0013d	85 c0		 test	 eax, eax
  0013f	74 01		 je	 SHORT $LN12@OnTCPNetwo
  00141	cc		 int	 3
$LN12@OnTCPNetwo:

; 7510 : 	if (pIServerUserItem==NULL) return false;

  00142	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00146	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  00148	32 c0		 xor	 al, al
  0014a	e9 3b 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 7511 : 
; 7512 : 	//规则判断
; 7513 : 	if(pTakeScoreRequest->cbActivityGame == FALSE && CServerRule::IsForfendTakeInRoom(m_pGameServiceOption->dwServerRule))

  0014f	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  00152	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00155	85 c9		 test	 ecx, ecx
  00157	75 3a		 jne	 SHORT $LN6@OnTCPNetwo
  00159	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0015f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00162	52		 push	 edx
  00163	e8 00 00 00 00	 call	 ?IsForfendTakeInRoom@CServerRule@@SA_NK@Z ; CServerRule::IsForfendTakeInRoom
  00168	83 c4 04	 add	 esp, 4
  0016b	0f b6 c0	 movzx	 eax, al
  0016e	85 c0		 test	 eax, eax
  00170	74 21		 je	 SHORT $LN6@OnTCPNetwo

; 7514 : 	{
; 7515 : 		//发送数据
; 7516 : 		SendInsureFailure(pIServerUserItem,TEXT("此房间禁止房间取款，取出操作失败！"),0L,pTakeScoreRequest->cbActivityGame);

  00172	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  00175	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00178	51		 push	 ecx
  00179	6a 00		 push	 0
  0017b	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@FDAGJDOL@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@
  00180	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00183	52		 push	 edx
  00184	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7517 : 		return true;

  0018c	b0 01		 mov	 al, 1
  0018e	e9 f7 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 7518 : 	}
; 7519 : 
; 7520 : 	//规则判断
; 7521 : 	if(pTakeScoreRequest->cbActivityGame == TRUE && CServerRule::IsForfendTakeInGame(m_pGameServiceOption->dwServerRule))

  00193	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  00196	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00199	83 f9 01	 cmp	 ecx, 1
  0019c	75 3a		 jne	 SHORT $LN7@OnTCPNetwo
  0019e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001a4	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  001a7	52		 push	 edx
  001a8	e8 00 00 00 00	 call	 ?IsForfendTakeInGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendTakeInGame
  001ad	83 c4 04	 add	 esp, 4
  001b0	0f b6 c0	 movzx	 eax, al
  001b3	85 c0		 test	 eax, eax
  001b5	74 21		 je	 SHORT $LN7@OnTCPNetwo

; 7522 : 	{
; 7523 : 		//发送数据
; 7524 : 		SendInsureFailure(pIServerUserItem,TEXT("此房间禁止游戏取款，取出操作失败！"),0L,pTakeScoreRequest->cbActivityGame);

  001b7	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  001ba	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001bd	51		 push	 ecx
  001be	6a 00		 push	 0
  001c0	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@KPIFHMPP@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?H?$KB?$LP?n?$KD?$KM?H?$KB?$LD?v?$LC?Y?W?w?J?$KH?$LA@
  001c5	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001c8	52		 push	 edx
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cc	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7525 : 		return true;

  001d1	b0 01		 mov	 al, 1
  001d3	e9 b2 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 7526 : 	}
; 7527 : 
; 7528 : 	//变量定义
; 7529 : 	DBR_GR_UserTakeScore UserTakeScore;
; 7530 : 	ZeroMemory(&UserTakeScore,sizeof(UserTakeScore));

  001d8	6a 58		 push	 88			; 00000058H
  001da	6a 00		 push	 0
  001dc	8d 45 94	 lea	 eax, DWORD PTR _UserTakeScore$[ebp]
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 _memset
  001e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7531 : 
; 7532 : 	//构造数据
; 7533 : 	UserTakeScore.cbActivityGame=pTakeScoreRequest->cbActivityGame;

  001e8	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  001eb	8a 08		 mov	 cl, BYTE PTR [eax]
  001ed	88 4d 94	 mov	 BYTE PTR _UserTakeScore$[ebp], cl

; 7534 : 	UserTakeScore.dwUserID=pIServerUserItem->GetUserID();

  001f0	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001f3	8b 10		 mov	 edx, DWORD PTR [eax]
  001f5	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001f8	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  001fb	ff d0		 call	 eax
  001fd	89 45 98	 mov	 DWORD PTR _UserTakeScore$[ebp+4], eax

; 7535 : 	UserTakeScore.lTakeScore=pTakeScoreRequest->lTakeScore;

  00200	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  00203	8b 48 01	 mov	 ecx, DWORD PTR [eax+1]
  00206	89 4d 9c	 mov	 DWORD PTR _UserTakeScore$[ebp+8], ecx
  00209	8b 50 05	 mov	 edx, DWORD PTR [eax+5]
  0020c	89 55 a0	 mov	 DWORD PTR _UserTakeScore$[ebp+12], edx

; 7536 : 	UserTakeScore.dwClientAddr=pIServerUserItem->GetClientAddr();

  0020f	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00212	8b 10		 mov	 edx, DWORD PTR [eax]
  00214	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00217	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0021a	ff d0		 call	 eax
  0021c	89 45 a4	 mov	 DWORD PTR _UserTakeScore$[ebp+16], eax

; 7537 : 	lstrcpyn(UserTakeScore.szPassword,pTakeScoreRequest->szInsurePass,CountArray(UserTakeScore.szPassword));

  0021f	6a 21		 push	 33			; 00000021H
  00221	8b 45 f4	 mov	 eax, DWORD PTR _pTakeScoreRequest$[ebp]
  00224	83 c0 09	 add	 eax, 9
  00227	50		 push	 eax
  00228	8d 4d a8	 lea	 ecx, DWORD PTR _UserTakeScore$[ebp+20]
  0022b	51		 push	 ecx
  0022c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7538 : 	lstrcpyn(UserTakeScore.szMachineID,pIServerUserItem->GetMachineID(),CountArray(UserTakeScore.szMachineID));

  00232	6a 21		 push	 33			; 00000021H
  00234	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00237	8b 10		 mov	 edx, DWORD PTR [eax]
  00239	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0023c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0023f	ff d0		 call	 eax
  00241	50		 push	 eax
  00242	8d 4d c9	 lea	 ecx, DWORD PTR _UserTakeScore$[ebp+53]
  00245	51		 push	 ecx
  00246	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7539 : 
; 7540 : 	//投递请求
; 7541 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_USER_TAKE_SCORE,dwSocketID,&UserTakeScore,sizeof(UserTakeScore));

  0024c	6a 00		 push	 0
  0024e	6a 58		 push	 88			; 00000058H
  00250	8d 45 94	 lea	 eax, DWORD PTR _UserTakeScore$[ebp]
  00253	50		 push	 eax
  00254	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00257	51		 push	 ecx
  00258	68 92 01 00 00	 push	 402			; 00000192H
  0025d	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00260	8b 02		 mov	 eax, DWORD PTR [edx]
  00262	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00265	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00268	ff d2		 call	 edx
  0026a	50		 push	 eax
  0026b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0026e	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00274	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00277	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0027d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0027f	50		 push	 eax
  00280	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00283	ff d2		 call	 edx
  00285	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7542 : 
; 7543 : 	return true;

  00288	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7544 : }

  0028a	5f		 pop	 edi
  0028b	5e		 pop	 esi
  0028c	5b		 pop	 ebx
  0028d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00290	33 cd		 xor	 ecx, ebp
  00292	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00297	8b e5		 mov	 esp, ebp
  00299	5d		 pop	 ebp
  0029a	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubTakeScoreRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv425 = -292						; size = 4
tv339 = -292						; size = 4
tv330 = -292						; size = 4
tv207 = -292						; size = 4
_UserSaveScore$ = -224					; size = 56
_szDescribe$1 = -168					; size = 128
_wTableID$2 = -40					; size = 2
_lUserWholeScore$ = -36					; size = 8
_lConsumeQuota$ = -28					; size = 8
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pSaveScoreRequest$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubSaveScoreRequest, COMDAT
; _this$ = ecx

; 7385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7386 : 	//效验参数
; 7387 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_SaveScoreRequest));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 09	 cmp	 eax, 9
  00020	74 19		 je	 SHORT $LN15@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN15@OnTCPNetwo
  0003a	cc		 int	 3
$LN15@OnTCPNetwo:

; 7388 : 	if (wDataSize!=sizeof(CMD_GR_C_SaveScoreRequest)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 09	 cmp	 eax, 9
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 03 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7389 : 
; 7390 : 	//房间判断
; 7391 : 	ASSERT(m_pGameServiceOption->wServerType&GAME_GENRE_GOLD);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00051	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00055	83 e2 01	 and	 edx, 1
  00058	75 18		 jne	 SHORT $LN16@OnTCPNetwo
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c0 06	 add	 eax, 6
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN16@OnTCPNetwo
  00071	cc		 int	 3
$LN16@OnTCPNetwo:

; 7392 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)==0) return false;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00078	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0007c	83 e2 01	 and	 edx, 1
  0007f	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 c6 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7393 : 
; 7394 : 	//变量定义
; 7395 : 	CMD_GR_C_SaveScoreRequest * pSaveScoreRequest=(CMD_GR_C_SaveScoreRequest *)pData;

  00088	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0008b	89 45 f4	 mov	 DWORD PTR _pSaveScoreRequest$[ebp], eax

; 7396 : 
; 7397 : 	//效验参数
; 7398 : 	ASSERT(pSaveScoreRequest->lSaveScore>0L);

  0008e	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00091	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv330[ebp], eax
  00097	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv330[ebp]
  0009d	83 79 05 00	 cmp	 DWORD PTR [ecx+5], 0
  000a1	7f 26		 jg	 SHORT $LN17@OnTCPNetwo
  000a3	7c 0c		 jl	 SHORT $LN20@OnTCPNetwo
  000a5	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv330[ebp]
  000ab	83 7a 01 00	 cmp	 DWORD PTR [edx+1], 0
  000af	77 18		 ja	 SHORT $LN17@OnTCPNetwo
$LN20@OnTCPNetwo:
  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000b6	83 c0 0d	 add	 eax, 13			; 0000000dH
  000b9	50		 push	 eax
  000ba	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000bf	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c4	85 c0		 test	 eax, eax
  000c6	74 01		 je	 SHORT $LN17@OnTCPNetwo
  000c8	cc		 int	 3
$LN17@OnTCPNetwo:

; 7399 : 	if (pSaveScoreRequest->lSaveScore<=0L) return false;

  000c9	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  000cc	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv339[ebp], eax
  000d2	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv339[ebp]
  000d8	83 79 05 00	 cmp	 DWORD PTR [ecx+5], 0
  000dc	7f 15		 jg	 SHORT $LN4@OnTCPNetwo
  000de	7c 0c		 jl	 SHORT $LN21@OnTCPNetwo
  000e0	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv339[ebp]
  000e6	83 7a 01 00	 cmp	 DWORD PTR [edx+1], 0
  000ea	77 07		 ja	 SHORT $LN4@OnTCPNetwo
$LN21@OnTCPNetwo:
  000ec	32 c0		 xor	 al, al
  000ee	e9 5b 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 7400 : 
; 7401 : 	//获取用户
; 7402 : 	WORD wBindIndex=LOWORD(dwSocketID);

  000f3	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000f6	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000fb	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7403 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  000ff	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00103	50		 push	 eax
  00104	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	8b 11		 mov	 edx, DWORD PTR [ecx]
  00109	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0010f	ff d0		 call	 eax
  00111	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7404 : 
; 7405 : 	//用户效验
; 7406 : 	ASSERT(pIServerUserItem!=NULL);

  00114	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00118	75 18		 jne	 SHORT $LN18@OnTCPNetwo
  0011a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0011f	83 c0 15	 add	 eax, 21			; 00000015H
  00122	50		 push	 eax
  00123	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00128	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0012d	85 c0		 test	 eax, eax
  0012f	74 01		 je	 SHORT $LN18@OnTCPNetwo
  00131	cc		 int	 3
$LN18@OnTCPNetwo:

; 7407 : 	if (pIServerUserItem==NULL) return false;

  00132	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00136	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  00138	32 c0		 xor	 al, al
  0013a	e9 0f 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 7408 : 
; 7409 : 	//规则判断
; 7410 : 	if(pSaveScoreRequest->cbActivityGame == FALSE && CServerRule::IsForfendSaveInRoom(m_pGameServiceOption->dwServerRule))

  0013f	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00142	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00145	85 c9		 test	 ecx, ecx
  00147	75 3a		 jne	 SHORT $LN6@OnTCPNetwo
  00149	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0014f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00152	52		 push	 edx
  00153	e8 00 00 00 00	 call	 ?IsForfendSaveInRoom@CServerRule@@SA_NK@Z ; CServerRule::IsForfendSaveInRoom
  00158	83 c4 04	 add	 esp, 4
  0015b	0f b6 c0	 movzx	 eax, al
  0015e	85 c0		 test	 eax, eax
  00160	74 21		 je	 SHORT $LN6@OnTCPNetwo

; 7411 : 	{
; 7412 : 		//发送数据
; 7413 : 		SendInsureFailure(pIServerUserItem,TEXT("此房间禁止房间存款，存入操作失败！"),0L,pSaveScoreRequest->cbActivityGame);

  00162	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00165	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00168	51		 push	 ecx
  00169	6a 00		 push	 0
  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@DACLODCK@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?$LH?$LP?$LM?d?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@
  00170	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00173	52		 push	 edx
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7414 : 		return true;

  0017c	b0 01		 mov	 al, 1
  0017e	e9 cb 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 7415 : 	}
; 7416 : 
; 7417 : 	//规则判断
; 7418 : 	if(pSaveScoreRequest->cbActivityGame == TRUE && CServerRule::IsForfendSaveInGame(m_pGameServiceOption->dwServerRule))

  00183	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00186	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00189	83 f9 01	 cmp	 ecx, 1
  0018c	75 3a		 jne	 SHORT $LN7@OnTCPNetwo
  0018e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00191	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00194	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00197	52		 push	 edx
  00198	e8 00 00 00 00	 call	 ?IsForfendSaveInGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendSaveInGame
  0019d	83 c4 04	 add	 esp, 4
  001a0	0f b6 c0	 movzx	 eax, al
  001a3	85 c0		 test	 eax, eax
  001a5	74 21		 je	 SHORT $LN7@OnTCPNetwo

; 7419 : 	{
; 7420 : 		//发送数据
; 7421 : 		SendInsureFailure(pIServerUserItem,TEXT("此房间禁止游戏存款，存入操作失败！"),0L,pSaveScoreRequest->cbActivityGame);

  001a7	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  001aa	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001ad	51		 push	 ecx
  001ae	6a 00		 push	 0
  001b0	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@MMKIAMDO@?$LE?K?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?N?O?$LH?$LE?f?$LP?n?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@
  001b5	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001b8	52		 push	 edx
  001b9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7422 : 		return true;

  001c1	b0 01		 mov	 al, 1
  001c3	e9 86 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 7423 : 	}
; 7424 : 
; 7425 : 	//变量定义
; 7426 : 	SCORE lConsumeQuota=0L;

  001c8	0f 57 c0	 xorps	 xmm0, xmm0
  001cb	66 0f 13 45 e4	 movlpd	 QWORD PTR _lConsumeQuota$[ebp], xmm0

; 7427 : 	SCORE lUserWholeScore=pIServerUserItem->GetUserScore()+pIServerUserItem->GetTrusteeScore();

  001d0	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001d3	8b 10		 mov	 edx, DWORD PTR [eax]
  001d5	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001d8	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  001de	ff d0		 call	 eax
  001e0	8b f0		 mov	 esi, eax
  001e2	8b fa		 mov	 edi, edx
  001e4	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e9	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001ec	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  001f2	ff d0		 call	 eax
  001f4	03 f0		 add	 esi, eax
  001f6	13 fa		 adc	 edi, edx
  001f8	89 75 dc	 mov	 DWORD PTR _lUserWholeScore$[ebp], esi
  001fb	89 7d e0	 mov	 DWORD PTR _lUserWholeScore$[ebp+4], edi

; 7428 : 
; 7429 : 	//获取限额
; 7430 : 	if (pIServerUserItem->GetTableID()!=INVALID_TABLE)

  001fe	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00201	8b 10		 mov	 edx, DWORD PTR [eax]
  00203	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00206	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00209	ff d0		 call	 eax
  0020b	0f b7 c8	 movzx	 ecx, ax
  0020e	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00214	74 4e		 je	 SHORT $LN8@OnTCPNetwo

; 7431 : 	{
; 7432 : 		WORD wTableID=pIServerUserItem->GetTableID();

  00216	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00219	8b 10		 mov	 edx, DWORD PTR [eax]
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0021e	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00221	ff d0		 call	 eax
  00223	66 89 45 d8	 mov	 WORD PTR _wTableID$2[ebp], ax

; 7433 : 		lConsumeQuota=m_TableFrameArray[wTableID]->QueryConsumeQuota(pIServerUserItem);

  00227	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$2[ebp]
  0022b	50		 push	 eax
  0022c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00235	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0023a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023c	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv207[ebp], ecx
  00242	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00245	52		 push	 edx
  00246	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv207[ebp]
  0024c	8b 10		 mov	 edx, DWORD PTR [eax]
  0024e	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv207[ebp]
  00254	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  0025a	ff d0		 call	 eax
  0025c	89 45 e4	 mov	 DWORD PTR _lConsumeQuota$[ebp], eax
  0025f	89 55 e8	 mov	 DWORD PTR _lConsumeQuota$[ebp+4], edx

; 7434 : 	}
; 7435 : 	else

  00262	eb 2e		 jmp	 SHORT $LN9@OnTCPNetwo
$LN8@OnTCPNetwo:

; 7436 : 	{
; 7437 : 		lConsumeQuota=pIServerUserItem->GetUserScore()+pIServerUserItem->GetTrusteeScore();

  00264	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00267	8b 10		 mov	 edx, DWORD PTR [eax]
  00269	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0026c	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00272	ff d0		 call	 eax
  00274	8b f0		 mov	 esi, eax
  00276	8b fa		 mov	 edi, edx
  00278	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0027b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027d	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00280	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00286	ff d0		 call	 eax
  00288	03 f0		 add	 esi, eax
  0028a	13 fa		 adc	 edi, edx
  0028c	89 75 e4	 mov	 DWORD PTR _lConsumeQuota$[ebp], esi
  0028f	89 7d e8	 mov	 DWORD PTR _lConsumeQuota$[ebp+4], edi
$LN9@OnTCPNetwo:

; 7438 : 	}
; 7439 : 
; 7440 : 	//限额判断
; 7441 : 	if (pSaveScoreRequest->lSaveScore>lConsumeQuota)

  00292	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00295	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv425[ebp], eax
  0029b	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv425[ebp]
  002a1	8b 51 05	 mov	 edx, DWORD PTR [ecx+5]
  002a4	3b 55 e8	 cmp	 edx, DWORD PTR _lConsumeQuota$[ebp+4]
  002a7	0f 8c a4 00 00
	00		 jl	 $LN10@OnTCPNetwo
  002ad	7f 12		 jg	 SHORT $LN22@OnTCPNetwo
  002af	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv425[ebp]
  002b5	8b 48 01	 mov	 ecx, DWORD PTR [eax+1]
  002b8	3b 4d e4	 cmp	 ecx, DWORD PTR _lConsumeQuota$[ebp]
  002bb	0f 86 90 00 00
	00		 jbe	 $LN10@OnTCPNetwo
$LN22@OnTCPNetwo:

; 7442 : 	{
; 7443 : 		if (lConsumeQuota<lUserWholeScore)

  002c1	8b 45 e8	 mov	 eax, DWORD PTR _lConsumeQuota$[ebp+4]
  002c4	3b 45 e0	 cmp	 eax, DWORD PTR _lUserWholeScore$[ebp+4]
  002c7	7f 67		 jg	 SHORT $LN11@OnTCPNetwo
  002c9	7c 08		 jl	 SHORT $LN23@OnTCPNetwo
  002cb	8b 4d e4	 mov	 ecx, DWORD PTR _lConsumeQuota$[ebp]
  002ce	3b 4d dc	 cmp	 ecx, DWORD PTR _lUserWholeScore$[ebp]
  002d1	73 5d		 jae	 SHORT $LN11@OnTCPNetwo
$LN23@OnTCPNetwo:

; 7444 : 		{
; 7445 : 			//构造提示
; 7446 : 			TCHAR szDescribe[128]=TEXT("");

  002d3	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  002d8	88 85 58 ff ff
	ff		 mov	 BYTE PTR _szDescribe$1[ebp], al
  002de	6a 7f		 push	 127			; 0000007fH
  002e0	6a 00		 push	 0
  002e2	8d 85 59 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp+1]
  002e8	50		 push	 eax
  002e9	e8 00 00 00 00	 call	 _memset
  002ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7447 : 			_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("由于您正在游戏中，游戏币可存入额度为 %I64d，存入操作失败！"),lConsumeQuota);

  002f1	8b 45 e8	 mov	 eax, DWORD PTR _lConsumeQuota$[ebp+4]
  002f4	50		 push	 eax
  002f5	8b 4d e4	 mov	 ecx, DWORD PTR _lConsumeQuota$[ebp]
  002f8	51		 push	 ecx
  002f9	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@FGFMEKII@?S?I?S?Z?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?S?N?O?$LH?$LB?R?$LP?I?$LE?f?H?k?$LG@
  002fe	68 80 00 00 00	 push	 128			; 00000080H
  00303	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _szDescribe$1[ebp]
  00309	52		 push	 edx
  0030a	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  0030f	83 c4 14	 add	 esp, 20			; 00000014H

; 7448 : 
; 7449 : 			//发送数据
; 7450 : 			SendInsureFailure(pIServerUserItem,szDescribe,0L,pSaveScoreRequest->cbActivityGame);

  00312	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00315	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00318	51		 push	 ecx
  00319	6a 00		 push	 0
  0031b	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _szDescribe$1[ebp]
  00321	52		 push	 edx
  00322	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00325	50		 push	 eax
  00326	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00329	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 7451 : 		}
; 7452 : 		else

  0032e	eb 1a		 jmp	 SHORT $LN12@OnTCPNetwo
$LN11@OnTCPNetwo:

; 7453 : 		{
; 7454 : 			//发送数据
; 7455 : 			SendInsureFailure(pIServerUserItem,TEXT("您的游戏币余额不足，存入操作失败！"),0L,pSaveScoreRequest->cbActivityGame);

  00330	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00333	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00336	51		 push	 ecx
  00337	6a 00		 push	 0
  00339	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@DPHNMKOK@?D?z?$LF?D?S?N?O?$LH?$LB?R?S?$OA?$LG?n?$LC?$LL?W?c?$KD?$KM?$LE?f?H?k?$LC?Y?W?w?J?$KH?$LA@
  0033e	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00341	52		 push	 edx
  00342	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00345	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure
$LN12@OnTCPNetwo:

; 7456 : 		}
; 7457 : 
; 7458 : 		return true;

  0034a	b0 01		 mov	 al, 1
  0034c	e9 fd 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 7459 : 	}
; 7460 : 
; 7461 : 	//锁定积分
; 7462 : 	if (pIServerUserItem->FrozenedUserScore(pSaveScoreRequest->lSaveScore)==false)

  00351	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  00354	8b 48 05	 mov	 ecx, DWORD PTR [eax+5]
  00357	51		 push	 ecx
  00358	8b 50 01	 mov	 edx, DWORD PTR [eax+1]
  0035b	52		 push	 edx
  0035c	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0035f	8b 10		 mov	 edx, DWORD PTR [eax]
  00361	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00364	8b 82 0c 01 00
	00		 mov	 eax, DWORD PTR [edx+268]
  0036a	ff d0		 call	 eax
  0036c	0f b6 c8	 movzx	 ecx, al
  0036f	85 c9		 test	 ecx, ecx
  00371	75 24		 jne	 SHORT $LN13@OnTCPNetwo

; 7463 : 	{
; 7464 : 		ASSERT(FALSE);

  00373	33 c0		 xor	 eax, eax
  00375	75 19		 jne	 SHORT $LN19@OnTCPNetwo
  00377	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0037d	83 c1 4f	 add	 ecx, 79			; 0000004fH
  00380	51		 push	 ecx
  00381	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00386	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0038b	85 c0		 test	 eax, eax
  0038d	74 01		 je	 SHORT $LN19@OnTCPNetwo
  0038f	cc		 int	 3
$LN19@OnTCPNetwo:

; 7465 : 		return false;

  00390	32 c0		 xor	 al, al
  00392	e9 b7 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 7466 : 	}
; 7467 : 
; 7468 : 	//变量定义
; 7469 : 	DBR_GR_UserSaveScore UserSaveScore;
; 7470 : 	ZeroMemory(&UserSaveScore,sizeof(UserSaveScore));

  00397	6a 38		 push	 56			; 00000038H
  00399	6a 00		 push	 0
  0039b	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _UserSaveScore$[ebp]
  003a1	50		 push	 eax
  003a2	e8 00 00 00 00	 call	 _memset
  003a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7471 : 
; 7472 : 	//构造数据
; 7473 : 	UserSaveScore.cbActivityGame=pSaveScoreRequest->cbActivityGame;

  003aa	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  003ad	8a 08		 mov	 cl, BYTE PTR [eax]
  003af	88 8d 20 ff ff
	ff		 mov	 BYTE PTR _UserSaveScore$[ebp], cl

; 7474 : 	UserSaveScore.dwUserID=pIServerUserItem->GetUserID();

  003b5	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003b8	8b 10		 mov	 edx, DWORD PTR [eax]
  003ba	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003bd	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  003c0	ff d0		 call	 eax
  003c2	89 85 24 ff ff
	ff		 mov	 DWORD PTR _UserSaveScore$[ebp+4], eax

; 7475 : 	UserSaveScore.lSaveScore=pSaveScoreRequest->lSaveScore;

  003c8	8b 45 f4	 mov	 eax, DWORD PTR _pSaveScoreRequest$[ebp]
  003cb	8b 48 01	 mov	 ecx, DWORD PTR [eax+1]
  003ce	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _UserSaveScore$[ebp+8], ecx
  003d4	8b 50 05	 mov	 edx, DWORD PTR [eax+5]
  003d7	89 95 2c ff ff
	ff		 mov	 DWORD PTR _UserSaveScore$[ebp+12], edx

; 7476 : 	UserSaveScore.dwClientAddr=pIServerUserItem->GetClientAddr();

  003dd	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003e0	8b 10		 mov	 edx, DWORD PTR [eax]
  003e2	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003e5	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  003e8	ff d0		 call	 eax
  003ea	89 85 30 ff ff
	ff		 mov	 DWORD PTR _UserSaveScore$[ebp+16], eax

; 7477 : 	lstrcpyn(UserSaveScore.szMachineID,pIServerUserItem->GetMachineID(),CountArray(UserSaveScore.szMachineID));

  003f0	6a 21		 push	 33			; 00000021H
  003f2	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003f5	8b 10		 mov	 edx, DWORD PTR [eax]
  003f7	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003fa	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  003fd	ff d0		 call	 eax
  003ff	50		 push	 eax
  00400	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _UserSaveScore$[ebp+20]
  00406	51		 push	 ecx
  00407	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7478 : 
; 7479 : 	//投递请求
; 7480 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_USER_SAVE_SCORE,dwSocketID,&UserSaveScore,sizeof(UserSaveScore));

  0040d	6a 00		 push	 0
  0040f	6a 38		 push	 56			; 00000038H
  00411	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _UserSaveScore$[ebp]
  00417	50		 push	 eax
  00418	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0041b	51		 push	 ecx
  0041c	68 91 01 00 00	 push	 401			; 00000191H
  00421	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00424	8b 02		 mov	 eax, DWORD PTR [edx]
  00426	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00429	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  0042c	ff d2		 call	 edx
  0042e	50		 push	 eax
  0042f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00432	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00438	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0043b	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00441	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00443	50		 push	 eax
  00444	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00447	ff d2		 call	 edx
  00449	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7481 : 
; 7482 : 	return true;

  0044c	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7483 : }

  0044e	5f		 pop	 edi
  0044f	5e		 pop	 esi
  00450	5b		 pop	 ebx
  00451	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00454	33 cd		 xor	 ecx, ebp
  00456	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0045b	8b e5		 mov	 esp, ebp
  0045d	5d		 pop	 ebp
  0045e	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubSaveScoreRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_UserEnableInsure$ = -132				; size = 112
_pEnableInsureRequest$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubEnableInsureRequest, COMDAT
; _this$ = ecx

; 7345 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7346 : 	//效验参数
; 7347 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_EnableInsureRequest));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 68	 cmp	 eax, 104		; 00000068H
  00020	74 19		 je	 SHORT $LN6@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0003a	cc		 int	 3
$LN6@OnTCPNetwo:

; 7348 : 	if (wDataSize!=sizeof(CMD_GR_C_EnableInsureRequest)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 68	 cmp	 eax, 104		; 00000068H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 3d 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7349 : 
; 7350 : 	//房间判断
; 7351 : 	ASSERT(m_pGameServiceOption->wServerType&GAME_GENRE_GOLD);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00051	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00055	83 e2 01	 and	 edx, 1
  00058	75 18		 jne	 SHORT $LN7@OnTCPNetwo
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c0 06	 add	 eax, 6
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN7@OnTCPNetwo
  00071	cc		 int	 3
$LN7@OnTCPNetwo:

; 7352 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)==0) return false;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00078	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0007c	83 e2 01	 and	 edx, 1
  0007f	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 00 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7353 : 
; 7354 : 	//获取用户
; 7355 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00088	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00090	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7356 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00094	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00098	50		 push	 eax
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000a4	ff d0		 call	 eax
  000a6	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7357 : 
; 7358 : 	//用户效验
; 7359 : 	ASSERT(pIServerUserItem!=NULL);

  000a9	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000ad	75 18		 jne	 SHORT $LN8@OnTCPNetwo
  000af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000b4	83 c0 0e	 add	 eax, 14			; 0000000eH
  000b7	50		 push	 eax
  000b8	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000bd	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c2	85 c0		 test	 eax, eax
  000c4	74 01		 je	 SHORT $LN8@OnTCPNetwo
  000c6	cc		 int	 3
$LN8@OnTCPNetwo:

; 7360 : 	if (pIServerUserItem==NULL) return false;

  000c7	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000cb	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  000cd	32 c0		 xor	 al, al
  000cf	e9 b4 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 7361 : 
; 7362 : 	//变量定义
; 7363 : 	CMD_GR_C_EnableInsureRequest * pEnableInsureRequest = (CMD_GR_C_EnableInsureRequest *)pData;

  000d4	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  000d7	89 45 ec	 mov	 DWORD PTR _pEnableInsureRequest$[ebp], eax

; 7364 : 
; 7365 : 	//变量定义
; 7366 : 	DBR_GR_UserEnableInsure UserEnableInsure;
; 7367 : 	ZeroMemory(&UserEnableInsure,sizeof(UserEnableInsure));

  000da	6a 70		 push	 112			; 00000070H
  000dc	6a 00		 push	 0
  000de	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _UserEnableInsure$[ebp]
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 _memset
  000ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7368 : 
; 7369 : 	//构造数据	
; 7370 : 	UserEnableInsure.dwUserID=pIServerUserItem->GetUserID();

  000ed	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f0	8b 10		 mov	 edx, DWORD PTR [eax]
  000f2	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f5	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  000f8	ff d0		 call	 eax
  000fa	89 45 80	 mov	 DWORD PTR _UserEnableInsure$[ebp+4], eax

; 7371 : 	UserEnableInsure.dwClientAddr=pIServerUserItem->GetClientAddr();

  000fd	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00100	8b 10		 mov	 edx, DWORD PTR [eax]
  00102	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00105	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00108	ff d0		 call	 eax
  0010a	89 45 84	 mov	 DWORD PTR _UserEnableInsure$[ebp+8], eax

; 7372 : 	UserEnableInsure.cbActivityGame=pEnableInsureRequest->cbActivityGame;

  0010d	8b 45 ec	 mov	 eax, DWORD PTR _pEnableInsureRequest$[ebp]
  00110	8a 08		 mov	 cl, BYTE PTR [eax]
  00112	88 8d 7c ff ff
	ff		 mov	 BYTE PTR _UserEnableInsure$[ebp], cl

; 7373 : 	lstrcpyn(UserEnableInsure.szLogonPass,pEnableInsureRequest->szLogonPass,CountArray(UserEnableInsure.szLogonPass));

  00118	6a 21		 push	 33			; 00000021H
  0011a	8b 45 ec	 mov	 eax, DWORD PTR _pEnableInsureRequest$[ebp]
  0011d	83 c0 05	 add	 eax, 5
  00120	50		 push	 eax
  00121	8d 4d 88	 lea	 ecx, DWORD PTR _UserEnableInsure$[ebp+12]
  00124	51		 push	 ecx
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7374 : 	lstrcpyn(UserEnableInsure.szInsurePass,pEnableInsureRequest->szInsurePass,CountArray(UserEnableInsure.szInsurePass));

  0012b	6a 21		 push	 33			; 00000021H
  0012d	8b 45 ec	 mov	 eax, DWORD PTR _pEnableInsureRequest$[ebp]
  00130	83 c0 26	 add	 eax, 38			; 00000026H
  00133	50		 push	 eax
  00134	8d 4d a9	 lea	 ecx, DWORD PTR _UserEnableInsure$[ebp+45]
  00137	51		 push	 ecx
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7375 : 	lstrcpyn(UserEnableInsure.szMachineID,pEnableInsureRequest->szMachineID,CountArray(UserEnableInsure.szMachineID));

  0013e	6a 21		 push	 33			; 00000021H
  00140	8b 45 ec	 mov	 eax, DWORD PTR _pEnableInsureRequest$[ebp]
  00143	83 c0 47	 add	 eax, 71			; 00000047H
  00146	50		 push	 eax
  00147	8d 4d ca	 lea	 ecx, DWORD PTR _UserEnableInsure$[ebp+78]
  0014a	51		 push	 ecx
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7376 : 
; 7377 : 	//投递请求
; 7378 : 	m_pIDBCorrespondManager->PostDataBaseRequest(UserEnableInsure.dwUserID,DBR_GR_USER_ENABLE_INSURE,dwSocketID,&UserEnableInsure,sizeof(UserEnableInsure));

  00151	6a 00		 push	 0
  00153	6a 70		 push	 112			; 00000070H
  00155	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _UserEnableInsure$[ebp]
  0015b	50		 push	 eax
  0015c	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0015f	51		 push	 ecx
  00160	68 90 01 00 00	 push	 400			; 00000190H
  00165	8b 55 80	 mov	 edx, DWORD PTR _UserEnableInsure$[ebp+4]
  00168	52		 push	 edx
  00169	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00172	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00175	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0017b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0017d	50		 push	 eax
  0017e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00181	ff d2		 call	 edx
  00183	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7379 : 
; 7380 : 	return true;

  00186	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7381 : }

  00188	5f		 pop	 edi
  00189	5e		 pop	 esi
  0018a	5b		 pop	 ebx
  0018b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0018e	33 cd		 xor	 ecx, ebp
  00190	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00195	8b e5		 mov	 esp, ebp
  00197	5d		 pop	 ebp
  00198	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubEnableInsureRequest
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_QueryInsureInfo$ = -68					; size = 48
_pQueryInsureInfoRequest$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubQueryInsureInfo, COMDAT
; _this$ = ecx

; 7307 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7308 : 	//效验参数
; 7309 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_QueryInsureInfoRequest));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 22	 cmp	 eax, 34			; 00000022H
  00020	74 19		 je	 SHORT $LN6@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0003a	cc		 int	 3
$LN6@OnTCPNetwo:

; 7310 : 	if (wDataSize!=sizeof(CMD_GR_C_QueryInsureInfoRequest)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 22	 cmp	 eax, 34			; 00000022H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 0e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7311 : 
; 7312 : 	//房间判断
; 7313 : 	ASSERT(m_pGameServiceOption->wServerType&GAME_GENRE_GOLD);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00051	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00055	83 e2 01	 and	 edx, 1
  00058	75 18		 jne	 SHORT $LN7@OnTCPNetwo
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c0 06	 add	 eax, 6
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN7@OnTCPNetwo
  00071	cc		 int	 3
$LN7@OnTCPNetwo:

; 7314 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_GOLD)==0) return false;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00078	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0007c	83 e2 01	 and	 edx, 1
  0007f	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 d1 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7315 : 
; 7316 : 	//获取用户
; 7317 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00088	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00090	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7318 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00094	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00098	50		 push	 eax
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000a4	ff d0		 call	 eax
  000a6	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7319 : 
; 7320 : 	//用户效验
; 7321 : 	ASSERT(pIServerUserItem!=NULL);

  000a9	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000ad	75 18		 jne	 SHORT $LN8@OnTCPNetwo
  000af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000b4	83 c0 0e	 add	 eax, 14			; 0000000eH
  000b7	50		 push	 eax
  000b8	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000bd	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c2	85 c0		 test	 eax, eax
  000c4	74 01		 je	 SHORT $LN8@OnTCPNetwo
  000c6	cc		 int	 3
$LN8@OnTCPNetwo:

; 7322 : 	if (pIServerUserItem==NULL) return false;

  000c7	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000cb	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  000cd	32 c0		 xor	 al, al
  000cf	e9 85 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 7323 : 
; 7324 : 	//变量定义
; 7325 : 	CMD_GR_C_QueryInsureInfoRequest * pQueryInsureInfoRequest = (CMD_GR_C_QueryInsureInfoRequest *)pData;

  000d4	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  000d7	89 45 ec	 mov	 DWORD PTR _pQueryInsureInfoRequest$[ebp], eax

; 7326 : 
; 7327 : 	//变量定义
; 7328 : 	DBR_GR_QueryInsureInfo QueryInsureInfo;
; 7329 : 	ZeroMemory(&QueryInsureInfo,sizeof(QueryInsureInfo));

  000da	6a 30		 push	 48			; 00000030H
  000dc	6a 00		 push	 0
  000de	8d 45 bc	 lea	 eax, DWORD PTR _QueryInsureInfo$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 _memset
  000e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7330 : 
; 7331 : 	//构造数据
; 7332 : 	QueryInsureInfo.cbActivityGame=pQueryInsureInfoRequest->cbActivityGame;

  000ea	8b 45 ec	 mov	 eax, DWORD PTR _pQueryInsureInfoRequest$[ebp]
  000ed	8a 08		 mov	 cl, BYTE PTR [eax]
  000ef	88 4d bc	 mov	 BYTE PTR _QueryInsureInfo$[ebp], cl

; 7333 : 	QueryInsureInfo.dwUserID=pIServerUserItem->GetUserID();

  000f2	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f5	8b 10		 mov	 edx, DWORD PTR [eax]
  000f7	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000fa	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  000fd	ff d0		 call	 eax
  000ff	89 45 c0	 mov	 DWORD PTR _QueryInsureInfo$[ebp+4], eax

; 7334 : 	QueryInsureInfo.dwClientAddr=pIServerUserItem->GetClientAddr();

  00102	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00105	8b 10		 mov	 edx, DWORD PTR [eax]
  00107	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0010a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0010d	ff d0		 call	 eax
  0010f	89 45 c4	 mov	 DWORD PTR _QueryInsureInfo$[ebp+8], eax

; 7335 : 	lstrcpyn(QueryInsureInfo.szPassword,pQueryInsureInfoRequest->szInsurePass,CountArray(QueryInsureInfo.szPassword));

  00112	6a 21		 push	 33			; 00000021H
  00114	8b 45 ec	 mov	 eax, DWORD PTR _pQueryInsureInfoRequest$[ebp]
  00117	83 c0 01	 add	 eax, 1
  0011a	50		 push	 eax
  0011b	8d 4d c8	 lea	 ecx, DWORD PTR _QueryInsureInfo$[ebp+12]
  0011e	51		 push	 ecx
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7336 : 
; 7337 : 	//投递请求
; 7338 : 	m_pIDBCorrespondManager->PostDataBaseRequest(QueryInsureInfo.dwUserID,DBR_GR_QUERY_INSURE_INFO,dwSocketID,&QueryInsureInfo,sizeof(QueryInsureInfo));

  00125	6a 00		 push	 0
  00127	6a 30		 push	 48			; 00000030H
  00129	8d 45 bc	 lea	 eax, DWORD PTR _QueryInsureInfo$[ebp]
  0012c	50		 push	 eax
  0012d	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00130	51		 push	 ecx
  00131	68 94 01 00 00	 push	 404			; 00000194H
  00136	8b 55 c0	 mov	 edx, DWORD PTR _QueryInsureInfo$[ebp+4]
  00139	52		 push	 edx
  0013a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00143	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00146	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0014c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0014e	50		 push	 eax
  0014f	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00152	ff d2		 call	 edx
  00154	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7339 : 
; 7340 : 	return true;

  00157	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7341 : }

  00159	5f		 pop	 edi
  0015a	5e		 pop	 esi
  0015b	5b		 pop	 ebx
  0015c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015f	33 cd		 xor	 ecx, ebp
  00161	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubQueryInsureInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_GrowLevelQueryInfo$ = -100				; size = 80
_pGrowLevelQueryInfo$ = -20				; size = 4
_pBindParameter$ = -16					; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubGrowLevelQuery, COMDAT
; _this$ = ecx

; 7140 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7141 : 	//绑定信息
; 7142 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00019	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7143 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 7144 : 	ASSERT(pBindParameter!=NULL);

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN5@OnTCPNetwo
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00045	83 c0 04	 add	 eax, 4
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN5@OnTCPNetwo
  00057	cc		 int	 3
$LN5@OnTCPNetwo:

; 7145 : 	if (pBindParameter==NULL) return true;

  00058	83 7d f0 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN2@OnTCPNetwo
  0005e	b0 01		 mov	 al, 1
  00060	e9 c5 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 7146 : 
; 7147 : 
; 7148 : 	//参数校验
; 7149 : 	ASSERT(wDataSize==sizeof(CMD_GR_GrowLevelQueryInfo));

  00065	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00069	83 f8 46	 cmp	 eax, 70			; 00000046H
  0006c	74 19		 je	 SHORT $LN6@OnTCPNetwo
  0006e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00074	83 c1 09	 add	 ecx, 9
  00077	51		 push	 ecx
  00078	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0007d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00082	85 c0		 test	 eax, eax
  00084	74 01		 je	 SHORT $LN6@OnTCPNetwo
  00086	cc		 int	 3
$LN6@OnTCPNetwo:

; 7150 : 	if(wDataSize!=sizeof(CMD_GR_GrowLevelQueryInfo)) return false;

  00087	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0008b	83 f8 46	 cmp	 eax, 70			; 00000046H
  0008e	74 07		 je	 SHORT $LN3@OnTCPNetwo
  00090	32 c0		 xor	 al, al
  00092	e9 93 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7151 : 
; 7152 : 	//提取数据
; 7153 : 	CMD_GR_GrowLevelQueryInfo * pGrowLevelQueryInfo= (CMD_GR_GrowLevelQueryInfo *)pData;

  00097	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0009a	89 45 ec	 mov	 DWORD PTR _pGrowLevelQueryInfo$[ebp], eax

; 7154 : 	pGrowLevelQueryInfo->szPassword[CountArray(pGrowLevelQueryInfo->szPassword)-1]=0;

  0009d	b8 01 00 00 00	 mov	 eax, 1
  000a2	c1 e0 05	 shl	 eax, 5
  000a5	8b 4d ec	 mov	 ecx, DWORD PTR _pGrowLevelQueryInfo$[ebp]
  000a8	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 7155 : 	pGrowLevelQueryInfo->szMachineID[CountArray(pGrowLevelQueryInfo->szMachineID)-1]=0;

  000ad	b8 01 00 00 00	 mov	 eax, 1
  000b2	c1 e0 05	 shl	 eax, 5
  000b5	8b 4d ec	 mov	 ecx, DWORD PTR _pGrowLevelQueryInfo$[ebp]
  000b8	c6 44 01 25 00	 mov	 BYTE PTR [ecx+eax+37], 0

; 7156 : 
; 7157 : 
; 7158 : 	//构造结构
; 7159 : 	DBR_GR_GrowLevelQueryInfo GrowLevelQueryInfo;
; 7160 : 	GrowLevelQueryInfo.dwUserID = pGrowLevelQueryInfo->dwUserID;

  000bd	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelQueryInfo$[ebp]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d 9c	 mov	 DWORD PTR _GrowLevelQueryInfo$[ebp], ecx

; 7161 : 	GrowLevelQueryInfo.dwClientAddr=pBindParameter->dwClientAddr;

  000c5	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  000c8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000cb	89 4d c4	 mov	 DWORD PTR _GrowLevelQueryInfo$[ebp+40], ecx

; 7162 : 	lstrcpyn(GrowLevelQueryInfo.szPassword,pGrowLevelQueryInfo->szPassword,CountArray(GrowLevelQueryInfo.szPassword));

  000ce	6a 21		 push	 33			; 00000021H
  000d0	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelQueryInfo$[ebp]
  000d3	83 c0 04	 add	 eax, 4
  000d6	50		 push	 eax
  000d7	8d 4d a0	 lea	 ecx, DWORD PTR _GrowLevelQueryInfo$[ebp+4]
  000da	51		 push	 ecx
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7163 : 	lstrcpyn(GrowLevelQueryInfo.szMachineID,pGrowLevelQueryInfo->szMachineID,CountArray(GrowLevelQueryInfo.szMachineID));

  000e1	6a 21		 push	 33			; 00000021H
  000e3	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelQueryInfo$[ebp]
  000e6	83 c0 25	 add	 eax, 37			; 00000025H
  000e9	50		 push	 eax
  000ea	8d 4d c8	 lea	 ecx, DWORD PTR _GrowLevelQueryInfo$[ebp+44]
  000ed	51		 push	 ecx
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 7164 : 
; 7165 : 	//投递请求
; 7166 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pGrowLevelQueryInfo->dwUserID,DBR_GR_GROWLEVEL_QUERY_IFNO,dwSocketID,&GrowLevelQueryInfo,sizeof(GrowLevelQueryInfo));

  000f4	6a 00		 push	 0
  000f6	6a 50		 push	 80			; 00000050H
  000f8	8d 45 9c	 lea	 eax, DWORD PTR _GrowLevelQueryInfo$[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000ff	51		 push	 ecx
  00100	68 34 03 00 00	 push	 820			; 00000334H
  00105	8b 55 ec	 mov	 edx, DWORD PTR _pGrowLevelQueryInfo$[ebp]
  00108	8b 02		 mov	 eax, DWORD PTR [edx]
  0010a	50		 push	 eax
  0010b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  00114	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00117	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0011d	8b 12		 mov	 edx, DWORD PTR [edx]
  0011f	51		 push	 ecx
  00120	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00123	ff d0		 call	 eax
  00125	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7167 : 
; 7168 : 	return true;

  00128	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7169 : }

  0012a	5f		 pop	 edi
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00130	33 cd		 xor	 ecx, ebp
  00132	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubGrowLevelQuery
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv169 = -16944						; size = 4
tv142 = -16944						; size = 4
_wHeadSize$1 = -16428					; size = 2
_pUserInfo$2 = -16424					; size = 4
_SendPacket$3 = -16420					; size = 8
_pUserInfoHead$4 = -16412				; size = 4
_cbBuffer$5 = -16408					; size = 16376
_pTagerIServerUserItem$6 = -32				; size = 4
_wIndex$7 = -28						; size = 2
_wChairCout$ = -24					; size = 2
_pUserInfoReq$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubChairUserInfoReq, COMDAT
; _this$ = ecx

; 7061 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 30 42 00 00	 mov	 eax, 16944		; 00004230H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7062 : 	//效验参数
; 7063 : 	ASSERT(wDataSize==sizeof(CMD_GR_ChairUserInfoReq));

  0001d	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00021	83 f8 04	 cmp	 eax, 4
  00024	74 19		 je	 SHORT $LN12@OnTCPNetwo
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0002c	83 c1 02	 add	 ecx, 2
  0002f	51		 push	 ecx
  00030	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00035	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003a	85 c0		 test	 eax, eax
  0003c	74 01		 je	 SHORT $LN12@OnTCPNetwo
  0003e	cc		 int	 3
$LN12@OnTCPNetwo:

; 7064 : 	if (wDataSize!=sizeof(CMD_GR_ChairUserInfoReq)) return false;

  0003f	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00043	83 f8 04	 cmp	 eax, 4
  00046	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00048	32 c0		 xor	 al, al
  0004a	e9 ae 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 7065 : 
; 7066 : 	//获取用户
; 7067 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0004f	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 7068 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0005b	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0006b	ff d0		 call	 eax
  0006d	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 7069 : 
; 7070 : 	//用户效验
; 7071 : 	ASSERT(pIServerUserItem!=NULL);

  00070	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00074	75 18		 jne	 SHORT $LN13@OnTCPNetwo
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0007b	83 c0 0a	 add	 eax, 10			; 0000000aH
  0007e	50		 push	 eax
  0007f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00084	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00089	85 c0		 test	 eax, eax
  0008b	74 01		 je	 SHORT $LN13@OnTCPNetwo
  0008d	cc		 int	 3
$LN13@OnTCPNetwo:

; 7072 : 	if (pIServerUserItem==NULL) return false;

  0008e	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00092	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00094	32 c0		 xor	 al, al
  00096	e9 62 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 7073 : 
; 7074 : 	//变量定义
; 7075 : 	CMD_GR_ChairUserInfoReq * pUserInfoReq = (CMD_GR_ChairUserInfoReq *)pData;

  0009b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0009e	89 45 ec	 mov	 DWORD PTR _pUserInfoReq$[ebp], eax

; 7076 : 	if(pUserInfoReq->wTableID == INVALID_TABLE) return true;

  000a1	8b 45 ec	 mov	 eax, DWORD PTR _pUserInfoReq$[ebp]
  000a4	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a7	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  000ad	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  000af	b0 01		 mov	 al, 1
  000b1	e9 47 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 7077 : 	if(pUserInfoReq->wTableID >= m_pGameServiceOption->wTableCount)return true;

  000b6	8b 45 ec	 mov	 eax, DWORD PTR _pUserInfoReq$[ebp]
  000b9	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000bc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000c2	0f b7 50 46	 movzx	 edx, WORD PTR [eax+70]
  000c6	3b ca		 cmp	 ecx, edx
  000c8	7c 07		 jl	 SHORT $LN8@OnTCPNetwo
  000ca	b0 01		 mov	 al, 1
  000cc	e9 2c 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 7078 : 
; 7079 : 	//发送消息
; 7080 : 	WORD wChairCout = m_TableFrameArray[pUserInfoReq->wTableID]->GetChairCount();

  000d1	8b 45 ec	 mov	 eax, DWORD PTR _pUserInfoReq$[ebp]
  000d4	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000d7	51		 push	 ecx
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000e1	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000e6	8b 10		 mov	 edx, DWORD PTR [eax]
  000e8	89 95 d0 bd ff
	ff		 mov	 DWORD PTR tv142[ebp], edx
  000ee	8b 85 d0 bd ff
	ff		 mov	 eax, DWORD PTR tv142[ebp]
  000f4	8b 10		 mov	 edx, DWORD PTR [eax]
  000f6	8b 8d d0 bd ff
	ff		 mov	 ecx, DWORD PTR tv142[ebp]
  000fc	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000ff	ff d0		 call	 eax
  00101	66 89 45 e8	 mov	 WORD PTR _wChairCout$[ebp], ax

; 7081 : 	for(WORD wIndex = 0; wIndex < wChairCout; wIndex++)

  00105	33 c0		 xor	 eax, eax
  00107	66 89 45 e4	 mov	 WORD PTR _wIndex$7[ebp], ax
  0010b	eb 0c		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  0010d	66 8b 45 e4	 mov	 ax, WORD PTR _wIndex$7[ebp]
  00111	66 83 c0 01	 add	 ax, 1
  00115	66 89 45 e4	 mov	 WORD PTR _wIndex$7[ebp], ax
$LN4@OnTCPNetwo:
  00119	0f b7 45 e4	 movzx	 eax, WORD PTR _wIndex$7[ebp]
  0011d	0f b7 4d e8	 movzx	 ecx, WORD PTR _wChairCout$[ebp]
  00121	3b c1		 cmp	 eax, ecx
  00123	0f 8d d2 02 00
	00		 jge	 $LN3@OnTCPNetwo

; 7082 : 	{
; 7083 : 		//获取用户
; 7084 : 		if(pUserInfoReq->wChairID != INVALID_CHAIR && wIndex != pUserInfoReq->wChairID)continue;

  00129	8b 45 ec	 mov	 eax, DWORD PTR _pUserInfoReq$[ebp]
  0012c	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00130	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00136	74 11		 je	 SHORT $LN9@OnTCPNetwo
  00138	0f b7 45 e4	 movzx	 eax, WORD PTR _wIndex$7[ebp]
  0013c	8b 4d ec	 mov	 ecx, DWORD PTR _pUserInfoReq$[ebp]
  0013f	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00143	3b c2		 cmp	 eax, edx
  00145	74 02		 je	 SHORT $LN9@OnTCPNetwo
  00147	eb c4		 jmp	 SHORT $LN2@OnTCPNetwo
$LN9@OnTCPNetwo:

; 7085 : 		IServerUserItem * pTagerIServerUserItem=m_TableFrameArray[pUserInfoReq->wTableID]->GetTableUserItem(wIndex);

  00149	8b 45 ec	 mov	 eax, DWORD PTR _pUserInfoReq$[ebp]
  0014c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0014f	51		 push	 ecx
  00150	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00159	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0015e	8b 10		 mov	 edx, DWORD PTR [eax]
  00160	89 95 d0 bd ff
	ff		 mov	 DWORD PTR tv169[ebp], edx
  00166	0f b7 45 e4	 movzx	 eax, WORD PTR _wIndex$7[ebp]
  0016a	50		 push	 eax
  0016b	8b 8d d0 bd ff
	ff		 mov	 ecx, DWORD PTR tv169[ebp]
  00171	8b 11		 mov	 edx, DWORD PTR [ecx]
  00173	8b 8d d0 bd ff
	ff		 mov	 ecx, DWORD PTR tv169[ebp]
  00179	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0017f	ff d0		 call	 eax
  00181	89 45 e0	 mov	 DWORD PTR _pTagerIServerUserItem$6[ebp], eax

; 7086 : 		if(pTagerIServerUserItem==NULL)continue;

  00184	83 7d e0 00	 cmp	 DWORD PTR _pTagerIServerUserItem$6[ebp], 0
  00188	75 02		 jne	 SHORT $LN10@OnTCPNetwo
  0018a	eb 81		 jmp	 SHORT $LN2@OnTCPNetwo
$LN10@OnTCPNetwo:

; 7087 : 
; 7088 : 		//变量定义
; 7089 : 		BYTE cbBuffer[SOCKET_TCP_PACKET]={0};

  0018c	68 f8 3f 00 00	 push	 16376			; 00003ff8H
  00191	6a 00		 push	 0
  00193	8d 85 e8 bf ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$5[ebp]
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 _memset
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 7090 : 		tagMobileUserInfoHead * pUserInfoHead=(tagMobileUserInfoHead *)cbBuffer;

  001a2	8d 85 e8 bf ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$5[ebp]
  001a8	89 85 e4 bf ff
	ff		 mov	 DWORD PTR _pUserInfoHead$4[ebp], eax

; 7091 : 		CSendPacketHelper SendPacket(cbBuffer+sizeof(tagMobileUserInfoHead),sizeof(cbBuffer)-sizeof(tagMobileUserInfoHead));

  001ae	68 7f 3f 00 00	 push	 16255			; 00003f7fH
  001b3	8d 85 61 c0 ff
	ff		 lea	 eax, DWORD PTR _cbBuffer$5[ebp+121]
  001b9	50		 push	 eax
  001ba	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$3[ebp]
  001c0	e8 00 00 00 00	 call	 ??0CSendPacketHelper@@QAE@PAXG@Z ; CSendPacketHelper::CSendPacketHelper

; 7092 : 		tagUserInfo *pUserInfo = pTagerIServerUserItem->GetUserInfo();

  001c5	8b 45 e0	 mov	 eax, DWORD PTR _pTagerIServerUserItem$6[ebp]
  001c8	8b 10		 mov	 edx, DWORD PTR [eax]
  001ca	8b 4d e0	 mov	 ecx, DWORD PTR _pTagerIServerUserItem$6[ebp]
  001cd	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  001d0	ff d0		 call	 eax
  001d2	89 85 d8 bf ff
	ff		 mov	 DWORD PTR _pUserInfo$2[ebp], eax

; 7093 : 
; 7094 : 		//用户属性
; 7095 : 		pUserInfoHead->wFaceID=pUserInfo->wFaceID;

  001d8	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  001de	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  001e4	66 8b 91 88 00
	00 00		 mov	 dx, WORD PTR [ecx+136]
  001eb	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 7096 : 		pUserInfoHead->dwGameID=pUserInfo->dwGameID;

  001ef	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  001f5	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  001fb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001fe	89 10		 mov	 DWORD PTR [eax], edx

; 7097 : 		pUserInfoHead->dwUserID=pUserInfo->dwUserID;

  00200	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00206	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  0020c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020e	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 7098 : 		pUserInfoHead->dwCustomID=pUserInfo->dwCustomID;

  00211	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00217	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  0021d	8b 91 8a 00 00
	00		 mov	 edx, DWORD PTR [ecx+138]
  00223	89 50 0a	 mov	 DWORD PTR [eax+10], edx

; 7099 : 		pUserInfoHead->dwAgentID=pUserInfo->dwAgentID;

  00226	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  0022c	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  00232	8b 91 fc 00 00
	00		 mov	 edx, DWORD PTR [ecx+252]
  00238	89 50 71	 mov	 DWORD PTR [eax+113], edx

; 7100 : 
; 7101 : 		//用户属性
; 7102 : 		pUserInfoHead->cbGender=pUserInfo->cbGender;

  0023b	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00241	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  00247	8a 91 8e 00 00
	00		 mov	 dl, BYTE PTR [ecx+142]
  0024d	88 50 0e	 mov	 BYTE PTR [eax+14], dl

; 7103 : 		pUserInfoHead->cbMemberOrder=pUserInfo->cbMemberOrder;

  00250	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00256	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  0025c	8a 91 8f 00 00
	00		 mov	 dl, BYTE PTR [ecx+143]
  00262	88 50 0f	 mov	 BYTE PTR [eax+15], dl

; 7104 : 
; 7105 : 		//用户状态
; 7106 : 		pUserInfoHead->wTableID=pUserInfo->wTableID;

  00265	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  0026b	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  00271	66 8b 91 91 00
	00 00		 mov	 dx, WORD PTR [ecx+145]
  00278	66 89 50 10	 mov	 WORD PTR [eax+16], dx

; 7107 : 		pUserInfoHead->wChairID=pUserInfo->wChairID;

  0027c	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00282	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  00288	66 8b 91 95 00
	00 00		 mov	 dx, WORD PTR [ecx+149]
  0028f	66 89 50 12	 mov	 WORD PTR [eax+18], dx

; 7108 : 		pUserInfoHead->cbUserStatus=pUserInfo->cbUserStatus;

  00293	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00299	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  0029f	8a 91 97 00 00
	00		 mov	 dl, BYTE PTR [ecx+151]
  002a5	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 7109 : 
; 7110 : 		//用户局数
; 7111 : 		pUserInfoHead->dwWinCount=pUserInfo->dwWinCount;

  002a8	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  002ae	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  002b4	8b 91 d8 00 00
	00		 mov	 edx, DWORD PTR [ecx+216]
  002ba	89 50 55	 mov	 DWORD PTR [eax+85], edx

; 7112 : 		pUserInfoHead->dwLostCount=pUserInfo->dwLostCount;

  002bd	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  002c3	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  002c9	8b 91 dc 00 00
	00		 mov	 edx, DWORD PTR [ecx+220]
  002cf	89 50 59	 mov	 DWORD PTR [eax+89], edx

; 7113 : 		pUserInfoHead->dwDrawCount=pUserInfo->dwDrawCount;

  002d2	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  002d8	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  002de	8b 91 e0 00 00
	00		 mov	 edx, DWORD PTR [ecx+224]
  002e4	89 50 5d	 mov	 DWORD PTR [eax+93], edx

; 7114 : 		pUserInfoHead->dwFleeCount=pUserInfo->dwFleeCount;

  002e7	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  002ed	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  002f3	8b 91 e4 00 00
	00		 mov	 edx, DWORD PTR [ecx+228]
  002f9	89 50 61	 mov	 DWORD PTR [eax+97], edx

; 7115 : 		pUserInfoHead->dwExperience=pUserInfo->dwExperience;

  002fc	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00302	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  00308	8b 91 ec 00 00
	00		 mov	 edx, DWORD PTR [ecx+236]
  0030e	89 50 65	 mov	 DWORD PTR [eax+101], edx

; 7116 : 		pUserInfoHead->lIntegralCount=pUserInfo->lIntegralCount;

  00311	8b 85 e4 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfoHead$4[ebp]
  00317	8b 8d d8 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfo$2[ebp]
  0031d	8b 91 f4 00 00
	00		 mov	 edx, DWORD PTR [ecx+244]
  00323	89 50 69	 mov	 DWORD PTR [eax+105], edx
  00326	8b 89 f8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+248]
  0032c	89 48 6d	 mov	 DWORD PTR [eax+109], ecx

; 7117 : 
; 7118 : 		//用户成绩
; 7119 : 		/*pUserInfoHead->dBeans=pUserInfo->dBeans;
; 7120 : 		pUserInfoHead->lIngot=pUserInfo->lIngot;
; 7121 : 		pUserInfoHead->lScore = pUserInfo->lScore;*/
; 7122 : 		pUserInfoHead->bConsumptionType = pUserInfo->bConsumptionType;

  0032f	8b b5 d8 bf ff
	ff		 mov	 esi, DWORD PTR _pUserInfo$2[ebp]
  00335	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  0033b	8b bd e4 bf ff
	ff		 mov	 edi, DWORD PTR _pUserInfoHead$4[ebp]
  00341	83 c7 15	 add	 edi, 21			; 00000015H
  00344	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00349	f3 a5		 rep movsd

; 7123 : 
; 7124 : 		pUserInfoHead->bConsumptionType.lScore += pTagerIServerUserItem->GetTrusteeScore();

  0034b	8b 45 e0	 mov	 eax, DWORD PTR _pTagerIServerUserItem$6[ebp]
  0034e	8b 10		 mov	 edx, DWORD PTR [eax]
  00350	8b 4d e0	 mov	 ecx, DWORD PTR _pTagerIServerUserItem$6[ebp]
  00353	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00359	ff d0		 call	 eax
  0035b	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$4[ebp]
  00361	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  00364	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  00367	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$4[ebp]
  0036d	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  00370	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 7125 : 		pUserInfoHead->bConsumptionType.lScore += pTagerIServerUserItem->GetFrozenedScore();

  00373	8b 45 e0	 mov	 eax, DWORD PTR _pTagerIServerUserItem$6[ebp]
  00376	8b 10		 mov	 edx, DWORD PTR [eax]
  00378	8b 4d e0	 mov	 ecx, DWORD PTR _pTagerIServerUserItem$6[ebp]
  0037b	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00381	ff d0		 call	 eax
  00383	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$4[ebp]
  00389	03 41 25	 add	 eax, DWORD PTR [ecx+37]
  0038c	13 51 29	 adc	 edx, DWORD PTR [ecx+41]
  0038f	8b 8d e4 bf ff
	ff		 mov	 ecx, DWORD PTR _pUserInfoHead$4[ebp]
  00395	89 41 25	 mov	 DWORD PTR [ecx+37], eax
  00398	89 51 29	 mov	 DWORD PTR [ecx+41], edx

; 7126 : 
; 7127 : 		//叠加信息
; 7128 : 		SendPacket.AddPacket(pUserInfo->szNickName,DTP_GR_NICK_NAME);

  0039b	6a 0a		 push	 10			; 0000000aH
  0039d	8b 85 d8 bf ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  003a3	83 c0 0c	 add	 eax, 12			; 0000000cH
  003a6	50		 push	 eax
  003a7	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$3[ebp]
  003ad	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ; CSendPacketHelper::AddPacket

; 7129 : 
; 7130 : 		//发送消息
; 7131 : 		WORD wHeadSize=sizeof(tagMobileUserInfoHead);

  003b2	b8 79 00 00 00	 mov	 eax, 121		; 00000079H
  003b7	66 89 85 d4 bf
	ff ff		 mov	 WORD PTR _wHeadSize$1[ebp], ax

; 7132 : 		SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_USER_ENTER,cbBuffer,wHeadSize+SendPacket.GetDataSize());

  003be	0f b7 b5 d4 bf
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$1[ebp]
  003c5	8d 8d dc bf ff
	ff		 lea	 ecx, DWORD PTR _SendPacket$3[ebp]
  003cb	e8 00 00 00 00	 call	 ?GetDataSize@CSendPacketHelper@@QAEGXZ ; CSendPacketHelper::GetDataSize
  003d0	0f b7 c0	 movzx	 eax, ax
  003d3	03 f0		 add	 esi, eax
  003d5	56		 push	 esi
  003d6	8d 8d e8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$5[ebp]
  003dc	51		 push	 ecx
  003dd	6a 64		 push	 100			; 00000064H
  003df	6a 03		 push	 3
  003e1	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  003e4	52		 push	 edx
  003e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003e8	83 c1 04	 add	 ecx, 4
  003eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ee	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  003f1	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  003f4	ff d0		 call	 eax

; 7133 : 	}

  003f6	e9 12 fd ff ff	 jmp	 $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 7134 : 
; 7135 : 	return true;

  003fb	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7136 : }

  003fd	5f		 pop	 edi
  003fe	5e		 pop	 esi
  003ff	5b		 pop	 ebx
  00400	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00403	33 cd		 xor	 ecx, ebp
  00405	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0040a	8b e5		 mov	 esp, ebp
  0040c	5d		 pop	 ebp
  0040d	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubChairUserInfoReq
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$1 = -76					; size = 4
_wChairID$2 = -72					; size = 2
_wTableID$3 = -68					; size = 2
_pTableFrame$4 = -64					; size = 4
_pTableFrame$5 = -60					; size = 4
_wChairID$6 = -56					; size = 2
_pTableFrame$7 = -52					; size = 4
_nTableIndex$8 = -48					; size = 4
_i$9 = -44						; size = 4
_pTableFrame$10 = -40					; size = 4
_wChairID$11 = -36					; size = 2
_pTableFrame$12 = -32					; size = 4
_nTableIndex$13 = -28					; size = 4
_i$14 = -24						; size = 4
_nStartIndex$ = -20					; size = 4
_bDynamicJoin$ = -13					; size = 1
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserChairReq, COMDAT
; _this$ = ecx

; 6938 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6939 : 	//获取用户
; 6940 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000f	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00012	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00017	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6941 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0001b	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0002b	ff d0		 call	 eax
  0002d	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6942 : 
; 6943 : 	//用户效验
; 6944 : 	ASSERT(pIServerUserItem!=NULL);

  00030	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00034	75 18		 jne	 SHORT $LN32@OnTCPNetwo
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0003b	83 c0 06	 add	 eax, 6
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00044	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00049	85 c0		 test	 eax, eax
  0004b	74 01		 je	 SHORT $LN32@OnTCPNetwo
  0004d	cc		 int	 3
$LN32@OnTCPNetwo:

; 6945 : 	if (pIServerUserItem==NULL)

  0004e	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00052	75 17		 jne	 SHORT $LN8@OnTCPNetwo

; 6946 : 	{
; 6947 : 		CTraceService::TraceString(TEXT("OnTCPNetworkSubUserChairReq"),TraceLevel_Exception);

  00054	6a 03		 push	 3
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GOINLOJB@OnTCPNetworkSubUserChairReq@
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00061	83 c4 08	 add	 esp, 8

; 6948 : 		return false;

  00064	32 c0		 xor	 al, al
  00066	e9 99 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6949 : 	}
; 6950 : 
; 6951 : 	//用户状态
; 6952 : 	if(pIServerUserItem->GetUserStatus() == US_PLAYING)

  0006b	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0006e	8b 10		 mov	 edx, DWORD PTR [eax]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00073	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00076	ff d0		 call	 eax
  00078	0f b6 c8	 movzx	 ecx, al
  0007b	83 f9 05	 cmp	 ecx, 5
  0007e	75 29		 jne	 SHORT $LN9@OnTCPNetwo

; 6953 : 	{
; 6954 : 		//失败
; 6955 : 		m_TableFrameArray[0]->SendRequestFailure(pIServerUserItem,TEXT("您正在游戏中，暂时不能离开，请先结束当前游戏！"),REQUEST_FAILURE_NORMAL);

  00080	6a 00		 push	 0
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@
  00087	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0008a	50		 push	 eax
  0008b	6a 00		 push	 0
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00096	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 6956 : 		return true;

  000a2	b0 01		 mov	 al, 1
  000a4	e9 5b 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6957 : 	}
; 6958 : 
; 6959 : 	//动态加入
; 6960 : 	bool bDynamicJoin=true;

  000a9	c6 45 f3 01	 mov	 BYTE PTR _bDynamicJoin$[ebp], 1

; 6961 : 	if (m_pGameServiceAttrib->cbDynamicJoin==FALSE) bDynamicJoin=false;

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000b3	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  000b7	85 d2		 test	 edx, edx
  000b9	75 04		 jne	 SHORT $LN10@OnTCPNetwo
  000bb	c6 45 f3 00	 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN10@OnTCPNetwo:

; 6962 : 	if (CServerRule::IsAllowDynamicJoin(m_pGameServiceOption->dwServerRule)==false) bDynamicJoin=false;

  000bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000c5	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  000ce	83 c4 04	 add	 esp, 4
  000d1	0f b6 c0	 movzx	 eax, al
  000d4	85 c0		 test	 eax, eax
  000d6	75 04		 jne	 SHORT $LN11@OnTCPNetwo
  000d8	c6 45 f3 00	 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN11@OnTCPNetwo:

; 6963 : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000e2	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000e6	83 fa 10	 cmp	 edx, 16			; 00000010H
  000e9	75 04		 jne	 SHORT $LN12@OnTCPNetwo

; 6964 : 	{
; 6965 : 		bDynamicJoin=false;

  000eb	c6 45 f3 00	 mov	 BYTE PTR _bDynamicJoin$[ebp], 0
$LN12@OnTCPNetwo:

; 6966 : 	}
; 6967 : 
; 6968 : 	//查找桌子
; 6969 : 	INT nStartIndex=rand()%m_pGameServiceOption->wTableCount;

  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  000fb	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  000ff	99		 cdq
  00100	f7 f9		 idiv	 ecx
  00102	89 55 ec	 mov	 DWORD PTR _nStartIndex$[ebp], edx

; 6970 : 	for (INT_PTR i=0;i<(m_pGameServiceOption->wTableCount);i++)

  00105	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$14[ebp], 0
  0010c	eb 09		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  0010e	8b 45 e8	 mov	 eax, DWORD PTR _i$14[ebp]
  00111	83 c0 01	 add	 eax, 1
  00114	89 45 e8	 mov	 DWORD PTR _i$14[ebp], eax
$LN4@OnTCPNetwo:
  00117	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0011d	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00121	39 55 e8	 cmp	 DWORD PTR _i$14[ebp], edx
  00124	0f 8d 48 01 00
	00		 jge	 $LN3@OnTCPNetwo

; 6971 : 	{
; 6972 : 		//定义变量
; 6973 : 		INT nTableIndex=((INT)i+nStartIndex)%(INT)m_pGameServiceOption->wTableCount;

  0012a	8b 45 e8	 mov	 eax, DWORD PTR _i$14[ebp]
  0012d	03 45 ec	 add	 eax, DWORD PTR _nStartIndex$[ebp]
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00136	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  0013a	99		 cdq
  0013b	f7 f9		 idiv	 ecx
  0013d	89 55 e4	 mov	 DWORD PTR _nTableIndex$13[ebp], edx

; 6974 : 
; 6975 : 		//过滤同桌
; 6976 : 		if(nTableIndex == pIServerUserItem->GetTableID())continue;

  00140	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00143	8b 10		 mov	 edx, DWORD PTR [eax]
  00145	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00148	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0014b	ff d0		 call	 eax
  0014d	0f b7 c8	 movzx	 ecx, ax
  00150	39 4d e4	 cmp	 DWORD PTR _nTableIndex$13[ebp], ecx
  00153	75 02		 jne	 SHORT $LN13@OnTCPNetwo
  00155	eb b7		 jmp	 SHORT $LN2@OnTCPNetwo
$LN13@OnTCPNetwo:

; 6977 : 
; 6978 : 		//获取桌子
; 6979 : 		CTableFrame * pTableFrame=m_TableFrameArray[nTableIndex];

  00157	8b 45 e4	 mov	 eax, DWORD PTR _nTableIndex$13[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00164	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00169	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016b	89 4d e0	 mov	 DWORD PTR _pTableFrame$12[ebp], ecx

; 6980 : 		if ((pTableFrame->IsGameStarted()==true)&&(bDynamicJoin==false)) continue;

  0016e	8b 45 e0	 mov	 eax, DWORD PTR _pTableFrame$12[ebp]
  00171	8b 10		 mov	 edx, DWORD PTR [eax]
  00173	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  00176	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00179	ff d0		 call	 eax
  0017b	0f b6 c8	 movzx	 ecx, al
  0017e	83 f9 01	 cmp	 ecx, 1
  00181	75 0a		 jne	 SHORT $LN14@OnTCPNetwo
  00183	0f b6 45 f3	 movzx	 eax, BYTE PTR _bDynamicJoin$[ebp]
  00187	85 c0		 test	 eax, eax
  00189	75 02		 jne	 SHORT $LN14@OnTCPNetwo
  0018b	eb 81		 jmp	 SHORT $LN2@OnTCPNetwo
$LN14@OnTCPNetwo:

; 6981 : 		if(pTableFrame->IsTableLocked()) continue;

  0018d	8b 45 e0	 mov	 eax, DWORD PTR _pTableFrame$12[ebp]
  00190	8b 10		 mov	 edx, DWORD PTR [eax]
  00192	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  00195	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00198	ff d0		 call	 eax
  0019a	0f b6 c8	 movzx	 ecx, al
  0019d	85 c9		 test	 ecx, ecx
  0019f	74 05		 je	 SHORT $LN15@OnTCPNetwo
  001a1	e9 68 ff ff ff	 jmp	 $LN2@OnTCPNetwo
$LN15@OnTCPNetwo:

; 6982 : 		if(pTableFrame->GetChairCount()==pTableFrame->GetNullChairCount()) continue;

  001a6	8b 45 e0	 mov	 eax, DWORD PTR _pTableFrame$12[ebp]
  001a9	8b 10		 mov	 edx, DWORD PTR [eax]
  001ab	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  001ae	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001b1	ff d0		 call	 eax
  001b3	0f b7 f0	 movzx	 esi, ax
  001b6	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  001b9	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bb	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  001be	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  001c1	ff d0		 call	 eax
  001c3	0f b7 c8	 movzx	 ecx, ax
  001c6	3b f1		 cmp	 esi, ecx
  001c8	75 05		 jne	 SHORT $LN16@OnTCPNetwo
  001ca	e9 3f ff ff ff	 jmp	 $LN2@OnTCPNetwo
$LN16@OnTCPNetwo:

; 6983 : 
; 6984 : 		//无效过滤
; 6985 : 		WORD wChairID=pTableFrame->GetRandNullChairID();

  001cf	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  001d2	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  001d7	66 89 45 dc	 mov	 WORD PTR _wChairID$11[ebp], ax

; 6986 : 		if (wChairID==INVALID_CHAIR) continue;

  001db	0f b7 45 dc	 movzx	 eax, WORD PTR _wChairID$11[ebp]
  001df	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  001e4	75 05		 jne	 SHORT $LN17@OnTCPNetwo
  001e6	e9 23 ff ff ff	 jmp	 $LN2@OnTCPNetwo
$LN17@OnTCPNetwo:

; 6987 : 
; 6988 : 		//离开处理
; 6989 : 		if (pIServerUserItem->GetTableID()!=INVALID_TABLE)

  001eb	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ee	8b 10		 mov	 edx, DWORD PTR [eax]
  001f0	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001f3	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  001f6	ff d0		 call	 eax
  001f8	0f b7 c8	 movzx	 ecx, ax
  001fb	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00201	74 48		 je	 SHORT $LN18@OnTCPNetwo

; 6990 : 		{
; 6991 : 			CTableFrame * pTableFrame=m_TableFrameArray[pIServerUserItem->GetTableID()];

  00203	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00206	8b 10		 mov	 edx, DWORD PTR [eax]
  00208	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0020b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0020e	ff d0		 call	 eax
  00210	0f b7 c8	 movzx	 ecx, ax
  00213	51		 push	 ecx
  00214	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00217	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0021d	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00222	8b 10		 mov	 edx, DWORD PTR [eax]
  00224	89 55 d8	 mov	 DWORD PTR _pTableFrame$10[ebp], edx

; 6992 : 			if (pTableFrame->PerformStandUpAction(pIServerUserItem)==false) return true;

  00227	6a 00		 push	 0
  00229	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0022c	50		 push	 eax
  0022d	8b 4d d8	 mov	 ecx, DWORD PTR _pTableFrame$10[ebp]
  00230	8b 11		 mov	 edx, DWORD PTR [ecx]
  00232	8b 4d d8	 mov	 ecx, DWORD PTR _pTableFrame$10[ebp]
  00235	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  0023b	ff d0		 call	 eax
  0023d	0f b6 c8	 movzx	 ecx, al
  00240	85 c9		 test	 ecx, ecx
  00242	75 07		 jne	 SHORT $LN18@OnTCPNetwo
  00244	b0 01		 mov	 al, 1
  00246	e9 b9 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 6993 : 		}
; 6994 : 
; 6995 : 		//用户坐下
; 6996 : 		return pTableFrame->PerformSitDownAction(wChairID,pIServerUserItem);;

  0024b	6a 00		 push	 0
  0024d	6a 00		 push	 0
  0024f	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00252	50		 push	 eax
  00253	0f b7 4d dc	 movzx	 ecx, WORD PTR _wChairID$11[ebp]
  00257	51		 push	 ecx
  00258	8b 55 e0	 mov	 edx, DWORD PTR _pTableFrame$12[ebp]
  0025b	8b 02		 mov	 eax, DWORD PTR [edx]
  0025d	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$12[ebp]
  00260	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  00266	ff d2		 call	 edx
  00268	e9 97 02 00 00	 jmp	 $LN1@OnTCPNetwo

; 6997 : 	}

  0026d	e9 9c fe ff ff	 jmp	 $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6998 : 
; 6999 : 	//查找桌子
; 7000 : 	nStartIndex=rand()%m_pGameServiceOption->wTableCount;

  00272	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00278	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027b	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0027e	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  00282	99		 cdq
  00283	f7 f9		 idiv	 ecx
  00285	89 55 ec	 mov	 DWORD PTR _nStartIndex$[ebp], edx

; 7001 : 	for (INT_PTR i=0;i<(m_pGameServiceOption->wTableCount);i++)

  00288	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  0028f	eb 09		 jmp	 SHORT $LN7@OnTCPNetwo
$LN5@OnTCPNetwo:
  00291	8b 45 d4	 mov	 eax, DWORD PTR _i$9[ebp]
  00294	83 c0 01	 add	 eax, 1
  00297	89 45 d4	 mov	 DWORD PTR _i$9[ebp], eax
$LN7@OnTCPNetwo:
  0029a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0029d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  002a0	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  002a4	39 55 d4	 cmp	 DWORD PTR _i$9[ebp], edx
  002a7	0f 8d 1f 01 00
	00		 jge	 $LN6@OnTCPNetwo

; 7002 : 	{
; 7003 : 		//定义变量
; 7004 : 		INT nTableIndex=((INT)i+nStartIndex)%(INT)m_pGameServiceOption->wTableCount;

  002ad	8b 45 d4	 mov	 eax, DWORD PTR _i$9[ebp]
  002b0	03 45 ec	 add	 eax, DWORD PTR _nStartIndex$[ebp]
  002b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b6	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  002b9	0f b7 4a 46	 movzx	 ecx, WORD PTR [edx+70]
  002bd	99		 cdq
  002be	f7 f9		 idiv	 ecx
  002c0	89 55 d0	 mov	 DWORD PTR _nTableIndex$8[ebp], edx

; 7005 : 
; 7006 : 		//过滤同桌
; 7007 : 		if(nTableIndex == pIServerUserItem->GetTableID())continue;

  002c3	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002c6	8b 10		 mov	 edx, DWORD PTR [eax]
  002c8	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002cb	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  002ce	ff d0		 call	 eax
  002d0	0f b7 c8	 movzx	 ecx, ax
  002d3	39 4d d0	 cmp	 DWORD PTR _nTableIndex$8[ebp], ecx
  002d6	75 02		 jne	 SHORT $LN20@OnTCPNetwo
  002d8	eb b7		 jmp	 SHORT $LN5@OnTCPNetwo
$LN20@OnTCPNetwo:

; 7008 : 
; 7009 : 		//获取桌子
; 7010 : 		CTableFrame * pTableFrame=m_TableFrameArray[nTableIndex];

  002da	8b 45 d0	 mov	 eax, DWORD PTR _nTableIndex$8[ebp]
  002dd	50		 push	 eax
  002de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e1	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  002e7	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  002ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ee	89 4d cc	 mov	 DWORD PTR _pTableFrame$7[ebp], ecx

; 7011 : 		if ((pTableFrame->IsGameStarted()==true)&&(bDynamicJoin==false)) continue;

  002f1	8b 45 cc	 mov	 eax, DWORD PTR _pTableFrame$7[ebp]
  002f4	8b 10		 mov	 edx, DWORD PTR [eax]
  002f6	8b 4d cc	 mov	 ecx, DWORD PTR _pTableFrame$7[ebp]
  002f9	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  002fc	ff d0		 call	 eax
  002fe	0f b6 c8	 movzx	 ecx, al
  00301	83 f9 01	 cmp	 ecx, 1
  00304	75 0a		 jne	 SHORT $LN21@OnTCPNetwo
  00306	0f b6 45 f3	 movzx	 eax, BYTE PTR _bDynamicJoin$[ebp]
  0030a	85 c0		 test	 eax, eax
  0030c	75 02		 jne	 SHORT $LN21@OnTCPNetwo
  0030e	eb 81		 jmp	 SHORT $LN5@OnTCPNetwo
$LN21@OnTCPNetwo:

; 7012 : 		if(pTableFrame->IsTableLocked()) continue;

  00310	8b 45 cc	 mov	 eax, DWORD PTR _pTableFrame$7[ebp]
  00313	8b 10		 mov	 edx, DWORD PTR [eax]
  00315	8b 4d cc	 mov	 ecx, DWORD PTR _pTableFrame$7[ebp]
  00318	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0031b	ff d0		 call	 eax
  0031d	0f b6 c8	 movzx	 ecx, al
  00320	85 c9		 test	 ecx, ecx
  00322	74 05		 je	 SHORT $LN22@OnTCPNetwo
  00324	e9 68 ff ff ff	 jmp	 $LN5@OnTCPNetwo
$LN22@OnTCPNetwo:

; 7013 : 
; 7014 : 		//无效过滤
; 7015 : 		WORD wChairID=pTableFrame->GetRandNullChairID();

  00329	8b 4d cc	 mov	 ecx, DWORD PTR _pTableFrame$7[ebp]
  0032c	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00331	66 89 45 c8	 mov	 WORD PTR _wChairID$6[ebp], ax

; 7016 : 		if (wChairID==INVALID_CHAIR) continue;

  00335	0f b7 45 c8	 movzx	 eax, WORD PTR _wChairID$6[ebp]
  00339	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0033e	75 05		 jne	 SHORT $LN23@OnTCPNetwo
  00340	e9 4c ff ff ff	 jmp	 $LN5@OnTCPNetwo
$LN23@OnTCPNetwo:

; 7017 : 
; 7018 : 		//离开处理
; 7019 : 		if (pIServerUserItem->GetTableID()!=INVALID_TABLE)

  00345	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00348	8b 10		 mov	 edx, DWORD PTR [eax]
  0034a	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0034d	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00350	ff d0		 call	 eax
  00352	0f b7 c8	 movzx	 ecx, ax
  00355	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0035b	74 48		 je	 SHORT $LN24@OnTCPNetwo

; 7020 : 		{
; 7021 : 			CTableFrame * pTableFrame=m_TableFrameArray[pIServerUserItem->GetTableID()];

  0035d	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00360	8b 10		 mov	 edx, DWORD PTR [eax]
  00362	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00365	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00368	ff d0		 call	 eax
  0036a	0f b7 c8	 movzx	 ecx, ax
  0036d	51		 push	 ecx
  0036e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00371	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00377	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0037c	8b 10		 mov	 edx, DWORD PTR [eax]
  0037e	89 55 c4	 mov	 DWORD PTR _pTableFrame$5[ebp], edx

; 7022 : 			if (pTableFrame->PerformStandUpAction(pIServerUserItem)==false) return true;

  00381	6a 00		 push	 0
  00383	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00386	50		 push	 eax
  00387	8b 4d c4	 mov	 ecx, DWORD PTR _pTableFrame$5[ebp]
  0038a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0038c	8b 4d c4	 mov	 ecx, DWORD PTR _pTableFrame$5[ebp]
  0038f	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00395	ff d0		 call	 eax
  00397	0f b6 c8	 movzx	 ecx, al
  0039a	85 c9		 test	 ecx, ecx
  0039c	75 07		 jne	 SHORT $LN24@OnTCPNetwo
  0039e	b0 01		 mov	 al, 1
  003a0	e9 5f 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN24@OnTCPNetwo:

; 7023 : 		}
; 7024 : 
; 7025 : 		//用户坐下
; 7026 : 		return pTableFrame->PerformSitDownAction(wChairID,pIServerUserItem);

  003a5	6a 00		 push	 0
  003a7	6a 00		 push	 0
  003a9	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003ac	50		 push	 eax
  003ad	0f b7 4d c8	 movzx	 ecx, WORD PTR _wChairID$6[ebp]
  003b1	51		 push	 ecx
  003b2	8b 55 cc	 mov	 edx, DWORD PTR _pTableFrame$7[ebp]
  003b5	8b 02		 mov	 eax, DWORD PTR [edx]
  003b7	8b 4d cc	 mov	 ecx, DWORD PTR _pTableFrame$7[ebp]
  003ba	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  003c0	ff d2		 call	 edx
  003c2	e9 3d 01 00 00	 jmp	 $LN1@OnTCPNetwo

; 7027 : 	}

  003c7	e9 c5 fe ff ff	 jmp	 $LN5@OnTCPNetwo
$LN6@OnTCPNetwo:

; 7028 : 
; 7029 : 	//查找同桌
; 7030 : 	if(pIServerUserItem->GetTableID() != INVALID_TABLE)

  003cc	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003cf	8b 10		 mov	 edx, DWORD PTR [eax]
  003d1	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003d4	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  003d7	ff d0		 call	 eax
  003d9	0f b7 c8	 movzx	 ecx, ax
  003dc	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  003e2	0f 84 f8 00 00
	00		 je	 $LN26@OnTCPNetwo

; 7031 : 	{
; 7032 : 		//获取桌子
; 7033 : 		CTableFrame * pTableFrame=m_TableFrameArray[pIServerUserItem->GetTableID()];

  003e8	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003eb	8b 10		 mov	 edx, DWORD PTR [eax]
  003ed	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003f0	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  003f3	ff d0		 call	 eax
  003f5	0f b7 c8	 movzx	 ecx, ax
  003f8	51		 push	 ecx
  003f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003fc	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00402	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00407	8b 10		 mov	 edx, DWORD PTR [eax]
  00409	89 55 c0	 mov	 DWORD PTR _pTableFrame$4[ebp], edx

; 7034 : 		if (pTableFrame->IsGameStarted()==false && pTableFrame->IsTableLocked()==false)

  0040c	8b 45 c0	 mov	 eax, DWORD PTR _pTableFrame$4[ebp]
  0040f	8b 10		 mov	 edx, DWORD PTR [eax]
  00411	8b 4d c0	 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  00414	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00417	ff d0		 call	 eax
  00419	0f b6 c8	 movzx	 ecx, al
  0041c	85 c9		 test	 ecx, ecx
  0041e	0f 85 bc 00 00
	00		 jne	 $LN26@OnTCPNetwo
  00424	8b 45 c0	 mov	 eax, DWORD PTR _pTableFrame$4[ebp]
  00427	8b 10		 mov	 edx, DWORD PTR [eax]
  00429	8b 4d c0	 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  0042c	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0042f	ff d0		 call	 eax
  00431	0f b6 c8	 movzx	 ecx, al
  00434	85 c9		 test	 ecx, ecx
  00436	0f 85 a4 00 00
	00		 jne	 $LN26@OnTCPNetwo

; 7035 : 		{
; 7036 : 			//无效过滤
; 7037 : 			WORD wTableID=pIServerUserItem->GetTableID();

  0043c	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0043f	8b 10		 mov	 edx, DWORD PTR [eax]
  00441	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00444	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00447	ff d0		 call	 eax
  00449	66 89 45 bc	 mov	 WORD PTR _wTableID$3[ebp], ax

; 7038 : 			WORD wChairID=pTableFrame->GetRandNullChairID();

  0044d	8b 4d c0	 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  00450	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00455	66 89 45 b8	 mov	 WORD PTR _wChairID$2[ebp], ax

; 7039 : 			if (wChairID!=INVALID_CHAIR)

  00459	0f b7 45 b8	 movzx	 eax, WORD PTR _wChairID$2[ebp]
  0045d	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00462	74 7c		 je	 SHORT $LN26@OnTCPNetwo

; 7040 : 			{
; 7041 : 				//离开处理
; 7042 : 				if (pIServerUserItem->GetTableID()!=INVALID_TABLE)

  00464	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00467	8b 10		 mov	 edx, DWORD PTR [eax]
  00469	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0046c	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0046f	ff d0		 call	 eax
  00471	0f b7 c8	 movzx	 ecx, ax
  00474	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0047a	74 45		 je	 SHORT $LN29@OnTCPNetwo

; 7043 : 				{
; 7044 : 					CTableFrame * pTableFrame=m_TableFrameArray[pIServerUserItem->GetTableID()];

  0047c	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0047f	8b 10		 mov	 edx, DWORD PTR [eax]
  00481	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00484	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00487	ff d0		 call	 eax
  00489	0f b7 c8	 movzx	 ecx, ax
  0048c	51		 push	 ecx
  0048d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00490	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00496	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0049b	8b 10		 mov	 edx, DWORD PTR [eax]
  0049d	89 55 b4	 mov	 DWORD PTR _pTableFrame$1[ebp], edx

; 7045 : 					if (pTableFrame->PerformStandUpAction(pIServerUserItem)==false) return true;

  004a0	6a 00		 push	 0
  004a2	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004a5	50		 push	 eax
  004a6	8b 4d b4	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  004a9	8b 11		 mov	 edx, DWORD PTR [ecx]
  004ab	8b 4d b4	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  004ae	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  004b4	ff d0		 call	 eax
  004b6	0f b6 c8	 movzx	 ecx, al
  004b9	85 c9		 test	 ecx, ecx
  004bb	75 04		 jne	 SHORT $LN29@OnTCPNetwo
  004bd	b0 01		 mov	 al, 1
  004bf	eb 43		 jmp	 SHORT $LN1@OnTCPNetwo
$LN29@OnTCPNetwo:

; 7046 : 				}
; 7047 : 
; 7048 : 				//用户坐下
; 7049 : 				return pTableFrame->PerformSitDownAction(wChairID,pIServerUserItem);;

  004c1	6a 00		 push	 0
  004c3	6a 00		 push	 0
  004c5	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004c8	50		 push	 eax
  004c9	0f b7 4d b8	 movzx	 ecx, WORD PTR _wChairID$2[ebp]
  004cd	51		 push	 ecx
  004ce	8b 55 c0	 mov	 edx, DWORD PTR _pTableFrame$4[ebp]
  004d1	8b 02		 mov	 eax, DWORD PTR [edx]
  004d3	8b 4d c0	 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  004d6	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  004dc	ff d2		 call	 edx
  004de	eb 24		 jmp	 SHORT $LN1@OnTCPNetwo
$LN26@OnTCPNetwo:

; 7050 : 			}
; 7051 : 		}
; 7052 : 	}
; 7053 : 
; 7054 : 	//失败
; 7055 : 	m_TableFrameArray[0]->SendRequestFailure(pIServerUserItem,TEXT("没找到可进入的游戏桌！"),REQUEST_FAILURE_NORMAL);

  004e0	6a 00		 push	 0
  004e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GBDECKFN@?C?$LL?U?R?$LF?$LN?$LP?I?$LN?x?H?k?$LF?D?S?N?O?$LH?W?$MA?$KD?$KB@
  004e7	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004ea	50		 push	 eax
  004eb	6a 00		 push	 0
  004ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004f0	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  004f6	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  004fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fd	e8 00 00 00 00	 call	 ?SendRequestFailure@CTableFrame@@QAE_NPAUIServerUserItem@@PBDJ@Z ; CTableFrame::SendRequestFailure

; 7056 : 	return true;

  00502	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 7057 : }

  00504	5f		 pop	 edi
  00505	5e		 pop	 esi
  00506	5b		 pop	 ebx
  00507	8b e5		 mov	 esp, ebp
  00509	5d		 pop	 ebp
  0050a	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserChairReq
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_wMaxDeskPos$ = -24					; size = 2
_wNewDeskPos$ = -20					; size = 2
_pUserInfoReq$ = -16					; size = 4
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserInfoReq, COMDAT
; _this$ = ecx

; 6901 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6902 : 	//效验参数
; 6903 : 	ASSERT(wDataSize==sizeof(CMD_GR_UserInfoReq));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 06	 cmp	 eax, 6
  00013	74 19		 je	 SHORT $LN6@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0002d	cc		 int	 3
$LN6@OnTCPNetwo:

; 6904 : 	if (wDataSize!=sizeof(CMD_GR_UserInfoReq)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 06	 cmp	 eax, 6
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 c0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6905 : 
; 6906 : 	//获取用户
; 6907 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0003e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00046	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6908 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0004a	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005a	ff d0		 call	 eax
  0005c	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6909 : 
; 6910 : 	//用户效验
; 6911 : 	ASSERT(pIServerUserItem!=NULL);

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00063	75 18		 jne	 SHORT $LN7@OnTCPNetwo
  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0006a	83 c0 0a	 add	 eax, 10			; 0000000aH
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN7@OnTCPNetwo
  0007c	cc		 int	 3
$LN7@OnTCPNetwo:

; 6912 : 	if (pIServerUserItem==NULL)

  0007d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00081	75 14		 jne	 SHORT $LN3@OnTCPNetwo

; 6913 : 	{
; 6914 : 		CTraceService::TraceString(TEXT("OnTCPNetworkSubUserInfoReq"),TraceLevel_Exception);

  00083	6a 03		 push	 3
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OFHFAKJ@OnTCPNetworkSubUserInfoReq@
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00090	83 c4 08	 add	 esp, 8

; 6915 : 
; 6916 : 		return false;

  00093	32 c0		 xor	 al, al
  00095	eb 67		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6917 : 	}
; 6918 : 
; 6919 : 	//变量定义
; 6920 : 	CMD_GR_UserInfoReq * pUserInfoReq = (CMD_GR_UserInfoReq *)pData;

  00097	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0009a	89 45 f0	 mov	 DWORD PTR _pUserInfoReq$[ebp], eax

; 6921 : 	WORD wNewDeskPos = pUserInfoReq->wTablePos;

  0009d	8b 45 f0	 mov	 eax, DWORD PTR _pUserInfoReq$[ebp]
  000a0	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  000a4	66 89 4d ec	 mov	 WORD PTR _wNewDeskPos$[ebp], cx

; 6922 : 	WORD wMaxDeskPos = m_pGameServiceOption->wTableCount-m_pInitParameter->m_wVisibleTableCount;

  000a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000ae	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  000b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000b8	0f b7 41 6c	 movzx	 eax, WORD PTR [ecx+108]
  000bc	2b d0		 sub	 edx, eax
  000be	66 89 55 e8	 mov	 WORD PTR _wMaxDeskPos$[ebp], dx

; 6923 : 
; 6924 : 	//数量效验
; 6925 : 	if(wNewDeskPos > wMaxDeskPos) wNewDeskPos = wMaxDeskPos;

  000c2	0f b7 45 ec	 movzx	 eax, WORD PTR _wNewDeskPos$[ebp]
  000c6	0f b7 4d e8	 movzx	 ecx, WORD PTR _wMaxDeskPos$[ebp]
  000ca	3b c1		 cmp	 eax, ecx
  000cc	7e 08		 jle	 SHORT $LN4@OnTCPNetwo
  000ce	66 8b 45 e8	 mov	 ax, WORD PTR _wMaxDeskPos$[ebp]
  000d2	66 89 45 ec	 mov	 WORD PTR _wNewDeskPos$[ebp], ax
$LN4@OnTCPNetwo:

; 6926 : 
; 6927 : 	//更新信息
; 6928 : 	pIServerUserItem->SetMobileUserDeskPos(wNewDeskPos);

  000d6	0f b7 45 ec	 movzx	 eax, WORD PTR _wNewDeskPos$[ebp]
  000da	50		 push	 eax
  000db	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000de	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e3	8b 82 30 01 00
	00		 mov	 eax, DWORD PTR [edx+304]
  000e9	ff d0		 call	 eax

; 6929 : 	
; 6930 : 	//发送信息
; 6931 : 	SendVisibleTableUserInfoToMobileUser(pIServerUserItem,wNewDeskPos);

  000eb	0f b7 45 ec	 movzx	 eax, WORD PTR _wNewDeskPos$[ebp]
  000ef	50		 push	 eax
  000f0	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f3	51		 push	 ecx
  000f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	e8 00 00 00 00	 call	 ?SendVisibleTableUserInfoToMobileUser@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ; CAttemperEngineSink::SendVisibleTableUserInfoToMobileUser

; 6932 : 
; 6933 : 	return true;

  000fc	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6934 : }

  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserInfoReq
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$1 = -612					; size = 4
_szMessage$2 = -608					; size = 64
_wTargerTableID$ = -544					; size = 2
_szMessage$3 = -540					; size = 256
_pPropertyBuff$ = -284					; size = 4
_szMessage$4 = -280					; size = 256
_pITargetUserItem$ = -24				; size = 4
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pKickUser$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubMemberKickUser, COMDAT
; _this$ = ecx

; 6817 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 02 00
	00		 sub	 esp, 740		; 000002e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6818 : 	//效验参数
; 6819 : 	ASSERT(wDataSize==sizeof(CMD_GR_KickUser));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 04	 cmp	 eax, 4
  00020	74 19		 je	 SHORT $LN14@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN14@OnTCPNetwo
  0003a	cc		 int	 3
$LN14@OnTCPNetwo:

; 6820 : 	if (wDataSize!=sizeof(CMD_GR_KickUser)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 04	 cmp	 eax, 4
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 85 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6821 : 
; 6822 : 	//变量定义
; 6823 : 	CMD_GR_KickUser * pKickUser=(CMD_GR_KickUser *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pKickUser$[ebp], eax

; 6824 : 
; 6825 : 	//获取用户
; 6826 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00051	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00054	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00059	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6827 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0005d	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00061	50		 push	 eax
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0006d	ff d0		 call	 eax
  0006f	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6828 : 
; 6829 : 	//目标用户
; 6830 : 	IServerUserItem * pITargetUserItem = m_ServerUserManager.SearchUserItem(pKickUser->dwTargetUserID);

  00072	8b 45 f4	 mov	 eax, DWORD PTR _pKickUser$[ebp]
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	51		 push	 ecx
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00081	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0008a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008d	ff d2		 call	 edx
  0008f	89 45 e8	 mov	 DWORD PTR _pITargetUserItem$[ebp], eax

; 6831 : 	if(pITargetUserItem==NULL) return true;

  00092	83 7d e8 00	 cmp	 DWORD PTR _pITargetUserItem$[ebp], 0
  00096	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00098	b0 01		 mov	 al, 1
  0009a	e9 31 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6832 : 
; 6833 : 	//用户效验
; 6834 : 	ASSERT((pIServerUserItem!=NULL)&&(pIServerUserItem->GetMemberOrder()>pITargetUserItem->GetMemberOrder()));

  0009f	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a3	74 2a		 je	 SHORT $LN15@OnTCPNetwo
  000a5	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a8	8b 10		 mov	 edx, DWORD PTR [eax]
  000aa	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ad	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  000b3	ff d0		 call	 eax
  000b5	0f b6 f0	 movzx	 esi, al
  000b8	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  000bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  000c0	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  000c6	ff d0		 call	 eax
  000c8	0f b6 c8	 movzx	 ecx, al
  000cb	3b f1		 cmp	 esi, ecx
  000cd	7f 19		 jg	 SHORT $LN16@OnTCPNetwo
$LN15@OnTCPNetwo:
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000d5	83 c2 11	 add	 edx, 17			; 00000011H
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000de	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000e3	85 c0		 test	 eax, eax
  000e5	74 01		 je	 SHORT $LN16@OnTCPNetwo
  000e7	cc		 int	 3
$LN16@OnTCPNetwo:

; 6835 : 	if ((pIServerUserItem==NULL)||(pIServerUserItem->GetMemberOrder()<=pITargetUserItem->GetMemberOrder())) return false;

  000e8	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000ec	74 2a		 je	 SHORT $LN5@OnTCPNetwo
  000ee	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f1	8b 10		 mov	 edx, DWORD PTR [eax]
  000f3	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f6	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  000fc	ff d0		 call	 eax
  000fe	0f b6 f0	 movzx	 esi, al
  00101	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00104	8b 11		 mov	 edx, DWORD PTR [ecx]
  00106	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00109	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  0010f	ff d0		 call	 eax
  00111	0f b6 c8	 movzx	 ecx, al
  00114	3b f1		 cmp	 esi, ecx
  00116	7f 07		 jg	 SHORT $LN4@OnTCPNetwo
$LN5@OnTCPNetwo:
  00118	32 c0		 xor	 al, al
  0011a	e9 b1 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6836 : 
; 6837 : 	//权限判断
; 6838 : 	ASSERT(CUserRight::CanKillOutUser(pIServerUserItem->GetUserRight())==true);

  0011f	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00122	8b 10		 mov	 edx, DWORD PTR [eax]
  00124	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00127	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0012a	ff d0		 call	 eax
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 ?CanKillOutUser@CUserRight@@SA_NK@Z ; CUserRight::CanKillOutUser
  00132	83 c4 04	 add	 esp, 4
  00135	0f b6 c8	 movzx	 ecx, al
  00138	83 f9 01	 cmp	 ecx, 1
  0013b	74 19		 je	 SHORT $LN17@OnTCPNetwo
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00143	83 c2 15	 add	 edx, 21			; 00000015H
  00146	52		 push	 edx
  00147	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0014c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00151	85 c0		 test	 eax, eax
  00153	74 01		 je	 SHORT $LN17@OnTCPNetwo
  00155	cc		 int	 3
$LN17@OnTCPNetwo:

; 6839 : 	if (CUserRight::CanKillOutUser(pIServerUserItem->GetUserRight())==false) return false;

  00156	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00159	8b 10		 mov	 edx, DWORD PTR [eax]
  0015b	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0015e	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00161	ff d0		 call	 eax
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ?CanKillOutUser@CUserRight@@SA_NK@Z ; CUserRight::CanKillOutUser
  00169	83 c4 04	 add	 esp, 4
  0016c	0f b6 c8	 movzx	 ecx, al
  0016f	85 c9		 test	 ecx, ecx
  00171	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00173	32 c0		 xor	 al, al
  00175	e9 56 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6840 : 
; 6841 : 	//禁踢管理员
; 6842 : 	if(pITargetUserItem->GetMasterOrder() > 0)

  0017a	8b 45 e8	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  0017d	8b 10		 mov	 edx, DWORD PTR [eax]
  0017f	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00182	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00188	ff d0		 call	 eax
  0018a	0f b6 c8	 movzx	 ecx, al
  0018d	85 c9		 test	 ecx, ecx
  0018f	7e 23		 jle	 SHORT $LN7@OnTCPNetwo

; 6843 : 	{
; 6844 : 		//发送消息
; 6845 : 		SendRoomMessage(pIServerUserItem,TEXT("很抱歉，踢出管理员是不被允许的！"),SMT_EJECT);

  00191	6a 02		 push	 2
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KLELGMNL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?L?$NP?$LD?v?$LJ?$NM?$MA?m?T?$LB?J?G?$LC?$LL?$LB?$LL?T?J?P?m?$LF?D?$KD@
  00198	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0019f	83 c1 04	 add	 ecx, 4
  001a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001a5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001a8	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001ab	ff d2		 call	 edx

; 6846 : 		return true;

  001ad	b0 01		 mov	 al, 1
  001af	e9 1c 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6847 : 	}
; 6848 : 
; 6849 : 	//百人游戏
; 6850 : 	if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR)

  001b4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001b7	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  001ba	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  001be	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  001c4	7c 23		 jl	 SHORT $LN8@OnTCPNetwo

; 6851 : 	{
; 6852 : 		//发送消息
; 6853 : 		SendRoomMessage(pIServerUserItem,TEXT("很抱歉，百人游戏不许踢人！"),SMT_EJECT);

  001c6	6a 02		 push	 2
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FDOJANAH@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?$LC?$LL?P?m?L?$NP?H?K?$KD?$KB@
  001cd	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001d0	50		 push	 eax
  001d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d4	83 c1 04	 add	 ecx, 4
  001d7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001da	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001dd	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001e0	ff d2		 call	 edx

; 6854 : 		return true;

  001e2	b0 01		 mov	 al, 1
  001e4	e9 e7 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6855 : 	}
; 6856 : 
; 6857 : 	//用户状态
; 6858 : 	if(pITargetUserItem->GetUserStatus()==US_PLAYING)

  001e9	8b 45 e8	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  001ec	8b 10		 mov	 edx, DWORD PTR [eax]
  001ee	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  001f1	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  001f4	ff d0		 call	 eax
  001f6	0f b6 c8	 movzx	 ecx, al
  001f9	83 f9 05	 cmp	 ecx, 5
  001fc	75 6d		 jne	 SHORT $LN9@OnTCPNetwo

; 6859 : 	{
; 6860 : 		//变量定义
; 6861 : 		TCHAR szMessage[256]=TEXT("");

  001fe	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00203	88 85 e8 fe ff
	ff		 mov	 BYTE PTR _szMessage$4[ebp], al
  00209	68 ff 00 00 00	 push	 255			; 000000ffH
  0020e	6a 00		 push	 0
  00210	8d 85 e9 fe ff
	ff		 lea	 eax, DWORD PTR _szMessage$4[ebp+1]
  00216	50		 push	 eax
  00217	e8 00 00 00 00	 call	 _memset
  0021c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6862 : 		_sntprintf_s(szMessage,CountArray(szMessage),TEXT("由于玩家 [ %s ] 正在游戏中,您不能将它踢出游戏！"),pITargetUserItem->GetNickName());

  0021f	8b 45 e8	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00222	8b 10		 mov	 edx, DWORD PTR [eax]
  00224	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00227	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  0022a	ff d0		 call	 eax
  0022c	50		 push	 eax
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@FMANDGLC@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?S?N?O?$LH?V?P?0?D?z?$LC?$LL@
  00232	68 00 01 00 00	 push	 256			; 00000100H
  00237	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _szMessage$4[ebp]
  0023d	51		 push	 ecx
  0023e	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ ; _snprintf_s<256>
  00243	83 c4 10	 add	 esp, 16			; 00000010H

; 6863 : 
; 6864 : 		//发送消息
; 6865 : 		SendRoomMessage(pIServerUserItem,szMessage,SMT_EJECT);

  00246	6a 02		 push	 2
  00248	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szMessage$4[ebp]
  0024e	50		 push	 eax
  0024f	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00252	51		 push	 ecx
  00253	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00256	83 c1 04	 add	 ecx, 4
  00259	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0025c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0025f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00262	ff d2		 call	 edx

; 6866 : 		return true;

  00264	b0 01		 mov	 al, 1
  00266	e9 65 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6867 : 	}
; 6868 : 
; 6869 : 	//查找防踢卡
; 6870 : 	tagPropertyBuff* pPropertyBuff = CGamePropertyManager::SearchValidPropertyBuff(pIServerUserItem->GetUserID(), PROP_KIND_DEFENSE_TICK);

  0026b	6a 05		 push	 5
  0026d	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00270	8b 10		 mov	 edx, DWORD PTR [eax]
  00272	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00275	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00278	ff d0		 call	 eax
  0027a	50		 push	 eax
  0027b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SearchValidPropertyBuff@CGamePropertyManager@@SAPAUtagPropertyBuff@@KW4PROP_KIND@@@Z
  00281	83 c4 08	 add	 esp, 8
  00284	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _pPropertyBuff$[ebp], eax

; 6871 : 	if(pPropertyBuff != NULL)

  0028a	83 bd e4 fe ff
	ff 00		 cmp	 DWORD PTR _pPropertyBuff$[ebp], 0
  00291	74 6d		 je	 SHORT $LN10@OnTCPNetwo

; 6872 : 	{
; 6873 : 		//变量定义
; 6874 : 		TCHAR szMessage[256]=TEXT("");

  00293	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00298	88 85 e4 fd ff
	ff		 mov	 BYTE PTR _szMessage$3[ebp], al
  0029e	68 ff 00 00 00	 push	 255			; 000000ffH
  002a3	6a 00		 push	 0
  002a5	8d 85 e5 fd ff
	ff		 lea	 eax, DWORD PTR _szMessage$3[ebp+1]
  002ab	50		 push	 eax
  002ac	e8 00 00 00 00	 call	 _memset
  002b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6875 : 		_sntprintf_s(szMessage,CountArray(szMessage),TEXT("由于玩家 [ %s ] 正在使用防踢卡,您无法将它踢出游戏！"),pITargetUserItem->GetNickName());

  002b4	8b 45 e8	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  002b7	8b 10		 mov	 edx, DWORD PTR [eax]
  002b9	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  002bc	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  002bf	ff d0		 call	 eax
  002c1	50		 push	 eax
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@ODOOJLKG@?S?I?S?Z?M?f?$LM?R?5?$FL?5?$CFs?5?$FN?5?U?$PN?T?Z?J?$LJ?S?C?$LH?$MA?L?$NP?$LP?$KI?0@
  002c7	68 00 01 00 00	 push	 256			; 00000100H
  002cc	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _szMessage$3[ebp]
  002d2	51		 push	 ecx
  002d3	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ ; _snprintf_s<256>
  002d8	83 c4 10	 add	 esp, 16			; 00000010H

; 6876 : 		//发送消息
; 6877 : 		SendRoomMessage(pIServerUserItem,szMessage,SMT_EJECT);

  002db	6a 02		 push	 2
  002dd	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szMessage$3[ebp]
  002e3	50		 push	 eax
  002e4	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002e7	51		 push	 ecx
  002e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002eb	83 c1 04	 add	 ecx, 4
  002ee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002f1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002f4	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  002f7	ff d2		 call	 edx

; 6878 : 		return true; 

  002f9	b0 01		 mov	 al, 1
  002fb	e9 d0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 6879 : 	}
; 6880 : 
; 6881 : 	//请离桌子
; 6882 : 	WORD wTargerTableID = pITargetUserItem->GetTableID();

  00300	8b 45 e8	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00303	8b 10		 mov	 edx, DWORD PTR [eax]
  00305	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00308	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0030b	ff d0		 call	 eax
  0030d	66 89 85 e0 fd
	ff ff		 mov	 WORD PTR _wTargerTableID$[ebp], ax

; 6883 : 	if(wTargerTableID != INVALID_TABLE)

  00314	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wTargerTableID$[ebp]
  0031b	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00320	0f 84 a8 00 00
	00		 je	 $LN11@OnTCPNetwo

; 6884 : 	{
; 6885 : 		//定义变量
; 6886 : 		TCHAR szMessage[64]=TEXT("");

  00326	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0032b	88 85 a0 fd ff
	ff		 mov	 BYTE PTR _szMessage$2[ebp], al
  00331	6a 3f		 push	 63			; 0000003fH
  00333	6a 00		 push	 0
  00335	8d 85 a1 fd ff
	ff		 lea	 eax, DWORD PTR _szMessage$2[ebp+1]
  0033b	50		 push	 eax
  0033c	e8 00 00 00 00	 call	 _memset
  00341	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6887 : 		_sntprintf_s(szMessage,CountArray(szMessage),TEXT("你已被%s请离桌子！"),pIServerUserItem->GetNickName());

  00344	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00347	8b 10		 mov	 edx, DWORD PTR [eax]
  00349	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0034c	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  0034f	ff d0		 call	 eax
  00351	50		 push	 eax
  00352	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DKHPFDBP@?D?c?R?Q?$LB?$LL?$CFs?G?k?$MA?k?W?$MA?W?S?$KD?$KB@
  00357	6a 40		 push	 64			; 00000040H
  00359	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _szMessage$2[ebp]
  0035f	51		 push	 ecx
  00360	e8 00 00 00 00	 call	 ??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ ; _snprintf_s<64>
  00365	83 c4 10	 add	 esp, 16			; 00000010H

; 6888 : 
; 6889 : 		//发送消息
; 6890 : 		SendGameMessage(pITargetUserItem,szMessage,SMT_CHAT|SMT_EJECT|SMT_CLOSE_GAME);

  00368	68 03 02 00 00	 push	 515			; 00000203H
  0036d	8d 85 a0 fd ff
	ff		 lea	 eax, DWORD PTR _szMessage$2[ebp]
  00373	50		 push	 eax
  00374	8b 4d e8	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00377	51		 push	 ecx
  00378	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0037b	83 c1 04	 add	 ecx, 4
  0037e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00381	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00384	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00387	ff d2		 call	 edx

; 6891 : 
; 6892 : 		CTableFrame * pTableFrame=m_TableFrameArray[wTargerTableID];

  00389	0f b7 85 e0 fd
	ff ff		 movzx	 eax, WORD PTR _wTargerTableID$[ebp]
  00390	50		 push	 eax
  00391	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00394	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0039a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0039f	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a1	89 8d 9c fd ff
	ff		 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 6893 : 		if (pTableFrame->PerformStandUpAction(pITargetUserItem)==false) return true;

  003a7	6a 00		 push	 0
  003a9	8b 45 e8	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  003ac	50		 push	 eax
  003ad	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  003b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  003b5	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  003bb	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  003c1	ff d0		 call	 eax
  003c3	0f b6 c8	 movzx	 ecx, al
  003c6	85 c9		 test	 ecx, ecx
  003c8	75 04		 jne	 SHORT $LN11@OnTCPNetwo
  003ca	b0 01		 mov	 al, 1
  003cc	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN11@OnTCPNetwo:

; 6894 : 	}
; 6895 : 
; 6896 : 	return true;

  003ce	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6897 : }

  003d0	5f		 pop	 edi
  003d1	5e		 pop	 esi
  003d2	5b		 pop	 ebx
  003d3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003d6	33 cd		 xor	 ecx, ebp
  003d8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003dd	8b e5		 mov	 esp, ebp
  003df	5d		 pop	 ebp
  003e0	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubMemberKickUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_szDescribe$ = -284					; size = 256
_pRepulseIServerUserItem$ = -28				; size = 4
_pTableFrame$ = -24					; size = 4
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pUserRepulseSit$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserRepulseSit, COMDAT
; _this$ = ecx

; 6780 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 01 00
	00		 sub	 esp, 348		; 0000015cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6781 : 	//效验数据
; 6782 : 	ASSERT(wDataSize==sizeof(CMD_GR_UserRepulseSit));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00020	74 19		 je	 SHORT $LN9@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN9@OnTCPNetwo
  0003a	cc		 int	 3
$LN9@OnTCPNetwo:

; 6783 : 	if (wDataSize!=sizeof(CMD_GR_UserRepulseSit)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 37 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6784 : 
; 6785 : 	//消息处理
; 6786 : 	CMD_GR_UserRepulseSit * pUserRepulseSit=(CMD_GR_UserRepulseSit *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pUserRepulseSit$[ebp], eax

; 6787 : 	if (pUserRepulseSit->wTableID >= m_pGameServiceOption->wTableCount)

  00051	8b 45 f4	 mov	 eax, DWORD PTR _pUserRepulseSit$[ebp]
  00054	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00057	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0005d	0f b7 50 46	 movzx	 edx, WORD PTR [eax+70]
  00061	3b ca		 cmp	 ecx, edx
  00063	7c 07		 jl	 SHORT $LN3@OnTCPNetwo

; 6788 : 		return false;

  00065	32 c0		 xor	 al, al
  00067	e9 16 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6789 : 
; 6790 : 	//获取用户
; 6791 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0006c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0006f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00074	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6792 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00078	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0007c	50		 push	 eax
  0007d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	8b 11		 mov	 edx, DWORD PTR [ecx]
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00088	ff d0		 call	 eax
  0008a	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6793 : 	if (pIServerUserItem==NULL) return false;

  0008d	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00091	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  00093	32 c0		 xor	 al, al
  00095	e9 e8 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6794 : 
; 6795 : 	//获取桌子
; 6796 : 	CTableFrame * pTableFrame=m_TableFrameArray[pUserRepulseSit->wTableID];

  0009a	8b 45 f4	 mov	 eax, DWORD PTR _pUserRepulseSit$[ebp]
  0009d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a0	51		 push	 ecx
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000aa	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000af	8b 10		 mov	 edx, DWORD PTR [eax]
  000b1	89 55 e8	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 6797 : 	if (pTableFrame->IsGameStarted()==true) return true;

  000b4	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000bc	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000bf	ff d0		 call	 eax
  000c1	0f b6 c8	 movzx	 ecx, al
  000c4	83 f9 01	 cmp	 ecx, 1
  000c7	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  000c9	b0 01		 mov	 al, 1
  000cb	e9 b2 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 6798 : 
; 6799 : 	//获取用户
; 6800 : 	IServerUserItem * pRepulseIServerUserItem = pTableFrame->GetTableUserItem(pUserRepulseSit->wChairID);

  000d0	8b 45 f4	 mov	 eax, DWORD PTR _pUserRepulseSit$[ebp]
  000d3	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000d7	51		 push	 ecx
  000d8	8b 55 e8	 mov	 edx, DWORD PTR _pTableFrame$[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000e0	8b 90 9c 00 00
	00		 mov	 edx, DWORD PTR [eax+156]
  000e6	ff d2		 call	 edx
  000e8	89 45 e4	 mov	 DWORD PTR _pRepulseIServerUserItem$[ebp], eax

; 6801 : 	if (pRepulseIServerUserItem==NULL) return true;

  000eb	83 7d e4 00	 cmp	 DWORD PTR _pRepulseIServerUserItem$[ebp], 0
  000ef	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  000f1	b0 01		 mov	 al, 1
  000f3	e9 8a 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6802 : 	if(pRepulseIServerUserItem->GetUserID() != pUserRepulseSit->dwRepulseUserID)return true;

  000f8	8b 45 e4	 mov	 eax, DWORD PTR _pRepulseIServerUserItem$[ebp]
  000fb	8b 10		 mov	 edx, DWORD PTR [eax]
  000fd	8b 4d e4	 mov	 ecx, DWORD PTR _pRepulseIServerUserItem$[ebp]
  00100	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00103	ff d0		 call	 eax
  00105	8b 4d f4	 mov	 ecx, DWORD PTR _pUserRepulseSit$[ebp]
  00108	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0010b	74 04		 je	 SHORT $LN7@OnTCPNetwo
  0010d	b0 01		 mov	 al, 1
  0010f	eb 71		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6803 : 
; 6804 : 	//发送消息
; 6805 : 	TCHAR szDescribe[256]=TEXT("");

  00111	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00116	88 85 e4 fe ff
	ff		 mov	 BYTE PTR _szDescribe$[ebp], al
  0011c	68 ff 00 00 00	 push	 255			; 000000ffH
  00121	6a 00		 push	 0
  00123	8d 85 e5 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$[ebp+1]
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 _memset
  0012f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6806 : 	lstrcpyn(szDescribe,TEXT("此桌有玩家设置了不与您同桌游戏！"),CountArray(szDescribe));

  00132	68 00 01 00 00	 push	 256			; 00000100H
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KFOICNLL@?$LE?K?W?$MA?S?P?M?f?$LM?R?I?h?V?C?A?K?$LC?$LL?S?k?D?z?M?$KM?W?$MA?S?N?O?$LH?$KD@
  0013c	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$[ebp]
  00142	50		 push	 eax
  00143	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6807 : 	SendRoomMessage(pRepulseIServerUserItem,szDescribe,SMT_EJECT|SMT_CHAT|SMT_CLOSE_GAME);

  00149	68 03 02 00 00	 push	 515			; 00000203H
  0014e	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$[ebp]
  00154	50		 push	 eax
  00155	8b 4d e4	 mov	 ecx, DWORD PTR _pRepulseIServerUserItem$[ebp]
  00158	51		 push	 ecx
  00159	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	83 c1 04	 add	 ecx, 4
  0015f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00162	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00165	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00168	ff d2		 call	 edx

; 6808 : 
; 6809 : 	//弹起玩家
; 6810 : 	pTableFrame->PerformStandUpAction(pRepulseIServerUserItem);

  0016a	6a 00		 push	 0
  0016c	8b 45 e4	 mov	 eax, DWORD PTR _pRepulseIServerUserItem$[ebp]
  0016f	50		 push	 eax
  00170	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00173	8b 11		 mov	 edx, DWORD PTR [ecx]
  00175	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00178	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  0017e	ff d0		 call	 eax

; 6811 : 
; 6812 : 	return true;

  00180	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6813 : }

  00182	5f		 pop	 edi
  00183	5e		 pop	 esi
  00184	5b		 pop	 ebx
  00185	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00188	33 cd		 xor	 ecx, ebp
  0018a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018f	8b e5		 mov	 esp, ebp
  00191	5d		 pop	 ebp
  00192	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserRepulseSit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_UserInvite$ = -28					; size = 6
_pITargetUserItem$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pUserInviteReq$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserInviteReq, COMDAT
; _this$ = ecx

; 6744 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6745 : 	//效验数据
; 6746 : 	ASSERT(wDataSize==sizeof(CMD_GR_UserInviteReq));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 06	 cmp	 eax, 6
  00013	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0002d	cc		 int	 3
$LN11@OnTCPNetwo:

; 6747 : 	if (wDataSize!=sizeof(CMD_GR_UserInviteReq)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 06	 cmp	 eax, 6
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 31 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6748 : 
; 6749 : 	//消息处理
; 6750 : 	CMD_GR_UserInviteReq * pUserInviteReq=(CMD_GR_UserInviteReq *)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pUserInviteReq$[ebp], eax

; 6751 : 
; 6752 : 	//获取用户
; 6753 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00044	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00047	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004c	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6754 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00050	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00054	50		 push	 eax
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6755 : 	if (pIServerUserItem==NULL) return false;

  00065	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00069	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0006b	32 c0		 xor	 al, al
  0006d	e9 fd 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6756 : 
; 6757 : 	//效验状态
; 6758 : 	if (pUserInviteReq->wTableID==INVALID_TABLE) return true;

  00072	8b 45 f8	 mov	 eax, DWORD PTR _pUserInviteReq$[ebp]
  00075	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00078	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0007e	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  00080	b0 01		 mov	 al, 1
  00082	e9 e8 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6759 : 	if (pIServerUserItem->GetTableID()!=pUserInviteReq->wTableID) return true;

  00087	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0008a	8b 10		 mov	 edx, DWORD PTR [eax]
  0008c	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0008f	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00092	ff d0		 call	 eax
  00094	0f b7 c8	 movzx	 ecx, ax
  00097	8b 55 f8	 mov	 edx, DWORD PTR _pUserInviteReq$[ebp]
  0009a	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0009d	3b c8		 cmp	 ecx, eax
  0009f	74 07		 je	 SHORT $LN5@OnTCPNetwo
  000a1	b0 01		 mov	 al, 1
  000a3	e9 c7 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 6760 : 	if (pIServerUserItem->GetUserStatus()==US_PLAYING) return true;

  000a8	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000b0	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000b3	ff d0		 call	 eax
  000b5	0f b6 c8	 movzx	 ecx, al
  000b8	83 f9 05	 cmp	 ecx, 5
  000bb	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  000bd	b0 01		 mov	 al, 1
  000bf	e9 ab 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6761 : 	if (pIServerUserItem->GetUserStatus()==US_OFFLINE) return true;

  000c4	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000c7	8b 10		 mov	 edx, DWORD PTR [eax]
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000cc	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000cf	ff d0		 call	 eax
  000d1	0f b6 c8	 movzx	 ecx, al
  000d4	83 f9 06	 cmp	 ecx, 6
  000d7	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  000d9	b0 01		 mov	 al, 1
  000db	e9 8f 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6762 : 
; 6763 : 	//目标用户
; 6764 : 	IServerUserItem * pITargetUserItem=m_ServerUserManager.SearchUserItem(pUserInviteReq->dwUserID);

  000e0	8b 45 f8	 mov	 eax, DWORD PTR _pUserInviteReq$[ebp]
  000e3	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  000e6	51		 push	 ecx
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000f0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f3	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000f9	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000fc	ff d2		 call	 edx
  000fe	89 45 ec	 mov	 DWORD PTR _pITargetUserItem$[ebp], eax

; 6765 : 	if (pITargetUserItem==NULL) return true;

  00101	83 7d ec 00	 cmp	 DWORD PTR _pITargetUserItem$[ebp], 0
  00105	75 04		 jne	 SHORT $LN8@OnTCPNetwo
  00107	b0 01		 mov	 al, 1
  00109	eb 64		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6766 : 	if (pITargetUserItem->GetUserStatus()==US_PLAYING) return true;

  0010b	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  0010e	8b 10		 mov	 edx, DWORD PTR [eax]
  00110	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00113	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00116	ff d0		 call	 eax
  00118	0f b6 c8	 movzx	 ecx, al
  0011b	83 f9 05	 cmp	 ecx, 5
  0011e	75 04		 jne	 SHORT $LN9@OnTCPNetwo
  00120	b0 01		 mov	 al, 1
  00122	eb 4b		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6767 : 
; 6768 : 	//发送消息
; 6769 : 	CMD_GR_UserInvite UserInvite;
; 6770 : 	memset(&UserInvite,0,sizeof(UserInvite));

  00124	6a 06		 push	 6
  00126	6a 00		 push	 0
  00128	8d 45 e4	 lea	 eax, DWORD PTR _UserInvite$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 _memset
  00131	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6771 : 	UserInvite.wTableID=pUserInviteReq->wTableID;

  00134	8b 45 f8	 mov	 eax, DWORD PTR _pUserInviteReq$[ebp]
  00137	66 8b 08	 mov	 cx, WORD PTR [eax]
  0013a	66 89 4d e4	 mov	 WORD PTR _UserInvite$[ebp], cx

; 6772 : 	UserInvite.dwUserID=pIServerUserItem->GetUserID();

  0013e	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00141	8b 10		 mov	 edx, DWORD PTR [eax]
  00143	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00146	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00149	ff d0		 call	 eax
  0014b	89 45 e6	 mov	 DWORD PTR _UserInvite$[ebp+2], eax

; 6773 : 	SendData(pITargetUserItem,MDM_GR_USER,SUB_GR_USER_INVITE,&UserInvite,sizeof(UserInvite));

  0014e	6a 06		 push	 6
  00150	8d 45 e4	 lea	 eax, DWORD PTR _UserInvite$[ebp]
  00153	50		 push	 eax
  00154	6a 05		 push	 5
  00156	6a 03		 push	 3
  00158	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  0015b	51		 push	 ecx
  0015c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	83 c1 04	 add	 ecx, 4
  00162	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00165	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00168	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0016b	ff d2		 call	 edx

; 6774 : 
; 6775 : 	return true;

  0016d	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6776 : }

  0016f	5f		 pop	 edi
  00170	5e		 pop	 esi
  00171	5b		 pop	 ebx
  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserInviteReq
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_SendTrumpetRequest$ = -188				; size = 168
_pIServerUserItem$ = -20				; size = 4
_wBindIndex$ = -16					; size = 2
_pSendTrumpet$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetwordSubSendTrumpet, COMDAT
; _this$ = ecx

; 6695 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6696 : 	//效验参数
; 6697 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_SendTrumpet));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 87 00 00 00	 cmp	 eax, 135		; 00000087H
  00022	74 19		 je	 SHORT $LN7@OnTCPNetwo
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN7@OnTCPNetwo
  0003c	cc		 int	 3
$LN7@OnTCPNetwo:

; 6698 : 	if (wDataSize!=sizeof(CMD_GR_C_SendTrumpet)) return false;

  0003d	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 87 00 00 00	 cmp	 eax, 135		; 00000087H
  00046	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00048	32 c0		 xor	 al, al
  0004a	e9 8a 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6699 : 
; 6700 : 	//变量定义
; 6701 : 	CMD_GR_C_SendTrumpet * pSendTrumpet=(CMD_GR_C_SendTrumpet *)pData;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00052	89 45 f4	 mov	 DWORD PTR _pSendTrumpet$[ebp], eax

; 6702 : 
; 6703 : 	//获取用户
; 6704 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00055	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00058	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0005d	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6705 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00061	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00071	ff d0		 call	 eax
  00073	89 45 ec	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6706 : 	if(pIServerUserItem==NULL) return false;

  00076	83 7d ec 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0007a	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0007c	32 c0		 xor	 al, al
  0007e	e9 56 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6707 : 
; 6708 : 	//比赛房间
; 6709 : 	if (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH)

  00083	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00089	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0008d	83 fa 04	 cmp	 edx, 4
  00090	75 25		 jne	 SHORT $LN4@OnTCPNetwo

; 6710 : 	{
; 6711 : 		//发送消息
; 6712 : 		SendPropertyFailure(pIServerUserItem,TEXT("比赛房间不可以使用此功能！"),0L,pSendTrumpet->cbRequestArea);

  00092	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpet$[ebp]
  00095	66 0f b6 08	 movzx	 cx, BYTE PTR [eax]
  00099	0f b7 d1	 movzx	 edx, cx
  0009c	52		 push	 edx
  0009d	6a 00		 push	 0
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@BLADOFOC@?$LB?H?H?$PM?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@
  000a4	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 6713 : 		return RESULT_FAIL;

  000b0	b0 01		 mov	 al, 1
  000b2	e9 22 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6714 : 	}
; 6715 : 
; 6716 : 	//练习房间
; 6717 : 	if (m_pGameServiceOption->wServerType==GAME_GENRE_EDUCATE)

  000b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000bd	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000c1	83 fa 08	 cmp	 edx, 8
  000c4	75 25		 jne	 SHORT $LN5@OnTCPNetwo

; 6718 : 	{
; 6719 : 		SendPropertyFailure(pIServerUserItem,TEXT("练习房间不可以使用此功能！"),0L,pSendTrumpet->cbRequestArea);

  000c6	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpet$[ebp]
  000c9	66 0f b6 08	 movzx	 cx, BYTE PTR [eax]
  000cd	0f b7 d1	 movzx	 edx, cx
  000d0	52		 push	 edx
  000d1	6a 00		 push	 0
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@GEANMNIE@?A?$LH?O?$LA?$LH?$LP?$LM?d?$LC?$LL?$LP?I?R?T?J?$LJ?S?C?$LE?K?$LJ?$KG?D?$NM?$KD?$KB@
  000d8	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	e8 00 00 00 00	 call	 ?SendPropertyFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJG@Z ; CAttemperEngineSink::SendPropertyFailure

; 6720 : 		return RESULT_FAIL;

  000e4	b0 01		 mov	 al, 1
  000e6	e9 ee 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 6721 : 	}
; 6722 : 
; 6723 : 	//构造结构
; 6724 : 	DBR_GR_Send_Trumpet SendTrumpetRequest;
; 6725 : 	ZeroMemory(&SendTrumpetRequest,sizeof(SendTrumpetRequest));

  000eb	68 a8 00 00 00	 push	 168			; 000000a8H
  000f0	6a 00		 push	 0
  000f2	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _SendTrumpetRequest$[ebp]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 _memset
  000fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6726 : 
; 6727 : 	SendTrumpetRequest.dwUserID = pIServerUserItem->GetUserID();

  00101	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00104	8b 10		 mov	 edx, DWORD PTR [eax]
  00106	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00109	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0010c	ff d0		 call	 eax
  0010e	89 85 44 ff ff
	ff		 mov	 DWORD PTR _SendTrumpetRequest$[ebp], eax

; 6728 : 	SendTrumpetRequest.dwRecvUserID = pIServerUserItem->GetUserID();

  00114	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00117	8b 10		 mov	 edx, DWORD PTR [eax]
  00119	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0011c	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0011f	ff d0		 call	 eax
  00121	89 85 48 ff ff
	ff		 mov	 DWORD PTR _SendTrumpetRequest$[ebp+4], eax

; 6729 : 	SendTrumpetRequest.wPropCount =1;

  00127	b8 01 00 00 00	 mov	 eax, 1
  0012c	66 89 85 50 ff
	ff ff		 mov	 WORD PTR _SendTrumpetRequest$[ebp+12], ax

; 6730 : 	SendTrumpetRequest.dwPropID = pSendTrumpet->wPropertyIndex;

  00133	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpet$[ebp]
  00136	0f b7 48 01	 movzx	 ecx, WORD PTR [eax+1]
  0013a	89 8d 4c ff ff
	ff		 mov	 DWORD PTR _SendTrumpetRequest$[ebp+8], ecx

; 6731 : 	SendTrumpetRequest.TrumpetColor = pSendTrumpet->TrumpetColor;//喇叭颜色

  00140	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpet$[ebp]
  00143	8b 48 03	 mov	 ecx, DWORD PTR [eax+3]
  00146	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _SendTrumpetRequest$[ebp+20], ecx

; 6732 : 	lstrcpyn(SendTrumpetRequest.szTrumpetContent,pSendTrumpet->szTrumpetContent,CountArray(SendTrumpetRequest.szTrumpetContent));

  0014c	68 80 00 00 00	 push	 128			; 00000080H
  00151	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpet$[ebp]
  00154	83 c0 07	 add	 eax, 7
  00157	50		 push	 eax
  00158	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _SendTrumpetRequest$[ebp+40]
  0015e	51		 push	 ecx
  0015f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6733 : 	lstrcpyn(SendTrumpetRequest.szSendNickName,pIServerUserItem->GetNickName(),CountArray(SendTrumpetRequest.szSendNickName));

  00165	6a 10		 push	 16			; 00000010H
  00167	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0016a	8b 10		 mov	 edx, DWORD PTR [eax]
  0016c	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0016f	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00172	ff d0		 call	 eax
  00174	50		 push	 eax
  00175	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _SendTrumpetRequest$[ebp+24]
  0017b	51		 push	 ecx
  0017c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6734 : 	SendTrumpetRequest.dwClientAddr=pIServerUserItem->GetClientAddr();//系统信息

  00182	8b 45 ec	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00185	8b 10		 mov	 edx, DWORD PTR [eax]
  00187	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0018a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0018d	ff d0		 call	 eax
  0018f	89 85 54 ff ff
	ff		 mov	 DWORD PTR _SendTrumpetRequest$[ebp+16], eax

; 6735 : 
; 6736 : 	//投递数据
; 6737 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_SEND_TRUMPET,dwSocketID,&SendTrumpetRequest,sizeof(SendTrumpetRequest));

  00195	6a 00		 push	 0
  00197	68 a8 00 00 00	 push	 168			; 000000a8H
  0019c	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _SendTrumpetRequest$[ebp]
  001a2	50		 push	 eax
  001a3	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  001a6	51		 push	 ecx
  001a7	68 8b 03 00 00	 push	 907			; 0000038bH
  001ac	8b 55 ec	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001af	8b 02		 mov	 eax, DWORD PTR [edx]
  001b1	8b 4d ec	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b4	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  001b7	ff d2		 call	 edx
  001b9	50		 push	 eax
  001ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001bd	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  001c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001c6	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  001cc	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001ce	50		 push	 eax
  001cf	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001d2	ff d2		 call	 edx
  001d4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6738 : 
; 6739 : 	return true;

  001d7	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6740 : }

  001d9	5f		 pop	 edi
  001da	5e		 pop	 esi
  001db	5b		 pop	 ebx
  001dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001df	33 cd		 xor	 ecx, ebp
  001e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e6	8b e5		 mov	 esp, ebp
  001e8	5d		 pop	 ebp
  001e9	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetwordSubSendTrumpet
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -64				; size = 4
_wBindIndex$ = -60					; size = 2
_GetSendPresentRequest$ = -56				; size = 44
_pGetSendPresent$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubGetSendPresent, COMDAT
; _this$ = ecx

; 6671 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6672 : 	//效验参数
; 6673 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_GetSendPresent));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 25	 cmp	 eax, 37			; 00000025H
  00020	74 19		 je	 SHORT $LN4@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN4@OnTCPNetwo
  0003a	cc		 int	 3
$LN4@OnTCPNetwo:

; 6674 : 	if (wDataSize!=sizeof(CMD_GR_C_GetSendPresent)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 25	 cmp	 eax, 37			; 00000025H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 a0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6675 : 
; 6676 : 	//变量定义
; 6677 : 	CMD_GR_C_GetSendPresent *pGetSendPresent = (CMD_GR_C_GetSendPresent *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pGetSendPresent$[ebp], eax

; 6678 : 	DBR_GR_GetSendPresent GetSendPresentRequest={0};

  00051	6a 2c		 push	 44			; 0000002cH
  00053	6a 00		 push	 0
  00055	8d 45 c8	 lea	 eax, DWORD PTR _GetSendPresentRequest$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6679 : 	GetSendPresentRequest.dwUserID = pGetSendPresent->dwUserID;

  00061	8b 45 f4	 mov	 eax, DWORD PTR _pGetSendPresent$[ebp]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	89 4d c8	 mov	 DWORD PTR _GetSendPresentRequest$[ebp], ecx

; 6680 : 	lstrcpyn(GetSendPresentRequest.szPassword,pGetSendPresent->szPassword,CountArray(GetSendPresentRequest.szPassword));

  00069	6a 21		 push	 33			; 00000021H
  0006b	8b 45 f4	 mov	 eax, DWORD PTR _pGetSendPresent$[ebp]
  0006e	83 c0 04	 add	 eax, 4
  00071	50		 push	 eax
  00072	8d 4d d0	 lea	 ecx, DWORD PTR _GetSendPresentRequest$[ebp+8]
  00075	51		 push	 ecx
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6681 : 	//获取用户
; 6682 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0007c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0007f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00084	66 89 45 c4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6683 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00088	0f b7 45 c4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 11		 mov	 edx, DWORD PTR [ecx]
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00098	ff d0		 call	 eax
  0009a	89 45 c0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6684 : 	//系统信息
; 6685 : 	GetSendPresentRequest.dwClientAddr=pIServerUserItem->GetClientAddr();

  0009d	8b 45 c0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	8b 4d c0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000a5	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000a8	ff d0		 call	 eax
  000aa	89 45 cc	 mov	 DWORD PTR _GetSendPresentRequest$[ebp+4], eax

; 6686 : 
; 6687 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_GET_SEND_PRESENT,dwSocketID,&GetSendPresentRequest,sizeof(GetSendPresentRequest));

  000ad	6a 00		 push	 0
  000af	6a 2c		 push	 44			; 0000002cH
  000b1	8d 45 c8	 lea	 eax, DWORD PTR _GetSendPresentRequest$[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000b8	51		 push	 ecx
  000b9	68 8a 03 00 00	 push	 906			; 0000038aH
  000be	8b 55 c0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000c1	8b 02		 mov	 eax, DWORD PTR [edx]
  000c3	8b 4d c0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c6	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000c9	ff d2		 call	 edx
  000cb	50		 push	 eax
  000cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000d5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000de	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000e0	50		 push	 eax
  000e1	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000e4	ff d2		 call	 edx
  000e6	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6688 : 
; 6689 : 	return true;

  000e9	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6690 : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f1	33 cd		 xor	 ecx, ebp
  000f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubGetSendPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -56				; size = 4
_wBindIndex$ = -52					; size = 2
_PropertyPresentRequest$ = -48				; size = 36
_PropertyPresent$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubPropertyPresent, COMDAT
; _this$ = ecx

; 6645 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6646 : 	//效验参数
; 6647 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_PropertyPresent));

  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001a	83 f8 20	 cmp	 eax, 32			; 00000020H
  0001d	74 19		 je	 SHORT $LN4@OnTCPNetwo
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00025	83 c1 02	 add	 ecx, 2
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00033	85 c0		 test	 eax, eax
  00035	74 01		 je	 SHORT $LN4@OnTCPNetwo
  00037	cc		 int	 3
$LN4@OnTCPNetwo:

; 6648 : 	if (wDataSize!=sizeof(CMD_GR_C_PropertyPresent)) return false;

  00038	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003c	83 f8 20	 cmp	 eax, 32			; 00000020H
  0003f	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 d5 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6649 : 
; 6650 : 	//变量定义
; 6651 : 	CMD_GR_C_PropertyPresent *PropertyPresent = (CMD_GR_C_PropertyPresent *)pData;

  00048	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004b	89 45 f4	 mov	 DWORD PTR _PropertyPresent$[ebp], eax

; 6652 : 	DBR_GR_PropertyPresent PropertyPresentRequest={0};

  0004e	33 c0		 xor	 eax, eax
  00050	89 45 d0	 mov	 DWORD PTR _PropertyPresentRequest$[ebp], eax
  00053	89 45 d4	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+4], eax
  00056	89 45 d8	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+8], eax
  00059	89 45 dc	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+12], eax
  0005c	89 45 e0	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+16], eax
  0005f	89 45 e4	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+20], eax
  00062	89 45 e8	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+24], eax
  00065	89 45 ec	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+28], eax
  00068	89 45 f0	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+32], eax

; 6653 : 	PropertyPresentRequest.dwUserID = PropertyPresent->dwUserID;

  0006b	8b 45 f4	 mov	 eax, DWORD PTR _PropertyPresent$[ebp]
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	89 4d d0	 mov	 DWORD PTR _PropertyPresentRequest$[ebp], ecx

; 6654 : 	PropertyPresentRequest.dwRecvGameID = PropertyPresent->dwRecvGameID;

  00073	8b 45 f4	 mov	 eax, DWORD PTR _PropertyPresent$[ebp]
  00076	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00079	89 4d d4	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+4], ecx

; 6655 : 	PropertyPresentRequest.dwPropID = PropertyPresent->dwPropID;

  0007c	8b 45 f4	 mov	 eax, DWORD PTR _PropertyPresent$[ebp]
  0007f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00082	89 4d d8	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+8], ecx

; 6656 : 	PropertyPresentRequest.wPropCount = PropertyPresent->wPropCount;

  00085	8b 45 f4	 mov	 eax, DWORD PTR _PropertyPresent$[ebp]
  00088	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  0008c	66 89 4d dc	 mov	 WORD PTR _PropertyPresentRequest$[ebp+12], cx

; 6657 : 	PropertyPresentRequest.wType = PropertyPresent->wType;

  00090	8b 45 f4	 mov	 eax, DWORD PTR _PropertyPresent$[ebp]
  00093	66 8b 48 0e	 mov	 cx, WORD PTR [eax+14]
  00097	66 89 4d de	 mov	 WORD PTR _PropertyPresentRequest$[ebp+14], cx

; 6658 : 	lstrcpyn(PropertyPresentRequest.szRecvNickName,PropertyPresent->szRecvNickName,CountArray(PropertyPresentRequest.szRecvNickName));

  0009b	6a 10		 push	 16			; 00000010H
  0009d	8b 45 f4	 mov	 eax, DWORD PTR _PropertyPresent$[ebp]
  000a0	83 c0 10	 add	 eax, 16			; 00000010H
  000a3	50		 push	 eax
  000a4	8d 4d e4	 lea	 ecx, DWORD PTR _PropertyPresentRequest$[ebp+20]
  000a7	51		 push	 ecx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6659 : 	//获取用户
; 6660 : 	WORD wBindIndex=LOWORD(dwSocketID);

  000ae	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000b1	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000b6	66 89 45 cc	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6661 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  000ba	0f b7 45 cc	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000be	50		 push	 eax
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ca	ff d0		 call	 eax
  000cc	89 45 c8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6662 : 	//系统信息
; 6663 : 	PropertyPresentRequest.dwClientAddr=pIServerUserItem->GetClientAddr();

  000cf	8b 45 c8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d2	8b 10		 mov	 edx, DWORD PTR [eax]
  000d4	8b 4d c8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d7	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000da	ff d0		 call	 eax
  000dc	89 45 e0	 mov	 DWORD PTR _PropertyPresentRequest$[ebp+16], eax

; 6664 : 
; 6665 : 	//投递数据
; 6666 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_PROPERTY_PRESENT,dwSocketID,&PropertyPresentRequest,sizeof(PropertyPresentRequest));

  000df	6a 00		 push	 0
  000e1	6a 24		 push	 36			; 00000024H
  000e3	8d 45 d0	 lea	 eax, DWORD PTR _PropertyPresentRequest$[ebp]
  000e6	50		 push	 eax
  000e7	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000ea	51		 push	 ecx
  000eb	68 89 03 00 00	 push	 905			; 00000389H
  000f0	8b 55 c8	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000f3	8b 02		 mov	 eax, DWORD PTR [edx]
  000f5	8b 4d c8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f8	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000fb	ff d2		 call	 edx
  000fd	50		 push	 eax
  000fe	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00101	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00107	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010a	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00110	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00112	50		 push	 eax
  00113	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00116	ff d2		 call	 edx
  00118	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6667 : 	return true;

  0011b	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6668 : }

  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00123	33 cd		 xor	 ecx, ebp
  00125	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubPropertyPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -24				; size = 4
_wBindIndex$ = -20					; size = 2
_QuerySendPresentRequest$ = -16				; size = 8
_pQuerySendPresent$ = -8				; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubQuerySendPresent, COMDAT
; _this$ = ecx

; 6625 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6626 : 	//效验参数
; 6627 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_QuerySendPresent));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 04	 cmp	 eax, 4
  00013	74 19		 je	 SHORT $LN4@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN4@OnTCPNetwo
  0002d	cc		 int	 3
$LN4@OnTCPNetwo:

; 6628 : 	if (wDataSize!=sizeof(CMD_GR_C_QuerySendPresent)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 04	 cmp	 eax, 4
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 85 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6629 : 
; 6630 : 	//变量定义
; 6631 : 	CMD_GR_C_QuerySendPresent *pQuerySendPresent = (CMD_GR_C_QuerySendPresent *)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pQuerySendPresent$[ebp], eax

; 6632 : 	DBR_GR_QuerySendPresent QuerySendPresentRequest={0};

  00044	33 c0		 xor	 eax, eax
  00046	89 45 f0	 mov	 DWORD PTR _QuerySendPresentRequest$[ebp], eax
  00049	89 45 f4	 mov	 DWORD PTR _QuerySendPresentRequest$[ebp+4], eax

; 6633 : 	QuerySendPresentRequest.dwUserID = pQuerySendPresent->dwUserID;

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pQuerySendPresent$[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	89 4d f0	 mov	 DWORD PTR _QuerySendPresentRequest$[ebp], ecx

; 6634 : 	//获取用户
; 6635 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00054	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00057	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0005c	66 89 45 ec	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6636 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00060	0f b7 45 ec	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00064	50		 push	 eax
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00070	ff d0		 call	 eax
  00072	89 45 e8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6637 : 	//系统信息
; 6638 : 	QuerySendPresentRequest.dwClientAddr=pIServerUserItem->GetClientAddr();

  00075	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00078	8b 10		 mov	 edx, DWORD PTR [eax]
  0007a	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007d	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00080	ff d0		 call	 eax
  00082	89 45 f4	 mov	 DWORD PTR _QuerySendPresentRequest$[ebp+4], eax

; 6639 : 
; 6640 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_QUERY_SEND_PRESENT,dwSocketID,&QuerySendPresentRequest,sizeof(QuerySendPresentRequest));

  00085	6a 00		 push	 0
  00087	6a 08		 push	 8
  00089	8d 45 f0	 lea	 eax, DWORD PTR _QuerySendPresentRequest$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00090	51		 push	 ecx
  00091	68 88 03 00 00	 push	 904			; 00000388H
  00096	8b 55 e8	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00099	8b 02		 mov	 eax, DWORD PTR [edx]
  0009b	8b 4d e8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0009e	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000a1	ff d2		 call	 edx
  000a3	50		 push	 eax
  000a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000b6	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000bc	ff d2		 call	 edx
  000be	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6641 : 	return true;

  000c1	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6642 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubQuerySendPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -40				; size = 4
_wBindIndex$ = -36					; size = 2
_PropertyUseRequest$ = -32				; size = 20
_pPropertyUse$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubPropertyUse, COMDAT
; _this$ = ecx

; 6593 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6594 : 	//效验参数
; 6595 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_PropertyUse));

  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001a	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0001d	74 19		 je	 SHORT $LN5@OnTCPNetwo
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00025	83 c1 02	 add	 ecx, 2
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00033	85 c0		 test	 eax, eax
  00035	74 01		 je	 SHORT $LN5@OnTCPNetwo
  00037	cc		 int	 3
$LN5@OnTCPNetwo:

; 6596 : 	if (wDataSize!=sizeof(CMD_GR_C_PropertyUse)) return false;

  00038	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003c	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0003f	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 e0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6597 : 
; 6598 : 	//变量定义
; 6599 : 	CMD_GR_C_PropertyUse * pPropertyUse = (CMD_GR_C_PropertyUse *)pData;

  00048	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004b	89 45 f4	 mov	 DWORD PTR _pPropertyUse$[ebp], eax

; 6600 : 
; 6601 : 	//数据效验
; 6602 : 	ASSERT(pPropertyUse->wPropCount>0);

  0004e	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUse$[ebp]
  00051	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00055	85 c9		 test	 ecx, ecx
  00057	7f 19		 jg	 SHORT $LN6@OnTCPNetwo
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0005f	83 c2 09	 add	 edx, 9
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN6@OnTCPNetwo
  00071	cc		 int	 3
$LN6@OnTCPNetwo:

; 6603 : 	if (pPropertyUse->wPropCount==0) return false;

  00072	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUse$[ebp]
  00075	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00079	85 c9		 test	 ecx, ecx
  0007b	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0007d	32 c0		 xor	 al, al
  0007f	e9 a4 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6604 : 
; 6605 : 	//变量定义
; 6606 : 	DBR_GR_PropertyUse PropertyUseRequest;
; 6607 : 	ZeroMemory(&PropertyUseRequest,sizeof(PropertyUseRequest));

  00084	6a 14		 push	 20			; 00000014H
  00086	6a 00		 push	 0
  00088	8d 45 e0	 lea	 eax, DWORD PTR _PropertyUseRequest$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 _memset
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6608 : 	PropertyUseRequest.dwUserID = pPropertyUse->dwUserID;

  00094	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUse$[ebp]
  00097	8b 08		 mov	 ecx, DWORD PTR [eax]
  00099	89 4d e0	 mov	 DWORD PTR _PropertyUseRequest$[ebp], ecx

; 6609 : 	PropertyUseRequest.dwRecvUserID = pPropertyUse->dwRecvUserID;

  0009c	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUse$[ebp]
  0009f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a2	89 4d e4	 mov	 DWORD PTR _PropertyUseRequest$[ebp+4], ecx

; 6610 : 	PropertyUseRequest.wPropCount = pPropertyUse->wPropCount;

  000a5	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUse$[ebp]
  000a8	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  000ac	66 89 4d ec	 mov	 WORD PTR _PropertyUseRequest$[ebp+12], cx

; 6611 : 	PropertyUseRequest.dwPropID = pPropertyUse->dwPropID;

  000b0	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUse$[ebp]
  000b3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b6	89 4d e8	 mov	 DWORD PTR _PropertyUseRequest$[ebp+8], ecx

; 6612 : 
; 6613 : 	//获取用户
; 6614 : 	WORD wBindIndex=LOWORD(dwSocketID);

  000b9	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000bc	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000c1	66 89 45 dc	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6615 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  000c5	0f b7 45 dc	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000d5	ff d0		 call	 eax
  000d7	89 45 d8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6616 : 	//系统信息
; 6617 : 	PropertyUseRequest.dwClientAddr=pIServerUserItem->GetClientAddr();

  000da	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000dd	8b 10		 mov	 edx, DWORD PTR [eax]
  000df	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000e5	ff d0		 call	 eax
  000e7	89 45 f0	 mov	 DWORD PTR _PropertyUseRequest$[ebp+16], eax

; 6618 : 	
; 6619 : 	//投递数据
; 6620 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_PROPERTY_USE,dwSocketID,&PropertyUseRequest,sizeof(PropertyUseRequest));

  000ea	6a 00		 push	 0
  000ec	6a 14		 push	 20			; 00000014H
  000ee	8d 45 e0	 lea	 eax, DWORD PTR _PropertyUseRequest$[ebp]
  000f1	50		 push	 eax
  000f2	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  000f5	51		 push	 ecx
  000f6	68 87 03 00 00	 push	 903			; 00000387H
  000fb	8b 55 d8	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000fe	8b 02		 mov	 eax, DWORD PTR [edx]
  00100	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00103	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00106	ff d2		 call	 edx
  00108	50		 push	 eax
  00109	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00112	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00115	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0011b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0011d	50		 push	 eax
  0011e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00121	ff d2		 call	 edx
  00123	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6621 : 	return true;

  00126	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6622 : }

  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012e	33 cd		 xor	 ecx, ebp
  00130	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubPropertyUse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -68				; size = 4
_wBindIndex$ = -64					; size = 2
_QueryBackpack$ = -60					; size = 48
_pBackpackProperty$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubPropertyBackpack, COMDAT
; _this$ = ecx

; 6571 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6572 : 	//效验参数
; 6573 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_BackpackProperty));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 08	 cmp	 eax, 8
  00020	74 19		 je	 SHORT $LN4@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN4@OnTCPNetwo
  0003a	cc		 int	 3
$LN4@OnTCPNetwo:

; 6574 : 	if (wDataSize!=sizeof(CMD_GR_C_BackpackProperty)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 08	 cmp	 eax, 8
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 86 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6575 : 
; 6576 : 	CMD_GR_C_BackpackProperty* pBackpackProperty = (CMD_GR_C_BackpackProperty*)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pBackpackProperty$[ebp], eax

; 6577 : 
; 6578 : 	DBR_GR_QueryBackpack QueryBackpack;
; 6579 : 	QueryBackpack.dwUserID = pBackpackProperty->dwUserID;

  00051	8b 45 f4	 mov	 eax, DWORD PTR _pBackpackProperty$[ebp]
  00054	8b 08		 mov	 ecx, DWORD PTR [eax]
  00056	89 4d c4	 mov	 DWORD PTR _QueryBackpack$[ebp], ecx

; 6580 : 	QueryBackpack.dwKindID = pBackpackProperty->dwKindID;

  00059	8b 45 f4	 mov	 eax, DWORD PTR _pBackpackProperty$[ebp]
  0005c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005f	89 4d c8	 mov	 DWORD PTR _QueryBackpack$[ebp+4], ecx

; 6581 : 	//获取用户
; 6582 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00062	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00065	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0006a	66 89 45 c0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6583 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0006e	0f b7 45 c0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00072	50		 push	 eax
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0007e	ff d0		 call	 eax
  00080	89 45 bc	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6584 : 	//系统信息
; 6585 : 	QueryBackpack.dwClientAddr=pIServerUserItem->GetClientAddr();

  00083	8b 45 bc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	8b 4d bc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0008b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0008e	ff d0		 call	 eax
  00090	89 45 cc	 mov	 DWORD PTR _QueryBackpack$[ebp+8], eax

; 6586 : 
; 6587 : 	//投递数据
; 6588 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_QUERY_BACKPACK,dwSocketID,&QueryBackpack,sizeof(QueryBackpack));

  00093	6a 00		 push	 0
  00095	6a 30		 push	 48			; 00000030H
  00097	8d 45 c4	 lea	 eax, DWORD PTR _QueryBackpack$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0009e	51		 push	 ecx
  0009f	68 86 03 00 00	 push	 902			; 00000386H
  000a4	8b 55 bc	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000a7	8b 02		 mov	 eax, DWORD PTR [edx]
  000a9	8b 4d bc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ac	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  000af	ff d2		 call	 edx
  000b1	50		 push	 eax
  000b2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000bb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000c4	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000c6	50		 push	 eax
  000c7	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000ca	ff d2		 call	 edx
  000cc	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6589 : 	return true;

  000cf	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6590 : }

  000d1	5f		 pop	 edi
  000d2	5e		 pop	 esi
  000d3	5b		 pop	 ebx
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d7	33 cd		 xor	 ecx, ebp
  000d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubPropertyBackpack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -108				; size = 4
_wBindIndex$ = -104					; size = 2
_PropertyRequest$ = -100				; size = 88
_pPropertyBuy$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubGamePropertyBuy, COMDAT
; _this$ = ecx

; 6535 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6536 : 	//效验参数
; 6537 : 	ASSERT(wDataSize==sizeof(CMD_GR_PropertyBuy));

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 53	 cmp	 eax, 83			; 00000053H
  00020	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0003a	cc		 int	 3
$LN5@OnTCPNetwo:

; 6538 : 	if (wDataSize!=sizeof(CMD_GR_PropertyBuy)) return false;

  0003b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 53	 cmp	 eax, 83			; 00000053H
  00042	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00044	32 c0		 xor	 al, al
  00046	e9 f7 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6539 : 
; 6540 : 	//变量定义
; 6541 : 	CMD_GR_PropertyBuy * pPropertyBuy=(CMD_GR_PropertyBuy *)pData;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004e	89 45 f4	 mov	 DWORD PTR _pPropertyBuy$[ebp], eax

; 6542 : 
; 6543 : 	//数据效验
; 6544 : 	ASSERT(pPropertyBuy->dwDiamondCount>0);

  00051	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  00054	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00058	77 19		 ja	 SHORT $LN6@OnTCPNetwo
  0005a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00060	83 c1 09	 add	 ecx, 9
  00063	51		 push	 ecx
  00064	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00069	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006e	85 c0		 test	 eax, eax
  00070	74 01		 je	 SHORT $LN6@OnTCPNetwo
  00072	cc		 int	 3
$LN6@OnTCPNetwo:

; 6545 : 	if (pPropertyBuy->dwDiamondCount == 0) return false;

  00073	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  00076	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0007a	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  0007c	32 c0		 xor	 al, al
  0007e	e9 bf 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6546 : 
; 6547 : 	//变量定义
; 6548 : 	DBR_GR_PropertyBuy PropertyRequest;
; 6549 : 	ZeroMemory(&PropertyRequest,sizeof(PropertyRequest));

  00083	6a 58		 push	 88			; 00000058H
  00085	6a 00		 push	 0
  00087	8d 45 9c	 lea	 eax, DWORD PTR _PropertyRequest$[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 _memset
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6550 : 
; 6551 : 	//获取用户
; 6552 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00093	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00096	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0009b	66 89 45 98	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6553 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0009f	0f b7 45 98	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000af	ff d0		 call	 eax
  000b1	89 45 94	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6554 : 
; 6555 : 	//购买信息
; 6556 : 	PropertyRequest.dwUserID=pPropertyBuy->dwUserID;

  000b4	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  000b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b9	89 4d 9c	 mov	 DWORD PTR _PropertyRequest$[ebp], ecx

; 6557 : 	PropertyRequest.dwPropertyID=pPropertyBuy->dwPropertyID;

  000bc	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	89 4d a0	 mov	 DWORD PTR _PropertyRequest$[ebp+4], ecx

; 6558 : 	PropertyRequest.dwDiamondCount=pPropertyBuy->dwDiamondCount;

  000c5	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  000c8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000cb	89 4d a4	 mov	 DWORD PTR _PropertyRequest$[ebp+8], ecx

; 6559 : 	
; 6560 : 	PropertyRequest.dwClientAddr=pIServerUserItem->GetClientAddr();

  000ce	8b 45 94	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d1	8b 10		 mov	 edx, DWORD PTR [eax]
  000d3	8b 4d 94	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000d9	ff d0		 call	 eax
  000db	89 45 cc	 mov	 DWORD PTR _PropertyRequest$[ebp+48], eax

; 6561 : 	lstrcpyn(PropertyRequest.szPassword,pPropertyBuy->szPassword,CountArray(PropertyRequest.szPassword));

  000de	6a 21		 push	 33			; 00000021H
  000e0	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  000e3	83 c0 11	 add	 eax, 17			; 00000011H
  000e6	50		 push	 eax
  000e7	8d 4d a8	 lea	 ecx, DWORD PTR _PropertyRequest$[ebp+12]
  000ea	51		 push	 ecx
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6562 : 	lstrcpyn(PropertyRequest.szMachineID,pPropertyBuy->szMachineID,CountArray(PropertyRequest.szMachineID));

  000f1	6a 21		 push	 33			; 00000021H
  000f3	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyBuy$[ebp]
  000f6	83 c0 32	 add	 eax, 50			; 00000032H
  000f9	50		 push	 eax
  000fa	8d 4d d0	 lea	 ecx, DWORD PTR _PropertyRequest$[ebp+52]
  000fd	51		 push	 ecx
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 6563 : 
; 6564 : 	//投递数据
; 6565 : 	m_pIDBCorrespondManager->PostDataBaseRequest(pIServerUserItem->GetUserID(),DBR_GR_GAME_PROPERTY_BUY,dwSocketID,&PropertyRequest,sizeof(PropertyRequest));

  00104	6a 00		 push	 0
  00106	6a 58		 push	 88			; 00000058H
  00108	8d 45 9c	 lea	 eax, DWORD PTR _PropertyRequest$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0010f	51		 push	 ecx
  00110	68 85 03 00 00	 push	 901			; 00000385H
  00115	8b 55 94	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00118	8b 02		 mov	 eax, DWORD PTR [edx]
  0011a	8b 4d 94	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0011d	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00120	ff d2		 call	 edx
  00122	50		 push	 eax
  00123	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00126	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0012c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0012f	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00135	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00137	50		 push	 eax
  00138	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0013b	ff d2		 call	 edx
  0013d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 6566 : 	
; 6567 : 	return true;

  00140	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6568 : }

  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx
  00145	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00148	33 cd		 xor	 ecx, ebp
  0014a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubGamePropertyBuy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv321 = -122						; size = 2
_pTempServerUserItem$1 = -56				; size = 4
_wEnumIndex$2 = -52					; size = 2
_WisperExpression$ = -48				; size = 10
_wTableIDRecv$3 = -36					; size = 2
_wTableIDSend$4 = -32					; size = 2
_bForfend$5 = -25					; size = 1
_pIRecvUserItem$ = -24					; size = 4
_pISendUserItem$ = -20					; size = 4
_wBindIndex$ = -16					; size = 2
_pWisperExpression$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubWisperExpression, COMDAT
; _this$ = ecx

; 6426 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6427 : 	//效验参数
; 6428 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_WisperExpression));

  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0001d	74 19		 je	 SHORT $LN26@OnTCPNetwo
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00025	83 c1 02	 add	 ecx, 2
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00033	85 c0		 test	 eax, eax
  00035	74 01		 je	 SHORT $LN26@OnTCPNetwo
  00037	cc		 int	 3
$LN26@OnTCPNetwo:

; 6429 : 	if (wDataSize!=sizeof(CMD_GR_C_WisperExpression)) return false;

  00038	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003c	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0003f	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 da 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 6430 : 
; 6431 : 	//变量定义
; 6432 : 	CMD_GR_C_WisperExpression * pWisperExpression=(CMD_GR_C_WisperExpression *)pData;

  00048	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004b	89 45 f4	 mov	 DWORD PTR _pWisperExpression$[ebp], eax

; 6433 : 
; 6434 : 	//获取用户
; 6435 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0004e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00051	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00056	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6436 : 	IServerUserItem * pISendUserItem=GetBindUserItem(wBindIndex);

  0005a	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0006a	ff d0		 call	 eax
  0006c	89 45 ec	 mov	 DWORD PTR _pISendUserItem$[ebp], eax

; 6437 : 
; 6438 : 	//用户效验
; 6439 : 	ASSERT(pISendUserItem!=NULL);

  0006f	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  00073	75 18		 jne	 SHORT $LN27@OnTCPNetwo
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0007a	83 c0 0d	 add	 eax, 13			; 0000000dH
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00083	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00088	85 c0		 test	 eax, eax
  0008a	74 01		 je	 SHORT $LN27@OnTCPNetwo
  0008c	cc		 int	 3
$LN27@OnTCPNetwo:

; 6440 : 	if (pISendUserItem==NULL) return false;

  0008d	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  00091	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00093	32 c0		 xor	 al, al
  00095	e9 88 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6441 : 
; 6442 : 	//寻找用户
; 6443 : 	IServerUserItem * pIRecvUserItem=m_ServerUserManager.SearchUserItem(pWisperExpression->dwTargetUserID);

  0009a	8b 45 f4	 mov	 eax, DWORD PTR _pWisperExpression$[ebp]
  0009d	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  000a0	51		 push	 ecx
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000aa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ad	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000b3	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000b6	ff d2		 call	 edx
  000b8	89 45 e8	 mov	 DWORD PTR _pIRecvUserItem$[ebp], eax

; 6444 : 	if (pIRecvUserItem==NULL) return true;

  000bb	83 7d e8 00	 cmp	 DWORD PTR _pIRecvUserItem$[ebp], 0
  000bf	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  000c1	b0 01		 mov	 al, 1
  000c3	e9 5a 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6445 : 
; 6446 : 	//状态判断
; 6447 : 	if ((CServerRule::IsForfendWisperChat(m_pGameServiceOption->dwServerRule)==true)&&(pISendUserItem->GetMasterOrder()==0))

  000c8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cb	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000ce	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000d1	52		 push	 edx
  000d2	e8 00 00 00 00	 call	 ?IsForfendWisperChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperChat
  000d7	83 c4 04	 add	 esp, 4
  000da	0f b6 c0	 movzx	 eax, al
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 3a		 jne	 SHORT $LN8@OnTCPNetwo
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  000e5	8b 10		 mov	 edx, DWORD PTR [eax]
  000e7	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  000ea	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  000f0	ff d0		 call	 eax
  000f2	0f b6 c8	 movzx	 ecx, al
  000f5	85 c9		 test	 ecx, ecx
  000f7	75 23		 jne	 SHORT $LN8@OnTCPNetwo

; 6448 : 	{
; 6449 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，当前此游戏房间禁止用户私聊！"),SMT_CHAT);

  000f9	6a 01		 push	 1
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@EOEHCMPC@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?K?$LN?A@
  00100	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00103	50		 push	 eax
  00104	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	83 c1 04	 add	 ecx, 4
  0010a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00110	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00113	ff d2		 call	 edx

; 6450 : 		return true;

  00115	b0 01		 mov	 al, 1
  00117	e9 06 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6451 : 	}
; 6452 : 
; 6453 : 	//同桌判断
; 6454 : 	if ((CServerRule::IsForfendWisperOnGame(m_pGameServiceOption->dwServerRule)==true)&&(pISendUserItem->GetMasterOrder()==0))

  0011c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00122	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00125	52		 push	 edx
  00126	e8 00 00 00 00	 call	 ?IsForfendWisperOnGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperOnGame
  0012b	83 c4 04	 add	 esp, 4
  0012e	0f b6 c0	 movzx	 eax, al
  00131	83 f8 01	 cmp	 eax, 1
  00134	0f 85 1d 01 00
	00		 jne	 $LN9@OnTCPNetwo
  0013a	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0013d	8b 10		 mov	 edx, DWORD PTR [eax]
  0013f	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00142	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00148	ff d0		 call	 eax
  0014a	0f b6 c8	 movzx	 ecx, al
  0014d	85 c9		 test	 ecx, ecx
  0014f	0f 85 02 01 00
	00		 jne	 $LN9@OnTCPNetwo

; 6455 : 	{
; 6456 : 		//变量定义
; 6457 : 		bool bForfend=true;

  00155	c6 45 e7 01	 mov	 BYTE PTR _bForfend$5[ebp], 1

; 6458 : 		WORD wTableIDSend=pISendUserItem->GetTableID();

  00159	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0015c	8b 10		 mov	 edx, DWORD PTR [eax]
  0015e	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00161	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00164	ff d0		 call	 eax
  00166	66 89 45 e0	 mov	 WORD PTR _wTableIDSend$4[ebp], ax

; 6459 : 		WORD wTableIDRecv=pIRecvUserItem->GetTableID();

  0016a	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  0016d	8b 10		 mov	 edx, DWORD PTR [eax]
  0016f	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  00172	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00175	ff d0		 call	 eax
  00177	66 89 45 dc	 mov	 WORD PTR _wTableIDRecv$3[ebp], ax

; 6460 : 
; 6461 : 		//规则判断
; 6462 : 		if ((bForfend==true)&&(pIRecvUserItem->GetMasterOrder()!=0)) bForfend=false;

  0017b	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  0017f	83 f8 01	 cmp	 eax, 1
  00182	75 1b		 jne	 SHORT $LN10@OnTCPNetwo
  00184	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  00187	8b 10		 mov	 edx, DWORD PTR [eax]
  00189	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  0018c	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00192	ff d0		 call	 eax
  00194	0f b6 c8	 movzx	 ecx, al
  00197	85 c9		 test	 ecx, ecx
  00199	74 04		 je	 SHORT $LN10@OnTCPNetwo
  0019b	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN10@OnTCPNetwo:

; 6463 : 		if ((bForfend==true)&&(pIRecvUserItem->GetMasterOrder()!=0)) bForfend=false;

  0019f	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  001a3	83 f8 01	 cmp	 eax, 1
  001a6	75 1b		 jne	 SHORT $LN11@OnTCPNetwo
  001a8	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  001ab	8b 10		 mov	 edx, DWORD PTR [eax]
  001ad	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  001b0	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001b6	ff d0		 call	 eax
  001b8	0f b6 c8	 movzx	 ecx, al
  001bb	85 c9		 test	 ecx, ecx
  001bd	74 04		 je	 SHORT $LN11@OnTCPNetwo
  001bf	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN11@OnTCPNetwo:

; 6464 : 		if ((bForfend==true)&&(pISendUserItem->GetUserStatus()!=US_PLAYING)) bForfend=false;

  001c3	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  001c7	83 f8 01	 cmp	 eax, 1
  001ca	75 19		 jne	 SHORT $LN12@OnTCPNetwo
  001cc	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  001cf	8b 10		 mov	 edx, DWORD PTR [eax]
  001d1	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  001d4	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  001d7	ff d0		 call	 eax
  001d9	0f b6 c8	 movzx	 ecx, al
  001dc	83 f9 05	 cmp	 ecx, 5
  001df	74 04		 je	 SHORT $LN12@OnTCPNetwo
  001e1	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN12@OnTCPNetwo:

; 6465 : 		if ((bForfend==true)&&(pIRecvUserItem->GetUserStatus()!=US_PLAYING)) bForfend=false;

  001e5	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  001e9	83 f8 01	 cmp	 eax, 1
  001ec	75 19		 jne	 SHORT $LN13@OnTCPNetwo
  001ee	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  001f1	8b 10		 mov	 edx, DWORD PTR [eax]
  001f3	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  001f6	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  001f9	ff d0		 call	 eax
  001fb	0f b6 c8	 movzx	 ecx, al
  001fe	83 f9 05	 cmp	 ecx, 5
  00201	74 04		 je	 SHORT $LN13@OnTCPNetwo
  00203	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN13@OnTCPNetwo:

; 6466 : 		if ((bForfend==true)&&((wTableIDSend==INVALID_TABLE)||(wTableIDSend!=wTableIDRecv))) bForfend=false;

  00207	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  0020b	83 f8 01	 cmp	 eax, 1
  0020e	75 1b		 jne	 SHORT $LN14@OnTCPNetwo
  00210	0f b7 45 e0	 movzx	 eax, WORD PTR _wTableIDSend$4[ebp]
  00214	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00219	74 0c		 je	 SHORT $LN15@OnTCPNetwo
  0021b	0f b7 45 e0	 movzx	 eax, WORD PTR _wTableIDSend$4[ebp]
  0021f	0f b7 4d dc	 movzx	 ecx, WORD PTR _wTableIDRecv$3[ebp]
  00223	3b c1		 cmp	 eax, ecx
  00225	74 04		 je	 SHORT $LN14@OnTCPNetwo
$LN15@OnTCPNetwo:
  00227	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN14@OnTCPNetwo:

; 6467 : 
; 6468 : 		//提示消息
; 6469 : 		if (bForfend==true)

  0022b	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  0022f	83 f8 01	 cmp	 eax, 1
  00232	75 23		 jne	 SHORT $LN9@OnTCPNetwo

; 6470 : 		{
; 6471 : 			SendRoomMessage(pISendUserItem,TEXT("抱歉，此游戏房间不允许在游戏中与同桌的玩家私聊！"),SMT_EJECT|SMT_CHAT);

  00234	6a 03		 push	 3
  00236	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@MDMMFNJG@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LC?$LL?T?J?P?m?T?Z?S?N?O?$LH?V?P?S@
  0023b	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0023e	50		 push	 eax
  0023f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00242	83 c1 04	 add	 ecx, 4
  00245	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00248	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0024b	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0024e	ff d2		 call	 edx

; 6472 : 			return true;

  00250	b0 01		 mov	 al, 1
  00252	e9 cb 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6473 : 		}
; 6474 : 	}
; 6475 : 
; 6476 : 	//权限判断
; 6477 : 	if (CUserRight::CanWisper(pISendUserItem->GetUserRight())==false)

  00257	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0025a	8b 10		 mov	 edx, DWORD PTR [eax]
  0025c	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  0025f	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00262	ff d0		 call	 eax
  00264	50		 push	 eax
  00265	e8 00 00 00 00	 call	 ?CanWisper@CUserRight@@SA_NK@Z ; CUserRight::CanWisper
  0026a	83 c4 04	 add	 esp, 4
  0026d	0f b6 c8	 movzx	 ecx, al
  00270	85 c9		 test	 ecx, ecx
  00272	75 23		 jne	 SHORT $LN17@OnTCPNetwo

; 6478 : 	{
; 6479 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，您没有发送私聊的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  00274	6a 03		 push	 3
  00276	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JGPLIPLP@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LH?$KC?K?M?K?$LN?A?D?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  0027b	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0027e	50		 push	 eax
  0027f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	83 c1 04	 add	 ecx, 4
  00285	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00288	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0028b	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0028e	ff d2		 call	 edx

; 6480 : 		return true;

  00290	b0 01		 mov	 al, 1
  00292	e9 8b 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 6481 : 	}
; 6482 : 
; 6483 : 	//权限判断
; 6484 : 	if (pWisperExpression->dwSendUserID!=pISendUserItem->GetUserID() && (pISendUserItem->GetMasterOrder()==0 ||

  00297	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0029a	8b 10		 mov	 edx, DWORD PTR [eax]
  0029c	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  0029f	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  002a2	ff d0		 call	 eax
  002a4	8b 4d f4	 mov	 ecx, DWORD PTR _pWisperExpression$[ebp]
  002a7	39 41 02	 cmp	 DWORD PTR [ecx+2], eax
  002aa	74 3b		 je	 SHORT $LN18@OnTCPNetwo
  002ac	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  002af	8b 10		 mov	 edx, DWORD PTR [eax]
  002b1	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  002b4	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  002ba	ff d0		 call	 eax
  002bc	0f b6 c8	 movzx	 ecx, al
  002bf	85 c9		 test	 ecx, ecx
  002c1	74 1d		 je	 SHORT $LN19@OnTCPNetwo
  002c3	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  002c6	8b 10		 mov	 edx, DWORD PTR [eax]
  002c8	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  002cb	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  002ce	ff d0		 call	 eax
  002d0	50		 push	 eax
  002d1	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  002d6	83 c4 04	 add	 esp, 4
  002d9	0f b6 c8	 movzx	 ecx, al
  002dc	85 c9		 test	 ecx, ecx
  002de	75 07		 jne	 SHORT $LN18@OnTCPNetwo
$LN19@OnTCPNetwo:

; 6485 : 		CMasterRight::CanManagerAndroid(pISendUserItem->GetMasterRight())==false))
; 6486 : 	{
; 6487 : 		return false;

  002e0	32 c0		 xor	 al, al
  002e2	e9 3b 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 6488 : 	}
; 6489 : 
; 6490 : 	//变量定义
; 6491 : 	CMD_GR_S_WisperExpression WisperExpression;
; 6492 : 	ZeroMemory(&WisperExpression,sizeof(WisperExpression));

  002e7	6a 0a		 push	 10			; 0000000aH
  002e9	6a 00		 push	 0
  002eb	8d 45 d0	 lea	 eax, DWORD PTR _WisperExpression$[ebp]
  002ee	50		 push	 eax
  002ef	e8 00 00 00 00	 call	 _memset
  002f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6493 : 
; 6494 : 	//构造数据
; 6495 : 	WisperExpression.wItemIndex=pWisperExpression->wItemIndex;

  002f7	8b 45 f4	 mov	 eax, DWORD PTR _pWisperExpression$[ebp]
  002fa	66 8b 08	 mov	 cx, WORD PTR [eax]
  002fd	66 89 4d d0	 mov	 WORD PTR _WisperExpression$[ebp], cx

; 6496 : 	WisperExpression.dwSendUserID=pISendUserItem->GetUserID();

  00301	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00304	8b 10		 mov	 edx, DWORD PTR [eax]
  00306	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00309	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0030c	ff d0		 call	 eax
  0030e	89 45 d2	 mov	 DWORD PTR _WisperExpression$[ebp+2], eax

; 6497 : 	WisperExpression.dwTargetUserID=pWisperExpression->dwTargetUserID;

  00311	8b 45 f4	 mov	 eax, DWORD PTR _pWisperExpression$[ebp]
  00314	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  00317	89 4d d6	 mov	 DWORD PTR _WisperExpression$[ebp+6], ecx

; 6498 : 
; 6499 : 	//转发消息
; 6500 : 	SendData(pISendUserItem,MDM_GR_USER,SUB_GR_WISPER_EXPRESSION,&WisperExpression,sizeof(WisperExpression));

  0031a	6a 0a		 push	 10			; 0000000aH
  0031c	8d 45 d0	 lea	 eax, DWORD PTR _WisperExpression$[ebp]
  0031f	50		 push	 eax
  00320	68 cc 00 00 00	 push	 204			; 000000ccH
  00325	6a 03		 push	 3
  00327	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  0032a	51		 push	 ecx
  0032b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0032e	83 c1 04	 add	 ecx, 4
  00331	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00334	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00337	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0033a	ff d2		 call	 edx

; 6501 : 
; 6502 : 	//转发消息
; 6503 : 	WisperExpression.dwSendUserID=pWisperExpression->dwSendUserID;

  0033c	8b 45 f4	 mov	 eax, DWORD PTR _pWisperExpression$[ebp]
  0033f	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00342	89 4d d2	 mov	 DWORD PTR _WisperExpression$[ebp+2], ecx

; 6504 : 	SendData(pIRecvUserItem,MDM_GR_USER,SUB_GR_WISPER_EXPRESSION,&WisperExpression,sizeof(WisperExpression));

  00345	6a 0a		 push	 10			; 0000000aH
  00347	8d 45 d0	 lea	 eax, DWORD PTR _WisperExpression$[ebp]
  0034a	50		 push	 eax
  0034b	68 cc 00 00 00	 push	 204			; 000000ccH
  00350	6a 03		 push	 3
  00352	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  00355	51		 push	 ecx
  00356	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00359	83 c1 04	 add	 ecx, 4
  0035c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0035f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00362	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00365	ff d2		 call	 edx

; 6505 : 
; 6506 : 	//机器判断
; 6507 : 	if(pIRecvUserItem->IsAndroidUser()==true)

  00367	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  0036a	8b 10		 mov	 edx, DWORD PTR [eax]
  0036c	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  0036f	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00375	ff d0		 call	 eax
  00377	0f b6 c8	 movzx	 ecx, al
  0037a	83 f9 01	 cmp	 ecx, 1
  0037d	0f 85 9d 00 00
	00		 jne	 $LN20@OnTCPNetwo

; 6508 : 	{
; 6509 : 		//枚举用户
; 6510 : 		WORD wEnumIndex=0;

  00383	33 c0		 xor	 eax, eax
  00385	66 89 45 cc	 mov	 WORD PTR _wEnumIndex$2[ebp], ax

; 6511 : 		IServerUserItem * pTempServerUserItem=NULL;

  00389	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pTempServerUserItem$1[ebp], 0
$LN4@OnTCPNetwo:

; 6512 : 		do
; 6513 : 		{
; 6514 : 			pTempServerUserItem=m_ServerUserManager.EnumUserItem(wEnumIndex++);

  00390	66 8b 45 cc	 mov	 ax, WORD PTR _wEnumIndex$2[ebp]
  00394	66 89 45 86	 mov	 WORD PTR tv321[ebp], ax
  00398	0f b7 4d 86	 movzx	 ecx, WORD PTR tv321[ebp]
  0039c	51		 push	 ecx
  0039d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a0	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  003a6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003a9	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  003af	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  003b2	ff d2		 call	 edx
  003b4	89 45 c8	 mov	 DWORD PTR _pTempServerUserItem$1[ebp], eax
  003b7	66 8b 45 cc	 mov	 ax, WORD PTR _wEnumIndex$2[ebp]
  003bb	66 83 c0 01	 add	 ax, 1
  003bf	66 89 45 cc	 mov	 WORD PTR _wEnumIndex$2[ebp], ax

; 6515 : 			if(pTempServerUserItem!=NULL)

  003c3	83 7d c8 00	 cmp	 DWORD PTR _pTempServerUserItem$1[ebp], 0
  003c7	74 4d		 je	 SHORT $LN2@OnTCPNetwo

; 6516 : 			{
; 6517 : 				if(pTempServerUserItem==pISendUserItem) continue;

  003c9	8b 45 c8	 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  003cc	3b 45 ec	 cmp	 eax, DWORD PTR _pISendUserItem$[ebp]
  003cf	75 02		 jne	 SHORT $LN22@OnTCPNetwo
  003d1	eb 43		 jmp	 SHORT $LN2@OnTCPNetwo
$LN22@OnTCPNetwo:

; 6518 : 				if(pTempServerUserItem==pIRecvUserItem) continue;

  003d3	8b 45 c8	 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  003d6	3b 45 e8	 cmp	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  003d9	75 02		 jne	 SHORT $LN23@OnTCPNetwo
  003db	eb 39		 jmp	 SHORT $LN2@OnTCPNetwo
$LN23@OnTCPNetwo:

; 6519 : 				if(pTempServerUserItem->GetMasterOrder()>0)

  003dd	8b 45 c8	 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  003e0	8b 10		 mov	 edx, DWORD PTR [eax]
  003e2	8b 4d c8	 mov	 ecx, DWORD PTR _pTempServerUserItem$1[ebp]
  003e5	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  003eb	ff d0		 call	 eax
  003ed	0f b6 c8	 movzx	 ecx, al
  003f0	85 c9		 test	 ecx, ecx
  003f2	7e 22		 jle	 SHORT $LN2@OnTCPNetwo

; 6520 : 				{
; 6521 : 					SendData(pTempServerUserItem,MDM_GR_USER,SUB_GR_WISPER_EXPRESSION,&WisperExpression,sizeof(WisperExpression));

  003f4	6a 0a		 push	 10			; 0000000aH
  003f6	8d 45 d0	 lea	 eax, DWORD PTR _WisperExpression$[ebp]
  003f9	50		 push	 eax
  003fa	68 cc 00 00 00	 push	 204			; 000000ccH
  003ff	6a 03		 push	 3
  00401	8b 4d c8	 mov	 ecx, DWORD PTR _pTempServerUserItem$1[ebp]
  00404	51		 push	 ecx
  00405	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00408	83 c1 04	 add	 ecx, 4
  0040b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0040e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00411	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00414	ff d2		 call	 edx
$LN2@OnTCPNetwo:

; 6522 : 				}
; 6523 : 			}
; 6524 : 		}while(pTempServerUserItem!=NULL);

  00416	83 7d c8 00	 cmp	 DWORD PTR _pTempServerUserItem$1[ebp], 0
  0041a	0f 85 70 ff ff
	ff		 jne	 $LN4@OnTCPNetwo
$LN20@OnTCPNetwo:

; 6525 : 	}
; 6526 : 
; 6527 : 	return true;

  00420	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6528 : }

  00422	5f		 pop	 edi
  00423	5e		 pop	 esi
  00424	5b		 pop	 ebx
  00425	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00428	33 cd		 xor	 ecx, ebp
  0042a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0042f	8b e5		 mov	 esp, ebp
  00431	5d		 pop	 ebp
  00432	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubWisperExpression
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_UserExpression$ = -36					; size = 10
_pIRecvUserItem$ = -24					; size = 4
_pISendUserItem$ = -20					; size = 4
_wBindIndex$ = -16					; size = 2
_pUserExpression$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserExpression, COMDAT
; _this$ = ecx

; 6247 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6248 : 	//效验参数
; 6249 : 	ASSERT(wDataSize==sizeof(CMD_GR_C_UserExpression));

  00016	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0001d	74 19		 je	 SHORT $LN11@OnTCPNetwo
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00025	83 c1 02	 add	 ecx, 2
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00033	85 c0		 test	 eax, eax
  00035	74 01		 je	 SHORT $LN11@OnTCPNetwo
  00037	cc		 int	 3
$LN11@OnTCPNetwo:

; 6250 : 	if (wDataSize!=sizeof(CMD_GR_C_UserExpression)) return false;

  00038	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003c	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0003f	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00041	32 c0		 xor	 al, al
  00043	e9 c2 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6251 : 
; 6252 : 	//变量定义
; 6253 : 	CMD_GR_C_UserExpression * pUserExpression=(CMD_GR_C_UserExpression *)pData;

  00048	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0004b	89 45 f4	 mov	 DWORD PTR _pUserExpression$[ebp], eax

; 6254 : 
; 6255 : 	//获取用户
; 6256 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0004e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00051	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00056	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6257 : 	IServerUserItem * pISendUserItem=GetBindUserItem(wBindIndex);

  0005a	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0006a	ff d0		 call	 eax
  0006c	89 45 ec	 mov	 DWORD PTR _pISendUserItem$[ebp], eax

; 6258 : 
; 6259 : 	//用户效验
; 6260 : 	ASSERT(pISendUserItem!=NULL);

  0006f	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  00073	75 18		 jne	 SHORT $LN12@OnTCPNetwo
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0007a	83 c0 0d	 add	 eax, 13			; 0000000dH
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00083	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00088	85 c0		 test	 eax, eax
  0008a	74 01		 je	 SHORT $LN12@OnTCPNetwo
  0008c	cc		 int	 3
$LN12@OnTCPNetwo:

; 6261 : 	if (pISendUserItem==NULL) return false;

  0008d	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  00091	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00093	32 c0		 xor	 al, al
  00095	e9 70 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6262 : 
; 6263 : 	//寻找用户
; 6264 : 	IServerUserItem * pIRecvUserItem=NULL;

  0009a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pIRecvUserItem$[ebp], 0

; 6265 : 	if (pUserExpression->dwTargetUserID!=0)

  000a1	8b 45 f4	 mov	 eax, DWORD PTR _pUserExpression$[ebp]
  000a4	83 78 06 00	 cmp	 DWORD PTR [eax+6], 0
  000a8	74 2e		 je	 SHORT $LN4@OnTCPNetwo

; 6266 : 	{
; 6267 : 		pIRecvUserItem=m_ServerUserManager.SearchUserItem(pUserExpression->dwTargetUserID);

  000aa	8b 45 f4	 mov	 eax, DWORD PTR _pUserExpression$[ebp]
  000ad	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  000b0	51		 push	 ecx
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000ba	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000c3	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000c6	ff d2		 call	 edx
  000c8	89 45 e8	 mov	 DWORD PTR _pIRecvUserItem$[ebp], eax

; 6268 : 		if (pIRecvUserItem==NULL) return true;

  000cb	83 7d e8 00	 cmp	 DWORD PTR _pIRecvUserItem$[ebp], 0
  000cf	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  000d1	b0 01		 mov	 al, 1
  000d3	e9 32 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6269 : 	}
; 6270 : 
; 6271 : 	//状态判断
; 6272 : 	if ((CServerRule::IsForfendRoomChat(m_pGameServiceOption->dwServerRule)==true)&&(pISendUserItem->GetMasterOrder()==0))

  000d8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000db	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000de	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000e1	52		 push	 edx
  000e2	e8 00 00 00 00	 call	 ?IsForfendRoomChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomChat
  000e7	83 c4 04	 add	 esp, 4
  000ea	0f b6 c0	 movzx	 eax, al
  000ed	83 f8 01	 cmp	 eax, 1
  000f0	75 3a		 jne	 SHORT $LN6@OnTCPNetwo
  000f2	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  000f5	8b 10		 mov	 edx, DWORD PTR [eax]
  000f7	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  000fa	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00100	ff d0		 call	 eax
  00102	0f b6 c8	 movzx	 ecx, al
  00105	85 c9		 test	 ecx, ecx
  00107	75 23		 jne	 SHORT $LN6@OnTCPNetwo

; 6273 : 	{
; 6274 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，当前此游戏房间禁止用户大厅聊天！"),SMT_CHAT);

  00109	6a 01		 push	 1
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OBNELMKK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LE?s?L@
  00110	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00113	50		 push	 eax
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	83 c1 04	 add	 ecx, 4
  0011a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00120	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00123	ff d2		 call	 edx

; 6275 : 		return true;

  00125	b0 01		 mov	 al, 1
  00127	e9 de 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6276 : 	}
; 6277 : 
; 6278 : 	//权限判断
; 6279 : 	if (CUserRight::CanRoomChat(pISendUserItem->GetUserRight())==false)

  0012c	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0012f	8b 10		 mov	 edx, DWORD PTR [eax]
  00131	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00134	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00137	ff d0		 call	 eax
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?CanRoomChat@CUserRight@@SA_NK@Z ; CUserRight::CanRoomChat
  0013f	83 c4 04	 add	 esp, 4
  00142	0f b6 c8	 movzx	 ecx, al
  00145	85 c9		 test	 ecx, ecx
  00147	75 23		 jne	 SHORT $LN7@OnTCPNetwo

; 6280 : 	{
; 6281 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，您没有大厅发言的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  00149	6a 03		 push	 3
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@EKHAPMJC@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LE?s?L?$PM?$LH?$KC?Q?T?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  00150	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00153	50		 push	 eax
  00154	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	83 c1 04	 add	 ecx, 4
  0015a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0015d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00160	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00163	ff d2		 call	 edx

; 6282 : 		return true;

  00165	b0 01		 mov	 al, 1
  00167	e9 9e 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6283 : 	}
; 6284 : 
; 6285 : 	//权限判断
; 6286 : 	if (pUserExpression->dwSendUserID!=pISendUserItem->GetUserID() && (pISendUserItem->GetMasterOrder()==0 ||

  0016c	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0016f	8b 10		 mov	 edx, DWORD PTR [eax]
  00171	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00174	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00177	ff d0		 call	 eax
  00179	8b 4d f4	 mov	 ecx, DWORD PTR _pUserExpression$[ebp]
  0017c	39 41 02	 cmp	 DWORD PTR [ecx+2], eax
  0017f	74 38		 je	 SHORT $LN8@OnTCPNetwo
  00181	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00184	8b 10		 mov	 edx, DWORD PTR [eax]
  00186	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00189	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0018f	ff d0		 call	 eax
  00191	0f b6 c8	 movzx	 ecx, al
  00194	85 c9		 test	 ecx, ecx
  00196	74 1d		 je	 SHORT $LN9@OnTCPNetwo
  00198	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0019b	8b 10		 mov	 edx, DWORD PTR [eax]
  0019d	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  001a0	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  001a3	ff d0		 call	 eax
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  001ab	83 c4 04	 add	 esp, 4
  001ae	0f b6 c8	 movzx	 ecx, al
  001b1	85 c9		 test	 ecx, ecx
  001b3	75 04		 jne	 SHORT $LN8@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6287 : 		CMasterRight::CanManagerAndroid(pISendUserItem->GetMasterRight())==false))
; 6288 : 	{
; 6289 : 		return false;

  001b5	32 c0		 xor	 al, al
  001b7	eb 51		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6290 : 	}
; 6291 : 
; 6292 : 	//构造消息
; 6293 : 	CMD_GR_S_UserExpression UserExpression;
; 6294 : 	ZeroMemory(&UserExpression,sizeof(UserExpression));

  001b9	6a 0a		 push	 10			; 0000000aH
  001bb	6a 00		 push	 0
  001bd	8d 45 dc	 lea	 eax, DWORD PTR _UserExpression$[ebp]
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 _memset
  001c6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6295 : 
; 6296 : 	//构造数据
; 6297 : 	UserExpression.wItemIndex=pUserExpression->wItemIndex;

  001c9	8b 45 f4	 mov	 eax, DWORD PTR _pUserExpression$[ebp]
  001cc	66 8b 08	 mov	 cx, WORD PTR [eax]
  001cf	66 89 4d dc	 mov	 WORD PTR _UserExpression$[ebp], cx

; 6298 : 	UserExpression.dwSendUserID=pUserExpression->dwSendUserID;

  001d3	8b 45 f4	 mov	 eax, DWORD PTR _pUserExpression$[ebp]
  001d6	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  001d9	89 4d de	 mov	 DWORD PTR _UserExpression$[ebp+2], ecx

; 6299 : 	UserExpression.dwTargetUserID=pUserExpression->dwTargetUserID;

  001dc	8b 45 f4	 mov	 eax, DWORD PTR _pUserExpression$[ebp]
  001df	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  001e2	89 4d e2	 mov	 DWORD PTR _UserExpression$[ebp+6], ecx

; 6300 : 
; 6301 : 	//转发消息
; 6302 : 	SendData(BG_ALL_CLIENT,MDM_GR_USER,SUB_GR_USER_EXPRESSION,&UserExpression,sizeof(UserExpression));

  001e5	6a 0a		 push	 10			; 0000000aH
  001e7	8d 45 dc	 lea	 eax, DWORD PTR _UserExpression$[ebp]
  001ea	50		 push	 eax
  001eb	68 ca 00 00 00	 push	 202			; 000000caH
  001f0	6a 03		 push	 3
  001f2	68 ff 00 00 00	 push	 255			; 000000ffH
  001f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fa	83 c1 04	 add	 ecx, 4
  001fd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00200	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00203	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00206	ff d2		 call	 edx

; 6303 : 
; 6304 : 	return true;

  00208	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6305 : }

  0020a	5f		 pop	 edi
  0020b	5e		 pop	 esi
  0020c	5b		 pop	 ebx
  0020d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00210	33 cd		 xor	 ecx, ebp
  00212	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00217	8b e5		 mov	 esp, ebp
  00219	5d		 pop	 ebp
  0021a	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserExpression
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv365 = -258						; size = 2
_pTempServerUserItem$1 = -192				; size = 4
_wEnumIndex$2 = -188					; size = 2
_wHeadSize$ = -184					; size = 2
_WisperChat$ = -180					; size = 142
_wTableIDRecv$3 = -36					; size = 2
_wTableIDSend$4 = -32					; size = 2
_bForfend$5 = -25					; size = 1
_pIRecvUserItem$ = -24					; size = 4
_pISendUserItem$ = -20					; size = 4
_wBindIndex$ = -16					; size = 2
_pWisperChat$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubWisperChat, COMDAT
; _this$ = ecx

; 6309 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6310 : 	//变量定义
; 6311 : 	CMD_GR_C_WisperChat * pWisperChat=(CMD_GR_C_WisperChat *)pData;

  00019	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pWisperChat$[ebp], eax

; 6312 : 
; 6313 : 	//效验参数
; 6314 : 	ASSERT(wDataSize>=(sizeof(CMD_GR_C_WisperChat)-sizeof(pWisperChat->szChatString)));

  0001f	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00023	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00026	73 19		 jae	 SHORT $LN27@OnTCPNetwo
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0002e	83 c1 05	 add	 ecx, 5
  00031	51		 push	 ecx
  00032	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00037	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003c	85 c0		 test	 eax, eax
  0003e	74 01		 je	 SHORT $LN27@OnTCPNetwo
  00040	cc		 int	 3
$LN27@OnTCPNetwo:

; 6315 : 	ASSERT(wDataSize==(sizeof(CMD_GR_C_WisperChat)-sizeof(pWisperChat->szChatString)+pWisperChat->wChatLength*sizeof(pWisperChat->szChatString[0])));

  00041	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00045	8b 4d f4	 mov	 ecx, DWORD PTR _pWisperChat$[ebp]
  00048	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0004b	83 c2 0e	 add	 edx, 14			; 0000000eH
  0004e	3b c2		 cmp	 eax, edx
  00050	74 18		 je	 SHORT $LN28@OnTCPNetwo
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00057	83 c0 06	 add	 eax, 6
  0005a	50		 push	 eax
  0005b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00060	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00065	85 c0		 test	 eax, eax
  00067	74 01		 je	 SHORT $LN28@OnTCPNetwo
  00069	cc		 int	 3
$LN28@OnTCPNetwo:

; 6316 : 
; 6317 : 	//效验参数
; 6318 : 	if (wDataSize<(sizeof(CMD_GR_C_WisperChat)-sizeof(pWisperChat->szChatString))) return false;

  0006a	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0006e	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00071	73 07		 jae	 SHORT $LN5@OnTCPNetwo
  00073	32 c0		 xor	 al, al
  00075	e9 e6 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 6319 : 	if (wDataSize!=(sizeof(CMD_GR_C_WisperChat)-sizeof(pWisperChat->szChatString)+pWisperChat->wChatLength*sizeof(pWisperChat->szChatString[0]))) return false;

  0007a	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR _pWisperChat$[ebp]
  00081	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00084	83 c2 0e	 add	 edx, 14			; 0000000eH
  00087	3b c2		 cmp	 eax, edx
  00089	74 07		 je	 SHORT $LN6@OnTCPNetwo
  0008b	32 c0		 xor	 al, al
  0008d	e9 ce 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6320 : 
; 6321 : 	//获取用户
; 6322 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00092	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00095	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0009a	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6323 : 	IServerUserItem * pISendUserItem=GetBindUserItem(wBindIndex);

  0009e	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ae	ff d0		 call	 eax
  000b0	89 45 ec	 mov	 DWORD PTR _pISendUserItem$[ebp], eax

; 6324 : 
; 6325 : 	//用户效验
; 6326 : 	ASSERT(pISendUserItem!=NULL);

  000b3	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  000b7	75 18		 jne	 SHORT $LN29@OnTCPNetwo
  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000be	83 c0 11	 add	 eax, 17			; 00000011H
  000c1	50		 push	 eax
  000c2	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000c7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000cc	85 c0		 test	 eax, eax
  000ce	74 01		 je	 SHORT $LN29@OnTCPNetwo
  000d0	cc		 int	 3
$LN29@OnTCPNetwo:

; 6327 : 	if (pISendUserItem==NULL) return false;

  000d1	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  000d5	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  000d7	32 c0		 xor	 al, al
  000d9	e9 82 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6328 : 
; 6329 : 	//寻找用户
; 6330 : 	IServerUserItem * pIRecvUserItem=m_ServerUserManager.SearchUserItem(pWisperChat->dwTargetUserID);

  000de	8b 45 f4	 mov	 eax, DWORD PTR _pWisperChat$[ebp]
  000e1	8b 48 0a	 mov	 ecx, DWORD PTR [eax+10]
  000e4	51		 push	 ecx
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000ee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f1	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000f7	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000fa	ff d2		 call	 edx
  000fc	89 45 e8	 mov	 DWORD PTR _pIRecvUserItem$[ebp], eax

; 6331 : 	if (pIRecvUserItem==NULL) return true;

  000ff	83 7d e8 00	 cmp	 DWORD PTR _pIRecvUserItem$[ebp], 0
  00103	75 07		 jne	 SHORT $LN8@OnTCPNetwo
  00105	b0 01		 mov	 al, 1
  00107	e9 54 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6332 : 
; 6333 : 	//状态判断
; 6334 : 	if ((CServerRule::IsForfendWisperChat(m_pGameServiceOption->dwServerRule)==true)&&(pISendUserItem->GetMasterOrder()==0))

  0010c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00112	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00115	52		 push	 edx
  00116	e8 00 00 00 00	 call	 ?IsForfendWisperChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperChat
  0011b	83 c4 04	 add	 esp, 4
  0011e	0f b6 c0	 movzx	 eax, al
  00121	83 f8 01	 cmp	 eax, 1
  00124	75 3a		 jne	 SHORT $LN9@OnTCPNetwo
  00126	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00129	8b 10		 mov	 edx, DWORD PTR [eax]
  0012b	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  0012e	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00134	ff d0		 call	 eax
  00136	0f b6 c8	 movzx	 ecx, al
  00139	85 c9		 test	 ecx, ecx
  0013b	75 23		 jne	 SHORT $LN9@OnTCPNetwo

; 6335 : 	{
; 6336 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，当前此游戏房间禁止用户私聊！"),SMT_CHAT);

  0013d	6a 01		 push	 1
  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@EOEHCMPC@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?K?$LN?A@
  00144	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00147	50		 push	 eax
  00148	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	83 c1 04	 add	 ecx, 4
  0014e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00151	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00154	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00157	ff d2		 call	 edx

; 6337 : 		return true;

  00159	b0 01		 mov	 al, 1
  0015b	e9 00 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6338 : 	}
; 6339 : 
; 6340 : 	//同桌判断
; 6341 : 	if ((CServerRule::IsForfendWisperOnGame(m_pGameServiceOption->dwServerRule)==true)&&(pISendUserItem->GetMasterOrder()==0))

  00160	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00163	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00166	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00169	52		 push	 edx
  0016a	e8 00 00 00 00	 call	 ?IsForfendWisperOnGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperOnGame
  0016f	83 c4 04	 add	 esp, 4
  00172	0f b6 c0	 movzx	 eax, al
  00175	83 f8 01	 cmp	 eax, 1
  00178	0f 85 1d 01 00
	00		 jne	 $LN10@OnTCPNetwo
  0017e	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00181	8b 10		 mov	 edx, DWORD PTR [eax]
  00183	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00186	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0018c	ff d0		 call	 eax
  0018e	0f b6 c8	 movzx	 ecx, al
  00191	85 c9		 test	 ecx, ecx
  00193	0f 85 02 01 00
	00		 jne	 $LN10@OnTCPNetwo

; 6342 : 	{
; 6343 : 		//变量定义
; 6344 : 		bool bForfend=true;

  00199	c6 45 e7 01	 mov	 BYTE PTR _bForfend$5[ebp], 1

; 6345 : 		WORD wTableIDSend=pISendUserItem->GetTableID();

  0019d	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  001a0	8b 10		 mov	 edx, DWORD PTR [eax]
  001a2	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  001a5	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  001a8	ff d0		 call	 eax
  001aa	66 89 45 e0	 mov	 WORD PTR _wTableIDSend$4[ebp], ax

; 6346 : 		WORD wTableIDRecv=pIRecvUserItem->GetTableID();

  001ae	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  001b1	8b 10		 mov	 edx, DWORD PTR [eax]
  001b3	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  001b6	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  001b9	ff d0		 call	 eax
  001bb	66 89 45 dc	 mov	 WORD PTR _wTableIDRecv$3[ebp], ax

; 6347 : 
; 6348 : 		//规则判断
; 6349 : 		if ((bForfend==true)&&(pIRecvUserItem->GetMasterOrder()!=0)) bForfend=false;

  001bf	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  001c3	83 f8 01	 cmp	 eax, 1
  001c6	75 1b		 jne	 SHORT $LN11@OnTCPNetwo
  001c8	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  001cb	8b 10		 mov	 edx, DWORD PTR [eax]
  001cd	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  001d0	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001d6	ff d0		 call	 eax
  001d8	0f b6 c8	 movzx	 ecx, al
  001db	85 c9		 test	 ecx, ecx
  001dd	74 04		 je	 SHORT $LN11@OnTCPNetwo
  001df	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN11@OnTCPNetwo:

; 6350 : 		if ((bForfend==true)&&(pIRecvUserItem->GetMasterOrder()!=0)) bForfend=false;

  001e3	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  001e7	83 f8 01	 cmp	 eax, 1
  001ea	75 1b		 jne	 SHORT $LN12@OnTCPNetwo
  001ec	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  001ef	8b 10		 mov	 edx, DWORD PTR [eax]
  001f1	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  001f4	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001fa	ff d0		 call	 eax
  001fc	0f b6 c8	 movzx	 ecx, al
  001ff	85 c9		 test	 ecx, ecx
  00201	74 04		 je	 SHORT $LN12@OnTCPNetwo
  00203	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN12@OnTCPNetwo:

; 6351 : 		if ((bForfend==true)&&(pISendUserItem->GetUserStatus()!=US_PLAYING)) bForfend=false;

  00207	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  0020b	83 f8 01	 cmp	 eax, 1
  0020e	75 19		 jne	 SHORT $LN13@OnTCPNetwo
  00210	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00213	8b 10		 mov	 edx, DWORD PTR [eax]
  00215	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00218	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0021b	ff d0		 call	 eax
  0021d	0f b6 c8	 movzx	 ecx, al
  00220	83 f9 05	 cmp	 ecx, 5
  00223	74 04		 je	 SHORT $LN13@OnTCPNetwo
  00225	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN13@OnTCPNetwo:

; 6352 : 		if ((bForfend==true)&&(pIRecvUserItem->GetUserStatus()!=US_PLAYING)) bForfend=false;

  00229	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  0022d	83 f8 01	 cmp	 eax, 1
  00230	75 19		 jne	 SHORT $LN14@OnTCPNetwo
  00232	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  00235	8b 10		 mov	 edx, DWORD PTR [eax]
  00237	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  0023a	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0023d	ff d0		 call	 eax
  0023f	0f b6 c8	 movzx	 ecx, al
  00242	83 f9 05	 cmp	 ecx, 5
  00245	74 04		 je	 SHORT $LN14@OnTCPNetwo
  00247	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN14@OnTCPNetwo:

; 6353 : 		if ((bForfend==true)&&((wTableIDSend==INVALID_TABLE)||(wTableIDSend!=wTableIDRecv))) bForfend=false;

  0024b	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  0024f	83 f8 01	 cmp	 eax, 1
  00252	75 1b		 jne	 SHORT $LN15@OnTCPNetwo
  00254	0f b7 45 e0	 movzx	 eax, WORD PTR _wTableIDSend$4[ebp]
  00258	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0025d	74 0c		 je	 SHORT $LN16@OnTCPNetwo
  0025f	0f b7 45 e0	 movzx	 eax, WORD PTR _wTableIDSend$4[ebp]
  00263	0f b7 4d dc	 movzx	 ecx, WORD PTR _wTableIDRecv$3[ebp]
  00267	3b c1		 cmp	 eax, ecx
  00269	74 04		 je	 SHORT $LN15@OnTCPNetwo
$LN16@OnTCPNetwo:
  0026b	c6 45 e7 00	 mov	 BYTE PTR _bForfend$5[ebp], 0
$LN15@OnTCPNetwo:

; 6354 : 
; 6355 : 		//提示消息
; 6356 : 		if (bForfend==true)

  0026f	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfend$5[ebp]
  00273	83 f8 01	 cmp	 eax, 1
  00276	75 23		 jne	 SHORT $LN10@OnTCPNetwo

; 6357 : 		{
; 6358 : 			SendRoomMessage(pISendUserItem,TEXT("抱歉，此游戏房间不允许在游戏中与同桌的玩家私聊！"),SMT_EJECT|SMT_CHAT);

  00278	6a 03		 push	 3
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@MDMMFNJG@?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LC?$LL?T?J?P?m?T?Z?S?N?O?$LH?V?P?S@
  0027f	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00282	50		 push	 eax
  00283	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00286	83 c1 04	 add	 ecx, 4
  00289	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0028c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0028f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00292	ff d2		 call	 edx

; 6359 : 			return true;

  00294	b0 01		 mov	 al, 1
  00296	e9 c5 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 6360 : 		}
; 6361 : 	}
; 6362 : 
; 6363 : 	//权限判断
; 6364 : 	if (CUserRight::CanWisper(pISendUserItem->GetUserRight())==false)

  0029b	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0029e	8b 10		 mov	 edx, DWORD PTR [eax]
  002a0	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  002a3	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  002a6	ff d0		 call	 eax
  002a8	50		 push	 eax
  002a9	e8 00 00 00 00	 call	 ?CanWisper@CUserRight@@SA_NK@Z ; CUserRight::CanWisper
  002ae	83 c4 04	 add	 esp, 4
  002b1	0f b6 c8	 movzx	 ecx, al
  002b4	85 c9		 test	 ecx, ecx
  002b6	75 23		 jne	 SHORT $LN18@OnTCPNetwo

; 6365 : 	{
; 6366 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，您没有发送私聊的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  002b8	6a 03		 push	 3
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JGPLIPLP@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LH?$KC?K?M?K?$LN?A?D?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  002bf	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  002c2	50		 push	 eax
  002c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c6	83 c1 04	 add	 ecx, 4
  002c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002cc	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002cf	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  002d2	ff d2		 call	 edx

; 6367 : 		return true;

  002d4	b0 01		 mov	 al, 1
  002d6	e9 85 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 6368 : 	}
; 6369 : 
; 6370 : 	//权限判断
; 6371 : 	if (pWisperChat->dwSendUserID!=pISendUserItem->GetUserID() && (pISendUserItem->GetMasterOrder()==0 ||

  002db	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  002e3	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  002e6	ff d0		 call	 eax
  002e8	8b 4d f4	 mov	 ecx, DWORD PTR _pWisperChat$[ebp]
  002eb	39 41 06	 cmp	 DWORD PTR [ecx+6], eax
  002ee	74 3b		 je	 SHORT $LN19@OnTCPNetwo
  002f0	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  002f3	8b 10		 mov	 edx, DWORD PTR [eax]
  002f5	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  002f8	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  002fe	ff d0		 call	 eax
  00300	0f b6 c8	 movzx	 ecx, al
  00303	85 c9		 test	 ecx, ecx
  00305	74 1d		 je	 SHORT $LN20@OnTCPNetwo
  00307	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0030a	8b 10		 mov	 edx, DWORD PTR [eax]
  0030c	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  0030f	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00312	ff d0		 call	 eax
  00314	50		 push	 eax
  00315	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  0031a	83 c4 04	 add	 esp, 4
  0031d	0f b6 c8	 movzx	 ecx, al
  00320	85 c9		 test	 ecx, ecx
  00322	75 07		 jne	 SHORT $LN19@OnTCPNetwo
$LN20@OnTCPNetwo:

; 6372 : 		CMasterRight::CanManagerAndroid(pISendUserItem->GetMasterRight())==false))
; 6373 : 	{
; 6374 : 		return false;

  00324	32 c0		 xor	 al, al
  00326	e9 35 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN19@OnTCPNetwo:

; 6375 : 	}
; 6376 : 
; 6377 : 	//变量定义
; 6378 : 	CMD_GR_S_WisperChat WisperChat;
; 6379 : 	ZeroMemory(&WisperChat,sizeof(WisperChat));

  0032b	68 8e 00 00 00	 push	 142			; 0000008eH
  00330	6a 00		 push	 0
  00332	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _WisperChat$[ebp]
  00338	50		 push	 eax
  00339	e8 00 00 00 00	 call	 _memset
  0033e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6380 : 
; 6381 : 	//字符过滤
; 6382 : 	SensitiveWordFilter(pWisperChat->szChatString,WisperChat.szChatString,CountArray(WisperChat.szChatString));

  00341	68 80 00 00 00	 push	 128			; 00000080H
  00346	8d 85 5a ff ff
	ff		 lea	 eax, DWORD PTR _WisperChat$[ebp+14]
  0034c	50		 push	 eax
  0034d	8b 4d f4	 mov	 ecx, DWORD PTR _pWisperChat$[ebp]
  00350	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00353	51		 push	 ecx
  00354	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00357	83 c1 04	 add	 ecx, 4
  0035a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0035d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00360	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00363	ff d2		 call	 edx

; 6383 : 
; 6384 : 	//构造数据
; 6385 : 	WisperChat.dwChatColor=pWisperChat->dwChatColor;

  00365	8b 45 f4	 mov	 eax, DWORD PTR _pWisperChat$[ebp]
  00368	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  0036b	89 8d 4e ff ff
	ff		 mov	 DWORD PTR _WisperChat$[ebp+2], ecx

; 6386 : 	WisperChat.wChatLength=pWisperChat->wChatLength;

  00371	8b 45 f4	 mov	 eax, DWORD PTR _pWisperChat$[ebp]
  00374	66 8b 08	 mov	 cx, WORD PTR [eax]
  00377	66 89 8d 4c ff
	ff ff		 mov	 WORD PTR _WisperChat$[ebp], cx

; 6387 : 	WisperChat.dwSendUserID=pISendUserItem->GetUserID();

  0037e	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00381	8b 10		 mov	 edx, DWORD PTR [eax]
  00383	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00386	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00389	ff d0		 call	 eax
  0038b	89 85 52 ff ff
	ff		 mov	 DWORD PTR _WisperChat$[ebp+6], eax

; 6388 : 	WisperChat.dwTargetUserID=pIRecvUserItem->GetUserID();

  00391	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  00394	8b 10		 mov	 edx, DWORD PTR [eax]
  00396	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  00399	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0039c	ff d0		 call	 eax
  0039e	89 85 56 ff ff
	ff		 mov	 DWORD PTR _WisperChat$[ebp+10], eax

; 6389 : 	WisperChat.wChatLength=CountStringBuffer(WisperChat.szChatString);

  003a4	8d 85 5a ff ff
	ff		 lea	 eax, DWORD PTR _WisperChat$[ebp+14]
  003aa	50		 push	 eax
  003ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  003b1	83 c0 01	 add	 eax, 1
  003b4	66 89 85 4c ff
	ff ff		 mov	 WORD PTR _WisperChat$[ebp], ax

; 6390 : 
; 6391 : 	//转发消息
; 6392 : 	WORD wHeadSize=sizeof(WisperChat)-sizeof(WisperChat.szChatString);

  003bb	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  003c0	66 89 85 48 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 6393 : 	SendData(pISendUserItem,MDM_GR_USER,SUB_GR_WISPER_CHAT,&WisperChat,wHeadSize+WisperChat.wChatLength*sizeof(WisperChat.szChatString[0]));

  003c7	0f b7 85 48 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  003ce	0f b7 8d 4c ff
	ff ff		 movzx	 ecx, WORD PTR _WisperChat$[ebp]
  003d5	03 c1		 add	 eax, ecx
  003d7	50		 push	 eax
  003d8	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _WisperChat$[ebp]
  003de	52		 push	 edx
  003df	68 cb 00 00 00	 push	 203			; 000000cbH
  003e4	6a 03		 push	 3
  003e6	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  003e9	50		 push	 eax
  003ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ed	83 c1 04	 add	 ecx, 4
  003f0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003f3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  003f6	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  003f9	ff d2		 call	 edx

; 6394 : 
; 6395 : 	//转发消息
; 6396 : 	WisperChat.dwSendUserID=pWisperChat->dwSendUserID;

  003fb	8b 45 f4	 mov	 eax, DWORD PTR _pWisperChat$[ebp]
  003fe	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  00401	89 8d 52 ff ff
	ff		 mov	 DWORD PTR _WisperChat$[ebp+6], ecx

; 6397 : 	SendData(pIRecvUserItem,MDM_GR_USER,SUB_GR_WISPER_CHAT,&WisperChat,wHeadSize+WisperChat.wChatLength*sizeof(WisperChat.szChatString[0]));

  00407	0f b7 85 48 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  0040e	0f b7 8d 4c ff
	ff ff		 movzx	 ecx, WORD PTR _WisperChat$[ebp]
  00415	03 c1		 add	 eax, ecx
  00417	50		 push	 eax
  00418	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _WisperChat$[ebp]
  0041e	52		 push	 edx
  0041f	68 cb 00 00 00	 push	 203			; 000000cbH
  00424	6a 03		 push	 3
  00426	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  00429	50		 push	 eax
  0042a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0042d	83 c1 04	 add	 ecx, 4
  00430	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00433	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00436	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00439	ff d2		 call	 edx

; 6398 : 
; 6399 : 	//机器判断
; 6400 : 	if(pIRecvUserItem->IsAndroidUser()==true)

  0043b	8b 45 e8	 mov	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  0043e	8b 10		 mov	 edx, DWORD PTR [eax]
  00440	8b 4d e8	 mov	 ecx, DWORD PTR _pIRecvUserItem$[ebp]
  00443	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00449	ff d0		 call	 eax
  0044b	0f b6 c8	 movzx	 ecx, al
  0044e	83 f9 01	 cmp	 ecx, 1
  00451	0f 85 07 01 00
	00		 jne	 $LN21@OnTCPNetwo

; 6401 : 	{
; 6402 : 		//枚举用户
; 6403 : 		WORD wEnumIndex=0;

  00457	33 c0		 xor	 eax, eax
  00459	66 89 85 44 ff
	ff ff		 mov	 WORD PTR _wEnumIndex$2[ebp], ax

; 6404 : 		IServerUserItem * pTempServerUserItem=NULL;

  00460	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pTempServerUserItem$1[ebp], 0
$LN4@OnTCPNetwo:

; 6405 : 		do
; 6406 : 		{
; 6407 : 			pTempServerUserItem=m_ServerUserManager.EnumUserItem(wEnumIndex++);

  0046a	66 8b 85 44 ff
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$2[ebp]
  00471	66 89 85 fe fe
	ff ff		 mov	 WORD PTR tv365[ebp], ax
  00478	0f b7 8d fe fe
	ff ff		 movzx	 ecx, WORD PTR tv365[ebp]
  0047f	51		 push	 ecx
  00480	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00483	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00489	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0048c	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00492	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00495	ff d2		 call	 edx
  00497	89 85 40 ff ff
	ff		 mov	 DWORD PTR _pTempServerUserItem$1[ebp], eax
  0049d	66 8b 85 44 ff
	ff ff		 mov	 ax, WORD PTR _wEnumIndex$2[ebp]
  004a4	66 83 c0 01	 add	 ax, 1
  004a8	66 89 85 44 ff
	ff ff		 mov	 WORD PTR _wEnumIndex$2[ebp], ax

; 6408 : 			if(pTempServerUserItem!=NULL)

  004af	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR _pTempServerUserItem$1[ebp], 0
  004b6	0f 84 95 00 00
	00		 je	 $LN2@OnTCPNetwo

; 6409 : 			{
; 6410 : 				if(pTempServerUserItem==pISendUserItem) continue;

  004bc	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  004c2	3b 45 ec	 cmp	 eax, DWORD PTR _pISendUserItem$[ebp]
  004c5	75 05		 jne	 SHORT $LN23@OnTCPNetwo
  004c7	e9 85 00 00 00	 jmp	 $LN2@OnTCPNetwo
$LN23@OnTCPNetwo:

; 6411 : 				if(pTempServerUserItem==pIRecvUserItem) continue;

  004cc	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  004d2	3b 45 e8	 cmp	 eax, DWORD PTR _pIRecvUserItem$[ebp]
  004d5	75 02		 jne	 SHORT $LN24@OnTCPNetwo
  004d7	eb 78		 jmp	 SHORT $LN2@OnTCPNetwo
$LN24@OnTCPNetwo:

; 6412 : 				if(pTempServerUserItem->GetMasterOrder()>0 && 

  004d9	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  004df	8b 10		 mov	 edx, DWORD PTR [eax]
  004e1	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _pTempServerUserItem$1[ebp]
  004e7	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  004ed	ff d0		 call	 eax
  004ef	0f b6 c8	 movzx	 ecx, al
  004f2	85 c9		 test	 ecx, ecx
  004f4	7e 5b		 jle	 SHORT $LN2@OnTCPNetwo
  004f6	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  004fc	8b 10		 mov	 edx, DWORD PTR [eax]
  004fe	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _pTempServerUserItem$1[ebp]
  00504	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  00507	ff d0		 call	 eax
  00509	50		 push	 eax
  0050a	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  0050f	83 c4 04	 add	 esp, 4
  00512	0f b6 c8	 movzx	 ecx, al
  00515	83 f9 01	 cmp	 ecx, 1
  00518	75 37		 jne	 SHORT $LN2@OnTCPNetwo

; 6413 : 				   CMasterRight::CanManagerAndroid(pTempServerUserItem->GetMasterRight())==true)
; 6414 : 				{
; 6415 : 					SendData(pTempServerUserItem,MDM_GR_USER,SUB_GR_WISPER_CHAT,&WisperChat,wHeadSize+WisperChat.wChatLength*sizeof(WisperChat.szChatString[0]));

  0051a	0f b7 85 48 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00521	0f b7 8d 4c ff
	ff ff		 movzx	 ecx, WORD PTR _WisperChat$[ebp]
  00528	03 c1		 add	 eax, ecx
  0052a	50		 push	 eax
  0052b	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _WisperChat$[ebp]
  00531	52		 push	 edx
  00532	68 cb 00 00 00	 push	 203			; 000000cbH
  00537	6a 03		 push	 3
  00539	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pTempServerUserItem$1[ebp]
  0053f	50		 push	 eax
  00540	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00543	83 c1 04	 add	 ecx, 4
  00546	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00549	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0054c	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0054f	ff d2		 call	 edx
$LN2@OnTCPNetwo:

; 6416 : 				}
; 6417 : 			}
; 6418 : 		}while(pTempServerUserItem!=NULL);

  00551	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR _pTempServerUserItem$1[ebp], 0
  00558	0f 85 0c ff ff
	ff		 jne	 $LN4@OnTCPNetwo
$LN21@OnTCPNetwo:

; 6419 : 	}
; 6420 : 
; 6421 : 	return true;

  0055e	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6422 : }

  00560	5f		 pop	 edi
  00561	5e		 pop	 esi
  00562	5b		 pop	 ebx
  00563	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00566	33 cd		 xor	 ecx, ebp
  00568	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0056d	8b e5		 mov	 esp, ebp
  0056f	5d		 pop	 ebp
  00570	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubWisperChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_wHeadSize$ = -172					; size = 2
_UserChat$ = -168					; size = 142
_pIRecvUserItem$ = -24					; size = 4
_pISendUserItem$ = -20					; size = 4
_wBindIndex$ = -16					; size = 2
_pUserChat$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserChat, COMDAT
; _this$ = ecx

; 6173 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6174 : 	//变量定义
; 6175 : 	CMD_GR_C_UserChat * pUserChat=(CMD_GR_C_UserChat *)pData;

  00019	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pUserChat$[ebp], eax

; 6176 : 
; 6177 : 	//效验参数
; 6178 : 	ASSERT(wDataSize<=sizeof(CMD_GR_C_UserChat));

  0001f	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00023	3d 8e 00 00 00	 cmp	 eax, 142		; 0000008eH
  00028	76 19		 jbe	 SHORT $LN13@OnTCPNetwo
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00030	83 c1 05	 add	 ecx, 5
  00033	51		 push	 ecx
  00034	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00039	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003e	85 c0		 test	 eax, eax
  00040	74 01		 je	 SHORT $LN13@OnTCPNetwo
  00042	cc		 int	 3
$LN13@OnTCPNetwo:

; 6179 : 	ASSERT(wDataSize>=(sizeof(CMD_GR_C_UserChat)-sizeof(pUserChat->szChatString)));

  00043	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00047	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0004a	73 19		 jae	 SHORT $LN14@OnTCPNetwo
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00052	83 c1 06	 add	 ecx, 6
  00055	51		 push	 ecx
  00056	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0005b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00060	85 c0		 test	 eax, eax
  00062	74 01		 je	 SHORT $LN14@OnTCPNetwo
  00064	cc		 int	 3
$LN14@OnTCPNetwo:

; 6180 : 	ASSERT(wDataSize==(sizeof(CMD_GR_C_UserChat)-sizeof(pUserChat->szChatString)+pUserChat->wChatLength*sizeof(pUserChat->szChatString[0])));

  00065	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pUserChat$[ebp]
  0006c	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0006f	83 c2 0e	 add	 edx, 14			; 0000000eH
  00072	3b c2		 cmp	 eax, edx
  00074	74 18		 je	 SHORT $LN15@OnTCPNetwo
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0007b	83 c0 07	 add	 eax, 7
  0007e	50		 push	 eax
  0007f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00084	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00089	85 c0		 test	 eax, eax
  0008b	74 01		 je	 SHORT $LN15@OnTCPNetwo
  0008d	cc		 int	 3
$LN15@OnTCPNetwo:

; 6181 : 
; 6182 : 	//效验参数
; 6183 : 	if (wDataSize>sizeof(CMD_GR_C_UserChat)) return false;

  0008e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00092	3d 8e 00 00 00	 cmp	 eax, 142		; 0000008eH
  00097	76 07		 jbe	 SHORT $LN2@OnTCPNetwo
  00099	32 c0		 xor	 al, al
  0009b	e9 5b 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6184 : 	if (wDataSize<(sizeof(CMD_GR_C_UserChat)-sizeof(pUserChat->szChatString))) return false;

  000a0	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000a4	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  000a7	73 07		 jae	 SHORT $LN3@OnTCPNetwo
  000a9	32 c0		 xor	 al, al
  000ab	e9 4b 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6185 : 	if (wDataSize!=(sizeof(CMD_GR_C_UserChat)-sizeof(pUserChat->szChatString)+pUserChat->wChatLength*sizeof(pUserChat->szChatString[0]))) return false;

  000b0	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _pUserChat$[ebp]
  000b7	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  000ba	83 c2 0e	 add	 edx, 14			; 0000000eH
  000bd	3b c2		 cmp	 eax, edx
  000bf	74 07		 je	 SHORT $LN4@OnTCPNetwo
  000c1	32 c0		 xor	 al, al
  000c3	e9 33 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6186 : 
; 6187 : 	//获取用户
; 6188 : 	WORD wBindIndex=LOWORD(dwSocketID);

  000c8	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000cb	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000d0	66 89 45 f0	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6189 : 	IServerUserItem * pISendUserItem=GetBindUserItem(wBindIndex);

  000d4	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000d8	50		 push	 eax
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000de	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000e4	ff d0		 call	 eax
  000e6	89 45 ec	 mov	 DWORD PTR _pISendUserItem$[ebp], eax

; 6190 : 
; 6191 : 	//用户效验
; 6192 : 	ASSERT(pISendUserItem!=NULL);

  000e9	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  000ed	75 18		 jne	 SHORT $LN16@OnTCPNetwo
  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000f4	83 c0 13	 add	 eax, 19			; 00000013H
  000f7	50		 push	 eax
  000f8	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000fd	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00102	85 c0		 test	 eax, eax
  00104	74 01		 je	 SHORT $LN16@OnTCPNetwo
  00106	cc		 int	 3
$LN16@OnTCPNetwo:

; 6193 : 	if (pISendUserItem==NULL) return false;

  00107	83 7d ec 00	 cmp	 DWORD PTR _pISendUserItem$[ebp], 0
  0010b	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  0010d	32 c0		 xor	 al, al
  0010f	e9 e7 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 6194 : 
; 6195 : 	//寻找用户
; 6196 : 	IServerUserItem * pIRecvUserItem=NULL;

  00114	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pIRecvUserItem$[ebp], 0

; 6197 : 	if (pUserChat->dwTargetUserID!=0)

  0011b	8b 45 f4	 mov	 eax, DWORD PTR _pUserChat$[ebp]
  0011e	83 78 0a 00	 cmp	 DWORD PTR [eax+10], 0
  00122	74 2e		 je	 SHORT $LN6@OnTCPNetwo

; 6198 : 	{
; 6199 : 		pIRecvUserItem=m_ServerUserManager.SearchUserItem(pUserChat->dwTargetUserID);

  00124	8b 45 f4	 mov	 eax, DWORD PTR _pUserChat$[ebp]
  00127	8b 48 0a	 mov	 ecx, DWORD PTR [eax+10]
  0012a	51		 push	 ecx
  0012b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00134	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00137	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0013d	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00140	ff d2		 call	 edx
  00142	89 45 e8	 mov	 DWORD PTR _pIRecvUserItem$[ebp], eax

; 6200 : 		if (pIRecvUserItem==NULL) return true;

  00145	83 7d e8 00	 cmp	 DWORD PTR _pIRecvUserItem$[ebp], 0
  00149	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  0014b	b0 01		 mov	 al, 1
  0014d	e9 a9 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6201 : 	}
; 6202 : 
; 6203 : 	//状态判断
; 6204 : 	if ((CServerRule::IsForfendRoomChat(m_pGameServiceOption->dwServerRule)==true)&&(pISendUserItem->GetMasterOrder()==0))

  00152	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00155	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00158	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0015b	52		 push	 edx
  0015c	e8 00 00 00 00	 call	 ?IsForfendRoomChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomChat
  00161	83 c4 04	 add	 esp, 4
  00164	0f b6 c0	 movzx	 eax, al
  00167	83 f8 01	 cmp	 eax, 1
  0016a	75 3a		 jne	 SHORT $LN8@OnTCPNetwo
  0016c	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0016f	8b 10		 mov	 edx, DWORD PTR [eax]
  00171	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00174	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0017a	ff d0		 call	 eax
  0017c	0f b6 c8	 movzx	 ecx, al
  0017f	85 c9		 test	 ecx, ecx
  00181	75 23		 jne	 SHORT $LN8@OnTCPNetwo

; 6205 : 	{
; 6206 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，当前此游戏房间禁止用户大厅聊天！"),SMT_CHAT);

  00183	6a 01		 push	 1
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OBNELMKK@?$LB?$KH?G?$LI?$KD?$KM?$LF?$LB?G?$LA?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?$LN?$PL?V?$LJ?S?C?$LL?$KH?$LE?s?L@
  0018a	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  0018d	50		 push	 eax
  0018e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	83 c1 04	 add	 ecx, 4
  00194	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00197	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0019a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0019d	ff d2		 call	 edx

; 6207 : 		return true;

  0019f	b0 01		 mov	 al, 1
  001a1	e9 55 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6208 : 	}
; 6209 : 
; 6210 : 	//权限判断
; 6211 : 	if (CUserRight::CanRoomChat(pISendUserItem->GetUserRight())==false)

  001a6	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  001a9	8b 10		 mov	 edx, DWORD PTR [eax]
  001ab	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  001ae	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  001b1	ff d0		 call	 eax
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?CanRoomChat@CUserRight@@SA_NK@Z ; CUserRight::CanRoomChat
  001b9	83 c4 04	 add	 esp, 4
  001bc	0f b6 c8	 movzx	 ecx, al
  001bf	85 c9		 test	 ecx, ecx
  001c1	75 23		 jne	 SHORT $LN9@OnTCPNetwo

; 6212 : 	{
; 6213 : 		SendRoomMessage(pISendUserItem,TEXT("抱歉，您没有大厅发言的权限，若需要帮助，请联系游戏客服咨询！"),SMT_EJECT|SMT_CHAT);

  001c3	6a 03		 push	 3
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@EKHAPMJC@?$LB?$KH?G?$LI?$KD?$KM?D?z?C?$LL?S?P?$LE?s?L?$PM?$LH?$KC?Q?T?$LF?D?H?$KI?O?$NO?$KD?$KM?H?t?P@
  001ca	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  001cd	50		 push	 eax
  001ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	83 c1 04	 add	 ecx, 4
  001d4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001d7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001da	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001dd	ff d2		 call	 edx

; 6214 : 		return true;

  001df	b0 01		 mov	 al, 1
  001e1	e9 15 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 6215 : 	}
; 6216 : 
; 6217 : 	//权限判断
; 6218 : 	if (pUserChat->dwSendUserID!=pISendUserItem->GetUserID() && (pISendUserItem->GetMasterOrder()==0 ||

  001e6	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  001e9	8b 10		 mov	 edx, DWORD PTR [eax]
  001eb	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  001ee	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  001f1	ff d0		 call	 eax
  001f3	8b 4d f4	 mov	 ecx, DWORD PTR _pUserChat$[ebp]
  001f6	39 41 06	 cmp	 DWORD PTR [ecx+6], eax
  001f9	74 3b		 je	 SHORT $LN10@OnTCPNetwo
  001fb	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  001fe	8b 10		 mov	 edx, DWORD PTR [eax]
  00200	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  00203	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00209	ff d0		 call	 eax
  0020b	0f b6 c8	 movzx	 ecx, al
  0020e	85 c9		 test	 ecx, ecx
  00210	74 1d		 je	 SHORT $LN11@OnTCPNetwo
  00212	8b 45 ec	 mov	 eax, DWORD PTR _pISendUserItem$[ebp]
  00215	8b 10		 mov	 edx, DWORD PTR [eax]
  00217	8b 4d ec	 mov	 ecx, DWORD PTR _pISendUserItem$[ebp]
  0021a	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  0021d	ff d0		 call	 eax
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 ?CanManagerAndroid@CMasterRight@@SA_NK@Z ; CMasterRight::CanManagerAndroid
  00225	83 c4 04	 add	 esp, 4
  00228	0f b6 c8	 movzx	 ecx, al
  0022b	85 c9		 test	 ecx, ecx
  0022d	75 07		 jne	 SHORT $LN10@OnTCPNetwo
$LN11@OnTCPNetwo:

; 6219 : 		CMasterRight::CanManagerAndroid(pISendUserItem->GetMasterRight())==false))
; 6220 : 	{
; 6221 : 		return false;

  0022f	32 c0		 xor	 al, al
  00231	e9 c5 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 6222 : 	}
; 6223 : 
; 6224 : 	//构造消息
; 6225 : 	CMD_GR_S_UserChat UserChat;
; 6226 : 	ZeroMemory(&UserChat,sizeof(UserChat));

  00236	68 8e 00 00 00	 push	 142			; 0000008eH
  0023b	6a 00		 push	 0
  0023d	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _UserChat$[ebp]
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 _memset
  00249	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6227 : 
; 6228 : 	//字符过滤
; 6229 : 	SensitiveWordFilter(pUserChat->szChatString,UserChat.szChatString,CountArray(UserChat.szChatString));

  0024c	68 80 00 00 00	 push	 128			; 00000080H
  00251	8d 85 66 ff ff
	ff		 lea	 eax, DWORD PTR _UserChat$[ebp+14]
  00257	50		 push	 eax
  00258	8b 4d f4	 mov	 ecx, DWORD PTR _pUserChat$[ebp]
  0025b	83 c1 0e	 add	 ecx, 14			; 0000000eH
  0025e	51		 push	 ecx
  0025f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00262	83 c1 04	 add	 ecx, 4
  00265	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00268	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0026b	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0026e	ff d2		 call	 edx

; 6230 : 	
; 6231 : 	//构造数据
; 6232 : 	UserChat.dwChatColor=pUserChat->dwChatColor;

  00270	8b 45 f4	 mov	 eax, DWORD PTR _pUserChat$[ebp]
  00273	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00276	89 8d 5a ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+2], ecx

; 6233 : 	UserChat.wChatLength=pUserChat->wChatLength;

  0027c	8b 45 f4	 mov	 eax, DWORD PTR _pUserChat$[ebp]
  0027f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00282	66 89 8d 58 ff
	ff ff		 mov	 WORD PTR _UserChat$[ebp], cx

; 6234 : 	UserChat.dwSendUserID=pUserChat->dwSendUserID;

  00289	8b 45 f4	 mov	 eax, DWORD PTR _pUserChat$[ebp]
  0028c	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  0028f	89 8d 5e ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+6], ecx

; 6235 : 	UserChat.dwTargetUserID=pUserChat->dwTargetUserID;

  00295	8b 45 f4	 mov	 eax, DWORD PTR _pUserChat$[ebp]
  00298	8b 48 0a	 mov	 ecx, DWORD PTR [eax+10]
  0029b	89 8d 62 ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+10], ecx

; 6236 : 	UserChat.wChatLength=CountStringBuffer(UserChat.szChatString);

  002a1	8d 85 66 ff ff
	ff		 lea	 eax, DWORD PTR _UserChat$[ebp+14]
  002a7	50		 push	 eax
  002a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  002ae	83 c0 01	 add	 eax, 1
  002b1	66 89 85 58 ff
	ff ff		 mov	 WORD PTR _UserChat$[ebp], ax

; 6237 : 
; 6238 : 	//转发消息
; 6239 : 	WORD wHeadSize=sizeof(UserChat)-sizeof(UserChat.szChatString);

  002b8	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  002bd	66 89 85 54 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 6240 : 	SendData(BG_ALL_CLIENT,MDM_GR_USER,SUB_GR_USER_CHAT,&UserChat,wHeadSize+UserChat.wChatLength*sizeof(UserChat.szChatString[0]));

  002c4	0f b7 85 54 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  002cb	0f b7 8d 58 ff
	ff ff		 movzx	 ecx, WORD PTR _UserChat$[ebp]
  002d2	03 c1		 add	 eax, ecx
  002d4	50		 push	 eax
  002d5	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _UserChat$[ebp]
  002db	52		 push	 edx
  002dc	68 c9 00 00 00	 push	 201			; 000000c9H
  002e1	6a 03		 push	 3
  002e3	68 ff 00 00 00	 push	 255			; 000000ffH
  002e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002eb	83 c1 04	 add	 ecx, 4
  002ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f1	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002f4	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002f7	ff d0		 call	 eax

; 6241 : 
; 6242 : 	return true;

  002f9	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6243 : }

  002fb	5f		 pop	 edi
  002fc	5e		 pop	 esi
  002fd	5b		 pop	 ebx
  002fe	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00301	33 cd		 xor	 ecx, ebp
  00303	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00308	8b e5		 mov	 esp, ebp
  0030a	5d		 pop	 ebp
  0030b	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$1 = -32					; size = 4
_pTableFrame$ = -28					; size = 4
_wChairID$ = -24					; size = 2
_wTableID$ = -20					; size = 2
_pUserStandUp$ = -16					; size = 4
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserStandUp, COMDAT
; _this$ = ecx

; 6110 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6111 : 	//效验参数
; 6112 : 	ASSERT(wDataSize==sizeof(CMD_GR_UserStandUp));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 05	 cmp	 eax, 5
  00013	74 19		 je	 SHORT $LN15@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN15@OnTCPNetwo
  0002d	cc		 int	 3
$LN15@OnTCPNetwo:

; 6113 : 	if (wDataSize!=sizeof(CMD_GR_UserStandUp)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 05	 cmp	 eax, 5
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 35 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 6114 : 
; 6115 : 	//获取用户
; 6116 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0003e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00046	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 6117 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0004a	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005a	ff d0		 call	 eax
  0005c	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 6118 : 
; 6119 : 	//用户效验
; 6120 : 	ASSERT(pIServerUserItem!=NULL);

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00063	75 18		 jne	 SHORT $LN16@OnTCPNetwo
  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0006a	83 c0 0a	 add	 eax, 10			; 0000000aH
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN16@OnTCPNetwo
  0007c	cc		 int	 3
$LN16@OnTCPNetwo:

; 6121 : 	if (pIServerUserItem==NULL) return false;

  0007d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00081	75 07		 jne	 SHORT $LN3@OnTCPNetwo
  00083	32 c0		 xor	 al, al
  00085	e9 e9 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6122 : 
; 6123 : 	//定义变量
; 6124 : 	CMD_GR_UserStandUp * pUserStandUp=(CMD_GR_UserStandUp *)pData;

  0008a	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0008d	89 45 f0	 mov	 DWORD PTR _pUserStandUp$[ebp], eax

; 6125 : 
; 6126 : 	//取消分组
; 6127 : 	if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)&&(m_pGameServiceAttrib->wChairCount < MAX_CHAIR))

  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00096	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00099	52		 push	 edx
  0009a	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0009f	83 c4 04	 add	 esp, 4
  000a2	0f b6 c0	 movzx	 eax, al
  000a5	85 c0		 test	 eax, eax
  000a7	74 3c		 je	 SHORT $LN4@OnTCPNetwo
  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000af	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  000b3	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  000b9	7d 2a		 jge	 SHORT $LN4@OnTCPNetwo

; 6128 : 	{
; 6129 : 		//取消分组
; 6130 : 		DeleteDistribute(pIServerUserItem);

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000be	50		 push	 eax
  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	83 c1 04	 add	 ecx, 4
  000c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000cb	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  000ce	ff d2		 call	 edx

; 6131 : 
; 6132 : 		if(pUserStandUp->wTableID==INVALID_TABLE) return true;

  000d0	8b 45 f0	 mov	 eax, DWORD PTR _pUserStandUp$[ebp]
  000d3	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000d6	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  000dc	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  000de	b0 01		 mov	 al, 1
  000e0	e9 8e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 6133 : 	}
; 6134 : 
; 6135 : 	//效验数据
; 6136 : 	if (pUserStandUp->wChairID>=m_pGameServiceAttrib->wChairCount) return false;

  000e5	8b 45 f0	 mov	 eax, DWORD PTR _pUserStandUp$[ebp]
  000e8	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000f2	0f b7 50 02	 movzx	 edx, WORD PTR [eax+2]
  000f6	3b ca		 cmp	 ecx, edx
  000f8	7c 07		 jl	 SHORT $LN6@OnTCPNetwo
  000fa	32 c0		 xor	 al, al
  000fc	e9 72 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 6137 : 	if (pUserStandUp->wTableID>=(WORD)m_TableFrameArray.GetCount()) return false;

  00101	8b 45 f0	 mov	 eax, DWORD PTR _pUserStandUp$[ebp]
  00104	0f b7 30	 movzx	 esi, WORD PTR [eax]
  00107	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00110	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00115	0f b7 c8	 movzx	 ecx, ax
  00118	3b f1		 cmp	 esi, ecx
  0011a	7c 07		 jl	 SHORT $LN7@OnTCPNetwo
  0011c	32 c0		 xor	 al, al
  0011e	e9 50 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 6138 : 
; 6139 : 	//消息处理
; 6140 : 	WORD wTableID=pIServerUserItem->GetTableID();

  00123	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00126	8b 10		 mov	 edx, DWORD PTR [eax]
  00128	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0012b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0012e	ff d0		 call	 eax
  00130	66 89 45 ec	 mov	 WORD PTR _wTableID$[ebp], ax

; 6141 : 	WORD wChairID=pIServerUserItem->GetChairID();

  00134	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00137	8b 10		 mov	 edx, DWORD PTR [eax]
  00139	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0013c	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  0013f	ff d0		 call	 eax
  00141	66 89 45 e8	 mov	 WORD PTR _wChairID$[ebp], ax

; 6142 : 	if ((wTableID!=pUserStandUp->wTableID)||(wChairID!=pUserStandUp->wChairID)) return true;

  00145	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00149	8b 4d f0	 mov	 ecx, DWORD PTR _pUserStandUp$[ebp]
  0014c	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0014f	3b c2		 cmp	 eax, edx
  00151	75 0f		 jne	 SHORT $LN9@OnTCPNetwo
  00153	0f b7 45 e8	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00157	8b 4d f0	 mov	 ecx, DWORD PTR _pUserStandUp$[ebp]
  0015a	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  0015e	3b c2		 cmp	 eax, edx
  00160	74 07		 je	 SHORT $LN8@OnTCPNetwo
$LN9@OnTCPNetwo:
  00162	b0 01		 mov	 al, 1
  00164	e9 0a 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 6143 : 
; 6144 : 	//用户判断
; 6145 : 	if ((pUserStandUp->cbForceLeave==FALSE)&&(pIServerUserItem->GetUserStatus()==US_PLAYING))

  00169	8b 45 f0	 mov	 eax, DWORD PTR _pUserStandUp$[ebp]
  0016c	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00170	85 c9		 test	 ecx, ecx
  00172	75 2f		 jne	 SHORT $LN10@OnTCPNetwo
  00174	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00177	8b 10		 mov	 edx, DWORD PTR [eax]
  00179	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0017c	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0017f	ff d0		 call	 eax
  00181	0f b6 c8	 movzx	 ecx, al
  00184	83 f9 05	 cmp	 ecx, 5
  00187	75 1a		 jne	 SHORT $LN10@OnTCPNetwo

; 6146 : 	{
; 6147 : 		SendRequestFailure(pIServerUserItem,TEXT("您正在游戏中，暂时不能离开，请先结束当前游戏！"),0);

  00189	6a 00		 push	 0
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@
  00190	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00193	50		 push	 eax
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 6148 : 		return true;

  0019c	b0 01		 mov	 al, 1
  0019e	e9 d0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 6149 : 	}
; 6150 : 
; 6151 : 	//约战判断
; 6152 : 	CTableFrame* pTableFrame = m_TableFrameArray[pIServerUserItem->GetTableID()];

  001a3	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001a6	8b 10		 mov	 edx, DWORD PTR [eax]
  001a8	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001ab	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  001ae	ff d0		 call	 eax
  001b0	0f b7 c8	 movzx	 ecx, ax
  001b3	51		 push	 ecx
  001b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b7	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001bd	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	89 55 e4	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 6153 : 	ASSERT(pTableFrame != NULL);

  001c7	83 7d e4 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  001cb	75 18		 jne	 SHORT $LN17@OnTCPNetwo
  001cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  001d2	83 c0 2b	 add	 eax, 43			; 0000002bH
  001d5	50		 push	 eax
  001d6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  001db	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001e0	85 c0		 test	 eax, eax
  001e2	74 01		 je	 SHORT $LN17@OnTCPNetwo
  001e4	cc		 int	 3
$LN17@OnTCPNetwo:

; 6154 : 	if(pTableFrame->GetDrawCount() != 0 && m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && !pUserStandUp->cbForceLeave)

  001e5	8b 45 e4	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  001e8	8b 10		 mov	 edx, DWORD PTR [eax]
  001ea	8b 4d e4	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001ed	8b 82 28 01 00
	00		 mov	 eax, DWORD PTR [edx+296]
  001f3	ff d0		 call	 eax
  001f5	0f b7 c8	 movzx	 ecx, ax
  001f8	85 c9		 test	 ecx, ecx
  001fa	74 31		 je	 SHORT $LN11@OnTCPNetwo
  001fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ff	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00202	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00206	83 fa 10	 cmp	 edx, 16			; 00000010H
  00209	75 22		 jne	 SHORT $LN11@OnTCPNetwo
  0020b	8b 45 f0	 mov	 eax, DWORD PTR _pUserStandUp$[ebp]
  0020e	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00212	85 c9		 test	 ecx, ecx
  00214	75 17		 jne	 SHORT $LN11@OnTCPNetwo

; 6155 : 	{
; 6156 : 		SendRequestFailure(pIServerUserItem,TEXT("约战未结束，不能离开游戏，请先完成约战再离开！"),0);

  00216	6a 00		 push	 0
  00218	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JLGPNJOP@?T?$LM?U?$LN?N?$LE?$LN?a?J?x?$KD?$KM?$LC?$LL?D?$NM?$MA?k?$LP?$KK?S?N?O?$LH?$KD?$KM?G?k?O?H?M@
  0021d	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00220	50		 push	 eax
  00221	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00224	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 6157 : 		return true;

  00229	b0 01		 mov	 al, 1
  0022b	eb 46		 jmp	 SHORT $LN1@OnTCPNetwo
$LN11@OnTCPNetwo:

; 6158 : 	}
; 6159 : 
; 6160 : 
; 6161 : 	//离开处理
; 6162 : 	if (wTableID!=INVALID_TABLE)

  0022d	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00231	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00236	74 39		 je	 SHORT $LN12@OnTCPNetwo

; 6163 : 	{
; 6164 : 		CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  00238	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0023c	50		 push	 eax
  0023d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00240	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00246	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0024b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024d	89 4d e0	 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 6165 : 		if (pTableFrame->PerformStandUpAction(pIServerUserItem,true)==false) return true;

  00250	6a 01		 push	 1
  00252	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00255	50		 push	 eax
  00256	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  00259	8b 11		 mov	 edx, DWORD PTR [ecx]
  0025b	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  0025e	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00264	ff d0		 call	 eax
  00266	0f b6 c8	 movzx	 ecx, al
  00269	85 c9		 test	 ecx, ecx
  0026b	75 04		 jne	 SHORT $LN12@OnTCPNetwo
  0026d	b0 01		 mov	 al, 1
  0026f	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN12@OnTCPNetwo:

; 6166 : 	}
; 6167 : 
; 6168 : 	return true;

  00271	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6169 : }

  00273	5f		 pop	 edi
  00274	5e		 pop	 esi
  00275	5b		 pop	 ebx
  00276	8b e5		 mov	 esp, ebp
  00278	5d		 pop	 ebp
  00279	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserStandUp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv382 = -136						; size = 4
tv344 = -136						; size = 4
tv302 = -136						; size = 4
tv287 = -136						; size = 4
_pTableFrame$ = -68					; size = 4
_wNullChairID$1 = -64					; size = 2
_i$2 = -60						; size = 2
_bDynamicJoin$3 = -53					; size = 1
_dwServerRule$4 = -52					; size = 4
_wStartTableID$5 = -48					; size = 2
_wRequestChairID$ = -44					; size = 2
_wRequestTableID$ = -40					; size = 2
_pTableFrame$6 = -36					; size = 4
_pTableFrame$7 = -32					; size = 4
_cbUserStatus$ = -25					; size = 1
_wChairID$ = -24					; size = 2
_wTableID$ = -20					; size = 2
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pUserSitDown$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserSitDown, COMDAT
; _this$ = ecx

; 5947 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5948 : 	//效验参数
; 5949 : 	ASSERT(wDataSize==sizeof(CMD_GR_UserSitDown));

  0000f	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00013	83 f8 29	 cmp	 eax, 41			; 00000029H
  00016	74 19		 je	 SHORT $LN33@OnTCPNetwo
  00018	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001e	83 c1 02	 add	 ecx, 2
  00021	51		 push	 ecx
  00022	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN33@OnTCPNetwo
  00030	cc		 int	 3
$LN33@OnTCPNetwo:

; 5950 : 	if (wDataSize!=sizeof(CMD_GR_UserSitDown)) return false;

  00031	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00035	83 f8 29	 cmp	 eax, 41			; 00000029H
  00038	74 07		 je	 SHORT $LN5@OnTCPNetwo
  0003a	32 c0		 xor	 al, al
  0003c	e9 79 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5951 : 
; 5952 : 	//效验数据
; 5953 : 	CMD_GR_UserSitDown * pUserSitDown=(CMD_GR_UserSitDown *)pData;

  00041	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00044	89 45 f8	 mov	 DWORD PTR _pUserSitDown$[ebp], eax

; 5954 : 
; 5955 : 	//获取用户
; 5956 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00047	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0004a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004f	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5957 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00053	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00057	50		 push	 eax
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00063	ff d0		 call	 eax
  00065	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5958 : 
; 5959 : 	//用户效验
; 5960 : 	ASSERT(pIServerUserItem!=NULL);

  00068	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0006c	75 18		 jne	 SHORT $LN34@OnTCPNetwo
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00073	83 c0 0d	 add	 eax, 13			; 0000000dH
  00076	50		 push	 eax
  00077	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0007c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00081	85 c0		 test	 eax, eax
  00083	74 01		 je	 SHORT $LN34@OnTCPNetwo
  00085	cc		 int	 3
$LN34@OnTCPNetwo:

; 5961 : 	if (pIServerUserItem==NULL) return false;

  00086	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0008a	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  0008c	32 c0		 xor	 al, al
  0008e	e9 27 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5962 : 
; 5963 : 	//消息处理
; 5964 : 	WORD wTableID=pIServerUserItem->GetTableID();

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00096	8b 10		 mov	 edx, DWORD PTR [eax]
  00098	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0009b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0009e	ff d0		 call	 eax
  000a0	66 89 45 ec	 mov	 WORD PTR _wTableID$[ebp], ax

; 5965 : 	WORD wChairID=pIServerUserItem->GetChairID();

  000a4	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ac	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  000af	ff d0		 call	 eax
  000b1	66 89 45 e8	 mov	 WORD PTR _wChairID$[ebp], ax

; 5966 : 	BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  000b5	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b8	8b 10		 mov	 edx, DWORD PTR [eax]
  000ba	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000bd	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000c0	ff d0		 call	 eax
  000c2	88 45 e7	 mov	 BYTE PTR _cbUserStatus$[ebp], al

; 5967 : 
; 5968 : 	//重复判断
; 5969 : 	if ((pUserSitDown->wTableID<m_pGameServiceOption->wTableCount)&&(pUserSitDown->wChairID<m_pGameServiceAttrib->wChairCount))

  000c5	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  000c8	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000cb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000d1	0f b7 50 46	 movzx	 edx, WORD PTR [eax+70]
  000d5	3b ca		 cmp	 ecx, edx
  000d7	7d 53		 jge	 SHORT $LN7@OnTCPNetwo
  000d9	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  000dc	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000e0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000e6	0f b7 50 02	 movzx	 edx, WORD PTR [eax+2]
  000ea	3b ca		 cmp	 ecx, edx
  000ec	7d 3e		 jge	 SHORT $LN7@OnTCPNetwo

; 5970 : 	{
; 5971 : 		CTableFrame * pTableFrame=m_TableFrameArray[pUserSitDown->wTableID];

  000ee	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  000f1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000f4	51		 push	 ecx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000fe	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	89 55 e0	 mov	 DWORD PTR _pTableFrame$7[ebp], edx

; 5972 : 		if (pTableFrame->GetTableUserItem(pUserSitDown->wChairID)==pIServerUserItem) return true;

  00108	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  0010b	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0010f	51		 push	 ecx
  00110	8b 55 e0	 mov	 edx, DWORD PTR _pTableFrame$7[ebp]
  00113	8b 02		 mov	 eax, DWORD PTR [edx]
  00115	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$7[ebp]
  00118	8b 90 9c 00 00
	00		 mov	 edx, DWORD PTR [eax+156]
  0011e	ff d2		 call	 edx
  00120	3b 45 f0	 cmp	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00123	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  00125	b0 01		 mov	 al, 1
  00127	e9 8e 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5973 : 	}
; 5974 : 
; 5975 : 	//用户判断
; 5976 : 	if (cbUserStatus==US_PLAYING)

  0012c	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00130	83 f8 05	 cmp	 eax, 5
  00133	75 1a		 jne	 SHORT $LN9@OnTCPNetwo

; 5977 : 	{
; 5978 : 		SendRequestFailure(pIServerUserItem,TEXT("您正在游戏中，暂时不能离开，请先结束当前游戏！"),0);

  00135	6a 00		 push	 0
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@
  0013c	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0013f	50		 push	 eax
  00140	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 5979 : 		return true;

  00148	b0 01		 mov	 al, 1
  0014a	e9 6b 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5980 : 	}
; 5981 : 
; 5982 : 	//插入分组
; 5983 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)!=0)

  0014f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00152	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00155	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00159	83 e2 04	 and	 edx, 4
  0015c	74 1c		 je	 SHORT $LN10@OnTCPNetwo

; 5984 : 	{
; 5985 : 		//加入比赛
; 5986 : 		InsertDistribute(pIServerUserItem);	

  0015e	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00161	50		 push	 eax
  00162	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	83 c1 04	 add	 ecx, 4
  00168	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0016b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0016e	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00171	ff d2		 call	 edx

; 5987 : 		
; 5988 : 		return true;

  00173	b0 01		 mov	 al, 1
  00175	e9 40 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5989 : 	}
; 5990 : 
; 5991 : 	//离开处理
; 5992 : 	if (wTableID!=INVALID_TABLE)

  0017a	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0017e	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00183	74 3c		 je	 SHORT $LN11@OnTCPNetwo

; 5993 : 	{
; 5994 : 		CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  00185	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00189	50		 push	 eax
  0018a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00193	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00198	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019a	89 4d dc	 mov	 DWORD PTR _pTableFrame$6[ebp], ecx

; 5995 : 		if (pTableFrame->PerformStandUpAction(pIServerUserItem,true)==false) return true;

  0019d	6a 01		 push	 1
  0019f	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001a2	50		 push	 eax
  001a3	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  001a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a8	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$6[ebp]
  001ab	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  001b1	ff d0		 call	 eax
  001b3	0f b6 c8	 movzx	 ecx, al
  001b6	85 c9		 test	 ecx, ecx
  001b8	75 07		 jne	 SHORT $LN11@OnTCPNetwo
  001ba	b0 01		 mov	 al, 1
  001bc	e9 f9 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN11@OnTCPNetwo:

; 5996 : 	}
; 5997 : 
; 5998 : 	//防作弊
; 5999 : 	if(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)&&(m_pGameServiceAttrib->wChairCount < MAX_CHAIR))

  001c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001c7	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  001ca	52		 push	 edx
  001cb	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  001d0	83 c4 04	 add	 esp, 4
  001d3	0f b6 c0	 movzx	 eax, al
  001d6	85 c0		 test	 eax, eax
  001d8	74 52		 je	 SHORT $LN13@OnTCPNetwo
  001da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001dd	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  001e0	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  001e4	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  001ea	7d 40		 jge	 SHORT $LN13@OnTCPNetwo

; 6000 : 	{
; 6001 : 		if(m_TableFrameArray[0]->EfficacyEnterTableScoreRule(0, pIServerUserItem))

  001ec	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ef	50		 push	 eax
  001f0	6a 00		 push	 0
  001f2	6a 00		 push	 0
  001f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f7	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001fd	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00202	8b 08		 mov	 ecx, DWORD PTR [eax]
  00204	e8 00 00 00 00	 call	 ?EfficacyEnterTableScoreRule@CTableFrame@@QAE_NGPAUIServerUserItem@@@Z ; CTableFrame::EfficacyEnterTableScoreRule
  00209	0f b6 c8	 movzx	 ecx, al
  0020c	85 c9		 test	 ecx, ecx
  0020e	74 15		 je	 SHORT $LN14@OnTCPNetwo

; 6002 : 		{
; 6003 : 			InsertDistribute(pIServerUserItem);

  00210	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00213	50		 push	 eax
  00214	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00217	83 c1 04	 add	 ecx, 4
  0021a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0021d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00220	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00223	ff d2		 call	 edx
$LN14@OnTCPNetwo:

; 6004 : 		}
; 6005 : 
; 6006 : 		return true;

  00225	b0 01		 mov	 al, 1
  00227	e9 8e 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 6007 : 	}
; 6008 : 
; 6009 : 	//请求调整
; 6010 : 	WORD wRequestTableID=pUserSitDown->wTableID;

  0022c	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  0022f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00232	66 89 4d d8	 mov	 WORD PTR _wRequestTableID$[ebp], cx

; 6011 : 	WORD wRequestChairID=pUserSitDown->wChairID;

  00236	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  00239	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  0023d	66 89 4d d4	 mov	 WORD PTR _wRequestChairID$[ebp], cx

; 6012 : 
; 6013 : 	//桌子调整
; 6014 : 	if (wRequestTableID>=m_TableFrameArray.GetCount())

  00241	0f b7 75 d8	 movzx	 esi, WORD PTR _wRequestTableID$[ebp]
  00245	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00248	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0024e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00253	3b f0		 cmp	 esi, eax
  00255	0f 8c ac 01 00
	00		 jl	 $LN15@OnTCPNetwo

; 6015 : 	{	
; 6016 : 		if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  0025b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0025e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00261	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00265	83 e2 10	 and	 edx, 16			; 00000010H
  00268	74 1f		 je	 SHORT $LN16@OnTCPNetwo

; 6017 : 		{
; 6018 : 			SendRequestFailure(pIServerUserItem, TEXT("错误的房间请求，请稍后再试！"), 0);

  0026a	6a 00		 push	 0
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BCDLHLAL@?$LE?m?N?s?$LF?D?$LH?$LP?$LM?d?G?k?G?s?$KD?$KM?G?k?I?T?$LK?s?T?Y?J?T?$KD?$KB@
  00271	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00274	50		 push	 eax
  00275	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 6019 : 			return true;

  0027d	b0 01		 mov	 al, 1
  0027f	e9 36 03 00 00	 jmp	 $LN1@OnTCPNetwo

; 6020 : 		}
; 6021 : 		else

  00284	e9 7e 01 00 00	 jmp	 $LN15@OnTCPNetwo
$LN16@OnTCPNetwo:

; 6022 : 		{	
; 6023 : 			//起始桌子
; 6024 : 			WORD wStartTableID = 0;

  00289	33 c0		 xor	 eax, eax
  0028b	66 89 45 d0	 mov	 WORD PTR _wStartTableID$5[ebp], ax

; 6025 : 			DWORD dwServerRule = m_pGameServiceOption->dwServerRule;

  0028f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00292	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00295	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00298	89 55 cc	 mov	 DWORD PTR _dwServerRule$4[ebp], edx

; 6026 : 			if ((CServerRule::IsAllowAvertCheatMode(dwServerRule) == true) && (m_pGameServiceAttrib->wChairCount < MAX_CHAIR)) wStartTableID = 1;

  0029b	8b 45 cc	 mov	 eax, DWORD PTR _dwServerRule$4[ebp]
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  002a4	83 c4 04	 add	 esp, 4
  002a7	0f b6 c8	 movzx	 ecx, al
  002aa	83 f9 01	 cmp	 ecx, 1
  002ad	75 1b		 jne	 SHORT $LN18@OnTCPNetwo
  002af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b2	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  002b5	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  002b9	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  002bf	7d 09		 jge	 SHORT $LN18@OnTCPNetwo
  002c1	b8 01 00 00 00	 mov	 eax, 1
  002c6	66 89 45 d0	 mov	 WORD PTR _wStartTableID$5[ebp], ax
$LN18@OnTCPNetwo:

; 6027 : 
; 6028 : 			//动态加入
; 6029 : 			bool bDynamicJoin = true;

  002ca	c6 45 cb 01	 mov	 BYTE PTR _bDynamicJoin$3[ebp], 1

; 6030 : 			if (m_pGameServiceAttrib->cbDynamicJoin == FALSE) bDynamicJoin = false;

  002ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002d1	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  002d4	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  002d8	85 d2		 test	 edx, edx
  002da	75 04		 jne	 SHORT $LN19@OnTCPNetwo
  002dc	c6 45 cb 00	 mov	 BYTE PTR _bDynamicJoin$3[ebp], 0
$LN19@OnTCPNetwo:

; 6031 : 			if (CServerRule::IsAllowDynamicJoin(m_pGameServiceOption->dwServerRule) == false) bDynamicJoin = false;

  002e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e3	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  002e6	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002e9	52		 push	 edx
  002ea	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  002ef	83 c4 04	 add	 esp, 4
  002f2	0f b6 c0	 movzx	 eax, al
  002f5	85 c0		 test	 eax, eax
  002f7	75 04		 jne	 SHORT $LN20@OnTCPNetwo
  002f9	c6 45 cb 00	 mov	 BYTE PTR _bDynamicJoin$3[ebp], 0
$LN20@OnTCPNetwo:

; 6032 : 			if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  002fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00300	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00303	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00307	83 fa 10	 cmp	 edx, 16			; 00000010H
  0030a	75 04		 jne	 SHORT $LN21@OnTCPNetwo

; 6033 : 			{
; 6034 : 				bDynamicJoin = false;

  0030c	c6 45 cb 00	 mov	 BYTE PTR _bDynamicJoin$3[ebp], 0
$LN21@OnTCPNetwo:

; 6035 : 			}
; 6036 : 
; 6037 : 			//寻找位置
; 6038 : 			for (WORD i = wStartTableID; i < m_TableFrameArray.GetCount(); i++)

  00310	66 8b 45 d0	 mov	 ax, WORD PTR _wStartTableID$5[ebp]
  00314	66 89 45 c4	 mov	 WORD PTR _i$2[ebp], ax
  00318	eb 0c		 jmp	 SHORT $LN4@OnTCPNetwo
$LN2@OnTCPNetwo:
  0031a	66 8b 45 c4	 mov	 ax, WORD PTR _i$2[ebp]
  0031e	66 83 c0 01	 add	 ax, 1
  00322	66 89 45 c4	 mov	 WORD PTR _i$2[ebp], ax
$LN4@OnTCPNetwo:
  00326	0f b7 75 c4	 movzx	 esi, WORD PTR _i$2[ebp]
  0032a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0032d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00333	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00338	3b f0		 cmp	 esi, eax
  0033a	0f 8d 97 00 00
	00		 jge	 $LN3@OnTCPNetwo

; 6039 : 			{
; 6040 : 				//游戏状态
; 6041 : 				if ((m_TableFrameArray[i]->IsGameStarted() == true) && (bDynamicJoin == false))continue;

  00340	0f b7 45 c4	 movzx	 eax, WORD PTR _i$2[ebp]
  00344	50		 push	 eax
  00345	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00348	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0034e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00353	8b 08		 mov	 ecx, DWORD PTR [eax]
  00355	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv287[ebp], ecx
  0035b	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv287[ebp]
  00361	8b 02		 mov	 eax, DWORD PTR [edx]
  00363	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv287[ebp]
  00369	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0036c	ff d2		 call	 edx
  0036e	0f b6 c0	 movzx	 eax, al
  00371	83 f8 01	 cmp	 eax, 1
  00374	75 0a		 jne	 SHORT $LN22@OnTCPNetwo
  00376	0f b6 45 cb	 movzx	 eax, BYTE PTR _bDynamicJoin$3[ebp]
  0037a	85 c0		 test	 eax, eax
  0037c	75 02		 jne	 SHORT $LN22@OnTCPNetwo
  0037e	eb 9a		 jmp	 SHORT $LN2@OnTCPNetwo
$LN22@OnTCPNetwo:

; 6042 : 
; 6043 : 				//获取空位
; 6044 : 				WORD wNullChairID = m_TableFrameArray[i]->GetNullChairID();

  00380	0f b7 45 c4	 movzx	 eax, WORD PTR _i$2[ebp]
  00384	50		 push	 eax
  00385	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00388	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0038e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00393	8b 08		 mov	 ecx, DWORD PTR [eax]
  00395	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv302[ebp], ecx
  0039b	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv302[ebp]
  003a1	8b 02		 mov	 eax, DWORD PTR [edx]
  003a3	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv302[ebp]
  003a9	8b 90 2c 01 00
	00		 mov	 edx, DWORD PTR [eax+300]
  003af	ff d2		 call	 edx
  003b1	66 89 45 c0	 mov	 WORD PTR _wNullChairID$1[ebp], ax

; 6045 : 
; 6046 : 				//调整结果
; 6047 : 				if (wNullChairID != INVALID_CHAIR)

  003b5	0f b7 45 c0	 movzx	 eax, WORD PTR _wNullChairID$1[ebp]
  003b9	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  003be	74 12		 je	 SHORT $LN23@OnTCPNetwo

; 6048 : 				{
; 6049 : 					//设置变量
; 6050 : 					wRequestTableID = i;

  003c0	66 8b 45 c4	 mov	 ax, WORD PTR _i$2[ebp]
  003c4	66 89 45 d8	 mov	 WORD PTR _wRequestTableID$[ebp], ax

; 6051 : 					wRequestChairID = wNullChairID;

  003c8	66 8b 45 c0	 mov	 ax, WORD PTR _wNullChairID$1[ebp]
  003cc	66 89 45 d4	 mov	 WORD PTR _wRequestChairID$[ebp], ax

; 6052 : 
; 6053 : 					break;

  003d0	eb 05		 jmp	 SHORT $LN3@OnTCPNetwo
$LN23@OnTCPNetwo:

; 6054 : 				}
; 6055 : 			}

  003d2	e9 43 ff ff ff	 jmp	 $LN2@OnTCPNetwo
$LN3@OnTCPNetwo:

; 6056 : 
; 6057 : 			//结果判断
; 6058 : 			if ((wRequestTableID == INVALID_CHAIR) || (wRequestChairID == INVALID_CHAIR))

  003d7	0f b7 45 d8	 movzx	 eax, WORD PTR _wRequestTableID$[ebp]
  003db	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  003e0	74 0b		 je	 SHORT $LN25@OnTCPNetwo
  003e2	0f b7 45 d4	 movzx	 eax, WORD PTR _wRequestChairID$[ebp]
  003e6	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  003eb	75 1a		 jne	 SHORT $LN15@OnTCPNetwo
$LN25@OnTCPNetwo:

; 6059 : 			{
; 6060 : 				SendRequestFailure(pIServerUserItem, TEXT("当前游戏房间已经人满为患了，暂时没有可以让您加入的位置，请稍后再试！"), 0);

  003ed	6a 00		 push	 0
  003ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JJCEJGNN@?$LF?$LB?G?$LA?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?N?$KK?$LL?$LM?A?K?$KD?$KM?T?$NN?J@
  003f4	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003f7	50		 push	 eax
  003f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 6061 : 				return true;

  00400	b0 01		 mov	 al, 1
  00402	e9 b3 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 6062 : 			}
; 6063 : 		}		
; 6064 : 	}
; 6065 : 
; 6066 : 	//椅子调整
; 6067 : 	if (wRequestChairID >= m_pGameServiceAttrib->wChairCount)

  00407	0f b7 45 d4	 movzx	 eax, WORD PTR _wRequestChairID$[ebp]
  0040b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0040e	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00411	0f b7 4a 02	 movzx	 ecx, WORD PTR [edx+2]
  00415	3b c1		 cmp	 eax, ecx
  00417	0f 8c a5 00 00
	00		 jl	 $LN26@OnTCPNetwo

; 6068 : 	{
; 6069 : 		//效验参数
; 6070 : 		ASSERT(wRequestTableID<m_TableFrameArray.GetCount());

  0041d	0f b7 75 d8	 movzx	 esi, WORD PTR _wRequestTableID$[ebp]
  00421	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00424	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0042a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  0042f	3b f0		 cmp	 esi, eax
  00431	7c 18		 jl	 SHORT $LN35@OnTCPNetwo
  00433	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00438	83 c0 7b	 add	 eax, 123		; 0000007bH
  0043b	50		 push	 eax
  0043c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00441	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00446	85 c0		 test	 eax, eax
  00448	74 01		 je	 SHORT $LN35@OnTCPNetwo
  0044a	cc		 int	 3
$LN35@OnTCPNetwo:

; 6071 : 		if (wRequestTableID>=m_TableFrameArray.GetCount()) return false;

  0044b	0f b7 75 d8	 movzx	 esi, WORD PTR _wRequestTableID$[ebp]
  0044f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00452	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00458	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  0045d	3b f0		 cmp	 esi, eax
  0045f	7c 07		 jl	 SHORT $LN27@OnTCPNetwo
  00461	32 c0		 xor	 al, al
  00463	e9 52 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN27@OnTCPNetwo:

; 6072 : 
; 6073 : 		//查找空位
; 6074 : 		wRequestChairID=m_TableFrameArray[wRequestTableID]->GetNullChairID();

  00468	0f b7 45 d8	 movzx	 eax, WORD PTR _wRequestTableID$[ebp]
  0046c	50		 push	 eax
  0046d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00470	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00476	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0047b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0047d	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv344[ebp], ecx
  00483	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv344[ebp]
  00489	8b 02		 mov	 eax, DWORD PTR [edx]
  0048b	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv344[ebp]
  00491	8b 90 2c 01 00
	00		 mov	 edx, DWORD PTR [eax+300]
  00497	ff d2		 call	 edx
  00499	66 89 45 d4	 mov	 WORD PTR _wRequestChairID$[ebp], ax

; 6075 : 
; 6076 : 		//结果判断
; 6077 : 		if (wRequestChairID==INVALID_CHAIR)

  0049d	0f b7 45 d4	 movzx	 eax, WORD PTR _wRequestChairID$[ebp]
  004a1	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  004a6	75 1a		 jne	 SHORT $LN26@OnTCPNetwo

; 6078 : 		{
; 6079 : 			SendRequestFailure(pIServerUserItem,TEXT("由于此游戏桌暂时没有可以让您加入的位置了，请选择另外的游戏桌！"),0);

  004a8	6a 00		 push	 0
  004aa	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@DPCOLKLL@?S?I?S?Z?$LE?K?S?N?O?$LH?W?$MA?T?$NN?J?$LB?C?$LL?S?P?$LP?I?R?T?H?C?D?z?$LM?S?H@
  004af	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  004b2	50		 push	 eax
  004b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004b6	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 6080 : 			return true;

  004bb	b0 01		 mov	 al, 1
  004bd	e9 f8 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN26@OnTCPNetwo:

; 6081 : 		}
; 6082 : 	}
; 6083 : 	//约战自动分配
; 6084 : 	if ((m_pGameServiceOption->wServerType & GAME_GENRE_PERSONAL) != 0)

  004c2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004c5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004c8	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  004cc	83 e2 10	 and	 edx, 16			; 00000010H
  004cf	0f 84 a4 00 00
	00		 je	 $LN29@OnTCPNetwo

; 6085 : 	{
; 6086 : 		//效验参数
; 6087 : 		ASSERT(wRequestTableID < m_TableFrameArray.GetCount());

  004d5	0f b7 75 d8	 movzx	 esi, WORD PTR _wRequestTableID$[ebp]
  004d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004dc	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  004e2	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  004e7	3b f0		 cmp	 esi, eax
  004e9	7c 1a		 jl	 SHORT $LN36@OnTCPNetwo
  004eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  004f0	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  004f5	50		 push	 eax
  004f6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  004fb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00500	85 c0		 test	 eax, eax
  00502	74 01		 je	 SHORT $LN36@OnTCPNetwo
  00504	cc		 int	 3
$LN36@OnTCPNetwo:

; 6088 : 		if (wRequestTableID >= m_TableFrameArray.GetCount()) return false;

  00505	0f b7 75 d8	 movzx	 esi, WORD PTR _wRequestTableID$[ebp]
  00509	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050c	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00512	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00517	3b f0		 cmp	 esi, eax
  00519	7c 07		 jl	 SHORT $LN30@OnTCPNetwo
  0051b	32 c0		 xor	 al, al
  0051d	e9 98 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN30@OnTCPNetwo:

; 6089 : 
; 6090 : 		//查找空位
; 6091 : 		wRequestChairID = m_TableFrameArray[wRequestTableID]->GetNullChairID();

  00522	0f b7 45 d8	 movzx	 eax, WORD PTR _wRequestTableID$[ebp]
  00526	50		 push	 eax
  00527	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0052a	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00530	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00535	8b 08		 mov	 ecx, DWORD PTR [eax]
  00537	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv382[ebp], ecx
  0053d	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv382[ebp]
  00543	8b 02		 mov	 eax, DWORD PTR [edx]
  00545	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv382[ebp]
  0054b	8b 90 2c 01 00
	00		 mov	 edx, DWORD PTR [eax+300]
  00551	ff d2		 call	 edx
  00553	66 89 45 d4	 mov	 WORD PTR _wRequestChairID$[ebp], ax

; 6092 : 
; 6093 : 		//结果判断
; 6094 : 		if (wRequestChairID == INVALID_CHAIR)

  00557	0f b7 45 d4	 movzx	 eax, WORD PTR _wRequestChairID$[ebp]
  0055b	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00560	75 17		 jne	 SHORT $LN29@OnTCPNetwo

; 6095 : 		{
; 6096 : 			SendRequestFailure(pIServerUserItem, TEXT("由于此房间没有空余的位置了，请选择另外的游戏房间！"), 0);

  00562	6a 00		 push	 0
  00564	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KHGFKAPM@?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?C?$LL?S?P?$LP?U?S?$OA?$LF?D?N?$LL?V?C?A?K?$KD?$KM?G?k?Q@
  00569	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0056c	50		 push	 eax
  0056d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00570	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 6097 : 			return true;

  00575	b0 01		 mov	 al, 1
  00577	eb 41		 jmp	 SHORT $LN1@OnTCPNetwo
$LN29@OnTCPNetwo:

; 6098 : 		}
; 6099 : 	}
; 6100 : 
; 6101 : 	//坐下处理
; 6102 : 	CTableFrame * pTableFrame=m_TableFrameArray[wRequestTableID];

  00579	0f b7 45 d8	 movzx	 eax, WORD PTR _wRequestTableID$[ebp]
  0057d	50		 push	 eax
  0057e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00581	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00587	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0058c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0058e	89 4d bc	 mov	 DWORD PTR _pTableFrame$[ebp], ecx

; 6103 : 	pTableFrame->PerformSitDownAction(wRequestChairID,pIServerUserItem,pUserSitDown->szPassword,pUserSitDown->dwRoomPwd);

  00591	8b 45 f8	 mov	 eax, DWORD PTR _pUserSitDown$[ebp]
  00594	8b 48 25	 mov	 ecx, DWORD PTR [eax+37]
  00597	51		 push	 ecx
  00598	8b 55 f8	 mov	 edx, DWORD PTR _pUserSitDown$[ebp]
  0059b	83 c2 04	 add	 edx, 4
  0059e	52		 push	 edx
  0059f	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  005a2	50		 push	 eax
  005a3	0f b7 4d d4	 movzx	 ecx, WORD PTR _wRequestChairID$[ebp]
  005a7	51		 push	 ecx
  005a8	8b 55 bc	 mov	 edx, DWORD PTR _pTableFrame$[ebp]
  005ab	8b 02		 mov	 eax, DWORD PTR [edx]
  005ad	8b 4d bc	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  005b0	8b 90 e0 00 00
	00		 mov	 edx, DWORD PTR [eax+224]
  005b6	ff d2		 call	 edx

; 6104 : 
; 6105 : 	return true;

  005b8	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 6106 : }

  005ba	5f		 pop	 edi
  005bb	5e		 pop	 esi
  005bc	5b		 pop	 ebx
  005bd	8b e5		 mov	 esp, ebp
  005bf	5d		 pop	 ebp
  005c0	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserSitDown
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$ = -36					; size = 4
_pTableFrame$1 = -32					; size = 4
_cbUserStatus$ = -25					; size = 1
_wChairID$ = -24					; size = 2
_wTableID$ = -20					; size = 2
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pUserLookon$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserLookon, COMDAT
; _this$ = ecx

; 5900 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5901 : 	//效验参数
; 5902 : 	ASSERT(wDataSize==sizeof(CMD_GR_UserLookon));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 04	 cmp	 eax, 4
  00013	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0002d	cc		 int	 3
$LN11@OnTCPNetwo:

; 5903 : 	if (wDataSize!=sizeof(CMD_GR_UserLookon)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 04	 cmp	 eax, 4
  00035	74 07		 je	 SHORT $LN2@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 8b 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5904 : 
; 5905 : 	//效验数据
; 5906 : 	CMD_GR_UserLookon * pUserLookon=(CMD_GR_UserLookon *)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pUserLookon$[ebp], eax

; 5907 : 	if (pUserLookon->wChairID>=m_pGameServiceAttrib->wChairCount) return false;

  00044	8b 45 f8	 mov	 eax, DWORD PTR _pUserLookon$[ebp]
  00047	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0004b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00051	0f b7 50 02	 movzx	 edx, WORD PTR [eax+2]
  00055	3b ca		 cmp	 ecx, edx
  00057	7c 07		 jl	 SHORT $LN3@OnTCPNetwo
  00059	32 c0		 xor	 al, al
  0005b	e9 69 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5908 : 	if (pUserLookon->wTableID>=(WORD)m_TableFrameArray.GetCount()) return false;

  00060	8b 45 f8	 mov	 eax, DWORD PTR _pUserLookon$[ebp]
  00063	0f b7 30	 movzx	 esi, WORD PTR [eax]
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0006f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00074	0f b7 c8	 movzx	 ecx, ax
  00077	3b f1		 cmp	 esi, ecx
  00079	7c 07		 jl	 SHORT $LN4@OnTCPNetwo
  0007b	32 c0		 xor	 al, al
  0007d	e9 47 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5909 : 
; 5910 : 	//获取用户
; 5911 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00082	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00085	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0008a	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5912 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0008e	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00092	50		 push	 eax
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 11		 mov	 edx, DWORD PTR [ecx]
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0009e	ff d0		 call	 eax
  000a0	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5913 : 
; 5914 : 	//用户效验
; 5915 : 	ASSERT(pIServerUserItem!=NULL);

  000a3	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000a7	75 18		 jne	 SHORT $LN12@OnTCPNetwo
  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000ae	83 c0 0f	 add	 eax, 15			; 0000000fH
  000b1	50		 push	 eax
  000b2	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bc	85 c0		 test	 eax, eax
  000be	74 01		 je	 SHORT $LN12@OnTCPNetwo
  000c0	cc		 int	 3
$LN12@OnTCPNetwo:

; 5916 : 	if (pIServerUserItem==NULL) return false;

  000c1	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000c5	75 07		 jne	 SHORT $LN5@OnTCPNetwo
  000c7	32 c0		 xor	 al, al
  000c9	e9 fb 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5917 : 
; 5918 : 	//消息处理
; 5919 : 	WORD wTableID=pIServerUserItem->GetTableID();

  000ce	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d1	8b 10		 mov	 edx, DWORD PTR [eax]
  000d3	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d6	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  000d9	ff d0		 call	 eax
  000db	66 89 45 ec	 mov	 WORD PTR _wTableID$[ebp], ax

; 5920 : 	WORD wChairID=pIServerUserItem->GetChairID();

  000df	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000e2	8b 10		 mov	 edx, DWORD PTR [eax]
  000e4	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e7	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  000ea	ff d0		 call	 eax
  000ec	66 89 45 e8	 mov	 WORD PTR _wChairID$[ebp], ax

; 5921 : 	BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  000f0	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000f3	8b 10		 mov	 edx, DWORD PTR [eax]
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f8	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000fb	ff d0		 call	 eax
  000fd	88 45 e7	 mov	 BYTE PTR _cbUserStatus$[ebp], al

; 5922 : 	if ((wTableID==pUserLookon->wTableID)&&(wChairID==pUserLookon->wChairID)&&(cbUserStatus==US_LOOKON)) return true;

  00100	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00104	8b 4d f8	 mov	 ecx, DWORD PTR _pUserLookon$[ebp]
  00107	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0010a	3b c2		 cmp	 eax, edx
  0010c	75 1f		 jne	 SHORT $LN6@OnTCPNetwo
  0010e	0f b7 45 e8	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00112	8b 4d f8	 mov	 ecx, DWORD PTR _pUserLookon$[ebp]
  00115	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00119	3b c2		 cmp	 eax, edx
  0011b	75 10		 jne	 SHORT $LN6@OnTCPNetwo
  0011d	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00121	83 f8 04	 cmp	 eax, 4
  00124	75 07		 jne	 SHORT $LN6@OnTCPNetwo
  00126	b0 01		 mov	 al, 1
  00128	e9 9c 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5923 : 
; 5924 : 	//用户判断
; 5925 : 	if (cbUserStatus==US_PLAYING)

  0012d	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00131	83 f8 05	 cmp	 eax, 5
  00134	75 17		 jne	 SHORT $LN7@OnTCPNetwo

; 5926 : 	{
; 5927 : 		SendRequestFailure(pIServerUserItem,TEXT("您正在游戏中，暂时不能离开，请先结束当前游戏！"),0);

  00136	6a 00		 push	 0
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IADBOHKH@?D?z?U?$PN?T?Z?S?N?O?$LH?V?P?$KD?$KM?T?$NN?J?$LB?$LC?$LL?D?$NM?$MA?k?$LP?$KK?$KD?$KM?G?k?O@
  0013d	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00140	50		 push	 eax
  00141	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	e8 00 00 00 00	 call	 ?SendRequestFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJ@Z ; CAttemperEngineSink::SendRequestFailure

; 5928 : 		return true;

  00149	b0 01		 mov	 al, 1
  0014b	eb 7c		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5929 : 	}
; 5930 : 
; 5931 : 	//离开处理
; 5932 : 	if (wTableID!=INVALID_TABLE)

  0014d	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00151	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00156	74 39		 je	 SHORT $LN8@OnTCPNetwo

; 5933 : 	{
; 5934 : 		CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  00158	0f b7 45 ec	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0015c	50		 push	 eax
  0015d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00166	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	89 4d e0	 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 5935 : 		if (pTableFrame->PerformStandUpAction(pIServerUserItem)==false) return true;

  00170	6a 00		 push	 0
  00172	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00175	50		 push	 eax
  00176	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  00179	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017b	8b 4d e0	 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  0017e	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00184	ff d0		 call	 eax
  00186	0f b6 c8	 movzx	 ecx, al
  00189	85 c9		 test	 ecx, ecx
  0018b	75 04		 jne	 SHORT $LN8@OnTCPNetwo
  0018d	b0 01		 mov	 al, 1
  0018f	eb 38		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5936 : 	}
; 5937 : 
; 5938 : 	//坐下处理
; 5939 : 	CTableFrame * pTableFrame=m_TableFrameArray[pUserLookon->wTableID];

  00191	8b 45 f8	 mov	 eax, DWORD PTR _pUserLookon$[ebp]
  00194	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00197	51		 push	 ecx
  00198	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019b	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001a1	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001a6	8b 10		 mov	 edx, DWORD PTR [eax]
  001a8	89 55 dc	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 5940 : 	pTableFrame->PerformLookonAction(pUserLookon->wChairID,pIServerUserItem);

  001ab	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ae	50		 push	 eax
  001af	8b 4d f8	 mov	 ecx, DWORD PTR _pUserLookon$[ebp]
  001b2	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  001b6	52		 push	 edx
  001b7	8b 45 dc	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  001ba	8b 10		 mov	 edx, DWORD PTR [eax]
  001bc	8b 4d dc	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001bf	8b 82 dc 00 00
	00		 mov	 eax, DWORD PTR [edx+220]
  001c5	ff d0		 call	 eax

; 5941 : 
; 5942 : 	return true;

  001c7	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 5943 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserLookon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv190 = -104						; size = 4
tv161 = -104						; size = 4
tv154 = -104						; size = 4
tv147 = -104						; size = 4
tv140 = -104						; size = 4
_RecvPacket$1 = -36					; size = 8
_DataDescribe$2 = -28					; size = 4
_pDataBuffer$3 = -24					; size = 4
_pCMDUserRule$ = -20					; size = 4
_pUserRule$ = -16					; size = 4
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubUserRule, COMDAT
; _this$ = ecx

; 5820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5821 : 	//效验参数
; 5822 : 	ASSERT(wDataSize>=sizeof(CMD_GR_UserRule));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00013	73 19		 jae	 SHORT $LN16@OnTCPNetwo
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN16@OnTCPNetwo
  0002d	cc		 int	 3
$LN16@OnTCPNetwo:

; 5823 : 	if (wDataSize<sizeof(CMD_GR_UserRule)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00035	73 07		 jae	 SHORT $LN6@OnTCPNetwo
  00037	32 c0		 xor	 al, al
  00039	e9 91 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5824 : 
; 5825 : 	//获取用户
; 5826 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0003e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00046	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5827 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0004a	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005a	ff d0		 call	 eax
  0005c	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5828 : 
; 5829 : 	//用户效验
; 5830 : 	ASSERT(pIServerUserItem!=NULL);

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00063	75 18		 jne	 SHORT $LN17@OnTCPNetwo
  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  0006a	83 c0 0a	 add	 eax, 10			; 0000000aH
  0006d	50		 push	 eax
  0006e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN17@OnTCPNetwo
  0007c	cc		 int	 3
$LN17@OnTCPNetwo:

; 5831 : 	if (pIServerUserItem==NULL) return false;

  0007d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00081	75 07		 jne	 SHORT $LN7@OnTCPNetwo
  00083	32 c0		 xor	 al, al
  00085	e9 45 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5832 : 
; 5833 : 	//规则判断
; 5834 : 	//ASSERT(CServerRule::IsForfendGameRule(m_pGameServiceOption->dwServerRule)==false);
; 5835 : 	if (CServerRule::IsForfendGameRule(m_pGameServiceOption->dwServerRule)==true||m_pGameServiceOption->wServerType==GAME_GENRE_MATCH) return true;

  0008a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00090	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?IsForfendGameRule@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameRule
  00099	83 c4 04	 add	 esp, 4
  0009c	0f b6 c0	 movzx	 eax, al
  0009f	83 f8 01	 cmp	 eax, 1
  000a2	74 0f		 je	 SHORT $LN9@OnTCPNetwo
  000a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000aa	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  000ae	83 fa 04	 cmp	 edx, 4
  000b1	75 07		 jne	 SHORT $LN8@OnTCPNetwo
$LN9@OnTCPNetwo:
  000b3	b0 01		 mov	 al, 1
  000b5	e9 15 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5836 : 
; 5837 : 	//消息处理
; 5838 : 	tagUserRule * pUserRule=pIServerUserItem->GetUserRule();

  000ba	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000bd	8b 10		 mov	 edx, DWORD PTR [eax]
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c2	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000c5	ff d0		 call	 eax
  000c7	89 45 f0	 mov	 DWORD PTR _pUserRule$[ebp], eax

; 5839 : 	CMD_GR_UserRule * pCMDUserRule=(CMD_GR_UserRule *)pData;

  000ca	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  000cd	89 45 ec	 mov	 DWORD PTR _pCMDUserRule$[ebp], eax

; 5840 : 
; 5841 : 	//规则标志
; 5842 : 	pUserRule->bLimitSameIP=((pCMDUserRule->cbRuleMask&UR_LIMIT_SAME_IP)>0);

  000d0	8b 45 ec	 mov	 eax, DWORD PTR _pCMDUserRule$[ebp]
  000d3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000d6	83 e1 01	 and	 ecx, 1
  000d9	7e 09		 jle	 SHORT $LN18@OnTCPNetwo
  000db	c7 45 98 01 00
	00 00		 mov	 DWORD PTR tv140[ebp], 1
  000e2	eb 07		 jmp	 SHORT $LN19@OnTCPNetwo
$LN18@OnTCPNetwo:
  000e4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN19@OnTCPNetwo:
  000eb	8b 55 f0	 mov	 edx, DWORD PTR _pUserRule$[ebp]
  000ee	8a 45 98	 mov	 al, BYTE PTR tv140[ebp]
  000f1	88 02		 mov	 BYTE PTR [edx], al

; 5843 : 	pUserRule->bLimitWinRate=((pCMDUserRule->cbRuleMask&UR_LIMIT_WIN_RATE)>0);

  000f3	8b 45 ec	 mov	 eax, DWORD PTR _pCMDUserRule$[ebp]
  000f6	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000f9	83 e1 02	 and	 ecx, 2
  000fc	7e 09		 jle	 SHORT $LN20@OnTCPNetwo
  000fe	c7 45 98 01 00
	00 00		 mov	 DWORD PTR tv147[ebp], 1
  00105	eb 07		 jmp	 SHORT $LN21@OnTCPNetwo
$LN20@OnTCPNetwo:
  00107	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN21@OnTCPNetwo:
  0010e	8b 55 f0	 mov	 edx, DWORD PTR _pUserRule$[ebp]
  00111	8a 45 98	 mov	 al, BYTE PTR tv147[ebp]
  00114	88 42 01	 mov	 BYTE PTR [edx+1], al

; 5844 : 	pUserRule->bLimitFleeRate=((pCMDUserRule->cbRuleMask&UR_LIMIT_FLEE_RATE)>0);

  00117	8b 45 ec	 mov	 eax, DWORD PTR _pCMDUserRule$[ebp]
  0011a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0011d	83 e1 04	 and	 ecx, 4
  00120	7e 09		 jle	 SHORT $LN22@OnTCPNetwo
  00122	c7 45 98 01 00
	00 00		 mov	 DWORD PTR tv154[ebp], 1
  00129	eb 07		 jmp	 SHORT $LN23@OnTCPNetwo
$LN22@OnTCPNetwo:
  0012b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN23@OnTCPNetwo:
  00132	8b 55 f0	 mov	 edx, DWORD PTR _pUserRule$[ebp]
  00135	8a 45 98	 mov	 al, BYTE PTR tv154[ebp]
  00138	88 42 02	 mov	 BYTE PTR [edx+2], al

; 5845 : 	pUserRule->bLimitGameScore=((pCMDUserRule->cbRuleMask&UR_LIMIT_GAME_SCORE)>0);

  0013b	8b 45 ec	 mov	 eax, DWORD PTR _pCMDUserRule$[ebp]
  0013e	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00141	83 e1 08	 and	 ecx, 8
  00144	7e 09		 jle	 SHORT $LN24@OnTCPNetwo
  00146	c7 45 98 01 00
	00 00		 mov	 DWORD PTR tv161[ebp], 1
  0014d	eb 07		 jmp	 SHORT $LN25@OnTCPNetwo
$LN24@OnTCPNetwo:
  0014f	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN25@OnTCPNetwo:
  00156	8b 55 f0	 mov	 edx, DWORD PTR _pUserRule$[ebp]
  00159	8a 45 98	 mov	 al, BYTE PTR tv161[ebp]
  0015c	88 42 03	 mov	 BYTE PTR [edx+3], al

; 5846 : 
; 5847 : 	//规则属性
; 5848 : 	pUserRule->szPassword[0]=0;

  0015f	b8 01 00 00 00	 mov	 eax, 1
  00164	6b c8 00	 imul	 ecx, eax, 0
  00167	8b 55 f0	 mov	 edx, DWORD PTR _pUserRule$[ebp]
  0016a	c6 44 0a 10 00	 mov	 BYTE PTR [edx+ecx+16], 0

; 5849 : 	pUserRule->wMinWinRate=pCMDUserRule->wMinWinRate;

  0016f	8b 45 f0	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  00172	8b 4d ec	 mov	 ecx, DWORD PTR _pCMDUserRule$[ebp]
  00175	66 8b 51 01	 mov	 dx, WORD PTR [ecx+1]
  00179	66 89 50 04	 mov	 WORD PTR [eax+4], dx

; 5850 : 	pUserRule->wMaxFleeRate=pCMDUserRule->wMaxFleeRate;

  0017d	8b 45 f0	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  00180	8b 4d ec	 mov	 ecx, DWORD PTR _pCMDUserRule$[ebp]
  00183	66 8b 51 03	 mov	 dx, WORD PTR [ecx+3]
  00187	66 89 50 06	 mov	 WORD PTR [eax+6], dx

; 5851 : 	pUserRule->lMaxGameScore=pCMDUserRule->lMaxGameScore;

  0018b	8b 45 f0	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  0018e	8b 4d ec	 mov	 ecx, DWORD PTR _pCMDUserRule$[ebp]
  00191	8b 51 05	 mov	 edx, DWORD PTR [ecx+5]
  00194	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 5852 : 	pUserRule->lMinGameScore=pCMDUserRule->lMinGameScore;

  00197	8b 45 f0	 mov	 eax, DWORD PTR _pUserRule$[ebp]
  0019a	8b 4d ec	 mov	 ecx, DWORD PTR _pCMDUserRule$[ebp]
  0019d	8b 51 09	 mov	 edx, DWORD PTR [ecx+9]
  001a0	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 5853 : 
; 5854 : 	//桌子密码
; 5855 : 	if (wDataSize>sizeof(CMD_GR_UserRule))

  001a3	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001a7	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  001aa	0f 86 1d 01 00
	00		 jbe	 $LN10@OnTCPNetwo

; 5856 : 	{
; 5857 : 		//变量定义
; 5858 : 		VOID * pDataBuffer=NULL;

  001b0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pDataBuffer$3[ebp], 0

; 5859 : 		tagDataDescribe DataDescribe;
; 5860 : 		CRecvPacketHelper RecvPacket(pCMDUserRule+1,wDataSize-sizeof(CMD_GR_UserRule));

  001b7	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001bb	83 e8 0d	 sub	 eax, 13			; 0000000dH
  001be	50		 push	 eax
  001bf	8b 4d ec	 mov	 ecx, DWORD PTR _pCMDUserRule$[ebp]
  001c2	83 c1 0d	 add	 ecx, 13			; 0000000dH
  001c5	51		 push	 ecx
  001c6	8d 4d dc	 lea	 ecx, DWORD PTR _RecvPacket$1[ebp]
  001c9	e8 00 00 00 00	 call	 ??0CRecvPacketHelper@@QAE@PBXG@Z ; CRecvPacketHelper::CRecvPacketHelper
$LN2@OnTCPNetwo:

; 5861 : 
; 5862 : 		//提取处理
; 5863 : 		while (true)

  001ce	b8 01 00 00 00	 mov	 eax, 1
  001d3	85 c0		 test	 eax, eax
  001d5	0f 84 f2 00 00
	00		 je	 $LN10@OnTCPNetwo

; 5864 : 		{
; 5865 : 			//提取数据
; 5866 : 			pDataBuffer=RecvPacket.GetData(DataDescribe);

  001db	8d 45 e4	 lea	 eax, DWORD PTR _DataDescribe$2[ebp]
  001de	50		 push	 eax
  001df	8d 4d dc	 lea	 ecx, DWORD PTR _RecvPacket$1[ebp]
  001e2	e8 00 00 00 00	 call	 ?GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z ; CRecvPacketHelper::GetData
  001e7	89 45 e8	 mov	 DWORD PTR _pDataBuffer$3[ebp], eax

; 5867 : 			if (DataDescribe.wDataDescribe==DTP_NULL) break;

  001ea	0f b7 45 e6	 movzx	 eax, WORD PTR _DataDescribe$2[ebp+2]
  001ee	85 c0		 test	 eax, eax
  001f0	75 05		 jne	 SHORT $LN11@OnTCPNetwo
  001f2	e9 d6 00 00 00	 jmp	 $LN10@OnTCPNetwo
$LN11@OnTCPNetwo:

; 5868 : 
; 5869 : 			//数据分析
; 5870 : 			switch (DataDescribe.wDataDescribe)

  001f7	0f b7 45 e6	 movzx	 eax, WORD PTR _DataDescribe$2[ebp+2]
  001fb	89 45 98	 mov	 DWORD PTR tv190[ebp], eax
  001fe	83 7d 98 01	 cmp	 DWORD PTR tv190[ebp], 1
  00202	74 05		 je	 SHORT $LN12@OnTCPNetwo
  00204	e9 bf 00 00 00	 jmp	 $LN4@OnTCPNetwo
$LN12@OnTCPNetwo:

; 5871 : 			{
; 5872 : 			case DTP_GR_TABLE_PASSWORD:		//桌子密码
; 5873 : 				{
; 5874 : 					//效验数据
; 5875 : 					ASSERT(pDataBuffer!=NULL);

  00209	83 7d e8 00	 cmp	 DWORD PTR _pDataBuffer$3[ebp], 0
  0020d	75 18		 jne	 SHORT $LN26@OnTCPNetwo
  0020f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00214	83 c0 37	 add	 eax, 55			; 00000037H
  00217	50		 push	 eax
  00218	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0021d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00222	85 c0		 test	 eax, eax
  00224	74 01		 je	 SHORT $LN26@OnTCPNetwo
  00226	cc		 int	 3
$LN26@OnTCPNetwo:

; 5876 : 					ASSERT(DataDescribe.wDataSize<=sizeof(pUserRule->szPassword));

  00227	0f b7 45 e4	 movzx	 eax, WORD PTR _DataDescribe$2[ebp]
  0022b	83 f8 21	 cmp	 eax, 33			; 00000021H
  0022e	76 19		 jbe	 SHORT $LN27@OnTCPNetwo
  00230	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00236	83 c1 38	 add	 ecx, 56			; 00000038H
  00239	51		 push	 ecx
  0023a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0023f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00244	85 c0		 test	 eax, eax
  00246	74 01		 je	 SHORT $LN27@OnTCPNetwo
  00248	cc		 int	 3
$LN27@OnTCPNetwo:

; 5877 : 
; 5878 : 					//规则判断
; 5879 : 					ASSERT(CServerRule::IsForfendLockTable(m_pGameServiceOption->dwServerRule)==false);

  00249	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0024c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0024f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00252	52		 push	 edx
  00253	e8 00 00 00 00	 call	 ?IsForfendLockTable@CServerRule@@SA_NK@Z ; CServerRule::IsForfendLockTable
  00258	83 c4 04	 add	 esp, 4
  0025b	0f b6 c0	 movzx	 eax, al
  0025e	85 c0		 test	 eax, eax
  00260	74 19		 je	 SHORT $LN28@OnTCPNetwo
  00262	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00268	83 c1 3b	 add	 ecx, 59			; 0000003bH
  0026b	51		 push	 ecx
  0026c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00271	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00276	85 c0		 test	 eax, eax
  00278	74 01		 je	 SHORT $LN28@OnTCPNetwo
  0027a	cc		 int	 3
$LN28@OnTCPNetwo:

; 5880 : 					if (CServerRule::IsForfendLockTable(m_pGameServiceOption->dwServerRule)==true) break;

  0027b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00281	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00284	52		 push	 edx
  00285	e8 00 00 00 00	 call	 ?IsForfendLockTable@CServerRule@@SA_NK@Z ; CServerRule::IsForfendLockTable
  0028a	83 c4 04	 add	 esp, 4
  0028d	0f b6 c0	 movzx	 eax, al
  00290	83 f8 01	 cmp	 eax, 1
  00293	75 02		 jne	 SHORT $LN13@OnTCPNetwo
  00295	eb 31		 jmp	 SHORT $LN4@OnTCPNetwo
$LN13@OnTCPNetwo:

; 5881 : 
; 5882 : 					//设置数据
; 5883 : 					if (DataDescribe.wDataSize<=sizeof(pUserRule->szPassword))

  00297	0f b7 45 e4	 movzx	 eax, WORD PTR _DataDescribe$2[ebp]
  0029b	83 f8 21	 cmp	 eax, 33			; 00000021H
  0029e	77 28		 ja	 SHORT $LN4@OnTCPNetwo

; 5884 : 					{
; 5885 : 						CopyMemory(&pUserRule->szPassword,pDataBuffer,DataDescribe.wDataSize);

  002a0	0f b7 45 e4	 movzx	 eax, WORD PTR _DataDescribe$2[ebp]
  002a4	50		 push	 eax
  002a5	8b 4d e8	 mov	 ecx, DWORD PTR _pDataBuffer$3[ebp]
  002a8	51		 push	 ecx
  002a9	8b 55 f0	 mov	 edx, DWORD PTR _pUserRule$[ebp]
  002ac	83 c2 10	 add	 edx, 16			; 00000010H
  002af	52		 push	 edx
  002b0	e8 00 00 00 00	 call	 _memcpy
  002b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5886 : 						pUserRule->szPassword[CountArray(pUserRule->szPassword)-1]=0;

  002b8	b8 01 00 00 00	 mov	 eax, 1
  002bd	c1 e0 05	 shl	 eax, 5
  002c0	8b 4d f0	 mov	 ecx, DWORD PTR _pUserRule$[ebp]
  002c3	c6 44 01 10 00	 mov	 BYTE PTR [ecx+eax+16], 0
$LN4@OnTCPNetwo:

; 5887 : 					}
; 5888 : 
; 5889 : 					break;
; 5890 : 				}
; 5891 : 			}
; 5892 : 		}

  002c8	e9 01 ff ff ff	 jmp	 $LN2@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5893 : 	}
; 5894 : 
; 5895 : 	return true;

  002cd	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 5896 : }

  002cf	5f		 pop	 edi
  002d0	5e		 pop	 esi
  002d1	5b		 pop	 ebx
  002d2	8b e5		 mov	 esp, ebp
  002d4	5d		 pop	 ebp
  002d5	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubUserRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv175 = -233						; size = 1
$T2 = -232						; size = 1
$T3 = -231						; size = 1
$T4 = -230						; size = 1
$T5 = -229						; size = 1
_LogonAccounts$ = -164					; size = 108
_dwClientVersion$ = -56					; size = 4
_dwFrameVersion$ = -52					; size = 4
_dwPlazaVersion$ = -48					; size = 4
_strPassword$ = -44					; size = 4
_pIServerUserItem$ = -40				; size = 4
_pBindParameter$ = -36					; size = 4
_pIBindUserItem$ = -32					; size = 4
_wBindIndex$ = -28					; size = 2
_pLogonAccounts$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubLogonAccounts, COMDAT
; _this$ = ecx

; 5738 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 5739 : 	//效验参数
; 5740 : 	ASSERT(wDataSize>=sizeof(CMD_GR_LogonAccounts));

  00031	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00035	83 f8 6e	 cmp	 eax, 110		; 0000006eH
  00038	73 19		 jae	 SHORT $LN12@OnTCPNetwo
  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00040	83 c1 02	 add	 ecx, 2
  00043	51		 push	 ecx
  00044	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00049	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004e	85 c0		 test	 eax, eax
  00050	74 01		 je	 SHORT $LN12@OnTCPNetwo
  00052	cc		 int	 3
$LN12@OnTCPNetwo:

; 5741 : 	if (wDataSize<=sizeof(CMD_GR_LogonAccounts)) return false;

  00053	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00057	83 f8 6e	 cmp	 eax, 110		; 0000006eH
  0005a	77 07		 ja	 SHORT $LN2@OnTCPNetwo
  0005c	32 c0		 xor	 al, al
  0005e	e9 48 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5742 : 
; 5743 : 	//处理消息
; 5744 : 	CMD_GR_LogonAccounts * pLogonAccounts=(CMD_GR_LogonAccounts *)pData;

  00063	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00066	89 45 e8	 mov	 DWORD PTR _pLogonAccounts$[ebp], eax

; 5745 : 	pLogonAccounts->szPassword[CountArray(pLogonAccounts->szPassword)-1]=0;

  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	c1 e0 05	 shl	 eax, 5
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonAccounts$[ebp]
  00074	c6 44 01 0c 00	 mov	 BYTE PTR [ecx+eax+12], 0

; 5746 : 	pLogonAccounts->szAccounts[CountArray(pLogonAccounts->szAccounts)-1]=0;

  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	6b c8 1f	 imul	 ecx, eax, 31
  00081	8b 55 e8	 mov	 edx, DWORD PTR _pLogonAccounts$[ebp]
  00084	c6 44 0a 2d 00	 mov	 BYTE PTR [edx+ecx+45], 0

; 5747 : 	pLogonAccounts->szMachineID[CountArray(pLogonAccounts->szMachineID)-1]=0;

  00089	b8 01 00 00 00	 mov	 eax, 1
  0008e	c1 e0 05	 shl	 eax, 5
  00091	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonAccounts$[ebp]
  00094	c6 44 01 4d 00	 mov	 BYTE PTR [ecx+eax+77], 0

; 5748 : 
; 5749 : 	//绑定信息
; 5750 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00099	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0009c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000a1	66 89 45 e4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5751 : 	IServerUserItem * pIBindUserItem=GetBindUserItem(wBindIndex);

  000a5	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000b5	ff d0		 call	 eax
  000b7	89 45 e0	 mov	 DWORD PTR _pIBindUserItem$[ebp], eax

; 5752 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  000ba	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000be	50		 push	 eax
  000bf	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000ca	ff d0		 call	 eax
  000cc	89 45 dc	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 5753 : 
; 5754 : 	//重复判断
; 5755 : 	if (pIBindUserItem!=NULL)

  000cf	83 7d e0 00	 cmp	 DWORD PTR _pIBindUserItem$[ebp], 0
  000d3	74 24		 je	 SHORT $LN3@OnTCPNetwo

; 5756 : 	{ 
; 5757 : 		ASSERT(FALSE);

  000d5	33 c0		 xor	 eax, eax
  000d7	75 19		 jne	 SHORT $LN13@OnTCPNetwo
  000d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000df	83 c1 13	 add	 ecx, 19			; 00000013H
  000e2	51		 push	 ecx
  000e3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000e8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ed	85 c0		 test	 eax, eax
  000ef	74 01		 je	 SHORT $LN13@OnTCPNetwo
  000f1	cc		 int	 3
$LN13@OnTCPNetwo:

; 5758 : 		return false;

  000f2	32 c0		 xor	 al, al
  000f4	e9 b2 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5759 : 	}
; 5760 : 
; 5761 : 	//机器人和真人不许互踢
; 5762 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pLogonAccounts->szAccounts);

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  000fc	83 c0 2d	 add	 eax, 45			; 0000002dH
  000ff	50		 push	 eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00109	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0010c	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00112	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00115	ff d2		 call	 edx
  00117	89 45 d8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5763 : 	if (pIServerUserItem!=NULL)

  0011a	83 7d d8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0011e	0f 84 87 00 00
	00		 je	 $LN4@OnTCPNetwo

; 5764 : 	{
; 5765 : 		if((pIServerUserItem->IsAndroidUser() && (pBindParameter->dwClientAddr!=0L))
; 5766 : 			|| (!pIServerUserItem->IsAndroidUser() && (pBindParameter->dwClientAddr==0L)))

  00124	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00127	8b 10		 mov	 edx, DWORD PTR [eax]
  00129	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0012c	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00132	ff d0		 call	 eax
  00134	0f b6 c8	 movzx	 ecx, al
  00137	85 c9		 test	 ecx, ecx
  00139	74 09		 je	 SHORT $LN7@OnTCPNetwo
  0013b	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0013e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00142	75 20		 jne	 SHORT $LN6@OnTCPNetwo
$LN7@OnTCPNetwo:
  00144	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00147	8b 10		 mov	 edx, DWORD PTR [eax]
  00149	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0014c	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00152	ff d0		 call	 eax
  00154	0f b6 c8	 movzx	 ecx, al
  00157	85 c9		 test	 ecx, ecx
  00159	75 50		 jne	 SHORT $LN4@OnTCPNetwo
  0015b	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0015e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00162	75 47		 jne	 SHORT $LN4@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5767 : 		{
; 5768 : 			SendRoomMessage(dwSocketID, TEXT("该帐号已在此房间游戏，且不允许踢出，请咨询管理员！"), SMT_CHAT|SMT_EJECT|SMT_GLOBAL|SMT_CLOSE_ROOM,(pBindParameter->dwClientAddr==0L));

  00164	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00167	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0016b	75 09		 jne	 SHORT $LN14@OnTCPNetwo
  0016d	c6 85 17 ff ff
	ff 01		 mov	 BYTE PTR tv175[ebp], 1
  00174	eb 07		 jmp	 SHORT $LN15@OnTCPNetwo
$LN14@OnTCPNetwo:
  00176	c6 85 17 ff ff
	ff 00		 mov	 BYTE PTR tv175[ebp], 0
$LN15@OnTCPNetwo:
  0017d	0f b6 8d 17 ff
	ff ff		 movzx	 ecx, BYTE PTR tv175[ebp]
  00184	51		 push	 ecx
  00185	68 07 01 00 00	 push	 263			; 00000107H
  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBGKLFPO@?$LI?C?U?J?$LK?E?R?Q?T?Z?$LE?K?$LH?$LP?$LM?d?S?N?O?$LH?$KD?$KM?G?R?$LC?$LL?T?J?P?m?L@
  0018f	8b 55 10	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00192	52		 push	 edx
  00193	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00196	83 c1 04	 add	 ecx, 4
  00199	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0019c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0019f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001a2	ff d0		 call	 eax

; 5769 : 			return false;

  001a4	32 c0		 xor	 al, al
  001a6	e9 00 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5770 : 		}
; 5771 : 	}
; 5772 : 
; 5773 : 	//密码判断
; 5774 : 	CString strPassword = pLogonAccounts->szPassword;

  001ab	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  001ae	83 c0 0c	 add	 eax, 12			; 0000000cH
  001b1	50		 push	 eax
  001b2	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  001b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  001bb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 5775 : 	strPassword.Trim();

  001c2	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  001c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Trim@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ

; 5776 : 	if(pBindParameter->dwClientAddr!=0L && strPassword.GetLength()==0)

  001cb	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001ce	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001d2	74 45		 je	 SHORT $LN8@OnTCPNetwo
  001d4	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  001d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  001dd	85 c0		 test	 eax, eax
  001df	75 38		 jne	 SHORT $LN8@OnTCPNetwo

; 5777 : 	{
; 5778 : 		//发送失败
; 5779 : 		SendLogonFailure(TEXT("很抱歉，您的登录密码错误，不允许继续进入！"),LOGON_FAIL_SERVER_INVALIDATION,dwSocketID);

  001e1	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001e4	50		 push	 eax
  001e5	68 c8 00 00 00	 push	 200			; 000000c8H
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KDGAPOGL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LF?G?B?$LM?C?$NM?B?k?$LE?m?N?s?$KD?$KM?$LC?$LL?T?J?P@
  001ef	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 5780 : 		return true;

  001f7	c6 85 1b ff ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  001fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00205	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00208	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0020e	8a 85 1b ff ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  00214	e9 92 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5781 : 	}
; 5782 : 
; 5783 : 	//版本信息
; 5784 : 	pBindParameter->cbClientKind=CLIENT_KIND_COMPUTER;

  00219	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0021c	c6 40 18 03	 mov	 BYTE PTR [eax+24], 3

; 5785 : 	pBindParameter->dwPlazaVersion=pLogonAccounts->dwPlazaVersion;

  00220	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00223	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonAccounts$[ebp]
  00226	8b 11		 mov	 edx, DWORD PTR [ecx]
  00228	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 5786 : 	pBindParameter->dwFrameVersion=pLogonAccounts->dwFrameVersion;

  0022b	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0022e	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonAccounts$[ebp]
  00231	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00234	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 5787 : 	pBindParameter->dwProcessVersion=pLogonAccounts->dwProcessVersion;

  00237	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0023a	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonAccounts$[ebp]
  0023d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00240	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 5788 : 
; 5789 : 	//大厅版本
; 5790 : 	DWORD dwPlazaVersion=pLogonAccounts->dwPlazaVersion;

  00243	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  00246	8b 08		 mov	 ecx, DWORD PTR [eax]
  00248	89 4d d0	 mov	 DWORD PTR _dwPlazaVersion$[ebp], ecx

; 5791 : 	DWORD dwFrameVersion=pLogonAccounts->dwFrameVersion;

  0024b	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  0024e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00251	89 4d cc	 mov	 DWORD PTR _dwFrameVersion$[ebp], ecx

; 5792 : 	DWORD dwClientVersion=pLogonAccounts->dwProcessVersion;

  00254	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  00257	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0025a	89 4d c8	 mov	 DWORD PTR _dwClientVersion$[ebp], ecx

; 5793 : 	if (PerformCheckVersion(dwPlazaVersion,dwFrameVersion,dwClientVersion,dwSocketID)==false) return true;

  0025d	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00260	50		 push	 eax
  00261	8b 4d c8	 mov	 ecx, DWORD PTR _dwClientVersion$[ebp]
  00264	51		 push	 ecx
  00265	8b 55 cc	 mov	 edx, DWORD PTR _dwFrameVersion$[ebp]
  00268	52		 push	 edx
  00269	8b 45 d0	 mov	 eax, DWORD PTR _dwPlazaVersion$[ebp]
  0026c	50		 push	 eax
  0026d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00270	e8 00 00 00 00	 call	 ?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z ; CAttemperEngineSink::PerformCheckVersion
  00275	0f b6 c8	 movzx	 ecx, al
  00278	85 c9		 test	 ecx, ecx
  0027a	75 22		 jne	 SHORT $LN9@OnTCPNetwo
  0027c	c6 85 1a ff ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  00283	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0028a	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  0028d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00293	8a 85 1a ff ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  00299	e9 0d 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5794 : 
; 5795 : 	//切换判断
; 5796 : 	if ((pIServerUserItem!=NULL)&&(pIServerUserItem->ContrastLogonPass(pLogonAccounts->szPassword)==true))

  0029e	83 7d d8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  002a2	74 5f		 je	 SHORT $LN10@OnTCPNetwo
  002a4	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  002a7	83 c0 0c	 add	 eax, 12			; 0000000cH
  002aa	50		 push	 eax
  002ab	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  002b0	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002b3	8b 82 b4 00 00
	00		 mov	 eax, DWORD PTR [edx+180]
  002b9	ff d0		 call	 eax
  002bb	0f b6 c8	 movzx	 ecx, al
  002be	83 f9 01	 cmp	 ecx, 1
  002c1	75 40		 jne	 SHORT $LN10@OnTCPNetwo

; 5797 : 	{
; 5798 : 		SwitchUserItemConnect(pIServerUserItem,pLogonAccounts->szMachineID,wBindIndex);

  002c3	6a 00		 push	 0
  002c5	6a 00		 push	 0
  002c7	6a 00		 push	 0
  002c9	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  002cd	50		 push	 eax
  002ce	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonAccounts$[ebp]
  002d1	83 c1 4d	 add	 ecx, 77			; 0000004dH
  002d4	51		 push	 ecx
  002d5	8b 55 d8	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  002d8	52		 push	 edx
  002d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002dc	e8 00 00 00 00	 call	 ?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z ; CAttemperEngineSink::SwitchUserItemConnect

; 5799 : 		return true;

  002e1	c6 85 19 ff ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  002e8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002ef	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  002f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002f8	8a 85 19 ff ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  002fe	e9 a8 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5800 : 	}
; 5801 : 
; 5802 : 	//变量定义
; 5803 : 	DBR_GR_LogonAccounts LogonAccounts;
; 5804 : 	ZeroMemory(&LogonAccounts,sizeof(LogonAccounts));

  00303	6a 6c		 push	 108			; 0000006cH
  00305	6a 00		 push	 0
  00307	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _LogonAccounts$[ebp]
  0030d	50		 push	 eax
  0030e	e8 00 00 00 00	 call	 _memset
  00313	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5805 : 
; 5806 : 	//构造数据
; 5807 : 	LogonAccounts.dwClientAddr=pBindParameter->dwClientAddr;

  00316	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00319	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0031c	89 4d a0	 mov	 DWORD PTR _LogonAccounts$[ebp+68], ecx

; 5808 : 	lstrcpyn(LogonAccounts.szAccounts,pLogonAccounts->szAccounts,CountArray(LogonAccounts.szAccounts));

  0031f	6a 20		 push	 32			; 00000020H
  00321	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  00324	83 c0 2d	 add	 eax, 45			; 0000002dH
  00327	50		 push	 eax
  00328	8d 8d 7d ff ff
	ff		 lea	 ecx, DWORD PTR _LogonAccounts$[ebp+33]
  0032e	51		 push	 ecx
  0032f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5809 : 	lstrcpyn(LogonAccounts.szPassword,pLogonAccounts->szPassword,CountArray(LogonAccounts.szPassword));

  00335	6a 21		 push	 33			; 00000021H
  00337	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  0033a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0033d	50		 push	 eax
  0033e	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _LogonAccounts$[ebp]
  00344	51		 push	 ecx
  00345	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5810 : 	lstrcpyn(LogonAccounts.szMachineID,pLogonAccounts->szMachineID,CountArray(LogonAccounts.szMachineID));

  0034b	6a 21		 push	 33			; 00000021H
  0034d	8b 45 e8	 mov	 eax, DWORD PTR _pLogonAccounts$[ebp]
  00350	83 c0 4d	 add	 eax, 77			; 0000004dH
  00353	50		 push	 eax
  00354	8d 4d a4	 lea	 ecx, DWORD PTR _LogonAccounts$[ebp+72]
  00357	51		 push	 ecx
  00358	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5811 : 
; 5812 : 	//投递请求
; 5813 : 	m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOGON_ACCOUNTS,dwSocketID,&LogonAccounts,sizeof(LogonAccounts));

  0035e	6a 00		 push	 0
  00360	6a 6c		 push	 108			; 0000006cH
  00362	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _LogonAccounts$[ebp]
  00368	50		 push	 eax
  00369	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0036c	51		 push	 ecx
  0036d	6a 66		 push	 102			; 00000066H
  0036f	6a 00		 push	 0
  00371	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00374	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0037a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0037d	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  00383	8b 00		 mov	 eax, DWORD PTR [eax]
  00385	52		 push	 edx
  00386	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00389	ff d1		 call	 ecx
  0038b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5814 : 
; 5815 : 	return true;

  0038e	c6 85 18 ff ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  00395	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0039c	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  0039f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003a5	8a 85 18 ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnTCPNetwo:

; 5816 : }

  003ab	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003ae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003b5	59		 pop	 ecx
  003b6	5f		 pop	 edi
  003b7	5e		 pop	 esi
  003b8	5b		 pop	 ebx
  003b9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003bc	33 cd		 xor	 ecx, ebp
  003be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003c3	8b e5		 mov	 esp, ebp
  003c5	5d		 pop	 ebp
  003c6	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 8a 10 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-240]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubLogonAccounts
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv193 = -222						; size = 1
$T2 = -221						; size = 1
$T3 = -220						; size = 1
$T4 = -219						; size = 1
$T5 = -218						; size = 1
$T6 = -217						; size = 1
_LogonMobile$ = -152					; size = 104
_dwClientVersion$ = -48					; size = 4
_strPassword$ = -44					; size = 4
_pIServerUserItem$ = -40				; size = 4
_pBindParameter$ = -36					; size = 4
_pIBindUserItem$ = -32					; size = 4
_wBindIndex$ = -28					; size = 2
_pLogonMobile$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubLogonMobile, COMDAT
; _this$ = ecx

; 5629 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 5630 : 	//效验参数
; 5631 : 	ASSERT(wDataSize>=sizeof(CMD_GR_LogonMobile));

  00031	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00035	83 f8 72	 cmp	 eax, 114		; 00000072H
  00038	73 19		 jae	 SHORT $LN18@OnTCPNetwo
  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00040	83 c1 02	 add	 ecx, 2
  00043	51		 push	 ecx
  00044	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00049	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004e	85 c0		 test	 eax, eax
  00050	74 01		 je	 SHORT $LN18@OnTCPNetwo
  00052	cc		 int	 3
$LN18@OnTCPNetwo:

; 5632 : 	if (wDataSize<sizeof(CMD_GR_LogonMobile)) return false;

  00053	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00057	83 f8 72	 cmp	 eax, 114		; 00000072H
  0005a	73 07		 jae	 SHORT $LN2@OnTCPNetwo
  0005c	32 c0		 xor	 al, al
  0005e	e9 0d 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5633 : 
; 5634 : 	//处理消息
; 5635 : 	CMD_GR_LogonMobile * pLogonMobile=(CMD_GR_LogonMobile *)pData;

  00063	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00066	89 45 e8	 mov	 DWORD PTR _pLogonMobile$[ebp], eax

; 5636 : 	pLogonMobile->szPassword[CountArray(pLogonMobile->szPassword)-1]=0;

  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	c1 e0 05	 shl	 eax, 5
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonMobile$[ebp]
  00074	c6 44 01 0f 00	 mov	 BYTE PTR [ecx+eax+15], 0

; 5637 : 	pLogonMobile->szMachineID[CountArray(pLogonMobile->szMachineID)-1]=0;

  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	c1 e0 05	 shl	 eax, 5
  00081	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonMobile$[ebp]
  00084	c6 44 01 51 00	 mov	 BYTE PTR [ecx+eax+81], 0

; 5638 : 
; 5639 : 	//绑定信息
; 5640 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00089	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00091	66 89 45 e4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5641 : 	IServerUserItem * pIBindUserItem=GetBindUserItem(wBindIndex);

  00095	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000a5	ff d0		 call	 eax
  000a7	89 45 e0	 mov	 DWORD PTR _pIBindUserItem$[ebp], eax

; 5642 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  000aa	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000ae	50		 push	 eax
  000af	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000ba	ff d0		 call	 eax
  000bc	89 45 dc	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 5643 : 
; 5644 : 	//重复判断
; 5645 : 	if ((pBindParameter==NULL)||(pIBindUserItem!=NULL))

  000bf	83 7d dc 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  000c3	74 06		 je	 SHORT $LN4@OnTCPNetwo
  000c5	83 7d e0 00	 cmp	 DWORD PTR _pIBindUserItem$[ebp], 0
  000c9	74 24		 je	 SHORT $LN3@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5646 : 	{ 
; 5647 : 		ASSERT(FALSE);

  000cb	33 c0		 xor	 eax, eax
  000cd	75 19		 jne	 SHORT $LN19@OnTCPNetwo
  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000d5	83 c1 12	 add	 ecx, 18			; 00000012H
  000d8	51		 push	 ecx
  000d9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000de	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000e3	85 c0		 test	 eax, eax
  000e5	74 01		 je	 SHORT $LN19@OnTCPNetwo
  000e7	cc		 int	 3
$LN19@OnTCPNetwo:

; 5648 : 		return false;

  000e8	32 c0		 xor	 al, al
  000ea	e9 81 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5649 : 	}
; 5650 : 
; 5651 : 	//密码校验
; 5652 : 	if(((m_pGameServiceOption->wServerKind&SERVER_GENRE_PASSWD)!=0) && (LOWORD(dwSocketID)<INDEX_ANDROID))

  000ef	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000f5	0f b7 51 4a	 movzx	 edx, WORD PTR [ecx+74]
  000f9	83 e2 02	 and	 edx, 2
  000fc	74 48		 je	 SHORT $LN5@OnTCPNetwo
  000fe	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00101	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00106	0f b7 c8	 movzx	 ecx, ax
  00109	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  0010f	7d 35		 jge	 SHORT $LN5@OnTCPNetwo

; 5653 : 	{
; 5654 : 		//密码比较
; 5655 : 		if(lstrcmp(pLogonMobile->szServerPasswd,m_pGameServiceOption->szServerPasswd)!=0)

  00111	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00117	83 c1 70	 add	 ecx, 112		; 00000070H
  0011a	51		 push	 ecx
  0011b	8b 55 e8	 mov	 edx, DWORD PTR _pLogonMobile$[ebp]
  0011e	83 c2 30	 add	 edx, 48			; 00000030H
  00121	52		 push	 edx
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00128	85 c0		 test	 eax, eax
  0012a	74 1a		 je	 SHORT $LN5@OnTCPNetwo

; 5656 : 		{
; 5657 : 			//发送失败
; 5658 : 			SendLogonFailure(TEXT("抱歉，您输入的房间密码不正确，请重新输入！"),0,dwSocketID);

  0012c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0012f	50		 push	 eax
  00130	6a 00		 push	 0
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@OCEOPNCD@?$LB?$KH?G?$LI?$KD?$KM?D?z?J?d?H?k?$LF?D?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G@
  00137	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 5659 : 
; 5660 : 			return true;

  0013f	b0 01		 mov	 al, 1
  00141	e9 2a 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5661 : 		}
; 5662 : 	}
; 5663 : 
; 5664 : 	//机器人和真人不许互踢
; 5665 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pLogonMobile->dwUserID);

  00146	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  00149	8b 48 0b	 mov	 ecx, DWORD PTR [eax+11]
  0014c	51		 push	 ecx
  0014d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00156	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00159	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  0015f	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00162	ff d2		 call	 edx
  00164	89 45 d8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5666 : 	if (pIServerUserItem!=NULL)

  00167	83 7d d8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0016b	0f 84 87 00 00
	00		 je	 $LN7@OnTCPNetwo

; 5667 : 	{
; 5668 : 		if((pIServerUserItem->IsAndroidUser() && (pBindParameter->dwClientAddr!=0L))
; 5669 : 			|| (!pIServerUserItem->IsAndroidUser() && (pBindParameter->dwClientAddr==0L)))

  00171	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00174	8b 10		 mov	 edx, DWORD PTR [eax]
  00176	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00179	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0017f	ff d0		 call	 eax
  00181	0f b6 c8	 movzx	 ecx, al
  00184	85 c9		 test	 ecx, ecx
  00186	74 09		 je	 SHORT $LN10@OnTCPNetwo
  00188	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0018b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0018f	75 20		 jne	 SHORT $LN9@OnTCPNetwo
$LN10@OnTCPNetwo:
  00191	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00194	8b 10		 mov	 edx, DWORD PTR [eax]
  00196	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00199	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0019f	ff d0		 call	 eax
  001a1	0f b6 c8	 movzx	 ecx, al
  001a4	85 c9		 test	 ecx, ecx
  001a6	75 50		 jne	 SHORT $LN7@OnTCPNetwo
  001a8	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001ab	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001af	75 47		 jne	 SHORT $LN7@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5670 : 		{
; 5671 : 			SendRoomMessage(dwSocketID, TEXT("该帐号已在此房间游戏，且不允许踢出，请咨询管理员！"), SMT_CHAT|SMT_EJECT|SMT_GLOBAL|SMT_CLOSE_ROOM,(pBindParameter->dwClientAddr==0L));

  001b1	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001b4	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001b8	75 09		 jne	 SHORT $LN20@OnTCPNetwo
  001ba	c6 85 22 ff ff
	ff 01		 mov	 BYTE PTR tv193[ebp], 1
  001c1	eb 07		 jmp	 SHORT $LN21@OnTCPNetwo
$LN20@OnTCPNetwo:
  001c3	c6 85 22 ff ff
	ff 00		 mov	 BYTE PTR tv193[ebp], 0
$LN21@OnTCPNetwo:
  001ca	0f b6 8d 22 ff
	ff ff		 movzx	 ecx, BYTE PTR tv193[ebp]
  001d1	51		 push	 ecx
  001d2	68 07 01 00 00	 push	 263			; 00000107H
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBGKLFPO@?$LI?C?U?J?$LK?E?R?Q?T?Z?$LE?K?$LH?$LP?$LM?d?S?N?O?$LH?$KD?$KM?G?R?$LC?$LL?T?J?P?m?L@
  001dc	8b 55 10	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  001df	52		 push	 edx
  001e0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001e3	83 c1 04	 add	 ecx, 4
  001e6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001e9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001ec	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001ef	ff d0		 call	 eax

; 5672 : 			return false;

  001f1	32 c0		 xor	 al, al
  001f3	e9 78 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5673 : 		}
; 5674 : 	}
; 5675 : 
; 5676 : 	//密码判断
; 5677 : 	CString strPassword = pLogonMobile->szPassword;

  001f8	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  001fb	83 c0 0f	 add	 eax, 15			; 0000000fH
  001fe	50		 push	 eax
  001ff	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00202	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00208	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 5678 : 	strPassword.Trim();

  0020f	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00212	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Trim@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ

; 5679 : 	if(pBindParameter->dwClientAddr!=0L && strPassword.GetLength()==0)

  00218	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0021b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0021f	74 45		 je	 SHORT $LN11@OnTCPNetwo
  00221	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0022a	85 c0		 test	 eax, eax
  0022c	75 38		 jne	 SHORT $LN11@OnTCPNetwo

; 5680 : 	{
; 5681 : 		//发送失败
; 5682 : 		SendLogonFailure(TEXT("很抱歉，您的登录密码错误，不允许继续进入！"),LOGON_FAIL_SERVER_INVALIDATION,dwSocketID);

  0022e	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00231	50		 push	 eax
  00232	68 c8 00 00 00	 push	 200			; 000000c8H
  00237	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KDGAPOGL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LF?G?B?$LM?C?$NM?B?k?$LE?m?N?s?$KD?$KM?$LC?$LL?T?J?P@
  0023c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 5683 : 		return true;

  00244	c6 85 27 ff ff
	ff 01		 mov	 BYTE PTR $T6[ebp], 1
  0024b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00252	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00255	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0025b	8a 85 27 ff ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  00261	e9 0a 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN11@OnTCPNetwo:

; 5684 : 	}
; 5685 : 
; 5686 : 	//版本信息
; 5687 : 	pBindParameter->cbClientKind=CLIENT_KIND_MOBILE;

  00266	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00269	c6 40 18 02	 mov	 BYTE PTR [eax+24], 2

; 5688 : 	pBindParameter->dwProcessVersion=pLogonMobile->dwProcessVersion;

  0026d	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00270	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonMobile$[ebp]
  00273	8b 51 02	 mov	 edx, DWORD PTR [ecx+2]
  00276	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 5689 : 
; 5690 : 	//大厅版本
; 5691 : 	DWORD dwClientVersion=pLogonMobile->dwProcessVersion;

  00279	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  0027c	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  0027f	89 4d d0	 mov	 DWORD PTR _dwClientVersion$[ebp], ecx

; 5692 : 	if (PerformCheckVersion(0L,0L,dwClientVersion,dwSocketID)==false) return true;

  00282	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00285	50		 push	 eax
  00286	8b 4d d0	 mov	 ecx, DWORD PTR _dwClientVersion$[ebp]
  00289	51		 push	 ecx
  0028a	6a 00		 push	 0
  0028c	6a 00		 push	 0
  0028e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00291	e8 00 00 00 00	 call	 ?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z ; CAttemperEngineSink::PerformCheckVersion
  00296	0f b6 d0	 movzx	 edx, al
  00299	85 d2		 test	 edx, edx
  0029b	75 22		 jne	 SHORT $LN12@OnTCPNetwo
  0029d	c6 85 26 ff ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  002a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002ab	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  002ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002b4	8a 85 26 ff ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  002ba	e9 b1 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN12@OnTCPNetwo:

; 5693 : 
; 5694 : 	//切换判断
; 5695 : 	if ((pIServerUserItem!=NULL)&&(pIServerUserItem->ContrastLogonPass(pLogonMobile->szPassword)==true))

  002bf	83 7d d8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  002c3	74 71		 je	 SHORT $LN13@OnTCPNetwo
  002c5	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  002c8	83 c0 0f	 add	 eax, 15			; 0000000fH
  002cb	50		 push	 eax
  002cc	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d1	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002d4	8b 82 b4 00 00
	00		 mov	 eax, DWORD PTR [edx+180]
  002da	ff d0		 call	 eax
  002dc	0f b6 c8	 movzx	 ecx, al
  002df	83 f9 01	 cmp	 ecx, 1
  002e2	75 52		 jne	 SHORT $LN13@OnTCPNetwo

; 5696 : 	{
; 5697 : 		SwitchUserItemConnect(pIServerUserItem,pLogonMobile->szMachineID,wBindIndex,pLogonMobile->cbDeviceType,pLogonMobile->wBehaviorFlags,pLogonMobile->wPageTableCount);

  002e4	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  002e7	0f b7 48 09	 movzx	 ecx, WORD PTR [eax+9]
  002eb	51		 push	 ecx
  002ec	8b 55 e8	 mov	 edx, DWORD PTR _pLogonMobile$[ebp]
  002ef	0f b7 42 07	 movzx	 eax, WORD PTR [edx+7]
  002f3	50		 push	 eax
  002f4	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonMobile$[ebp]
  002f7	0f b6 51 06	 movzx	 edx, BYTE PTR [ecx+6]
  002fb	52		 push	 edx
  002fc	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00300	50		 push	 eax
  00301	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonMobile$[ebp]
  00304	83 c1 51	 add	 ecx, 81			; 00000051H
  00307	51		 push	 ecx
  00308	8b 55 d8	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0030b	52		 push	 edx
  0030c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0030f	e8 00 00 00 00	 call	 ?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z ; CAttemperEngineSink::SwitchUserItemConnect

; 5698 : 		return true;

  00314	c6 85 25 ff ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  0031b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00322	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00325	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0032b	8a 85 25 ff ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  00331	e9 3a 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 5699 : 	}
; 5700 : 
; 5701 : 	//比赛效验
; 5702 : 	if(m_pIMatchServiceManager!=NULL&&m_pIMatchServiceManager->OnEventEnterMatch(dwSocketID, pData, pBindParameter->dwClientAddr,true))

  00336	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00339	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00340	74 53		 je	 SHORT $LN14@OnTCPNetwo
  00342	6a 01		 push	 1
  00344	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00347	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0034a	51		 push	 ecx
  0034b	8b 55 08	 mov	 edx, DWORD PTR _pData$[ebp]
  0034e	52		 push	 edx
  0034f	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00352	50		 push	 eax
  00353	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00356	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  0035c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0035f	8b 12		 mov	 edx, DWORD PTR [edx]
  00361	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00367	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0036a	ff d0		 call	 eax
  0036c	0f b6 c8	 movzx	 ecx, al
  0036f	85 c9		 test	 ecx, ecx
  00371	74 22		 je	 SHORT $LN14@OnTCPNetwo

; 5703 : 	{
; 5704 : 		return true;

  00373	c6 85 24 ff ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  0037a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00381	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00384	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0038a	8a 85 24 ff ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  00390	e9 db 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 5705 : 	}
; 5706 : 
; 5707 : 	//变量定义
; 5708 : 	DBR_GR_LogonMobile LogonMobile;
; 5709 : 	ZeroMemory(&LogonMobile,sizeof(LogonMobile));

  00395	6a 68		 push	 104			; 00000068H
  00397	6a 00		 push	 0
  00399	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _LogonMobile$[ebp]
  0039f	50		 push	 eax
  003a0	e8 00 00 00 00	 call	 _memset
  003a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5710 : 
; 5711 : 	//构造数据
; 5712 : 	LogonMobile.dwUserID=pLogonMobile->dwUserID;

  003a8	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  003ab	8b 48 0b	 mov	 ecx, DWORD PTR [eax+11]
  003ae	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _LogonMobile$[ebp], ecx

; 5713 : 	LogonMobile.dwClientAddr=pBindParameter->dwClientAddr;

  003b4	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  003b7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003ba	89 4d a4	 mov	 DWORD PTR _LogonMobile$[ebp+60], ecx

; 5714 : 	lstrcpyn(LogonMobile.szPassword,pLogonMobile->szPassword,CountArray(LogonMobile.szPassword));

  003bd	6a 21		 push	 33			; 00000021H
  003bf	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  003c2	83 c0 0f	 add	 eax, 15			; 0000000fH
  003c5	50		 push	 eax
  003c6	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _LogonMobile$[ebp+4]
  003cc	51		 push	 ecx
  003cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5715 : 	lstrcpyn(LogonMobile.szMachineID,pLogonMobile->szMachineID,CountArray(LogonMobile.szMachineID));

  003d3	6a 21		 push	 33			; 00000021H
  003d5	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  003d8	83 c0 51	 add	 eax, 81			; 00000051H
  003db	50		 push	 eax
  003dc	8d 4d a8	 lea	 ecx, DWORD PTR _LogonMobile$[ebp+64]
  003df	51		 push	 ecx
  003e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5716 : 	LogonMobile.cbDeviceType=pLogonMobile->cbDeviceType;

  003e6	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  003e9	8a 48 06	 mov	 cl, BYTE PTR [eax+6]
  003ec	88 4d 8d	 mov	 BYTE PTR _LogonMobile$[ebp+37], cl

; 5717 : 	LogonMobile.wBehaviorFlags=pLogonMobile->wBehaviorFlags;

  003ef	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  003f2	66 8b 48 07	 mov	 cx, WORD PTR [eax+7]
  003f6	66 89 4d 8e	 mov	 WORD PTR _LogonMobile$[ebp+38], cx

; 5718 : 	LogonMobile.wPageTableCount=pLogonMobile->wPageTableCount;

  003fa	8b 45 e8	 mov	 eax, DWORD PTR _pLogonMobile$[ebp]
  003fd	66 8b 48 09	 mov	 cx, WORD PTR [eax+9]
  00401	66 89 4d 90	 mov	 WORD PTR _LogonMobile$[ebp+40], cx

; 5719 : 
; 5720 : 	//约战房间
; 5721 : 	if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00405	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00408	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0040b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0040f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00412	75 06		 jne	 SHORT $LN15@OnTCPNetwo

; 5722 : 	{
; 5723 : 		LogonMobile.cbPersonalServer = 1;

  00414	c6 45 92 01	 mov	 BYTE PTR _LogonMobile$[ebp+42], 1

; 5724 : 	}
; 5725 : 	else

  00418	eb 04		 jmp	 SHORT $LN16@OnTCPNetwo
$LN15@OnTCPNetwo:

; 5726 : 	{
; 5727 : 		LogonMobile.cbPersonalServer = 0;

  0041a	c6 45 92 00	 mov	 BYTE PTR _LogonMobile$[ebp+42], 0
$LN16@OnTCPNetwo:

; 5728 : 	}
; 5729 : 
; 5730 : 	//投递请求
; 5731 : 	m_pIDBCorrespondManager->PostDataBaseRequest(LogonMobile.dwUserID,DBR_GR_LOGON_MOBILE,dwSocketID,&LogonMobile,sizeof(LogonMobile));

  0041e	6a 00		 push	 0
  00420	6a 68		 push	 104			; 00000068H
  00422	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _LogonMobile$[ebp]
  00428	50		 push	 eax
  00429	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0042c	51		 push	 ecx
  0042d	6a 65		 push	 101			; 00000065H
  0042f	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _LogonMobile$[ebp]
  00435	52		 push	 edx
  00436	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00439	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0043f	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00442	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00448	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0044a	50		 push	 eax
  0044b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0044e	ff d2		 call	 edx
  00450	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5732 : 
; 5733 : 	return true;

  00453	c6 85 23 ff ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  0045a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00461	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00464	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0046a	8a 85 23 ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnTCPNetwo:

; 5734 : }

  00470	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00473	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0047a	59		 pop	 ecx
  0047b	5f		 pop	 edi
  0047c	5e		 pop	 esi
  0047d	5b		 pop	 ebx
  0047e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00481	33 cd		 xor	 ecx, ebp
  00483	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00488	8b e5		 mov	 esp, ebp
  0048a	5d		 pop	 ebp
  0048b	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 8a 1c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-228]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubLogonMobile
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z
_TEXT	SEGMENT
tv203 = -230						; size = 1
$T2 = -229						; size = 1
$T3 = -228						; size = 1
$T4 = -227						; size = 1
$T5 = -226						; size = 1
$T6 = -225						; size = 1
_LogonUserID$ = -160					; size = 104
_dwClientVersion$7 = -56				; size = 4
_dwFrameVersion$8 = -52					; size = 4
_dwPlazaVersion$9 = -48					; size = 4
_strPassword$ = -44					; size = 4
_pIServerUserItem$ = -40				; size = 4
_pBindParameter$ = -36					; size = 4
_pIBindUserItem$ = -32					; size = 4
_wBindIndex$ = -28					; size = 2
_pLogonUserID$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_dwSocketID$ = 16					; size = 4
?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkSubLogonUserID, COMDAT
; _this$ = ecx

; 5516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 5517 : 	//效验参数
; 5518 : 	ASSERT(wDataSize>=sizeof(CMD_GR_LogonUserID));

  00031	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00035	83 f8 75	 cmp	 eax, 117		; 00000075H
  00038	73 19		 jae	 SHORT $LN18@OnTCPNetwo
  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  00040	83 c1 02	 add	 ecx, 2
  00043	51		 push	 ecx
  00044	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00049	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004e	85 c0		 test	 eax, eax
  00050	74 01		 je	 SHORT $LN18@OnTCPNetwo
  00052	cc		 int	 3
$LN18@OnTCPNetwo:

; 5519 : 	if (wDataSize<sizeof(CMD_GR_LogonUserID)) return false;

  00053	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00057	83 f8 75	 cmp	 eax, 117		; 00000075H
  0005a	73 07		 jae	 SHORT $LN2@OnTCPNetwo
  0005c	32 c0		 xor	 al, al
  0005e	e9 3e 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5520 : 
; 5521 : 	//处理消息
; 5522 : 	CMD_GR_LogonUserID * pLogonUserID=(CMD_GR_LogonUserID *)pData;

  00063	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00066	89 45 e8	 mov	 DWORD PTR _pLogonUserID$[ebp], eax

; 5523 : 	pLogonUserID->szPassword[CountArray(pLogonUserID->szPassword)-1]=0;

  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	c1 e0 05	 shl	 eax, 5
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonUserID$[ebp]
  00074	c6 44 01 10 00	 mov	 BYTE PTR [ecx+eax+16], 0

; 5524 : 	pLogonUserID->szMachineID[CountArray(pLogonUserID->szMachineID)-1]=0;

  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	c1 e0 05	 shl	 eax, 5
  00081	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonUserID$[ebp]
  00084	c6 44 01 52 00	 mov	 BYTE PTR [ecx+eax+82], 0

; 5525 : 
; 5526 : 	//绑定信息
; 5527 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00089	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00091	66 89 45 e4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5528 : 	IServerUserItem * pIBindUserItem=GetBindUserItem(wBindIndex);

  00095	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000a5	ff d0		 call	 eax
  000a7	89 45 e0	 mov	 DWORD PTR _pIBindUserItem$[ebp], eax

; 5529 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  000aa	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  000ae	50		 push	 eax
  000af	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000ba	ff d0		 call	 eax
  000bc	89 45 dc	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 5530 : 
; 5531 : 	//重复判断
; 5532 : 	if ((pBindParameter==NULL)||(pIBindUserItem!=NULL))

  000bf	83 7d dc 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  000c3	74 06		 je	 SHORT $LN4@OnTCPNetwo
  000c5	83 7d e0 00	 cmp	 DWORD PTR _pIBindUserItem$[ebp], 0
  000c9	74 24		 je	 SHORT $LN3@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5533 : 	{ 
; 5534 : 		ASSERT(FALSE);

  000cb	33 c0		 xor	 eax, eax
  000cd	75 19		 jne	 SHORT $LN19@OnTCPNetwo
  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z@4JA
  000d5	83 c1 12	 add	 ecx, 18			; 00000012H
  000d8	51		 push	 ecx
  000d9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000de	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000e3	85 c0		 test	 eax, eax
  000e5	74 01		 je	 SHORT $LN19@OnTCPNetwo
  000e7	cc		 int	 3
$LN19@OnTCPNetwo:

; 5535 : 		return false;

  000e8	32 c0		 xor	 al, al
  000ea	e9 b2 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5536 : 	}
; 5537 : 
; 5538 : 	//密码校验
; 5539 : 	if(((m_pGameServiceOption->wServerKind&SERVER_GENRE_PASSWD)!=0) && (LOWORD(dwSocketID)<INDEX_ANDROID))

  000ef	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000f5	0f b7 51 4a	 movzx	 edx, WORD PTR [ecx+74]
  000f9	83 e2 02	 and	 edx, 2
  000fc	74 48		 je	 SHORT $LN5@OnTCPNetwo
  000fe	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00101	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00106	0f b7 c8	 movzx	 ecx, ax
  00109	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  0010f	7d 35		 jge	 SHORT $LN5@OnTCPNetwo

; 5540 : 	{
; 5541 : 		//密码比较
; 5542 : 		if(lstrcmp(pLogonUserID->szServerPasswd,m_pGameServiceOption->szServerPasswd)!=0)

  00111	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00117	83 c1 70	 add	 ecx, 112		; 00000070H
  0011a	51		 push	 ecx
  0011b	8b 55 e8	 mov	 edx, DWORD PTR _pLogonUserID$[ebp]
  0011e	83 c2 31	 add	 edx, 49			; 00000031H
  00121	52		 push	 edx
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00128	85 c0		 test	 eax, eax
  0012a	74 1a		 je	 SHORT $LN5@OnTCPNetwo

; 5543 : 		{
; 5544 : 			//发送失败
; 5545 : 			SendLogonFailure(TEXT("抱歉，您输入的房间密码不正确，请重新输入！"),0,dwSocketID);

  0012c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0012f	50		 push	 eax
  00130	6a 00		 push	 0
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@OCEOPNCD@?$LB?$KH?G?$LI?$KD?$KM?D?z?J?d?H?k?$LF?D?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G@
  00137	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 5546 : 
; 5547 : 			return true;

  0013f	b0 01		 mov	 al, 1
  00141	e9 5b 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5548 : 		}
; 5549 : 	}
; 5550 : 
; 5551 : 	//房间判断
; 5552 : 	if(pLogonUserID->wKindID != m_pGameServiceOption->wKindID)

  00146	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  00149	0f b7 48 73	 movzx	 ecx, WORD PTR [eax+115]
  0014d	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00150	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00153	0f b7 10	 movzx	 edx, WORD PTR [eax]
  00156	3b ca		 cmp	 ecx, edx
  00158	74 1d		 je	 SHORT $LN7@OnTCPNetwo

; 5553 : 	{
; 5554 : 		//发送失败
; 5555 : 		SendLogonFailure(TEXT("很抱歉，此游戏房间已经关闭了，不允许继续进入！"),LOGON_FAIL_SERVER_INVALIDATION,dwSocketID);

  0015a	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0015d	50		 push	 eax
  0015e	68 c8 00 00 00	 push	 200			; 000000c8H
  00163	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JGONOMBF@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?$LE?K?S?N?O?$LH?$LH?$LP?$LM?d?R?Q?$LO?$KN?$LJ?X?$LB?U?A?K?$KD?$KM?$LC@
  00168	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 5556 : 		return true;

  00170	b0 01		 mov	 al, 1
  00172	e9 2a 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5557 : 	}
; 5558 : 
; 5559 : 	//机器人和真人不许互踢
; 5560 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pLogonUserID->dwUserID);

  00177	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  0017a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0017d	51		 push	 ecx
  0017e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00181	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00187	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0018a	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00190	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00193	ff d2		 call	 edx
  00195	89 45 d8	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5561 : 	if (pIServerUserItem!=NULL)

  00198	83 7d d8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0019c	0f 84 87 00 00
	00		 je	 $LN8@OnTCPNetwo

; 5562 : 	{
; 5563 : 		if((pIServerUserItem->IsAndroidUser() && (pBindParameter->dwClientAddr!=0L))
; 5564 : 			|| (!pIServerUserItem->IsAndroidUser() && (pBindParameter->dwClientAddr==0L)))

  001a2	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001a5	8b 10		 mov	 edx, DWORD PTR [eax]
  001a7	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001aa	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  001b0	ff d0		 call	 eax
  001b2	0f b6 c8	 movzx	 ecx, al
  001b5	85 c9		 test	 ecx, ecx
  001b7	74 09		 je	 SHORT $LN11@OnTCPNetwo
  001b9	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001bc	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001c0	75 20		 jne	 SHORT $LN10@OnTCPNetwo
$LN11@OnTCPNetwo:
  001c2	8b 45 d8	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001c5	8b 10		 mov	 edx, DWORD PTR [eax]
  001c7	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001ca	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  001d0	ff d0		 call	 eax
  001d2	0f b6 c8	 movzx	 ecx, al
  001d5	85 c9		 test	 ecx, ecx
  001d7	75 50		 jne	 SHORT $LN8@OnTCPNetwo
  001d9	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001dc	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001e0	75 47		 jne	 SHORT $LN8@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5565 : 		{
; 5566 : 			SendRoomMessage(dwSocketID, TEXT("该帐号已在此房间游戏，且不允许踢出，请咨询管理员！"), SMT_CHAT|SMT_EJECT|SMT_GLOBAL|SMT_CLOSE_ROOM,(pBindParameter->dwClientAddr==0L));

  001e2	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001e5	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001e9	75 09		 jne	 SHORT $LN20@OnTCPNetwo
  001eb	c6 85 1a ff ff
	ff 01		 mov	 BYTE PTR tv203[ebp], 1
  001f2	eb 07		 jmp	 SHORT $LN21@OnTCPNetwo
$LN20@OnTCPNetwo:
  001f4	c6 85 1a ff ff
	ff 00		 mov	 BYTE PTR tv203[ebp], 0
$LN21@OnTCPNetwo:
  001fb	0f b6 8d 1a ff
	ff ff		 movzx	 ecx, BYTE PTR tv203[ebp]
  00202	51		 push	 ecx
  00203	68 07 01 00 00	 push	 263			; 00000107H
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBGKLFPO@?$LI?C?U?J?$LK?E?R?Q?T?Z?$LE?K?$LH?$LP?$LM?d?S?N?O?$LH?$KD?$KM?G?R?$LC?$LL?T?J?P?m?L@
  0020d	8b 55 10	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00210	52		 push	 edx
  00211	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00214	83 c1 04	 add	 ecx, 4
  00217	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0021a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00220	ff d0		 call	 eax

; 5567 : 			return true;

  00222	b0 01		 mov	 al, 1
  00224	e9 78 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5568 : 		}
; 5569 : 	}
; 5570 : 
; 5571 : 	//密码判断
; 5572 : 	CString strPassword = pLogonUserID->szPassword;

  00229	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  0022c	83 c0 10	 add	 eax, 16			; 00000010H
  0022f	50		 push	 eax
  00230	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00233	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00239	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 5573 : 	strPassword.Trim();

  00240	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Trim@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV12@XZ

; 5574 : 	if(pBindParameter->dwClientAddr!=0L && strPassword.GetLength()==0)

  00249	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0024c	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00250	74 45		 je	 SHORT $LN12@OnTCPNetwo
  00252	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00255	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0025b	85 c0		 test	 eax, eax
  0025d	75 38		 jne	 SHORT $LN12@OnTCPNetwo

; 5575 : 	{
; 5576 : 		//发送失败
; 5577 : 		SendLogonFailure(TEXT("很抱歉，您的登录密码错误，不允许继续进入！"),LOGON_FAIL_SERVER_INVALIDATION,dwSocketID);

  0025f	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00262	50		 push	 eax
  00263	68 c8 00 00 00	 push	 200			; 000000c8H
  00268	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KDGAPOGL@?$LK?$NM?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LF?G?B?$LM?C?$NM?B?k?$LE?m?N?s?$KD?$KM?$LC?$LL?T?J?P@
  0026d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00270	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 5578 : 		return true;

  00275	c6 85 1f ff ff
	ff 01		 mov	 BYTE PTR $T6[ebp], 1
  0027c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00283	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00286	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0028c	8a 85 1f ff ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  00292	e9 0a 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN12@OnTCPNetwo:

; 5579 : 	}
; 5580 : 
; 5581 : 	//版本信息
; 5582 : 	pBindParameter->cbClientKind=CLIENT_KIND_COMPUTER;

  00297	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0029a	c6 40 18 03	 mov	 BYTE PTR [eax+24], 3

; 5583 : 	pBindParameter->dwPlazaVersion=pLogonUserID->dwPlazaVersion;

  0029e	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  002a1	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonUserID$[ebp]
  002a4	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a6	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 5584 : 	pBindParameter->dwFrameVersion=pLogonUserID->dwFrameVersion;

  002a9	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  002ac	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonUserID$[ebp]
  002af	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  002b2	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 5585 : 	pBindParameter->dwProcessVersion=pLogonUserID->dwProcessVersion;

  002b5	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  002b8	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonUserID$[ebp]
  002bb	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  002be	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 5586 : 
; 5587 : 	//机器判断
; 5588 : 	if(LOWORD(dwSocketID) < INDEX_ANDROID)

  002c1	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002c4	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  002c9	0f b7 c8	 movzx	 ecx, ax
  002cc	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  002d2	7d 5b		 jge	 SHORT $LN13@OnTCPNetwo

; 5589 : 	{
; 5590 : 		//大厅版本
; 5591 : 		DWORD dwPlazaVersion=pLogonUserID->dwPlazaVersion;

  002d4	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  002d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d9	89 4d d0	 mov	 DWORD PTR _dwPlazaVersion$9[ebp], ecx

; 5592 : 		DWORD dwFrameVersion=pLogonUserID->dwFrameVersion;

  002dc	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  002df	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002e2	89 4d cc	 mov	 DWORD PTR _dwFrameVersion$8[ebp], ecx

; 5593 : 		DWORD dwClientVersion=pLogonUserID->dwProcessVersion;

  002e5	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  002e8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002eb	89 4d c8	 mov	 DWORD PTR _dwClientVersion$7[ebp], ecx

; 5594 : 		if (PerformCheckVersion(dwPlazaVersion,dwFrameVersion,dwClientVersion,dwSocketID)==false) return true;

  002ee	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002f1	50		 push	 eax
  002f2	8b 4d c8	 mov	 ecx, DWORD PTR _dwClientVersion$7[ebp]
  002f5	51		 push	 ecx
  002f6	8b 55 cc	 mov	 edx, DWORD PTR _dwFrameVersion$8[ebp]
  002f9	52		 push	 edx
  002fa	8b 45 d0	 mov	 eax, DWORD PTR _dwPlazaVersion$9[ebp]
  002fd	50		 push	 eax
  002fe	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00301	e8 00 00 00 00	 call	 ?PerformCheckVersion@CAttemperEngineSink@@IAE_NKKKK@Z ; CAttemperEngineSink::PerformCheckVersion
  00306	0f b6 c8	 movzx	 ecx, al
  00309	85 c9		 test	 ecx, ecx
  0030b	75 22		 jne	 SHORT $LN13@OnTCPNetwo
  0030d	c6 85 1e ff ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  00314	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0031b	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  0031e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00324	8a 85 1e ff ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  0032a	e9 72 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 5595 : 	}
; 5596 : 
; 5597 : 	//切换判断
; 5598 : 	if((pIServerUserItem!=NULL)&&(pIServerUserItem->ContrastLogonPass(pLogonUserID->szPassword)==true))

  0032f	83 7d d8 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00333	74 5f		 je	 SHORT $LN15@OnTCPNetwo
  00335	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  00338	83 c0 10	 add	 eax, 16			; 00000010H
  0033b	50		 push	 eax
  0033c	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0033f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00341	8b 4d d8	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00344	8b 82 b4 00 00
	00		 mov	 eax, DWORD PTR [edx+180]
  0034a	ff d0		 call	 eax
  0034c	0f b6 c8	 movzx	 ecx, al
  0034f	83 f9 01	 cmp	 ecx, 1
  00352	75 40		 jne	 SHORT $LN15@OnTCPNetwo

; 5599 : 	{
; 5600 : 		SwitchUserItemConnect(pIServerUserItem,pLogonUserID->szMachineID,wBindIndex);

  00354	6a 00		 push	 0
  00356	6a 00		 push	 0
  00358	6a 00		 push	 0
  0035a	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0035e	50		 push	 eax
  0035f	8b 4d e8	 mov	 ecx, DWORD PTR _pLogonUserID$[ebp]
  00362	83 c1 52	 add	 ecx, 82			; 00000052H
  00365	51		 push	 ecx
  00366	8b 55 d8	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00369	52		 push	 edx
  0036a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0036d	e8 00 00 00 00	 call	 ?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z ; CAttemperEngineSink::SwitchUserItemConnect

; 5601 : 		return true;

  00372	c6 85 1d ff ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  00379	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00380	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00383	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00389	8a 85 1d ff ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  0038f	e9 0d 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 5602 : 	}
; 5603 : 
; 5604 : 	//比赛效验
; 5605 : 	if(m_pIMatchServiceManager!=NULL&&m_pIMatchServiceManager->OnEventEnterMatch(dwSocketID, pData, pBindParameter->dwClientAddr,false))

  00394	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00397	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  0039e	74 53		 je	 SHORT $LN16@OnTCPNetwo
  003a0	6a 00		 push	 0
  003a2	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  003a5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003a8	51		 push	 ecx
  003a9	8b 55 08	 mov	 edx, DWORD PTR _pData$[ebp]
  003ac	52		 push	 edx
  003ad	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  003b0	50		 push	 eax
  003b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003b4	8b 91 c4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147396]
  003ba	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003bd	8b 12		 mov	 edx, DWORD PTR [edx]
  003bf	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  003c5	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  003c8	ff d0		 call	 eax
  003ca	0f b6 c8	 movzx	 ecx, al
  003cd	85 c9		 test	 ecx, ecx
  003cf	74 22		 je	 SHORT $LN16@OnTCPNetwo

; 5606 : 	{
; 5607 : 		return true;

  003d1	c6 85 1c ff ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  003d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003df	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  003e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  003e8	8a 85 1c ff ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  003ee	e9 ae 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN16@OnTCPNetwo:

; 5608 : 	}
; 5609 : 
; 5610 : 	//变量定义
; 5611 : 	DBR_GR_LogonUserID LogonUserID;
; 5612 : 	ZeroMemory(&LogonUserID,sizeof(LogonUserID));

  003f3	6a 68		 push	 104			; 00000068H
  003f5	6a 00		 push	 0
  003f7	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _LogonUserID$[ebp]
  003fd	50		 push	 eax
  003fe	e8 00 00 00 00	 call	 _memset
  00403	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5613 : 
; 5614 : 	//构造数据
; 5615 : 	LogonUserID.dwUserID=pLogonUserID->dwUserID;

  00406	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  00409	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0040c	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _LogonUserID$[ebp], ecx

; 5616 : 	LogonUserID.dwMatchID=m_pGameMatchOption->dwMatchID;

  00412	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00415	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00418	8b 11		 mov	 edx, DWORD PTR [ecx]
  0041a	89 55 88	 mov	 DWORD PTR _LogonUserID$[ebp+40], edx

; 5617 : 	LogonUserID.dwClientAddr=pBindParameter->dwClientAddr;

  0041d	8b 45 dc	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00420	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00423	89 4d 9c	 mov	 DWORD PTR _LogonUserID$[ebp+60], ecx

; 5618 : 	lstrcpyn(LogonUserID.szPassword,pLogonUserID->szPassword,CountArray(LogonUserID.szPassword));

  00426	6a 21		 push	 33			; 00000021H
  00428	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  0042b	83 c0 10	 add	 eax, 16			; 00000010H
  0042e	50		 push	 eax
  0042f	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _LogonUserID$[ebp+4]
  00435	51		 push	 ecx
  00436	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5619 : 	lstrcpyn(LogonUserID.szMachineID,pLogonUserID->szMachineID,CountArray(LogonUserID.szMachineID));

  0043c	6a 21		 push	 33			; 00000021H
  0043e	8b 45 e8	 mov	 eax, DWORD PTR _pLogonUserID$[ebp]
  00441	83 c0 52	 add	 eax, 82			; 00000052H
  00444	50		 push	 eax
  00445	8d 4d a0	 lea	 ecx, DWORD PTR _LogonUserID$[ebp+64]
  00448	51		 push	 ecx
  00449	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 5620 : 
; 5621 : 	//投递请求
; 5622 : 	m_pIDBCorrespondManager->PostDataBaseRequest(LogonUserID.dwUserID,DBR_GR_LOGON_USERID,dwSocketID,&LogonUserID,sizeof(LogonUserID));

  0044f	6a 00		 push	 0
  00451	6a 68		 push	 104			; 00000068H
  00453	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _LogonUserID$[ebp]
  00459	50		 push	 eax
  0045a	8b 4d 10	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0045d	51		 push	 ecx
  0045e	6a 64		 push	 100			; 00000064H
  00460	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR _LogonUserID$[ebp]
  00466	52		 push	 edx
  00467	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0046a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00470	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00473	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00479	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0047b	50		 push	 eax
  0047c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0047f	ff d2		 call	 edx
  00481	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5623 : 
; 5624 : 	return true;

  00484	c6 85 1b ff ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  0048b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00492	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00495	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0049b	8a 85 1b ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnTCPNetwo:

; 5625 : }

  004a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004ab	59		 pop	 ecx
  004ac	5f		 pop	 edi
  004ad	5e		 pop	 esi
  004ae	5b		 pop	 ebx
  004af	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004b2	33 cd		 xor	 ecx, ebp
  004b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004b9	8b e5		 mov	 esp, ebp
  004bb	5d		 pop	 ebp
  004bc	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _strPassword$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 8a 14 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-236]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkSubLogonUserID
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainPersonalTable, COMDAT
; _this$ = ecx

; 5454 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5455 : 	//获取信息
; 5456 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5457 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5458 : 
; 5459 : 	//用户效验
; 5460 : 	ASSERT(pIServerUserItem!=NULL);

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00031	75 18		 jne	 SHORT $LN5@OnTCPNetwo
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00038	83 c0 06	 add	 eax, 6
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0004a	cc		 int	 3
$LN5@OnTCPNetwo:

; 5461 : 	if (pIServerUserItem==NULL) return false;

  0004b	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0004f	75 04		 jne	 SHORT $LN2@OnTCPNetwo
  00051	32 c0		 xor	 al, al
  00053	eb 64		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5462 : 
; 5463 : 	//效验接口
; 5464 : 	ASSERT(m_pIPersonalRoomServiceManager!=NULL);

  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  0005f	75 19		 jne	 SHORT $LN6@OnTCPNetwo
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00067	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0006a	51		 push	 ecx
  0006b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00070	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00075	85 c0		 test	 eax, eax
  00077	74 01		 je	 SHORT $LN6@OnTCPNetwo
  00079	cc		 int	 3
$LN6@OnTCPNetwo:

; 5465 : 	if (m_pIPersonalRoomServiceManager==NULL) return false;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  00084	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00086	32 c0		 xor	 al, al
  00088	eb 2f		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5466 : 
; 5467 : 	//消息处理
; 5468 : 	return m_pIPersonalRoomServiceManager->OnEventSocketPersonalRoom(wSubCmdID,pData,wDataSize,pIServerUserItem,dwSocketID);

  0008a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00091	51		 push	 ecx
  00092	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  00096	52		 push	 edx
  00097	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009a	50		 push	 eax
  0009b	0f b7 4d 08	 movzx	 ecx, WORD PTR _wSubCmdID$[ebp]
  0009f	51		 push	 ecx
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	8b 82 c8 3f 02
	00		 mov	 eax, DWORD PTR [edx+147400]
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	8b 10		 mov	 edx, DWORD PTR [eax]
  000ae	8b 89 c8 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147400]
  000b4	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000b7	ff d0		 call	 eax
$LN1@OnTCPNetwo:

; 5469 : 
; 5470 : }

  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5b		 pop	 ebx
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainPersonalTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainCheckIn@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainCheckIn@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainCheckIn, COMDAT
; _this$ = ecx

; 5372 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5373 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d b8 dc 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 220 ; 000000dcH
  0001a	74 0b		 je	 SHORT $LN4@OnTCPNetwo
  0001c	81 7d b8 de 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 222 ; 000000deH
  00023	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00025	eb 2e		 jmp	 SHORT $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5374 : 	{
; 5375 : 	case SUB_GR_CHECKIN_QUERY:
; 5376 : 		{
; 5377 : 			return OnTCPNetworkSubCheckInQueryRequest(pData,wDataSize,dwSocketID);

  00027	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0002a	50		 push	 eax
  0002b	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0002f	51		 push	 ecx
  00030	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?OnTCPNetworkSubCheckInQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubCheckInQueryRequest
  0003c	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5378 : 		}
; 5379 : 	case SUB_GR_CHECKIN_DONE:
; 5380 : 		{
; 5381 : 			return OnTCPNetworkSubCheckInDoneRequest(pData,wDataSize,dwSocketID);

  0003e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	50		 push	 eax
  00042	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00046	51		 push	 ecx
  00047	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0004a	52		 push	 edx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?OnTCPNetworkSubCheckInDoneRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubCheckInDoneRequest
  00053	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5382 : 		}
; 5383 : 	}
; 5384 : 	return false;

  00055	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5385 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainCheckIn@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainCheckIn
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainMatch, COMDAT
; _this$ = ecx

; 5435 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5436 : 	//获取信息
; 5437 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5438 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5439 : 
; 5440 : 	//用户效验
; 5441 : 	ASSERT(pIServerUserItem!=NULL);

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00031	75 18		 jne	 SHORT $LN5@OnTCPNetwo
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00038	83 c0 06	 add	 eax, 6
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN5@OnTCPNetwo
  0004a	cc		 int	 3
$LN5@OnTCPNetwo:

; 5442 : 	if (pIServerUserItem==NULL) return false;

  0004b	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0004f	75 04		 jne	 SHORT $LN2@OnTCPNetwo
  00051	32 c0		 xor	 al, al
  00053	eb 64		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5443 : 
; 5444 : 	//效验接口
; 5445 : 	ASSERT(m_pIMatchServiceManager!=NULL);

  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  0005f	75 19		 jne	 SHORT $LN6@OnTCPNetwo
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00067	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0006a	51		 push	 ecx
  0006b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00070	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00075	85 c0		 test	 eax, eax
  00077	74 01		 je	 SHORT $LN6@OnTCPNetwo
  00079	cc		 int	 3
$LN6@OnTCPNetwo:

; 5446 : 	if (m_pIMatchServiceManager==NULL) return false;

  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00084	75 04		 jne	 SHORT $LN3@OnTCPNetwo
  00086	32 c0		 xor	 al, al
  00088	eb 2f		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5447 : 
; 5448 : 	//消息处理
; 5449 : 	return m_pIMatchServiceManager->OnEventSocketMatch(wSubCmdID,pData,wDataSize,pIServerUserItem,dwSocketID);

  0008a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00091	51		 push	 ecx
  00092	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  00096	52		 push	 edx
  00097	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009a	50		 push	 eax
  0009b	0f b7 4d 08	 movzx	 ecx, WORD PTR _wSubCmdID$[ebp]
  0009f	51		 push	 ecx
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	8b 82 c4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147396]
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	8b 10		 mov	 edx, DWORD PTR [eax]
  000ae	8b 89 c4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147396]
  000b4	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000b7	ff d0		 call	 eax
$LN1@OnTCPNetwo:

; 5450 : }

  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5b		 pop	 ebx
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainMatch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainManage@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainManage@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainManage, COMDAT
; _this$ = ecx

; 5389 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5390 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00016	83 e9 01	 sub	 ecx, 1
  00019	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0001c	83 7d b8 0c	 cmp	 DWORD PTR tv65[ebp], 12	; 0000000cH
  00020	0f 87 e2 00 00
	00		 ja	 $LN2@OnTCPNetwo
  00026	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00029	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN14@OnTCPNetwo[edx*4]
$LN4@OnTCPNetwo:

; 5391 : 	{
; 5392 : 	case SUB_GR_QUERY_OPTION:		//查询设置
; 5393 : 		{
; 5394 : 			return OnTCPNetworkSubQueryOption(pData,wDataSize,dwSocketID);

  00030	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00033	50		 push	 eax
  00034	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0003c	52		 push	 edx
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?OnTCPNetworkSubQueryOption@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryOption
  00045	e9 c0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5395 : 		}
; 5396 : 	case SUB_GR_OPTION_SERVER:		//房间设置
; 5397 : 		{
; 5398 : 			return OnTCPNetworkSubOptionServer(pData,wDataSize,dwSocketID);

  0004a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0004d	50		 push	 eax
  0004e	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00056	52		 push	 edx
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?OnTCPNetworkSubOptionServer@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubOptionServer
  0005f	e9 a6 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5399 : 		}
; 5400 : 	case SUB_GR_KILL_USER:          //踢出用户
; 5401 : 		{
; 5402 : 			return OnTCPNetworkSubManagerKickUser(pData,wDataSize,dwSocketID);

  00064	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00067	50		 push	 eax
  00068	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0006c	51		 push	 ecx
  0006d	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00070	52		 push	 edx
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	e8 00 00 00 00	 call	 ?OnTCPNetworkSubManagerKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubManagerKickUser
  00079	e9 8c 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5403 : 		}
; 5404 : 	case SUB_GR_LIMIT_USER_CHAT:	//限制聊天
; 5405 : 		{
; 5406 : 			return OnTCPNetworkSubLimitUserChat(pData,wDataSize,dwSocketID);

  0007e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00081	50		 push	 eax
  00082	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00086	51		 push	 ecx
  00087	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0008a	52		 push	 edx
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?OnTCPNetworkSubLimitUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLimitUserChat
  00093	eb 75		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5407 : 		}
; 5408 : 	case SUB_GR_KICK_ALL_USER:		//踢出用户
; 5409 : 		{
; 5410 : 			return OnTCPNetworkSubKickAllUser(pData,wDataSize,dwSocketID);

  00095	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00098	50		 push	 eax
  00099	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0009d	51		 push	 ecx
  0009e	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000a1	52		 push	 edx
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	e8 00 00 00 00	 call	 ?OnTCPNetworkSubKickAllUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubKickAllUser
  000aa	eb 5e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5411 : 		}
; 5412 : 	case SUB_GR_SEND_MESSAGE:		//发布消息
; 5413 : 		{
; 5414 : 			return OnTCPNetworkSubSendMessage(pData,wDataSize,dwSocketID);

  000ac	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000af	50		 push	 eax
  000b0	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b4	51		 push	 ecx
  000b5	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000b8	52		 push	 edx
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ?OnTCPNetworkSubSendMessage@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubSendMessage
  000c1	eb 47		 jmp	 SHORT $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5415 : 		}
; 5416 : 	case SUB_GR_DISMISSGAME:        //解散游戏
; 5417 : 		{
; 5418 : 			return OnTCPNetworkSubDismissGame(pData,wDataSize,dwSocketID);

  000c3	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000c6	50		 push	 eax
  000c7	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000cb	51		 push	 ecx
  000cc	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000cf	52		 push	 edx
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	e8 00 00 00 00	 call	 ?OnTCPNetworkSubDismissGame@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubDismissGame
  000d8	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN11@OnTCPNetwo:

; 5419 : 		}
; 5420 : 	case SUB_GR_SEND_WARNING:		//警告用户
; 5421 : 		{
; 5422 : 			return OnTCPNetworkSubWarningUser(pData,wDataSize,dwSocketID);

  000da	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000dd	50		 push	 eax
  000de	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000e2	51		 push	 ecx
  000e3	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000e6	52		 push	 edx
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?OnTCPNetworkSubWarningUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubWarningUser
  000ef	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN12@OnTCPNetwo:

; 5423 : 		}
; 5424 : 	case SUB_GR_ROOMCHEAT:			//作弊命令
; 5425 : 		{
; 5426 : 			return OnTCPNetworkSubRoomCheat(pData, wDataSize, dwSocketID);

  000f1	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000f4	50		 push	 eax
  000f5	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000f9	51		 push	 ecx
  000fa	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000fd	52		 push	 edx
  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	e8 00 00 00 00	 call	 ?OnTCPNetworkSubRoomCheat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubRoomCheat
  00106	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5427 : 		}
; 5428 : 	}
; 5429 : 
; 5430 : 	return false;

  00108	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5431 : }

  0010a	5f		 pop	 edi
  0010b	5e		 pop	 esi
  0010c	5b		 pop	 ebx
  0010d	8b e5		 mov	 esp, ebp
  0010f	5d		 pop	 ebp
  00110	c2 10 00	 ret	 16			; 00000010H
  00113	90		 npad	 1
$LN14@OnTCPNetwo:
  00114	00 00 00 00	 DD	 $LN11@OnTCPNetwo
  00118	00 00 00 00	 DD	 $LN9@OnTCPNetwo
  0011c	00 00 00 00	 DD	 $LN2@OnTCPNetwo
  00120	00 00 00 00	 DD	 $LN6@OnTCPNetwo
  00124	00 00 00 00	 DD	 $LN2@OnTCPNetwo
  00128	00 00 00 00	 DD	 $LN2@OnTCPNetwo
  0012c	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  00130	00 00 00 00	 DD	 $LN5@OnTCPNetwo
  00134	00 00 00 00	 DD	 $LN2@OnTCPNetwo
  00138	00 00 00 00	 DD	 $LN7@OnTCPNetwo
  0013c	00 00 00 00	 DD	 $LN8@OnTCPNetwo
  00140	00 00 00 00	 DD	 $LN10@OnTCPNetwo
  00144	00 00 00 00	 DD	 $LN12@OnTCPNetwo
?OnTCPNetworkMainManage@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainManage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainProperty@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainProperty@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainProperty, COMDAT
; _this$ = ecx

; 5335 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5336 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00016	83 e9 02	 sub	 ecx, 2
  00019	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0001c	81 7d b8 cb 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 203 ; 000000cbH
  00023	0f 87 b5 00 00
	00		 ja	 $LN2@OnTCPNetwo
  00029	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  0002c	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN12@OnTCPNetwo[edx]
  00033	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN13@OnTCPNetwo[eax*4]
$LN4@OnTCPNetwo:

; 5337 : 	{
; 5338 : 	case SUB_GR_GAME_PROPERTY_BUY:	//购买道具
; 5339 : 		{
; 5340 : 			return OnTCPNetworkSubGamePropertyBuy(pData,wDataSize,dwSocketID);

  0003a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0003d	50		 push	 eax
  0003e	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00042	51		 push	 ecx
  00043	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00046	52		 push	 edx
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?OnTCPNetworkSubGamePropertyBuy@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGamePropertyBuy
  0004f	e9 8c 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5341 : 		}
; 5342 : 	case SUB_GR_PROPERTY_USE:		//道具使用
; 5343 : 		{
; 5344 : 			return OnTCPNetworkSubPropertyUse(pData,wDataSize,dwSocketID);

  00054	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00057	50		 push	 eax
  00058	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00060	52		 push	 edx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?OnTCPNetworkSubPropertyUse@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPropertyUse
  00069	eb 75		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5345 : 		}
; 5346 : 	case SUB_GR_QUERY_SEND_PRESENT:	//查询赠送
; 5347 : 		{
; 5348 : 			return	OnTCPNetworkSubQuerySendPresent(pData,wDataSize,dwSocketID);

  0006b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0006e	50		 push	 eax
  0006f	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00073	51		 push	 ecx
  00074	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00077	52		 push	 edx
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?OnTCPNetworkSubQuerySendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQuerySendPresent
  00080	eb 5e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5349 : 		}
; 5350 : 	case SUB_GR_PROPERTY_PRESENT:	//赠送道具
; 5351 : 		{
; 5352 : 			return OnTCPNetworkSubPropertyPresent(pData,wDataSize,dwSocketID);

  00082	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00085	50		 push	 eax
  00086	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0008a	51		 push	 ecx
  0008b	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0008e	52		 push	 edx
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?OnTCPNetworkSubPropertyPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPropertyPresent
  00097	eb 47		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5353 : 		}
; 5354 : 	case SUB_GR_GET_SEND_PRESENT:	//获取赠送
; 5355 : 		{
; 5356 : 			return OnTCPNetworkSubGetSendPresent(pData,wDataSize,dwSocketID);

  00099	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0009c	50		 push	 eax
  0009d	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000a5	52		 push	 edx
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?OnTCPNetworkSubGetSendPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGetSendPresent
  000ae	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5357 : 		}
; 5358 : 	case SUB_GR_PROPERTY_BACKPACK:	//背包道具
; 5359 : 		{
; 5360 : 			return OnTCPNetworkSubPropertyBackpack(pData,wDataSize,dwSocketID);

  000b0	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000b3	50		 push	 eax
  000b4	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b8	51		 push	 ecx
  000b9	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000bc	52		 push	 edx
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?OnTCPNetworkSubPropertyBackpack@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPropertyBackpack
  000c5	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5361 : 		}
; 5362 : 	case SUB_GR_PROPERTY_TRUMPET:   //喇叭道具
; 5363 : 		{
; 5364 : 			return OnTCPNetwordSubSendTrumpet(pData,wDataSize,dwSocketID);

  000c7	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000ca	50		 push	 eax
  000cb	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000cf	51		 push	 ecx
  000d0	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000d3	52		 push	 edx
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?OnTCPNetwordSubSendTrumpet@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetwordSubSendTrumpet
  000dc	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5365 : 		}
; 5366 : 	}
; 5367 : 	return false;

  000de	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5368 : }

  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 10 00	 ret	 16			; 00000010H
  000e9	0f 1f 00	 npad	 3
$LN13@OnTCPNetwo:
  000ec	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  000f0	00 00 00 00	 DD	 $LN9@OnTCPNetwo
  000f4	00 00 00 00	 DD	 $LN5@OnTCPNetwo
  000f8	00 00 00 00	 DD	 $LN6@OnTCPNetwo
  000fc	00 00 00 00	 DD	 $LN7@OnTCPNetwo
  00100	00 00 00 00	 DD	 $LN8@OnTCPNetwo
  00104	00 00 00 00	 DD	 $LN10@OnTCPNetwo
  00108	00 00 00 00	 DD	 $LN2@OnTCPNetwo
$LN12@OnTCPNetwo:
  0010c	00		 DB	 0
  0010d	01		 DB	 1
  0010e	02		 DB	 2
  0010f	03		 DB	 3
  00110	04		 DB	 4
  00111	05		 DB	 5
  00112	07		 DB	 7
  00113	07		 DB	 7
  00114	07		 DB	 7
  00115	07		 DB	 7
  00116	07		 DB	 7
  00117	07		 DB	 7
  00118	07		 DB	 7
  00119	07		 DB	 7
  0011a	07		 DB	 7
  0011b	07		 DB	 7
  0011c	07		 DB	 7
  0011d	07		 DB	 7
  0011e	07		 DB	 7
  0011f	07		 DB	 7
  00120	07		 DB	 7
  00121	07		 DB	 7
  00122	07		 DB	 7
  00123	07		 DB	 7
  00124	07		 DB	 7
  00125	07		 DB	 7
  00126	07		 DB	 7
  00127	07		 DB	 7
  00128	07		 DB	 7
  00129	07		 DB	 7
  0012a	07		 DB	 7
  0012b	07		 DB	 7
  0012c	07		 DB	 7
  0012d	07		 DB	 7
  0012e	07		 DB	 7
  0012f	07		 DB	 7
  00130	07		 DB	 7
  00131	07		 DB	 7
  00132	07		 DB	 7
  00133	07		 DB	 7
  00134	07		 DB	 7
  00135	07		 DB	 7
  00136	07		 DB	 7
  00137	07		 DB	 7
  00138	07		 DB	 7
  00139	07		 DB	 7
  0013a	07		 DB	 7
  0013b	07		 DB	 7
  0013c	07		 DB	 7
  0013d	07		 DB	 7
  0013e	07		 DB	 7
  0013f	07		 DB	 7
  00140	07		 DB	 7
  00141	07		 DB	 7
  00142	07		 DB	 7
  00143	07		 DB	 7
  00144	07		 DB	 7
  00145	07		 DB	 7
  00146	07		 DB	 7
  00147	07		 DB	 7
  00148	07		 DB	 7
  00149	07		 DB	 7
  0014a	07		 DB	 7
  0014b	07		 DB	 7
  0014c	07		 DB	 7
  0014d	07		 DB	 7
  0014e	07		 DB	 7
  0014f	07		 DB	 7
  00150	07		 DB	 7
  00151	07		 DB	 7
  00152	07		 DB	 7
  00153	07		 DB	 7
  00154	07		 DB	 7
  00155	07		 DB	 7
  00156	07		 DB	 7
  00157	07		 DB	 7
  00158	07		 DB	 7
  00159	07		 DB	 7
  0015a	07		 DB	 7
  0015b	07		 DB	 7
  0015c	07		 DB	 7
  0015d	07		 DB	 7
  0015e	07		 DB	 7
  0015f	07		 DB	 7
  00160	07		 DB	 7
  00161	07		 DB	 7
  00162	07		 DB	 7
  00163	07		 DB	 7
  00164	07		 DB	 7
  00165	07		 DB	 7
  00166	07		 DB	 7
  00167	07		 DB	 7
  00168	07		 DB	 7
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	07		 DB	 7
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	07		 DB	 7
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	07		 DB	 7
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	07		 DB	 7
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	07		 DB	 7
  00183	07		 DB	 7
  00184	07		 DB	 7
  00185	07		 DB	 7
  00186	07		 DB	 7
  00187	07		 DB	 7
  00188	07		 DB	 7
  00189	07		 DB	 7
  0018a	07		 DB	 7
  0018b	07		 DB	 7
  0018c	07		 DB	 7
  0018d	07		 DB	 7
  0018e	07		 DB	 7
  0018f	07		 DB	 7
  00190	07		 DB	 7
  00191	07		 DB	 7
  00192	07		 DB	 7
  00193	07		 DB	 7
  00194	07		 DB	 7
  00195	07		 DB	 7
  00196	07		 DB	 7
  00197	07		 DB	 7
  00198	07		 DB	 7
  00199	07		 DB	 7
  0019a	07		 DB	 7
  0019b	07		 DB	 7
  0019c	07		 DB	 7
  0019d	07		 DB	 7
  0019e	07		 DB	 7
  0019f	07		 DB	 7
  001a0	07		 DB	 7
  001a1	07		 DB	 7
  001a2	07		 DB	 7
  001a3	07		 DB	 7
  001a4	07		 DB	 7
  001a5	07		 DB	 7
  001a6	07		 DB	 7
  001a7	07		 DB	 7
  001a8	07		 DB	 7
  001a9	07		 DB	 7
  001aa	07		 DB	 7
  001ab	07		 DB	 7
  001ac	07		 DB	 7
  001ad	07		 DB	 7
  001ae	07		 DB	 7
  001af	07		 DB	 7
  001b0	07		 DB	 7
  001b1	07		 DB	 7
  001b2	07		 DB	 7
  001b3	07		 DB	 7
  001b4	07		 DB	 7
  001b5	07		 DB	 7
  001b6	07		 DB	 7
  001b7	07		 DB	 7
  001b8	07		 DB	 7
  001b9	07		 DB	 7
  001ba	07		 DB	 7
  001bb	07		 DB	 7
  001bc	07		 DB	 7
  001bd	07		 DB	 7
  001be	07		 DB	 7
  001bf	07		 DB	 7
  001c0	07		 DB	 7
  001c1	07		 DB	 7
  001c2	07		 DB	 7
  001c3	07		 DB	 7
  001c4	07		 DB	 7
  001c5	07		 DB	 7
  001c6	07		 DB	 7
  001c7	07		 DB	 7
  001c8	07		 DB	 7
  001c9	07		 DB	 7
  001ca	07		 DB	 7
  001cb	07		 DB	 7
  001cc	07		 DB	 7
  001cd	07		 DB	 7
  001ce	07		 DB	 7
  001cf	07		 DB	 7
  001d0	07		 DB	 7
  001d1	07		 DB	 7
  001d2	07		 DB	 7
  001d3	07		 DB	 7
  001d4	07		 DB	 7
  001d5	07		 DB	 7
  001d6	07		 DB	 7
  001d7	06		 DB	 6
?OnTCPNetworkMainProperty@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainProperty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainMember@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainMember@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainMember, COMDAT
; _this$ = ecx

; 5311 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5312 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d b8 55 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 341 ; 00000155H
  0001a	74 14		 je	 SHORT $LN4@OnTCPNetwo
  0001c	81 7d b8 56 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 342 ; 00000156H
  00023	74 22		 je	 SHORT $LN5@OnTCPNetwo
  00025	81 7d b8 57 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 343 ; 00000157H
  0002c	74 30		 je	 SHORT $LN6@OnTCPNetwo
  0002e	eb 45		 jmp	 SHORT $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5313 : 	{
; 5314 : 	case SUB_GR_MEMBER_QUERY_INFO:		//会员查询
; 5315 : 		{
; 5316 : 			return OnTCPNetworkSubMemberQueryInfo(pData,wDataSize,dwSocketID);

  00030	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00033	50		 push	 eax
  00034	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0003c	52		 push	 edx
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?OnTCPNetworkSubMemberQueryInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberQueryInfo
  00045	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5317 : 		}
; 5318 : 	case SUB_GR_MEMBER_DAY_PRESENT:		//会员送金
; 5319 : 		{
; 5320 : 			return OnTCPNetworkSubMemberDayPresent(pData,wDataSize,dwSocketID);

  00047	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0004a	50		 push	 eax
  0004b	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0004f	51		 push	 ecx
  00050	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00053	52		 push	 edx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?OnTCPNetworkSubMemberDayPresent@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberDayPresent
  0005c	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5321 : 		}
; 5322 : 	case SUB_GR_MEMBER_DAY_GIFT:		//会员礼包
; 5323 : 		{
; 5324 : 			return OnTCPNetworkSubMemberDayGift(pData,wDataSize,dwSocketID);

  0005e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00061	50		 push	 eax
  00062	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00066	51		 push	 ecx
  00067	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0006a	52		 push	 edx
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?OnTCPNetworkSubMemberDayGift@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberDayGift
  00073	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5325 : 		}
; 5326 : 
; 5327 : 	}
; 5328 : 
; 5329 : 	return false;

  00075	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5330 : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainMember@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainMember
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainExchange@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainExchange@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainExchange, COMDAT
; _this$ = ecx

; 5267 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5268 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00016	81 e9 90 01 00
	00		 sub	 ecx, 400		; 00000190H
  0001c	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0001f	83 7d b8 05	 cmp	 DWORD PTR tv65[ebp], 5
  00023	77 66		 ja	 SHORT $LN2@OnTCPNetwo
  00025	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00028	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnTCPNetwo[edx*4]
$LN4@OnTCPNetwo:

; 5269 : 	{
; 5270 : 	case SUB_GR_EXCHANGE_LOAD_INFO:		//查询信息
; 5271 : 		{
; 5272 : 			return OnTCPNetworkSubQueryExchangeInfo(pData,wDataSize,dwSocketID);

  0002f	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00032	50		 push	 eax
  00033	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0003b	52		 push	 edx
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?OnTCPNetworkSubQueryExchangeInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryExchangeInfo
  00044	eb 47		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5273 : 		}
; 5274 : 	case SUB_GR_PURCHASE_MEMBER:		//购买会员
; 5275 : 		{
; 5276 : 			return OnTCPNetworkSubPurchaseMember(pData,wDataSize,dwSocketID);

  00046	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00049	50		 push	 eax
  0004a	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00052	52		 push	 edx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?OnTCPNetworkSubPurchaseMember@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubPurchaseMember
  0005b	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5277 : 		}
; 5278 : 	case SUB_GR_EXCHANGE_SCORE_BYINGOT:	//兑换游戏币
; 5279 : 		{
; 5280 : 			return OnTCPNetworkSubExchangeScoreByIngot(pData,wDataSize,dwSocketID);

  0005d	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00060	50		 push	 eax
  00061	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00065	51		 push	 ecx
  00066	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00069	52		 push	 edx
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?OnTCPNetworkSubExchangeScoreByIngot@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByIngot
  00072	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5281 : 		}
; 5282 : 	case SUB_GR_EXCHANGE_SCORE_BYBEANS:	//兑换游戏币
; 5283 : 		{
; 5284 : 			return OnTCPNetworkSubExchangeScoreByBeans(pData,wDataSize,dwSocketID);

  00074	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00077	50		 push	 eax
  00078	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0007c	51		 push	 ecx
  0007d	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00080	52		 push	 edx
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?OnTCPNetworkSubExchangeScoreByBeans@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubExchangeScoreByBeans
  00089	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5285 : 		}
; 5286 : 	}
; 5287 : 
; 5288 : 	return false;

  0008b	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5289 : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 10 00	 ret	 16			; 00000010H
  00096	66 90		 npad	 2
$LN9@OnTCPNetwo:
  00098	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  0009c	00 00 00 00	 DD	 $LN2@OnTCPNetwo
  000a0	00 00 00 00	 DD	 $LN5@OnTCPNetwo
  000a4	00 00 00 00	 DD	 $LN2@OnTCPNetwo
  000a8	00 00 00 00	 DD	 $LN6@OnTCPNetwo
  000ac	00 00 00 00	 DD	 $LN7@OnTCPNetwo
?OnTCPNetworkMainExchange@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainBaseEnsure@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainBaseEnsure@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainBaseEnsure, COMDAT
; _this$ = ecx

; 5293 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5294 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d b8 04 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 260 ; 00000104H
  0001a	74 0b		 je	 SHORT $LN4@OnTCPNetwo
  0001c	81 7d b8 05 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 261 ; 00000105H
  00023	74 19		 je	 SHORT $LN5@OnTCPNetwo
  00025	eb 2e		 jmp	 SHORT $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5295 : 	{
; 5296 : 	case SUB_GR_BASEENSURE_LOAD:				//加载低保
; 5297 : 		{
; 5298 : 			return OnTCPNetworkSubBaseEnsureQueryRequest(pData,wDataSize,dwSocketID);

  00027	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0002a	50		 push	 eax
  0002b	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0002f	51		 push	 ecx
  00030	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?OnTCPNetworkSubBaseEnsureQueryRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureQueryRequest
  0003c	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5299 : 		}
; 5300 : 	case SUB_GR_BASEENSURE_TAKE:			//领取低保
; 5301 : 		{
; 5302 : 			return OnTCPNetworkSubBaseEnsureTakeRequest(pData,wDataSize,dwSocketID);

  0003e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	50		 push	 eax
  00042	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00046	51		 push	 ecx
  00047	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0004a	52		 push	 edx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?OnTCPNetworkSubBaseEnsureTakeRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubBaseEnsureTakeRequest
  00053	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5303 : 		}
; 5304 : 	}
; 5305 : 
; 5306 : 	return false;

  00055	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5307 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainBaseEnsure@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainBaseEnsure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainTask@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainTask@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainTask, COMDAT
; _this$ = ecx

; 5241 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5242 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00016	83 e9 01	 sub	 ecx, 1
  00019	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0001c	83 7d b8 03	 cmp	 DWORD PTR tv65[ebp], 3
  00020	77 66		 ja	 SHORT $LN2@OnTCPNetwo
  00022	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00025	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnTCPNetwo[edx*4]
$LN4@OnTCPNetwo:

; 5243 : 	{
; 5244 : 	case SUB_GR_TASK_TAKE:				//领取任务
; 5245 : 		{
; 5246 : 			return OnTCPNetworkSubTakeTaskRequest(pData,wDataSize,dwSocketID);

  0002c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0002f	50		 push	 eax
  00030	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00034	51		 push	 ecx
  00035	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00038	52		 push	 edx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?OnTCPNetworkSubTakeTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTakeTaskRequest
  00041	eb 47		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5247 : 		}
; 5248 : 	case SUB_GR_TASK_REWARD:			//领取奖励
; 5249 : 		{
; 5250 : 			return OnTCPNetworkSubTaskRewardRequest(pData,wDataSize,dwSocketID);

  00043	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00046	50		 push	 eax
  00047	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0004b	51		 push	 ecx
  0004c	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0004f	52		 push	 edx
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?OnTCPNetworkSubTaskRewardRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTaskRewardRequest
  00058	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5251 : 		}
; 5252 : 	case SUB_GR_TASK_LOAD_INFO:			//加载任务
; 5253 : 		{
; 5254 : 			return OnTCPNetworkSubLoadTaskInfoRequest(pData,wDataSize,dwSocketID);

  0005a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0005d	50		 push	 eax
  0005e	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00062	51		 push	 ecx
  00063	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00066	52		 push	 edx
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?OnTCPNetworkSubLoadTaskInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLoadTaskInfoRequest
  0006f	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5255 : 		}
; 5256 : 	case SUB_GR_TASK_GIVEUP:			//放弃任务
; 5257 : 		{
; 5258 : 			return OnTCPNetworkSubGiveUpTaskRequest(pData,wDataSize,dwSocketID);

  00071	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00074	50		 push	 eax
  00075	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0007d	52		 push	 edx
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?OnTCPNetworkSubGiveUpTaskRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGiveUpTaskRequest
  00086	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5259 : 		}
; 5260 : 	}
; 5261 : 
; 5262 : 	return false;

  00088	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5263 : }

  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 10 00	 ret	 16			; 00000010H
  00093	90		 npad	 1
$LN9@OnTCPNetwo:
  00094	00 00 00 00	 DD	 $LN6@OnTCPNetwo
  00098	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  0009c	00 00 00 00	 DD	 $LN5@OnTCPNetwo
  000a0	00 00 00 00	 DD	 $LN7@OnTCPNetwo
?OnTCPNetworkMainTask@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainTask
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv80 = -80						; size = 4
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainInsure, COMDAT
; _this$ = ecx

; 5199 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5200 : 	//获取用户
; 5201 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5202 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5203 : 
; 5204 : 	//用户效验
; 5205 : 	ASSERT(pIServerUserItem!=NULL);

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00031	75 18		 jne	 SHORT $LN12@OnTCPNetwo
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00038	83 c0 06	 add	 eax, 6
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN12@OnTCPNetwo
  0004a	cc		 int	 3
$LN12@OnTCPNetwo:

; 5206 : 	if (pIServerUserItem==NULL) return false;

  0004b	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0004f	75 07		 jne	 SHORT $LN4@OnTCPNetwo
  00051	32 c0		 xor	 al, al
  00053	e9 b0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5207 : 
; 5208 : 	switch (wSubCmdID)

  00058	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0005c	89 45 b0	 mov	 DWORD PTR tv80[ebp], eax
  0005f	8b 4d b0	 mov	 ecx, DWORD PTR tv80[ebp]
  00062	83 e9 01	 sub	 ecx, 1
  00065	89 4d b0	 mov	 DWORD PTR tv80[ebp], ecx
  00068	83 7d b0 05	 cmp	 DWORD PTR tv80[ebp], 5
  0006c	0f 87 94 00 00
	00		 ja	 $LN2@OnTCPNetwo
  00072	8b 55 b0	 mov	 edx, DWORD PTR tv80[ebp]
  00075	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN13@OnTCPNetwo[edx*4]
$LN5@OnTCPNetwo:

; 5209 : 	{
; 5210 : 	case SUB_GR_ENABLE_INSURE_REQUEST:	//开通银行
; 5211 : 		{
; 5212 : 			return OnTCPNetworkSubEnableInsureRequest(pData,wDataSize,dwSocketID);

  0007c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0007f	50		 push	 eax
  00080	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00084	51		 push	 ecx
  00085	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00088	52		 push	 edx
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?OnTCPNetworkSubEnableInsureRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubEnableInsureRequest
  00091	eb 75		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5213 : 		}
; 5214 : 	case SUB_GR_QUERY_INSURE_INFO:		//银行查询
; 5215 : 		{
; 5216 : 			return OnTCPNetworkSubQueryInsureInfo(pData,wDataSize,dwSocketID);

  00093	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00096	50		 push	 eax
  00097	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0009f	52		 push	 edx
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?OnTCPNetworkSubQueryInsureInfo@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryInsureInfo
  000a8	eb 5e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5217 : 		}
; 5218 : 	case SUB_GR_SAVE_SCORE_REQUEST:		//存款请求
; 5219 : 		{
; 5220 : 			return OnTCPNetworkSubSaveScoreRequest(pData,wDataSize,dwSocketID);

  000aa	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000ad	50		 push	 eax
  000ae	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b2	51		 push	 ecx
  000b3	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000b6	52		 push	 edx
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?OnTCPNetworkSubSaveScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubSaveScoreRequest
  000bf	eb 47		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5221 : 		}
; 5222 : 	case SUB_GR_TAKE_SCORE_REQUEST:		//取款请求
; 5223 : 		{
; 5224 : 			return OnTCPNetworkSubTakeScoreRequest(pData,wDataSize,dwSocketID);

  000c1	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000c4	50		 push	 eax
  000c5	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000c9	51		 push	 ecx
  000ca	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000cd	52		 push	 edx
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	e8 00 00 00 00	 call	 ?OnTCPNetworkSubTakeScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTakeScoreRequest
  000d6	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5225 : 		}
; 5226 : 	case SUB_GR_TRANSFER_SCORE_REQUEST:	//转帐请求
; 5227 : 		{
; 5228 : 			return OnTCPNetworkSubTransferScoreRequest(pData,wDataSize,dwSocketID);

  000d8	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000db	50		 push	 eax
  000dc	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000e0	51		 push	 ecx
  000e1	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000e4	52		 push	 edx
  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?OnTCPNetworkSubTransferScoreRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubTransferScoreRequest
  000ed	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5229 : 		}
; 5230 : 	case SUB_GR_QUERY_USER_INFO_REQUEST://查询用户
; 5231 : 		{
; 5232 : 			return OnTCPNetworkSubQueryUserInfoRequest(pData,wDataSize,dwSocketID);

  000ef	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000f2	50		 push	 eax
  000f3	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000f7	51		 push	 ecx
  000f8	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000fb	52		 push	 edx
  000fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?OnTCPNetworkSubQueryUserInfoRequest@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubQueryUserInfoRequest
  00104	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5233 : 		}
; 5234 : 	}
; 5235 : 
; 5236 : 	return false;

  00106	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5237 : }

  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 10 00	 ret	 16			; 00000010H
  00111	0f 1f 00	 npad	 3
$LN13@OnTCPNetwo:
  00114	00 00 00 00	 DD	 $LN5@OnTCPNetwo
  00118	00 00 00 00	 DD	 $LN6@OnTCPNetwo
  0011c	00 00 00 00	 DD	 $LN7@OnTCPNetwo
  00120	00 00 00 00	 DD	 $LN8@OnTCPNetwo
  00124	00 00 00 00	 DD	 $LN9@OnTCPNetwo
  00128	00 00 00 00	 DD	 $LN10@OnTCPNetwo
?OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainInsure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$ = -24					; size = 4
_wChairID$ = -20					; size = 2
_wTableID$ = -16					; size = 2
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainFrame, COMDAT
; _this$ = ecx

; 5495 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5496 : 	//获取信息
; 5497 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5498 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5499 : 
; 5500 : 	//用户效验
; 5501 : 	ASSERT(pIServerUserItem!=NULL);

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00031	75 18		 jne	 SHORT $LN6@OnTCPNetwo
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00038	83 c0 06	 add	 eax, 6
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0004a	cc		 int	 3
$LN6@OnTCPNetwo:

; 5502 : 	if (pIServerUserItem==NULL) return false;

  0004b	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0004f	75 04		 jne	 SHORT $LN2@OnTCPNetwo
  00051	32 c0		 xor	 al, al
  00053	eb 6e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5503 : 
; 5504 : 	//处理过虑
; 5505 : 	WORD wTableID=pIServerUserItem->GetTableID();

  00055	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00058	8b 10		 mov	 edx, DWORD PTR [eax]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0005d	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00060	ff d0		 call	 eax
  00062	66 89 45 f0	 mov	 WORD PTR _wTableID$[ebp], ax

; 5506 : 	WORD wChairID=pIServerUserItem->GetChairID();

  00066	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0006e	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00071	ff d0		 call	 eax
  00073	66 89 45 ec	 mov	 WORD PTR _wChairID$[ebp], ax

; 5507 : 	if ((wTableID==INVALID_TABLE)||(wChairID==INVALID_CHAIR)) return true;

  00077	0f b7 45 f0	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0007b	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00080	74 0b		 je	 SHORT $LN4@OnTCPNetwo
  00082	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00086	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0008b	75 04		 jne	 SHORT $LN3@OnTCPNetwo
$LN4@OnTCPNetwo:
  0008d	b0 01		 mov	 al, 1
  0008f	eb 32		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5508 : 
; 5509 : 	//消息处理 
; 5510 : 	CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  00091	0f b7 45 f0	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0009f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	89 4d e8	 mov	 DWORD PTR _pTableFrame$[ebp], ecx

; 5511 : 	return pTableFrame->OnEventSocketFrame(wSubCmdID,pData,wDataSize,pIServerUserItem);

  000a9	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ac	50		 push	 eax
  000ad	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b1	51		 push	 ecx
  000b2	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000b5	52		 push	 edx
  000b6	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000be	e8 00 00 00 00	 call	 ?OnEventSocketFrame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ; CTableFrame::OnEventSocketFrame
$LN1@OnTCPNetwo:

; 5512 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
_pTableFrame$ = -24					; size = 4
_wChairID$ = -20					; size = 2
_wTableID$ = -16					; size = 2
_pIServerUserItem$ = -12				; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainGame, COMDAT
; _this$ = ecx

; 5474 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5475 : 	//获取信息
; 5476 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 5477 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 5478 : 
; 5479 : 	//用户效验
; 5480 : 	ASSERT(pIServerUserItem!=NULL);

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00031	75 18		 jne	 SHORT $LN6@OnTCPNetwo
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00038	83 c0 06	 add	 eax, 6
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN6@OnTCPNetwo
  0004a	cc		 int	 3
$LN6@OnTCPNetwo:

; 5481 : 	if (pIServerUserItem==NULL) return false;

  0004b	83 7d f4 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0004f	75 04		 jne	 SHORT $LN2@OnTCPNetwo
  00051	32 c0		 xor	 al, al
  00053	eb 6e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5482 : 
; 5483 : 	//处理过虑
; 5484 : 	WORD wTableID=pIServerUserItem->GetTableID();

  00055	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00058	8b 10		 mov	 edx, DWORD PTR [eax]
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0005d	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00060	ff d0		 call	 eax
  00062	66 89 45 f0	 mov	 WORD PTR _wTableID$[ebp], ax

; 5485 : 	WORD wChairID=pIServerUserItem->GetChairID();

  00066	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00069	8b 10		 mov	 edx, DWORD PTR [eax]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0006e	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00071	ff d0		 call	 eax
  00073	66 89 45 ec	 mov	 WORD PTR _wChairID$[ebp], ax

; 5486 : 	if ((wTableID==INVALID_TABLE)||(wChairID==INVALID_CHAIR)) return true;

  00077	0f b7 45 f0	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0007b	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00080	74 0b		 je	 SHORT $LN4@OnTCPNetwo
  00082	0f b7 45 ec	 movzx	 eax, WORD PTR _wChairID$[ebp]
  00086	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0008b	75 04		 jne	 SHORT $LN3@OnTCPNetwo
$LN4@OnTCPNetwo:
  0008d	b0 01		 mov	 al, 1
  0008f	eb 32		 jmp	 SHORT $LN1@OnTCPNetwo
$LN3@OnTCPNetwo:

; 5487 : 
; 5488 : 	//消息处理 
; 5489 : 	CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  00091	0f b7 45 f0	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0009f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	89 4d e8	 mov	 DWORD PTR _pTableFrame$[ebp], ecx

; 5490 : 	return pTableFrame->OnEventSocketGame(wSubCmdID,pData,wDataSize,pIServerUserItem);

  000a9	8b 45 f4	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ac	50		 push	 eax
  000ad	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b1	51		 push	 ecx
  000b2	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000b5	52		 push	 edx
  000b6	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  000be	e8 00 00 00 00	 call	 ?OnEventSocketGame@CTableFrame@@QAE_NGPAXGPAUIServerUserItem@@@Z ; CTableFrame::OnEventSocketGame
$LN1@OnTCPNetwo:

; 5491 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainLogon@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainLogon@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainLogon, COMDAT
; _this$ = ecx

; 5107 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5108 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b8 01	 cmp	 DWORD PTR tv65[ebp], 1
  00017	74 0e		 je	 SHORT $LN4@OnTCPNetwo
  00019	83 7d b8 02	 cmp	 DWORD PTR tv65[ebp], 2
  0001d	74 1f		 je	 SHORT $LN5@OnTCPNetwo
  0001f	83 7d b8 03	 cmp	 DWORD PTR tv65[ebp], 3
  00023	74 30		 je	 SHORT $LN6@OnTCPNetwo
  00025	eb 45		 jmp	 SHORT $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5109 : 	{
; 5110 : 	case SUB_GR_LOGON_USERID:		//I D 登录
; 5111 : 		{
; 5112 : 			return OnTCPNetworkSubLogonUserID(pData,wDataSize,dwSocketID);

  00027	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0002a	50		 push	 eax
  0002b	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0002f	51		 push	 ecx
  00030	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?OnTCPNetworkSubLogonUserID@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLogonUserID
  0003c	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5113 : 		}
; 5114 : 	case SUB_GR_LOGON_MOBILE:		//手机登录
; 5115 : 		{
; 5116 : 			return OnTCPNetworkSubLogonMobile(pData,wDataSize,dwSocketID);

  0003e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00041	50		 push	 eax
  00042	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00046	51		 push	 ecx
  00047	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0004a	52		 push	 edx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?OnTCPNetworkSubLogonMobile@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLogonMobile
  00053	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5117 : 		}
; 5118 : 	case SUB_GR_LOGON_ACCOUNTS:		//帐号登录
; 5119 : 		{
; 5120 : 			return OnTCPNetworkSubLogonAccounts(pData,wDataSize,dwSocketID);

  00055	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00058	50		 push	 eax
  00059	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00061	52		 push	 edx
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?OnTCPNetworkSubLogonAccounts@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubLogonAccounts
  0006a	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5121 : 		}
; 5122 : 	}
; 5123 : 
; 5124 : 	return true;

  0006c	b0 01		 mov	 al, 1
$LN1@OnTCPNetwo:

; 5125 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainLogon@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainLogon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainUser@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainUser@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainUser, COMDAT
; _this$ = ecx

; 5129 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5130 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d b8 9a 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 410 ; 0000019aH
  0001a	7f 34		 jg	 SHORT $LN20@OnTCPNetwo
  0001c	81 7d b8 9a 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 410 ; 0000019aH
  00023	0f 84 89 01 00
	00		 je	 $LN18@OnTCPNetwo
  00029	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  0002c	83 e9 01	 sub	 ecx, 1
  0002f	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  00032	81 7d b8 cb 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 203 ; 000000cbH
  00039	0f 87 8a 01 00
	00		 ja	 $LN2@OnTCPNetwo
  0003f	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00042	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN21@OnTCPNetwo[edx]
  00049	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN22@OnTCPNetwo[eax*4]
$LN20@OnTCPNetwo:
  00050	e9 74 01 00 00	 jmp	 $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 5131 : 	{
; 5132 : 	case SUB_GR_USER_RULE:			//用户规则
; 5133 : 		{
; 5134 : 			return OnTCPNetworkSubUserRule(pData,wDataSize,dwSocketID);

  00055	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00058	50		 push	 eax
  00059	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00061	52		 push	 edx
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserRule@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserRule
  0006a	e9 5c 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 5135 : 		}
; 5136 : 	case SUB_GR_USER_LOOKON:		//用户旁观
; 5137 : 		{
; 5138 : 			return OnTCPNetworkSubUserLookon(pData,wDataSize,dwSocketID);

  0006f	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00072	50		 push	 eax
  00073	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00077	51		 push	 ecx
  00078	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0007b	52		 push	 edx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserLookon@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserLookon
  00084	e9 42 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 5139 : 		}
; 5140 : 	case SUB_GR_USER_SITDOWN:		//用户坐下
; 5141 : 		{
; 5142 : 			return OnTCPNetworkSubUserSitDown(pData,wDataSize,dwSocketID);

  00089	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008c	50		 push	 eax
  0008d	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00091	51		 push	 ecx
  00092	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00095	52		 push	 edx
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserSitDown@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserSitDown
  0009e	e9 28 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 5143 : 		}
; 5144 : 	case SUB_GR_USER_STANDUP:		//用户起立
; 5145 : 		{
; 5146 : 			return OnTCPNetworkSubUserStandUp(pData,wDataSize,dwSocketID);

  000a3	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000a6	50		 push	 eax
  000a7	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000ab	51		 push	 ecx
  000ac	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000af	52		 push	 edx
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserStandUp@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserStandUp
  000b8	e9 0e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 5147 : 		}
; 5148 : 	case SUB_GR_USER_CHAT:			//用户聊天
; 5149 : 		{
; 5150 : 			return OnTCPNetworkSubUserChat(pData,wDataSize,dwSocketID);

  000bd	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000c0	50		 push	 eax
  000c1	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000c5	51		 push	 ecx
  000c6	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000c9	52		 push	 edx
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserChat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserChat
  000d2	e9 f4 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 5151 : 		}
; 5152 : 	case SUB_GR_USER_EXPRESSION:	//用户表情
; 5153 : 		{
; 5154 : 			return OnTCPNetworkSubUserExpression(pData,wDataSize,dwSocketID);

  000d7	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000da	50		 push	 eax
  000db	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000df	51		 push	 ecx
  000e0	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000e3	52		 push	 edx
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserExpression@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserExpression
  000ec	e9 da 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 5155 : 		}
; 5156 : 	case SUB_GR_WISPER_CHAT:		//用户私聊
; 5157 : 		{
; 5158 : 			return OnTCPNetworkSubWisperChat(pData,wDataSize,dwSocketID);

  000f1	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000f4	50		 push	 eax
  000f5	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000f9	51		 push	 ecx
  000fa	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000fd	52		 push	 edx
  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	e8 00 00 00 00	 call	 ?OnTCPNetworkSubWisperChat@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubWisperChat
  00106	e9 c0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN11@OnTCPNetwo:

; 5159 : 		}
; 5160 : 	case SUB_GR_WISPER_EXPRESSION:	//私聊表情
; 5161 : 		{
; 5162 : 			return OnTCPNetworkSubWisperExpression(pData,wDataSize,dwSocketID);

  0010b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0010e	50		 push	 eax
  0010f	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00113	51		 push	 ecx
  00114	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00117	52		 push	 edx
  00118	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011b	e8 00 00 00 00	 call	 ?OnTCPNetworkSubWisperExpression@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubWisperExpression
  00120	e9 a6 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN12@OnTCPNetwo:

; 5163 : 		}
; 5164 : 	case SUB_GR_USER_INVITE_REQ:    //邀请用户
; 5165 : 		{
; 5166 : 			return OnTCPNetworkSubUserInviteReq(pData,wDataSize,dwSocketID);

  00125	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00128	50		 push	 eax
  00129	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0012d	51		 push	 ecx
  0012e	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00131	52		 push	 edx
  00132	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserInviteReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserInviteReq
  0013a	e9 8c 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 5167 : 		}
; 5168 : 	case SUB_GR_USER_REPULSE_SIT:   //拒绝厌友
; 5169 : 		{
; 5170 : 			return OnTCPNetworkSubUserRepulseSit(pData,wDataSize,dwSocketID);

  0013f	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00142	50		 push	 eax
  00143	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00147	51		 push	 ecx
  00148	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0014b	52		 push	 edx
  0014c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014f	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserRepulseSit@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserRepulseSit
  00154	eb 75		 jmp	 SHORT $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 5171 : 		}
; 5172 : 	case SUB_GR_USER_KICK_USER:    //踢出用户
; 5173 : 		{
; 5174 : 			return OnTCPNetworkSubMemberKickUser(pData,wDataSize,dwSocketID);

  00156	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00159	50		 push	 eax
  0015a	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0015e	51		 push	 ecx
  0015f	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00162	52		 push	 edx
  00163	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	e8 00 00 00 00	 call	 ?OnTCPNetworkSubMemberKickUser@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubMemberKickUser
  0016b	eb 5e		 jmp	 SHORT $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 5175 : 		}
; 5176 : 	case SUB_GR_USER_INFO_REQ:     //请求用户信息
; 5177 : 		{
; 5178 : 			return OnTCPNetworkSubUserInfoReq(pData,wDataSize,dwSocketID);

  0016d	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00170	50		 push	 eax
  00171	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00175	51		 push	 ecx
  00176	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00179	52		 push	 edx
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserInfoReq
  00182	eb 47		 jmp	 SHORT $LN1@OnTCPNetwo
$LN16@OnTCPNetwo:

; 5179 : 		}
; 5180 : 	case SUB_GR_USER_CHAIR_REQ:    //请求更换位置
; 5181 : 		{
; 5182 : 			return OnTCPNetworkSubUserChairReq(pData,wDataSize,dwSocketID);

  00184	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00187	50		 push	 eax
  00188	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0018c	51		 push	 ecx
  0018d	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00190	52		 push	 edx
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	e8 00 00 00 00	 call	 ?OnTCPNetworkSubUserChairReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubUserChairReq
  00199	eb 30		 jmp	 SHORT $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 5183 : 		}
; 5184 : 	case SUB_GR_USER_CHAIR_INFO_REQ: //请求椅子用户信息
; 5185 : 		{
; 5186 : 			return OnTCPNetworkSubChairUserInfoReq(pData,wDataSize,dwSocketID);

  0019b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0019e	50		 push	 eax
  0019f	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  001a3	51		 push	 ecx
  001a4	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  001a7	52		 push	 edx
  001a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ab	e8 00 00 00 00	 call	 ?OnTCPNetworkSubChairUserInfoReq@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubChairUserInfoReq
  001b0	eb 19		 jmp	 SHORT $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 5187 : 		}
; 5188 : 	case SUB_GR_GROWLEVEL_QUERY:		  //查询等级
; 5189 : 		{
; 5190 : 			return OnTCPNetworkSubGrowLevelQuery(pData,wDataSize,dwSocketID);

  001b2	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001b5	50		 push	 eax
  001b6	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  001ba	51		 push	 ecx
  001bb	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  001be	52		 push	 edx
  001bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c2	e8 00 00 00 00	 call	 ?OnTCPNetworkSubGrowLevelQuery@CAttemperEngineSink@@IAE_NPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkSubGrowLevelQuery
  001c7	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 5191 : 		}
; 5192 : 	}
; 5193 : 
; 5194 : 	return false;

  001c9	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 5195 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 10 00	 ret	 16			; 00000010H
$LN22@OnTCPNetwo:
  001d4	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  001d8	00 00 00 00	 DD	 $LN5@OnTCPNetwo
  001dc	00 00 00 00	 DD	 $LN6@OnTCPNetwo
  001e0	00 00 00 00	 DD	 $LN7@OnTCPNetwo
  001e4	00 00 00 00	 DD	 $LN12@OnTCPNetwo
  001e8	00 00 00 00	 DD	 $LN13@OnTCPNetwo
  001ec	00 00 00 00	 DD	 $LN14@OnTCPNetwo
  001f0	00 00 00 00	 DD	 $LN15@OnTCPNetwo
  001f4	00 00 00 00	 DD	 $LN16@OnTCPNetwo
  001f8	00 00 00 00	 DD	 $LN17@OnTCPNetwo
  001fc	00 00 00 00	 DD	 $LN8@OnTCPNetwo
  00200	00 00 00 00	 DD	 $LN9@OnTCPNetwo
  00204	00 00 00 00	 DD	 $LN10@OnTCPNetwo
  00208	00 00 00 00	 DD	 $LN11@OnTCPNetwo
  0020c	00 00 00 00	 DD	 $LN2@OnTCPNetwo
$LN21@OnTCPNetwo:
  00210	00		 DB	 0
  00211	01		 DB	 1
  00212	02		 DB	 2
  00213	03		 DB	 3
  00214	0e		 DB	 14			; 0000000eH
  00215	04		 DB	 4
  00216	05		 DB	 5
  00217	06		 DB	 6
  00218	07		 DB	 7
  00219	08		 DB	 8
  0021a	09		 DB	 9
  0021b	0e		 DB	 14			; 0000000eH
  0021c	0e		 DB	 14			; 0000000eH
  0021d	0e		 DB	 14			; 0000000eH
  0021e	0e		 DB	 14			; 0000000eH
  0021f	0e		 DB	 14			; 0000000eH
  00220	0e		 DB	 14			; 0000000eH
  00221	0e		 DB	 14			; 0000000eH
  00222	0e		 DB	 14			; 0000000eH
  00223	0e		 DB	 14			; 0000000eH
  00224	0e		 DB	 14			; 0000000eH
  00225	0e		 DB	 14			; 0000000eH
  00226	0e		 DB	 14			; 0000000eH
  00227	0e		 DB	 14			; 0000000eH
  00228	0e		 DB	 14			; 0000000eH
  00229	0e		 DB	 14			; 0000000eH
  0022a	0e		 DB	 14			; 0000000eH
  0022b	0e		 DB	 14			; 0000000eH
  0022c	0e		 DB	 14			; 0000000eH
  0022d	0e		 DB	 14			; 0000000eH
  0022e	0e		 DB	 14			; 0000000eH
  0022f	0e		 DB	 14			; 0000000eH
  00230	0e		 DB	 14			; 0000000eH
  00231	0e		 DB	 14			; 0000000eH
  00232	0e		 DB	 14			; 0000000eH
  00233	0e		 DB	 14			; 0000000eH
  00234	0e		 DB	 14			; 0000000eH
  00235	0e		 DB	 14			; 0000000eH
  00236	0e		 DB	 14			; 0000000eH
  00237	0e		 DB	 14			; 0000000eH
  00238	0e		 DB	 14			; 0000000eH
  00239	0e		 DB	 14			; 0000000eH
  0023a	0e		 DB	 14			; 0000000eH
  0023b	0e		 DB	 14			; 0000000eH
  0023c	0e		 DB	 14			; 0000000eH
  0023d	0e		 DB	 14			; 0000000eH
  0023e	0e		 DB	 14			; 0000000eH
  0023f	0e		 DB	 14			; 0000000eH
  00240	0e		 DB	 14			; 0000000eH
  00241	0e		 DB	 14			; 0000000eH
  00242	0e		 DB	 14			; 0000000eH
  00243	0e		 DB	 14			; 0000000eH
  00244	0e		 DB	 14			; 0000000eH
  00245	0e		 DB	 14			; 0000000eH
  00246	0e		 DB	 14			; 0000000eH
  00247	0e		 DB	 14			; 0000000eH
  00248	0e		 DB	 14			; 0000000eH
  00249	0e		 DB	 14			; 0000000eH
  0024a	0e		 DB	 14			; 0000000eH
  0024b	0e		 DB	 14			; 0000000eH
  0024c	0e		 DB	 14			; 0000000eH
  0024d	0e		 DB	 14			; 0000000eH
  0024e	0e		 DB	 14			; 0000000eH
  0024f	0e		 DB	 14			; 0000000eH
  00250	0e		 DB	 14			; 0000000eH
  00251	0e		 DB	 14			; 0000000eH
  00252	0e		 DB	 14			; 0000000eH
  00253	0e		 DB	 14			; 0000000eH
  00254	0e		 DB	 14			; 0000000eH
  00255	0e		 DB	 14			; 0000000eH
  00256	0e		 DB	 14			; 0000000eH
  00257	0e		 DB	 14			; 0000000eH
  00258	0e		 DB	 14			; 0000000eH
  00259	0e		 DB	 14			; 0000000eH
  0025a	0e		 DB	 14			; 0000000eH
  0025b	0e		 DB	 14			; 0000000eH
  0025c	0e		 DB	 14			; 0000000eH
  0025d	0e		 DB	 14			; 0000000eH
  0025e	0e		 DB	 14			; 0000000eH
  0025f	0e		 DB	 14			; 0000000eH
  00260	0e		 DB	 14			; 0000000eH
  00261	0e		 DB	 14			; 0000000eH
  00262	0e		 DB	 14			; 0000000eH
  00263	0e		 DB	 14			; 0000000eH
  00264	0e		 DB	 14			; 0000000eH
  00265	0e		 DB	 14			; 0000000eH
  00266	0e		 DB	 14			; 0000000eH
  00267	0e		 DB	 14			; 0000000eH
  00268	0e		 DB	 14			; 0000000eH
  00269	0e		 DB	 14			; 0000000eH
  0026a	0e		 DB	 14			; 0000000eH
  0026b	0e		 DB	 14			; 0000000eH
  0026c	0e		 DB	 14			; 0000000eH
  0026d	0e		 DB	 14			; 0000000eH
  0026e	0e		 DB	 14			; 0000000eH
  0026f	0e		 DB	 14			; 0000000eH
  00270	0e		 DB	 14			; 0000000eH
  00271	0e		 DB	 14			; 0000000eH
  00272	0e		 DB	 14			; 0000000eH
  00273	0e		 DB	 14			; 0000000eH
  00274	0e		 DB	 14			; 0000000eH
  00275	0e		 DB	 14			; 0000000eH
  00276	0e		 DB	 14			; 0000000eH
  00277	0e		 DB	 14			; 0000000eH
  00278	0e		 DB	 14			; 0000000eH
  00279	0e		 DB	 14			; 0000000eH
  0027a	0e		 DB	 14			; 0000000eH
  0027b	0e		 DB	 14			; 0000000eH
  0027c	0e		 DB	 14			; 0000000eH
  0027d	0e		 DB	 14			; 0000000eH
  0027e	0e		 DB	 14			; 0000000eH
  0027f	0e		 DB	 14			; 0000000eH
  00280	0e		 DB	 14			; 0000000eH
  00281	0e		 DB	 14			; 0000000eH
  00282	0e		 DB	 14			; 0000000eH
  00283	0e		 DB	 14			; 0000000eH
  00284	0e		 DB	 14			; 0000000eH
  00285	0e		 DB	 14			; 0000000eH
  00286	0e		 DB	 14			; 0000000eH
  00287	0e		 DB	 14			; 0000000eH
  00288	0e		 DB	 14			; 0000000eH
  00289	0e		 DB	 14			; 0000000eH
  0028a	0e		 DB	 14			; 0000000eH
  0028b	0e		 DB	 14			; 0000000eH
  0028c	0e		 DB	 14			; 0000000eH
  0028d	0e		 DB	 14			; 0000000eH
  0028e	0e		 DB	 14			; 0000000eH
  0028f	0e		 DB	 14			; 0000000eH
  00290	0e		 DB	 14			; 0000000eH
  00291	0e		 DB	 14			; 0000000eH
  00292	0e		 DB	 14			; 0000000eH
  00293	0e		 DB	 14			; 0000000eH
  00294	0e		 DB	 14			; 0000000eH
  00295	0e		 DB	 14			; 0000000eH
  00296	0e		 DB	 14			; 0000000eH
  00297	0e		 DB	 14			; 0000000eH
  00298	0e		 DB	 14			; 0000000eH
  00299	0e		 DB	 14			; 0000000eH
  0029a	0e		 DB	 14			; 0000000eH
  0029b	0e		 DB	 14			; 0000000eH
  0029c	0e		 DB	 14			; 0000000eH
  0029d	0e		 DB	 14			; 0000000eH
  0029e	0e		 DB	 14			; 0000000eH
  0029f	0e		 DB	 14			; 0000000eH
  002a0	0e		 DB	 14			; 0000000eH
  002a1	0e		 DB	 14			; 0000000eH
  002a2	0e		 DB	 14			; 0000000eH
  002a3	0e		 DB	 14			; 0000000eH
  002a4	0e		 DB	 14			; 0000000eH
  002a5	0e		 DB	 14			; 0000000eH
  002a6	0e		 DB	 14			; 0000000eH
  002a7	0e		 DB	 14			; 0000000eH
  002a8	0e		 DB	 14			; 0000000eH
  002a9	0e		 DB	 14			; 0000000eH
  002aa	0e		 DB	 14			; 0000000eH
  002ab	0e		 DB	 14			; 0000000eH
  002ac	0e		 DB	 14			; 0000000eH
  002ad	0e		 DB	 14			; 0000000eH
  002ae	0e		 DB	 14			; 0000000eH
  002af	0e		 DB	 14			; 0000000eH
  002b0	0e		 DB	 14			; 0000000eH
  002b1	0e		 DB	 14			; 0000000eH
  002b2	0e		 DB	 14			; 0000000eH
  002b3	0e		 DB	 14			; 0000000eH
  002b4	0e		 DB	 14			; 0000000eH
  002b5	0e		 DB	 14			; 0000000eH
  002b6	0e		 DB	 14			; 0000000eH
  002b7	0e		 DB	 14			; 0000000eH
  002b8	0e		 DB	 14			; 0000000eH
  002b9	0e		 DB	 14			; 0000000eH
  002ba	0e		 DB	 14			; 0000000eH
  002bb	0e		 DB	 14			; 0000000eH
  002bc	0e		 DB	 14			; 0000000eH
  002bd	0e		 DB	 14			; 0000000eH
  002be	0e		 DB	 14			; 0000000eH
  002bf	0e		 DB	 14			; 0000000eH
  002c0	0e		 DB	 14			; 0000000eH
  002c1	0e		 DB	 14			; 0000000eH
  002c2	0e		 DB	 14			; 0000000eH
  002c3	0e		 DB	 14			; 0000000eH
  002c4	0e		 DB	 14			; 0000000eH
  002c5	0e		 DB	 14			; 0000000eH
  002c6	0e		 DB	 14			; 0000000eH
  002c7	0e		 DB	 14			; 0000000eH
  002c8	0e		 DB	 14			; 0000000eH
  002c9	0e		 DB	 14			; 0000000eH
  002ca	0e		 DB	 14			; 0000000eH
  002cb	0e		 DB	 14			; 0000000eH
  002cc	0e		 DB	 14			; 0000000eH
  002cd	0e		 DB	 14			; 0000000eH
  002ce	0e		 DB	 14			; 0000000eH
  002cf	0e		 DB	 14			; 0000000eH
  002d0	0e		 DB	 14			; 0000000eH
  002d1	0e		 DB	 14			; 0000000eH
  002d2	0e		 DB	 14			; 0000000eH
  002d3	0e		 DB	 14			; 0000000eH
  002d4	0e		 DB	 14			; 0000000eH
  002d5	0e		 DB	 14			; 0000000eH
  002d6	0e		 DB	 14			; 0000000eH
  002d7	0e		 DB	 14			; 0000000eH
  002d8	0a		 DB	 10			; 0000000aH
  002d9	0b		 DB	 11			; 0000000bH
  002da	0c		 DB	 12			; 0000000cH
  002db	0d		 DB	 13			; 0000000dH
?OnTCPNetworkMainUser@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
tv65 = -80						; size = 4
_ControlResult$1 = -9					; size = 1
_pRegisterFailure$2 = -8				; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnTCPSocketMainPersonalRoomRegister, COMDAT
; _this$ = ecx

; 4674 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4675 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b0	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d b0 c8 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 200 ; 000000c8H
  0001a	74 05		 je	 SHORT $LN4@OnTCPSocke
  0001c	e9 90 00 00 00	 jmp	 $LN2@OnTCPSocke
$LN4@OnTCPSocke:

; 4676 : 	{
; 4677 : 	case SUB_CS_S_REGISTER_FAILURE:		//注册失败
; 4678 : 		{
; 4679 : 			//变量定义
; 4680 : 			CMD_CS_S_RegisterFailure * pRegisterFailure=(CMD_CS_S_RegisterFailure *)pData;

  00021	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR _pRegisterFailure$2[ebp], eax

; 4681 : 
; 4682 : 			//效验参数
; 4683 : 			ASSERT(wDataSize>=(sizeof(CMD_CS_S_RegisterFailure)-sizeof(pRegisterFailure->szDescribeString)));

  00027	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002b	83 f8 04	 cmp	 eax, 4
  0002e	73 19		 jae	 SHORT $LN8@OnTCPSocke
  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00036	83 c1 09	 add	 ecx, 9
  00039	51		 push	 ecx
  0003a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0003f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00044	85 c0		 test	 eax, eax
  00046	74 01		 je	 SHORT $LN8@OnTCPSocke
  00048	cc		 int	 3
$LN8@OnTCPSocke:

; 4684 : 			if (wDataSize<(sizeof(CMD_CS_S_RegisterFailure)-sizeof(pRegisterFailure->szDescribeString))) return false;

  00049	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004d	83 f8 04	 cmp	 eax, 4
  00050	73 04		 jae	 SHORT $LN5@OnTCPSocke
  00052	32 c0		 xor	 al, al
  00054	eb 5d		 jmp	 SHORT $LN1@OnTCPSocke
$LN5@OnTCPSocke:

; 4685 : 
; 4686 : 			//关闭处理
; 4687 : 			m_bNeekPrsnlRmCorrespond=false;

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	c6 40 0e 00	 mov	 BYTE PTR [eax+14], 0

; 4688 : 
; 4689 : 			m_pPrsnlRmITCPSocketService->CloseSocket();

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  00066	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006b	8b 8a c0 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147392]
  00071	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00074	ff d2		 call	 edx

; 4690 : 
; 4691 : 			//显示消息
; 4692 : 			if (lstrlen(pRegisterFailure->szDescribeString)>0)

  00076	8b 45 f8	 mov	 eax, DWORD PTR _pRegisterFailure$2[ebp]
  00079	83 c0 04	 add	 eax, 4
  0007c	50		 push	 eax
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00083	85 c0		 test	 eax, eax
  00085	7e 12		 jle	 SHORT $LN6@OnTCPSocke

; 4693 : 			{
; 4694 : 				CTraceService::TraceString(pRegisterFailure->szDescribeString,TraceLevel_Exception);

  00087	6a 03		 push	 3
  00089	8b 45 f8	 mov	 eax, DWORD PTR _pRegisterFailure$2[ebp]
  0008c	83 c0 04	 add	 eax, 4
  0008f	50		 push	 eax
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00096	83 c4 08	 add	 esp, 8
$LN6@OnTCPSocke:

; 4695 : 			}
; 4696 : 
; 4697 : 			//事件通知
; 4698 : 			CP_ControlResult ControlResult;
; 4699 : 			ControlResult.cbSuccess=ER_FAILURE;

  00099	c6 45 f7 00	 mov	 BYTE PTR _ControlResult$1[ebp], 0

; 4700 : 			SendUIControlPacket(UI_PERSONAL_ROOM_CORRESPOND_RESULT, &ControlResult, sizeof(ControlResult));

  0009d	6a 01		 push	 1
  0009f	8d 45 f7	 lea	 eax, DWORD PTR _ControlResult$1[ebp]
  000a2	50		 push	 eax
  000a3	6a 03		 push	 3
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::SendUIControlPacket

; 4701 : 
; 4702 : 			return true;

  000ad	b0 01		 mov	 al, 1
  000af	eb 02		 jmp	 SHORT $LN1@OnTCPSocke
$LN2@OnTCPSocke:

; 4703 : 		}
; 4704 : 	}
; 4705 : 	return true;

  000b1	b0 01		 mov	 al, 1
$LN1@OnTCPSocke:

; 4706 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnTCPSocketMainPersonalRoomRegister
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
tv65 = -84						; size = 4
_pDeleteParameter$1 = -16				; size = 4
_pModifyParameter$2 = -12				; size = 4
_pAddParameter$3 = -8					; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnTCPSocketMainAndroidService, COMDAT
; _this$ = ecx

; 5055 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5056 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 ac	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d ac c8 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 200 ; 000000c8H
  0001a	74 1b		 je	 SHORT $LN4@OnTCPSocke
  0001c	81 7d ac c9 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 201 ; 000000c9H
  00023	74 6e		 je	 SHORT $LN6@OnTCPSocke
  00025	81 7d ac ca 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 202 ; 000000caH
  0002c	0f 84 b7 00 00
	00		 je	 $LN8@OnTCPSocke
  00032	e9 08 01 00 00	 jmp	 $LN2@OnTCPSocke
$LN4@OnTCPSocke:

; 5057 : 	{
; 5058 : 	case SUB_CS_S_ADDPARAMETER:		//添加参数
; 5059 : 		{
; 5060 : 			//参数校验
; 5061 : 			ASSERT(sizeof(CMD_CS_S_AddParameter)==wDataSize);

  00037	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003b	83 f8 54	 cmp	 eax, 84			; 00000054H
  0003e	74 19		 je	 SHORT $LN11@OnTCPSocke
  00040	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00046	83 c1 06	 add	 ecx, 6
  00049	51		 push	 ecx
  0004a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN11@OnTCPSocke
  00058	cc		 int	 3
$LN11@OnTCPSocke:

; 5062 : 			if(sizeof(CMD_CS_S_AddParameter)!=wDataSize) return false;

  00059	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005d	83 f8 54	 cmp	 eax, 84			; 00000054H
  00060	74 07		 je	 SHORT $LN5@OnTCPSocke
  00062	32 c0		 xor	 al, al
  00064	e9 d8 00 00 00	 jmp	 $LN1@OnTCPSocke
$LN5@OnTCPSocke:

; 5063 : 
; 5064 : 			//提取数据
; 5065 : 			CMD_CS_S_AddParameter * pAddParameter = (CMD_CS_S_AddParameter *)pData;

  00069	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0006c	89 45 f8	 mov	 DWORD PTR _pAddParameter$3[ebp], eax

; 5066 : 
; 5067 : 			//添加参数
; 5068 : 			m_AndroidUserManager.AddAndroidParameter(&pAddParameter->AndroidParameter,1);

  0006f	6a 01		 push	 1
  00071	8b 45 f8	 mov	 eax, DWORD PTR _pAddParameter$3[ebp]
  00074	50		 push	 eax
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  00087	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0008a	ff d2		 call	 edx

; 5069 : 
; 5070 : 			return true;

  0008c	b0 01		 mov	 al, 1
  0008e	e9 ae 00 00 00	 jmp	 $LN1@OnTCPSocke
$LN6@OnTCPSocke:

; 5071 : 		}
; 5072 : 	case SUB_CS_S_MODIFYPARAMETER:  //修改参数
; 5073 : 		{
; 5074 : 			//参数校验
; 5075 : 			ASSERT(sizeof(CMD_CS_S_ModifyParameter)==wDataSize);

  00093	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00097	83 f8 54	 cmp	 eax, 84			; 00000054H
  0009a	74 19		 je	 SHORT $LN12@OnTCPSocke
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  000a2	83 c1 14	 add	 ecx, 20			; 00000014H
  000a5	51		 push	 ecx
  000a6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000ab	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b0	85 c0		 test	 eax, eax
  000b2	74 01		 je	 SHORT $LN12@OnTCPSocke
  000b4	cc		 int	 3
$LN12@OnTCPSocke:

; 5076 : 			if(sizeof(CMD_CS_S_ModifyParameter)!=wDataSize) return false;

  000b5	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000b9	83 f8 54	 cmp	 eax, 84			; 00000054H
  000bc	74 04		 je	 SHORT $LN7@OnTCPSocke
  000be	32 c0		 xor	 al, al
  000c0	eb 7f		 jmp	 SHORT $LN1@OnTCPSocke
$LN7@OnTCPSocke:

; 5077 : 
; 5078 : 			//提取数据
; 5079 : 			CMD_CS_S_ModifyParameter * pModifyParameter = (CMD_CS_S_ModifyParameter *)pData;

  000c2	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000c5	89 45 f4	 mov	 DWORD PTR _pModifyParameter$2[ebp], eax

; 5080 : 
; 5081 : 			//修改参数
; 5082 : 			m_AndroidUserManager.AddAndroidParameter(&pModifyParameter->AndroidParameter,1);

  000c8	6a 01		 push	 1
  000ca	8b 45 f4	 mov	 eax, DWORD PTR _pModifyParameter$2[ebp]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000d7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000da	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  000e0	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000e3	ff d2		 call	 edx

; 5083 : 
; 5084 : 			return true;

  000e5	b0 01		 mov	 al, 1
  000e7	eb 58		 jmp	 SHORT $LN1@OnTCPSocke
$LN8@OnTCPSocke:

; 5085 : 		}
; 5086 : 	case SUB_CS_S_DELETEPARAMETER:  //删除参数
; 5087 : 		{
; 5088 : 			//参数校验
; 5089 : 			ASSERT(sizeof(CMD_CS_S_DeleteParameter)==wDataSize);

  000e9	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000ed	83 f8 04	 cmp	 eax, 4
  000f0	74 19		 je	 SHORT $LN13@OnTCPSocke
  000f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  000f8	83 c1 22	 add	 ecx, 34			; 00000022H
  000fb	51		 push	 ecx
  000fc	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00101	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00106	85 c0		 test	 eax, eax
  00108	74 01		 je	 SHORT $LN13@OnTCPSocke
  0010a	cc		 int	 3
$LN13@OnTCPSocke:

; 5090 : 			if(sizeof(CMD_CS_S_DeleteParameter)!=wDataSize) return false;

  0010b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0010f	83 f8 04	 cmp	 eax, 4
  00112	74 04		 je	 SHORT $LN9@OnTCPSocke
  00114	32 c0		 xor	 al, al
  00116	eb 29		 jmp	 SHORT $LN1@OnTCPSocke
$LN9@OnTCPSocke:

; 5091 : 
; 5092 : 			//提取数据
; 5093 : 			CMD_CS_S_DeleteParameter * pDeleteParameter = (CMD_CS_S_DeleteParameter *)pData;

  00118	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0011b	89 45 f0	 mov	 DWORD PTR _pDeleteParameter$1[ebp], eax

; 5094 : 
; 5095 : 			//删除参数
; 5096 : 			m_AndroidUserManager.RemoveAndroidParameter(pDeleteParameter->dwBatchID);

  0011e	8b 45 f0	 mov	 eax, DWORD PTR _pDeleteParameter$1[ebp]
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	51		 push	 ecx
  00124	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  0012d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00130	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  00136	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00139	ff d2		 call	 edx

; 5097 : 
; 5098 : 			return true;

  0013b	b0 01		 mov	 al, 1
  0013d	eb 02		 jmp	 SHORT $LN1@OnTCPSocke
$LN2@OnTCPSocke:

; 5099 : 		}
; 5100 : 	}
; 5101 : 
; 5102 : 	return true;

  0013f	b0 01		 mov	 al, 1
$LN1@OnTCPSocke:

; 5103 : }

  00141	5f		 pop	 edi
  00142	5e		 pop	 esi
  00143	5b		 pop	 ebx
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnTCPSocketMainAndroidService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPSocketMainManagerService@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnTCPSocketMainManagerService@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnTCPSocketMainManagerService, COMDAT
; _this$ = ecx

; 5007 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5008 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b8 64	 cmp	 DWORD PTR tv65[ebp], 100 ; 00000064H
  00017	74 17		 je	 SHORT $LN4@OnTCPSocke
  00019	81 7d b8 c8 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 200 ; 000000c8H
  00020	74 26		 je	 SHORT $LN5@OnTCPSocke
  00022	81 7d b8 2c 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 300 ; 0000012cH
  00029	74 4f		 je	 SHORT $LN6@OnTCPSocke
  0002b	e9 7a 01 00 00	 jmp	 $LN2@OnTCPSocke
$LN4@OnTCPSocke:

; 5009 : 	{
; 5010 : 	case SUB_CS_S_SYSTEM_MESSAGE:	//系统消息
; 5011 : 		{
; 5012 : 			//消息处理
; 5013 : 			SendSystemMessage((CMD_GR_SendMessage *)pData, wDataSize);

  00030	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00038	51		 push	 ecx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z ; CAttemperEngineSink::SendSystemMessage

; 5014 : 
; 5015 : 			return true;

  00041	b0 01		 mov	 al, 1
  00043	e9 64 01 00 00	 jmp	 $LN1@OnTCPSocke
$LN5@OnTCPSocke:

; 5016 : 		}
; 5017 : 	case SUB_CS_S_PROPERTY_TRUMPET:  //喇叭消息
; 5018 : 		{
; 5019 : 			//发送数据
; 5020 : 			m_pITCPNetworkEngine->SendDataBatch(MDM_GR_PROPERTY,SUB_GR_PROPERTY_TRUMPET,pData,wDataSize,BG_COMPUTER);

  00048	6a 02		 push	 2
  0004a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00052	51		 push	 ecx
  00053	68 cd 00 00 00	 push	 205			; 000000cdH
  00058	6a 08		 push	 8
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 10		 mov	 edx, DWORD PTR [eax]
  00068	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  0006e	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00071	ff d0		 call	 eax

; 5021 : 			return true;

  00073	b0 01		 mov	 al, 1
  00075	e9 32 01 00 00	 jmp	 $LN1@OnTCPSocke
$LN6@OnTCPSocke:

; 5022 : 		}
; 5023 : 	case SUB_CS_S_PLATFORM_PARAMETER: //平台参数
; 5024 : 		{
; 5025 : 			//清除任务			
; 5026 : 			m_wTaskCount=0;

  0007a	33 c0		 xor	 eax, eax
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	66 89 81 e4 04
	00 00		 mov	 WORD PTR [ecx+1252], ax

; 5027 : 			ZeroMemory(m_TaskParameter,sizeof(m_TaskParameter));

  00086	68 80 d6 00 00	 push	 54912			; 0000d680H
  0008b	6a 00		 push	 0
  0008d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00090	05 e6 04 00 00	 add	 eax, 1254		; 000004e6H
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 _memset
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5028 : 
; 5029 : 			//加载配置
; 5030 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_PARAMETER,0L,NULL,0L);

  0009e	6a 00		 push	 0
  000a0	6a 00		 push	 0
  000a2	6a 00		 push	 0
  000a4	6a 00		 push	 0
  000a6	68 2c 01 00 00	 push	 300			; 0000012cH
  000ab	6a 00		 push	 0
  000ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000b6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b9	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000bf	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000c1	50		 push	 eax
  000c2	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000c5	ff d2		 call	 edx
  000c7	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5031 : 
; 5032 : 			//加载任务
; 5033 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_TASK_LOAD_LIST,0L,NULL,0L);

  000ca	6a 00		 push	 0
  000cc	6a 00		 push	 0
  000ce	6a 00		 push	 0
  000d0	6a 00		 push	 0
  000d2	68 be 02 00 00	 push	 702			; 000002beH
  000d7	6a 00		 push	 0
  000d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dc	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  000e2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e5	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  000eb	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000ed	50		 push	 eax
  000ee	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000f1	ff d2		 call	 edx
  000f3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5034 : 
; 5035 : 			//会员参数
; 5036 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_MEMBER_PARAMETER,0,NULL,0);	

  000f6	6a 00		 push	 0
  000f8	6a 00		 push	 0
  000fa	6a 00		 push	 0
  000fc	6a 00		 push	 0
  000fe	68 36 01 00 00	 push	 310			; 00000136H
  00103	6a 00		 push	 0
  00105	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00108	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0010e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00111	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00117	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00119	50		 push	 eax
  0011a	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0011d	ff d2		 call	 edx
  0011f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5037 : 
; 5038 : 			//成长配置
; 5039 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_GROWLEVEL_CONFIG,0,NULL,0);	

  00122	6a 00		 push	 0
  00124	6a 00		 push	 0
  00126	6a 00		 push	 0
  00128	6a 00		 push	 0
  0012a	68 31 01 00 00	 push	 305			; 00000131H
  0012f	6a 00		 push	 0
  00131	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00134	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0013a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013d	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00143	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00145	50		 push	 eax
  00146	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00149	ff d2		 call	 edx
  0014b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5040 : 
; 5041 : 			//加载签到
; 5042 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_CHECKIN_REWARD,0,NULL,0);	

  0014e	6a 00		 push	 0
  00150	6a 00		 push	 0
  00152	6a 00		 push	 0
  00154	6a 00		 push	 0
  00156	68 33 01 00 00	 push	 307			; 00000133H
  0015b	6a 00		 push	 0
  0015d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00160	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00166	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00169	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0016f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00171	50		 push	 eax
  00172	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00175	ff d2		 call	 edx
  00177	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5043 : 
; 5044 : 			//加载低保
; 5045 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_BASEENSURE,0L,NULL,0L);

  0017a	6a 00		 push	 0
  0017c	6a 00		 push	 0
  0017e	6a 00		 push	 0
  00180	6a 00		 push	 0
  00182	68 34 01 00 00	 push	 308			; 00000134H
  00187	6a 00		 push	 0
  00189	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018c	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00192	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00195	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0019b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0019d	50		 push	 eax
  0019e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001a1	ff d2		 call	 edx
  001a3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 5046 : 			return true;

  001a6	b0 01		 mov	 al, 1
  001a8	eb 02		 jmp	 SHORT $LN1@OnTCPSocke
$LN2@OnTCPSocke:

; 5047 : 		}
; 5048 : 	}
; 5049 : 
; 5050 : 	return true;

  001aa	b0 01		 mov	 al, 1
$LN1@OnTCPSocke:

; 5051 : }

  001ac	5f		 pop	 edi
  001ad	5e		 pop	 esi
  001ae	5b		 pop	 ebx
  001af	8b e5		 mov	 esp, ebp
  001b1	5d		 pop	 ebp
  001b2	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPSocketMainManagerService@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnTCPSocketMainManagerService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
tv65 = -400						; size = 4
tv80 = -398						; size = 2
_pIServerUserItem$1 = -332				; size = 4
_wIndex$2 = -328					; size = 2
_UserEnter$3 = -324					; size = 315
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnTCPSocketMainUserCollect, COMDAT
; _this$ = ecx

; 4961 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 01 00
	00		 sub	 esp, 400		; 00000190H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4962 : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	83 bd 70 fe ff
	ff 64		 cmp	 DWORD PTR tv65[ebp], 100 ; 00000064H
  0002a	74 05		 je	 SHORT $LN7@OnTCPSocke
  0002c	e9 9b 01 00 00	 jmp	 $LN2@OnTCPSocke
$LN7@OnTCPSocke:

; 4963 : 	{
; 4964 : 	case SUB_CS_S_COLLECT_REQUEST:	//用户汇总
; 4965 : 		{
; 4966 : 			//变量定义
; 4967 : 			CMD_CS_C_UserEnter UserEnter;
; 4968 : 			ZeroMemory(&UserEnter,sizeof(UserEnter));

  00031	68 3b 01 00 00	 push	 315			; 0000013bH
  00036	6a 00		 push	 0
  00038	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _UserEnter$3[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _memset
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4969 : 
; 4970 : 			//发送用户
; 4971 : 			WORD wIndex=0;

  00047	33 c0		 xor	 eax, eax
  00049	66 89 85 b8 fe
	ff ff		 mov	 WORD PTR _wIndex$2[ebp], ax
$LN6@OnTCPSocke:

; 4972 : 			do
; 4973 : 			{
; 4974 : 				//获取用户
; 4975 : 				IServerUserItem * pIServerUserItem=m_ServerUserManager.EnumUserItem(wIndex++);

  00050	66 8b 85 b8 fe
	ff ff		 mov	 ax, WORD PTR _wIndex$2[ebp]
  00057	66 89 85 72 fe
	ff ff		 mov	 WORD PTR tv80[ebp], ax
  0005e	0f b7 8d 72 fe
	ff ff		 movzx	 ecx, WORD PTR tv80[ebp]
  00065	51		 push	 ecx
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0006f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00072	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00078	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0007b	ff d2		 call	 edx
  0007d	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _pIServerUserItem$1[ebp], eax
  00083	66 8b 85 b8 fe
	ff ff		 mov	 ax, WORD PTR _wIndex$2[ebp]
  0008a	66 83 c0 01	 add	 ax, 1
  0008e	66 89 85 b8 fe
	ff ff		 mov	 WORD PTR _wIndex$2[ebp], ax

; 4976 : 				if (pIServerUserItem==NULL) break;

  00095	83 bd b4 fe ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$1[ebp], 0
  0009c	75 05		 jne	 SHORT $LN8@OnTCPSocke
  0009e	e9 01 01 00 00	 jmp	 $LN5@OnTCPSocke
$LN8@OnTCPSocke:

; 4977 : 
; 4978 : 				//设置变量
; 4979 : 				UserEnter.dwUserID=pIServerUserItem->GetUserID();

  000a3	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000a9	8b 10		 mov	 edx, DWORD PTR [eax]
  000ab	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000b1	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  000b4	ff d0		 call	 eax
  000b6	89 85 bc fe ff
	ff		 mov	 DWORD PTR _UserEnter$3[ebp], eax

; 4980 : 				UserEnter.dwGameID=pIServerUserItem->GetGameID();

  000bc	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000ca	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  000cd	ff d0		 call	 eax
  000cf	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _UserEnter$3[ebp+4], eax

; 4981 : 				lstrcpyn(UserEnter.szNickName,pIServerUserItem->GetNickName(),CountArray(UserEnter.szNickName));

  000d5	6a 20		 push	 32			; 00000020H
  000d7	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000dd	8b 10		 mov	 edx, DWORD PTR [eax]
  000df	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  000e5	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  000e8	ff d0		 call	 eax
  000ea	50		 push	 eax
  000eb	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _UserEnter$3[ebp+8]
  000f1	51		 push	 ecx
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4982 : 
; 4983 : 				//辅助信息
; 4984 : 				UserEnter.cbGender=pIServerUserItem->GetGender();

  000f8	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  000fe	8b 10		 mov	 edx, DWORD PTR [eax]
  00100	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  00106	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00109	ff d0		 call	 eax
  0010b	88 85 e4 fe ff
	ff		 mov	 BYTE PTR _UserEnter$3[ebp+40], al

; 4985 : 				UserEnter.cbMemberOrder=pIServerUserItem->GetMemberOrder();

  00111	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  00117	8b 10		 mov	 edx, DWORD PTR [eax]
  00119	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  0011f	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  00125	ff d0		 call	 eax
  00127	88 85 e5 fe ff
	ff		 mov	 BYTE PTR _UserEnter$3[ebp+41], al

; 4986 : 				UserEnter.cbMasterOrder=pIServerUserItem->GetMasterOrder();

  0012d	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$1[ebp]
  00133	8b 10		 mov	 edx, DWORD PTR [eax]
  00135	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$1[ebp]
  0013b	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00141	ff d0		 call	 eax
  00143	88 85 e6 fe ff
	ff		 mov	 BYTE PTR _UserEnter$3[ebp+42], al

; 4987 : 
; 4988 : 				//发送数据
; 4989 : 				ASSERT(m_pITCPSocketService!=NULL);

  00149	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	83 b8 b0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147376], 0
  00153	75 19		 jne	 SHORT $LN10@OnTCPSocke
  00155	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  0015b	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0015e	51		 push	 ecx
  0015f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00164	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00169	85 c0		 test	 eax, eax
  0016b	74 01		 je	 SHORT $LN10@OnTCPSocke
  0016d	cc		 int	 3
$LN10@OnTCPSocke:

; 4990 : 				m_pITCPSocketService->SendData(MDM_CS_USER_COLLECT,SUB_CS_C_USER_ENTER,&UserEnter,sizeof(UserEnter));

  0016e	68 3b 01 00 00	 push	 315			; 0000013bH
  00173	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _UserEnter$3[ebp]
  00179	50		 push	 eax
  0017a	6a 01		 push	 1
  0017c	6a 03		 push	 3
  0017e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00181	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00187	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018a	8b 12		 mov	 edx, DWORD PTR [edx]
  0018c	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00192	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00195	ff d0		 call	 eax

; 4991 : 
; 4992 : 			} while (true);

  00197	b8 01 00 00 00	 mov	 eax, 1
  0019c	85 c0		 test	 eax, eax
  0019e	0f 85 ac fe ff
	ff		 jne	 $LN6@OnTCPSocke
$LN5@OnTCPSocke:

; 4993 : 
; 4994 : 			//汇报完成
; 4995 : 			m_bCollectUser=true;

  001a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a7	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 4996 : 			m_pITCPSocketService->SendData(MDM_CS_USER_COLLECT,SUB_CS_C_USER_FINISH);

  001ab	6a 03		 push	 3
  001ad	6a 03		 push	 3
  001af	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  001b8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001bb	8b 01		 mov	 eax, DWORD PTR [ecx]
  001bd	8b 8a b0 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147376]
  001c3	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  001c6	ff d2		 call	 edx

; 4997 : 
; 4998 : 			return true;

  001c8	b0 01		 mov	 al, 1
  001ca	eb 02		 jmp	 SHORT $LN1@OnTCPSocke
$LN2@OnTCPSocke:

; 4999 : 		}
; 5000 : 	}
; 5001 : 
; 5002 : 	return true;

  001cc	b0 01		 mov	 al, 1
$LN1@OnTCPSocke:

; 5003 : }

  001ce	5f		 pop	 edi
  001cf	5e		 pop	 esi
  001d0	5b		 pop	 ebx
  001d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d4	33 cd		 xor	 ecx, ebp
  001d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001db	8b e5		 mov	 esp, ebp
  001dd	5d		 pop	 ebp
  001de	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnTCPSocketMainUserCollect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
tv269 = -1312						; size = 4
tv65 = -1312						; size = 4
_i$1 = -1116						; size = 4
_i$2 = -1112						; size = 4
_pTableFrame$3 = -1108					; size = 4
_pDismissTable$4 = -1104				; size = 4
_CreateRecord$5 = -1100					; size = 82
_CreateSuccess$6 = -1016				; size = 76
_PersonalTableParameter$7 = -940			; size = 48
_pTableFrame$8 = -892					; size = 4
_CreateFailure$9 = -888					; size = 132
_pIServerUserItem$10 = -756				; size = 4
_wBindIndex$11 = -752					; size = 2
_pCreateTableResult$12 = -748				; size = 4
_ControlResult$13 = -741				; size = 1
_pServerRemove$14 = -740				; size = 4
_pGameServerItem$15 = -736				; size = 4
_pServerModify$16 = -732				; size = 4
_i$17 = -728						; size = 2
_pGameServer$18 = -724					; size = 4
_wItemCount$19 = -720					; size = 2
_pGameServerItem$20 = -716				; size = 4
_pServerOnLine$21 = -712				; size = 4
_RegitsterMatch$22 = -708				; size = 697
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnTCPSocketMainServiceInfo, COMDAT
; _this$ = ecx

; 4710 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 05 00
	00		 sub	 esp, 1312		; 00000520H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4711 : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 e0 fa ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	8b 8d e0 fa ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00029	83 e9 6e	 sub	 ecx, 110		; 0000006eH
  0002c	89 8d e0 fa ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00032	83 bd e0 fa ff
	ff 1c		 cmp	 DWORD PTR tv65[ebp], 28	; 0000001cH
  00039	0f 87 77 0a 00
	00		 ja	 $LN2@OnTCPSocke
  0003f	8b 95 e0 fa ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00045	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN42@OnTCPSocke[edx]
  0004c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN43@OnTCPSocke[eax*4]
$LN13@OnTCPSocke:

; 4712 : 	{
; 4713 : 		case SUB_CS_S_SERVER_INFO:		//房间信息
; 4714 : 		{
; 4715 : 			//废弃列表
; 4716 : 			m_ServerListManager.DisuseServerItem();

  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  0005c	e8 00 00 00 00	 call	 ?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::DisuseServerItem

; 4717 : 
; 4718 : 			//注册比赛
; 4719 : 			if (m_pGameServiceOption->wServerType == GAME_GENRE_MATCH)

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00067	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0006b	83 fa 04	 cmp	 edx, 4
  0006e	0f 85 97 02 00
	00		 jne	 $LN14@OnTCPSocke

; 4720 : 			{
; 4721 : 				//构造结构
; 4722 : 				CMD_CS_C_RegisterMatch RegitsterMatch;
; 4723 : 				ZeroMemory(&RegitsterMatch, sizeof(RegitsterMatch));

  00074	68 b9 02 00 00	 push	 697			; 000002b9H
  00079	6a 00		 push	 0
  0007b	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _RegitsterMatch$22[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 _memset
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4724 : 
; 4725 : 				RegitsterMatch.wServerID = m_pGameServiceOption->wServerID;

  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00090	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  00094	66 89 95 3c fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp], dx

; 4726 : 				//基础信息
; 4727 : 				RegitsterMatch.dwMatchID = m_pGameMatchOption->dwMatchID;

  0009b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	89 95 3e fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+2], edx

; 4728 : 				RegitsterMatch.lMatchNo = m_pGameMatchOption->lMatchNo;

  000a9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000af	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000b2	89 95 42 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+6], edx
  000b8	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000bb	89 85 46 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+10], eax

; 4729 : 				RegitsterMatch.cbMatchStatus = m_pGameMatchOption->cbMatchStatus;

  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000c7	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  000ca	88 95 4a fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+14], dl

; 4730 : 				RegitsterMatch.cbMatchType = m_pGameMatchOption->cbMatchType;

  000d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000d6	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  000d9	88 95 4b fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+15], dl

; 4731 : 				lstrcpyn(RegitsterMatch.szMatchName, m_pGameMatchOption->szMatchName, CountArray(RegitsterMatch.szMatchName));

  000df	6a 20		 push	 32			; 00000020H
  000e1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000e7	83 c1 12	 add	 ecx, 18			; 00000012H
  000ea	51		 push	 ecx
  000eb	8d 95 4c fd ff
	ff		 lea	 edx, DWORD PTR _RegitsterMatch$22[ebp+16]
  000f1	52		 push	 edx
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4732 : 				//报名信息
; 4733 : 				RegitsterMatch.cbFeeType = m_pGameMatchOption->cbFeeType;

  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000fe	8a 51 32	 mov	 dl, BYTE PTR [ecx+50]
  00101	88 95 6c fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+48], dl

; 4734 : 				RegitsterMatch.lSignupFee = m_pGameMatchOption->lSignupFee;

  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0010d	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00110	89 95 6e fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+50], edx
  00116	8b 41 3c	 mov	 eax, DWORD PTR [ecx+60]
  00119	89 85 72 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+54], eax

; 4735 : 				RegitsterMatch.cbDeductArea = m_pGameMatchOption->cbDeductArea;

  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00125	8a 51 33	 mov	 dl, BYTE PTR [ecx+51]
  00128	88 95 6d fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+49], dl

; 4736 : 				RegitsterMatch.cbSignupMode = m_pGameMatchOption->cbSignupMode;

  0012e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00131	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00134	8a 51 40	 mov	 dl, BYTE PTR [ecx+64]
  00137	88 95 76 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+58], dl

; 4737 : 				RegitsterMatch.cbJoinCondition = m_pGameMatchOption->cbJoinCondition;

  0013d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00140	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00143	8a 51 41	 mov	 dl, BYTE PTR [ecx+65]
  00146	88 95 77 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+59], dl

; 4738 : 				RegitsterMatch.cbMemberOrder = m_pGameMatchOption->cbMemberOrder;

  0014c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014f	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00152	8a 51 42	 mov	 dl, BYTE PTR [ecx+66]
  00155	88 95 78 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+60], dl

; 4739 : 				RegitsterMatch.dwExperience = m_pGameMatchOption->dwExperience;

  0015b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00161	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00164	89 95 79 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+61], edx

; 4740 : 				RegitsterMatch.dwFromMatchID = m_pGameMatchOption->dwFromMatchID;

  0016a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016d	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00170	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00173	89 95 7d fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+65], edx

; 4741 : 				RegitsterMatch.cbFilterType = m_pGameMatchOption->cbFilterType;

  00179	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017c	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0017f	8a 51 4c	 mov	 dl, BYTE PTR [ecx+76]
  00182	88 95 81 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+69], dl

; 4742 : 				RegitsterMatch.wMaxRankID = m_pGameMatchOption->wMaxRankID;

  00188	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0018e	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  00192	66 89 95 82 fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp+70], dx

; 4743 : 				RegitsterMatch.MatchEndDate = m_pGameMatchOption->MatchEndDate;

  00199	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019c	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0019f	83 c1 50	 add	 ecx, 80			; 00000050H
  001a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a4	89 95 84 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+72], edx
  001aa	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001ad	89 85 88 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+76], eax
  001b3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001b6	89 95 8c fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+80], edx
  001bc	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  001bf	89 85 90 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+84], eax

; 4744 : 				RegitsterMatch.MatchStartDate = m_pGameMatchOption->MatchStartDate;

  001c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001cb	83 c1 60	 add	 ecx, 96			; 00000060H
  001ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d0	89 95 94 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+88], edx
  001d6	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d9	89 85 98 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+92], eax
  001df	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001e2	89 95 9c fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+96], edx
  001e8	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  001eb	89 85 a0 fd ff
	ff		 mov	 DWORD PTR _RegitsterMatch$22[ebp+100], eax

; 4745 : 				//排名方式
; 4746 : 				RegitsterMatch.cbRankingMode = m_pGameMatchOption->cbRankingMode;

  001f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f4	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001f7	8a 51 70	 mov	 dl, BYTE PTR [ecx+112]
  001fa	88 95 a4 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+104], dl

; 4747 : 				RegitsterMatch.wCountInnings = m_pGameMatchOption->wCountInnings;

  00200	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00203	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00206	66 8b 51 72	 mov	 dx, WORD PTR [ecx+114]
  0020a	66 89 95 a5 fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp+105], dx

; 4748 : 				RegitsterMatch.cbFilterGradesMode = m_pGameMatchOption->cbFilterGradesMode;

  00211	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00214	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00217	8a 51 74	 mov	 dl, BYTE PTR [ecx+116]
  0021a	88 95 a7 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+107], dl

; 4749 : 				//分组配置
; 4750 : 				RegitsterMatch.cbDistributeRule = m_pGameMatchOption->cbDistributeRule;

  00220	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00223	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00226	8a 51 75	 mov	 dl, BYTE PTR [ecx+117]
  00229	88 95 a8 fd ff
	ff		 mov	 BYTE PTR _RegitsterMatch$22[ebp+108], dl

; 4751 : 				RegitsterMatch.wMinDistributeUser = m_pGameMatchOption->wMinDistributeUser;

  0022f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00232	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00235	66 8b 51 76	 mov	 dx, WORD PTR [ecx+118]
  00239	66 89 95 a9 fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp+109], dx

; 4752 : 				RegitsterMatch.wDistributeTimeSpace = m_pGameMatchOption->wDistributeTimeSpace;

  00240	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00243	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00246	66 8b 51 78	 mov	 dx, WORD PTR [ecx+120]
  0024a	66 89 95 ab fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp+111], dx

; 4753 : 				RegitsterMatch.wMinPartakeGameUser = m_pGameMatchOption->wMinPartakeGameUser;

  00251	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00254	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00257	66 8b 51 7a	 mov	 dx, WORD PTR [ecx+122]
  0025b	66 89 95 ad fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp+113], dx

; 4754 : 				RegitsterMatch.wMaxPartakeGameUser = m_pGameMatchOption->wMaxPartakeGameUser;

  00262	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00265	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00268	66 8b 51 7c	 mov	 dx, WORD PTR [ecx+124]
  0026c	66 89 95 af fd
	ff ff		 mov	 WORD PTR _RegitsterMatch$22[ebp+115], dx

; 4755 : 
; 4756 : 				CopyMemory(&RegitsterMatch.cbMatchRule, &m_pGameMatchOption->cbMatchRule, sizeof(RegitsterMatch.cbMatchRule));

  00273	68 00 02 00 00	 push	 512			; 00000200H
  00278	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0027b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0027e	83 c1 7e	 add	 ecx, 126		; 0000007eH
  00281	51		 push	 ecx
  00282	8d 95 b1 fd ff
	ff		 lea	 edx, DWORD PTR _RegitsterMatch$22[ebp+117]
  00288	52		 push	 edx
  00289	e8 00 00 00 00	 call	 _memcpy
  0028e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4757 : 				RegitsterMatch.wRewardCount = m_pGameMatchOption->wRewardCount;

  00291	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00294	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00297	66 8b 91 7e 02
	00 00		 mov	 dx, WORD PTR [ecx+638]
  0029e	66 89 55 b1	 mov	 WORD PTR _RegitsterMatch$22[ebp+629], dx

; 4758 : 				CopyMemory(&RegitsterMatch.MatchRewardInfo, m_pGameMatchOption->MatchRewardInfo, sizeof(RegitsterMatch.MatchRewardInfo));

  002a2	6a 42		 push	 66			; 00000042H
  002a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a7	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  002aa	81 c1 80 02 00
	00		 add	 ecx, 640		; 00000280H
  002b0	51		 push	 ecx
  002b1	8d 55 b3	 lea	 edx, DWORD PTR _RegitsterMatch$22[ebp+631]
  002b4	52		 push	 edx
  002b5	e8 00 00 00 00	 call	 _memcpy
  002ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4759 : 
; 4760 : 				//发送数据
; 4761 : 				ASSERT(m_pITCPSocketService != NULL);

  002bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002c0	83 b8 b0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147376], 0
  002c7	75 19		 jne	 SHORT $LN33@OnTCPSocke
  002c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  002cf	83 c1 33	 add	 ecx, 51			; 00000033H
  002d2	51		 push	 ecx
  002d3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  002d8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002dd	85 c0		 test	 eax, eax
  002df	74 01		 je	 SHORT $LN33@OnTCPSocke
  002e1	cc		 int	 3
$LN33@OnTCPSocke:

; 4762 : 				m_pITCPSocketService->SendData(MDM_CS_REGISTER, SUB_CS_C_REGISTER_MATCH, &RegitsterMatch, sizeof(RegitsterMatch));

  002e2	68 b9 02 00 00	 push	 697			; 000002b9H
  002e7	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _RegitsterMatch$22[ebp]
  002ed	50		 push	 eax
  002ee	6a 66		 push	 102			; 00000066H
  002f0	6a 01		 push	 1
  002f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f5	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  002fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fe	8b 12		 mov	 edx, DWORD PTR [edx]
  00300	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00306	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00309	ff d0		 call	 eax
$LN14@OnTCPSocke:

; 4763 : 			}
; 4764 : 
; 4765 : 			return true;

  0030b	b0 01		 mov	 al, 1
  0030d	e9 a6 07 00 00	 jmp	 $LN1@OnTCPSocke
$LN15@OnTCPSocke:

; 4766 : 		}
; 4767 : 		case SUB_CS_S_SERVER_ONLINE:	//房间人数
; 4768 : 		{
; 4769 : 			//效验参数
; 4770 : 			ASSERT(wDataSize == sizeof(CMD_CS_S_ServerOnLine));

  00312	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00316	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00319	74 19		 je	 SHORT $LN34@OnTCPSocke
  0031b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00321	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00324	51		 push	 ecx
  00325	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0032a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0032f	85 c0		 test	 eax, eax
  00331	74 01		 je	 SHORT $LN34@OnTCPSocke
  00333	cc		 int	 3
$LN34@OnTCPSocke:

; 4771 : 			if (wDataSize != sizeof(CMD_CS_S_ServerOnLine)) return false;

  00334	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00338	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0033b	74 07		 je	 SHORT $LN16@OnTCPSocke
  0033d	32 c0		 xor	 al, al
  0033f	e9 74 07 00 00	 jmp	 $LN1@OnTCPSocke
$LN16@OnTCPSocke:

; 4772 : 
; 4773 : 			//变量定义
; 4774 : 			CMD_CS_S_ServerOnLine * pServerOnLine = (CMD_CS_S_ServerOnLine *)pData;

  00344	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00347	89 85 38 fd ff
	ff		 mov	 DWORD PTR _pServerOnLine$21[ebp], eax

; 4775 : 
; 4776 : 			//查找房间
; 4777 : 			CGameServerItem * pGameServerItem = m_ServerListManager.SearchGameServer(pServerOnLine->wServerID);

  0034d	8b 85 38 fd ff
	ff		 mov	 eax, DWORD PTR _pServerOnLine$21[ebp]
  00353	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00356	51		 push	 ecx
  00357	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035a	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  00360	e8 00 00 00 00	 call	 ?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z ; NServerListManager::CServerListManager::SearchGameServer
  00365	89 85 34 fd ff
	ff		 mov	 DWORD PTR _pGameServerItem$20[ebp], eax

; 4778 : 
; 4779 : 			//设置人数
; 4780 : 			if (pGameServerItem != NULL)

  0036b	83 bd 34 fd ff
	ff 00		 cmp	 DWORD PTR _pGameServerItem$20[ebp], 0
  00372	74 12		 je	 SHORT $LN17@OnTCPSocke

; 4781 : 			{
; 4782 : 				pGameServerItem->m_GameServer.dwOnLineCount = pServerOnLine->dwOnLineCount;

  00374	8b 85 34 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$20[ebp]
  0037a	8b 8d 38 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerOnLine$21[ebp]
  00380	8b 51 02	 mov	 edx, DWORD PTR [ecx+2]
  00383	89 50 26	 mov	 DWORD PTR [eax+38], edx
$LN17@OnTCPSocke:

; 4783 : 			}
; 4784 : 
; 4785 : 			return true;

  00386	b0 01		 mov	 al, 1
  00388	e9 2b 07 00 00	 jmp	 $LN1@OnTCPSocke
$LN18@OnTCPSocke:

; 4786 : 		}
; 4787 : 		case SUB_CS_S_SERVER_INSERT:	//房间插入
; 4788 : 		{
; 4789 : 			//效验参数
; 4790 : 			ASSERT(wDataSize%sizeof(tagGameServer) == 0);

  0038d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00391	33 d2		 xor	 edx, edx
  00393	b9 9b 00 00 00	 mov	 ecx, 155		; 0000009bH
  00398	f7 f1		 div	 ecx
  0039a	85 d2		 test	 edx, edx
  0039c	74 19		 je	 SHORT $LN35@OnTCPSocke
  0039e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  003a4	83 c2 50	 add	 edx, 80			; 00000050H
  003a7	52		 push	 edx
  003a8	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  003ad	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003b2	85 c0		 test	 eax, eax
  003b4	74 01		 je	 SHORT $LN35@OnTCPSocke
  003b6	cc		 int	 3
$LN35@OnTCPSocke:

; 4791 : 			if (wDataSize%sizeof(tagGameServer) != 0) return false;

  003b7	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003bb	33 d2		 xor	 edx, edx
  003bd	b9 9b 00 00 00	 mov	 ecx, 155		; 0000009bH
  003c2	f7 f1		 div	 ecx
  003c4	85 d2		 test	 edx, edx
  003c6	74 07		 je	 SHORT $LN19@OnTCPSocke
  003c8	32 c0		 xor	 al, al
  003ca	e9 e9 06 00 00	 jmp	 $LN1@OnTCPSocke
$LN19@OnTCPSocke:

; 4792 : 
; 4793 : 			//变量定义
; 4794 : 			WORD wItemCount = wDataSize / sizeof(tagGameServer);

  003cf	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003d3	33 d2		 xor	 edx, edx
  003d5	b9 9b 00 00 00	 mov	 ecx, 155		; 0000009bH
  003da	f7 f1		 div	 ecx
  003dc	66 89 85 30 fd
	ff ff		 mov	 WORD PTR _wItemCount$19[ebp], ax

; 4795 : 			tagGameServer * pGameServer = (tagGameServer *)pData;

  003e3	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  003e6	89 85 2c fd ff
	ff		 mov	 DWORD PTR _pGameServer$18[ebp], eax

; 4796 : 
; 4797 : 			//更新数据
; 4798 : 			for (WORD i = 0; i < wItemCount; i++)

  003ec	33 c0		 xor	 eax, eax
  003ee	66 89 85 28 fd
	ff ff		 mov	 WORD PTR _i$17[ebp], ax
  003f5	eb 12		 jmp	 SHORT $LN6@OnTCPSocke
$LN4@OnTCPSocke:
  003f7	66 8b 85 28 fd
	ff ff		 mov	 ax, WORD PTR _i$17[ebp]
  003fe	66 83 c0 01	 add	 ax, 1
  00402	66 89 85 28 fd
	ff ff		 mov	 WORD PTR _i$17[ebp], ax
$LN6@OnTCPSocke:
  00409	0f b7 85 28 fd
	ff ff		 movzx	 eax, WORD PTR _i$17[ebp]
  00410	0f b7 8d 30 fd
	ff ff		 movzx	 ecx, WORD PTR _wItemCount$19[ebp]
  00417	3b c1		 cmp	 eax, ecx
  00419	7d 35		 jge	 SHORT $LN5@OnTCPSocke

; 4799 : 			{
; 4800 : 				m_ServerListManager.InsertGameServer(pGameServer++);

  0041b	8b 85 2c fd ff
	ff		 mov	 eax, DWORD PTR _pGameServer$18[ebp]
  00421	89 85 e0 fa ff
	ff		 mov	 DWORD PTR tv269[ebp], eax
  00427	8b 8d e0 fa ff
	ff		 mov	 ecx, DWORD PTR tv269[ebp]
  0042d	51		 push	 ecx
  0042e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00431	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  00437	e8 00 00 00 00	 call	 ?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z ; NServerListManager::CServerListManager::InsertGameServer
  0043c	8b 95 2c fd ff
	ff		 mov	 edx, DWORD PTR _pGameServer$18[ebp]
  00442	81 c2 9b 00 00
	00		 add	 edx, 155		; 0000009bH
  00448	89 95 2c fd ff
	ff		 mov	 DWORD PTR _pGameServer$18[ebp], edx

; 4801 : 			}

  0044e	eb a7		 jmp	 SHORT $LN4@OnTCPSocke
$LN5@OnTCPSocke:

; 4802 : 
; 4803 : 			return true;

  00450	b0 01		 mov	 al, 1
  00452	e9 61 06 00 00	 jmp	 $LN1@OnTCPSocke
$LN20@OnTCPSocke:

; 4804 : 		}
; 4805 : 		case SUB_CS_S_SERVER_MODIFY:	//房间修改
; 4806 : 		{
; 4807 : 			//效验参数
; 4808 : 			ASSERT(wDataSize == sizeof(CMD_CS_S_ServerModify));

  00457	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0045b	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  0045e	74 19		 je	 SHORT $LN36@OnTCPSocke
  00460	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00466	83 c1 62	 add	 ecx, 98			; 00000062H
  00469	51		 push	 ecx
  0046a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0046f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00474	85 c0		 test	 eax, eax
  00476	74 01		 je	 SHORT $LN36@OnTCPSocke
  00478	cc		 int	 3
$LN36@OnTCPSocke:

; 4809 : 			if (wDataSize != sizeof(CMD_CS_S_ServerModify)) return false;

  00479	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0047d	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  00480	74 07		 je	 SHORT $LN21@OnTCPSocke
  00482	32 c0		 xor	 al, al
  00484	e9 2f 06 00 00	 jmp	 $LN1@OnTCPSocke
$LN21@OnTCPSocke:

; 4810 : 
; 4811 : 			//变量定义
; 4812 : 			CMD_CS_S_ServerModify * pServerModify = (CMD_CS_S_ServerModify *)pData;

  00489	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0048c	89 85 24 fd ff
	ff		 mov	 DWORD PTR _pServerModify$16[ebp], eax

; 4813 : 
; 4814 : 			//查找房间
; 4815 : 			CGameServerItem * pGameServerItem = m_ServerListManager.SearchGameServer(pServerModify->wServerID);

  00492	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR _pServerModify$16[ebp]
  00498	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  0049c	51		 push	 ecx
  0049d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a0	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  004a6	e8 00 00 00 00	 call	 ?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z ; NServerListManager::CServerListManager::SearchGameServer
  004ab	89 85 20 fd ff
	ff		 mov	 DWORD PTR _pGameServerItem$15[ebp], eax

; 4816 : 
; 4817 : 			//设置房间
; 4818 : 			if (pGameServerItem != NULL)

  004b1	83 bd 20 fd ff
	ff 00		 cmp	 DWORD PTR _pGameServerItem$15[ebp], 0
  004b8	0f 84 c5 00 00
	00		 je	 $LN22@OnTCPSocke

; 4819 : 			{
; 4820 : 				pGameServerItem->m_GameServer.wNodeID = pServerModify->wNodeID;

  004be	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$15[ebp]
  004c4	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerModify$16[ebp]
  004ca	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  004ce	66 89 50 03	 mov	 WORD PTR [eax+3], dx

; 4821 : 				pGameServerItem->m_GameServer.wSortID = pServerModify->wSortID;

  004d2	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$15[ebp]
  004d8	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerModify$16[ebp]
  004de	66 8b 11	 mov	 dx, WORD PTR [ecx]
  004e1	66 89 50 05	 mov	 WORD PTR [eax+5], dx

; 4822 : 				pGameServerItem->m_GameServer.wServerPort = pServerModify->wServerPort;

  004e5	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$15[ebp]
  004eb	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerModify$16[ebp]
  004f1	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  004f5	66 89 50 0f	 mov	 WORD PTR [eax+15], dx

; 4823 : 				pGameServerItem->m_GameServer.dwOnLineCount = pServerModify->dwOnLineCount;

  004f9	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$15[ebp]
  004ff	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerModify$16[ebp]
  00505	8b 51 0a	 mov	 edx, DWORD PTR [ecx+10]
  00508	89 50 26	 mov	 DWORD PTR [eax+38], edx

; 4824 : 				pGameServerItem->m_GameServer.dwFullCount = pServerModify->dwFullCount;

  0050b	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$15[ebp]
  00511	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerModify$16[ebp]
  00517	8b 51 12	 mov	 edx, DWORD PTR [ecx+18]
  0051a	89 50 2e	 mov	 DWORD PTR [eax+46], edx

; 4825 : 				pGameServerItem->m_GameServer.dwSetPlayerCount = pServerModify->dwSetPlayerCount;

  0051d	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR _pGameServerItem$15[ebp]
  00523	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR _pServerModify$16[ebp]
  00529	8b 51 56	 mov	 edx, DWORD PTR [ecx+86]
  0052c	89 50 78	 mov	 DWORD PTR [eax+120], edx

; 4826 : 				lstrcpyn(pGameServerItem->m_GameServer.szServerName, pServerModify->szServerName, CountArray(pGameServerItem->m_GameServer.szServerName));

  0052f	6a 20		 push	 32			; 00000020H
  00531	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR _pServerModify$16[ebp]
  00537	83 c0 36	 add	 eax, 54			; 00000036H
  0053a	50		 push	 eax
  0053b	8b 8d 20 fd ff
	ff		 mov	 ecx, DWORD PTR _pGameServerItem$15[ebp]
  00541	83 c1 52	 add	 ecx, 82			; 00000052H
  00544	51		 push	 ecx
  00545	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4827 : 				lstrcpyn(pGameServerItem->m_GameServer.szServerAddr, pServerModify->szServerAddr, CountArray(pGameServerItem->m_GameServer.szServerAddr));

  0054b	6a 20		 push	 32			; 00000020H
  0054d	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR _pServerModify$16[ebp]
  00553	83 c0 16	 add	 eax, 22			; 00000016H
  00556	50		 push	 eax
  00557	8b 8d 20 fd ff
	ff		 mov	 ecx, DWORD PTR _pGameServerItem$15[ebp]
  0055d	83 c1 32	 add	 ecx, 50			; 00000032H
  00560	51		 push	 ecx
  00561	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4828 : 				lstrcpyn(pGameServerItem->m_GameServer.szGameInfomation, pServerModify->szGameInfomation, CountArray(pGameServerItem->m_GameServer.szGameInfomation));

  00567	6a 20		 push	 32			; 00000020H
  00569	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR _pServerModify$16[ebp]
  0056f	83 c0 5a	 add	 eax, 90			; 0000005aH
  00572	50		 push	 eax
  00573	8b 8d 20 fd ff
	ff		 mov	 ecx, DWORD PTR _pGameServerItem$15[ebp]
  00579	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0057c	51		 push	 ecx
  0057d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN22@OnTCPSocke:

; 4829 : 
; 4830 : 			}
; 4831 : 
; 4832 : 			return true;

  00583	b0 01		 mov	 al, 1
  00585	e9 2e 05 00 00	 jmp	 $LN1@OnTCPSocke
$LN23@OnTCPSocke:

; 4833 : 		}
; 4834 : 		case SUB_CS_S_SERVER_REMOVE:	//房间删除
; 4835 : 		{
; 4836 : 			//效验参数
; 4837 : 			ASSERT(wDataSize == sizeof(CMD_CS_S_ServerRemove));

  0058a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0058e	83 f8 02	 cmp	 eax, 2
  00591	74 19		 je	 SHORT $LN37@OnTCPSocke
  00593	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00599	83 c1 7f	 add	 ecx, 127		; 0000007fH
  0059c	51		 push	 ecx
  0059d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  005a2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  005a7	85 c0		 test	 eax, eax
  005a9	74 01		 je	 SHORT $LN37@OnTCPSocke
  005ab	cc		 int	 3
$LN37@OnTCPSocke:

; 4838 : 			if (wDataSize != sizeof(CMD_CS_S_ServerRemove)) return false;

  005ac	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005b0	83 f8 02	 cmp	 eax, 2
  005b3	74 07		 je	 SHORT $LN24@OnTCPSocke
  005b5	32 c0		 xor	 al, al
  005b7	e9 fc 04 00 00	 jmp	 $LN1@OnTCPSocke
$LN24@OnTCPSocke:

; 4839 : 
; 4840 : 			//变量定义
; 4841 : 			CMD_CS_S_ServerRemove * pServerRemove = (CMD_CS_S_ServerRemove *)pData;

  005bc	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  005bf	89 85 1c fd ff
	ff		 mov	 DWORD PTR _pServerRemove$14[ebp], eax

; 4842 : 
; 4843 : 			//变量定义
; 4844 : 			m_ServerListManager.DeleteGameServer(pServerRemove->wServerID);

  005c5	8b 85 1c fd ff
	ff		 mov	 eax, DWORD PTR _pServerRemove$14[ebp]
  005cb	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  005ce	51		 push	 ecx
  005cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005d2	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  005d8	e8 00 00 00 00	 call	 ?DeleteGameServer@CServerListManager@NServerListManager@@QAE_NG@Z ; NServerListManager::CServerListManager::DeleteGameServer

; 4845 : 
; 4846 : 			return true;

  005dd	b0 01		 mov	 al, 1
  005df	e9 d4 04 00 00	 jmp	 $LN1@OnTCPSocke
$LN25@OnTCPSocke:

; 4847 : 		}
; 4848 : 		case SUB_CS_S_SERVER_FINISH:	//房间完成
; 4849 : 		{
; 4850 : 			//清理列表
; 4851 : 			m_ServerListManager.CleanServerItem();

  005e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e7	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  005ed	e8 00 00 00 00	 call	 ?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::CleanServerItem

; 4852 : 
; 4853 : 			//事件处理
; 4854 : 			CP_ControlResult ControlResult;
; 4855 : 			ControlResult.cbSuccess = ER_SUCCESS;

  005f2	c6 85 1b fd ff
	ff 01		 mov	 BYTE PTR _ControlResult$13[ebp], 1

; 4856 : 			SendUIControlPacket(UI_CORRESPOND_RESULT, &ControlResult, sizeof(ControlResult));

  005f9	6a 01		 push	 1
  005fb	8d 85 1b fd ff
	ff		 lea	 eax, DWORD PTR _ControlResult$13[ebp]
  00601	50		 push	 eax
  00602	6a 01		 push	 1
  00604	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00607	e8 00 00 00 00	 call	 ?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::SendUIControlPacket

; 4857 : 
; 4858 : 			return true;

  0060c	b0 01		 mov	 al, 1
  0060e	e9 a5 04 00 00	 jmp	 $LN1@OnTCPSocke
$LN26@OnTCPSocke:

; 4859 : 		}
; 4860 : 	case SUB_CS_S_CREATE_TABLE_RESULT:		//创建结果
; 4861 : 		{
; 4862 : 			//效验参数
; 4863 : 			ASSERT(wDataSize==sizeof(CMD_CS_S_CreateTableResult));

  00613	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00617	3d ef 00 00 00	 cmp	 eax, 239		; 000000efH
  0061c	74 1c		 je	 SHORT $LN38@OnTCPSocke
  0061e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00624	81 c1 99 00 00
	00		 add	 ecx, 153		; 00000099H
  0062a	51		 push	 ecx
  0062b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00630	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00635	85 c0		 test	 eax, eax
  00637	74 01		 je	 SHORT $LN38@OnTCPSocke
  00639	cc		 int	 3
$LN38@OnTCPSocke:

; 4864 : 			if (wDataSize!=sizeof(CMD_CS_S_CreateTableResult)) return false;

  0063a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0063e	3d ef 00 00 00	 cmp	 eax, 239		; 000000efH
  00643	74 07		 je	 SHORT $LN27@OnTCPSocke
  00645	32 c0		 xor	 al, al
  00647	e9 6c 04 00 00	 jmp	 $LN1@OnTCPSocke
$LN27@OnTCPSocke:

; 4865 : 
; 4866 : 			//变量定义
; 4867 : 			CMD_CS_S_CreateTableResult * pCreateTableResult=(CMD_CS_S_CreateTableResult *)pData;

  0064c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0064f	89 85 14 fd ff
	ff		 mov	 DWORD PTR _pCreateTableResult$12[ebp], eax

; 4868 : 
; 4869 : 			//获取用户
; 4870 : 			WORD wBindIndex=LOWORD(pCreateTableResult->dwSocketID);

  00655	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  0065b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0065d	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00663	66 89 8d 10 fd
	ff ff		 mov	 WORD PTR _wBindIndex$11[ebp], cx

; 4871 : 			IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0066a	0f b7 85 10 fd
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$11[ebp]
  00671	50		 push	 eax
  00672	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00675	8b 11		 mov	 edx, DWORD PTR [ecx]
  00677	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0067a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0067d	ff d0		 call	 eax
  0067f	89 85 0c fd ff
	ff		 mov	 DWORD PTR _pIServerUserItem$10[ebp], eax

; 4872 : 			if (pIServerUserItem==NULL) return false;

  00685	83 bd 0c fd ff
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$10[ebp], 0
  0068c	75 07		 jne	 SHORT $LN28@OnTCPSocke
  0068e	32 c0		 xor	 al, al
  00690	e9 23 04 00 00	 jmp	 $LN1@OnTCPSocke
$LN28@OnTCPSocke:

; 4873 : 
; 4874 : 			if(pCreateTableResult->PersonalTable.dwDrawCountLimit == 0 && pCreateTableResult->PersonalTable.dwDrawTimeLimit == 0)

  00695	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  0069b	83 78 2e 00	 cmp	 DWORD PTR [eax+46], 0
  0069f	75 7f		 jne	 SHORT $LN29@OnTCPSocke
  006a1	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  006a7	83 78 32 00	 cmp	 DWORD PTR [eax+50], 0
  006ab	75 73		 jne	 SHORT $LN29@OnTCPSocke

; 4875 : 			{
; 4876 : 				//构造数据
; 4877 : 				CMD_GR_CreateFailure CreateFailure;
; 4878 : 				ZeroMemory(&CreateFailure, sizeof(CMD_GR_CreateFailure));

  006ad	68 84 00 00 00	 push	 132			; 00000084H
  006b2	6a 00		 push	 0
  006b4	8d 85 88 fc ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$9[ebp]
  006ba	50		 push	 eax
  006bb	e8 00 00 00 00	 call	 _memset
  006c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4879 : 
; 4880 : 				CreateFailure.lErrorCode = 1;

  006c3	c7 85 88 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR _CreateFailure$9[ebp], 1

; 4881 : 				lstrcpyn(CreateFailure.szDescribeString, TEXT("创建房间参数不正确！"), CountArray(CreateFailure.szDescribeString));

  006cd	68 80 00 00 00	 push	 128			; 00000080H
  006d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OAHKEPFP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?N?J?$PN?$LC?$LL?U?$PN?H?$LH?$KD?$KB@
  006d7	8d 85 8c fc ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$9[ebp+4]
  006dd	50		 push	 eax
  006de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4882 : 
; 4883 : 				//发送数据
; 4884 : 				m_pITCPNetworkEngine->SendData(pCreateTableResult->dwSocketID, MDM_GR_PERSONAL_TABLE, SUB_GR_CREATE_FAILURE, &CreateFailure, sizeof(CMD_GR_CreateFailure));

  006e4	68 84 00 00 00	 push	 132			; 00000084H
  006e9	8d 85 88 fc ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$9[ebp]
  006ef	50		 push	 eax
  006f0	6a 03		 push	 3
  006f2	68 d2 00 00 00	 push	 210			; 000000d2H
  006f7	8b 8d 14 fd ff
	ff		 mov	 ecx, DWORD PTR _pCreateTableResult$12[ebp]
  006fd	8b 11		 mov	 edx, DWORD PTR [ecx]
  006ff	52		 push	 edx
  00700	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00703	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00709	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0070c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0070e	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00714	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00717	ff d2		 call	 edx

; 4885 : 
; 4886 : 				return false;

  00719	32 c0		 xor	 al, al
  0071b	e9 98 03 00 00	 jmp	 $LN1@OnTCPSocke
$LN29@OnTCPSocke:

; 4887 : 			}
; 4888 : 
; 4889 : 			//获取桌子
; 4890 : 			CTableFrame* pTableFrame = m_TableFrameArray[pCreateTableResult->PersonalTable.dwTableID];

  00720	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  00726	8b 48 26	 mov	 ecx, DWORD PTR [eax+38]
  00729	51		 push	 ecx
  0072a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0072d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00733	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00738	8b 10		 mov	 edx, DWORD PTR [eax]
  0073a	89 95 84 fc ff
	ff		 mov	 DWORD PTR _pTableFrame$8[ebp], edx

; 4891 : 			ASSERT(pTableFrame != NULL);

  00740	83 bd 84 fc ff
	ff 00		 cmp	 DWORD PTR _pTableFrame$8[ebp], 0
  00747	75 1a		 jne	 SHORT $LN39@OnTCPSocke
  00749	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  0074e	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  00753	50		 push	 eax
  00754	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00759	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0075e	85 c0		 test	 eax, eax
  00760	74 01		 je	 SHORT $LN39@OnTCPSocke
  00762	cc		 int	 3
$LN39@OnTCPSocke:

; 4892 : 
; 4893 : 			tagPersonalTableParameter PersonalTableParameter = pTableFrame->GetPersonalTableParameter();

  00763	8d 85 54 fc ff
	ff		 lea	 eax, DWORD PTR _PersonalTableParameter$7[ebp]
  00769	50		 push	 eax
  0076a	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$8[ebp]
  00770	8b 11		 mov	 edx, DWORD PTR [ecx]
  00772	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$8[ebp]
  00778	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  0077b	ff d0		 call	 eax

; 4894 : 			pTableFrame->SetPersonalRoomID(pCreateTableResult->PersonalTable.dwPersonalRoomID);

  0077d	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  00783	8b 48 3e	 mov	 ecx, DWORD PTR [eax+62]
  00786	51		 push	 ecx
  00787	8b 95 84 fc ff
	ff		 mov	 edx, DWORD PTR _pTableFrame$8[ebp]
  0078d	8b 02		 mov	 eax, DWORD PTR [edx]
  0078f	8b 8d 84 fc ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$8[ebp]
  00795	8b 90 40 01 00
	00		 mov	 edx, DWORD PTR [eax+320]
  0079b	ff d2		 call	 edx

; 4895 : 
; 4896 : 			//构造数据
; 4897 : 			CMD_GR_CreateSuccess CreateSuccess;
; 4898 : 			ZeroMemory(&CreateSuccess, sizeof(CMD_GR_CreateSuccess));

  0079d	6a 4c		 push	 76			; 0000004cH
  0079f	6a 00		 push	 0
  007a1	8d 85 08 fc ff
	ff		 lea	 eax, DWORD PTR _CreateSuccess$6[ebp]
  007a7	50		 push	 eax
  007a8	e8 00 00 00 00	 call	 _memset
  007ad	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4899 : 
; 4900 : 			CreateSuccess.dwDrawCountLimit = PersonalTableParameter.dwPlayTurnCount;

  007b0	8b 85 67 fc ff
	ff		 mov	 eax, DWORD PTR _PersonalTableParameter$7[ebp+19]
  007b6	89 85 0c fc ff
	ff		 mov	 DWORD PTR _CreateSuccess$6[ebp+4], eax

; 4901 : 			CreateSuccess.dwDrawTimeLimit = PersonalTableParameter.dwPlayTimeLimit;

  007bc	8b 85 6b fc ff
	ff		 mov	 eax, DWORD PTR _PersonalTableParameter$7[ebp+23]
  007c2	89 85 10 fc ff
	ff		 mov	 DWORD PTR _CreateSuccess$6[ebp+8], eax

; 4902 : 
; 4903 : 			//CreateSuccess.lDiamond = pIServerUserItem->GetUserInfo()->lDiamond;
; 4904 : 			CreateSuccess.bConsumptionType = pIServerUserItem->GetUserInfo()->bConsumptionType;

  007c8	8b 85 0c fd ff
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$10[ebp]
  007ce	8b 10		 mov	 edx, DWORD PTR [eax]
  007d0	8b 8d 0c fd ff
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$10[ebp]
  007d6	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  007d9	ff d0		 call	 eax
  007db	05 98 00 00 00	 add	 eax, 152		; 00000098H
  007e0	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  007e5	8b f0		 mov	 esi, eax
  007e7	8d bd 14 fc ff
	ff		 lea	 edi, DWORD PTR _CreateSuccess$6[ebp+12]
  007ed	f3 a5		 rep movsd

; 4905 : 
; 4906 : 			CreateSuccess.dwPersonalRoomID = pCreateTableResult->PersonalTable.dwPersonalRoomID;

  007ef	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  007f5	8b 48 3e	 mov	 ecx, DWORD PTR [eax+62]
  007f8	89 8d 08 fc ff
	ff		 mov	 DWORD PTR _CreateSuccess$6[ebp], ecx

; 4907 : 			
; 4908 : 			m_pITCPNetworkEngine->SendData(pCreateTableResult->dwSocketID, MDM_GR_PERSONAL_TABLE, SUB_GR_CREATE_SUCCESS, &CreateSuccess, sizeof(CMD_GR_CreateSuccess));

  007fe	6a 4c		 push	 76			; 0000004cH
  00800	8d 85 08 fc ff
	ff		 lea	 eax, DWORD PTR _CreateSuccess$6[ebp]
  00806	50		 push	 eax
  00807	6a 02		 push	 2
  00809	68 d2 00 00 00	 push	 210			; 000000d2H
  0080e	8b 8d 14 fd ff
	ff		 mov	 ecx, DWORD PTR _pCreateTableResult$12[ebp]
  00814	8b 11		 mov	 edx, DWORD PTR [ecx]
  00816	52		 push	 edx
  00817	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0081a	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00820	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00823	8b 01		 mov	 eax, DWORD PTR [ecx]
  00825	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0082b	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0082e	ff d2		 call	 edx

; 4909 : 
; 4910 : 
; 4911 : 			//插入桌子创建记录
; 4912 : 			DBR_GR_InsertCreateRecord  CreateRecord;
; 4913 : 			ZeroMemory(&CreateRecord, sizeof(DBR_GR_InsertCreateRecord));

  00830	6a 52		 push	 82			; 00000052H
  00832	6a 00		 push	 0
  00834	8d 85 b4 fb ff
	ff		 lea	 eax, DWORD PTR _CreateRecord$5[ebp]
  0083a	50		 push	 eax
  0083b	e8 00 00 00 00	 call	 _memset
  00840	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4914 : 
; 4915 : 			//桌子数据
; 4916 : 			CreateRecord.dwServerID	= pCreateTableResult->PersonalTable.dwServerID;

  00843	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  00849	8b 48 1e	 mov	 ecx, DWORD PTR [eax+30]
  0084c	89 8d b8 fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp+4], ecx

; 4917 : 			CreateRecord.dwUserID = pCreateTableResult->PersonalTable.dwUserID;

  00852	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  00858	8b 48 2a	 mov	 ecx, DWORD PTR [eax+42]
  0085b	89 8d b4 fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp], ecx

; 4918 : 			CreateRecord.lCellScore = pCreateTableResult->PersonalTable.lCellScore;

  00861	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  00867	8b 48 36	 mov	 ecx, DWORD PTR [eax+54]
  0086a	89 8d bc fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp+8], ecx
  00870	8b 50 3a	 mov	 edx, DWORD PTR [eax+58]
  00873	89 95 c0 fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp+12], edx

; 4919 : 			CreateRecord.dwDrawCountLimit = pCreateTableResult->PersonalTable.dwDrawCountLimit;

  00879	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  0087f	8a 48 2e	 mov	 cl, BYTE PTR [eax+46]
  00882	88 8d c4 fb ff
	ff		 mov	 BYTE PTR _CreateRecord$5[ebp+16], cl

; 4920 : 			CreateRecord.dwDrawTimeLimit = pCreateTableResult->PersonalTable.dwDrawTimeLimit;

  00888	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  0088e	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00891	89 8d c5 fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp+17], ecx

; 4921 : 			lstrcpyn(CreateRecord.szPassword, pCreateTableResult->PersonalTable.szPassword, CountArray(CreateRecord.szPassword));

  00897	6a 21		 push	 33			; 00000021H
  00899	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  0089f	83 c0 4f	 add	 eax, 79			; 0000004fH
  008a2	50		 push	 eax
  008a3	8d 8d cd fb ff
	ff		 lea	 ecx, DWORD PTR _CreateRecord$5[ebp+25]
  008a9	51		 push	 ecx
  008aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4922 : 			CreateRecord.dwPersonalRoomID = pCreateTableResult->PersonalTable.dwPersonalRoomID;

  008b0	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  008b6	8b 48 3e	 mov	 ecx, DWORD PTR [eax+62]
  008b9	89 8d c9 fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp+21], ecx

; 4923 : 			CreateRecord.wJoinGamePeopleCount = pCreateTableResult->PersonalTable.wJoinGamePeopleCount;

  008bf	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  008c5	8a 48 4d	 mov	 cl, BYTE PTR [eax+77]
  008c8	88 8d f2 fb ff
	ff		 mov	 BYTE PTR _CreateRecord$5[ebp+62], cl

; 4924 : 			CreateRecord.dwRoomTax =  pCreateTableResult->PersonalTable.dwRoomTax;

  008ce	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  008d4	8b 48 49	 mov	 ecx, DWORD PTR [eax+73]
  008d7	89 8d ee fb ff
	ff		 mov	 DWORD PTR _CreateRecord$5[ebp+58], ecx

; 4925 : 			lstrcpyn(CreateRecord.szClientAddr, pCreateTableResult->szClientAddr, CountArray(CreateRecord.szClientAddr));

  008dd	6a 10		 push	 16			; 00000010H
  008df	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTableResult$12[ebp]
  008e5	83 c0 08	 add	 eax, 8
  008e8	50		 push	 eax
  008e9	8d 8d f3 fb ff
	ff		 lea	 ecx, DWORD PTR _CreateRecord$5[ebp+63]
  008ef	51		 push	 ecx
  008f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4926 : 
; 4927 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0, DBR_GR_INSERT_CREATE_RECORD, 0, &CreateRecord, sizeof(CreateRecord));

  008f6	6a 00		 push	 0
  008f8	6a 52		 push	 82			; 00000052H
  008fa	8d 85 b4 fb ff
	ff		 lea	 eax, DWORD PTR _CreateRecord$5[ebp]
  00900	50		 push	 eax
  00901	6a 00		 push	 0
  00903	68 18 05 00 00	 push	 1304			; 00000518H
  00908	6a 00		 push	 0
  0090a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0090d	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  00913	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00916	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0091c	8b 12		 mov	 edx, DWORD PTR [edx]
  0091e	51		 push	 ecx
  0091f	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00922	ff d0		 call	 eax
  00924	83 c4 1c	 add	 esp, 28			; 0000001cH

; 4928 : 
; 4929 : 			return true;

  00927	b0 01		 mov	 al, 1
  00929	e9 8a 01 00 00	 jmp	 $LN1@OnTCPSocke
$LN30@OnTCPSocke:

; 4930 : 		}
; 4931 : 	case SUB_CS_C_DISMISS_TABLE_RESULT:		//解散结果
; 4932 : 		{
; 4933 : 			ASSERT(wDataSize == sizeof(CMD_CS_C_DismissTableResult));

  0092e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00932	3d b5 02 00 00	 cmp	 eax, 693		; 000002b5H
  00937	74 1c		 je	 SHORT $LN40@OnTCPSocke
  00939	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  0093f	81 c1 df 00 00
	00		 add	 ecx, 223		; 000000dfH
  00945	51		 push	 ecx
  00946	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0094b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00950	85 c0		 test	 eax, eax
  00952	74 01		 je	 SHORT $LN40@OnTCPSocke
  00954	cc		 int	 3
$LN40@OnTCPSocke:

; 4934 : 			if(wDataSize != sizeof(CMD_CS_C_DismissTableResult)) return false;

  00955	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00959	3d b5 02 00 00	 cmp	 eax, 693		; 000002b5H
  0095e	74 07		 je	 SHORT $LN31@OnTCPSocke
  00960	32 c0		 xor	 al, al
  00962	e9 51 01 00 00	 jmp	 $LN1@OnTCPSocke
$LN31@OnTCPSocke:

; 4935 : 
; 4936 : 			CMD_CS_C_DismissTableResult* pDismissTable = (CMD_CS_C_DismissTableResult*)pData;

  00967	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0096a	89 85 b0 fb ff
	ff		 mov	 DWORD PTR _pDismissTable$4[ebp], eax

; 4937 : 			//获取桌子
; 4938 : 			CTableFrame* pTableFrame = m_TableFrameArray[pDismissTable->PersonalTableInfo.dwTableID];

  00970	8b 85 b0 fb ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$4[ebp]
  00976	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00979	51		 push	 ecx
  0097a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0097d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00983	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00988	8b 10		 mov	 edx, DWORD PTR [eax]
  0098a	89 95 ac fb ff
	ff		 mov	 DWORD PTR _pTableFrame$3[ebp], edx

; 4939 : 			ASSERT(pTableFrame != NULL);

  00990	83 bd ac fb ff
	ff 00		 cmp	 DWORD PTR _pTableFrame$3[ebp], 0
  00997	75 1a		 jne	 SHORT $LN41@OnTCPSocke
  00999	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  0099e	05 e5 00 00 00	 add	 eax, 229		; 000000e5H
  009a3	50		 push	 eax
  009a4	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  009a9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  009ae	85 c0		 test	 eax, eax
  009b0	74 01		 je	 SHORT $LN41@OnTCPSocke
  009b2	cc		 int	 3
$LN41@OnTCPSocke:

; 4940 : 
; 4941 : 			for (int i = 0; i < pTableFrame->GetChairCount(); i++)

  009b3	c7 85 a8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  009bd	eb 0f		 jmp	 SHORT $LN9@OnTCPSocke
$LN7@OnTCPSocke:
  009bf	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  009c5	83 c0 01	 add	 eax, 1
  009c8	89 85 a8 fb ff
	ff		 mov	 DWORD PTR _i$2[ebp], eax
$LN9@OnTCPSocke:
  009ce	8b 85 ac fb ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$3[ebp]
  009d4	8b 10		 mov	 edx, DWORD PTR [eax]
  009d6	8b 8d ac fb ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  009dc	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  009df	ff d0		 call	 eax
  009e1	0f b7 c8	 movzx	 ecx, ax
  009e4	39 8d a8 fb ff
	ff		 cmp	 DWORD PTR _i$2[ebp], ecx
  009ea	7d 36		 jge	 SHORT $LN8@OnTCPSocke

; 4942 : 			{
; 4943 : 				memcpy(&(pDismissTable->PersonalUserScoreInfo[i]), &(pTableFrame->m_PersonalUserScoreInfo[i]),  sizeof(tagPersonalUserScoreInfo));

  009ec	6a 3c		 push	 60			; 0000003cH
  009ee	6b 85 a8 fb ff
	ff 3c		 imul	 eax, DWORD PTR _i$2[ebp], 60
  009f5	8b 8d ac fb ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  009fb	8d 94 01 9d 11
	00 00		 lea	 edx, DWORD PTR [ecx+eax+4509]
  00a02	52		 push	 edx
  00a03	6b 85 a8 fb ff
	ff 3c		 imul	 eax, DWORD PTR _i$2[ebp], 60
  00a0a	8b 8d b0 fb ff
	ff		 mov	 ecx, DWORD PTR _pDismissTable$4[ebp]
  00a10	8d 94 01 d5 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+213]
  00a17	52		 push	 edx
  00a18	e8 00 00 00 00	 call	 _memcpy
  00a1d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4944 : 			}

  00a20	eb 9d		 jmp	 SHORT $LN7@OnTCPSocke
$LN8@OnTCPSocke:

; 4945 : 			for (int i = 0; i < pTableFrame->GetChairCount(); i++)

  00a22	c7 85 a4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1[ebp], 0
  00a2c	eb 0f		 jmp	 SHORT $LN12@OnTCPSocke
$LN10@OnTCPSocke:
  00a2e	8b 85 a4 fb ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  00a34	83 c0 01	 add	 eax, 1
  00a37	89 85 a4 fb ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
$LN12@OnTCPSocke:
  00a3d	8b 85 ac fb ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$3[ebp]
  00a43	8b 10		 mov	 edx, DWORD PTR [eax]
  00a45	8b 8d ac fb ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  00a4b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00a4e	ff d0		 call	 eax
  00a50	0f b7 c8	 movzx	 ecx, ax
  00a53	39 8d a4 fb ff
	ff		 cmp	 DWORD PTR _i$1[ebp], ecx
  00a59	7d 23		 jge	 SHORT $LN11@OnTCPSocke

; 4946 : 			{
; 4947 : 				ZeroMemory(&(pTableFrame->m_PersonalUserScoreInfo[i]), sizeof(pTableFrame->m_PersonalUserScoreInfo[i]));

  00a5b	6a 3c		 push	 60			; 0000003cH
  00a5d	6a 00		 push	 0
  00a5f	6b 85 a4 fb ff
	ff 3c		 imul	 eax, DWORD PTR _i$1[ebp], 60
  00a66	8b 8d ac fb ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$3[ebp]
  00a6c	8d 94 01 9d 11
	00 00		 lea	 edx, DWORD PTR [ecx+eax+4509]
  00a73	52		 push	 edx
  00a74	e8 00 00 00 00	 call	 _memset
  00a79	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4948 : 			}

  00a7c	eb b0		 jmp	 SHORT $LN10@OnTCPSocke
$LN11@OnTCPSocke:

; 4949 : 
; 4950 : 			m_pIDBCorrespondManager->PostDataBaseRequest(0, DBR_GR_DISSUME_ROOM, 0, pDismissTable, sizeof(CMD_CS_C_DismissTableResult));

  00a7e	6a 00		 push	 0
  00a80	68 b5 02 00 00	 push	 693			; 000002b5H
  00a85	8b 85 b0 fb ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$4[ebp]
  00a8b	50		 push	 eax
  00a8c	6a 00		 push	 0
  00a8e	68 19 05 00 00	 push	 1305			; 00000519H
  00a93	6a 00		 push	 0
  00a95	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a98	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  00a9e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00aa1	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00aa7	8b 12		 mov	 edx, DWORD PTR [edx]
  00aa9	51		 push	 ecx
  00aaa	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00aad	ff d0		 call	 eax
  00aaf	83 c4 1c	 add	 esp, 28			; 0000001cH

; 4951 : 			return true;

  00ab2	b0 01		 mov	 al, 1
  00ab4	eb 02		 jmp	 SHORT $LN1@OnTCPSocke
$LN2@OnTCPSocke:

; 4952 : 
; 4953 : 		}
; 4954 : 	}
; 4955 : 
; 4956 : 	return true;

  00ab6	b0 01		 mov	 al, 1
$LN1@OnTCPSocke:

; 4957 : }

  00ab8	5f		 pop	 edi
  00ab9	5e		 pop	 esi
  00aba	5b		 pop	 ebx
  00abb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00abe	33 cd		 xor	 ecx, ebp
  00ac0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ac5	8b e5		 mov	 esp, ebp
  00ac7	5d		 pop	 ebp
  00ac8	c2 0c 00	 ret	 12			; 0000000cH
  00acb	90		 npad	 1
$LN43@OnTCPSocke:
  00acc	00 00 00 00	 DD	 $LN13@OnTCPSocke
  00ad0	00 00 00 00	 DD	 $LN15@OnTCPSocke
  00ad4	00 00 00 00	 DD	 $LN18@OnTCPSocke
  00ad8	00 00 00 00	 DD	 $LN20@OnTCPSocke
  00adc	00 00 00 00	 DD	 $LN23@OnTCPSocke
  00ae0	00 00 00 00	 DD	 $LN25@OnTCPSocke
  00ae4	00 00 00 00	 DD	 $LN26@OnTCPSocke
  00ae8	00 00 00 00	 DD	 $LN30@OnTCPSocke
  00aec	00 00 00 00	 DD	 $LN2@OnTCPSocke
$LN42@OnTCPSocke:
  00af0	00		 DB	 0
  00af1	01		 DB	 1
  00af2	02		 DB	 2
  00af3	03		 DB	 3
  00af4	04		 DB	 4
  00af5	05		 DB	 5
  00af6	08		 DB	 8
  00af7	08		 DB	 8
  00af8	08		 DB	 8
  00af9	08		 DB	 8
  00afa	08		 DB	 8
  00afb	08		 DB	 8
  00afc	08		 DB	 8
  00afd	08		 DB	 8
  00afe	08		 DB	 8
  00aff	08		 DB	 8
  00b00	08		 DB	 8
  00b01	08		 DB	 8
  00b02	08		 DB	 8
  00b03	08		 DB	 8
  00b04	08		 DB	 8
  00b05	08		 DB	 8
  00b06	08		 DB	 8
  00b07	08		 DB	 8
  00b08	08		 DB	 8
  00b09	08		 DB	 8
  00b0a	06		 DB	 6
  00b0b	08		 DB	 8
  00b0c	07		 DB	 7
?OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnTCPSocketMainServiceInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z
_TEXT	SEGMENT
tv65 = -80						; size = 4
_ControlResult$1 = -9					; size = 1
_pRegisterFailure$2 = -8				; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnTCPSocketMainRegister, COMDAT
; _this$ = ecx

; 4637 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4638 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b0	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d b0 c8 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 200 ; 000000c8H
  0001a	74 05		 je	 SHORT $LN4@OnTCPSocke
  0001c	e9 90 00 00 00	 jmp	 $LN2@OnTCPSocke
$LN4@OnTCPSocke:

; 4639 : 	{
; 4640 : 	case SUB_CS_S_REGISTER_FAILURE:		//注册失败
; 4641 : 		{
; 4642 : 			//变量定义
; 4643 : 			CMD_CS_S_RegisterFailure * pRegisterFailure=(CMD_CS_S_RegisterFailure *)pData;

  00021	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR _pRegisterFailure$2[ebp], eax

; 4644 : 
; 4645 : 			//效验参数
; 4646 : 			ASSERT(wDataSize>=(sizeof(CMD_CS_S_RegisterFailure)-sizeof(pRegisterFailure->szDescribeString)));

  00027	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002b	83 f8 04	 cmp	 eax, 4
  0002e	73 19		 jae	 SHORT $LN8@OnTCPSocke
  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z@4JA
  00036	83 c1 09	 add	 ecx, 9
  00039	51		 push	 ecx
  0003a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0003f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00044	85 c0		 test	 eax, eax
  00046	74 01		 je	 SHORT $LN8@OnTCPSocke
  00048	cc		 int	 3
$LN8@OnTCPSocke:

; 4647 : 			if (wDataSize<(sizeof(CMD_CS_S_RegisterFailure)-sizeof(pRegisterFailure->szDescribeString))) return false;

  00049	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004d	83 f8 04	 cmp	 eax, 4
  00050	73 04		 jae	 SHORT $LN5@OnTCPSocke
  00052	32 c0		 xor	 al, al
  00054	eb 5d		 jmp	 SHORT $LN1@OnTCPSocke
$LN5@OnTCPSocke:

; 4648 : 
; 4649 : 			//关闭处理
; 4650 : 			m_bNeekCorrespond=false;

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	c6 40 0d 00	 mov	 BYTE PTR [eax+13], 0

; 4651 : 			m_pITCPSocketService->CloseSocket();

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00066	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006b	8b 8a b0 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147376]
  00071	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00074	ff d2		 call	 edx

; 4652 : 
; 4653 : 
; 4654 : 			//显示消息
; 4655 : 			if (lstrlen(pRegisterFailure->szDescribeString)>0)

  00076	8b 45 f8	 mov	 eax, DWORD PTR _pRegisterFailure$2[ebp]
  00079	83 c0 04	 add	 eax, 4
  0007c	50		 push	 eax
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00083	85 c0		 test	 eax, eax
  00085	7e 12		 jle	 SHORT $LN6@OnTCPSocke

; 4656 : 			{
; 4657 : 				CTraceService::TraceString(pRegisterFailure->szDescribeString,TraceLevel_Exception);

  00087	6a 03		 push	 3
  00089	8b 45 f8	 mov	 eax, DWORD PTR _pRegisterFailure$2[ebp]
  0008c	83 c0 04	 add	 eax, 4
  0008f	50		 push	 eax
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00096	83 c4 08	 add	 esp, 8
$LN6@OnTCPSocke:

; 4658 : 			}
; 4659 : 
; 4660 : 			//事件通知
; 4661 : 			CP_ControlResult ControlResult;
; 4662 : 			ControlResult.cbSuccess=ER_FAILURE;

  00099	c6 45 f7 00	 mov	 BYTE PTR _ControlResult$1[ebp], 0

; 4663 : 			SendUIControlPacket(UI_CORRESPOND_RESULT,&ControlResult,sizeof(ControlResult));

  0009d	6a 01		 push	 1
  0009f	8d 45 f7	 lea	 eax, DWORD PTR _ControlResult$1[ebp]
  000a2	50		 push	 eax
  000a3	6a 01		 push	 1
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::SendUIControlPacket

; 4664 : 
; 4665 : 			return true;

  000ad	b0 01		 mov	 al, 1
  000af	eb 02		 jmp	 SHORT $LN1@OnTCPSocke
$LN2@OnTCPSocke:

; 4666 : 		}
; 4667 : 	}
; 4668 : 
; 4669 : 	return true;

  000b1	b0 01		 mov	 al, 1
$LN1@OnTCPSocke:

; 4670 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 0c 00	 ret	 12			; 0000000cH
?OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnTCPSocketMainRegister
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_CurrenceRoomCardAndBeans$ = -76			; size = 64
_pCardAndBeans$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBCurrenceRoomCardAndBeant, COMDAT
; _this$ = ecx

; 4619 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4620 : 	//效验参数
; 4621 : 	ASSERT(wDataSize == sizeof(DBO_GR_CurrenceRoomCardAndBeans));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	83 f8 44	 cmp	 eax, 68			; 00000044H
  00020	74 19		 je	 SHORT $LN4@OnDBCurren
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN4@OnDBCurren
  0003a	cc		 int	 3
$LN4@OnDBCurren:

; 4622 : 	if (sizeof(DBO_GR_CurrenceRoomCardAndBeans)!=wDataSize) return false;

  0003b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0003f	83 f8 44	 cmp	 eax, 68			; 00000044H
  00042	74 04		 je	 SHORT $LN2@OnDBCurren
  00044	32 c0		 xor	 al, al
  00046	eb 3f		 jmp	 SHORT $LN1@OnDBCurren
$LN2@OnDBCurren:

; 4623 : 	DBO_GR_CurrenceRoomCardAndBeans * pCardAndBeans = (DBO_GR_CurrenceRoomCardAndBeans *)pData;

  00048	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0004b	89 45 f4	 mov	 DWORD PTR _pCardAndBeans$[ebp], eax

; 4624 : 	CMD_GR_CurrenceRoomCardAndBeans  CurrenceRoomCardAndBeans;
; 4625 : 	//CurrenceRoomCardAndBeans.dbBeans = pCardAndBeans->dbBeans;
; 4626 : 	//CurrenceRoomCardAndBeans.lDiamond = pCardAndBeans->lDiamond;
; 4627 : 	CurrenceRoomCardAndBeans.bConsumptionType = pCardAndBeans->bConsumptionType;

  0004e	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00053	8b 75 f4	 mov	 esi, DWORD PTR _pCardAndBeans$[ebp]
  00056	8d 7d b4	 lea	 edi, DWORD PTR _CurrenceRoomCardAndBeans$[ebp]
  00059	f3 a5		 rep movsd

; 4628 : 
; 4629 : 	m_pITCPNetworkEngine->SendData(dwContextID, MDM_GR_PERSONAL_TABLE, SUB_GR_CURRECE_ROOMCARD_AND_BEAN, &CurrenceRoomCardAndBeans, sizeof(CMD_GR_CurrenceRoomCardAndBeans));

  0005b	6a 40		 push	 64			; 00000040H
  0005d	8d 45 b4	 lea	 eax, DWORD PTR _CurrenceRoomCardAndBeans$[ebp]
  00060	50		 push	 eax
  00061	6a 10		 push	 16			; 00000010H
  00063	68 d2 00 00 00	 push	 210			; 000000d2H
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 10		 mov	 edx, DWORD PTR [eax]
  0007a	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00080	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00083	ff d0		 call	 eax

; 4630 : 
; 4631 : 	return true;

  00085	b0 01		 mov	 al, 1
$LN1@OnDBCurren:

; 4632 : 
; 4633 : }

  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	5b		 pop	 ebx
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008d	33 cd		 xor	 ecx, ebp
  0008f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 0c 00	 ret	 12			; 0000000cH
?OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBCurrenceRoomCardAndBeant
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBQueryUserRoomScore@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBQueryUserRoomScore@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBQueryUserRoomScore, COMDAT
; _this$ = ecx

; 4606 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4607 : 	//效验参数
; 4608 : 	//ASSERT(wDataSize%sizeof(tagQueryPersonalRoomUserScore)==0);
; 4609 : 	//if (wDataSize%sizeof(tagQueryPersonalRoomUserScore)!=0) return false;
; 4610 : 
; 4611 : 	//m_pITCPNetworkEngine->SendData(dwContextID, MDM_GR_PERSONAL_TABLE, SUB_GR_USER_QUERY_ROOM_SCORE_RESULT, pData, wDataSize);
; 4612 : 
; 4613 : 	return true;

  0000c	b0 01		 mov	 al, 1

; 4614 : 
; 4615 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnDBQueryUserRoomScore@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBQueryUserRoomScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_i$1 = -520						; size = 4
_DissumeTable$ = -516					; size = 501
_pDissumeResult$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBDissumeTableResult, COMDAT
; _this$ = ecx

; 4582 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 02 00
	00		 sub	 esp, 648		; 00000288H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4583 : 	//效验参数
; 4584 : 	ASSERT(wDataSize == sizeof(DBO_GR_DissumeResult));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  00022	74 19		 je	 SHORT $LN7@OnDBDissum
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN7@OnDBDissum
  0003c	cc		 int	 3
$LN7@OnDBDissum:

; 4585 : 	if (sizeof(DBO_GR_DissumeResult)!=wDataSize) return false;

  0003d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 00 02 00 00	 cmp	 eax, 512		; 00000200H
  00046	74 07		 je	 SHORT $LN5@OnDBDissum
  00048	32 c0		 xor	 al, al
  0004a	e9 d4 00 00 00	 jmp	 $LN1@OnDBDissum
$LN5@OnDBDissum:

; 4586 : 	DBO_GR_DissumeResult * pDissumeResult = (DBO_GR_DissumeResult *)pData;

  0004f	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00052	89 45 f4	 mov	 DWORD PTR _pDissumeResult$[ebp], eax

; 4587 : 	CMD_GR_DissumeTable  DissumeTable;

  00055	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _DissumeTable$[ebp]
  0005b	e8 00 00 00 00	 call	 ??0CMD_GR_DissumeTable@@QAE@XZ

; 4588 : 	DissumeTable.cbIsDissumSuccess = pDissumeResult->cbIsDissumSuccess;

  00060	8b 45 f4	 mov	 eax, DWORD PTR _pDissumeResult$[ebp]
  00063	8a 48 08	 mov	 cl, BYTE PTR [eax+8]
  00066	88 8d fc fd ff
	ff		 mov	 BYTE PTR _DissumeTable$[ebp], cl

; 4589 : 	DissumeTable.dwPersonalRoomID = pDissumeResult->dwPersonalRoomID;

  0006c	8b 45 f4	 mov	 eax, DWORD PTR _pDissumeResult$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	89 8d fd fd ff
	ff		 mov	 DWORD PTR _DissumeTable$[ebp+1], ecx

; 4590 : 	DissumeTable.sysDissumeTime = pDissumeResult->sysDissumeTime;

  00078	8b 45 f4	 mov	 eax, DWORD PTR _pDissumeResult$[ebp]
  0007b	83 c0 10	 add	 eax, 16			; 00000010H
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	89 8d 01 fe ff
	ff		 mov	 DWORD PTR _DissumeTable$[ebp+5], ecx
  00086	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00089	89 95 05 fe ff
	ff		 mov	 DWORD PTR _DissumeTable$[ebp+9], edx
  0008f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00092	89 8d 09 fe ff
	ff		 mov	 DWORD PTR _DissumeTable$[ebp+13], ecx
  00098	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0009b	89 95 0d fe ff
	ff		 mov	 DWORD PTR _DissumeTable$[ebp+17], edx

; 4591 : 
; 4592 : 	//获取房间玩家的信息
; 4593 : 	for (int i = 0; i < PERSONAL_ROOM_CHAIR; i++)

  000a1	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1[ebp], 0
  000ab	eb 0f		 jmp	 SHORT $LN4@OnDBDissum
$LN2@OnDBDissum:
  000ad	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  000b3	83 c0 01	 add	 eax, 1
  000b6	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
$LN4@OnDBDissum:
  000bc	83 bd f8 fd ff
	ff 08		 cmp	 DWORD PTR _i$1[ebp], 8
  000c3	7d 2a		 jge	 SHORT $LN3@OnDBDissum

; 4594 : 	{
; 4595 : 		memcpy(&DissumeTable.PersonalUserScoreInfo[i],  &pDissumeResult->PersonalUserScoreInfo[i],  sizeof(tagPersonalUserScoreInfo));

  000c5	6a 3c		 push	 60			; 0000003cH
  000c7	6b 85 f8 fd ff
	ff 3c		 imul	 eax, DWORD PTR _i$1[ebp], 60
  000ce	8b 4d f4	 mov	 ecx, DWORD PTR _pDissumeResult$[ebp]
  000d1	8d 54 01 20	 lea	 edx, DWORD PTR [ecx+eax+32]
  000d5	52		 push	 edx
  000d6	6b 85 f8 fd ff
	ff 3c		 imul	 eax, DWORD PTR _i$1[ebp], 60
  000dd	8d 8c 05 11 fe
	ff ff		 lea	 ecx, DWORD PTR _DissumeTable$[ebp+eax+21]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 _memcpy
  000ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4596 : 	}

  000ed	eb be		 jmp	 SHORT $LN2@OnDBDissum
$LN3@OnDBDissum:

; 4597 : 
; 4598 : 	m_pITCPNetworkEngine->SendData(pDissumeResult->dwSocketID, MDM_GR_PERSONAL_TABLE, SUB_GR_HOST_DISSUME_TABLE_RESULT, &DissumeTable, sizeof(CMD_GR_DissumeTable));

  000ef	68 f5 01 00 00	 push	 501			; 000001f5H
  000f4	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _DissumeTable$[ebp]
  000fa	50		 push	 eax
  000fb	6a 0d		 push	 13			; 0000000dH
  000fd	68 d2 00 00 00	 push	 210			; 000000d2H
  00102	8b 4d f4	 mov	 ecx, DWORD PTR _pDissumeResult$[ebp]
  00105	8b 11		 mov	 edx, DWORD PTR [ecx]
  00107	52		 push	 edx
  00108	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010b	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00111	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00114	8b 01		 mov	 eax, DWORD PTR [ecx]
  00116	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0011c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0011f	ff d2		 call	 edx

; 4599 : 
; 4600 : 	return true;

  00121	b0 01		 mov	 al, 1
$LN1@OnDBDissum:

; 4601 : 
; 4602 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	33 cd		 xor	 ecx, ebp
  0012b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c2 0c 00	 ret	 12			; 0000000cH
?OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBDissumeTableResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
$T2 = -120						; size = 4
$T3 = -116						; size = 4
_pPersonalTableParameter$4 = -48			; size = 4
_i$5 = -44						; size = 4
_pParameterData$ = -40					; size = 4
_wCount$ = -36						; size = 2
_pPersonalTableParameter$6 = -32			; size = 4
_i$7 = -28						; size = 4
_nSize$8 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBLoadPersonalParameter, COMDAT
; _this$ = ecx

; 4547 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 68	 sub	 esp, 104		; 00000068H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 4548 : 	//效验参数
; 4549 : 	ASSERT(wDataSize%sizeof(tagPersonalTableParameter)==0);

  0002f	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00033	33 d2		 xor	 edx, edx
  00035	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0003a	f7 f1		 div	 ecx
  0003c	85 d2		 test	 edx, edx
  0003e	74 19		 je	 SHORT $LN12@OnDBLoadPe
  00040	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00046	83 c2 02	 add	 edx, 2
  00049	52		 push	 edx
  0004a	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN12@OnDBLoadPe
  00058	cc		 int	 3
$LN12@OnDBLoadPe:

; 4550 : 	if (wDataSize%sizeof(tagPersonalTableParameter)!=0) return false;

  00059	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005d	33 d2		 xor	 edx, edx
  0005f	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00064	f7 f1		 div	 ecx
  00066	85 d2		 test	 edx, edx
  00068	74 07		 je	 SHORT $LN8@OnDBLoadPe
  0006a	32 c0		 xor	 al, al
  0006c	e9 56 01 00 00	 jmp	 $LN1@OnDBLoadPe
$LN8@OnDBLoadPe:

; 4551 : 
; 4552 : 	//清楚缓存
; 4553 : 	ASSERT(m_PersonalTableParameterArray.GetCount() == 0);

  00071	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	83 c1 34	 add	 ecx, 52			; 00000034H
  00077	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
  0007c	85 c0		 test	 eax, eax
  0007e	74 18		 je	 SHORT $LN13@OnDBLoadPe
  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00085	83 c0 06	 add	 eax, 6
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0008e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00093	85 c0		 test	 eax, eax
  00095	74 01		 je	 SHORT $LN13@OnDBLoadPe
  00097	cc		 int	 3
$LN13@OnDBLoadPe:

; 4554 : 	if(m_PersonalTableParameterArray.GetCount() != 0)

  00098	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	83 c1 34	 add	 ecx, 52			; 00000034H
  0009e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
  000a3	85 c0		 test	 eax, eax
  000a5	0f 84 a0 00 00
	00		 je	 $LN9@OnDBLoadPe

; 4555 : 	{
; 4556 : 		INT_PTR nSize = m_PersonalTableParameterArray.GetCount();

  000ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	83 c1 34	 add	 ecx, 52			; 00000034H
  000b1	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
  000b6	89 45 e8	 mov	 DWORD PTR _nSize$8[ebp], eax

; 4557 : 		for(INT_PTR i = 0; i < nSize; ++i)

  000b9	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$7[ebp], 0
  000c0	eb 09		 jmp	 SHORT $LN4@OnDBLoadPe
$LN2@OnDBLoadPe:
  000c2	8b 45 e4	 mov	 eax, DWORD PTR _i$7[ebp]
  000c5	83 c0 01	 add	 eax, 1
  000c8	89 45 e4	 mov	 DWORD PTR _i$7[ebp], eax
$LN4@OnDBLoadPe:
  000cb	8b 45 e4	 mov	 eax, DWORD PTR _i$7[ebp]
  000ce	3b 45 e8	 cmp	 eax, DWORD PTR _nSize$8[ebp]
  000d1	7d 6d		 jge	 SHORT $LN3@OnDBLoadPe

; 4558 : 		{
; 4559 : 			tagPersonalTableParameter* pPersonalTableParameter = m_PersonalTableParameterArray.GetAt(i);

  000d3	8b 45 e4	 mov	 eax, DWORD PTR _i$7[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	83 c1 34	 add	 ecx, 52			; 00000034H
  000dd	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetAt
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	89 4d e0	 mov	 DWORD PTR _pPersonalTableParameter$6[ebp], ecx

; 4560 : 			SafeDelete(pPersonalTableParameter);

  000e7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000ee	8b 45 e0	 mov	 eax, DWORD PTR _pPersonalTableParameter$6[ebp]
  000f1	89 45 8c	 mov	 DWORD PTR $T3[ebp], eax
  000f4	6a 30		 push	 48			; 00000030H
  000f6	8b 4d 8c	 mov	 ecx, DWORD PTR $T3[ebp]
  000f9	51		 push	 ecx
  000fa	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ff	83 c4 08	 add	 esp, 8
  00102	eb 23		 jmp	 SHORT $LN15@OnDBLoadPe
__catch$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z$0:
  00104	33 c0		 xor	 eax, eax
  00106	75 19		 jne	 SHORT $LN14@OnDBLoadPe
  00108	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0010e	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00111	51		 push	 ecx
  00112	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00117	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0011c	85 c0		 test	 eax, eax
  0011e	74 01		 je	 SHORT $LN14@OnDBLoadPe
  00120	cc		 int	 3
$LN14@OnDBLoadPe:
  00121	b8 00 00 00 00	 mov	 eax, $LN18@OnDBLoadPe
  00126	c3		 ret	 0
$LN15@OnDBLoadPe:
  00127	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0012e	eb 07		 jmp	 SHORT __tryend$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z$1
$LN18@OnDBLoadPe:
  00130	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z$1:
  00137	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pPersonalTableParameter$6[ebp], 0

; 4561 : 		}

  0013e	eb 82		 jmp	 SHORT $LN2@OnDBLoadPe
$LN3@OnDBLoadPe:

; 4562 : 		m_PersonalTableParameterArray.RemoveAll();

  00140	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	83 c1 34	 add	 ecx, 52			; 00000034H
  00146	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::RemoveAll
$LN9@OnDBLoadPe:

; 4563 : 	}
; 4564 : 
; 4565 : 	//数据转换
; 4566 : 	WORD wCount = wDataSize/sizeof(tagPersonalTableParameter);

  0014b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0014f	33 d2		 xor	 edx, edx
  00151	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00156	f7 f1		 div	 ecx
  00158	66 89 45 dc	 mov	 WORD PTR _wCount$[ebp], ax

; 4567 : 	tagPersonalTableParameter* pParameterData = (tagPersonalTableParameter*)pData;

  0015c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0015f	89 45 d8	 mov	 DWORD PTR _pParameterData$[ebp], eax

; 4568 : 
; 4569 : 	//保存配置
; 4570 : 	for(int i = 0; i < wCount; ++i)

  00162	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00169	eb 09		 jmp	 SHORT $LN7@OnDBLoadPe
$LN5@OnDBLoadPe:
  0016b	8b 45 d4	 mov	 eax, DWORD PTR _i$5[ebp]
  0016e	83 c0 01	 add	 eax, 1
  00171	89 45 d4	 mov	 DWORD PTR _i$5[ebp], eax
$LN7@OnDBLoadPe:
  00174	0f b7 45 dc	 movzx	 eax, WORD PTR _wCount$[ebp]
  00178	39 45 d4	 cmp	 DWORD PTR _i$5[ebp], eax
  0017b	7d 48		 jge	 SHORT $LN6@OnDBLoadPe

; 4571 : 	{
; 4572 : 		tagPersonalTableParameter* pPersonalTableParameter = new tagPersonalTableParameter;

  0017d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00182	83 c0 19	 add	 eax, 25			; 00000019H
  00185	50		 push	 eax
  00186	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0018b	6a 30		 push	 48			; 00000030H
  0018d	e8 00 00 00 00	 call	 ??2@YAPAXIPBDH@Z	; operator new
  00192	83 c4 0c	 add	 esp, 12			; 0000000cH
  00195	89 45 88	 mov	 DWORD PTR $T2[ebp], eax
  00198	8b 4d 88	 mov	 ecx, DWORD PTR $T2[ebp]
  0019b	89 4d d0	 mov	 DWORD PTR _pPersonalTableParameter$4[ebp], ecx

; 4573 : 		CopyMemory(pPersonalTableParameter,&pParameterData[i],sizeof(tagPersonalTableParameter));

  0019e	6a 30		 push	 48			; 00000030H
  001a0	6b 45 d4 30	 imul	 eax, DWORD PTR _i$5[ebp], 48
  001a4	03 45 d8	 add	 eax, DWORD PTR _pParameterData$[ebp]
  001a7	50		 push	 eax
  001a8	8b 4d d0	 mov	 ecx, DWORD PTR _pPersonalTableParameter$4[ebp]
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 _memcpy
  001b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4574 : 		m_PersonalTableParameterArray.Add(pPersonalTableParameter);

  001b4	8d 45 d0	 lea	 eax, DWORD PTR _pPersonalTableParameter$4[ebp]
  001b7	50		 push	 eax
  001b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001bb	83 c1 34	 add	 ecx, 52			; 00000034H
  001be	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEHABQAUtagPersonalTableParameter@@@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::Add

; 4575 : 	}

  001c3	eb a6		 jmp	 SHORT $LN5@OnDBLoadPe
$LN6@OnDBLoadPe:

; 4576 : 
; 4577 : 	return true;

  001c5	b0 01		 mov	 al, 1
$LN1@OnDBLoadPe:

; 4578 : }

  001c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d1	59		 pop	 ecx
  001d2	5f		 pop	 edi
  001d3	5e		 pop	 esi
  001d4	5b		 pop	 ebx
  001d5	8b e5		 mov	 esp, ebp
  001d7	5d		 pop	 ebp
  001d8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBLoadPersonalParameter
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_CancelTable$1 = -176					; size = 132
_pBind$2 = -44						; size = 4
_wBindIndex$3 = -40					; size = 2
_pUserItem$4 = -36					; size = 4
_i$5 = -32						; size = 4
_wChairCount$ = -28					; size = 2
_pTableFrame$ = -24					; size = 4
_pCancelCreateResult$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBCancelCreateTable, COMDAT
; _this$ = ecx

; 4464 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4465 : 	//数据校验
; 4466 : 	ASSERT(wDataSize == sizeof(DBO_GR_CancelCreateResult));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 90 00 00 00	 cmp	 eax, 144		; 00000090H
  00022	74 19		 je	 SHORT $LN25@OnDBCancel
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN25@OnDBCancel
  0003c	cc		 int	 3
$LN25@OnDBCancel:

; 4467 : 	if(wDataSize != sizeof(DBO_GR_CancelCreateResult)) return false;

  0003d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 90 00 00 00	 cmp	 eax, 144		; 00000090H
  00046	74 07		 je	 SHORT $LN5@OnDBCancel
  00048	32 c0		 xor	 al, al
  0004a	e9 ca 02 00 00	 jmp	 $LN1@OnDBCancel
$LN5@OnDBCancel:

; 4468 : 
; 4469 : 	//判断在线
; 4470 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  0004f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	50		 push	 eax
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00063	ff d0		 call	 eax
  00065	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 4471 : 	if(pBindParameter == NULL) return true;

  00068	83 7d f4 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  0006c	75 07		 jne	 SHORT $LN6@OnDBCancel
  0006e	b0 01		 mov	 al, 1
  00070	e9 a4 02 00 00	 jmp	 $LN1@OnDBCancel
$LN6@OnDBCancel:

; 4472 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00075	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0007d	75 09		 jne	 SHORT $LN8@OnDBCancel
  0007f	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00082	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00086	75 07		 jne	 SHORT $LN7@OnDBCancel
$LN8@OnDBCancel:
  00088	b0 01		 mov	 al, 1
  0008a	e9 8a 02 00 00	 jmp	 $LN1@OnDBCancel
$LN7@OnDBCancel:

; 4473 : 
; 4474 : 	//获取用户
; 4475 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0008f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00092	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00097	50		 push	 eax
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000a3	ff d0		 call	 eax
  000a5	85 c0		 test	 eax, eax
  000a7	75 19		 jne	 SHORT $LN26@OnDBCancel
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  000af	83 c1 0b	 add	 ecx, 11			; 0000000bH
  000b2	51		 push	 ecx
  000b3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bd	85 c0		 test	 eax, eax
  000bf	74 01		 je	 SHORT $LN26@OnDBCancel
  000c1	cc		 int	 3
$LN26@OnDBCancel:

; 4476 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  000c2	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  000c5	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000ca	50		 push	 eax
  000cb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000d6	ff d0		 call	 eax
  000d8	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 4477 : 	if (pIServerUserItem==NULL) return false;

  000db	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000df	75 07		 jne	 SHORT $LN9@OnDBCancel
  000e1	32 c0		 xor	 al, al
  000e3	e9 31 02 00 00	 jmp	 $LN1@OnDBCancel
$LN9@OnDBCancel:

; 4478 : 
; 4479 : 	//获取数据
; 4480 : 	DBO_GR_CancelCreateResult* pCancelCreateResult = (DBO_GR_CancelCreateResult*)pData;

  000e8	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000eb	89 45 ec	 mov	 DWORD PTR _pCancelCreateResult$[ebp], eax

; 4481 : 	CTableFrame* pTableFrame = m_TableFrameArray[pCancelCreateResult->dwTableID];

  000ee	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  000f1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f4	51		 push	 ecx
  000f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000fe	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	89 55 e8	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 4482 : 	ASSERT(pTableFrame != NULL);

  00108	83 7d e8 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  0010c	75 18		 jne	 SHORT $LN27@OnDBCancel
  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00113	83 c0 12	 add	 eax, 18			; 00000012H
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN27@OnDBCancel
  00125	cc		 int	 3
$LN27@OnDBCancel:

; 4483 : 
; 4484 : 	//设置桌子
; 4485 : 	//ASSERT(pTableFrame->IsPersonalTableLocked() == true);
; 4486 : 	pTableFrame->SetPersonalTableLocked(false);

  00126	6a 00		 push	 0
  00128	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0012b	8b 10		 mov	 edx, DWORD PTR [eax]
  0012d	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00130	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00133	ff d0		 call	 eax

; 4487 : 	pTableFrame->SetPersonalTable(0, 0, 0);

  00135	6a 00		 push	 0
  00137	6a 00		 push	 0
  00139	6a 00		 push	 0
  0013b	6a 00		 push	 0
  0013d	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00140	8b 10		 mov	 edx, DWORD PTR [eax]
  00142	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00145	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00148	ff d0		 call	 eax

; 4488 : 	if(pCancelCreateResult->dwReason == CANCELTABLE_REASON_SYSTEM || pCancelCreateResult->dwReason == CANCELTABLE_REASON_PLAYER)

  0014a	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  0014d	83 78 08 01	 cmp	 DWORD PTR [eax+8], 1
  00151	74 09		 je	 SHORT $LN11@OnDBCancel
  00153	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  00156	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0015a	75 0f		 jne	 SHORT $LN10@OnDBCancel
$LN11@OnDBCancel:

; 4489 : 	{
; 4490 : 		pTableFrame->SetTableOwner(0);

  0015c	6a 00		 push	 0
  0015e	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00161	8b 10		 mov	 edx, DWORD PTR [eax]
  00163	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00166	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00169	ff d0		 call	 eax
$LN10@OnDBCancel:

; 4491 : 	}
; 4492 : 
; 4493 : 	WORD wChairCount = pTableFrame->GetChairCount();

  0016b	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0016e	8b 10		 mov	 edx, DWORD PTR [eax]
  00170	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00173	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00176	ff d0		 call	 eax
  00178	66 89 45 e4	 mov	 WORD PTR _wChairCount$[ebp], ax

; 4494 : 	for(int i = 0; i < wChairCount; ++i)

  0017c	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00183	eb 09		 jmp	 SHORT $LN4@OnDBCancel
$LN2@OnDBCancel:
  00185	8b 45 e0	 mov	 eax, DWORD PTR _i$5[ebp]
  00188	83 c0 01	 add	 eax, 1
  0018b	89 45 e0	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@OnDBCancel:
  0018e	0f b7 45 e4	 movzx	 eax, WORD PTR _wChairCount$[ebp]
  00192	39 45 e0	 cmp	 DWORD PTR _i$5[ebp], eax
  00195	0f 8d 7c 01 00
	00		 jge	 $LN3@OnDBCancel

; 4495 : 	{
; 4496 : 		IServerUserItem* pUserItem =pTableFrame->GetTableUserItem(i);

  0019b	0f b7 45 e0	 movzx	 eax, WORD PTR _i$5[ebp]
  0019f	50		 push	 eax
  001a0	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a5	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001a8	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  001ae	ff d0		 call	 eax
  001b0	89 45 dc	 mov	 DWORD PTR _pUserItem$4[ebp], eax

; 4497 : 		if(pUserItem == NULL) continue;

  001b3	83 7d dc 00	 cmp	 DWORD PTR _pUserItem$4[ebp], 0
  001b7	75 02		 jne	 SHORT $LN12@OnDBCancel
  001b9	eb ca		 jmp	 SHORT $LN2@OnDBCancel
$LN12@OnDBCancel:

; 4498 : 
; 4499 : 		//绑定参数
; 4500 : 		WORD wBindIndex = pUserItem->GetBindIndex();

  001bb	8b 45 dc	 mov	 eax, DWORD PTR _pUserItem$4[ebp]
  001be	8b 10		 mov	 edx, DWORD PTR [eax]
  001c0	8b 4d dc	 mov	 ecx, DWORD PTR _pUserItem$4[ebp]
  001c3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c6	ff d0		 call	 eax
  001c8	66 89 45 d8	 mov	 WORD PTR _wBindIndex$3[ebp], ax

; 4501 : 		tagBindParameter* pBind = GetBindParameter(wBindIndex);

  001cc	0f b7 45 d8	 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  001d0	50		 push	 eax
  001d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  001dc	ff d0		 call	 eax
  001de	89 45 d4	 mov	 DWORD PTR _pBind$2[ebp], eax

; 4502 : 
; 4503 : 		//构造数据
; 4504 : 		CMD_GR_CancelTable CancelTable;
; 4505 : 		ZeroMemory(&CancelTable, sizeof(CMD_GR_CancelTable));

  001e1	68 84 00 00 00	 push	 132			; 00000084H
  001e6	6a 00		 push	 0
  001e8	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp]
  001ee	50		 push	 eax
  001ef	e8 00 00 00 00	 call	 _memset
  001f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4506 : 		CancelTable.dwReason = pCancelCreateResult->dwReason;

  001f7	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  001fa	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001fd	89 8d 50 ff ff
	ff		 mov	 DWORD PTR _CancelTable$1[ebp], ecx

; 4507 : 		if(pCancelCreateResult->dwReason == CANCELTABLE_REASON_SYSTEM)

  00203	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  00206	83 78 08 01	 cmp	 DWORD PTR [eax+8], 1
  0020a	75 1c		 jne	 SHORT $LN13@OnDBCancel

; 4508 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("游戏自动解散。"), CountArray(CancelTable.szDescribeString));

  0020c	68 80 00 00 00	 push	 128			; 00000080H
  00211	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LGKLJHBF@?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@
  00216	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  0021c	50		 push	 eax
  0021d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
  00223	e9 86 00 00 00	 jmp	 $LN14@OnDBCancel
$LN13@OnDBCancel:

; 4509 : 		else if(pCancelCreateResult->dwReason == CANCELTABLE_REASON_PLAYER)

  00228	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  0022b	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0022f	75 19		 jne	 SHORT $LN15@OnDBCancel

; 4510 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("游戏未开始，游戏自动解散。"), CountArray(CancelTable.szDescribeString));

  00231	68 80 00 00 00	 push	 128			; 00000080H
  00236	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EKGKFEBG@?S?N?O?$LH?N?$LE?$LP?$KK?J?$LM?$KD?$KM?S?N?O?$LH?W?T?$LG?$KP?$LN?b?I?$KC?$KB?$KD@
  0023b	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  00241	50		 push	 eax
  00242	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
  00248	eb 64		 jmp	 SHORT $LN14@OnDBCancel
$LN15@OnDBCancel:

; 4511 : 		else if(pCancelCreateResult->dwReason == CANCELTABLE_REASON_ENFOCE)

  0024a	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  0024d	83 78 08 02	 cmp	 DWORD PTR [eax+8], 2
  00251	75 19		 jne	 SHORT $LN17@OnDBCancel

; 4512 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("房主退出游戏或游戏超时，游戏解散。"), CountArray(CancelTable.szDescribeString));

  00253	68 80 00 00 00	 push	 128			; 00000080H
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@JHECHKJE@?$LH?$LP?V?w?M?K?$LD?v?S?N?O?$LH?$LL?r?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I@
  0025d	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  00263	50		 push	 eax
  00264	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
  0026a	eb 42		 jmp	 SHORT $LN14@OnDBCancel
$LN17@OnDBCancel:

; 4513 : 		else if(pCancelCreateResult->dwReason == CANCELTABLE_REASON_OVER_TIME)

  0026c	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  0026f	83 78 08 05	 cmp	 DWORD PTR [eax+8], 5
  00273	75 19		 jne	 SHORT $LN19@OnDBCancel

; 4514 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("游戏超时，游戏解散。"), CountArray(CancelTable.szDescribeString));

  00275	68 80 00 00 00	 push	 128			; 00000080H
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BBCEPGNP@?S?N?O?$LH?$LD?$KM?J?$LB?$KD?$KM?S?N?O?$LH?$LN?b?I?$KC?$KB?$KD@
  0027f	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  00285	50		 push	 eax
  00286	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
  0028c	eb 20		 jmp	 SHORT $LN14@OnDBCancel
$LN19@OnDBCancel:

; 4515 : 		else if(pCancelCreateResult->dwReason == CANCELTABLE_REASON_NOT_START)

  0028e	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  00291	83 78 08 04	 cmp	 DWORD PTR [eax+8], 4
  00295	75 17		 jne	 SHORT $LN14@OnDBCancel

; 4516 : 			lstrcpyn(CancelTable.szDescribeString, TEXT("约战规定开始时间到未开始游戏，游戏解散。"), CountArray(CancelTable.szDescribeString));

  00297	68 80 00 00 00	 push	 128			; 00000080H
  0029c	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@IPIKOHBH@?T?$LM?U?$LN?$LJ?f?$LG?$KI?$LP?$KK?J?$LM?J?$LB?$LM?d?$LF?$LN?N?$LE?$LP?$KK?J?$LM?S?N?O?$LH?$KD?$KM?S@
  002a1	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp+4]
  002a7	50		 push	 eax
  002a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN14@OnDBCancel:

; 4517 : 		
; 4518 : 		if (CANCELTABLE_REASON_NOT_START == pCancelCreateResult->dwReason || CANCELTABLE_REASON_OVER_TIME == pCancelCreateResult->dwReason)

  002ae	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  002b1	83 78 08 04	 cmp	 DWORD PTR [eax+8], 4
  002b5	74 09		 je	 SHORT $LN23@OnDBCancel
  002b7	8b 45 ec	 mov	 eax, DWORD PTR _pCancelCreateResult$[ebp]
  002ba	83 78 08 05	 cmp	 DWORD PTR [eax+8], 5
  002be	75 0a		 jne	 SHORT $LN22@OnDBCancel
$LN23@OnDBCancel:

; 4519 : 		{
; 4520 : 			CancelTable.dwReason = CANCELTABLE_REASON_SYSTEM;

  002c0	c7 85 50 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _CancelTable$1[ebp], 1
$LN22@OnDBCancel:

; 4521 : 		}
; 4522 : 		//解散消息
; 4523 : 		m_pITCPNetworkEngine->SendData(pBind->dwSocketID, MDM_GR_PERSONAL_TABLE, SUB_GR_CANCEL_TABLE, &CancelTable, sizeof(CMD_GR_CancelTable));

  002ca	68 84 00 00 00	 push	 132			; 00000084H
  002cf	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _CancelTable$1[ebp]
  002d5	50		 push	 eax
  002d6	6a 04		 push	 4
  002d8	68 d2 00 00 00	 push	 210			; 000000d2H
  002dd	8b 4d d4	 mov	 ecx, DWORD PTR _pBind$2[ebp]
  002e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  002e2	52		 push	 edx
  002e3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002e6	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  002ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002ef	8b 01		 mov	 eax, DWORD PTR [ecx]
  002f1	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  002f7	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  002fa	ff d2		 call	 edx

; 4524 : 
; 4525 : 		//用户状态
; 4526 : 		//pUserItem->SetUserStatus(US_FREE, INVALID_TABLE, INVALID_CHAIR);
; 4527 : 		pTableFrame->PerformStandUpAction(pUserItem);

  002fc	6a 00		 push	 0
  002fe	8b 45 dc	 mov	 eax, DWORD PTR _pUserItem$4[ebp]
  00301	50		 push	 eax
  00302	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00305	8b 11		 mov	 edx, DWORD PTR [ecx]
  00307	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0030a	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  00310	ff d0		 call	 eax

; 4528 : 	}

  00312	e9 6e fe ff ff	 jmp	 $LN2@OnDBCancel
$LN3@OnDBCancel:

; 4529 : 
; 4530 : 	////构造数据
; 4531 : 	//CMD_GR_CancelTable CancelTable;
; 4532 : 	//ZeroMemory(&CancelTable, sizeof(CMD_GR_CancelTable));
; 4533 : 	//CancelTable.dwReason = pCancelCreateResult->dwReason;
; 4534 : 	//lstrcpyn(CancelTable.szDescribeString, pCancelCreateResult->szDescribeString, CountArray(CancelTable.szDescribeString));
; 4535 : 
; 4536 : 	////发送数据
; 4537 : 	//m_pITCPNetworkEngine->SendData(dwContextID, MDM_GR_PERSONAL_TABLE, SUB_GR_CANCEL_TABLE, &CancelTable, sizeof(CMD_GR_CancelTable));
; 4538 : 
; 4539 : 	////退出用户
; 4540 : 	//pIServerUserItem->SetUserStatus(US_NULL, INVALID_TABLE, INVALID_CHAIR);
; 4541 : 
; 4542 : 	return true;

  00317	b0 01		 mov	 al, 1
$LN1@OnDBCancel:

; 4543 : }

  00319	5f		 pop	 edi
  0031a	5e		 pop	 esi
  0031b	5b		 pop	 ebx
  0031c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0031f	33 cd		 xor	 ecx, ebp
  00321	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00326	8b e5		 mov	 esp, ebp
  00328	5d		 pop	 ebp
  00329	c2 0c 00	 ret	 12			; 0000000cH
?OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBCancelCreateTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_CreateFailure$ = -152					; size = 132
_pCreateFailure$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBCreateFailure, COMDAT
; _this$ = ecx

; 4433 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4434 : 	//数据校验
; 4435 : 	ASSERT(wDataSize == sizeof(DBO_GR_CreateFailure));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 88 00 00 00	 cmp	 eax, 136		; 00000088H
  00022	74 19		 je	 SHORT $LN7@OnDBCreate
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN7@OnDBCreate
  0003c	cc		 int	 3
$LN7@OnDBCreate:

; 4436 : 	if(wDataSize != sizeof(DBO_GR_CreateFailure)) return false;

  0003d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 88 00 00 00	 cmp	 eax, 136		; 00000088H
  00046	74 07		 je	 SHORT $LN2@OnDBCreate
  00048	32 c0		 xor	 al, al
  0004a	e9 fc 00 00 00	 jmp	 $LN1@OnDBCreate
$LN2@OnDBCreate:

; 4437 : 
; 4438 : 	//判断在线
; 4439 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  0004f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	50		 push	 eax
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00063	ff d0		 call	 eax
  00065	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 4440 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00068	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0006b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006d	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00070	75 09		 jne	 SHORT $LN4@OnDBCreate
  00072	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00075	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00079	75 07		 jne	 SHORT $LN3@OnDBCreate
$LN4@OnDBCreate:
  0007b	b0 01		 mov	 al, 1
  0007d	e9 c9 00 00 00	 jmp	 $LN1@OnDBCreate
$LN3@OnDBCreate:

; 4441 : 
; 4442 : 	//获取用户
; 4443 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  00082	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00085	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0008a	50		 push	 eax
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00096	ff d0		 call	 eax
  00098	85 c0		 test	 eax, eax
  0009a	75 19		 jne	 SHORT $LN8@OnDBCreate
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  000a2	83 c1 0a	 add	 ecx, 10			; 0000000aH
  000a5	51		 push	 ecx
  000a6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000ab	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b0	85 c0		 test	 eax, eax
  000b2	74 01		 je	 SHORT $LN8@OnDBCreate
  000b4	cc		 int	 3
$LN8@OnDBCreate:

; 4444 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  000b5	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  000b8	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000bd	50		 push	 eax
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c9	ff d0		 call	 eax
  000cb	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 4445 : 	if (pIServerUserItem==NULL) return false;

  000ce	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000d2	75 04		 jne	 SHORT $LN5@OnDBCreate
  000d4	32 c0		 xor	 al, al
  000d6	eb 73		 jmp	 SHORT $LN1@OnDBCreate
$LN5@OnDBCreate:

; 4446 : 
; 4447 : 	DBO_GR_CreateFailure* pCreateFailure = (DBO_GR_CreateFailure*)pData;

  000d8	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000db	89 45 ec	 mov	 DWORD PTR _pCreateFailure$[ebp], eax

; 4448 : 
; 4449 : 	//构造数据
; 4450 : 	CMD_GR_CreateFailure CreateFailure;
; 4451 : 	ZeroMemory(&CreateFailure, sizeof(CMD_GR_CreateFailure));

  000de	68 84 00 00 00	 push	 132			; 00000084H
  000e3	6a 00		 push	 0
  000e5	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$[ebp]
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 _memset
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4452 : 
; 4453 : 	CreateFailure.lErrorCode = pCreateFailure->lErrorCode;

  000f4	8b 45 ec	 mov	 eax, DWORD PTR _pCreateFailure$[ebp]
  000f7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000fa	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _CreateFailure$[ebp], ecx

; 4454 : 	lstrcpyn(CreateFailure.szDescribeString, pCreateFailure->szDescribeString, CountArray(CreateFailure.szDescribeString));

  00100	68 80 00 00 00	 push	 128			; 00000080H
  00105	8b 45 ec	 mov	 eax, DWORD PTR _pCreateFailure$[ebp]
  00108	83 c0 08	 add	 eax, 8
  0010b	50		 push	 eax
  0010c	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _CreateFailure$[ebp+4]
  00112	51		 push	 ecx
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4455 : 
; 4456 : 	//发送数据
; 4457 : 	m_pITCPNetworkEngine->SendData(dwContextID, MDM_GR_PERSONAL_TABLE, SUB_GR_CREATE_FAILURE, &CreateFailure, sizeof(CMD_GR_CreateFailure));

  00119	68 84 00 00 00	 push	 132			; 00000084H
  0011e	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _CreateFailure$[ebp]
  00124	50		 push	 eax
  00125	6a 03		 push	 3
  00127	68 d2 00 00 00	 push	 210			; 000000d2H
  0012c	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  0012f	51		 push	 ecx
  00130	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00133	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00139	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	8b 10		 mov	 edx, DWORD PTR [eax]
  0013e	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00144	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00147	ff d0		 call	 eax

; 4458 : 
; 4459 : 	return true;

  00149	b0 01		 mov	 al, 1
$LN1@OnDBCreate:

; 4460 : }

  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	5b		 pop	 ebx
  0014e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00151	33 cd		 xor	 ecx, ebp
  00153	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 0c 00	 ret	 12			; 0000000cH
?OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBCreateFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_CS_CreateTable$ = -380					; size = 239
_CancelCreateTable$1 = -140				; size = 32
_pUserRule$ = -108					; size = 4
_pUserInfo$ = -104					; size = 4
_PersonalTableParameter$ = -100				; size = 48
_pTableParameter$2 = -52				; size = 4
_i$3 = -48						; size = 4
_nSize$ = -44						; size = 4
_cbIsJoinGame$ = -37					; size = 1
_lIniScore$ = -36					; size = 8
_wChairID$ = -28					; size = 2
_pTableFrame$ = -24					; size = 4
_pCreateSuccess$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBCreateSucess, COMDAT
; _this$ = ecx

; 4271 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec bc 01 00
	00		 sub	 esp, 444		; 000001bcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4272 : 	//数据校验
; 4273 : 	ASSERT(wDataSize == sizeof(DBO_GR_CreateSuccess));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d fc 00 00 00	 cmp	 eax, 252		; 000000fcH
  00022	74 19		 je	 SHORT $LN18@OnDBCreate
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN18@OnDBCreate
  0003c	cc		 int	 3
$LN18@OnDBCreate:

; 4274 : 	if(wDataSize != sizeof(DBO_GR_CreateSuccess)) return false;

  0003d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d fc 00 00 00	 cmp	 eax, 252		; 000000fcH
  00046	74 07		 je	 SHORT $LN5@OnDBCreate
  00048	32 c0		 xor	 al, al
  0004a	e9 c5 05 00 00	 jmp	 $LN1@OnDBCreate
$LN5@OnDBCreate:

; 4275 : 
; 4276 : 	//判断在线
; 4277 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  0004f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	50		 push	 eax
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00063	ff d0		 call	 eax
  00065	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 4278 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00068	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0006b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006d	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00070	75 09		 jne	 SHORT $LN7@OnDBCreate
  00072	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00075	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00079	75 07		 jne	 SHORT $LN6@OnDBCreate
$LN7@OnDBCreate:
  0007b	b0 01		 mov	 al, 1
  0007d	e9 92 05 00 00	 jmp	 $LN1@OnDBCreate
$LN6@OnDBCreate:

; 4279 : 
; 4280 : 	//获取用户
; 4281 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  00082	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00085	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0008a	50		 push	 eax
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00096	ff d0		 call	 eax
  00098	85 c0		 test	 eax, eax
  0009a	75 19		 jne	 SHORT $LN19@OnDBCreate
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  000a2	83 c1 0a	 add	 ecx, 10			; 0000000aH
  000a5	51		 push	 ecx
  000a6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000ab	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b0	85 c0		 test	 eax, eax
  000b2	74 01		 je	 SHORT $LN19@OnDBCreate
  000b4	cc		 int	 3
$LN19@OnDBCreate:

; 4282 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  000b5	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  000b8	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000bd	50		 push	 eax
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c9	ff d0		 call	 eax
  000cb	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 4283 : 	if (pIServerUserItem==NULL) return false;

  000ce	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  000d2	75 07		 jne	 SHORT $LN8@OnDBCreate
  000d4	32 c0		 xor	 al, al
  000d6	e9 39 05 00 00	 jmp	 $LN1@OnDBCreate
$LN8@OnDBCreate:

; 4284 : 
; 4285 : 	DBO_GR_CreateSuccess* pCreateSuccess = (DBO_GR_CreateSuccess*)pData;

  000db	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000de	89 45 ec	 mov	 DWORD PTR _pCreateSuccess$[ebp], eax

; 4286 : 
; 4287 : 	//获取信息
; 4288 : 	CTableFrame* pTableFrame = m_TableFrameArray[pCreateSuccess->dwTableID];

  000e1	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  000e4	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000e7	51		 push	 ecx
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000f1	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000f6	8b 10		 mov	 edx, DWORD PTR [eax]
  000f8	89 55 e8	 mov	 DWORD PTR _pTableFrame$[ebp], edx

; 4289 : 	WORD wChairID = pTableFrame->GetNullChairID();

  000fb	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  000fe	8b 10		 mov	 edx, DWORD PTR [eax]
  00100	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00103	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  00109	ff d0		 call	 eax
  0010b	66 89 45 e4	 mov	 WORD PTR _wChairID$[ebp], ax

; 4290 : 
; 4291 : 	//初始分数
; 4292 : 	LONGLONG lIniScore = 0;

  0010f	0f 57 c0	 xorps	 xmm0, xmm0
  00112	66 0f 13 45 dc	 movlpd	 QWORD PTR _lIniScore$[ebp], xmm0

; 4293 : 	byte cbIsJoinGame = 0;

  00117	c6 45 db 00	 mov	 BYTE PTR _cbIsJoinGame$[ebp], 0

; 4294 : 	INT_PTR nSize = m_PersonalTableParameterArray.GetCount();

  0011b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	83 c1 34	 add	 ecx, 52			; 00000034H
  00121	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
  00126	89 45 d4	 mov	 DWORD PTR _nSize$[ebp], eax

; 4295 : 	for(INT_PTR i = 0; i < nSize; ++i)

  00129	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  00130	eb 09		 jmp	 SHORT $LN4@OnDBCreate
$LN2@OnDBCreate:
  00132	8b 45 d0	 mov	 eax, DWORD PTR _i$3[ebp]
  00135	83 c0 01	 add	 eax, 1
  00138	89 45 d0	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@OnDBCreate:
  0013b	8b 45 d0	 mov	 eax, DWORD PTR _i$3[ebp]
  0013e	3b 45 d4	 cmp	 eax, DWORD PTR _nSize$[ebp]
  00141	7d 7c		 jge	 SHORT $LN3@OnDBCreate

; 4296 : 	{
; 4297 : 		tagPersonalTableParameter* pTableParameter = m_PersonalTableParameterArray.GetAt(i);

  00143	8b 45 d0	 mov	 eax, DWORD PTR _i$3[ebp]
  00146	50		 push	 eax
  00147	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	83 c1 34	 add	 ecx, 52			; 00000034H
  0014d	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetAt
  00152	8b 08		 mov	 ecx, DWORD PTR [eax]
  00154	89 4d cc	 mov	 DWORD PTR _pTableParameter$2[ebp], ecx

; 4298 : 		if(pTableParameter->dwPlayTurnCount == pCreateSuccess->dwDrawCountLimit && pTableParameter->dwPlayTimeLimit == pCreateSuccess->dwDrawTimeLimit)

  00157	8b 45 cc	 mov	 eax, DWORD PTR _pTableParameter$2[ebp]
  0015a	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  0015d	8b 50 13	 mov	 edx, DWORD PTR [eax+19]
  00160	3b 51 4c	 cmp	 edx, DWORD PTR [ecx+76]
  00163	75 55		 jne	 SHORT $LN9@OnDBCreate
  00165	8b 45 cc	 mov	 eax, DWORD PTR _pTableParameter$2[ebp]
  00168	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  0016b	8b 50 17	 mov	 edx, DWORD PTR [eax+23]
  0016e	3b 51 50	 cmp	 edx, DWORD PTR [ecx+80]
  00171	75 47		 jne	 SHORT $LN9@OnDBCreate

; 4299 : 		{
; 4300 : 			lIniScore = pTableParameter->lIniScore;

  00173	8b 45 cc	 mov	 eax, DWORD PTR _pTableParameter$2[ebp]
  00176	8b 48 01	 mov	 ecx, DWORD PTR [eax+1]
  00179	89 4d dc	 mov	 DWORD PTR _lIniScore$[ebp], ecx
  0017c	8b 50 05	 mov	 edx, DWORD PTR [eax+5]
  0017f	89 55 e0	 mov	 DWORD PTR _lIniScore$[ebp+4], edx

; 4301 : 
; 4302 : 			//将配置信息改为制定的配置信息
; 4303 : 			pTableParameter->wJoinGamePeopleCount = pCreateSuccess->wJoinGamePeopleCount;	//参加游戏的最大人数

  00182	8b 45 cc	 mov	 eax, DWORD PTR _pTableParameter$2[ebp]
  00185	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  00188	66 8b 51 54	 mov	 dx, WORD PTR [ecx+84]
  0018c	66 89 50 09	 mov	 WORD PTR [eax+9], dx

; 4304 : 			pTableParameter->lCellScore = pCreateSuccess->lCellScore;													//私人房的最大底分

  00190	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00193	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00196	99		 cdq
  00197	8b 4d cc	 mov	 ecx, DWORD PTR _pTableParameter$2[ebp]
  0019a	89 41 0b	 mov	 DWORD PTR [ecx+11], eax
  0019d	89 51 0f	 mov	 DWORD PTR [ecx+15], edx

; 4305 : 
; 4306 : 			pTableParameter->dwPlayTurnCount = pCreateSuccess->dwDrawCountLimit; 						//私人放进行游戏的最大局数

  001a0	8b 45 cc	 mov	 eax, DWORD PTR _pTableParameter$2[ebp]
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  001a6	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  001a9	89 50 13	 mov	 DWORD PTR [eax+19], edx

; 4307 : 			pTableParameter->dwPlayTimeLimit = pCreateSuccess->dwDrawTimeLimit;							//私人房进行游戏的最大时间 单位秒

  001ac	8b 45 cc	 mov	 eax, DWORD PTR _pTableParameter$2[ebp]
  001af	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  001b2	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  001b5	89 50 17	 mov	 DWORD PTR [eax+23], edx

; 4308 : 
; 4309 : 			//cbIsJoinGame = pTableParameter->cbIsJoinGame ;
; 4310 : 
; 4311 : 			break;

  001b8	eb 05		 jmp	 SHORT $LN3@OnDBCreate
$LN9@OnDBCreate:

; 4312 : 		}
; 4313 : 	}

  001ba	e9 73 ff ff ff	 jmp	 $LN2@OnDBCreate
$LN3@OnDBCreate:

; 4314 : 	cbIsJoinGame = m_PersonalRoomOption.cbIsJoinGame;

  001bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c2	8a 48 48	 mov	 cl, BYTE PTR [eax+72]
  001c5	88 4d db	 mov	 BYTE PTR _cbIsJoinGame$[ebp], cl

; 4315 : 	pTableFrame->SetCellScore(pCreateSuccess->lCellScore);

  001c8	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  001cb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001ce	51		 push	 ecx
  001cf	8b 55 e8	 mov	 edx, DWORD PTR _pTableFrame$[ebp]
  001d2	8b 02		 mov	 eax, DWORD PTR [edx]
  001d4	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001d7	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  001da	ff d2		 call	 edx

; 4316 : 	pTableFrame->SetGameRule(pCreateSuccess->cbGameRule, RULE_LEN);

  001dc	6a 64		 push	 100			; 00000064H
  001de	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  001e1	05 8f 00 00 00	 add	 eax, 143		; 0000008fH
  001e6	50		 push	 eax
  001e7	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001ea	8b 11		 mov	 edx, DWORD PTR [ecx]
  001ec	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  001ef	8b 82 4c 01 00
	00		 mov	 eax, DWORD PTR [edx+332]
  001f5	ff d0		 call	 eax

; 4317 : 
; 4318 : 
; 4319 : 	//如果使用的是金币数据库
; 4320 : 	if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  001f7	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  001fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ff	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00202	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00208	51		 push	 ecx
  00209	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  0020f	85 c0		 test	 eax, eax
  00211	75 33		 jne	 SHORT $LN10@OnDBCreate

; 4321 : 	{
; 4322 : 		pTableFrame->SetPersonalTable(pCreateSuccess->dwDrawCountLimit, pCreateSuccess->dwDrawTimeLimit, 0);

  00213	6a 00		 push	 0
  00215	6a 00		 push	 0
  00217	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  0021a	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0021d	51		 push	 ecx
  0021e	8b 55 ec	 mov	 edx, DWORD PTR _pCreateSuccess$[ebp]
  00221	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00224	50		 push	 eax
  00225	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00228	8b 11		 mov	 edx, DWORD PTR [ecx]
  0022a	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0022d	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00230	ff d0		 call	 eax

; 4323 : 		pTableFrame->SetDataBaseMode(0);

  00232	6a 00		 push	 0
  00234	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00237	8b 10		 mov	 edx, DWORD PTR [eax]
  00239	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0023c	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  00242	ff d0		 call	 eax

; 4324 : 	}
; 4325 : 	else

  00244	eb 35		 jmp	 SHORT $LN11@OnDBCreate
$LN10@OnDBCreate:

; 4326 : 	{
; 4327 : 		pTableFrame->SetPersonalTable(pCreateSuccess->dwDrawCountLimit, pCreateSuccess->dwDrawTimeLimit, lIniScore);

  00246	8b 45 e0	 mov	 eax, DWORD PTR _lIniScore$[ebp+4]
  00249	50		 push	 eax
  0024a	8b 4d dc	 mov	 ecx, DWORD PTR _lIniScore$[ebp]
  0024d	51		 push	 ecx
  0024e	8b 55 ec	 mov	 edx, DWORD PTR _pCreateSuccess$[ebp]
  00251	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00254	50		 push	 eax
  00255	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  00258	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  0025b	52		 push	 edx
  0025c	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0025f	8b 10		 mov	 edx, DWORD PTR [eax]
  00261	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00264	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00267	ff d0		 call	 eax

; 4328 : 		pTableFrame->SetDataBaseMode(1);

  00269	6a 01		 push	 1
  0026b	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0026e	8b 10		 mov	 edx, DWORD PTR [eax]
  00270	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00273	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  00279	ff d0		 call	 eax
$LN11@OnDBCreate:

; 4329 : 	}
; 4330 : 
; 4331 : 
; 4332 : 	//设置桌子配置信息
; 4333 : 	tagPersonalTableParameter PersonalTableParameter;
; 4334 : 	PersonalTableParameter.lIniScore = lIniScore;

  0027b	8b 45 dc	 mov	 eax, DWORD PTR _lIniScore$[ebp]
  0027e	89 45 9d	 mov	 DWORD PTR _PersonalTableParameter$[ebp+1], eax
  00281	8b 4d e0	 mov	 ecx, DWORD PTR _lIniScore$[ebp+4]
  00284	89 4d a1	 mov	 DWORD PTR _PersonalTableParameter$[ebp+5], ecx

; 4335 : 	PersonalTableParameter.wJoinGamePeopleCount = pCreateSuccess->wJoinGamePeopleCount;		//参加游戏的最大人数

  00287	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  0028a	66 8b 48 54	 mov	 cx, WORD PTR [eax+84]
  0028e	66 89 4d a5	 mov	 WORD PTR _PersonalTableParameter$[ebp+9], cx

; 4336 : 	PersonalTableParameter.lCellScore = pCreateSuccess->lCellScore;													//私人房的最大底分

  00292	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00295	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00298	99		 cdq
  00299	89 45 a7	 mov	 DWORD PTR _PersonalTableParameter$[ebp+11], eax
  0029c	89 55 ab	 mov	 DWORD PTR _PersonalTableParameter$[ebp+15], edx

; 4337 : 	PersonalTableParameter.dwPlayTurnCount = pCreateSuccess->dwDrawCountLimit; 						//私人放进行游戏的最大局数

  0029f	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  002a2	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  002a5	89 4d af	 mov	 DWORD PTR _PersonalTableParameter$[ebp+19], ecx

; 4338 : 	PersonalTableParameter.dwPlayTimeLimit = pCreateSuccess->dwDrawTimeLimit;								//私人房进行游戏的最大时间 单位秒

  002a8	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  002ab	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  002ae	89 4d b3	 mov	 DWORD PTR _PersonalTableParameter$[ebp+23], ecx

; 4339 : 	PersonalTableParameter.cbIsJoinGame = cbIsJoinGame;

  002b1	8a 45 db	 mov	 al, BYTE PTR _cbIsJoinGame$[ebp]
  002b4	88 45 b7	 mov	 BYTE PTR _PersonalTableParameter$[ebp+27], al

; 4340 : 
; 4341 : 	PersonalTableParameter.dwTimeAfterBeginCount = m_PersonalRoomOption.dwTimeAfterBeginCount;

  002b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002ba	8b 88 a5 00 00
	00		 mov	 ecx, DWORD PTR [eax+165]
  002c0	89 4d b8	 mov	 DWORD PTR _PersonalTableParameter$[ebp+28], ecx

; 4342 : 	PersonalTableParameter.dwTimeAfterCreateRoom = m_PersonalRoomOption.dwTimeAfterCreateRoom;

  002c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002c6	8b 88 b1 00 00
	00		 mov	 ecx, DWORD PTR [eax+177]
  002cc	89 4d c4	 mov	 DWORD PTR _PersonalTableParameter$[ebp+40], ecx

; 4343 : 	PersonalTableParameter.dwTimeNotBeginGame = m_PersonalRoomOption.dwTimeNotBeginGame;

  002cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d2	8b 88 ad 00 00
	00		 mov	 ecx, DWORD PTR [eax+173]
  002d8	89 4d c0	 mov	 DWORD PTR _PersonalTableParameter$[ebp+36], ecx

; 4344 : 	PersonalTableParameter.dwTimeOffLineCount = m_PersonalRoomOption.dwTimeOffLineCount;

  002db	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002de	8b 88 a9 00 00
	00		 mov	 ecx, DWORD PTR [eax+169]
  002e4	89 4d bc	 mov	 DWORD PTR _PersonalTableParameter$[ebp+32], ecx

; 4345 : 
; 4346 : 	pTableFrame->SetPersonalTableParameter(PersonalTableParameter, m_PersonalRoomOption);

  002e7	8b 75 f8	 mov	 esi, DWORD PTR _this$[ebp]
  002ea	83 c6 48	 add	 esi, 72			; 00000048H
  002ed	83 ec 74	 sub	 esp, 116		; 00000074H
  002f0	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  002f5	8b fc		 mov	 edi, esp
  002f7	f3 a5		 rep movsd
  002f9	a4		 movsb
  002fa	83 ec 30	 sub	 esp, 48			; 00000030H
  002fd	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00302	8d 75 9c	 lea	 esi, DWORD PTR _PersonalTableParameter$[ebp]
  00305	8b fc		 mov	 edi, esp
  00307	f3 a5		 rep movsd
  00309	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0030c	8b 10		 mov	 edx, DWORD PTR [eax]
  0030e	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00311	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00314	ff d0		 call	 eax

; 4347 : 
; 4348 : 	//转转麻将设置一张桌子上椅子的个数
; 4349 : 	if (m_pGameServiceAttrib->wKindID == ZZMJ_KIND_ID || m_pGameServiceAttrib->wKindID  == HZMJ_KIND_ID)

  00316	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00319	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0031c	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0031f	81 fa 82 01 00
	00		 cmp	 edx, 386		; 00000182H
  00325	74 11		 je	 SHORT $LN13@OnDBCreate
  00327	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0032a	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0032d	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00330	81 fa 85 01 00
	00		 cmp	 edx, 389		; 00000185H
  00336	75 40		 jne	 SHORT $LN12@OnDBCreate
$LN13@OnDBCreate:

; 4350 : 	{
; 4351 : 		if (pCreateSuccess->cbGameRule[0] == SET_RULE) 

  00338	b8 01 00 00 00	 mov	 eax, 1
  0033d	6b c8 00	 imul	 ecx, eax, 0
  00340	8b 55 ec	 mov	 edx, DWORD PTR _pCreateSuccess$[ebp]
  00343	0f b6 84 0a 8f
	00 00 00	 movzx	 eax, BYTE PTR [edx+ecx+143]
  0034b	83 f8 01	 cmp	 eax, 1
  0034e	75 28		 jne	 SHORT $LN12@OnDBCreate

; 4352 : 		{
; 4353 : 			pTableFrame->SetTableChairCount(pCreateSuccess->cbGameRule[1]);

  00350	b8 01 00 00 00	 mov	 eax, 1
  00355	c1 e0 00	 shl	 eax, 0
  00358	8b 4d ec	 mov	 ecx, DWORD PTR _pCreateSuccess$[ebp]
  0035b	66 0f b6 94 01
	8f 00 00 00	 movzx	 dx, BYTE PTR [ecx+eax+143]
  00364	0f b7 c2	 movzx	 eax, dx
  00367	50		 push	 eax
  00368	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0036b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0036d	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00370	8b 82 00 01 00
	00		 mov	 eax, DWORD PTR [edx+256]
  00376	ff d0		 call	 eax
$LN12@OnDBCreate:

; 4354 : 		}
; 4355 : 	}
; 4356 : 
; 4357 : 	//设置桌子	
; 4358 : 	tagUserInfo* pUserInfo = pIServerUserItem->GetUserInfo();

  00378	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0037b	8b 10		 mov	 edx, DWORD PTR [eax]
  0037d	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00380	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00383	ff d0		 call	 eax
  00385	89 45 98	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 4359 : 
; 4360 : 	/*pUserInfo->dBeans = pCreateSuccess->dCurBeans;
; 4361 : 	pUserInfo->lDiamond = pCreateSuccess->lDiamond;*/
; 4362 : 	pUserInfo->bConsumptionType = pCreateSuccess->bConsumptionType;

  00388	8b 75 ec	 mov	 esi, DWORD PTR _pCreateSuccess$[ebp]
  0038b	83 c6 08	 add	 esi, 8
  0038e	8b 7d 98	 mov	 edi, DWORD PTR _pUserInfo$[ebp]
  00391	81 c7 98 00 00
	00		 add	 edi, 152		; 00000098H
  00397	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0039c	f3 a5		 rep movsd

; 4363 : 
; 4364 : 	pTableFrame->SetTableOwner(pUserInfo->dwUserID);

  0039e	8b 45 98	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  003a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a3	51		 push	 ecx
  003a4	8b 55 e8	 mov	 edx, DWORD PTR _pTableFrame$[ebp]
  003a7	8b 02		 mov	 eax, DWORD PTR [edx]
  003a9	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  003ac	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  003af	ff d2		 call	 edx

; 4365 : 	pTableFrame->SetTimerNotBeginAfterCreate();

  003b1	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  003b4	8b 10		 mov	 edx, DWORD PTR [eax]
  003b6	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  003b9	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  003bc	ff d0		 call	 eax

; 4366 : 
; 4367 : 	tagUserRule* pUserRule = pIServerUserItem->GetUserRule();

  003be	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003c1	8b 10		 mov	 edx, DWORD PTR [eax]
  003c3	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003c6	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  003c9	ff d0		 call	 eax
  003cb	89 45 94	 mov	 DWORD PTR _pUserRule$[ebp], eax

; 4368 : 	lstrcpyn(pUserRule->szPassword, pCreateSuccess->szPassword, CountArray(pUserRule->szPassword));

  003ce	6a 21		 push	 33			; 00000021H
  003d0	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  003d3	83 c0 5d	 add	 eax, 93			; 0000005dH
  003d6	50		 push	 eax
  003d7	8b 4d 94	 mov	 ecx, DWORD PTR _pUserRule$[ebp]
  003da	83 c1 10	 add	 ecx, 16			; 00000010H
  003dd	51		 push	 ecx
  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4369 : 
; 4370 : 	//如果房主参与游戏
; 4371 : 	if (pCreateSuccess->cbIsJoinGame)

  003e4	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  003e7	0f b6 48 5c	 movzx	 ecx, BYTE PTR [eax+92]
  003eb	85 c9		 test	 ecx, ecx
  003ed	0f 84 19 01 00
	00		 je	 $LN15@OnDBCreate

; 4372 : 	{
; 4373 : 
; 4374 : 		//执行坐下
; 4375 : 		if(pTableFrame->PerformSitDownAction(wChairID, pIServerUserItem, pCreateSuccess->szPassword)== FALSE)

  003f3	6a 00		 push	 0
  003f5	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  003f8	83 c0 5d	 add	 eax, 93			; 0000005dH
  003fb	50		 push	 eax
  003fc	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003ff	51		 push	 ecx
  00400	0f b7 55 e4	 movzx	 edx, WORD PTR _wChairID$[ebp]
  00404	52		 push	 edx
  00405	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00408	8b 10		 mov	 edx, DWORD PTR [eax]
  0040a	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0040d	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  00413	ff d0		 call	 eax
  00415	0f b6 c8	 movzx	 ecx, al
  00418	85 c9		 test	 ecx, ecx
  0041a	0f 85 ec 00 00
	00		 jne	 $LN15@OnDBCreate

; 4376 : 		{
; 4377 : 			CTraceService::TraceString(TEXT("创建桌子坐下失败"), TraceLevel_Info);

  00420	6a 00		 push	 0
  00422	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LPANEFD@?$LE?$LE?$LN?$KI?W?$MA?W?S?W?x?O?B?J?$KH?$LA?$NM@
  00427	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0042d	83 c4 08	 add	 esp, 8

; 4378 : 			//解锁桌子
; 4379 : 			pTableFrame->SetPersonalTableLocked(false);

  00430	6a 00		 push	 0
  00432	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00435	8b 10		 mov	 edx, DWORD PTR [eax]
  00437	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0043a	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0043d	ff d0		 call	 eax

; 4380 : 			pTableFrame->SetPersonalTable(0, 0, 0);

  0043f	6a 00		 push	 0
  00441	6a 00		 push	 0
  00443	6a 00		 push	 0
  00445	6a 00		 push	 0
  00447	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0044a	8b 10		 mov	 edx, DWORD PTR [eax]
  0044c	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0044f	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00452	ff d0		 call	 eax

; 4381 : 			pTableFrame->SetCellScore(0);

  00454	6a 00		 push	 0
  00456	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00459	8b 10		 mov	 edx, DWORD PTR [eax]
  0045b	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0045e	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00461	ff d0		 call	 eax

; 4382 : 			pTableFrame->SetTableOwner(0);

  00463	6a 00		 push	 0
  00465	8b 45 e8	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00468	8b 10		 mov	 edx, DWORD PTR [eax]
  0046a	8b 4d e8	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  0046d	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00470	ff d0		 call	 eax

; 4383 : 
; 4384 : 			//退还费用
; 4385 : 			DBR_GR_CancelCreateTable CancelCreateTable;
; 4386 : 			ZeroMemory(&CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  00472	6a 20		 push	 32			; 00000020H
  00474	6a 00		 push	 0
  00476	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _CancelCreateTable$1[ebp]
  0047c	50		 push	 eax
  0047d	e8 00 00 00 00	 call	 _memset
  00482	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4387 : 
; 4388 : 			CancelCreateTable.dwUserID = pCreateSuccess->dwUserID;

  00485	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00488	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048a	89 8d 74 ff ff
	ff		 mov	 DWORD PTR _CancelCreateTable$1[ebp], ecx

; 4389 : 			CancelCreateTable.dwClientAddr = pBindParameter->dwClientAddr;

  00490	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00493	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00496	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _CancelCreateTable$1[ebp+8], ecx

; 4390 : 			CancelCreateTable.dwTableID = pCreateSuccess->dwTableID;

  0049c	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  0049f	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  004a2	89 4d 80	 mov	 DWORD PTR _CancelCreateTable$1[ebp+12], ecx

; 4391 : 			CancelCreateTable.dwReason = CANCELTABLE_REASON_SYSTEM;

  004a5	c7 45 84 01 00
	00 00		 mov	 DWORD PTR _CancelCreateTable$1[ebp+16], 1

; 4392 : 			CancelCreateTable.dwDrawCountLimit = pCreateSuccess->dwDrawCountLimit;

  004ac	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  004af	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  004b2	89 4d 88	 mov	 DWORD PTR _CancelCreateTable$1[ebp+20], ecx

; 4393 : 			CancelCreateTable.dwDrawTimeLimit = pCreateSuccess->dwDrawTimeLimit;

  004b5	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  004b8	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  004bb	89 4d 8c	 mov	 DWORD PTR _CancelCreateTable$1[ebp+24], ecx

; 4394 : 			CancelCreateTable.dwServerID = m_pGameServiceOption->wServerID;

  004be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004c1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004c4	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  004c8	89 95 78 ff ff
	ff		 mov	 DWORD PTR _CancelCreateTable$1[ebp+4], edx

; 4395 : 
; 4396 : 			//投递数据
; 4397 : 			m_pIDBCorrespondManager->PostDataBaseRequest(pCreateSuccess->dwUserID, DBR_GR_CANCEL_CREATE_TABLE, dwContextID, &CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  004ce	6a 00		 push	 0
  004d0	6a 20		 push	 32			; 00000020H
  004d2	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _CancelCreateTable$1[ebp]
  004d8	50		 push	 eax
  004d9	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  004dc	51		 push	 ecx
  004dd	68 16 05 00 00	 push	 1302			; 00000516H
  004e2	8b 55 ec	 mov	 edx, DWORD PTR _pCreateSuccess$[ebp]
  004e5	8b 02		 mov	 eax, DWORD PTR [edx]
  004e7	50		 push	 eax
  004e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004eb	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  004f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004f4	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  004fa	8b 12		 mov	 edx, DWORD PTR [edx]
  004fc	51		 push	 ecx
  004fd	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00500	ff d0		 call	 eax
  00502	83 c4 1c	 add	 esp, 28			; 0000001cH

; 4398 : 
; 4399 : 			return true;

  00505	b0 01		 mov	 al, 1
  00507	e9 08 01 00 00	 jmp	 $LN1@OnDBCreate
$LN15@OnDBCreate:

; 4400 : 		}
; 4401 : 	}
; 4402 : 
; 4403 : 
; 4404 : 
; 4405 : 
; 4406 : 	//数据汇总
; 4407 : 	CMD_CS_C_CreateTable CS_CreateTable;
; 4408 : 	ZeroMemory(&CS_CreateTable, sizeof(CMD_CS_C_CreateTable));

  0050c	68 ef 00 00 00	 push	 239			; 000000efH
  00511	6a 00		 push	 0
  00513	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _CS_CreateTable$[ebp]
  00519	50		 push	 eax
  0051a	e8 00 00 00 00	 call	 _memset
  0051f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4409 : 
; 4410 : 	CS_CreateTable.dwSocketID = dwContextID;

  00522	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00525	89 85 84 fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp], eax

; 4411 : 	CS_CreateTable.dwClientAddr = pBindParameter->dwClientAddr;

  0052b	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0052e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00531	89 8d 88 fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+4], ecx

; 4412 : 	CS_CreateTable.PersonalTable.dwServerID	= m_pGameServiceOption->wServerID;

  00537	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0053a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0053d	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  00541	89 95 a2 fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+30], edx

; 4413 : 	CS_CreateTable.PersonalTable.dwKindID = m_pGameServiceOption->wKindID;

  00547	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0054a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0054d	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00550	89 95 a6 fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+34], edx

; 4414 : 	CS_CreateTable.PersonalTable.dwTableID = pCreateSuccess->dwTableID;

  00556	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00559	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0055c	89 8d aa fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+38], ecx

; 4415 : 	CS_CreateTable.PersonalTable.dwUserID = pIServerUserItem->GetUserID();

  00562	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00565	8b 10		 mov	 edx, DWORD PTR [eax]
  00567	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0056a	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0056d	ff d0		 call	 eax
  0056f	89 85 ae fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+42], eax

; 4416 : 	CS_CreateTable.PersonalTable.dwDrawCountLimit = pCreateSuccess->dwDrawCountLimit;

  00575	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00578	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0057b	89 8d b2 fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+46], ecx

; 4417 : 	CS_CreateTable.PersonalTable.dwDrawTimeLimit = pCreateSuccess->dwDrawTimeLimit;

  00581	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00584	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00587	89 8d b6 fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+50], ecx

; 4418 : 	CS_CreateTable.PersonalTable.lCellScore = pCreateSuccess->lCellScore;

  0058d	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  00590	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00593	99		 cdq
  00594	89 85 ba fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+54], eax
  0059a	89 95 be fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+58], edx

; 4419 : 	CS_CreateTable.PersonalTable.dwRoomTax = pCreateSuccess->dwRoomTax;

  005a0	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  005a3	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  005a6	89 8d cd fe ff
	ff		 mov	 DWORD PTR _CS_CreateTable$[ebp+73], ecx

; 4420 : 	CS_CreateTable.PersonalTable.wJoinGamePeopleCount = pCreateSuccess->wJoinGamePeopleCount;

  005ac	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  005af	66 8b 48 54	 mov	 cx, WORD PTR [eax+84]
  005b3	66 89 8d d1 fe
	ff ff		 mov	 WORD PTR _CS_CreateTable$[ebp+77], cx

; 4421 : 	lstrcpyn(CS_CreateTable.PersonalTable.szPassword, pCreateSuccess->szPassword, CountArray(CS_CreateTable.PersonalTable.szPassword));

  005ba	6a 21		 push	 33			; 00000021H
  005bc	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  005bf	83 c0 5d	 add	 eax, 93			; 0000005dH
  005c2	50		 push	 eax
  005c3	8d 8d d3 fe ff
	ff		 lea	 ecx, DWORD PTR _CS_CreateTable$[ebp+79]
  005c9	51		 push	 ecx
  005ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4422 : 	lstrcpyn(CS_CreateTable.szClientAddr, pCreateSuccess->szClientAddr, CountArray(CS_CreateTable.szClientAddr));

  005d0	6a 10		 push	 16			; 00000010H
  005d2	8b 45 ec	 mov	 eax, DWORD PTR _pCreateSuccess$[ebp]
  005d5	83 c0 7f	 add	 eax, 127		; 0000007fH
  005d8	50		 push	 eax
  005d9	8d 8d 8c fe ff
	ff		 lea	 ecx, DWORD PTR _CS_CreateTable$[ebp+8]
  005df	51		 push	 ecx
  005e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4423 : 
; 4424 : 	//发送数据
; 4425 : 	m_pITCPSocketService->SendData(MDM_CS_SERVICE_INFO, SUB_CS_C_CREATE_TABLE, &CS_CreateTable, sizeof(CMD_CS_C_CreateTable));

  005e6	68 ef 00 00 00	 push	 239			; 000000efH
  005eb	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _CS_CreateTable$[ebp]
  005f1	50		 push	 eax
  005f2	68 87 00 00 00	 push	 135			; 00000087H
  005f7	6a 02		 push	 2
  005f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005fc	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00602	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00605	8b 12		 mov	 edx, DWORD PTR [edx]
  00607	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  0060d	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00610	ff d0		 call	 eax

; 4426 : 
; 4427 : 
; 4428 : 	return true;

  00612	b0 01		 mov	 al, 1
$LN1@OnDBCreate:

; 4429 : }

  00614	5f		 pop	 edi
  00615	5e		 pop	 esi
  00616	5b		 pop	 ebx
  00617	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0061a	33 cd		 xor	 ecx, ebp
  0061c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00621	8b e5		 mov	 esp, ebp
  00623	5d		 pop	 ebp
  00624	c2 0c 00	 ret	 12			; 0000000cH
?OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBCreateSucess
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendDataSize$ = -220					; size = 2
_pUserInfo$1 = -216					; size = 4
_GrowLevelUpgrade$ = -212				; size = 192
_pGrowLevelUpgrade$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCGrowLevelUpgrade, COMDAT
; _this$ = ecx

; 4229 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4230 : 	//判断在线
; 4231 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 4232 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@OnDBPCGrow
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00043	75 07		 jne	 SHORT $LN2@OnDBPCGrow
$LN3@OnDBPCGrow:
  00045	b0 01		 mov	 al, 1
  00047	e9 37 01 00 00	 jmp	 $LN1@OnDBPCGrow
$LN2@OnDBPCGrow:

; 4233 : 
; 4234 : 	//获取用户
; 4235 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	85 c0		 test	 eax, eax
  00064	75 19		 jne	 SHORT $LN7@OnDBPCGrow
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN7@OnDBPCGrow
  0007e	cc		 int	 3
$LN7@OnDBPCGrow:

; 4236 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00082	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	ff d0		 call	 eax
  00095	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 4237 : 	if (pIServerUserItem==NULL) return false;

  00098	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0009c	75 07		 jne	 SHORT $LN4@OnDBPCGrow
  0009e	32 c0		 xor	 al, al
  000a0	e9 de 00 00 00	 jmp	 $LN1@OnDBPCGrow
$LN4@OnDBPCGrow:

; 4238 : 
; 4239 : 	//变量定义
; 4240 : 	DBO_GR_GrowLevelUpgrade * pGrowLevelUpgrade=(DBO_GR_GrowLevelUpgrade *)pData;

  000a5	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000a8	89 45 ec	 mov	 DWORD PTR _pGrowLevelUpgrade$[ebp], eax

; 4241 : 
; 4242 : 	//构造结构
; 4243 : 	CMD_GR_GrowLevelUpgrade GrowLevelUpgrade;
; 4244 : 
; 4245 : 	/*GrowLevelUpgrade.lCurrScore=pGrowLevelUpgrade->lCurrScore;
; 4246 : 	GrowLevelUpgrade.lCurrIngot=pGrowLevelUpgrade->lCurrIngot;*/
; 4247 : 	GrowLevelUpgrade.bConsumptionType = pGrowLevelUpgrade->bConsumptionType;

  000ab	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000b0	8b 75 ec	 mov	 esi, DWORD PTR _pGrowLevelUpgrade$[ebp]
  000b3	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR _GrowLevelUpgrade$[ebp]
  000b9	f3 a5		 rep movsd

; 4248 : 
; 4249 : 	lstrcpyn(GrowLevelUpgrade.szNotifyContent,pGrowLevelUpgrade->szNotifyContent,CountArray(GrowLevelUpgrade.szNotifyContent));

  000bb	68 80 00 00 00	 push	 128			; 00000080H
  000c0	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelUpgrade$[ebp]
  000c3	83 c0 40	 add	 eax, 64			; 00000040H
  000c6	50		 push	 eax
  000c7	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _GrowLevelUpgrade$[ebp+64]
  000cd	51		 push	 ecx
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4250 : 
; 4251 : 	if (GrowLevelUpgrade.szNotifyContent[0]!=0)

  000d4	b8 01 00 00 00	 mov	 eax, 1
  000d9	6b c8 00	 imul	 ecx, eax, 0
  000dc	0f be 94 0d 6c
	ff ff ff	 movsx	 edx, BYTE PTR _GrowLevelUpgrade$[ebp+ecx+64]
  000e4	85 d2		 test	 edx, edx
  000e6	74 3b		 je	 SHORT $LN5@OnDBPCGrow

; 4252 : 	{
; 4253 : 		tagUserInfo *pUserInfo=pIServerUserItem->GetUserInfo();

  000e8	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000eb	8b 10		 mov	 edx, DWORD PTR [eax]
  000ed	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f0	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000f3	ff d0		 call	 eax
  000f5	89 85 28 ff ff
	ff		 mov	 DWORD PTR _pUserInfo$1[ebp], eax

; 4254 : 		/*pUserInfo->lScore=pGrowLevelUpgrade->lCurrScore;
; 4255 : 		pUserInfo->lIngot=pGrowLevelUpgrade->lCurrIngot;*/
; 4256 : 		pUserInfo->bConsumptionType = pGrowLevelUpgrade->bConsumptionType;

  000fb	8b bd 28 ff ff
	ff		 mov	 edi, DWORD PTR _pUserInfo$1[ebp]
  00101	81 c7 98 00 00
	00		 add	 edi, 152		; 00000098H
  00107	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0010c	8b 75 ec	 mov	 esi, DWORD PTR _pGrowLevelUpgrade$[ebp]
  0010f	f3 a5		 rep movsd

; 4257 : 
; 4258 : 		SendUserInfoPacket(pIServerUserItem,dwContextID);

  00111	6a 00		 push	 0
  00113	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00116	50		 push	 eax
  00117	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0011a	51		 push	 ecx
  0011b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket
$LN5@OnDBPCGrow:

; 4259 : 	}
; 4260 : 
; 4261 : 	//发送数据
; 4262 : 	WORD wSendDataSize = sizeof(GrowLevelUpgrade)-sizeof(GrowLevelUpgrade.szNotifyContent);

  00123	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00128	66 89 85 24 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 4263 : 	wSendDataSize += CountStringBuffer(GrowLevelUpgrade.szNotifyContent);

  0012f	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _GrowLevelUpgrade$[ebp+64]
  00135	50		 push	 eax
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0013c	0f b7 8d 24 ff
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  00143	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00147	66 89 95 24 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 4264 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_USER,SUB_GR_GROWLEVEL_UPGRADE,&GrowLevelUpgrade,wSendDataSize);

  0014e	0f b7 85 24 ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  00155	50		 push	 eax
  00156	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR _GrowLevelUpgrade$[ebp]
  0015c	51		 push	 ecx
  0015d	68 9c 01 00 00	 push	 412			; 0000019cH
  00162	6a 03		 push	 3
  00164	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00167	52		 push	 edx
  00168	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016b	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00171	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00174	8b 01		 mov	 eax, DWORD PTR [ecx]
  00176	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0017c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0017f	ff d2		 call	 edx

; 4265 : 
; 4266 : 	return true;

  00181	b0 01		 mov	 al, 1
$LN1@OnDBPCGrow:

; 4267 : }

  00183	5f		 pop	 edi
  00184	5e		 pop	 esi
  00185	5b		 pop	 ebx
  00186	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00189	33 cd		 xor	 ecx, ebp
  0018b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCGrowLevelUpgrade
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_GrowLevelParameter$ = -48				; size = 26
_pGrowLevelParameter$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCGrowLevelParameter, COMDAT
; _this$ = ecx

; 4201 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4202 : 	//判断在线
; 4203 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00016	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00019	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0001e	50		 push	 eax
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002a	ff d0		 call	 eax
  0002c	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 4204 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00037	75 09		 jne	 SHORT $LN3@OnDBPCGrow
  00039	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003c	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00040	75 07		 jne	 SHORT $LN2@OnDBPCGrow
$LN3@OnDBPCGrow:
  00042	b0 01		 mov	 al, 1
  00044	e9 b8 00 00 00	 jmp	 $LN1@OnDBPCGrow
$LN2@OnDBPCGrow:

; 4205 : 
; 4206 : 	//获取用户
; 4207 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  00049	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00051	50		 push	 eax
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005d	ff d0		 call	 eax
  0005f	85 c0		 test	 eax, eax
  00061	75 19		 jne	 SHORT $LN5@OnDBPCGrow
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00069	83 c1 06	 add	 ecx, 6
  0006c	51		 push	 ecx
  0006d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00072	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00077	85 c0		 test	 eax, eax
  00079	74 01		 je	 SHORT $LN5@OnDBPCGrow
  0007b	cc		 int	 3
$LN5@OnDBPCGrow:

; 4208 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0007f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00084	50		 push	 eax
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00090	ff d0		 call	 eax
  00092	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 4209 : 
; 4210 : 	//变量定义
; 4211 : 	DBO_GR_GrowLevelParameter * pGrowLevelParameter=(DBO_GR_GrowLevelParameter *)pData;

  00095	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00098	89 45 ec	 mov	 DWORD PTR _pGrowLevelParameter$[ebp], eax

; 4212 : 
; 4213 : 	//构造结构
; 4214 : 	CMD_GR_GrowLevelParameter GrowLevelParameter;
; 4215 : 	GrowLevelParameter.wCurrLevelID=pGrowLevelParameter->wCurrLevelID;	

  0009b	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelParameter$[ebp]
  0009e	66 8b 08	 mov	 cx, WORD PTR [eax]
  000a1	66 89 4d d0	 mov	 WORD PTR _GrowLevelParameter$[ebp], cx

; 4216 : 	GrowLevelParameter.dwExperience=pGrowLevelParameter->dwExperience;

  000a5	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelParameter$[ebp]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	89 4d d2	 mov	 DWORD PTR _GrowLevelParameter$[ebp+2], ecx

; 4217 : 	GrowLevelParameter.dwUpgradeExperience=pGrowLevelParameter->dwUpgradeExperience;

  000ae	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelParameter$[ebp]
  000b1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b4	89 4d d6	 mov	 DWORD PTR _GrowLevelParameter$[ebp+6], ecx

; 4218 : 	GrowLevelParameter.lUpgradeRewardGold=pGrowLevelParameter->lUpgradeRewardGold;

  000b7	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelParameter$[ebp]
  000ba	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000bd	89 4d da	 mov	 DWORD PTR _GrowLevelParameter$[ebp+10], ecx
  000c0	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  000c3	89 55 de	 mov	 DWORD PTR _GrowLevelParameter$[ebp+14], edx

; 4219 : 	GrowLevelParameter.lUpgradeRewardIngot=pGrowLevelParameter->lUpgradeRewardIngot;

  000c6	8b 45 ec	 mov	 eax, DWORD PTR _pGrowLevelParameter$[ebp]
  000c9	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000cc	89 4d e2	 mov	 DWORD PTR _GrowLevelParameter$[ebp+18], ecx
  000cf	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000d2	89 55 e6	 mov	 DWORD PTR _GrowLevelParameter$[ebp+22], edx

; 4220 : 
; 4221 : 	//发送数据
; 4222 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_USER,SUB_GR_GROWLEVEL_PARAMETER,&GrowLevelParameter,sizeof(GrowLevelParameter));

  000d5	6a 1a		 push	 26			; 0000001aH
  000d7	8d 45 d0	 lea	 eax, DWORD PTR _GrowLevelParameter$[ebp]
  000da	50		 push	 eax
  000db	68 9b 01 00 00	 push	 411			; 0000019bH
  000e0	6a 03		 push	 3
  000e2	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  000e5	51		 push	 ecx
  000e6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e9	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  000ef	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 10		 mov	 edx, DWORD PTR [eax]
  000f4	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  000fa	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000fd	ff d0		 call	 eax

; 4223 : 
; 4224 : 	return true;

  000ff	b0 01		 mov	 al, 1
$LN1@OnDBPCGrow:

; 4225 : }

  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00107	33 cd		 xor	 ecx, ebp
  00109	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCGrowLevelParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCGrowLevelConfig@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_pGrowLevelConfig$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCGrowLevelConfig@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCGrowLevelConfig, COMDAT
; _this$ = ecx

; 4188 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4189 : 	//变量定义
; 4190 : 	DBO_GR_GrowLevelConfig * pGrowLevelConfig=(DBO_GR_GrowLevelConfig *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pGrowLevelConfig$[ebp], eax

; 4191 : 
; 4192 : 	//拷贝数据	
; 4193 : 	m_wLevelCount = pGrowLevelConfig->wLevelCount;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _pGrowLevelConfig$[ebp]
  00018	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0001b	66 89 90 66 db
	00 00		 mov	 WORD PTR [eax+56166], dx

; 4194 : 	CopyMemory(m_GrowLevelConfig,&pGrowLevelConfig->GrowLevelConfig,sizeof(tagGrowLevelConfig)*m_wLevelCount);

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	0f b7 88 66 db
	00 00		 movzx	 ecx, WORD PTR [eax+56166]
  0002c	6b d1 06	 imul	 edx, ecx, 6
  0002f	52		 push	 edx
  00030	8b 45 f8	 mov	 eax, DWORD PTR _pGrowLevelConfig$[ebp]
  00033	83 c0 02	 add	 eax, 2
  00036	50		 push	 eax
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 68 db 00
	00		 add	 ecx, 56168		; 0000db68H
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _memcpy
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4195 : 
; 4196 : 	return true;

  00049	b0 01		 mov	 al, 1

; 4197 : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCGrowLevelConfig@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCGrowLevelConfig
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBSystemMessageFinish@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_nIndex$1 = -12						; size = 4
_pTagSystemMessage$2 = -8				; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBSystemMessageFinish@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBSystemMessageFinish, COMDAT
; _this$ = ecx

; 4141 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4142 : 	//处理临时消息
; 4143 : 	if (m_SystemMessageBuffer.GetCount() > 0)

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00015	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
  0001a	85 c0		 test	 eax, eax
  0001c	7e 7a		 jle	 SHORT $LN5@OnDBSystem

; 4144 : 	{
; 4145 : 		//变量定义
; 4146 : 		tagSystemMessage *pTagSystemMessage = NULL;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pTagSystemMessage$2[ebp], 0

; 4147 : 
; 4148 : 		for (INT_PTR nIndex = m_SystemMessageBuffer.GetCount() - 1; nIndex >= 0; nIndex--)

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  0002e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
  00033	83 e8 01	 sub	 eax, 1
  00036	89 45 f4	 mov	 DWORD PTR _nIndex$1[ebp], eax
  00039	eb 09		 jmp	 SHORT $LN4@OnDBSystem
$LN2@OnDBSystem:
  0003b	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0003e	83 e8 01	 sub	 eax, 1
  00041	89 45 f4	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@OnDBSystem:
  00044	83 7d f4 00	 cmp	 DWORD PTR _nIndex$1[ebp], 0
  00048	7c 4e		 jl	 SHORT $LN5@OnDBSystem

; 4149 : 		{
; 4150 : 			pTagSystemMessage = m_SystemMessageBuffer[nIndex];

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00057	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 4d f8	 mov	 DWORD PTR _pTagSystemMessage$2[ebp], ecx

; 4151 : 			if (pTagSystemMessage && pTagSystemMessage->SystemMessage.dwMessageID == TEMP_MESSAGE_ID)

  00061	83 7d f8 00	 cmp	 DWORD PTR _pTagSystemMessage$2[ebp], 0
  00065	74 2f		 je	 SHORT $LN6@OnDBSystem
  00067	8b 45 f8	 mov	 eax, DWORD PTR _pTagSystemMessage$2[ebp]
  0006a	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  0006e	75 26		 jne	 SHORT $LN6@OnDBSystem

; 4152 : 			{
; 4153 : 				m_SystemMessageActive.Add(pTagSystemMessage);

  00070	8d 45 f8	 lea	 eax, DWORD PTR _pTagSystemMessage$2[ebp]
  00073	50		 push	 eax
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  0007d	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add

; 4154 : 				m_SystemMessageBuffer.RemoveAt(nIndex);

  00082	6a 01		 push	 1
  00084	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00087	50		 push	 eax
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00091	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAt
$LN6@OnDBSystem:

; 4155 : 			}
; 4156 : 		}

  00096	eb a3		 jmp	 SHORT $LN2@OnDBSystem
$LN5@OnDBSystem:

; 4157 : 	}
; 4158 : 
; 4159 : 	return true;

  00098	b0 01		 mov	 al, 1

; 4160 : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 0c 00	 ret	 12			; 0000000cH
?OnDBSystemMessageFinish@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBSystemMessageFinish
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBSensitiveWords@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_pWords$ = -8						; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBSensitiveWords@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBSensitiveWords, COMDAT
; _this$ = ecx

; 4164 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4165 : 	//开始加载
; 4166 : 	if(dwContextID==0xfffe)

  0000c	81 7d 08 fe ff
	00 00		 cmp	 DWORD PTR _dwContextID$[ebp], 65534 ; 0000fffeH
  00013	75 2d		 jne	 SHORT $LN2@OnDBSensit

; 4167 : 	{
; 4168 : 		m_WordsFilter.ResetSensitiveWordArray();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  0001e	e8 00 00 00 00	 call	 ?ResetSensitiveWordArray@CSensitiveWordsFilter@@QAEXXZ ; CSensitiveWordsFilter::ResetSensitiveWordArray

; 4169 : 		m_pITimerEngine->KillTimer(IDI_LOAD_SENSITIVE_WORD);

  00023	6a 0a		 push	 10			; 0000000aH
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0002e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 01		 mov	 eax, DWORD PTR [ecx]
  00033	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  00039	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0003c	ff d2		 call	 edx

; 4170 : 		return true;			

  0003e	b0 01		 mov	 al, 1
  00040	eb 35		 jmp	 SHORT $LN1@OnDBSensit
$LN2@OnDBSensit:

; 4171 : 	}
; 4172 : 
; 4173 : 	//加载完成
; 4174 : 	if(dwContextID==0xffff)

  00042	81 7d 08 ff ff
	00 00		 cmp	 DWORD PTR _dwContextID$[ebp], 65535 ; 0000ffffH
  00049	75 12		 jne	 SHORT $LN3@OnDBSensit

; 4175 : 	{
; 4176 : 		m_WordsFilter.FinishAdd();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  00054	e8 00 00 00 00	 call	 ?FinishAdd@CSensitiveWordsFilter@@QAEXXZ ; CSensitiveWordsFilter::FinishAdd

; 4177 : 		return true;

  00059	b0 01		 mov	 al, 1
  0005b	eb 1a		 jmp	 SHORT $LN1@OnDBSensit
$LN3@OnDBSensit:

; 4178 : 	}
; 4179 : 
; 4180 : 	//加载敏感词
; 4181 : 	const TCHAR *pWords=(const TCHAR*)pData;

  0005d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00060	89 45 f8	 mov	 DWORD PTR _pWords$[ebp], eax

; 4182 : 	m_WordsFilter.AddSensitiveWords(pWords);

  00063	8b 45 f8	 mov	 eax, DWORD PTR _pWords$[ebp]
  00066	50		 push	 eax
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  00070	e8 00 00 00 00	 call	 ?AddSensitiveWords@CSensitiveWordsFilter@@QAE_NPBD@Z ; CSensitiveWordsFilter::AddSensitiveWords

; 4183 : 	return true;

  00075	b0 01		 mov	 al, 1
$LN1@OnDBSensit:

; 4184 : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 0c 00	 ret	 12			; 0000000cH
?OnDBSensitiveWords@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBSensitiveWords
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
$T1 = -88						; size = 4
_pSendMessage$ = -20					; size = 4
_pTagSystemMessage$2 = -16				; size = 4
_nIndex$3 = -12						; size = 4
_pSystemMessage$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBSystemMessage, COMDAT
; _this$ = ecx

; 4103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4104 : 	//参数校验
; 4105 : 	ASSERT(wDataSize == sizeof(DBR_GR_SystemMessage));

  0000c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	3d a0 00 00 00	 cmp	 eax, 160		; 000000a0H
  00015	74 19		 je	 SHORT $LN9@OnDBSystem
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0001d	83 c1 02	 add	 ecx, 2
  00020	51		 push	 ecx
  00021	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00026	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002b	85 c0		 test	 eax, eax
  0002d	74 01		 je	 SHORT $LN9@OnDBSystem
  0002f	cc		 int	 3
$LN9@OnDBSystem:

; 4106 : 	if (wDataSize != sizeof(DBR_GR_SystemMessage)) return false;

  00030	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00034	3d a0 00 00 00	 cmp	 eax, 160		; 000000a0H
  00039	74 07		 je	 SHORT $LN5@OnDBSystem
  0003b	32 c0		 xor	 al, al
  0003d	e9 14 01 00 00	 jmp	 $LN1@OnDBSystem
$LN5@OnDBSystem:

; 4107 : 
; 4108 : 	//提取数据
; 4109 : 	DBR_GR_SystemMessage * pSystemMessage = (DBR_GR_SystemMessage *)pData;

  00042	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00045	89 45 f8	 mov	 DWORD PTR _pSystemMessage$[ebp], eax

; 4110 : 	if (pSystemMessage == NULL) return false;

  00048	83 7d f8 00	 cmp	 DWORD PTR _pSystemMessage$[ebp], 0
  0004c	75 07		 jne	 SHORT $LN6@OnDBSystem
  0004e	32 c0		 xor	 al, al
  00050	e9 01 01 00 00	 jmp	 $LN1@OnDBSystem
$LN6@OnDBSystem:

; 4111 : 
; 4112 : 	for (INT_PTR nIndex = m_SystemMessageBuffer.GetCount() - 1; nIndex >= 0; nIndex--)

  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  0005e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
  00063	83 e8 01	 sub	 eax, 1
  00066	89 45 f4	 mov	 DWORD PTR _nIndex$3[ebp], eax
  00069	eb 09		 jmp	 SHORT $LN4@OnDBSystem
$LN2@OnDBSystem:
  0006b	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$3[ebp]
  0006e	83 e8 01	 sub	 eax, 1
  00071	89 45 f4	 mov	 DWORD PTR _nIndex$3[ebp], eax
$LN4@OnDBSystem:
  00074	83 7d f4 00	 cmp	 DWORD PTR _nIndex$3[ebp], 0
  00078	7c 6e		 jl	 SHORT $LN3@OnDBSystem

; 4113 : 	{
; 4114 : 		tagSystemMessage *pTagSystemMessage = m_SystemMessageBuffer[nIndex];

  0007a	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$3[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00087	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
  0008c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008e	89 4d f0	 mov	 DWORD PTR _pTagSystemMessage$2[ebp], ecx

; 4115 : 		if (pTagSystemMessage && pTagSystemMessage->SystemMessage.dwMessageID == pSystemMessage->dwMessageID)

  00091	83 7d f0 00	 cmp	 DWORD PTR _pTagSystemMessage$2[ebp], 0
  00095	74 4f		 je	 SHORT $LN7@OnDBSystem
  00097	8b 45 f0	 mov	 eax, DWORD PTR _pTagSystemMessage$2[ebp]
  0009a	8b 4d f8	 mov	 ecx, DWORD PTR _pSystemMessage$[ebp]
  0009d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a0	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a2	75 42		 jne	 SHORT $LN7@OnDBSystem

; 4116 : 		{
; 4117 : 			CopyMemory(&pTagSystemMessage->SystemMessage, pSystemMessage, sizeof(DBR_GR_SystemMessage));

  000a4	68 a0 00 00 00	 push	 160			; 000000a0H
  000a9	8b 45 f8	 mov	 eax, DWORD PTR _pSystemMessage$[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f0	 mov	 ecx, DWORD PTR _pTagSystemMessage$2[ebp]
  000b0	83 c1 04	 add	 ecx, 4
  000b3	51		 push	 ecx
  000b4	e8 00 00 00 00	 call	 _memcpy
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4118 : 			m_SystemMessageActive.Add(pTagSystemMessage);

  000bc	8d 45 f0	 lea	 eax, DWORD PTR _pTagSystemMessage$2[ebp]
  000bf	50		 push	 eax
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  000c9	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add

; 4119 : 			m_SystemMessageBuffer.RemoveAt(nIndex);

  000ce	6a 01		 push	 1
  000d0	8b 45 f4	 mov	 eax, DWORD PTR _nIndex$3[ebp]
  000d3	50		 push	 eax
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  000dd	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAt

; 4120 : 
; 4121 : 			return true;

  000e2	b0 01		 mov	 al, 1
  000e4	eb 70		 jmp	 SHORT $LN1@OnDBSystem
$LN7@OnDBSystem:

; 4122 : 		}
; 4123 : 	}

  000e6	eb 83		 jmp	 SHORT $LN2@OnDBSystem
$LN3@OnDBSystem:

; 4124 : 
; 4125 : 	//定义变量
; 4126 : 	tagSystemMessage  *pSendMessage = new tagSystemMessage;

  000e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  000ed	83 c0 17	 add	 eax, 23			; 00000017H
  000f0	50		 push	 eax
  000f1	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000f6	68 9e 00 00 00	 push	 158			; 0000009eH
  000fb	e8 00 00 00 00	 call	 ??2@YAPAXIPBDH@Z	; operator new
  00100	83 c4 0c	 add	 esp, 12			; 0000000cH
  00103	89 45 a8	 mov	 DWORD PTR $T1[ebp], eax
  00106	8b 4d a8	 mov	 ecx, DWORD PTR $T1[ebp]
  00109	89 4d ec	 mov	 DWORD PTR _pSendMessage$[ebp], ecx

; 4127 : 	ZeroMemory(pSendMessage, sizeof(tagSystemMessage));

  0010c	68 9e 00 00 00	 push	 158			; 0000009eH
  00111	6a 00		 push	 0
  00113	8b 45 ec	 mov	 eax, DWORD PTR _pSendMessage$[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 _memset
  0011c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4128 : 
; 4129 : 	//设置变量
; 4130 : 	pSendMessage->dwLastTime = (DWORD)pSystemMessage->tStartTime;

  0011f	8b 45 f8	 mov	 eax, DWORD PTR _pSystemMessage$[ebp]
  00122	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00125	8b 55 ec	 mov	 edx, DWORD PTR _pSendMessage$[ebp]
  00128	89 0a		 mov	 DWORD PTR [edx], ecx

; 4131 : 	CopyMemory(&pSendMessage->SystemMessage, pSystemMessage, sizeof(DBR_GR_SystemMessage));

  0012a	68 a0 00 00 00	 push	 160			; 000000a0H
  0012f	8b 45 f8	 mov	 eax, DWORD PTR _pSystemMessage$[ebp]
  00132	50		 push	 eax
  00133	8b 4d ec	 mov	 ecx, DWORD PTR _pSendMessage$[ebp]
  00136	83 c1 04	 add	 ecx, 4
  00139	51		 push	 ecx
  0013a	e8 00 00 00 00	 call	 _memcpy
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4132 : 
; 4133 : 	//记录消息
; 4134 : 	m_SystemMessageActive.Add(pSendMessage);

  00142	8d 45 ec	 lea	 eax, DWORD PTR _pSendMessage$[ebp]
  00145	50		 push	 eax
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  0014f	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add

; 4135 : 
; 4136 : 	return true;

  00154	b0 01		 mov	 al, 1
$LN1@OnDBSystem:

; 4137 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 0c 00	 ret	 12			; 0000000cH
?OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBSystemMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_lVarInsureScore$1 = -240				; size = 8
_lCurrScore$2 = -232					; size = 8
_pUserInfo$3 = -224					; size = 4
_wSendDataSize$ = -220					; size = 2
_ExchangeResult$ = -216					; size = 193
_pExchangeResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBExChangeResult, COMDAT
; _this$ = ecx

; 3741 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3742 : 	//获取用户
; 3743 : 	WORD wBindIndex=LOWORD(dwContextID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 3744 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3745 : 
; 3746 : 	//用户效验
; 3747 : 	ASSERT(pIServerUserItem!=NULL);

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN6@OnDBExChan
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c0 06	 add	 eax, 6
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN6@OnDBExChan
  00057	cc		 int	 3
$LN6@OnDBExChan:

; 3748 : 	if (pIServerUserItem==NULL) return false;

  00058	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN2@OnDBExChan
  0005e	32 c0		 xor	 al, al
  00060	e9 5a 01 00 00	 jmp	 $LN1@OnDBExChan
$LN2@OnDBExChan:

; 3749 : 
; 3750 : 	//提取数据
; 3751 : 	DBO_GR_ExchangeResult * pExchangeResult=(DBO_GR_ExchangeResult *)pData;

  00065	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00068	89 45 ec	 mov	 DWORD PTR _pExchangeResult$[ebp], eax

; 3752 : 
; 3753 : 	//构造结构
; 3754 : 	CMD_GR_ExchangeResult ExchangeResult;
; 3755 : 	ZeroMemory(&ExchangeResult,sizeof(ExchangeResult));

  0006b	68 c1 00 00 00	 push	 193			; 000000c1H
  00070	6a 00		 push	 0
  00072	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _ExchangeResult$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 _memset
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3756 : 
; 3757 : 	//设置变量
; 3758 : 	ExchangeResult.bSuccessed=pExchangeResult->bSuccessed;

  00081	8b 45 ec	 mov	 eax, DWORD PTR _pExchangeResult$[ebp]
  00084	8a 08		 mov	 cl, BYTE PTR [eax]
  00086	88 8d 28 ff ff
	ff		 mov	 BYTE PTR _ExchangeResult$[ebp], cl

; 3759 : 
; 3760 : 	/*ExchangeResult.lCurrScore=pExchangeResult->lCurrScore;
; 3761 : 	ExchangeResult.lCurrIngot=pExchangeResult->lCurrIngot;
; 3762 : 	ExchangeResult.dCurrBeans=pExchangeResult->dCurrBeans;*/
; 3763 : 	ExchangeResult.bConsumptionType = pExchangeResult->bConsumptionType;

  0008c	8b 75 ec	 mov	 esi, DWORD PTR _pExchangeResult$[ebp]
  0008f	83 c6 01	 add	 esi, 1
  00092	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00097	8d bd 29 ff ff
	ff		 lea	 edi, DWORD PTR _ExchangeResult$[ebp+1]
  0009d	f3 a5		 rep movsd

; 3764 : 
; 3765 : 	lstrcpyn(ExchangeResult.szNotifyContent,pExchangeResult->szNotifyContent,CountArray(ExchangeResult.szNotifyContent));

  0009f	68 80 00 00 00	 push	 128			; 00000080H
  000a4	8b 45 ec	 mov	 eax, DWORD PTR _pExchangeResult$[ebp]
  000a7	83 c0 41	 add	 eax, 65			; 00000041H
  000aa	50		 push	 eax
  000ab	8d 8d 69 ff ff
	ff		 lea	 ecx, DWORD PTR _ExchangeResult$[ebp+65]
  000b1	51		 push	 ecx
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3766 : 
; 3767 : 	//发送数据
; 3768 : 	WORD wSendDataSize = sizeof(ExchangeResult)-sizeof(ExchangeResult.szNotifyContent);

  000b8	b8 41 00 00 00	 mov	 eax, 65			; 00000041H
  000bd	66 89 85 24 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 3769 : 	wSendDataSize += CountStringBuffer(ExchangeResult.szNotifyContent);

  000c4	8d 85 69 ff ff
	ff		 lea	 eax, DWORD PTR _ExchangeResult$[ebp+65]
  000ca	50		 push	 eax
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000d1	0f b7 8d 24 ff
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  000d8	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  000dc	66 89 95 24 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 3770 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_EXCHANGE,SUB_GR_EXCHANGE_RESULT,&ExchangeResult,wSendDataSize);

  000e3	0f b7 85 24 ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  000ea	50		 push	 eax
  000eb	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _ExchangeResult$[ebp]
  000f1	51		 push	 ecx
  000f2	68 96 01 00 00	 push	 406			; 00000196H
  000f7	6a 07		 push	 7
  000f9	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  000fc	52		 push	 edx
  000fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00106	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00109	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010b	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00111	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00114	ff d2		 call	 edx

; 3771 : 
; 3772 : 	//更新元宝
; 3773 : 	if (ExchangeResult.bSuccessed==true)

  00116	0f b6 85 28 ff
	ff ff		 movzx	 eax, BYTE PTR _ExchangeResult$[ebp]
  0011d	83 f8 01	 cmp	 eax, 1
  00120	75 2c		 jne	 SHORT $LN3@OnDBExChan

; 3774 : 	{
; 3775 : 		//修改信息
; 3776 : 		tagUserInfo *pUserInfo=pIServerUserItem->GetUserInfo();

  00122	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00125	8b 10		 mov	 edx, DWORD PTR [eax]
  00127	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0012a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0012d	ff d0		 call	 eax
  0012f	89 85 20 ff ff
	ff		 mov	 DWORD PTR _pUserInfo$3[ebp], eax

; 3777 : 		/*pUserInfo->lIngot=pExchangeResult->lCurrIngot;
; 3778 : 		pUserInfo->dBeans=pExchangeResult->dCurrBeans;*/
; 3779 : 		pUserInfo->bConsumptionType = pExchangeResult->bConsumptionType;

  00135	8b 75 ec	 mov	 esi, DWORD PTR _pExchangeResult$[ebp]
  00138	83 c6 01	 add	 esi, 1
  0013b	8b bd 20 ff ff
	ff		 mov	 edi, DWORD PTR _pUserInfo$3[ebp]
  00141	81 c7 98 00 00
	00		 add	 edi, 152		; 00000098H
  00147	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0014c	f3 a5		 rep movsd
$LN3@OnDBExChan:

; 3780 : 	}
; 3781 : 
; 3782 : 	//更新游戏币
; 3783 : 	if(/*m_pGameServiceOption->wServerType==GAME_GENRE_GOLD && */ExchangeResult.bSuccessed==true)

  0014e	0f b6 85 28 ff
	ff ff		 movzx	 eax, BYTE PTR _ExchangeResult$[ebp]
  00155	83 f8 01	 cmp	 eax, 1
  00158	75 63		 jne	 SHORT $LN4@OnDBExChan

; 3784 : 	{
; 3785 : 		SCORE lCurrScore=pIServerUserItem->GetUserScore();

  0015a	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0015d	8b 10		 mov	 edx, DWORD PTR [eax]
  0015f	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00162	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00168	ff d0		 call	 eax
  0016a	89 85 18 ff ff
	ff		 mov	 DWORD PTR _lCurrScore$2[ebp], eax
  00170	89 95 1c ff ff
	ff		 mov	 DWORD PTR _lCurrScore$2[ebp+4], edx

; 3786 : 		SCORE lVarInsureScore=pExchangeResult->bConsumptionType.lScore-lCurrScore;

  00176	8b 45 ec	 mov	 eax, DWORD PTR _pExchangeResult$[ebp]
  00179	8b 48 11	 mov	 ecx, DWORD PTR [eax+17]
  0017c	2b 8d 18 ff ff
	ff		 sub	 ecx, DWORD PTR _lCurrScore$2[ebp]
  00182	8b 50 15	 mov	 edx, DWORD PTR [eax+21]
  00185	1b 95 1c ff ff
	ff		 sbb	 edx, DWORD PTR _lCurrScore$2[ebp+4]
  0018b	89 8d 10 ff ff
	ff		 mov	 DWORD PTR _lVarInsureScore$1[ebp], ecx
  00191	89 95 14 ff ff
	ff		 mov	 DWORD PTR _lVarInsureScore$1[ebp+4], edx

; 3787 : 		pIServerUserItem->ModifyUserInsure(lVarInsureScore,0,0);

  00197	6a 00		 push	 0
  00199	6a 00		 push	 0
  0019b	6a 00		 push	 0
  0019d	6a 00		 push	 0
  0019f	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _lVarInsureScore$1[ebp+4]
  001a5	50		 push	 eax
  001a6	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR _lVarInsureScore$1[ebp]
  001ac	51		 push	 ecx
  001ad	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001b0	8b 02		 mov	 eax, DWORD PTR [edx]
  001b2	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b5	8b 90 1c 01 00
	00		 mov	 edx, DWORD PTR [eax+284]
  001bb	ff d2		 call	 edx
$LN4@OnDBExChan:

; 3788 : 	}
; 3789 : 
; 3790 : 	return true;

  001bd	b0 01		 mov	 al, 1
$LN1@OnDBExChan:

; 3791 : }

  001bf	5f		 pop	 edi
  001c0	5e		 pop	 esi
  001c1	5b		 pop	 ebx
  001c2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c5	33 cd		 xor	 ecx, ebp
  001c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBExChangeResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_lOldScore$1 = -232					; size = 8
_pUserInfo$2 = -224					; size = 4
_wSendDataSize$ = -220					; size = 2
_PurchaseResult$ = -216					; size = 194
_pPurchaseResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPurchaseResult, COMDAT
; _this$ = ecx

; 3680 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3681 : 	//获取用户
; 3682 : 	WORD wBindIndex=LOWORD(dwContextID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 3683 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3684 : 
; 3685 : 	//用户效验
; 3686 : 	ASSERT(pIServerUserItem!=NULL);

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN6@OnDBPurcha
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c0 06	 add	 eax, 6
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN6@OnDBPurcha
  00057	cc		 int	 3
$LN6@OnDBPurcha:

; 3687 : 	if (pIServerUserItem==NULL) return false;

  00058	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN2@OnDBPurcha
  0005e	32 c0		 xor	 al, al
  00060	e9 eb 01 00 00	 jmp	 $LN1@OnDBPurcha
$LN2@OnDBPurcha:

; 3688 : 
; 3689 : 	//提取数据
; 3690 : 	DBO_GR_PurchaseResult * pPurchaseResult=(DBO_GR_PurchaseResult *)pData;

  00065	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00068	89 45 ec	 mov	 DWORD PTR _pPurchaseResult$[ebp], eax

; 3691 : 
; 3692 : 	//构造结构
; 3693 : 	CMD_GR_PurchaseResult PurchaseResult;
; 3694 : 	ZeroMemory(&PurchaseResult,sizeof(PurchaseResult));

  0006b	68 c2 00 00 00	 push	 194			; 000000c2H
  00070	6a 00		 push	 0
  00072	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _PurchaseResult$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 _memset
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3695 : 
; 3696 : 	//设置变量
; 3697 : 	PurchaseResult.bSuccessed=pPurchaseResult->bSuccessed;

  00081	8b 45 ec	 mov	 eax, DWORD PTR _pPurchaseResult$[ebp]
  00084	8a 08		 mov	 cl, BYTE PTR [eax]
  00086	88 8d 28 ff ff
	ff		 mov	 BYTE PTR _PurchaseResult$[ebp], cl

; 3698 : 
; 3699 : 	/*PurchaseResult.lCurrScore=pPurchaseResult->lCurrScore;
; 3700 : 	PurchaseResult.dCurrBeans=pPurchaseResult->dCurrBeans;*/
; 3701 : 	PurchaseResult.bConsumptionType = pPurchaseResult->bConsumptionType;

  0008c	8b 75 ec	 mov	 esi, DWORD PTR _pPurchaseResult$[ebp]
  0008f	83 c6 08	 add	 esi, 8
  00092	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00097	8d bd 2a ff ff
	ff		 lea	 edi, DWORD PTR _PurchaseResult$[ebp+2]
  0009d	f3 a5		 rep movsd

; 3702 : 
; 3703 : 	PurchaseResult.cbMemberOrder=pPurchaseResult->cbMemberOrder;

  0009f	8b 45 ec	 mov	 eax, DWORD PTR _pPurchaseResult$[ebp]
  000a2	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000a5	88 8d 29 ff ff
	ff		 mov	 BYTE PTR _PurchaseResult$[ebp+1], cl

; 3704 : 	lstrcpyn(PurchaseResult.szNotifyContent,pPurchaseResult->szNotifyContent,CountArray(PurchaseResult.szNotifyContent));

  000ab	68 80 00 00 00	 push	 128			; 00000080H
  000b0	8b 45 ec	 mov	 eax, DWORD PTR _pPurchaseResult$[ebp]
  000b3	83 c0 48	 add	 eax, 72			; 00000048H
  000b6	50		 push	 eax
  000b7	8d 8d 6a ff ff
	ff		 lea	 ecx, DWORD PTR _PurchaseResult$[ebp+66]
  000bd	51		 push	 ecx
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3705 : 
; 3706 : 	//发送数据
; 3707 : 	WORD wSendDataSize = sizeof(PurchaseResult)-sizeof(PurchaseResult.szNotifyContent);

  000c4	b8 42 00 00 00	 mov	 eax, 66			; 00000042H
  000c9	66 89 85 24 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 3708 : 	wSendDataSize += CountStringBuffer(PurchaseResult.szNotifyContent);

  000d0	8d 85 6a ff ff
	ff		 lea	 eax, DWORD PTR _PurchaseResult$[ebp+66]
  000d6	50		 push	 eax
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000dd	0f b7 8d 24 ff
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  000e4	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  000e8	66 89 95 24 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 3709 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_EXCHANGE,SUB_GR_PURCHASE_RESULT,&PurchaseResult,wSendDataSize);

  000ef	0f b7 85 24 ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  000f6	50		 push	 eax
  000f7	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _PurchaseResult$[ebp]
  000fd	51		 push	 ecx
  000fe	68 93 01 00 00	 push	 403			; 00000193H
  00103	6a 07		 push	 7
  00105	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00108	52		 push	 edx
  00109	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00112	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00115	8b 01		 mov	 eax, DWORD PTR [ecx]
  00117	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0011d	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00120	ff d2		 call	 edx

; 3710 : 
; 3711 : 	//结果判断
; 3712 : 	if(PurchaseResult.bSuccessed==true)

  00122	0f b6 85 28 ff
	ff ff		 movzx	 eax, BYTE PTR _PurchaseResult$[ebp]
  00129	83 f8 01	 cmp	 eax, 1
  0012c	0f 85 1c 01 00
	00		 jne	 $LN3@OnDBPurcha

; 3713 : 	{
; 3714 : 		//修改会员等级
; 3715 : 		tagUserInfo *pUserInfo=pIServerUserItem->GetUserInfo();

  00132	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00135	8b 10		 mov	 edx, DWORD PTR [eax]
  00137	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0013a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0013d	ff d0		 call	 eax
  0013f	89 85 20 ff ff
	ff		 mov	 DWORD PTR _pUserInfo$2[ebp], eax

; 3716 : 		pUserInfo->cbMemberOrder=pPurchaseResult->cbMemberOrder;

  00145	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  0014b	8b 4d ec	 mov	 ecx, DWORD PTR _pPurchaseResult$[ebp]
  0014e	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00151	88 90 8f 00 00
	00		 mov	 BYTE PTR [eax+143], dl

; 3717 : 
; 3718 : 		//pUserInfo->dBeans=pPurchaseResult->dCurrBeans;
; 3719 : 		pUserInfo->bConsumptionType = pPurchaseResult->bConsumptionType;

  00157	8b 75 ec	 mov	 esi, DWORD PTR _pPurchaseResult$[ebp]
  0015a	83 c6 08	 add	 esi, 8
  0015d	8b bd 20 ff ff
	ff		 mov	 edi, DWORD PTR _pUserInfo$2[ebp]
  00163	81 c7 98 00 00
	00		 add	 edi, 152		; 00000098H
  00169	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0016e	f3 a5		 rep movsd

; 3720 : 
; 3721 : 		SendUserInfoPacket(pIServerUserItem,dwContextID);

  00170	6a 00		 push	 0
  00172	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00175	50		 push	 eax
  00176	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00179	51		 push	 ecx
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	e8 00 00 00 00	 call	 ?SendUserInfoPacket@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@K_N@Z ; CAttemperEngineSink::SendUserInfoPacket

; 3722 : 
; 3723 : 		//设置权限
; 3724 : 		pIServerUserItem->ModifyUserRight(pPurchaseResult->dwUserRight,0,UR_KIND_SERVER);		

  00182	6a 02		 push	 2
  00184	6a 00		 push	 0
  00186	8b 45 ec	 mov	 eax, DWORD PTR _pPurchaseResult$[ebp]
  00189	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0018c	51		 push	 ecx
  0018d	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00190	8b 02		 mov	 eax, DWORD PTR [edx]
  00192	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00195	8b 90 08 01 00
	00		 mov	 edx, DWORD PTR [eax+264]
  0019b	ff d2		 call	 edx

; 3725 : 
; 3726 : 		//更新游戏币
; 3727 : 		if(m_pGameServiceOption->wServerType==GAME_GENRE_GOLD)

  0019d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001a3	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  001a7	83 fa 01	 cmp	 edx, 1
  001aa	0f 85 9e 00 00
	00		 jne	 $LN3@OnDBPurcha

; 3728 : 		{
; 3729 : 			SCORE lOldScore=pIServerUserItem->GetUserScore();

  001b0	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001b3	8b 10		 mov	 edx, DWORD PTR [eax]
  001b5	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b8	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  001be	ff d0		 call	 eax
  001c0	89 85 18 ff ff
	ff		 mov	 DWORD PTR _lOldScore$1[ebp], eax
  001c6	89 95 1c ff ff
	ff		 mov	 DWORD PTR _lOldScore$1[ebp+4], edx

; 3730 : 			lOldScore+=pIServerUserItem->GetFrozenedScore();

  001cc	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001cf	8b 10		 mov	 edx, DWORD PTR [eax]
  001d1	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001d4	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  001da	ff d0		 call	 eax
  001dc	03 85 18 ff ff
	ff		 add	 eax, DWORD PTR _lOldScore$1[ebp]
  001e2	13 95 1c ff ff
	ff		 adc	 edx, DWORD PTR _lOldScore$1[ebp+4]
  001e8	89 85 18 ff ff
	ff		 mov	 DWORD PTR _lOldScore$1[ebp], eax
  001ee	89 95 1c ff ff
	ff		 mov	 DWORD PTR _lOldScore$1[ebp+4], edx

; 3731 : 			lOldScore+=pIServerUserItem->GetTrusteeScore();

  001f4	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001f7	8b 10		 mov	 edx, DWORD PTR [eax]
  001f9	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001fc	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00202	ff d0		 call	 eax
  00204	03 85 18 ff ff
	ff		 add	 eax, DWORD PTR _lOldScore$1[ebp]
  0020a	13 95 1c ff ff
	ff		 adc	 edx, DWORD PTR _lOldScore$1[ebp+4]
  00210	89 85 18 ff ff
	ff		 mov	 DWORD PTR _lOldScore$1[ebp], eax
  00216	89 95 1c ff ff
	ff		 mov	 DWORD PTR _lOldScore$1[ebp+4], edx

; 3732 : 			pIServerUserItem->ModifyUserInsure(PurchaseResult.bConsumptionType.lScore-lOldScore,0,0);

  0021c	6a 00		 push	 0
  0021e	6a 00		 push	 0
  00220	6a 00		 push	 0
  00222	6a 00		 push	 0
  00224	8b 85 3a ff ff
	ff		 mov	 eax, DWORD PTR _PurchaseResult$[ebp+18]
  0022a	2b 85 18 ff ff
	ff		 sub	 eax, DWORD PTR _lOldScore$1[ebp]
  00230	8b 8d 3e ff ff
	ff		 mov	 ecx, DWORD PTR _PurchaseResult$[ebp+22]
  00236	1b 8d 1c ff ff
	ff		 sbb	 ecx, DWORD PTR _lOldScore$1[ebp+4]
  0023c	51		 push	 ecx
  0023d	50		 push	 eax
  0023e	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00241	8b 02		 mov	 eax, DWORD PTR [edx]
  00243	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00246	8b 90 1c 01 00
	00		 mov	 edx, DWORD PTR [eax+284]
  0024c	ff d2		 call	 edx
$LN3@OnDBPurcha:

; 3733 : 		}
; 3734 : 	}
; 3735 : 
; 3736 : 	return true;

  0024e	b0 01		 mov	 al, 1
$LN1@OnDBPurcha:

; 3737 : }

  00250	5f		 pop	 edi
  00251	5e		 pop	 esi
  00252	5b		 pop	 ebx
  00253	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00256	33 cd		 xor	 ecx, ebp
  00258	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0025d	8b e5		 mov	 esp, ebp
  0025f	5d		 pop	 ebp
  00260	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPurchaseResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBQueryGetSendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_dwDataSize$ = -4888					; size = 2
_dwHeadSize$ = -4884					; size = 2
_GetSendPresentResult$ = -4880				; size = 4866
_pGetSendPresent$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBQueryGetSendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBQueryGetSendPresent, COMDAT
; _this$ = ecx

; 3662 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 18 15 00 00	 mov	 eax, 5400		; 00001518H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3663 : 	//构造结构
; 3664 : 	DBO_GR_GetSendPresent* pGetSendPresent = (DBO_GR_GetSendPresent*)pData;

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00020	89 45 f4	 mov	 DWORD PTR _pGetSendPresent$[ebp], eax

; 3665 : 	CMD_GR_S_GetSendPresent GetSendPresentResult={0};

  00023	68 02 13 00 00	 push	 4866			; 00001302H
  00028	6a 00		 push	 0
  0002a	8d 85 f0 ec ff
	ff		 lea	 eax, DWORD PTR _GetSendPresentResult$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _memset
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3666 : 	GetSendPresentResult.wPresentCount = pGetSendPresent->wPresentCount;

  00039	8b 45 f4	 mov	 eax, DWORD PTR _pGetSendPresent$[ebp]
  0003c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003f	66 89 8d f0 ec
	ff ff		 mov	 WORD PTR _GetSendPresentResult$[ebp], cx

; 3667 : 	memcpy(GetSendPresentResult.Present, pGetSendPresent->Present, pGetSendPresent->wPresentCount*sizeof(SendPresent));

  00046	8b 45 f4	 mov	 eax, DWORD PTR _pGetSendPresent$[ebp]
  00049	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0004c	6b d1 26	 imul	 edx, ecx, 38
  0004f	52		 push	 edx
  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGetSendPresent$[ebp]
  00053	83 c0 02	 add	 eax, 2
  00056	50		 push	 eax
  00057	8d 8d f2 ec ff
	ff		 lea	 ecx, DWORD PTR _GetSendPresentResult$[ebp+2]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 _memcpy
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3668 : 
; 3669 : 	WORD dwHeadSize=sizeof(GetSendPresentResult)-sizeof(GetSendPresentResult.Present);

  00066	b8 02 00 00 00	 mov	 eax, 2
  0006b	66 89 85 ec ec
	ff ff		 mov	 WORD PTR _dwHeadSize$[ebp], ax

; 3670 : 	WORD dwDataSize=GetSendPresentResult.wPresentCount*sizeof(GetSendPresentResult.Present[0]);

  00072	0f b7 85 f0 ec
	ff ff		 movzx	 eax, WORD PTR _GetSendPresentResult$[ebp]
  00079	6b c8 26	 imul	 ecx, eax, 38
  0007c	66 89 8d e8 ec
	ff ff		 mov	 WORD PTR _dwDataSize$[ebp], cx

; 3671 : 	
; 3672 : 	//发送数据
; 3673 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_GET_SEND_PRESENT_RESULT,&GetSendPresentResult,dwHeadSize+dwDataSize);

  00083	0f b7 85 ec ec
	ff ff		 movzx	 eax, WORD PTR _dwHeadSize$[ebp]
  0008a	0f b7 8d e8 ec
	ff ff		 movzx	 ecx, WORD PTR _dwDataSize$[ebp]
  00091	03 c1		 add	 eax, ecx
  00093	50		 push	 eax
  00094	8d 95 f0 ec ff
	ff		 lea	 edx, DWORD PTR _GetSendPresentResult$[ebp]
  0009a	52		 push	 edx
  0009b	6a 6b		 push	 107			; 0000006bH
  0009d	6a 08		 push	 8
  0009f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  000ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 12		 mov	 edx, DWORD PTR [edx]
  000b1	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  000b7	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000ba	ff d0		 call	 eax

; 3674 : 
; 3675 : 	return true;

  000bc	b0 01		 mov	 al, 1

; 3676 : }

  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 0c 00	 ret	 12			; 0000000cH
?OnDBQueryGetSendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBQueryGetSendPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBQueryPropertyPresent@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_QuerySendPresentRequest$1 = -132			; size = 8
_pBindParameter$2 = -124				; size = 4
_wBindIndex$3 = -120					; size = 2
_pServerUserItem$ = -116				; size = 4
_PropertyPresentResult$ = -112				; size = 100
_pPropertyPresent$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBQueryPropertyPresent@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBQueryPropertyPresent, COMDAT
; _this$ = ecx

; 3627 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3628 : 	DBO_GR_PropertyPresent* pPropertyPresent = (DBO_GR_PropertyPresent*)pData;

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pPropertyPresent$[ebp], eax

; 3629 : 
; 3630 : 	//构造结构
; 3631 : 	CMD_GR_S_PropertyPresent PropertyPresentResult={0};

  0001f	6a 64		 push	 100			; 00000064H
  00021	6a 00		 push	 0
  00023	8d 45 90	 lea	 eax, DWORD PTR _PropertyPresentResult$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3632 : 	PropertyPresentResult.dwUserID = pPropertyPresent->dwUserID;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	89 4d 90	 mov	 DWORD PTR _PropertyPresentResult$[ebp], ecx

; 3633 : 	PropertyPresentResult.dwRecvGameID = pPropertyPresent->dwRecvGameID;

  00037	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  0003a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003d	89 4d 94	 mov	 DWORD PTR _PropertyPresentResult$[ebp+4], ecx

; 3634 : 	PropertyPresentResult.dwPropID = pPropertyPresent->dwPropID;

  00040	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  00043	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00046	89 4d 98	 mov	 DWORD PTR _PropertyPresentResult$[ebp+8], ecx

; 3635 : 	PropertyPresentResult.wPropCount = pPropertyPresent->wPropCount;

  00049	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  0004c	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  00050	66 89 4d 9c	 mov	 WORD PTR _PropertyPresentResult$[ebp+12], cx

; 3636 : 	PropertyPresentResult.wType = pPropertyPresent->wType;

  00054	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  00057	66 8b 48 12	 mov	 cx, WORD PTR [eax+18]
  0005b	66 89 4d 9e	 mov	 WORD PTR _PropertyPresentResult$[ebp+14], cx

; 3637 : 	PropertyPresentResult.nHandleCode = pPropertyPresent->nHandleCode;

  0005f	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  00062	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00065	89 4d b0	 mov	 DWORD PTR _PropertyPresentResult$[ebp+32], ecx

; 3638 : 
; 3639 : 	lstrcpyn(PropertyPresentResult.szRecvNickName, pPropertyPresent->szRecvNickName,CountArray(PropertyPresentResult.szRecvNickName));

  00068	6a 10		 push	 16			; 00000010H
  0006a	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  0006d	83 c0 14	 add	 eax, 20			; 00000014H
  00070	50		 push	 eax
  00071	8d 4d a0	 lea	 ecx, DWORD PTR _PropertyPresentResult$[ebp+16]
  00074	51		 push	 ecx
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3640 : 	lstrcpyn(PropertyPresentResult.szNotifyContent, pPropertyPresent->szNotifyContent,CountArray(PropertyPresentResult.szNotifyContent));

  0007b	6a 40		 push	 64			; 00000040H
  0007d	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  00080	83 c0 28	 add	 eax, 40			; 00000028H
  00083	50		 push	 eax
  00084	8d 4d b4	 lea	 ecx, DWORD PTR _PropertyPresentResult$[ebp+36]
  00087	51		 push	 ecx
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3641 : 	//发送数据
; 3642 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_PROPERTY_PRESENT_RESULT,&PropertyPresentResult,sizeof(PropertyPresentResult));

  0008e	6a 64		 push	 100			; 00000064H
  00090	8d 45 90	 lea	 eax, DWORD PTR _PropertyPresentResult$[ebp]
  00093	50		 push	 eax
  00094	6a 6a		 push	 106			; 0000006aH
  00096	6a 08		 push	 8
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009f	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 10		 mov	 edx, DWORD PTR [eax]
  000aa	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  000b0	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000b3	ff d0		 call	 eax

; 3643 : 	
; 3644 : 	//查找用户
; 3645 : 	IServerUserItem* pServerUserItem =  m_ServerUserManager.SearchUserItem(pPropertyPresent->dwRecvUserID);

  000b5	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  000b8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bb	51		 push	 ecx
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  000ce	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000d1	ff d2		 call	 edx
  000d3	89 45 8c	 mov	 DWORD PTR _pServerUserItem$[ebp], eax

; 3646 : 	if(pServerUserItem != NULL)

  000d6	83 7d 8c 00	 cmp	 DWORD PTR _pServerUserItem$[ebp], 0
  000da	0f 84 8e 00 00
	00		 je	 $LN2@OnDBQueryP

; 3647 : 	{
; 3648 : 		WORD wBindIndex=pServerUserItem->GetBindIndex();

  000e0	8b 45 8c	 mov	 eax, DWORD PTR _pServerUserItem$[ebp]
  000e3	8b 10		 mov	 edx, DWORD PTR [eax]
  000e5	8b 4d 8c	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  000e8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000eb	ff d0		 call	 eax
  000ed	66 89 45 88	 mov	 WORD PTR _wBindIndex$3[ebp], ax

; 3649 : 		tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  000f1	0f b7 45 88	 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00101	ff d0		 call	 eax
  00103	89 45 84	 mov	 DWORD PTR _pBindParameter$2[ebp], eax

; 3650 : 		//构造结构
; 3651 : 		DBR_GR_QuerySendPresent QuerySendPresentRequest={0};

  00106	33 c0		 xor	 eax, eax
  00108	89 85 7c ff ff
	ff		 mov	 DWORD PTR _QuerySendPresentRequest$1[ebp], eax
  0010e	89 45 80	 mov	 DWORD PTR _QuerySendPresentRequest$1[ebp+4], eax

; 3652 : 		QuerySendPresentRequest.dwUserID = pPropertyPresent->dwRecvUserID;

  00111	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyPresent$[ebp]
  00114	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00117	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _QuerySendPresentRequest$1[ebp], ecx

; 3653 : 		QuerySendPresentRequest.dwClientAddr=pServerUserItem->GetClientAddr();

  0011d	8b 45 8c	 mov	 eax, DWORD PTR _pServerUserItem$[ebp]
  00120	8b 10		 mov	 edx, DWORD PTR [eax]
  00122	8b 4d 8c	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00125	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00128	ff d0		 call	 eax
  0012a	89 45 80	 mov	 DWORD PTR _QuerySendPresentRequest$1[ebp+4], eax

; 3654 : 		//发送数据
; 3655 : 		m_pIDBCorrespondManager->PostDataBaseRequest(pServerUserItem->GetUserID(),DBR_GR_QUERY_SEND_PRESENT,pBindParameter->dwSocketID,&QuerySendPresentRequest,sizeof(QuerySendPresentRequest));

  0012d	6a 00		 push	 0
  0012f	6a 08		 push	 8
  00131	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _QuerySendPresentRequest$1[ebp]
  00137	50		 push	 eax
  00138	8b 4d 84	 mov	 ecx, DWORD PTR _pBindParameter$2[ebp]
  0013b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013d	52		 push	 edx
  0013e	68 88 03 00 00	 push	 904			; 00000388H
  00143	8b 45 8c	 mov	 eax, DWORD PTR _pServerUserItem$[ebp]
  00146	8b 10		 mov	 edx, DWORD PTR [eax]
  00148	8b 4d 8c	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  0014b	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0014e	ff d0		 call	 eax
  00150	50		 push	 eax
  00151	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  0015a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015d	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00163	8b 12		 mov	 edx, DWORD PTR [edx]
  00165	51		 push	 ecx
  00166	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00169	ff d0		 call	 eax
  0016b	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN2@OnDBQueryP:

; 3656 : 	}
; 3657 : 	
; 3658 : 	return true;

  0016e	b0 01		 mov	 al, 1

; 3659 : }

  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00176	33 cd		 xor	 ecx, ebp
  00178	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017d	8b e5		 mov	 esp, ebp
  0017f	5d		 pop	 ebp
  00180	c2 0c 00	 ret	 12			; 0000000cH
?OnDBQueryPropertyPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBQueryPropertyPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBQuerySendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_dwDataSize$ = -4888					; size = 2
_dwHeadSize$ = -4884					; size = 2
_QuerySendPresentResult$ = -4880			; size = 4866
_pQuerySendPresent$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBQuerySendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBQuerySendPresent, COMDAT
; _this$ = ecx

; 3612 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 18 15 00 00	 mov	 eax, 5400		; 00001518H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3613 : 	//构造结构
; 3614 : 	DBO_GR_QuerySendPresent* pQuerySendPresent = (DBO_GR_QuerySendPresent*)pData;

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00020	89 45 f4	 mov	 DWORD PTR _pQuerySendPresent$[ebp], eax

; 3615 : 	CMD_GR_S_QuerySendPresent QuerySendPresentResult={0};

  00023	68 02 13 00 00	 push	 4866			; 00001302H
  00028	6a 00		 push	 0
  0002a	8d 85 f0 ec ff
	ff		 lea	 eax, DWORD PTR _QuerySendPresentResult$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _memset
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3616 : 	QuerySendPresentResult.wPresentCount = pQuerySendPresent->wPresentCount;

  00039	8b 45 f4	 mov	 eax, DWORD PTR _pQuerySendPresent$[ebp]
  0003c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003f	66 89 8d f0 ec
	ff ff		 mov	 WORD PTR _QuerySendPresentResult$[ebp], cx

; 3617 : 	memcpy(QuerySendPresentResult.Present, pQuerySendPresent->Present, sizeof(pQuerySendPresent->wPresentCount*sizeof(pQuerySendPresent->Present[0])));

  00046	6a 04		 push	 4
  00048	8b 45 f4	 mov	 eax, DWORD PTR _pQuerySendPresent$[ebp]
  0004b	83 c0 02	 add	 eax, 2
  0004e	50		 push	 eax
  0004f	8d 8d f2 ec ff
	ff		 lea	 ecx, DWORD PTR _QuerySendPresentResult$[ebp+2]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 _memcpy
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3618 : 
; 3619 : 	WORD dwHeadSize=sizeof(QuerySendPresentResult)-sizeof(QuerySendPresentResult.Present);

  0005e	b8 02 00 00 00	 mov	 eax, 2
  00063	66 89 85 ec ec
	ff ff		 mov	 WORD PTR _dwHeadSize$[ebp], ax

; 3620 : 	WORD dwDataSize=QuerySendPresentResult.wPresentCount*sizeof(QuerySendPresentResult.Present[0]);;

  0006a	0f b7 85 f0 ec
	ff ff		 movzx	 eax, WORD PTR _QuerySendPresentResult$[ebp]
  00071	6b c8 26	 imul	 ecx, eax, 38
  00074	66 89 8d e8 ec
	ff ff		 mov	 WORD PTR _dwDataSize$[ebp], cx

; 3621 : 	//发送数据
; 3622 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_QUERY_SEND_PRESENT_RESULT,&QuerySendPresentResult,dwHeadSize+dwDataSize);

  0007b	0f b7 85 ec ec
	ff ff		 movzx	 eax, WORD PTR _dwHeadSize$[ebp]
  00082	0f b7 8d e8 ec
	ff ff		 movzx	 ecx, WORD PTR _dwDataSize$[ebp]
  00089	03 c1		 add	 eax, ecx
  0008b	50		 push	 eax
  0008c	8d 95 f0 ec ff
	ff		 lea	 edx, DWORD PTR _QuerySendPresentResult$[ebp]
  00092	52		 push	 edx
  00093	6a 69		 push	 105			; 00000069H
  00095	6a 08		 push	 8
  00097	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  000a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b 12		 mov	 edx, DWORD PTR [edx]
  000a9	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  000af	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000b2	ff d0		 call	 eax

; 3623 : 	return true;

  000b4	b0 01		 mov	 al, 1

; 3624 : }

  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bc	33 cd		 xor	 ecx, ebp
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 0c 00	 ret	 12			; 0000000cH
?OnDBQuerySendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBQuerySendPresent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBQueryPropertyUse@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_PropertySuccess$ = -320				; size = 72
_UserID$1 = -248					; size = 4
_pISourceUserItem$2 = -244				; size = 4
_wSendSize$ = -240					; size = 2
_PropertyUseResult$ = -236				; size = 221
_pPropertyUseResult$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBQueryPropertyUse@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBQueryPropertyUse, COMDAT
; _this$ = ecx

; 3552 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3553 : 	DBO_GR_PropertyUse* pPropertyUseResult = (DBO_GR_PropertyUse*)pData;

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pPropertyUseResult$[ebp], eax

; 3554 : 
; 3555 : 	//构造结构
; 3556 : 	CMD_GR_S_PropertyUse PropertyUseResult;
; 3557 : 
; 3558 : 	PropertyUseResult.dwUserID = pPropertyUseResult->dwUserID;

  0001f	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp], ecx

; 3559 : 	PropertyUseResult.dwRecvUserID = pPropertyUseResult->dwRecvUserID;

  0002a	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	89 8d 1c ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+8], ecx

; 3560 : 	PropertyUseResult.wUseArea = pPropertyUseResult->wUseArea;

  00036	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00039	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  0003d	66 89 8d 18 ff
	ff ff		 mov	 WORD PTR _PropertyUseResult$[ebp+4], cx

; 3561 : 	PropertyUseResult.wServiceArea = pPropertyUseResult->wServiceArea;

  00044	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00047	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  0004b	66 89 8d 1a ff
	ff ff		 mov	 WORD PTR _PropertyUseResult$[ebp+6], cx

; 3562 : 	PropertyUseResult.dwPropID = pPropertyUseResult->dwPropID;

  00052	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00055	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00058	89 8d 20 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+12], ecx

; 3563 : 	PropertyUseResult.dwPropKind = pPropertyUseResult->dwPropKind;

  0005e	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00061	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00064	89 8d 4c ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+56], ecx

; 3564 : 	PropertyUseResult.wPropCount = pPropertyUseResult->wPropCount;

  0006a	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0006d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00070	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+16], ecx

; 3565 : 	PropertyUseResult.Score = pPropertyUseResult->Score;

  00076	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00079	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0007c	89 8d 2c ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+24], ecx
  00082	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00085	89 95 30 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+28], edx

; 3566 : 	PropertyUseResult.dwRemainderPropCount = pPropertyUseResult->dwRemainderPropCount;

  0008b	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0008e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00091	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+20], ecx

; 3567 : 	PropertyUseResult.lRecvLoveLiness = pPropertyUseResult->lRecvLoveLiness;

  00097	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0009a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0009d	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+40], ecx
  000a3	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  000a6	89 95 40 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+44], edx

; 3568 : 	PropertyUseResult.lSendLoveLiness = pPropertyUseResult->lSendLoveLiness;

  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  000af	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000b2	89 8d 34 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+32], ecx
  000b8	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  000bb	89 95 38 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+36], edx

; 3569 : 	PropertyUseResult.lUseResultsGold = pPropertyUseResult->lUseResultsGold;

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  000c4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000c7	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+48], ecx
  000cd	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  000d0	89 95 48 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+52], edx

; 3570 : 	PropertyUseResult.UseResultsValidTime = pPropertyUseResult->UseResultsValidTime;

  000d6	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  000d9	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000dc	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+68], ecx

; 3571 : 	PropertyUseResult.tUseTime = pPropertyUseResult->tUseTime;

  000e2	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  000e5	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000e8	89 8d 50 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+60], ecx
  000ee	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  000f1	89 95 54 ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+64], edx

; 3572 : 	PropertyUseResult.dwHandleCode = pPropertyUseResult->dwHandleCode;

  000f7	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  000fa	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  000fd	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _PropertyUseResult$[ebp+72], ecx

; 3573 : 	PropertyUseResult.cbMemberOrder = pPropertyUseResult->cbMemberOrder;

  00103	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00106	8a 48 60	 mov	 cl, BYTE PTR [eax+96]
  00109	88 8d 70 ff ff
	ff		 mov	 BYTE PTR _PropertyUseResult$[ebp+92], cl

; 3574 : 	lstrcpyn(PropertyUseResult.szName, pPropertyUseResult->szName,CountArray(PropertyUseResult.szName));

  0010f	6a 10		 push	 16			; 00000010H
  00111	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00114	83 c0 50	 add	 eax, 80			; 00000050H
  00117	50		 push	 eax
  00118	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _PropertyUseResult$[ebp+76]
  0011e	51		 push	 ecx
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3575 : 	lstrcpyn(PropertyUseResult.szNotifyContent, pPropertyUseResult->szNotifyContent,CountArray(PropertyUseResult.szNotifyContent));

  00125	68 80 00 00 00	 push	 128			; 00000080H
  0012a	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0012d	83 c0 61	 add	 eax, 97			; 00000061H
  00130	50		 push	 eax
  00131	8d 8d 71 ff ff
	ff		 lea	 ecx, DWORD PTR _PropertyUseResult$[ebp+93]
  00137	51		 push	 ecx
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3576 : 
; 3577 : 	WORD wSendSize=sizeof(PropertyUseResult)-sizeof(PropertyUseResult.szNotifyContent)+CountStringBuffer(PropertyUseResult.szNotifyContent);

  0013e	8d 85 71 ff ff
	ff		 lea	 eax, DWORD PTR _PropertyUseResult$[ebp+93]
  00144	50		 push	 eax
  00145	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0014b	83 c0 5e	 add	 eax, 94			; 0000005eH
  0014e	66 89 85 10 ff
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], ax

; 3578 : 
; 3579 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_PROPERTY_USE_RESULT,&PropertyUseResult,wSendSize);

  00155	0f b7 85 10 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  0015c	50		 push	 eax
  0015d	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR _PropertyUseResult$[ebp]
  00163	51		 push	 ecx
  00164	6a 68		 push	 104			; 00000068H
  00166	6a 08		 push	 8
  00168	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0016b	52		 push	 edx
  0016c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016f	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00175	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00178	8b 01		 mov	 eax, DWORD PTR [ecx]
  0017a	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00180	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00183	ff d2		 call	 edx

; 3580 : 	if( m_pGameServiceOption->wServerType&GAME_GENRE_GOLD )

  00185	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00188	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0018b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0018f	83 e2 01	 and	 edx, 1
  00192	74 55		 je	 SHORT $LN2@OnDBQueryP

; 3581 : 	{
; 3582 : 		//更新金币
; 3583 : 		IServerUserItem * pISourceUserItem=m_ServerUserManager.SearchUserItem(pPropertyUseResult->dwUserID);

  00194	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00197	8b 08		 mov	 ecx, DWORD PTR [eax]
  00199	51		 push	 ecx
  0019a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  001a3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001a6	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  001ac	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  001af	ff d2		 call	 edx
  001b1	89 85 0c ff ff
	ff		 mov	 DWORD PTR _pISourceUserItem$2[ebp], eax

; 3584 : 		if(pISourceUserItem) pISourceUserItem->ModifyUserInsure(pPropertyUseResult->lUseResultsGold, 0, 0);

  001b7	83 bd 0c ff ff
	ff 00		 cmp	 DWORD PTR _pISourceUserItem$2[ebp], 0
  001be	74 29		 je	 SHORT $LN2@OnDBQueryP
  001c0	6a 00		 push	 0
  001c2	6a 00		 push	 0
  001c4	6a 00		 push	 0
  001c6	6a 00		 push	 0
  001c8	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  001cb	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  001ce	51		 push	 ecx
  001cf	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  001d2	52		 push	 edx
  001d3	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pISourceUserItem$2[ebp]
  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _pISourceUserItem$2[ebp]
  001e1	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  001e7	ff d0		 call	 eax
$LN2@OnDBQueryP:

; 3585 : 	}
; 3586 : 
; 3587 : 	//判断时长
; 3588 : 	if(pPropertyUseResult->UseResultsValidTime > 0)

  001e9	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  001ec	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  001f0	76 36		 jbe	 SHORT $LN4@OnDBQueryP

; 3589 : 	{
; 3590 : 		//加载Buff
; 3591 : 		DWORD UserID = pPropertyUseResult->dwUserID;

  001f2	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  001f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f7	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _UserID$1[ebp], ecx

; 3592 : 		m_pIRecordDataBaseEngine->PostDataBaseRequest(DBR_GR_LOAD_GAME_BUFF,dwContextID,(void*)&UserID,sizeof(UserID));

  001fd	6a 04		 push	 4
  001ff	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _UserID$1[ebp]
  00205	50		 push	 eax
  00206	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00209	51		 push	 ecx
  0020a	68 32 01 00 00	 push	 306			; 00000132H
  0020f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00212	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  00218	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021b	8b 10		 mov	 edx, DWORD PTR [eax]
  0021d	8b 89 cc 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147404]
  00223	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00226	ff d0		 call	 eax
$LN4@OnDBQueryP:

; 3593 : 	}
; 3594 : 
; 3595 : 	//调用结果
; 3596 : 	DBO_GR_S_PropertySuccess PropertySuccess={0};

  00228	6a 48		 push	 72			; 00000048H
  0022a	6a 00		 push	 0
  0022c	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _PropertySuccess$[ebp]
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 _memset
  00238	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3597 : 	PropertySuccess.wItemCount = (WORD)pPropertyUseResult->wPropCount;

  0023b	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0023e	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  00242	66 89 8d c0 fe
	ff ff		 mov	 WORD PTR _PropertySuccess$[ebp], cx

; 3598 : 	PropertySuccess.wPropertyIndex = (WORD)pPropertyUseResult->dwPropID;

  00249	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0024c	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  00250	66 89 8d c2 fe
	ff ff		 mov	 WORD PTR _PropertySuccess$[ebp+2], cx

; 3599 : 	PropertySuccess.dwSourceUserID = pPropertyUseResult->dwUserID;

  00257	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0025a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025c	89 8d c8 fe ff
	ff		 mov	 DWORD PTR _PropertySuccess$[ebp+8], ecx

; 3600 : 	PropertySuccess.dwTargetUserID = pPropertyUseResult->dwRecvUserID;

  00262	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00265	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00268	89 8d cc fe ff
	ff		 mov	 DWORD PTR _PropertySuccess$[ebp+12], ecx

; 3601 : 	PropertySuccess.wPropKind = (WORD)pPropertyUseResult->dwPropKind;

  0026e	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00271	66 8b 48 38	 mov	 cx, WORD PTR [eax+56]
  00275	66 89 8d c6 fe
	ff ff		 mov	 WORD PTR _PropertySuccess$[ebp+6], cx

; 3602 : 	PropertySuccess.cbRequestArea = (BYTE)pPropertyUseResult->wServiceArea; //消费方式

  0027c	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0027f	8a 48 0a	 mov	 cl, BYTE PTR [eax+10]
  00282	88 8d d0 fe ff
	ff		 mov	 BYTE PTR _PropertySuccess$[ebp+16], cl

; 3603 : 	PropertySuccess.wServiceArea = pPropertyUseResult->wServiceArea;

  00288	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  0028b	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  0028f	66 89 8d c4 fe
	ff ff		 mov	 WORD PTR _PropertySuccess$[ebp+4], cx

; 3604 : 	PropertySuccess.lSendLoveLiness = pPropertyUseResult->lSendLoveLiness;

  00296	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  00299	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0029c	89 8d f0 fe ff
	ff		 mov	 DWORD PTR _PropertySuccess$[ebp+48], ecx
  002a2	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  002a5	89 95 f4 fe ff
	ff		 mov	 DWORD PTR _PropertySuccess$[ebp+52], edx

; 3605 : 	PropertySuccess.lRecvLoveLiness = pPropertyUseResult->lRecvLoveLiness;

  002ab	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyUseResult$[ebp]
  002ae	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  002b1	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _PropertySuccess$[ebp+56], ecx
  002b7	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  002ba	89 95 fc fe ff
	ff		 mov	 DWORD PTR _PropertySuccess$[ebp+60], edx

; 3606 : 	OnDBPropertySuccess(dwContextID, &PropertySuccess, sizeof(PropertySuccess));

  002c0	6a 48		 push	 72			; 00000048H
  002c2	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _PropertySuccess$[ebp]
  002c8	50		 push	 eax
  002c9	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  002cc	51		 push	 ecx
  002cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d0	e8 00 00 00 00	 call	 ?OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPropertySuccess

; 3607 : 	
; 3608 : 	return true;

  002d5	b0 01		 mov	 al, 1

; 3609 : }

  002d7	5f		 pop	 edi
  002d8	5e		 pop	 esi
  002d9	5b		 pop	 ebx
  002da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002dd	33 cd		 xor	 ecx, ebp
  002df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e4	8b e5		 mov	 esp, ebp
  002e6	5d		 pop	 ebp
  002e7	c2 0c 00	 ret	 12			; 0000000cH
?OnDBQueryPropertyUse@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBQueryPropertyUse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBQueryPropertyBackpack@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_dwDataBufferSize$ = -16396				; size = 2
_pBackpackPropertyResult$ = -16392			; size = 4
_cbDataBuffer$ = -16388					; size = 16376
_pQueryBackpackResult$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBQueryPropertyBackpack@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBQueryPropertyBackpack, COMDAT
; _this$ = ecx

; 3529 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 0c 42 00 00	 mov	 eax, 16908		; 0000420cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3530 : 	DBO_GR_QueryBackpack* pQueryBackpackResult = (DBO_GR_QueryBackpack*)pData;

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00020	89 45 f4	 mov	 DWORD PTR _pQueryBackpackResult$[ebp], eax

; 3531 : 
; 3532 : 	//构造返回
; 3533 : 	BYTE cbDataBuffer[SOCKET_TCP_PACKET]={0};

  00023	68 f8 3f 00 00	 push	 16376			; 00003ff8H
  00028	6a 00		 push	 0
  0002a	8d 85 fc bf ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _memset
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3534 : 	CMD_GR_S_BackpackProperty* pBackpackPropertyResult = (CMD_GR_S_BackpackProperty*)cbDataBuffer;

  00039	8d 85 fc bf ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$[ebp]
  0003f	89 85 f8 bf ff
	ff		 mov	 DWORD PTR _pBackpackPropertyResult$[ebp], eax

; 3535 : 
; 3536 : 	//初始化参数
; 3537 : 	WORD dwDataBufferSize = sizeof(CMD_GR_S_BackpackProperty);

  00045	b8 f7 00 00 00	 mov	 eax, 247		; 000000f7H
  0004a	66 89 85 f4 bf
	ff ff		 mov	 WORD PTR _dwDataBufferSize$[ebp], ax

; 3538 : 	pBackpackPropertyResult->dwUserID = pQueryBackpackResult->dwUserID;

  00051	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pBackpackPropertyResult$[ebp]
  00057	8b 4d f4	 mov	 ecx, DWORD PTR _pQueryBackpackResult$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	89 10		 mov	 DWORD PTR [eax], edx

; 3539 : 	pBackpackPropertyResult->dwCount = pQueryBackpackResult->dwCount;

  0005e	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pBackpackPropertyResult$[ebp]
  00064	8b 4d f4	 mov	 ecx, DWORD PTR _pQueryBackpackResult$[ebp]
  00067	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0006a	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 3540 : 	pBackpackPropertyResult->dwStatus = pQueryBackpackResult->dwStatus;

  0006d	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pBackpackPropertyResult$[ebp]
  00073	8b 4d f4	 mov	 ecx, DWORD PTR _pQueryBackpackResult$[ebp]
  00076	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00079	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 3541 : 	if(pQueryBackpackResult->dwCount > 0)

  0007c	8b 45 f4	 mov	 eax, DWORD PTR _pQueryBackpackResult$[ebp]
  0007f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00083	76 46		 jbe	 SHORT $LN2@OnDBQueryP

; 3542 : 	{
; 3543 : 		memcpy(pBackpackPropertyResult->PropertyInfo, pQueryBackpackResult->PropertyInfo, sizeof(tagBackpackProperty)*(pQueryBackpackResult->dwCount));

  00085	8b 45 f4	 mov	 eax, DWORD PTR _pQueryBackpackResult$[ebp]
  00088	69 48 08 eb 00
	00 00		 imul	 ecx, DWORD PTR [eax+8], 235
  0008f	51		 push	 ecx
  00090	8b 55 f4	 mov	 edx, DWORD PTR _pQueryBackpackResult$[ebp]
  00093	83 c2 0c	 add	 edx, 12			; 0000000cH
  00096	52		 push	 edx
  00097	8b 85 f8 bf ff
	ff		 mov	 eax, DWORD PTR _pBackpackPropertyResult$[ebp]
  0009d	83 c0 0c	 add	 eax, 12			; 0000000cH
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 _memcpy
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3544 : 		dwDataBufferSize += sizeof(tagBackpackProperty)*(WORD)(pQueryBackpackResult->dwCount-1);

  000a9	8b 45 f4	 mov	 eax, DWORD PTR _pQueryBackpackResult$[ebp]
  000ac	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000af	83 e9 01	 sub	 ecx, 1
  000b2	0f b7 d1	 movzx	 edx, cx
  000b5	69 c2 eb 00 00
	00		 imul	 eax, edx, 235
  000bb	0f b7 8d f4 bf
	ff ff		 movzx	 ecx, WORD PTR _dwDataBufferSize$[ebp]
  000c2	03 c8		 add	 ecx, eax
  000c4	66 89 8d f4 bf
	ff ff		 mov	 WORD PTR _dwDataBufferSize$[ebp], cx
$LN2@OnDBQueryP:

; 3545 : 	}
; 3546 : 	//发送数据
; 3547 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_PROPERTY_BACKPACK_RESULT,pBackpackPropertyResult,dwDataBufferSize);

  000cb	0f b7 85 f4 bf
	ff ff		 movzx	 eax, WORD PTR _dwDataBufferSize$[ebp]
  000d2	50		 push	 eax
  000d3	8b 8d f8 bf ff
	ff		 mov	 ecx, DWORD PTR _pBackpackPropertyResult$[ebp]
  000d9	51		 push	 ecx
  000da	6a 67		 push	 103			; 00000067H
  000dc	6a 08		 push	 8
  000de	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  000e1	52		 push	 edx
  000e2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  000eb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f0	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  000f6	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000f9	ff d2		 call	 edx

; 3548 : 	return true;

  000fb	b0 01		 mov	 al, 1

; 3549 : }

  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx
  00100	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00103	33 cd		 xor	 ecx, ebp
  00105	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 0c 00	 ret	 12			; 0000000cH
?OnDBQueryPropertyBackpack@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBQueryPropertyBackpack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_PropertyBuyResult$ = -240				; size = 213
_pUserInfo$ = -24					; size = 4
_pPropertyBuyResult$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGamePropertyBuy, COMDAT
; _this$ = ecx

; 3492 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3493 : 	//获取用户
; 3494 : 	WORD wBindIndex=LOWORD(dwContextID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 3495 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3496 : 
; 3497 : 	//用户效验
; 3498 : 	ASSERT(pIServerUserItem!=NULL);

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN4@OnDBGamePr
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c0 06	 add	 eax, 6
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN4@OnDBGamePr
  00057	cc		 int	 3
$LN4@OnDBGamePr:

; 3499 : 	if (pIServerUserItem==NULL) return false;

  00058	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN2@OnDBGamePr
  0005e	32 c0		 xor	 al, al
  00060	e9 ec 00 00 00	 jmp	 $LN1@OnDBGamePr
$LN2@OnDBGamePr:

; 3500 : 
; 3501 : 	//变量定义
; 3502 : 	DBO_GR_PropertyBuyResult * pPropertyBuyResult=(DBO_GR_PropertyBuyResult *)pData;

  00065	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00068	89 45 ec	 mov	 DWORD PTR _pPropertyBuyResult$[ebp], eax

; 3503 : 
; 3504 : 	tagUserInfo *pUserInfo = pIServerUserItem->GetUserInfo();

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0006e	8b 10		 mov	 edx, DWORD PTR [eax]
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00073	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00076	ff d0		 call	 eax
  00078	89 45 e8	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 3505 : 
; 3506 : 	//构造结构
; 3507 : 	CMD_GR_PropertyBuyResult PropertyBuyResult;
; 3508 : 	PropertyBuyResult.dwUserID = pPropertyBuyResult->dwUserID;

  0007b	8b 45 ec	 mov	 eax, DWORD PTR _pPropertyBuyResult$[ebp]
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	89 8d 10 ff ff
	ff		 mov	 DWORD PTR _PropertyBuyResult$[ebp], ecx

; 3509 : 	PropertyBuyResult.dwPropertyID = pPropertyBuyResult->dwPropertyID;

  00086	8b 45 ec	 mov	 eax, DWORD PTR _pPropertyBuyResult$[ebp]
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _PropertyBuyResult$[ebp+4], ecx

; 3510 : 	PropertyBuyResult.dwItemCount = pPropertyBuyResult->dwItemCount;

  00092	8b 45 ec	 mov	 eax, DWORD PTR _pPropertyBuyResult$[ebp]
  00095	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00098	89 8d 18 ff ff
	ff		 mov	 DWORD PTR _PropertyBuyResult$[ebp+8], ecx

; 3511 : 	/*PropertyBuyResult.lDiamond = pPropertyBuyResult->lDiamond;
; 3512 : 	PropertyBuyResult.lInsureScore = pPropertyBuyResult->lInsureScore;
; 3513 : 	PropertyBuyResult.lUserMedal = pPropertyBuyResult->lUserMedal;
; 3514 : 	PropertyBuyResult.dCash = pPropertyBuyResult->dCash;*/
; 3515 : 	PropertyBuyResult.bConsumptionType = pPropertyBuyResult->bConsumptionType;

  0009e	8b 75 ec	 mov	 esi, DWORD PTR _pPropertyBuyResult$[ebp]
  000a1	83 c6 0c	 add	 esi, 12			; 0000000cH
  000a4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000a9	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR _PropertyBuyResult$[ebp+12]
  000af	f3 a5		 rep movsd

; 3516 : 
; 3517 : 	PropertyBuyResult.lLoveLiness = pPropertyBuyResult->lLoveLiness;

  000b1	8b 45 ec	 mov	 eax, DWORD PTR _pPropertyBuyResult$[ebp]
  000b4	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  000b7	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _PropertyBuyResult$[ebp+76], ecx
  000bd	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  000c0	89 95 60 ff ff
	ff		 mov	 DWORD PTR _PropertyBuyResult$[ebp+80], edx

; 3518 : 	PropertyBuyResult.cbCurrMemberOrder = pPropertyBuyResult->cbCurrMemberOrder;

  000c6	8b 45 ec	 mov	 eax, DWORD PTR _pPropertyBuyResult$[ebp]
  000c9	8a 48 58	 mov	 cl, BYTE PTR [eax+88]
  000cc	88 8d 64 ff ff
	ff		 mov	 BYTE PTR _PropertyBuyResult$[ebp+84], cl

; 3519 : 	lstrcpyn(PropertyBuyResult.szNotifyContent,pPropertyBuyResult->szNotifyContent,CountArray(PropertyBuyResult.szNotifyContent));

  000d2	68 80 00 00 00	 push	 128			; 00000080H
  000d7	8b 45 ec	 mov	 eax, DWORD PTR _pPropertyBuyResult$[ebp]
  000da	83 c0 59	 add	 eax, 89			; 00000059H
  000dd	50		 push	 eax
  000de	8d 8d 65 ff ff
	ff		 lea	 ecx, DWORD PTR _PropertyBuyResult$[ebp+85]
  000e4	51		 push	 ecx
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3520 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY, SUB_GR_GAME_PROPERTY_BUY_RESULT,&PropertyBuyResult,sizeof(PropertyBuyResult));

  000eb	68 d5 00 00 00	 push	 213			; 000000d5H
  000f0	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _PropertyBuyResult$[ebp]
  000f6	50		 push	 eax
  000f7	6a 66		 push	 102			; 00000066H
  000f9	6a 08		 push	 8
  000fb	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  000fe	51		 push	 ecx
  000ff	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00102	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 10		 mov	 edx, DWORD PTR [eax]
  0010d	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00113	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00116	ff d0		 call	 eax

; 3521 : 
; 3522 : 	//pIServerUserItem->ModifyUserInsure(0, pPropertyBuyResult->lInsureScore - pIServerUserItem->GetUserInsure(), 0);
; 3523 : 	pIServerUserItem->ModifyUserInsure(0, pPropertyBuyResult->bConsumptionType.lInsure - pIServerUserItem->GetUserInsure(), 0);

  00118	6a 00		 push	 0
  0011a	6a 00		 push	 0
  0011c	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0011f	8b 10		 mov	 edx, DWORD PTR [eax]
  00121	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00124	8b 82 90 00 00
	00		 mov	 eax, DWORD PTR [edx+144]
  0012a	ff d0		 call	 eax
  0012c	8b 4d ec	 mov	 ecx, DWORD PTR _pPropertyBuyResult$[ebp]
  0012f	8b 71 14	 mov	 esi, DWORD PTR [ecx+20]
  00132	2b f0		 sub	 esi, eax
  00134	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00137	1b c2		 sbb	 eax, edx
  00139	50		 push	 eax
  0013a	56		 push	 esi
  0013b	6a 00		 push	 0
  0013d	6a 00		 push	 0
  0013f	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00142	8b 11		 mov	 edx, DWORD PTR [ecx]
  00144	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00147	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  0014d	ff d0		 call	 eax

; 3524 : 
; 3525 : 	return true;

  0014f	b0 01		 mov	 al, 1
$LN1@OnDBGamePr:

; 3526 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00157	33 cd		 xor	 ecx, ebp
  00159	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGamePropertyBuy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_PropertyFailure$ = -144				; size = 132
_pPropertyFailure$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPropertyFailure, COMDAT
; _this$ = ecx

; 3472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3473 : 	//参数校验
; 3474 : 	ASSERT(wDataSize==sizeof(DBO_GR_PropertyFailure));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 84 00 00 00	 cmp	 eax, 132		; 00000084H
  00022	74 19		 je	 SHORT $LN5@OnDBProper
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN5@OnDBProper
  0003c	cc		 int	 3
$LN5@OnDBProper:

; 3475 : 	if(wDataSize!=sizeof(DBO_GR_PropertyFailure)) return false;

  0003d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 84 00 00 00	 cmp	 eax, 132		; 00000084H
  00046	74 04		 je	 SHORT $LN2@OnDBProper
  00048	32 c0		 xor	 al, al
  0004a	eb 66		 jmp	 SHORT $LN1@OnDBProper
$LN2@OnDBProper:

; 3476 : 
; 3477 : 	//提取数据
; 3478 : 	DBO_GR_PropertyFailure * pPropertyFailure = (DBO_GR_PropertyFailure *)pData;

  0004c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0004f	89 45 f4	 mov	 DWORD PTR _pPropertyFailure$[ebp], eax

; 3479 : 	if(pPropertyFailure==NULL) return false;

  00052	83 7d f4 00	 cmp	 DWORD PTR _pPropertyFailure$[ebp], 0
  00056	75 04		 jne	 SHORT $LN3@OnDBProper
  00058	32 c0		 xor	 al, al
  0005a	eb 56		 jmp	 SHORT $LN1@OnDBProper
$LN3@OnDBProper:

; 3480 : 
; 3481 : 	//构造结构
; 3482 : 	CMD_GR_GamePropertyFailure PropertyFailure;
; 3483 : 	PropertyFailure.lErrorCode = pPropertyFailure->lErrorCode;

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyFailure$[ebp]
  0005f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00061	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _PropertyFailure$[ebp], ecx

; 3484 : 	lstrcpyn(PropertyFailure.szDescribeString,pPropertyFailure->szDescribeString,CountArray(PropertyFailure.szDescribeString));

  00067	68 80 00 00 00	 push	 128			; 00000080H
  0006c	8b 45 f4	 mov	 eax, DWORD PTR _pPropertyFailure$[ebp]
  0006f	83 c0 04	 add	 eax, 4
  00072	50		 push	 eax
  00073	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _PropertyFailure$[ebp+4]
  00079	51		 push	 ecx
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3485 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_GAME_PROPERTY_FAILURE,&PropertyFailure,sizeof(PropertyFailure));

  00080	68 84 00 00 00	 push	 132			; 00000084H
  00085	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _PropertyFailure$[ebp]
  0008b	50		 push	 eax
  0008c	68 94 01 00 00	 push	 404			; 00000194H
  00091	6a 08		 push	 8
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00096	51		 push	 ecx
  00097	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009a	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	8b 10		 mov	 edx, DWORD PTR [eax]
  000a5	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  000ab	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000ae	ff d0		 call	 eax

; 3486 : 
; 3487 : 	return true;

  000b0	b0 01		 mov	 al, 1
$LN1@OnDBProper:

; 3488 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPropertyFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
tv320 = -136						; size = 4
tv308 = -136						; size = 4
_PropertySuccess$1 = -68				; size = 15
_pUserInfo$2 = -52					; size = 4
_pUserInfo$3 = -48					; size = 4
_pUserInfo$4 = -44					; size = 4
_lCurrScore$5 = -40					; size = 8
_dwCurrentTime$ = -32					; size = 4
_lFrozenedScore$6 = -28					; size = 8
_pITargetUserItem$ = -20				; size = 4
_pISourceUserItem$ = -16				; size = 4
_pPropertySuccess$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPropertySuccess, COMDAT
; _this$ = ecx

; 3346 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3347 : 	//变量定义
; 3348 : 	DBO_GR_S_PropertySuccess * pPropertySuccess=(DBO_GR_S_PropertySuccess *)pData;

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pPropertySuccess$[ebp], eax

; 3349 : 
; 3350 : 	//获取用户
; 3351 : 	IServerUserItem * pISourceUserItem=m_ServerUserManager.SearchUserItem(pPropertySuccess->dwSourceUserID);

  0001f	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  00022	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00025	51		 push	 ecx
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0002f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00038	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0003b	ff d2		 call	 edx
  0003d	89 45 f0	 mov	 DWORD PTR _pISourceUserItem$[ebp], eax

; 3352 : 	IServerUserItem * pITargetUserItem=m_ServerUserManager.SearchUserItem(pPropertySuccess->dwTargetUserID);

  00040	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  00043	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00046	51		 push	 ecx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00050	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00059	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0005c	ff d2		 call	 edx
  0005e	89 45 ec	 mov	 DWORD PTR _pITargetUserItem$[ebp], eax

; 3353 : 
; 3354 : 	//赠送用户
; 3355 : 	if (pISourceUserItem!=NULL)

  00061	83 7d f0 00	 cmp	 DWORD PTR _pISourceUserItem$[ebp], 0
  00065	74 60		 je	 SHORT $LN2@OnDBProper

; 3356 : 	{
; 3357 : 		//变量定义
; 3358 : 		SCORE lFrozenedScore=pPropertySuccess->lFrozenedScore;

  00067	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  0006a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006d	89 4d e4	 mov	 DWORD PTR _lFrozenedScore$6[ebp], ecx
  00070	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00073	89 55 e8	 mov	 DWORD PTR _lFrozenedScore$6[ebp+4], edx

; 3359 : 
; 3360 : 		//解冻积分
; 3361 : 		if ((lFrozenedScore>0L)&&(pISourceUserItem->UnFrozenedUserScore(lFrozenedScore)==false))

  00076	83 7d e8 00	 cmp	 DWORD PTR _lFrozenedScore$6[ebp+4], 0
  0007a	7c 4b		 jl	 SHORT $LN2@OnDBProper
  0007c	7f 06		 jg	 SHORT $LN22@OnDBProper
  0007e	83 7d e4 00	 cmp	 DWORD PTR _lFrozenedScore$6[ebp], 0
  00082	76 43		 jbe	 SHORT $LN2@OnDBProper
$LN22@OnDBProper:
  00084	8b 45 e8	 mov	 eax, DWORD PTR _lFrozenedScore$6[ebp+4]
  00087	50		 push	 eax
  00088	8b 4d e4	 mov	 ecx, DWORD PTR _lFrozenedScore$6[ebp]
  0008b	51		 push	 ecx
  0008c	8b 55 f0	 mov	 edx, DWORD PTR _pISourceUserItem$[ebp]
  0008f	8b 02		 mov	 eax, DWORD PTR [edx]
  00091	8b 4d f0	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  00094	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  0009a	ff d2		 call	 edx
  0009c	0f b6 c0	 movzx	 eax, al
  0009f	85 c0		 test	 eax, eax
  000a1	75 24		 jne	 SHORT $LN2@OnDBProper

; 3362 : 		{
; 3363 : 			ASSERT(FALSE);

  000a3	33 c0		 xor	 eax, eax
  000a5	75 19		 jne	 SHORT $LN21@OnDBProper
  000a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  000ad	83 c1 11	 add	 ecx, 17			; 00000011H
  000b0	51		 push	 ecx
  000b1	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN21@OnDBProper
  000bf	cc		 int	 3
$LN21@OnDBProper:

; 3364 : 			return false;

  000c0	32 c0		 xor	 al, al
  000c2	e9 91 02 00 00	 jmp	 $LN1@OnDBProper
$LN2@OnDBProper:

; 3365 : 		}
; 3366 : 	}
; 3367 : 
; 3368 : 	//更新魅力
; 3369 : 	if (pISourceUserItem!=NULL && pPropertySuccess->lSendLoveLiness != 0)

  000c7	83 7d f0 00	 cmp	 DWORD PTR _pISourceUserItem$[ebp], 0
  000cb	74 38		 je	 SHORT $LN4@OnDBProper
  000cd	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  000d0	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv308[ebp], eax
  000d6	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv308[ebp]
  000dc	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv308[ebp]
  000e2	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  000e5	0b 42 34	 or	 eax, DWORD PTR [edx+52]
  000e8	74 1b		 je	 SHORT $LN4@OnDBProper

; 3370 : 	{
; 3371 : 		pISourceUserItem->ModifyUserProperty(0,(LONG)pPropertySuccess->lSendLoveLiness);

  000ea	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  000ed	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000f0	51		 push	 ecx
  000f1	6a 00		 push	 0
  000f3	6a 00		 push	 0
  000f5	8b 55 f0	 mov	 edx, DWORD PTR _pISourceUserItem$[ebp]
  000f8	8b 02		 mov	 eax, DWORD PTR [edx]
  000fa	8b 4d f0	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  000fd	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  00103	ff d2		 call	 edx
$LN4@OnDBProper:

; 3372 : 	}
; 3373 : 
; 3374 : 	//更新魅力
; 3375 : 	if(pITargetUserItem!=NULL && pPropertySuccess->lRecvLoveLiness != 0)

  00105	83 7d ec 00	 cmp	 DWORD PTR _pITargetUserItem$[ebp], 0
  00109	74 38		 je	 SHORT $LN5@OnDBProper
  0010b	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  0010e	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv320[ebp], eax
  00114	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv320[ebp]
  0011a	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv320[ebp]
  00120	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  00123	0b 42 3c	 or	 eax, DWORD PTR [edx+60]
  00126	74 1b		 je	 SHORT $LN5@OnDBProper

; 3376 : 	{
; 3377 : 		pITargetUserItem->ModifyUserProperty(0,(LONG)pPropertySuccess->lRecvLoveLiness);

  00128	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  0012b	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0012e	51		 push	 ecx
  0012f	6a 00		 push	 0
  00131	6a 00		 push	 0
  00133	8b 55 ec	 mov	 edx, DWORD PTR _pITargetUserItem$[ebp]
  00136	8b 02		 mov	 eax, DWORD PTR [edx]
  00138	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  0013b	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  00141	ff d2		 call	 edx
$LN5@OnDBProper:

; 3378 : 	}
; 3379 : 
; 3380 : 	//变量定义
; 3381 : 	DWORD dwCurrentTime=(DWORD)time(NULL);

  00143	6a 00		 push	 0
  00145	e8 00 00 00 00	 call	 _time
  0014a	83 c4 04	 add	 esp, 4
  0014d	89 45 e0	 mov	 DWORD PTR _dwCurrentTime$[ebp], eax

; 3382 : 
; 3383 : 
; 3384 : 	//负分清零
; 3385 : 	if( pPropertySuccess->wPropKind == PROP_KIND_NEGATIVE_SCORE_CLEAR )

  00150	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  00153	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00157	83 f9 09	 cmp	 ecx, 9
  0015a	75 7a		 jne	 SHORT $LN6@OnDBProper

; 3386 : 	{
; 3387 : 		if( m_pGameServiceOption->wServerType&GAME_GENRE_SCORE )

  0015c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00162	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00166	83 e2 02	 and	 edx, 2
  00169	74 66		 je	 SHORT $LN8@OnDBProper

; 3388 : 		{
; 3389 : 			//变量定义
; 3390 : 			SCORE lCurrScore = pITargetUserItem->GetUserScore();

  0016b	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  0016e	8b 10		 mov	 edx, DWORD PTR [eax]
  00170	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00173	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00179	ff d0		 call	 eax
  0017b	89 45 d8	 mov	 DWORD PTR _lCurrScore$5[ebp], eax
  0017e	89 55 dc	 mov	 DWORD PTR _lCurrScore$5[ebp+4], edx

; 3391 : 			if ( lCurrScore < 0)

  00181	83 7d dc 00	 cmp	 DWORD PTR _lCurrScore$5[ebp+4], 0
  00185	7f 4a		 jg	 SHORT $LN8@OnDBProper
  00187	7c 06		 jl	 SHORT $LN23@OnDBProper
  00189	83 7d d8 00	 cmp	 DWORD PTR _lCurrScore$5[ebp], 0
  0018d	73 42		 jae	 SHORT $LN8@OnDBProper
$LN23@OnDBProper:

; 3392 : 			{
; 3393 : 				//用户信息
; 3394 : 				tagUserInfo * pUserInfo = pITargetUserItem->GetUserInfo();

  0018f	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00192	8b 10		 mov	 edx, DWORD PTR [eax]
  00194	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00197	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0019a	ff d0		 call	 eax
  0019c	89 45 d4	 mov	 DWORD PTR _pUserInfo$4[ebp], eax

; 3395 : 				if(pUserInfo==NULL) return true;

  0019f	83 7d d4 00	 cmp	 DWORD PTR _pUserInfo$4[ebp], 0
  001a3	75 07		 jne	 SHORT $LN10@OnDBProper
  001a5	b0 01		 mov	 al, 1
  001a7	e9 ac 01 00 00	 jmp	 $LN1@OnDBProper
$LN10@OnDBProper:

; 3396 : 				//修改积分
; 3397 : 				pUserInfo->bConsumptionType.lScore=0;

  001ac	8b 45 d4	 mov	 eax, DWORD PTR _pUserInfo$4[ebp]
  001af	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0
  001b9	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 3398 : 				SendPropertyEffect(pITargetUserItem, PROP_KIND_NEGATIVE_SCORE_CLEAR);

  001c3	6a 09		 push	 9
  001c5	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cc	e8 00 00 00 00	 call	 ?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ; CAttemperEngineSink::SendPropertyEffect
$LN8@OnDBProper:

; 3399 : 			}
; 3400 : 		}
; 3401 : 		
; 3402 : 	}

  001d1	e9 b3 00 00 00	 jmp	 $LN7@OnDBProper
$LN6@OnDBProper:

; 3403 : 	//逃跑清零
; 3404 : 	else if( pPropertySuccess->wPropKind == PROP_KIND_ESCAPE_CLEAR )

  001d6	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  001d9	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  001dd	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  001e0	75 46		 jne	 SHORT $LN11@OnDBProper

; 3405 : 	{
; 3406 : 		//用户信息
; 3407 : 		tagUserInfo * pUserInfo = pITargetUserItem->GetUserInfo();

  001e2	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  001e5	8b 10		 mov	 edx, DWORD PTR [eax]
  001e7	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  001ea	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  001ed	ff d0		 call	 eax
  001ef	89 45 d0	 mov	 DWORD PTR _pUserInfo$3[ebp], eax

; 3408 : 		if(pUserInfo==NULL) return true;

  001f2	83 7d d0 00	 cmp	 DWORD PTR _pUserInfo$3[ebp], 0
  001f6	75 07		 jne	 SHORT $LN13@OnDBProper
  001f8	b0 01		 mov	 al, 1
  001fa	e9 59 01 00 00	 jmp	 $LN1@OnDBProper
$LN13@OnDBProper:

; 3409 : 
; 3410 : 		//修改逃跑率
; 3411 : 		if(pUserInfo->dwFleeCount > 0)

  001ff	8b 45 d0	 mov	 eax, DWORD PTR _pUserInfo$3[ebp]
  00202	83 b8 e4 00 00
	00 00		 cmp	 DWORD PTR [eax+228], 0
  00209	76 1b		 jbe	 SHORT $LN14@OnDBProper

; 3412 : 		{
; 3413 : 			pUserInfo->dwFleeCount=0;

  0020b	8b 45 d0	 mov	 eax, DWORD PTR _pUserInfo$3[ebp]
  0020e	c7 80 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+228], 0

; 3414 : 			SendPropertyEffect(pITargetUserItem, PROP_KIND_ESCAPE_CLEAR);

  00218	6a 0a		 push	 10			; 0000000aH
  0021a	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  0021d	50		 push	 eax
  0021e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00221	e8 00 00 00 00	 call	 ?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ; CAttemperEngineSink::SendPropertyEffect
$LN14@OnDBProper:

; 3415 : 		}
; 3416 : 	}

  00226	eb 61		 jmp	 SHORT $LN7@OnDBProper
$LN11@OnDBProper:

; 3417 : 	//VIP卡
; 3418 : 	else if( pPropertySuccess->wPropKind == PROP_KIND_VIP )

  00228	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  0022b	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  0022f	83 f9 06	 cmp	 ecx, 6
  00232	75 55		 jne	 SHORT $LN7@OnDBProper

; 3419 : 	{
; 3420 : 		//用户信息
; 3421 : 		tagUserInfo * pUserInfo = pITargetUserItem->GetUserInfo();

  00234	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00237	8b 10		 mov	 edx, DWORD PTR [eax]
  00239	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  0023c	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0023f	ff d0		 call	 eax
  00241	89 45 cc	 mov	 DWORD PTR _pUserInfo$2[ebp], eax

; 3422 : 		if(pUserInfo==NULL) return true;

  00244	83 7d cc 00	 cmp	 DWORD PTR _pUserInfo$2[ebp], 0
  00248	75 07		 jne	 SHORT $LN16@OnDBProper
  0024a	b0 01		 mov	 al, 1
  0024c	e9 07 01 00 00	 jmp	 $LN1@OnDBProper
$LN16@OnDBProper:

; 3423 : 
; 3424 : 		//更新会员
; 3425 : 		pUserInfo->cbMemberOrder=pPropertySuccess->cbMemberOrder;

  00251	8b 45 cc	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  00254	8b 4d f4	 mov	 ecx, DWORD PTR _pPropertySuccess$[ebp]
  00257	8a 51 40	 mov	 dl, BYTE PTR [ecx+64]
  0025a	88 90 8f 00 00
	00		 mov	 BYTE PTR [eax+143], dl

; 3426 : 
; 3427 : 		//修改权限
; 3428 : 		pITargetUserItem->ModifyUserRight(pPropertySuccess->dwUserRight,0);

  00260	6a 00		 push	 0
  00262	6a 00		 push	 0
  00264	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  00267	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0026a	51		 push	 ecx
  0026b	8b 55 ec	 mov	 edx, DWORD PTR _pITargetUserItem$[ebp]
  0026e	8b 02		 mov	 eax, DWORD PTR [edx]
  00270	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  00273	8b 90 08 01 00
	00		 mov	 edx, DWORD PTR [eax+264]
  00279	ff d2		 call	 edx

; 3429 : 
; 3430 : 		//发送消息
; 3431 : 		SendPropertyEffect(pITargetUserItem, PROP_KIND_VIP);

  0027b	6a 06		 push	 6
  0027d	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00280	50		 push	 eax
  00281	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00284	e8 00 00 00 00	 call	 ?SendPropertyEffect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@G@Z ; CAttemperEngineSink::SendPropertyEffect
$LN7@OnDBProper:

; 3432 : 	}
; 3433 : 
; 3434 : 
; 3435 : 
; 3436 : 	//广播礼物
; 3437 : 	if( pPropertySuccess->wPropKind==PROP_KIND_GIFT )

  00289	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  0028c	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00290	83 f9 01	 cmp	 ecx, 1
  00293	0f 85 bd 00 00
	00		 jne	 $LN17@OnDBProper

; 3438 : 	{
; 3439 : 		//变量定义
; 3440 : 		CMD_GR_S_PropertySuccess PropertySuccess;
; 3441 : 		ZeroMemory(&PropertySuccess,sizeof(PropertySuccess));

  00299	6a 0f		 push	 15			; 0000000fH
  0029b	6a 00		 push	 0
  0029d	8d 45 bc	 lea	 eax, DWORD PTR _PropertySuccess$1[ebp]
  002a0	50		 push	 eax
  002a1	e8 00 00 00 00	 call	 _memset
  002a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3442 : 
; 3443 : 		//设置变量
; 3444 : 		PropertySuccess.wKind = pPropertySuccess->wPropKind;

  002a9	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  002ac	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  002b0	66 89 4d bd	 mov	 WORD PTR _PropertySuccess$1[ebp+1], cx

; 3445 : 		PropertySuccess.cbRequestArea=pPropertySuccess->cbRequestArea;

  002b4	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  002b7	8a 48 10	 mov	 cl, BYTE PTR [eax+16]
  002ba	88 4d bc	 mov	 BYTE PTR _PropertySuccess$1[ebp], cl

; 3446 : 		PropertySuccess.wItemCount=pPropertySuccess->wItemCount;

  002bd	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  002c0	66 8b 08	 mov	 cx, WORD PTR [eax]
  002c3	66 89 4d bf	 mov	 WORD PTR _PropertySuccess$1[ebp+3], cx

; 3447 : 		PropertySuccess.wPropertyIndex=pPropertySuccess->wPropertyIndex;

  002c7	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  002ca	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  002ce	66 89 4d c1	 mov	 WORD PTR _PropertySuccess$1[ebp+5], cx

; 3448 : 		PropertySuccess.dwSourceUserID=pPropertySuccess->dwSourceUserID;

  002d2	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  002d5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002d8	89 4d c3	 mov	 DWORD PTR _PropertySuccess$1[ebp+7], ecx

; 3449 : 		PropertySuccess.dwTargetUserID=pPropertySuccess->dwTargetUserID;

  002db	8b 45 f4	 mov	 eax, DWORD PTR _pPropertySuccess$[ebp]
  002de	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  002e1	89 4d c7	 mov	 DWORD PTR _PropertySuccess$1[ebp+11], ecx

; 3450 : 
; 3451 : 		//发送消息
; 3452 : 		if (pISourceUserItem!=NULL)

  002e4	83 7d f0 00	 cmp	 DWORD PTR _pISourceUserItem$[ebp], 0
  002e8	74 22		 je	 SHORT $LN18@OnDBProper

; 3453 : 		{
; 3454 : 			SendData(pISourceUserItem,MDM_GR_PROPERTY,SUB_GR_PROPERTY_SUCCESS,&PropertySuccess,sizeof(PropertySuccess));

  002ea	6a 0f		 push	 15			; 0000000fH
  002ec	8d 45 bc	 lea	 eax, DWORD PTR _PropertySuccess$1[ebp]
  002ef	50		 push	 eax
  002f0	68 c9 00 00 00	 push	 201			; 000000c9H
  002f5	6a 08		 push	 8
  002f7	8b 4d f0	 mov	 ecx, DWORD PTR _pISourceUserItem$[ebp]
  002fa	51		 push	 ecx
  002fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002fe	83 c1 04	 add	 ecx, 4
  00301	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00304	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00307	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0030a	ff d2		 call	 edx
$LN18@OnDBProper:

; 3455 : 		}
; 3456 : 
; 3457 : 		//发送消息
; 3458 : 		if (pITargetUserItem!=NULL && pITargetUserItem!=pISourceUserItem)

  0030c	83 7d ec 00	 cmp	 DWORD PTR _pITargetUserItem$[ebp], 0
  00310	74 2a		 je	 SHORT $LN19@OnDBProper
  00312	8b 45 ec	 mov	 eax, DWORD PTR _pITargetUserItem$[ebp]
  00315	3b 45 f0	 cmp	 eax, DWORD PTR _pISourceUserItem$[ebp]
  00318	74 22		 je	 SHORT $LN19@OnDBProper

; 3459 : 		{
; 3460 : 			SendData(pITargetUserItem,MDM_GR_PROPERTY,SUB_GR_PROPERTY_SUCCESS,&PropertySuccess,sizeof(PropertySuccess));

  0031a	6a 0f		 push	 15			; 0000000fH
  0031c	8d 45 bc	 lea	 eax, DWORD PTR _PropertySuccess$1[ebp]
  0031f	50		 push	 eax
  00320	68 c9 00 00 00	 push	 201			; 000000c9H
  00325	6a 08		 push	 8
  00327	8b 4d ec	 mov	 ecx, DWORD PTR _pITargetUserItem$[ebp]
  0032a	51		 push	 ecx
  0032b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0032e	83 c1 04	 add	 ecx, 4
  00331	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00334	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00337	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0033a	ff d2		 call	 edx
$LN19@OnDBProper:

; 3461 : 		}
; 3462 : 
; 3463 : 		SendPropertyMessage(PropertySuccess.dwSourceUserID,PropertySuccess.dwTargetUserID,PropertySuccess.wPropertyIndex,

  0033c	0f b7 45 bf	 movzx	 eax, WORD PTR _PropertySuccess$1[ebp+3]
  00340	50		 push	 eax
  00341	0f b7 4d c1	 movzx	 ecx, WORD PTR _PropertySuccess$1[ebp+5]
  00345	51		 push	 ecx
  00346	8b 55 c7	 mov	 edx, DWORD PTR _PropertySuccess$1[ebp+11]
  00349	52		 push	 edx
  0034a	8b 45 c3	 mov	 eax, DWORD PTR _PropertySuccess$1[ebp+7]
  0034d	50		 push	 eax
  0034e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00351	e8 00 00 00 00	 call	 ?SendPropertyMessage@CAttemperEngineSink@@IAE_NKKGG@Z ; CAttemperEngineSink::SendPropertyMessage
$LN17@OnDBProper:

; 3464 : 		PropertySuccess.wItemCount);
; 3465 : 	}
; 3466 : 
; 3467 : 	return true;

  00356	b0 01		 mov	 al, 1
$LN1@OnDBProper:

; 3468 : }

  00358	5f		 pop	 edi
  00359	5e		 pop	 esi
  0035a	5b		 pop	 ebx
  0035b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0035e	33 cd		 xor	 ecx, ebp
  00360	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00365	8b e5		 mov	 esp, ebp
  00367	5d		 pop	 ebp
  00368	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPropertySuccess
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_UserTaskInfo$1 = -204					; size = 16
_pTaskParameter$2 = -188				; size = 4
_lOldScore$3 = -184					; size = 8
_pUserInfo$4 = -176					; size = 4
_wSendSize$ = -172					; size = 2
_TaskResult$ = -168					; size = 147
_pTaskResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserTaskResult, COMDAT
; _this$ = ecx

; 4033 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4034 : 	//判断在线
; 4035 : 	ASSERT(wDataSize<=sizeof(DBO_GR_TaskResult));

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 98 00 00 00	 cmp	 eax, 152		; 00000098H
  00022	76 19		 jbe	 SHORT $LN8@OnDBUserTa
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002a	83 c1 02	 add	 ecx, 2
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN8@OnDBUserTa
  0003c	cc		 int	 3
$LN8@OnDBUserTa:

; 4036 : 	if(wDataSize>sizeof(DBO_GR_TaskResult)) return false;

  0003d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	3d 98 00 00 00	 cmp	 eax, 152		; 00000098H
  00046	76 07		 jbe	 SHORT $LN2@OnDBUserTa
  00048	32 c0		 xor	 al, al
  0004a	e9 ca 02 00 00	 jmp	 $LN1@OnDBUserTa
$LN2@OnDBUserTa:

; 4037 : 
; 4038 : 	//获取用户
; 4039 : 	WORD wBindIndex=LOWORD(dwContextID);

  0004f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00052	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00057	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 4040 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0005b	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0006b	ff d0		 call	 eax
  0006d	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 4041 : 
; 4042 : 	//用户效验
; 4043 : 	ASSERT(pIServerUserItem!=NULL);

  00070	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00074	75 18		 jne	 SHORT $LN9@OnDBUserTa
  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0007b	83 c0 0a	 add	 eax, 10			; 0000000aH
  0007e	50		 push	 eax
  0007f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00084	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00089	85 c0		 test	 eax, eax
  0008b	74 01		 je	 SHORT $LN9@OnDBUserTa
  0008d	cc		 int	 3
$LN9@OnDBUserTa:

; 4044 : 	if (pIServerUserItem==NULL) return false;

  0008e	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00092	75 07		 jne	 SHORT $LN3@OnDBUserTa
  00094	32 c0		 xor	 al, al
  00096	e9 7e 02 00 00	 jmp	 $LN1@OnDBUserTa
$LN3@OnDBUserTa:

; 4045 : 
; 4046 : 	//变量定义
; 4047 : 	DBO_GR_TaskResult * pTaskResult=(DBO_GR_TaskResult *)pData;

  0009b	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009e	89 45 ec	 mov	 DWORD PTR _pTaskResult$[ebp], eax

; 4048 : 
; 4049 : 	//变量定义
; 4050 : 	CMD_GR_S_TaskResult TaskResult;
; 4051 : 	ZeroMemory(&TaskResult,sizeof(TaskResult));

  000a1	68 93 00 00 00	 push	 147			; 00000093H
  000a6	6a 00		 push	 0
  000a8	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _TaskResult$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 _memset
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4052 : 
; 4053 : 	//构造变量
; 4054 : 	TaskResult.wCommandID=pTaskResult->wCommandID;

  000b7	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  000ba	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  000be	66 89 8d 59 ff
	ff ff		 mov	 WORD PTR _TaskResult$[ebp+1], cx

; 4055 : 	TaskResult.bSuccessed=pTaskResult->bSuccessed;

  000c5	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  000c8	8a 08		 mov	 cl, BYTE PTR [eax]
  000ca	88 8d 58 ff ff
	ff		 mov	 BYTE PTR _TaskResult$[ebp], cl

; 4056 : 	TaskResult.lCurrScore=pTaskResult->lCurrScore;

  000d0	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  000d3	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d6	89 8d 5b ff ff
	ff		 mov	 DWORD PTR _TaskResult$[ebp+3], ecx
  000dc	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000df	89 95 5f ff ff
	ff		 mov	 DWORD PTR _TaskResult$[ebp+7], edx

; 4057 : 	TaskResult.lCurrIngot=pTaskResult->lCurrIngot;

  000e5	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  000e8	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000eb	89 8d 63 ff ff
	ff		 mov	 DWORD PTR _TaskResult$[ebp+11], ecx
  000f1	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  000f4	89 95 67 ff ff
	ff		 mov	 DWORD PTR _TaskResult$[ebp+15], edx

; 4058 : 	lstrcpyn(TaskResult.szNotifyContent,pTaskResult->szNotifyContent,CountArray(TaskResult.szNotifyContent));

  000fa	68 80 00 00 00	 push	 128			; 00000080H
  000ff	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  00102	83 c0 18	 add	 eax, 24			; 00000018H
  00105	50		 push	 eax
  00106	8d 8d 6b ff ff
	ff		 lea	 ecx, DWORD PTR _TaskResult$[ebp+19]
  0010c	51		 push	 ecx
  0010d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 4059 : 
; 4060 : 	//发送数据
; 4061 : 	WORD wSendSize = sizeof(TaskResult)-sizeof(TaskResult.szNotifyContent)+CountStringBuffer(TaskResult.szNotifyContent);

  00113	8d 85 6b ff ff
	ff		 lea	 eax, DWORD PTR _TaskResult$[ebp+19]
  00119	50		 push	 eax
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00120	83 c0 14	 add	 eax, 20			; 00000014H
  00123	66 89 85 54 ff
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], ax

; 4062 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_TASK,SUB_GR_TASK_RESULT,&TaskResult,wSendSize);

  0012a	0f b7 85 54 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00131	50		 push	 eax
  00132	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _TaskResult$[ebp]
  00138	51		 push	 ecx
  00139	6a 0e		 push	 14			; 0000000eH
  0013b	6a 06		 push	 6
  0013d	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00140	52		 push	 edx
  00141	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00144	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  0014a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0014f	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00155	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00158	ff d2		 call	 edx

; 4063 : 
; 4064 : 	//奖励信息
; 4065 : 	if (TaskResult.bSuccessed==true && TaskResult.wCommandID==SUB_GR_TASK_REWARD)

  0015a	0f b6 85 58 ff
	ff ff		 movzx	 eax, BYTE PTR _TaskResult$[ebp]
  00161	83 f8 01	 cmp	 eax, 1
  00164	0f 85 d9 00 00
	00		 jne	 $LN4@OnDBUserTa
  0016a	0f b7 85 59 ff
	ff ff		 movzx	 eax, WORD PTR _TaskResult$[ebp+1]
  00171	83 f8 03	 cmp	 eax, 3
  00174	0f 85 c9 00 00
	00		 jne	 $LN4@OnDBUserTa

; 4066 : 	{
; 4067 : 		//变量定义
; 4068 : 		tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  0017a	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0017d	8b 10		 mov	 edx, DWORD PTR [eax]
  0017f	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00182	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00185	ff d0		 call	 eax
  00187	89 85 50 ff ff
	ff		 mov	 DWORD PTR _pUserInfo$4[ebp], eax

; 4069 : 		pUserInfo->bConsumptionType.lIngot=pTaskResult->lCurrIngot;

  0018d	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$4[ebp]
  00193	8b 4d ec	 mov	 ecx, DWORD PTR _pTaskResult$[ebp]
  00196	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00199	89 90 b0 00 00
	00		 mov	 DWORD PTR [eax+176], edx
  0019f	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  001a2	89 88 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ecx

; 4070 : 
; 4071 : 		SCORE lOldScore=pIServerUserItem->GetUserScore();

  001a8	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ab	8b 10		 mov	 edx, DWORD PTR [eax]
  001ad	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b0	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  001b6	ff d0		 call	 eax
  001b8	89 85 48 ff ff
	ff		 mov	 DWORD PTR _lOldScore$3[ebp], eax
  001be	89 95 4c ff ff
	ff		 mov	 DWORD PTR _lOldScore$3[ebp+4], edx

; 4072 : 		lOldScore+=pIServerUserItem->GetFrozenedScore();

  001c4	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001c7	8b 10		 mov	 edx, DWORD PTR [eax]
  001c9	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001cc	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  001d2	ff d0		 call	 eax
  001d4	03 85 48 ff ff
	ff		 add	 eax, DWORD PTR _lOldScore$3[ebp]
  001da	13 95 4c ff ff
	ff		 adc	 edx, DWORD PTR _lOldScore$3[ebp+4]
  001e0	89 85 48 ff ff
	ff		 mov	 DWORD PTR _lOldScore$3[ebp], eax
  001e6	89 95 4c ff ff
	ff		 mov	 DWORD PTR _lOldScore$3[ebp+4], edx

; 4073 : 		lOldScore+=pIServerUserItem->GetTrusteeScore();

  001ec	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ef	8b 10		 mov	 edx, DWORD PTR [eax]
  001f1	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001f4	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  001fa	ff d0		 call	 eax
  001fc	03 85 48 ff ff
	ff		 add	 eax, DWORD PTR _lOldScore$3[ebp]
  00202	13 95 4c ff ff
	ff		 adc	 edx, DWORD PTR _lOldScore$3[ebp+4]
  00208	89 85 48 ff ff
	ff		 mov	 DWORD PTR _lOldScore$3[ebp], eax
  0020e	89 95 4c ff ff
	ff		 mov	 DWORD PTR _lOldScore$3[ebp+4], edx

; 4074 : 		pIServerUserItem->ModifyUserInsure(pTaskResult->lCurrScore-lOldScore,0,0);

  00214	6a 00		 push	 0
  00216	6a 00		 push	 0
  00218	6a 00		 push	 0
  0021a	6a 00		 push	 0
  0021c	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  0021f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00222	2b 8d 48 ff ff
	ff		 sub	 ecx, DWORD PTR _lOldScore$3[ebp]
  00228	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0022b	1b 95 4c ff ff
	ff		 sbb	 edx, DWORD PTR _lOldScore$3[ebp+4]
  00231	52		 push	 edx
  00232	51		 push	 ecx
  00233	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00236	8b 10		 mov	 edx, DWORD PTR [eax]
  00238	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0023b	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  00241	ff d0		 call	 eax
$LN4@OnDBUserTa:

; 4075 : 	}
; 4076 : 
; 4077 : 	//设置任务
; 4078 : 	if(TaskResult.bSuccessed==true && TaskResult.wCommandID==SUB_GR_TASK_TAKE)

  00243	0f b6 85 58 ff
	ff ff		 movzx	 eax, BYTE PTR _TaskResult$[ebp]
  0024a	83 f8 01	 cmp	 eax, 1
  0024d	0f 85 c4 00 00
	00		 jne	 $LN5@OnDBUserTa
  00253	0f b7 85 59 ff
	ff ff		 movzx	 eax, WORD PTR _TaskResult$[ebp+1]
  0025a	83 f8 02	 cmp	 eax, 2
  0025d	0f 85 b4 00 00
	00		 jne	 $LN5@OnDBUserTa

; 4079 : 	{
; 4080 : 		tagTaskParameter * pTaskParameter=m_UserTaskManager.SearchTaskParameter(pTaskResult->wCurrTaskID);

  00263	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  00266	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0026a	51		 push	 ecx
  0026b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026e	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00274	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00277	8b 82 bc 3e 02
	00		 mov	 eax, DWORD PTR [edx+147132]
  0027d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00280	ff d2		 call	 edx
  00282	89 85 44 ff ff
	ff		 mov	 DWORD PTR _pTaskParameter$2[ebp], eax

; 4081 : 		if(pTaskParameter!=NULL && pTaskParameter->wKindID==m_pGameServiceOption->wKindID)

  00288	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _pTaskParameter$2[ebp], 0
  0028f	0f 84 82 00 00
	00		 je	 $LN5@OnDBUserTa
  00295	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pTaskParameter$2[ebp]
  0029b	0f b7 48 07	 movzx	 ecx, WORD PTR [eax+7]
  0029f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002a2	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  002a5	0f b7 10	 movzx	 edx, WORD PTR [eax]
  002a8	3b ca		 cmp	 ecx, edx
  002aa	75 6b		 jne	 SHORT $LN5@OnDBUserTa

; 4082 : 		{
; 4083 : 			//变量定义
; 4084 : 			tagUserTaskInfo UserTaskInfo;
; 4085 : 
; 4086 : 			//设置任务		
; 4087 : 			UserTaskInfo.wTaskProgress=0;

  002ac	33 c0		 xor	 eax, eax
  002ae	66 89 85 38 ff
	ff ff		 mov	 WORD PTR _UserTaskInfo$1[ebp+4], ax

; 4088 : 			UserTaskInfo.cbTaskStatus=TASK_STATUS_UNFINISH;

  002b5	c6 85 36 ff ff
	ff 00		 mov	 BYTE PTR _UserTaskInfo$1[ebp+2], 0

; 4089 : 			UserTaskInfo.wTaskID=pTaskResult->wCurrTaskID;

  002bc	8b 45 ec	 mov	 eax, DWORD PTR _pTaskResult$[ebp]
  002bf	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  002c3	66 89 8d 34 ff
	ff ff		 mov	 WORD PTR _UserTaskInfo$1[ebp], cx

; 4090 : 			UserTaskInfo.dwResidueTime=pTaskParameter->dwTimeLimit;

  002ca	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pTaskParameter$2[ebp]
  002d0	8b 48 09	 mov	 ecx, DWORD PTR [eax+9]
  002d3	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _UserTaskInfo$1[ebp+8], ecx

; 4091 : 			UserTaskInfo.dwLastUpdateTime=(DWORD)time(NULL);

  002d9	6a 00		 push	 0
  002db	e8 00 00 00 00	 call	 _time
  002e0	83 c4 04	 add	 esp, 4
  002e3	89 85 40 ff ff
	ff		 mov	 DWORD PTR _UserTaskInfo$1[ebp+12], eax

; 4092 : 
; 4093 : 			//设置任务
; 4094 : 			m_UserTaskManager.SetUserTaskInfo(pIServerUserItem->GetUserID(),&UserTaskInfo,1);

  002e9	6a 01		 push	 1
  002eb	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _UserTaskInfo$1[ebp]
  002f1	50		 push	 eax
  002f2	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002f5	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f7	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002fa	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  002fd	ff d0		 call	 eax
  002ff	50		 push	 eax
  00300	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00303	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00309	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0030c	8b 82 bc 3e 02
	00		 mov	 eax, DWORD PTR [edx+147132]
  00312	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00315	ff d2		 call	 edx
$LN5@OnDBUserTa:

; 4095 : 		}
; 4096 : 	}
; 4097 : 
; 4098 : 	return true;

  00317	b0 01		 mov	 al, 1
$LN1@OnDBUserTa:

; 4099 : }

  00319	5f		 pop	 edi
  0031a	5e		 pop	 esi
  0031b	5b		 pop	 ebx
  0031c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0031f	33 cd		 xor	 ecx, ebp
  00321	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00326	8b e5		 mov	 esp, ebp
  00328	5d		 pop	 ebp
  00329	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserTaskResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendDataSize$ = -17056				; size = 2
_TaskInfo$ = -17052					; size = 642
_i$1 = -16408						; size = 2
_pDataBuffer$ = -16404					; size = 4
_cbDataBuffer$ = -16400					; size = 16376
_wParameterSize$ = -24					; size = 2
_wSendSize$ = -20					; size = 2
_wTaskCount$ = -16					; size = 2
_pTaskInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserTaskInfo, COMDAT
; _this$ = ecx

; 3956 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 a0 44 00 00	 mov	 eax, 17568		; 000044a0H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3957 : 	//判断在线
; 3958 : 	ASSERT(wDataSize<=sizeof(DBO_GR_TaskInfo));

  0001d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00021	3d 82 02 00 00	 cmp	 eax, 642		; 00000282H
  00026	76 19		 jbe	 SHORT $LN9@OnDBUserTa
  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0002e	83 c1 02	 add	 ecx, 2
  00031	51		 push	 ecx
  00032	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00037	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003c	85 c0		 test	 eax, eax
  0003e	74 01		 je	 SHORT $LN9@OnDBUserTa
  00040	cc		 int	 3
$LN9@OnDBUserTa:

; 3959 : 	if (wDataSize>sizeof(DBO_GR_TaskInfo)) return false;

  00041	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00045	3d 82 02 00 00	 cmp	 eax, 642		; 00000282H
  0004a	76 07		 jbe	 SHORT $LN5@OnDBUserTa
  0004c	32 c0		 xor	 al, al
  0004e	e9 6b 02 00 00	 jmp	 $LN1@OnDBUserTa
$LN5@OnDBUserTa:

; 3960 : 
; 3961 : 	//变量定义
; 3962 : 	DBO_GR_TaskInfo * pTaskInfo=(DBO_GR_TaskInfo *)pData;

  00053	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00056	89 45 f4	 mov	 DWORD PTR _pTaskInfo$[ebp], eax

; 3963 : 
; 3964 : 	//网络数据
; 3965 : 	WORD wTaskCount=m_wTaskCount;

  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	66 8b 88 e4 04
	00 00		 mov	 cx, WORD PTR [eax+1252]
  00063	66 89 4d f0	 mov	 WORD PTR _wTaskCount$[ebp], cx

; 3966 : 	WORD wSendSize=0,wParameterSize=0;

  00067	33 c0		 xor	 eax, eax
  00069	66 89 45 ec	 mov	 WORD PTR _wSendSize$[ebp], ax
  0006d	33 c0		 xor	 eax, eax
  0006f	66 89 45 e8	 mov	 WORD PTR _wParameterSize$[ebp], ax

; 3967 : 	BYTE cbDataBuffer[SOCKET_TCP_PACKET];
; 3968 : 	LPBYTE pDataBuffer = cbDataBuffer;

  00073	8d 85 f0 bf ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$[ebp]
  00079	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 3969 : 
; 3970 : 	//设置数量
; 3971 : 	pDataBuffer += sizeof(wTaskCount);

  0007f	8b 85 ec bf ff
	ff		 mov	 eax, DWORD PTR _pDataBuffer$[ebp]
  00085	83 c0 02	 add	 eax, 2
  00088	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 3972 : 	wSendSize = sizeof(wTaskCount);

  0008e	b8 02 00 00 00	 mov	 eax, 2
  00093	66 89 45 ec	 mov	 WORD PTR _wSendSize$[ebp], ax

; 3973 : 
; 3974 : 	//分包发送
; 3975 : 	for(WORD i=0;i<wTaskCount;i++)

  00097	33 c0		 xor	 eax, eax
  00099	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _i$1[ebp], ax
  000a0	eb 12		 jmp	 SHORT $LN4@OnDBUserTa
$LN2@OnDBUserTa:
  000a2	66 8b 85 e8 bf
	ff ff		 mov	 ax, WORD PTR _i$1[ebp]
  000a9	66 83 c0 01	 add	 ax, 1
  000ad	66 89 85 e8 bf
	ff ff		 mov	 WORD PTR _i$1[ebp], ax
$LN4@OnDBUserTa:
  000b4	0f b7 85 e8 bf
	ff ff		 movzx	 eax, WORD PTR _i$1[ebp]
  000bb	0f b7 4d f0	 movzx	 ecx, WORD PTR _wTaskCount$[ebp]
  000bf	3b c1		 cmp	 eax, ecx
  000c1	0f 8d 1c 01 00
	00		 jge	 $LN3@OnDBUserTa

; 3976 : 	{
; 3977 : 		//越界判断
; 3978 : 		if(wSendSize+sizeof(tagTaskParameter)>SOCKET_TCP_PACKET)

  000c7	0f b7 45 ec	 movzx	 eax, WORD PTR _wSendSize$[ebp]
  000cb	05 ad 01 00 00	 add	 eax, 429		; 000001adH
  000d0	3d f8 3f 00 00	 cmp	 eax, 16376		; 00003ff8H
  000d5	76 71		 jbe	 SHORT $LN6@OnDBUserTa

; 3979 : 		{
; 3980 : 			//重置变量
; 3981 : 			pDataBuffer = cbDataBuffer;

  000d7	8d 85 f0 bf ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$[ebp]
  000dd	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 3982 : 			wTaskCount -= i;

  000e3	0f b7 85 e8 bf
	ff ff		 movzx	 eax, WORD PTR _i$1[ebp]
  000ea	0f b7 4d f0	 movzx	 ecx, WORD PTR _wTaskCount$[ebp]
  000ee	2b c8		 sub	 ecx, eax
  000f0	66 89 4d f0	 mov	 WORD PTR _wTaskCount$[ebp], cx

; 3983 : 			*(WORD*)pDataBuffer = i; 

  000f4	8b 85 ec bf ff
	ff		 mov	 eax, DWORD PTR _pDataBuffer$[ebp]
  000fa	66 8b 8d e8 bf
	ff ff		 mov	 cx, WORD PTR _i$1[ebp]
  00101	66 89 08	 mov	 WORD PTR [eax], cx

; 3984 : 
; 3985 : 			//发送数据
; 3986 : 			m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_TASK,SUB_GR_TASK_LIST,&cbDataBuffer,wSendSize);

  00104	0f b7 45 ec	 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00108	50		 push	 eax
  00109	8d 8d f0 bf ff
	ff		 lea	 ecx, DWORD PTR _cbDataBuffer$[ebp]
  0010f	51		 push	 ecx
  00110	6a 0d		 push	 13			; 0000000dH
  00112	6a 06		 push	 6
  00114	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00117	52		 push	 edx
  00118	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00121	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00124	8b 01		 mov	 eax, DWORD PTR [ecx]
  00126	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0012c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0012f	ff d2		 call	 edx

; 3987 : 
; 3988 : 			//重置变量
; 3989 : 			pDataBuffer += sizeof(wSendSize);

  00131	8b 85 ec bf ff
	ff		 mov	 eax, DWORD PTR _pDataBuffer$[ebp]
  00137	83 c0 02	 add	 eax, 2
  0013a	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 3990 : 			wSendSize = wSendSize;

  00140	66 8b 45 ec	 mov	 ax, WORD PTR _wSendSize$[ebp]
  00144	66 89 45 ec	 mov	 WORD PTR _wSendSize$[ebp], ax
$LN6@OnDBUserTa:

; 3991 : 		}
; 3992 : 
; 3993 : 		//计算大小
; 3994 : 		wParameterSize = sizeof(tagTaskParameter)-sizeof(m_TaskParameter[i].szTaskDescribe)+CountStringBuffer(m_TaskParameter[i].szTaskDescribe);

  00148	0f b7 85 e8 bf
	ff ff		 movzx	 eax, WORD PTR _i$1[ebp]
  0014f	69 c8 ad 01 00
	00		 imul	 ecx, eax, 429
  00155	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00158	8d 84 0a 53 05
	00 00		 lea	 eax, DWORD PTR [edx+ecx+1363]
  0015f	50		 push	 eax
  00160	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00166	83 c0 6e	 add	 eax, 110		; 0000006eH
  00169	66 89 45 e8	 mov	 WORD PTR _wParameterSize$[ebp], ax

; 3995 : 		*(WORD *)pDataBuffer = wParameterSize;

  0016d	8b 85 ec bf ff
	ff		 mov	 eax, DWORD PTR _pDataBuffer$[ebp]
  00173	66 8b 4d e8	 mov	 cx, WORD PTR _wParameterSize$[ebp]
  00177	66 89 08	 mov	 WORD PTR [eax], cx

; 3996 : 		pDataBuffer += sizeof(wParameterSize);

  0017a	8b 85 ec bf ff
	ff		 mov	 eax, DWORD PTR _pDataBuffer$[ebp]
  00180	83 c0 02	 add	 eax, 2
  00183	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 3997 : 		wSendSize += sizeof(wParameterSize);

  00189	0f b7 45 ec	 movzx	 eax, WORD PTR _wSendSize$[ebp]
  0018d	83 c0 02	 add	 eax, 2
  00190	66 89 45 ec	 mov	 WORD PTR _wSendSize$[ebp], ax

; 3998 : 
; 3999 : 		//拷贝数据
; 4000 : 		CopyMemory(pDataBuffer,&m_TaskParameter[i],wParameterSize);

  00194	0f b7 45 e8	 movzx	 eax, WORD PTR _wParameterSize$[ebp]
  00198	50		 push	 eax
  00199	0f b7 8d e8 bf
	ff ff		 movzx	 ecx, WORD PTR _i$1[ebp]
  001a0	69 d1 ad 01 00
	00		 imul	 edx, ecx, 429
  001a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a9	8d 8c 10 e6 04
	00 00		 lea	 ecx, DWORD PTR [eax+edx+1254]
  001b0	51		 push	 ecx
  001b1	8b 95 ec bf ff
	ff		 mov	 edx, DWORD PTR _pDataBuffer$[ebp]
  001b7	52		 push	 edx
  001b8	e8 00 00 00 00	 call	 _memcpy
  001bd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4001 : 
; 4002 : 		//推进指针
; 4003 : 		pDataBuffer += wParameterSize;

  001c0	0f b7 45 e8	 movzx	 eax, WORD PTR _wParameterSize$[ebp]
  001c4	03 85 ec bf ff
	ff		 add	 eax, DWORD PTR _pDataBuffer$[ebp]
  001ca	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 4004 : 		wSendSize += wParameterSize;

  001d0	0f b7 45 e8	 movzx	 eax, WORD PTR _wParameterSize$[ebp]
  001d4	0f b7 4d ec	 movzx	 ecx, WORD PTR _wSendSize$[ebp]
  001d8	03 c8		 add	 ecx, eax
  001da	66 89 4d ec	 mov	 WORD PTR _wSendSize$[ebp], cx

; 4005 : 	}

  001de	e9 bf fe ff ff	 jmp	 $LN2@OnDBUserTa
$LN3@OnDBUserTa:

; 4006 : 
; 4007 : 	//剩余发送
; 4008 : 	if(wTaskCount>0 && wSendSize)

  001e3	0f b7 45 f0	 movzx	 eax, WORD PTR _wTaskCount$[ebp]
  001e7	85 c0		 test	 eax, eax
  001e9	7e 4e		 jle	 SHORT $LN7@OnDBUserTa
  001eb	0f b7 45 ec	 movzx	 eax, WORD PTR _wSendSize$[ebp]
  001ef	85 c0		 test	 eax, eax
  001f1	74 46		 je	 SHORT $LN7@OnDBUserTa

; 4009 : 	{
; 4010 : 		//重置变量
; 4011 : 		pDataBuffer = cbDataBuffer;

  001f3	8d 85 f0 bf ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$[ebp]
  001f9	89 85 ec bf ff
	ff		 mov	 DWORD PTR _pDataBuffer$[ebp], eax

; 4012 : 		*(WORD *)pDataBuffer = wTaskCount; 

  001ff	8b 85 ec bf ff
	ff		 mov	 eax, DWORD PTR _pDataBuffer$[ebp]
  00205	66 8b 4d f0	 mov	 cx, WORD PTR _wTaskCount$[ebp]
  00209	66 89 08	 mov	 WORD PTR [eax], cx

; 4013 : 
; 4014 : 		//发送数据
; 4015 : 		m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_TASK,SUB_GR_TASK_LIST,pDataBuffer,wSendSize);

  0020c	0f b7 45 ec	 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00210	50		 push	 eax
  00211	8b 8d ec bf ff
	ff		 mov	 ecx, DWORD PTR _pDataBuffer$[ebp]
  00217	51		 push	 ecx
  00218	6a 0d		 push	 13			; 0000000dH
  0021a	6a 06		 push	 6
  0021c	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0021f	52		 push	 edx
  00220	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00223	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00229	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0022c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0022e	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00234	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00237	ff d2		 call	 edx
$LN7@OnDBUserTa:

; 4016 : 	}
; 4017 : 
; 4018 : 	//构造结构
; 4019 : 	CMD_GR_S_TaskInfo TaskInfo;
; 4020 : 	TaskInfo.wTaskCount = pTaskInfo->wTaskCount;

  00239	8b 45 f4	 mov	 eax, DWORD PTR _pTaskInfo$[ebp]
  0023c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0023f	66 89 8d 64 bd
	ff ff		 mov	 WORD PTR _TaskInfo$[ebp], cx

; 4021 : 	CopyMemory(TaskInfo.TaskStatus,pTaskInfo->TaskStatus,sizeof(TaskInfo.TaskStatus[0])*pTaskInfo->wTaskCount);

  00246	8b 45 f4	 mov	 eax, DWORD PTR _pTaskInfo$[ebp]
  00249	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0024c	6b d1 05	 imul	 edx, ecx, 5
  0024f	52		 push	 edx
  00250	8b 45 f4	 mov	 eax, DWORD PTR _pTaskInfo$[ebp]
  00253	83 c0 02	 add	 eax, 2
  00256	50		 push	 eax
  00257	8d 8d 66 bd ff
	ff		 lea	 ecx, DWORD PTR _TaskInfo$[ebp+2]
  0025d	51		 push	 ecx
  0025e	e8 00 00 00 00	 call	 _memcpy
  00263	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4022 : 
; 4023 : 	//发送数据
; 4024 : 	WORD wSendDataSize = sizeof(TaskInfo)-sizeof(TaskInfo.TaskStatus);

  00266	b8 02 00 00 00	 mov	 eax, 2
  0026b	66 89 85 60 bd
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 4025 : 	wSendDataSize += sizeof(TaskInfo.TaskStatus[0])*TaskInfo.wTaskCount;

  00272	0f b7 85 64 bd
	ff ff		 movzx	 eax, WORD PTR _TaskInfo$[ebp]
  00279	6b c8 05	 imul	 ecx, eax, 5
  0027c	0f b7 95 60 bd
	ff ff		 movzx	 edx, WORD PTR _wSendDataSize$[ebp]
  00283	03 d1		 add	 edx, ecx
  00285	66 89 95 60 bd
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 4026 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_TASK,SUB_GR_TASK_INFO,&TaskInfo,wSendDataSize);

  0028c	0f b7 85 60 bd
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  00293	50		 push	 eax
  00294	8d 8d 64 bd ff
	ff		 lea	 ecx, DWORD PTR _TaskInfo$[ebp]
  0029a	51		 push	 ecx
  0029b	6a 0b		 push	 11			; 0000000bH
  0029d	6a 06		 push	 6
  0029f	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  002a2	52		 push	 edx
  002a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a6	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  002ac	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002af	8b 01		 mov	 eax, DWORD PTR [ecx]
  002b1	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  002b7	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  002ba	ff d2		 call	 edx

; 4027 : 
; 4028 : 	return true;

  002bc	b0 01		 mov	 al, 1
$LN1@OnDBUserTa:

; 4029 : }

  002be	5f		 pop	 edi
  002bf	5e		 pop	 esi
  002c0	5b		 pop	 ebx
  002c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c4	33 cd		 xor	 ecx, ebp
  002c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002cb	8b e5		 mov	 esp, ebp
  002cd	5d		 pop	 ebp
  002ce	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserTaskInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserTaskListEnd@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserTaskListEnd@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserTaskListEnd, COMDAT
; _this$ = ecx

; 3944 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3945 : 	//移除任务
; 3946 : 	m_UserTaskManager.RemoveTaskParameter();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 90 bc 3e 02
	00		 mov	 edx, DWORD PTR [eax+147132]
  0001e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00021	ff d0		 call	 eax

; 3947 : 
; 3948 : 	//添加任务
; 3949 : 	m_UserTaskManager.AddTaskParameter(m_TaskParameter, m_wTaskCount);

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b7 88 e4 04
	00 00		 movzx	 ecx, WORD PTR [eax+1252]
  0002d	51		 push	 ecx
  0002e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00031	81 c2 e6 04 00
	00		 add	 edx, 1254		; 000004e6H
  00037	52		 push	 edx
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 90 bc 3e 02
	00		 mov	 edx, DWORD PTR [eax+147132]
  0004a	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0004d	ff d0		 call	 eax

; 3950 : 
; 3951 : 	return true;

  0004f	b0 01		 mov	 al, 1

; 3952 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserTaskListEnd@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserTaskListEnd
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserTaskList@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
tv75 = -80						; size = 4
_wTaskCount$ = -12					; size = 2
_pTaskListInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserTaskList@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserTaskList, COMDAT
; _this$ = ecx

; 3928 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3929 : 	//变量定义
; 3930 : 	DBO_GR_TaskListInfo * pTaskListInfo=(DBO_GR_TaskListInfo *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pTaskListInfo$[ebp], eax

; 3931 : 
; 3932 : 	//拷贝数据	
; 3933 : 	WORD wTaskCount = __min(pTaskListInfo->wTaskCount, CountArray(m_TaskParameter)-m_wTaskCount);

  00012	8b 45 f8	 mov	 eax, DWORD PTR _pTaskListInfo$[ebp]
  00015	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	0f b7 82 e4 04
	00 00		 movzx	 eax, WORD PTR [edx+1252]
  00022	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00027	2b d0		 sub	 edx, eax
  00029	3b ca		 cmp	 ecx, edx
  0002b	73 0b		 jae	 SHORT $LN3@OnDBUserTa
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _pTaskListInfo$[ebp]
  00030	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00033	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00036	eb 14		 jmp	 SHORT $LN4@OnDBUserTa
$LN3@OnDBUserTa:
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	0f b7 82 e4 04
	00 00		 movzx	 eax, WORD PTR [edx+1252]
  00042	b9 80 00 00 00	 mov	 ecx, 128		; 00000080H
  00047	2b c8		 sub	 ecx, eax
  00049	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
$LN4@OnDBUserTa:
  0004c	66 8b 55 b0	 mov	 dx, WORD PTR tv75[ebp]
  00050	66 89 55 f4	 mov	 WORD PTR _wTaskCount$[ebp], dx

; 3934 : 	CopyMemory(m_TaskParameter+m_wTaskCount, ++pTaskListInfo, sizeof(tagTaskParameter)*wTaskCount);

  00054	8b 45 f8	 mov	 eax, DWORD PTR _pTaskListInfo$[ebp]
  00057	83 c0 02	 add	 eax, 2
  0005a	89 45 f8	 mov	 DWORD PTR _pTaskListInfo$[ebp], eax
  0005d	0f b7 4d f4	 movzx	 ecx, WORD PTR _wTaskCount$[ebp]
  00061	69 d1 ad 01 00
	00		 imul	 edx, ecx, 429
  00067	52		 push	 edx
  00068	8b 45 f8	 mov	 eax, DWORD PTR _pTaskListInfo$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	0f b7 91 e4 04
	00 00		 movzx	 edx, WORD PTR [ecx+1252]
  00076	69 c2 ad 01 00
	00		 imul	 eax, edx, 429
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	8d 94 01 e6 04
	00 00		 lea	 edx, DWORD PTR [ecx+eax+1254]
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 _memcpy
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3935 : 
; 3936 : 	//设置变量
; 3937 : 	m_wTaskCount += wTaskCount;

  0008f	0f b7 45 f4	 movzx	 eax, WORD PTR _wTaskCount$[ebp]
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	0f b7 91 e4 04
	00 00		 movzx	 edx, WORD PTR [ecx+1252]
  0009d	03 d0		 add	 edx, eax
  0009f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	66 89 90 e4 04
	00 00		 mov	 WORD PTR [eax+1252], dx

; 3938 : 
; 3939 : 	return true;

  000a9	b0 01		 mov	 al, 1

; 3940 : }

  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserTaskList@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserTaskList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendDataSize$ = -164					; size = 2
_BaseEnsureResult$ = -160				; size = 137
_pBaseEnsureResult$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCBaseEnsureResult, COMDAT
; _this$ = ecx

; 3894 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3895 : 	//获取用户
; 3896 : 	WORD wBindIndex=LOWORD(dwContextID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 3897 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3898 : 
; 3899 : 	//用户效验
; 3900 : 	ASSERT(pIServerUserItem!=NULL);

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN5@OnDBPCBase
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c0 06	 add	 eax, 6
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN5@OnDBPCBase
  00057	cc		 int	 3
$LN5@OnDBPCBase:

; 3901 : 	if (pIServerUserItem==NULL) return false;

  00058	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN2@OnDBPCBase
  0005e	32 c0		 xor	 al, al
  00060	e9 e5 00 00 00	 jmp	 $LN1@OnDBPCBase
$LN2@OnDBPCBase:

; 3902 : 
; 3903 : 	//变量定义
; 3904 : 	DBO_GR_BaseEnsureResult * pBaseEnsureResult=(DBO_GR_BaseEnsureResult *)pData;

  00065	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00068	89 45 ec	 mov	 DWORD PTR _pBaseEnsureResult$[ebp], eax

; 3905 : 
; 3906 : 	//构造结构
; 3907 : 	CMD_GR_BaseEnsureResult BaseEnsureResult;
; 3908 : 	BaseEnsureResult.bSuccessed=pBaseEnsureResult->bSuccessed;

  0006b	8b 45 ec	 mov	 eax, DWORD PTR _pBaseEnsureResult$[ebp]
  0006e	8a 08		 mov	 cl, BYTE PTR [eax]
  00070	88 8d 60 ff ff
	ff		 mov	 BYTE PTR _BaseEnsureResult$[ebp], cl

; 3909 : 	BaseEnsureResult.lGameScore=pBaseEnsureResult->lGameScore;

  00076	8b 45 ec	 mov	 eax, DWORD PTR _pBaseEnsureResult$[ebp]
  00079	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007c	89 8d 61 ff ff
	ff		 mov	 DWORD PTR _BaseEnsureResult$[ebp+1], ecx
  00082	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00085	89 95 65 ff ff
	ff		 mov	 DWORD PTR _BaseEnsureResult$[ebp+5], edx

; 3910 : 	lstrcpyn(BaseEnsureResult.szNotifyContent,pBaseEnsureResult->szNotifyContent,CountArray(BaseEnsureResult.szNotifyContent));

  0008b	68 80 00 00 00	 push	 128			; 00000080H
  00090	8b 45 ec	 mov	 eax, DWORD PTR _pBaseEnsureResult$[ebp]
  00093	83 c0 10	 add	 eax, 16			; 00000010H
  00096	50		 push	 eax
  00097	8d 8d 69 ff ff
	ff		 lea	 ecx, DWORD PTR _BaseEnsureResult$[ebp+9]
  0009d	51		 push	 ecx
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3911 : 
; 3912 : 	//更新游戏币
; 3913 : 	if( BaseEnsureResult.bSuccessed==true)

  000a4	0f b6 85 60 ff
	ff ff		 movzx	 eax, BYTE PTR _BaseEnsureResult$[ebp]
  000ab	83 f8 01	 cmp	 eax, 1
  000ae	75 3a		 jne	 SHORT $LN3@OnDBPCBase

; 3914 : 	{
; 3915 : 		pIServerUserItem->ModifyUserInsure(BaseEnsureResult.lGameScore-pIServerUserItem->GetUserScore(),0,0);

  000b0	6a 00		 push	 0
  000b2	6a 00		 push	 0
  000b4	6a 00		 push	 0
  000b6	6a 00		 push	 0
  000b8	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000bb	8b 10		 mov	 edx, DWORD PTR [eax]
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000c0	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  000c6	ff d0		 call	 eax
  000c8	8b 8d 61 ff ff
	ff		 mov	 ecx, DWORD PTR _BaseEnsureResult$[ebp+1]
  000ce	2b c8		 sub	 ecx, eax
  000d0	8b 85 65 ff ff
	ff		 mov	 eax, DWORD PTR _BaseEnsureResult$[ebp+5]
  000d6	1b c2		 sbb	 eax, edx
  000d8	50		 push	 eax
  000d9	51		 push	 ecx
  000da	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000dd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000df	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e2	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  000e8	ff d0		 call	 eax
$LN3@OnDBPCBase:

; 3916 : 	}
; 3917 : 
; 3918 : 	//发送数据
; 3919 : 	WORD wSendDataSize=sizeof(BaseEnsureResult)-sizeof(BaseEnsureResult.szNotifyContent);

  000ea	b8 09 00 00 00	 mov	 eax, 9
  000ef	66 89 85 5c ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 3920 : 	wSendDataSize+=CountStringBuffer(BaseEnsureResult.szNotifyContent);

  000f6	8d 85 69 ff ff
	ff		 lea	 eax, DWORD PTR _BaseEnsureResult$[ebp+9]
  000fc	50		 push	 eax
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00103	0f b7 8d 5c ff
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  0010a	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  0010e	66 89 95 5c ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 3921 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_BASEENSURE,SUB_GR_BASEENSURE_RESULT,&BaseEnsureResult,wSendDataSize);

  00115	0f b7 85 5c ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  0011c	50		 push	 eax
  0011d	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _BaseEnsureResult$[ebp]
  00123	51		 push	 ecx
  00124	68 07 01 00 00	 push	 263			; 00000107H
  00129	6a 0b		 push	 11			; 0000000bH
  0012b	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0012e	52		 push	 edx
  0012f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00132	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00138	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0013b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0013d	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00143	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00146	ff d2		 call	 edx

; 3922 : 
; 3923 : 	return true;

  00148	b0 01		 mov	 al, 1
$LN1@OnDBPCBase:

; 3924 : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00150	33 cd		 xor	 ecx, ebp
  00152	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCBaseEnsureResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCBaseEnsureParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_ControlResult$1 = -17					; size = 1
_ServiceStatus$ = -16					; size = 4
_pServiceUnits$ = -12					; size = 4
_pEnsureParameter$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCBaseEnsureParameter@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCBaseEnsureParameter, COMDAT
; _this$ = ecx

; 3869 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3870 : 	//变量定义
; 3871 : 	DBO_GR_BaseEnsureParameter * pEnsureParameter=(DBO_GR_BaseEnsureParameter *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pEnsureParameter$[ebp], eax

; 3872 : 
; 3873 : 	//设置变量
; 3874 : 	m_BaseEnsureParameter.cbTakeTimes = pEnsureParameter->cbTakeTimes;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _pEnsureParameter$[ebp]
  00018	8a 51 10	 mov	 dl, BYTE PTR [ecx+16]
  0001b	88 90 0b 03 00
	00		 mov	 BYTE PTR [eax+779], dl

; 3875 : 	m_BaseEnsureParameter.lScoreAmount = pEnsureParameter->lScoreAmount;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _pEnsureParameter$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 90 03 03 00
	00		 mov	 DWORD PTR [eax+771], edx
  00030	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00033	89 88 07 03 00
	00		 mov	 DWORD PTR [eax+775], ecx

; 3876 : 	m_BaseEnsureParameter.lScoreCondition = pEnsureParameter->lScoreCondition;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _pEnsureParameter$[ebp]
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	89 90 fb 02 00
	00		 mov	 DWORD PTR [eax+763], edx
  00047	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0004a	89 88 ff 02 00
	00		 mov	 DWORD PTR [eax+767], ecx

; 3877 : 
; 3878 : 	//获取状态
; 3879 : 	CServiceUnits * pServiceUnits=CServiceUnits::g_pServiceUnits;

  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pServiceUnits@CServiceUnits@@2PAV1@A ; CServiceUnits::g_pServiceUnits
  00055	89 45 f4	 mov	 DWORD PTR _pServiceUnits$[ebp], eax

; 3880 : 	enServiceStatus ServiceStatus=pServiceUnits->GetServiceStatus();

  00058	8b 4d f4	 mov	 ecx, DWORD PTR _pServiceUnits$[ebp]
  0005b	e8 00 00 00 00	 call	 ?GetServiceStatus@CServiceUnits@@QAE?AW4enServiceStatus@@XZ ; CServiceUnits::GetServiceStatus
  00060	89 45 f0	 mov	 DWORD PTR _ServiceStatus$[ebp], eax

; 3881 : 	//事件通知
; 3882 : 	if (ServiceStatus!=ServiceStatus_Service)

  00063	83 7d f0 02	 cmp	 DWORD PTR _ServiceStatus$[ebp], 2
  00067	74 14		 je	 SHORT $LN2@OnDBPCBase

; 3883 : 	{
; 3884 : 		CP_ControlResult ControlResult;
; 3885 : 		ControlResult.cbSuccess=ER_SUCCESS;

  00069	c6 45 ef 01	 mov	 BYTE PTR _ControlResult$1[ebp], 1

; 3886 : 		SendUIControlPacket(UI_SERVICE_CONFIG_RESULT,&ControlResult,sizeof(ControlResult));

  0006d	6a 01		 push	 1
  0006f	8d 45 ef	 lea	 eax, DWORD PTR _ControlResult$1[ebp]
  00072	50		 push	 eax
  00073	6a 02		 push	 2
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::SendUIControlPacket
$LN2@OnDBPCBase:

; 3887 : 	}
; 3888 : 
; 3889 : 	return true;

  0007d	b0 01		 mov	 al, 1

; 3890 : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCBaseEnsureParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCBaseEnsureParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_pCheckInReward$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCCheckInReward, COMDAT
; _this$ = ecx

; 3853 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3854 : 	//参数校验
; 3855 : 	ASSERT(wDataSize==sizeof(DBO_GR_CheckInReward));

  0000c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 38	 cmp	 eax, 56			; 00000038H
  00013	74 19		 je	 SHORT $LN4@OnDBPCChec
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN4@OnDBPCChec
  0002d	cc		 int	 3
$LN4@OnDBPCChec:

; 3856 : 	if(wDataSize!=sizeof(DBO_GR_CheckInReward)) return false;

  0002e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 38	 cmp	 eax, 56			; 00000038H
  00035	74 04		 je	 SHORT $LN2@OnDBPCChec
  00037	32 c0		 xor	 al, al
  00039	eb 20		 jmp	 SHORT $LN1@OnDBPCChec
$LN2@OnDBPCChec:

; 3857 : 
; 3858 : 	//提取数据
; 3859 : 	DBO_GR_CheckInReward * pCheckInReward=(DBO_GR_CheckInReward *)pData;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0003e	89 45 f8	 mov	 DWORD PTR _pCheckInReward$[ebp], eax

; 3860 : 
; 3861 : 	//拷贝数据
; 3862 : 	CopyMemory(m_lCheckInReward,pCheckInReward->lRewardGold,sizeof(m_lCheckInReward));

  00041	6a 38		 push	 56			; 00000038H
  00043	8b 45 f8	 mov	 eax, DWORD PTR _pCheckInReward$[ebp]
  00046	50		 push	 eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	81 c1 10 03 00
	00		 add	 ecx, 784		; 00000310H
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _memcpy
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3863 : 
; 3864 : 	return true;

  00059	b0 01		 mov	 al, 1
$LN1@OnDBPCChec:

; 3865 : }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCCheckInReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendSize$ = -164					; size = 2
_CheckInResult$ = -160					; size = 137
_pCheckInResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCUserCheckInResult, COMDAT
; _this$ = ecx

; 3817 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3818 : 	//获取用户
; 3819 : 	WORD wBindIndex=LOWORD(dwContextID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 3820 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3821 : 
; 3822 : 	//用户效验
; 3823 : 	ASSERT(pIServerUserItem!=NULL);

  0003a	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003e	75 18		 jne	 SHORT $LN5@OnDBPCUser
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c0 06	 add	 eax, 6
  00048	50		 push	 eax
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN5@OnDBPCUser
  00057	cc		 int	 3
$LN5@OnDBPCUser:

; 3824 : 	if (pIServerUserItem==NULL) return false;

  00058	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0005c	75 07		 jne	 SHORT $LN2@OnDBPCUser
  0005e	32 c0		 xor	 al, al
  00060	e9 e7 00 00 00	 jmp	 $LN1@OnDBPCUser
$LN2@OnDBPCUser:

; 3825 : 
; 3826 : 	//变量定义
; 3827 : 	DBO_GR_CheckInResult * pCheckInResult=(DBO_GR_CheckInResult *)pData;

  00065	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00068	89 45 ec	 mov	 DWORD PTR _pCheckInResult$[ebp], eax

; 3828 : 
; 3829 : 	//变量定义
; 3830 : 	CMD_GR_CheckInResult CheckInResult;
; 3831 : 	ZeroMemory(&CheckInResult,sizeof(CheckInResult));

  0006b	68 89 00 00 00	 push	 137			; 00000089H
  00070	6a 00		 push	 0
  00072	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _CheckInResult$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 _memset
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3832 : 
; 3833 : 	//构造变量
; 3834 : 	CheckInResult.bSuccessed=pCheckInResult->bSuccessed;

  00081	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInResult$[ebp]
  00084	8a 08		 mov	 cl, BYTE PTR [eax]
  00086	88 8d 60 ff ff
	ff		 mov	 BYTE PTR _CheckInResult$[ebp], cl

; 3835 : 	CheckInResult.lScore=pCheckInResult->lScore;

  0008c	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInResult$[ebp]
  0008f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00092	89 8d 61 ff ff
	ff		 mov	 DWORD PTR _CheckInResult$[ebp+1], ecx
  00098	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0009b	89 95 65 ff ff
	ff		 mov	 DWORD PTR _CheckInResult$[ebp+5], edx

; 3836 : 	lstrcpyn(CheckInResult.szNotifyContent,pCheckInResult->szNotifyContent,CountArray(CheckInResult.szNotifyContent));

  000a1	68 80 00 00 00	 push	 128			; 00000080H
  000a6	8b 45 ec	 mov	 eax, DWORD PTR _pCheckInResult$[ebp]
  000a9	83 c0 10	 add	 eax, 16			; 00000010H
  000ac	50		 push	 eax
  000ad	8d 8d 69 ff ff
	ff		 lea	 ecx, DWORD PTR _CheckInResult$[ebp+9]
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3837 : 
; 3838 : 	//更新游戏币
; 3839 : 	if( CheckInResult.bSuccessed==true)

  000ba	0f b6 85 60 ff
	ff ff		 movzx	 eax, BYTE PTR _CheckInResult$[ebp]
  000c1	83 f8 01	 cmp	 eax, 1
  000c4	75 3a		 jne	 SHORT $LN3@OnDBPCUser

; 3840 : 	{
; 3841 : 		pIServerUserItem->ModifyUserInsure(CheckInResult.lScore-pIServerUserItem->GetUserScore(),0,0);

  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	6a 00		 push	 0
  000ce	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000d1	8b 10		 mov	 edx, DWORD PTR [eax]
  000d3	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d6	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  000dc	ff d0		 call	 eax
  000de	8b 8d 61 ff ff
	ff		 mov	 ecx, DWORD PTR _CheckInResult$[ebp+1]
  000e4	2b c8		 sub	 ecx, eax
  000e6	8b 85 65 ff ff
	ff		 mov	 eax, DWORD PTR _CheckInResult$[ebp+5]
  000ec	1b c2		 sbb	 eax, edx
  000ee	50		 push	 eax
  000ef	51		 push	 ecx
  000f0	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f8	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  000fe	ff d0		 call	 eax
$LN3@OnDBPCUser:

; 3842 : 	}
; 3843 : 
; 3844 : 
; 3845 : 	//发送数据
; 3846 : 	WORD wSendSize = sizeof(CheckInResult)-sizeof(CheckInResult.szNotifyContent)+CountStringBuffer(CheckInResult.szNotifyContent);

  00100	8d 85 69 ff ff
	ff		 lea	 eax, DWORD PTR _CheckInResult$[ebp+9]
  00106	50		 push	 eax
  00107	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0010d	83 c0 0a	 add	 eax, 10			; 0000000aH
  00110	66 89 85 5c ff
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], ax

; 3847 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_CHECKIN,SUB_GR_CHECKIN_RESULT,&CheckInResult,wSendSize);

  00117	0f b7 85 5c ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  0011e	50		 push	 eax
  0011f	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _CheckInResult$[ebp]
  00125	51		 push	 ecx
  00126	68 df 00 00 00	 push	 223			; 000000dfH
  0012b	6a 0c		 push	 12			; 0000000cH
  0012d	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00130	52		 push	 edx
  00131	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00134	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  0013a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0013d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0013f	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00145	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00148	ff d2		 call	 edx

; 3848 : 
; 3849 : 	return true;

  0014a	b0 01		 mov	 al, 1
$LN1@OnDBPCUser:

; 3850 : }

  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00152	33 cd		 xor	 ecx, ebp
  00154	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCUserCheckInResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCUserCheckInInfo@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_CheckInInfo$ = -72					; size = 59
_pCheckInInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCUserCheckInInfo@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCUserCheckInInfo, COMDAT
; _this$ = ecx

; 3795 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3796 : 
; 3797 : 	//变量定义
; 3798 : 	DBO_GR_CheckInInfo * pCheckInInfo=(DBO_GR_CheckInInfo *)pData;

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pCheckInInfo$[ebp], eax

; 3799 : 
; 3800 : 	//变量定义
; 3801 : 	CMD_GR_CheckInInfo CheckInInfo;
; 3802 : 	ZeroMemory(&CheckInInfo,sizeof(CheckInInfo));

  0001f	6a 3b		 push	 59			; 0000003bH
  00021	6a 00		 push	 0
  00023	8d 45 b8	 lea	 eax, DWORD PTR _CheckInInfo$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3803 : 
; 3804 : 	//构造变量
; 3805 : 	CheckInInfo.bTodayChecked=pCheckInInfo->bTodayChecked;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _pCheckInInfo$[ebp]
  00032	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  00035	88 4d ba	 mov	 BYTE PTR _CheckInInfo$[ebp+2], cl

; 3806 : 	CheckInInfo.wSeriesDate=pCheckInInfo->wSeriesDate;

  00038	8b 45 f4	 mov	 eax, DWORD PTR _pCheckInInfo$[ebp]
  0003b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003e	66 89 4d b8	 mov	 WORD PTR _CheckInInfo$[ebp], cx

; 3807 : 	CopyMemory(CheckInInfo.lRewardGold,m_lCheckInReward,sizeof(CheckInInfo.lRewardGold));

  00042	6a 38		 push	 56			; 00000038H
  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	05 10 03 00 00	 add	 eax, 784		; 00000310H
  0004c	50		 push	 eax
  0004d	8d 4d bb	 lea	 ecx, DWORD PTR _CheckInInfo$[ebp+3]
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _memcpy
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3808 : 
; 3809 : 	//发送数据
; 3810 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_CHECKIN,SUB_GR_CHECKIN_INFO,&CheckInInfo,sizeof(CheckInInfo));

  00059	6a 3b		 push	 59			; 0000003bH
  0005b	8d 45 b8	 lea	 eax, DWORD PTR _CheckInInfo$[ebp]
  0005e	50		 push	 eax
  0005f	68 dd 00 00 00	 push	 221			; 000000ddH
  00064	6a 0c		 push	 12			; 0000000cH
  00066	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00069	51		 push	 ecx
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 10		 mov	 edx, DWORD PTR [eax]
  00078	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  0007e	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00081	ff d0		 call	 eax

; 3811 : 
; 3812 : 	return true;

  00083	b0 01		 mov	 al, 1

; 3813 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008b	33 cd		 xor	 ecx, ebp
  0008d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCUserCheckInInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCUserCheckInInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wHeadSize$ = -156					; size = 2
_UserInsureEnableResult$ = -152				; size = 130
_pUserInsureEnableResult$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserInsureEnableResult, COMDAT
; _this$ = ecx

; 3314 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3315 : 	//判断在线
; 3316 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3317 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@OnDBUserIn
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00043	75 07		 jne	 SHORT $LN2@OnDBUserIn
$LN3@OnDBUserIn:
  00045	b0 01		 mov	 al, 1
  00047	e9 df 00 00 00	 jmp	 $LN1@OnDBUserIn
$LN2@OnDBUserIn:

; 3318 : 
; 3319 : 	//获取用户
; 3320 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	85 c0		 test	 eax, eax
  00064	75 19		 jne	 SHORT $LN5@OnDBUserIn
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN5@OnDBUserIn
  0007e	cc		 int	 3
$LN5@OnDBUserIn:

; 3321 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00082	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	ff d0		 call	 eax
  00095	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3322 : 
; 3323 : 	//变量定义
; 3324 : 	DBO_GR_UserInsureEnableResult * pUserInsureEnableResult=(DBO_GR_UserInsureEnableResult *)pData;

  00098	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009b	89 45 ec	 mov	 DWORD PTR _pUserInsureEnableResult$[ebp], eax

; 3325 : 
; 3326 : 	//变量定义
; 3327 : 	CMD_GR_S_UserInsureEnableResult UserInsureEnableResult;
; 3328 : 	ZeroMemory(&UserInsureEnableResult,sizeof(UserInsureEnableResult));

  0009e	68 82 00 00 00	 push	 130			; 00000082H
  000a3	6a 00		 push	 0
  000a5	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _UserInsureEnableResult$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 _memset
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3329 : 
; 3330 : 	//构造变量
; 3331 : 	UserInsureEnableResult.cbInsureEnabled=pUserInsureEnableResult->cbInsureEnabled;

  000b4	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureEnableResult$[ebp]
  000b7	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000ba	88 8d 69 ff ff
	ff		 mov	 BYTE PTR _UserInsureEnableResult$[ebp+1], cl

; 3332 : 	lstrcpyn(UserInsureEnableResult.szDescribeString,pUserInsureEnableResult->szDescribeString,CountArray(UserInsureEnableResult.szDescribeString));

  000c0	68 80 00 00 00	 push	 128			; 00000080H
  000c5	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureEnableResult$[ebp]
  000c8	83 c0 02	 add	 eax, 2
  000cb	50		 push	 eax
  000cc	8d 8d 6a ff ff
	ff		 lea	 ecx, DWORD PTR _UserInsureEnableResult$[ebp+2]
  000d2	51		 push	 ecx
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3333 : 
; 3334 : 	//计算大小
; 3335 : 	WORD wHeadSize=CountStringBuffer(UserInsureEnableResult.szDescribeString);

  000d9	8d 85 6a ff ff
	ff		 lea	 eax, DWORD PTR _UserInsureEnableResult$[ebp+2]
  000df	50		 push	 eax
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000e6	83 c0 01	 add	 eax, 1
  000e9	66 89 85 64 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 3336 : 	wHeadSize+= sizeof(UserInsureEnableResult)-sizeof(UserInsureEnableResult.szDescribeString);

  000f0	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  000f7	83 c0 02	 add	 eax, 2
  000fa	66 89 85 64 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 3337 : 
; 3338 : 	//发送数据
; 3339 : 	SendData(pIServerUserItem,MDM_GR_INSURE,SUB_GR_USER_INSURE_ENABLE_RESULT,&UserInsureEnableResult,wHeadSize);

  00101	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00108	50		 push	 eax
  00109	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _UserInsureEnableResult$[ebp]
  0010f	51		 push	 ecx
  00110	6a 68		 push	 104			; 00000068H
  00112	6a 05		 push	 5
  00114	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00117	52		 push	 edx
  00118	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011b	83 c1 04	 add	 ecx, 4
  0011e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00121	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00124	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00127	ff d0		 call	 eax

; 3340 : 
; 3341 : 	return true;

  00129	b0 01		 mov	 al, 1
$LN1@OnDBUserIn:

; 3342 : }

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00131	33 cd		 xor	 ecx, ebp
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserInsureEnableResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_UserTransferUserInfo$ = -60				; size = 37
_pTransferUserInfo$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserInsureUserInfo, COMDAT
; _this$ = ecx

; 3285 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3286 : 	//判断在线
; 3287 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00016	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00019	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0001e	50		 push	 eax
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002a	ff d0		 call	 eax
  0002c	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3288 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00037	75 09		 jne	 SHORT $LN3@OnDBUserIn
  00039	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003c	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00040	75 07		 jne	 SHORT $LN2@OnDBUserIn
$LN3@OnDBUserIn:
  00042	b0 01		 mov	 al, 1
  00044	e9 a7 00 00 00	 jmp	 $LN1@OnDBUserIn
$LN2@OnDBUserIn:

; 3289 : 
; 3290 : 	//获取用户
; 3291 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  00049	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00051	50		 push	 eax
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005d	ff d0		 call	 eax
  0005f	85 c0		 test	 eax, eax
  00061	75 19		 jne	 SHORT $LN5@OnDBUserIn
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00069	83 c1 06	 add	 ecx, 6
  0006c	51		 push	 ecx
  0006d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00072	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00077	85 c0		 test	 eax, eax
  00079	74 01		 je	 SHORT $LN5@OnDBUserIn
  0007b	cc		 int	 3
$LN5@OnDBUserIn:

; 3292 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0007f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00084	50		 push	 eax
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00090	ff d0		 call	 eax
  00092	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3293 : 
; 3294 : 	//变量定义
; 3295 : 	DBO_GR_UserTransferUserInfo * pTransferUserInfo=(DBO_GR_UserTransferUserInfo *)pData;

  00095	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00098	89 45 ec	 mov	 DWORD PTR _pTransferUserInfo$[ebp], eax

; 3296 : 
; 3297 : 	//变量定义
; 3298 : 	CMD_GR_S_UserTransferUserInfo UserTransferUserInfo;
; 3299 : 	ZeroMemory(&UserTransferUserInfo,sizeof(UserTransferUserInfo));

  0009b	6a 25		 push	 37			; 00000025H
  0009d	6a 00		 push	 0
  0009f	8d 45 c4	 lea	 eax, DWORD PTR _UserTransferUserInfo$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _memset
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3300 : 
; 3301 : 	//构造变量
; 3302 : 	UserTransferUserInfo.cbActivityGame=pTransferUserInfo->cbActivityGame;

  000ab	8b 45 ec	 mov	 eax, DWORD PTR _pTransferUserInfo$[ebp]
  000ae	8a 08		 mov	 cl, BYTE PTR [eax]
  000b0	88 4d c4	 mov	 BYTE PTR _UserTransferUserInfo$[ebp], cl

; 3303 : 	UserTransferUserInfo.dwTargetGameID=pTransferUserInfo->dwGameID;

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _pTransferUserInfo$[ebp]
  000b6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b9	89 4d c5	 mov	 DWORD PTR _UserTransferUserInfo$[ebp+1], ecx

; 3304 : 	lstrcpyn(UserTransferUserInfo.szAccounts,pTransferUserInfo->szAccounts,CountArray(UserTransferUserInfo.szAccounts));

  000bc	6a 20		 push	 32			; 00000020H
  000be	8b 45 ec	 mov	 eax, DWORD PTR _pTransferUserInfo$[ebp]
  000c1	83 c0 08	 add	 eax, 8
  000c4	50		 push	 eax
  000c5	8d 4d c9	 lea	 ecx, DWORD PTR _UserTransferUserInfo$[ebp+5]
  000c8	51		 push	 ecx
  000c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3305 : 
; 3306 : 	//发送数据
; 3307 : 	SendData(pIServerUserItem,MDM_GR_INSURE,SUB_GR_USER_TRANSFER_USER_INFO,&UserTransferUserInfo,sizeof(UserTransferUserInfo));

  000cf	6a 25		 push	 37			; 00000025H
  000d1	8d 45 c4	 lea	 eax, DWORD PTR _UserTransferUserInfo$[ebp]
  000d4	50		 push	 eax
  000d5	6a 67		 push	 103			; 00000067H
  000d7	6a 05		 push	 5
  000d9	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000dc	51		 push	 ecx
  000dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	83 c1 04	 add	 ecx, 4
  000e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e9	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000ec	ff d2		 call	 edx

; 3308 : 
; 3309 : 	return true;

  000ee	b0 01		 mov	 al, 1
$LN1@OnDBUserIn:

; 3310 : }

  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
  000f3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f6	33 cd		 xor	 ecx, ebp
  000f8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserInsureUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
tv177 = -88						; size = 4
_pUserInsureFailure$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_wBindIndex$ = -12					; size = 2
_pBindParameter$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserInsureFailure, COMDAT
; _this$ = ecx

; 3256 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3257 : 	//判断在线
; 3258 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00020	ff d0		 call	 eax
  00022	89 45 f8	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3259 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0002d	75 09		 jne	 SHORT $LN3@OnDBUserIn
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00032	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00036	75 07		 jne	 SHORT $LN2@OnDBUserIn
$LN3@OnDBUserIn:
  00038	b0 01		 mov	 al, 1
  0003a	e9 d2 00 00 00	 jmp	 $LN1@OnDBUserIn
$LN2@OnDBUserIn:

; 3260 : 
; 3261 : 	//获取用户
; 3262 : 	WORD wBindIndex=LOWORD(dwContextID);

  0003f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00042	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00047	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 3263 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(wBindIndex);

  0004b	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005b	ff d0		 call	 eax
  0005d	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3264 : 
; 3265 : 	//用户效验
; 3266 : 	ASSERT(pIServerUserItem!=NULL);

  00060	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00064	75 18		 jne	 SHORT $LN7@OnDBUserIn
  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006b	83 c0 0a	 add	 eax, 10			; 0000000aH
  0006e	50		 push	 eax
  0006f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN7@OnDBUserIn
  0007d	cc		 int	 3
$LN7@OnDBUserIn:

; 3267 : 	if (pIServerUserItem==NULL) return false;

  0007e	83 7d f0 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00082	75 07		 jne	 SHORT $LN4@OnDBUserIn
  00084	32 c0		 xor	 al, al
  00086	e9 86 00 00 00	 jmp	 $LN1@OnDBUserIn
$LN4@OnDBUserIn:

; 3268 : 
; 3269 : 	//发送错误
; 3270 : 	DBO_GR_UserInsureFailure * pUserInsureFailure=(DBO_GR_UserInsureFailure *)pData;

  0008b	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0008e	89 45 ec	 mov	 DWORD PTR _pUserInsureFailure$[ebp], eax

; 3271 : 	SendInsureFailure(pIServerUserItem,pUserInsureFailure->szDescribeString,pUserInsureFailure->lResultCode,pUserInsureFailure->cbActivityGame);

  00091	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureFailure$[ebp]
  00094	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00097	51		 push	 ecx
  00098	8b 55 ec	 mov	 edx, DWORD PTR _pUserInsureFailure$[ebp]
  0009b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009e	50		 push	 eax
  0009f	8b 4d ec	 mov	 ecx, DWORD PTR _pUserInsureFailure$[ebp]
  000a2	83 c1 10	 add	 ecx, 16			; 00000010H
  000a5	51		 push	 ecx
  000a6	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000a9	52		 push	 edx
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?SendInsureFailure@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PBDJE@Z ; CAttemperEngineSink::SendInsureFailure

; 3272 : 
; 3273 : 	//解冻积分
; 3274 : 	if ((pUserInsureFailure->lFrozenedScore>0L)&&(pIServerUserItem->UnFrozenedUserScore(pUserInsureFailure->lFrozenedScore)==false))

  000b2	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureFailure$[ebp]
  000b5	89 45 a8	 mov	 DWORD PTR tv177[ebp], eax
  000b8	8b 4d a8	 mov	 ecx, DWORD PTR tv177[ebp]
  000bb	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  000bf	7c 4e		 jl	 SHORT $LN5@OnDBUserIn
  000c1	7f 09		 jg	 SHORT $LN9@OnDBUserIn
  000c3	8b 55 a8	 mov	 edx, DWORD PTR tv177[ebp]
  000c6	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  000ca	76 43		 jbe	 SHORT $LN5@OnDBUserIn
$LN9@OnDBUserIn:
  000cc	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureFailure$[ebp]
  000cf	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000d2	51		 push	 ecx
  000d3	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d6	52		 push	 edx
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000da	8b 10		 mov	 edx, DWORD PTR [eax]
  000dc	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000df	8b 82 10 01 00
	00		 mov	 eax, DWORD PTR [edx+272]
  000e5	ff d0		 call	 eax
  000e7	0f b6 c8	 movzx	 ecx, al
  000ea	85 c9		 test	 ecx, ecx
  000ec	75 21		 jne	 SHORT $LN5@OnDBUserIn

; 3275 : 	{
; 3276 : 		ASSERT(FALSE);

  000ee	33 c0		 xor	 eax, eax
  000f0	75 19		 jne	 SHORT $LN8@OnDBUserIn
  000f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  000f8	83 c1 14	 add	 ecx, 20			; 00000014H
  000fb	51		 push	 ecx
  000fc	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00101	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00106	85 c0		 test	 eax, eax
  00108	74 01		 je	 SHORT $LN8@OnDBUserIn
  0010a	cc		 int	 3
$LN8@OnDBUserIn:

; 3277 : 		return false;

  0010b	32 c0		 xor	 al, al
  0010d	eb 02		 jmp	 SHORT $LN1@OnDBUserIn
$LN5@OnDBUserIn:

; 3278 : 	}
; 3279 : 
; 3280 : 	return true;

  0010f	b0 01		 mov	 al, 1
$LN1@OnDBUserIn:

; 3281 : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserInsureFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wHeadSize$ = -208					; size = 2
_wDescribe$ = -204					; size = 2
_UserInsureSuccess$ = -200				; size = 145
_lVariationInsure$ = -52				; size = 8
_lVariationScore$ = -44					; size = 8
_lInsureRevenue$ = -36					; size = 8
_lFrozenedScore$ = -28					; size = 8
_pUserInsureSuccess$ = -20				; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserInsureSuccess, COMDAT
; _this$ = ecx

; 3204 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3205 : 	//判断在线
; 3206 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3207 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@OnDBUserIn
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00043	75 07		 jne	 SHORT $LN2@OnDBUserIn
$LN3@OnDBUserIn:
  00045	b0 01		 mov	 al, 1
  00047	e9 14 02 00 00	 jmp	 $LN1@OnDBUserIn
$LN2@OnDBUserIn:

; 3208 : 
; 3209 : 	//获取用户
; 3210 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	85 c0		 test	 eax, eax
  00064	75 19		 jne	 SHORT $LN7@OnDBUserIn
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN7@OnDBUserIn
  0007e	cc		 int	 3
$LN7@OnDBUserIn:

; 3211 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00082	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	ff d0		 call	 eax
  00095	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3212 : 
; 3213 : 	//变量定义
; 3214 : 	DBO_GR_UserInsureSuccess * pUserInsureSuccess=(DBO_GR_UserInsureSuccess *)pData;

  00098	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009b	89 45 ec	 mov	 DWORD PTR _pUserInsureSuccess$[ebp], eax

; 3215 : 
; 3216 : 	//变量定义
; 3217 : 	SCORE lFrozenedScore=pUserInsureSuccess->lFrozenedScore;

  0009e	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  000a1	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000a4	89 4d e4	 mov	 DWORD PTR _lFrozenedScore$[ebp], ecx
  000a7	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  000aa	89 55 e8	 mov	 DWORD PTR _lFrozenedScore$[ebp+4], edx

; 3218 : 	SCORE lInsureRevenue=pUserInsureSuccess->lInsureRevenue;

  000ad	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  000b0	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b3	89 4d dc	 mov	 DWORD PTR _lInsureRevenue$[ebp], ecx
  000b6	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000b9	89 55 e0	 mov	 DWORD PTR _lInsureRevenue$[ebp+4], edx

; 3219 : 	SCORE lVariationScore=pUserInsureSuccess->lVariationScore;

  000bc	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  000bf	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000c2	89 4d d4	 mov	 DWORD PTR _lVariationScore$[ebp], ecx
  000c5	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  000c8	89 55 d8	 mov	 DWORD PTR _lVariationScore$[ebp+4], edx

; 3220 : 	SCORE lVariationInsure=pUserInsureSuccess->lVariationInsure;

  000cb	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  000ce	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  000d1	89 4d cc	 mov	 DWORD PTR _lVariationInsure$[ebp], ecx
  000d4	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  000d7	89 55 d0	 mov	 DWORD PTR _lVariationInsure$[ebp+4], edx

; 3221 : 
; 3222 : 	//解冻积分
; 3223 : 	if ((lFrozenedScore>0L)&&(pIServerUserItem->UnFrozenedUserScore(lFrozenedScore)==false))

  000da	83 7d e8 00	 cmp	 DWORD PTR _lFrozenedScore$[ebp+4], 0
  000de	7c 4b		 jl	 SHORT $LN4@OnDBUserIn
  000e0	7f 06		 jg	 SHORT $LN10@OnDBUserIn
  000e2	83 7d e4 00	 cmp	 DWORD PTR _lFrozenedScore$[ebp], 0
  000e6	76 43		 jbe	 SHORT $LN4@OnDBUserIn
$LN10@OnDBUserIn:
  000e8	8b 45 e8	 mov	 eax, DWORD PTR _lFrozenedScore$[ebp+4]
  000eb	50		 push	 eax
  000ec	8b 4d e4	 mov	 ecx, DWORD PTR _lFrozenedScore$[ebp]
  000ef	51		 push	 ecx
  000f0	8b 55 f0	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000f3	8b 02		 mov	 eax, DWORD PTR [edx]
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000f8	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  000fe	ff d2		 call	 edx
  00100	0f b6 c0	 movzx	 eax, al
  00103	85 c0		 test	 eax, eax
  00105	75 24		 jne	 SHORT $LN4@OnDBUserIn

; 3224 : 	{
; 3225 : 		ASSERT(FALSE);

  00107	33 c0		 xor	 eax, eax
  00109	75 19		 jne	 SHORT $LN8@OnDBUserIn
  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00111	83 c1 15	 add	 ecx, 21			; 00000015H
  00114	51		 push	 ecx
  00115	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0011a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0011f	85 c0		 test	 eax, eax
  00121	74 01		 je	 SHORT $LN8@OnDBUserIn
  00123	cc		 int	 3
$LN8@OnDBUserIn:

; 3226 : 		return false;

  00124	32 c0		 xor	 al, al
  00126	e9 35 01 00 00	 jmp	 $LN1@OnDBUserIn
$LN4@OnDBUserIn:

; 3227 : 	}
; 3228 : 
; 3229 : 	//银行操作
; 3230 : 	if (pIServerUserItem->ModifyUserInsure(lVariationScore,lVariationInsure,lInsureRevenue)==false)

  0012b	8b 45 e0	 mov	 eax, DWORD PTR _lInsureRevenue$[ebp+4]
  0012e	50		 push	 eax
  0012f	8b 4d dc	 mov	 ecx, DWORD PTR _lInsureRevenue$[ebp]
  00132	51		 push	 ecx
  00133	8b 55 d0	 mov	 edx, DWORD PTR _lVariationInsure$[ebp+4]
  00136	52		 push	 edx
  00137	8b 45 cc	 mov	 eax, DWORD PTR _lVariationInsure$[ebp]
  0013a	50		 push	 eax
  0013b	8b 4d d8	 mov	 ecx, DWORD PTR _lVariationScore$[ebp+4]
  0013e	51		 push	 ecx
  0013f	8b 55 d4	 mov	 edx, DWORD PTR _lVariationScore$[ebp]
  00142	52		 push	 edx
  00143	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00146	8b 10		 mov	 edx, DWORD PTR [eax]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0014b	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  00151	ff d0		 call	 eax
  00153	0f b6 c8	 movzx	 ecx, al
  00156	85 c9		 test	 ecx, ecx
  00158	75 24		 jne	 SHORT $LN5@OnDBUserIn

; 3231 : 	{
; 3232 : 		ASSERT(FALSE);

  0015a	33 c0		 xor	 eax, eax
  0015c	75 19		 jne	 SHORT $LN9@OnDBUserIn
  0015e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00164	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00167	51		 push	 ecx
  00168	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0016d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00172	85 c0		 test	 eax, eax
  00174	74 01		 je	 SHORT $LN9@OnDBUserIn
  00176	cc		 int	 3
$LN9@OnDBUserIn:

; 3233 : 		return false;

  00177	32 c0		 xor	 al, al
  00179	e9 e2 00 00 00	 jmp	 $LN1@OnDBUserIn
$LN5@OnDBUserIn:

; 3234 : 	}
; 3235 : 
; 3236 : 	//变量定义
; 3237 : 	CMD_GR_S_UserInsureSuccess UserInsureSuccess;
; 3238 : 	ZeroMemory(&UserInsureSuccess,sizeof(UserInsureSuccess));

  0017e	68 91 00 00 00	 push	 145			; 00000091H
  00183	6a 00		 push	 0
  00185	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _UserInsureSuccess$[ebp]
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 _memset
  00191	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3239 : 
; 3240 : 	//构造变量
; 3241 : 	UserInsureSuccess.cbActivityGame=pUserInsureSuccess->cbActivityGame;

  00194	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  00197	8a 08		 mov	 cl, BYTE PTR [eax]
  00199	88 8d 38 ff ff
	ff		 mov	 BYTE PTR _UserInsureSuccess$[ebp], cl

; 3242 : 	UserInsureSuccess.lUserScore=pIServerUserItem->GetUserScore()+pIServerUserItem->GetTrusteeScore();

  0019f	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001a2	8b 10		 mov	 edx, DWORD PTR [eax]
  001a4	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001a7	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  001ad	ff d0		 call	 eax
  001af	8b f0		 mov	 esi, eax
  001b1	8b fa		 mov	 edi, edx
  001b3	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b8	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001bb	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  001c1	ff d0		 call	 eax
  001c3	03 f0		 add	 esi, eax
  001c5	13 fa		 adc	 edi, edx
  001c7	89 b5 39 ff ff
	ff		 mov	 DWORD PTR _UserInsureSuccess$[ebp+1], esi
  001cd	89 bd 3d ff ff
	ff		 mov	 DWORD PTR _UserInsureSuccess$[ebp+5], edi

; 3243 : 	UserInsureSuccess.lUserInsure=pUserInsureSuccess->lSourceInsure+pUserInsureSuccess->lVariationInsure;

  001d3	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  001d6	8b 4d ec	 mov	 ecx, DWORD PTR _pUserInsureSuccess$[ebp]
  001d9	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  001dc	03 51 30	 add	 edx, DWORD PTR [ecx+48]
  001df	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  001e2	13 41 34	 adc	 eax, DWORD PTR [ecx+52]
  001e5	89 95 41 ff ff
	ff		 mov	 DWORD PTR _UserInsureSuccess$[ebp+9], edx
  001eb	89 85 45 ff ff
	ff		 mov	 DWORD PTR _UserInsureSuccess$[ebp+13], eax

; 3244 : 	lstrcpyn(UserInsureSuccess.szDescribeString,pUserInsureSuccess->szDescribeString,CountArray(UserInsureSuccess.szDescribeString));

  001f1	68 80 00 00 00	 push	 128			; 00000080H
  001f6	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureSuccess$[ebp]
  001f9	83 c0 38	 add	 eax, 56			; 00000038H
  001fc	50		 push	 eax
  001fd	8d 8d 49 ff ff
	ff		 lea	 ecx, DWORD PTR _UserInsureSuccess$[ebp+17]
  00203	51		 push	 ecx
  00204	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3245 : 
; 3246 : 	//发送数据
; 3247 : 	WORD wDescribe=CountStringBuffer(UserInsureSuccess.szDescribeString);

  0020a	8d 85 49 ff ff
	ff		 lea	 eax, DWORD PTR _UserInsureSuccess$[ebp+17]
  00210	50		 push	 eax
  00211	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00217	83 c0 01	 add	 eax, 1
  0021a	66 89 85 34 ff
	ff ff		 mov	 WORD PTR _wDescribe$[ebp], ax

; 3248 : 	WORD wHeadSize=sizeof(UserInsureSuccess)-sizeof(UserInsureSuccess.szDescribeString);

  00221	b8 11 00 00 00	 mov	 eax, 17			; 00000011H
  00226	66 89 85 30 ff
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 3249 : 	SendData(pIServerUserItem,MDM_GR_INSURE,SUB_GR_USER_INSURE_SUCCESS,&UserInsureSuccess,wHeadSize+wDescribe);

  0022d	0f b7 85 30 ff
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  00234	0f b7 8d 34 ff
	ff ff		 movzx	 ecx, WORD PTR _wDescribe$[ebp]
  0023b	03 c1		 add	 eax, ecx
  0023d	50		 push	 eax
  0023e	8d 95 38 ff ff
	ff		 lea	 edx, DWORD PTR _UserInsureSuccess$[ebp]
  00244	52		 push	 edx
  00245	6a 65		 push	 101			; 00000065H
  00247	6a 05		 push	 5
  00249	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0024c	50		 push	 eax
  0024d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00250	83 c1 04	 add	 ecx, 4
  00253	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00256	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00259	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0025c	ff d2		 call	 edx

; 3250 : 
; 3251 : 	return true;

  0025e	b0 01		 mov	 al, 1
$LN1@OnDBUserIn:

; 3252 : }

  00260	5f		 pop	 edi
  00261	5e		 pop	 esi
  00262	5b		 pop	 ebx
  00263	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00266	33 cd		 xor	 ecx, ebp
  00268	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026d	8b e5		 mov	 esp, ebp
  0026f	5d		 pop	 ebp
  00270	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserInsureSuccess
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_UserInsureInfo$ = -60					; size = 38
_pUserInsureInfo$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBUserInsureInfo, COMDAT
; _this$ = ecx

; 3166 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3167 : 	//判断在线
; 3168 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00016	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00019	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0001e	50		 push	 eax
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002a	ff d0		 call	 eax
  0002c	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3169 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00037	75 09		 jne	 SHORT $LN3@OnDBUserIn
  00039	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003c	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00040	75 07		 jne	 SHORT $LN2@OnDBUserIn
$LN3@OnDBUserIn:
  00042	b0 01		 mov	 al, 1
  00044	e9 43 01 00 00	 jmp	 $LN1@OnDBUserIn
$LN2@OnDBUserIn:

; 3170 : 
; 3171 : 	//获取用户
; 3172 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  00049	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00051	50		 push	 eax
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0005d	ff d0		 call	 eax
  0005f	85 c0		 test	 eax, eax
  00061	75 19		 jne	 SHORT $LN5@OnDBUserIn
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00069	83 c1 06	 add	 ecx, 6
  0006c	51		 push	 ecx
  0006d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00072	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00077	85 c0		 test	 eax, eax
  00079	74 01		 je	 SHORT $LN5@OnDBUserIn
  0007b	cc		 int	 3
$LN5@OnDBUserIn:

; 3173 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0007f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00084	50		 push	 eax
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00090	ff d0		 call	 eax
  00092	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3174 : 
; 3175 : 	//变量定义
; 3176 : 	DBO_GR_UserInsureInfo * pUserInsureInfo=(DBO_GR_UserInsureInfo *)pData;

  00095	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00098	89 45 ec	 mov	 DWORD PTR _pUserInsureInfo$[ebp], eax

; 3177 : 
; 3178 : 	//变量定义
; 3179 : 	CMD_GR_S_UserInsureInfo UserInsureInfo;
; 3180 : 	ZeroMemory(&UserInsureInfo,sizeof(UserInsureInfo));

  0009b	6a 26		 push	 38			; 00000026H
  0009d	6a 00		 push	 0
  0009f	8d 45 c4	 lea	 eax, DWORD PTR _UserInsureInfo$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _memset
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3181 : 
; 3182 : 	//构造数据
; 3183 : 	UserInsureInfo.cbActivityGame=pUserInsureInfo->cbActivityGame;

  000ab	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000ae	8a 08		 mov	 cl, BYTE PTR [eax]
  000b0	88 4d c4	 mov	 BYTE PTR _UserInsureInfo$[ebp], cl

; 3184 : 	UserInsureInfo.cbEnjoinTransfer=pUserInsureInfo->cbEnjoinTransfer;

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000b6	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000b9	88 4d c5	 mov	 BYTE PTR _UserInsureInfo$[ebp+1], cl

; 3185 : 	UserInsureInfo.wRevenueTake=pUserInsureInfo->wRevenueTake;

  000bc	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000bf	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  000c3	66 89 4d c6	 mov	 WORD PTR _UserInsureInfo$[ebp+2], cx

; 3186 : 	UserInsureInfo.wRevenueTransfer=pUserInsureInfo->wRevenueTransfer;

  000c7	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000ca	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  000ce	66 89 4d c8	 mov	 WORD PTR _UserInsureInfo$[ebp+4], cx

; 3187 : 	UserInsureInfo.wRevenueTransferMember=pUserInsureInfo->wRevenueTransferMember;

  000d2	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000d5	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  000d9	66 89 4d ca	 mov	 WORD PTR _UserInsureInfo$[ebp+6], cx

; 3188 : 	UserInsureInfo.wServerID=pUserInsureInfo->wServerID;

  000dd	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000e0	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  000e4	66 89 4d cc	 mov	 WORD PTR _UserInsureInfo$[ebp+8], cx

; 3189 : 	UserInsureInfo.lUserInsure=pUserInsureInfo->lUserInsure;

  000e8	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  000eb	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ee	89 4d d6	 mov	 DWORD PTR _UserInsureInfo$[ebp+18], ecx
  000f1	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000f4	89 55 da	 mov	 DWORD PTR _UserInsureInfo$[ebp+22], edx

; 3190 : 	UserInsureInfo.lUserScore+=pIServerUserItem->GetUserScore();

  000f7	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000fa	8b 10		 mov	 edx, DWORD PTR [eax]
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ff	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00105	ff d0		 call	 eax
  00107	03 45 ce	 add	 eax, DWORD PTR _UserInsureInfo$[ebp+10]
  0010a	13 55 d2	 adc	 edx, DWORD PTR _UserInsureInfo$[ebp+14]
  0010d	89 45 ce	 mov	 DWORD PTR _UserInsureInfo$[ebp+10], eax
  00110	89 55 d2	 mov	 DWORD PTR _UserInsureInfo$[ebp+14], edx

; 3191 : 	UserInsureInfo.lUserScore+=pIServerUserItem->GetTrusteeScore();

  00113	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00116	8b 10		 mov	 edx, DWORD PTR [eax]
  00118	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0011b	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00121	ff d0		 call	 eax
  00123	03 45 ce	 add	 eax, DWORD PTR _UserInsureInfo$[ebp+10]
  00126	13 55 d2	 adc	 edx, DWORD PTR _UserInsureInfo$[ebp+14]
  00129	89 45 ce	 mov	 DWORD PTR _UserInsureInfo$[ebp+10], eax
  0012c	89 55 d2	 mov	 DWORD PTR _UserInsureInfo$[ebp+14], edx

; 3192 : 	UserInsureInfo.lUserScore+=pIServerUserItem->GetFrozenedScore();

  0012f	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00132	8b 10		 mov	 edx, DWORD PTR [eax]
  00134	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00137	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  0013d	ff d0		 call	 eax
  0013f	03 45 ce	 add	 eax, DWORD PTR _UserInsureInfo$[ebp+10]
  00142	13 55 d2	 adc	 edx, DWORD PTR _UserInsureInfo$[ebp+14]
  00145	89 45 ce	 mov	 DWORD PTR _UserInsureInfo$[ebp+10], eax
  00148	89 55 d2	 mov	 DWORD PTR _UserInsureInfo$[ebp+14], edx

; 3193 : 	UserInsureInfo.lTransferPrerequisite=pUserInsureInfo->lTransferPrerequisite;

  0014b	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  0014e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00151	89 4d de	 mov	 DWORD PTR _UserInsureInfo$[ebp+26], ecx
  00154	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00157	89 55 e2	 mov	 DWORD PTR _UserInsureInfo$[ebp+30], edx

; 3194 : 	UserInsureInfo.dwUserRight=pUserInsureInfo->dwUserRight;

  0015a	8b 45 ec	 mov	 eax, DWORD PTR _pUserInsureInfo$[ebp]
  0015d	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00160	89 4d e6	 mov	 DWORD PTR _UserInsureInfo$[ebp+34], ecx

; 3195 : 
; 3196 : 	//发送数据
; 3197 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_INSURE,SUB_GR_USER_INSURE_INFO,&UserInsureInfo,sizeof(UserInsureInfo));

  00163	6a 26		 push	 38			; 00000026H
  00165	8d 45 c4	 lea	 eax, DWORD PTR _UserInsureInfo$[ebp]
  00168	50		 push	 eax
  00169	6a 64		 push	 100			; 00000064H
  0016b	6a 05		 push	 5
  0016d	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00170	51		 push	 ecx
  00171	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00174	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  0017a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	8b 10		 mov	 edx, DWORD PTR [eax]
  0017f	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00185	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00188	ff d0		 call	 eax

; 3198 : 
; 3199 : 	return true;

  0018a	b0 01		 mov	 al, 1
$LN1@OnDBUserIn:

; 3200 : }

  0018c	5f		 pop	 edi
  0018d	5e		 pop	 esi
  0018e	5b		 pop	 ebx
  0018f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00192	33 cd		 xor	 ecx, ebp
  00194	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00199	8b e5		 mov	 esp, ebp
  0019b	5d		 pop	 ebp
  0019c	c2 0c 00	 ret	 12			; 0000000cH
?OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBUserInsureInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendDataSize$ = -156					; size = 2
_MemberResult$ = -152					; size = 129
_pMemberResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCMemberDayGiftResult, COMDAT
; _this$ = ecx

; 3140 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3141 : 	//判断在线
; 3142 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3143 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@OnDBPCMemb
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00043	75 07		 jne	 SHORT $LN2@OnDBPCMemb
$LN3@OnDBPCMemb:
  00045	b0 01		 mov	 al, 1
  00047	e9 d6 00 00 00	 jmp	 $LN1@OnDBPCMemb
$LN2@OnDBPCMemb:

; 3144 : 
; 3145 : 	//获取用户
; 3146 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	85 c0		 test	 eax, eax
  00064	75 19		 jne	 SHORT $LN5@OnDBPCMemb
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN5@OnDBPCMemb
  0007e	cc		 int	 3
$LN5@OnDBPCMemb:

; 3147 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00082	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	ff d0		 call	 eax
  00095	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3148 : 
; 3149 : 	//变量定义
; 3150 : 	DBO_GR_MemberDayGiftResult * pMemberResult=(DBO_GR_MemberDayGiftResult *)pData;

  00098	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009b	89 45 ec	 mov	 DWORD PTR _pMemberResult$[ebp], eax

; 3151 : 
; 3152 : 	//构造结构
; 3153 : 	CMD_GR_MemberDayGiftResult MemberResult;
; 3154 : 	MemberResult.bSuccessed=pMemberResult->bSuccessed;

  0009e	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000a1	8a 08		 mov	 cl, BYTE PTR [eax]
  000a3	88 8d 68 ff ff
	ff		 mov	 BYTE PTR _MemberResult$[ebp], cl

; 3155 : 	lstrcpyn(MemberResult.szNotifyContent,pMemberResult->szNotifyContent,CountArray(MemberResult.szNotifyContent));

  000a9	68 80 00 00 00	 push	 128			; 00000080H
  000ae	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000b1	83 c0 01	 add	 eax, 1
  000b4	50		 push	 eax
  000b5	8d 8d 69 ff ff
	ff		 lea	 ecx, DWORD PTR _MemberResult$[ebp+1]
  000bb	51		 push	 ecx
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3156 : 
; 3157 : 	//发送数据
; 3158 : 	WORD wSendDataSize = sizeof(MemberResult)-sizeof(MemberResult.szNotifyContent);

  000c2	b8 01 00 00 00	 mov	 eax, 1
  000c7	66 89 85 64 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 3159 : 	wSendDataSize += CountStringBuffer(MemberResult.szNotifyContent);

  000ce	8d 85 69 ff ff
	ff		 lea	 eax, DWORD PTR _MemberResult$[ebp+1]
  000d4	50		 push	 eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000db	0f b7 8d 64 ff
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  000e2	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  000e6	66 89 95 64 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 3160 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_MEMBER,SUB_GR_MEMBER_DAY_GIFT_RESULT,&MemberResult,wSendDataSize);

  000ed	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  000f4	50		 push	 eax
  000f5	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _MemberResult$[ebp]
  000fb	51		 push	 ecx
  000fc	68 61 01 00 00	 push	 353			; 00000161H
  00101	6a 0d		 push	 13			; 0000000dH
  00103	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00106	52		 push	 edx
  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00110	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00113	8b 01		 mov	 eax, DWORD PTR [ecx]
  00115	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0011b	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0011e	ff d2		 call	 edx

; 3161 : 	return true;

  00120	b0 01		 mov	 al, 1
$LN1@OnDBPCMemb:

; 3162 : }

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00128	33 cd		 xor	 ecx, ebp
  0012a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCMemberDayGiftResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendDataSize$ = -164					; size = 2
_MemberResult$ = -160					; size = 137
_pMemberResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCMemberDayPresentResult, COMDAT
; _this$ = ecx

; 3105 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3106 : 	//判断在线
; 3107 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3108 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@OnDBPCMemb
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00043	75 07		 jne	 SHORT $LN2@OnDBPCMemb
$LN3@OnDBPCMemb:
  00045	b0 01		 mov	 al, 1
  00047	e9 2d 01 00 00	 jmp	 $LN1@OnDBPCMemb
$LN2@OnDBPCMemb:

; 3109 : 
; 3110 : 	//获取用户
; 3111 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	85 c0		 test	 eax, eax
  00064	75 19		 jne	 SHORT $LN6@OnDBPCMemb
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN6@OnDBPCMemb
  0007e	cc		 int	 3
$LN6@OnDBPCMemb:

; 3112 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00082	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	ff d0		 call	 eax
  00095	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3113 : 
; 3114 : 	//变量定义
; 3115 : 	DBO_GR_MemberDayPresentResult * pMemberResult=(DBO_GR_MemberDayPresentResult *)pData;

  00098	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009b	89 45 ec	 mov	 DWORD PTR _pMemberResult$[ebp], eax

; 3116 : 
; 3117 : 	//更新游戏币
; 3118 : 	if( pMemberResult->bSuccessed==true)

  0009e	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000a1	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000a4	83 f9 01	 cmp	 ecx, 1
  000a7	75 37		 jne	 SHORT $LN4@OnDBPCMemb

; 3119 : 	{
; 3120 : 		pIServerUserItem->ModifyUserInsure(pMemberResult->lGameScore-pIServerUserItem->GetUserScore(),0,0);

  000a9	6a 00		 push	 0
  000ab	6a 00		 push	 0
  000ad	6a 00		 push	 0
  000af	6a 00		 push	 0
  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b4	8b 10		 mov	 edx, DWORD PTR [eax]
  000b6	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000b9	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  000bf	ff d0		 call	 eax
  000c1	8b 4d ec	 mov	 ecx, DWORD PTR _pMemberResult$[ebp]
  000c4	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  000c7	2b f0		 sub	 esi, eax
  000c9	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000cc	1b c2		 sbb	 eax, edx
  000ce	50		 push	 eax
  000cf	56		 push	 esi
  000d0	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d8	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  000de	ff d0		 call	 eax
$LN4@OnDBPCMemb:

; 3121 : 	}
; 3122 : 
; 3123 : 	//构造结构
; 3124 : 	CMD_GR_MemberDayPresentResult MemberResult;
; 3125 : 	MemberResult.bSuccessed=pMemberResult->bSuccessed;

  000e0	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000e3	8a 08		 mov	 cl, BYTE PTR [eax]
  000e5	88 8d 60 ff ff
	ff		 mov	 BYTE PTR _MemberResult$[ebp], cl

; 3126 : 	MemberResult.lGameScore=pMemberResult->lGameScore;

  000eb	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000ee	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000f1	89 8d 61 ff ff
	ff		 mov	 DWORD PTR _MemberResult$[ebp+1], ecx
  000f7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000fa	89 95 65 ff ff
	ff		 mov	 DWORD PTR _MemberResult$[ebp+5], edx

; 3127 : 	lstrcpyn(MemberResult.szNotifyContent,pMemberResult->szNotifyContent,CountArray(MemberResult.szNotifyContent));

  00100	68 80 00 00 00	 push	 128			; 00000080H
  00105	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  00108	83 c0 10	 add	 eax, 16			; 00000010H
  0010b	50		 push	 eax
  0010c	8d 8d 69 ff ff
	ff		 lea	 ecx, DWORD PTR _MemberResult$[ebp+9]
  00112	51		 push	 ecx
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 3128 : 
; 3129 : 	//发送数据
; 3130 : 	WORD wSendDataSize = sizeof(MemberResult)-sizeof(MemberResult.szNotifyContent);

  00119	b8 09 00 00 00	 mov	 eax, 9
  0011e	66 89 85 5c ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 3131 : 	wSendDataSize += CountStringBuffer(MemberResult.szNotifyContent);

  00125	8d 85 69 ff ff
	ff		 lea	 eax, DWORD PTR _MemberResult$[ebp+9]
  0012b	50		 push	 eax
  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00132	0f b7 8d 5c ff
	ff ff		 movzx	 ecx, WORD PTR _wSendDataSize$[ebp]
  00139	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  0013d	66 89 95 5c ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], dx

; 3132 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_MEMBER,SUB_GR_MEMBER_DAY_PRESENT_RESULT,&MemberResult,wSendDataSize);

  00144	0f b7 85 5c ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  0014b	50		 push	 eax
  0014c	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _MemberResult$[ebp]
  00152	51		 push	 ecx
  00153	68 60 01 00 00	 push	 352			; 00000160H
  00158	6a 0d		 push	 13			; 0000000dH
  0015a	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0015d	52		 push	 edx
  0015e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00161	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00167	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0016a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016c	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  00172	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00175	ff d2		 call	 edx

; 3133 : 
; 3134 : 	return true;

  00177	b0 01		 mov	 al, 1
$LN1@OnDBPCMemb:

; 3135 : 
; 3136 : }

  00179	5f		 pop	 edi
  0017a	5e		 pop	 esi
  0017b	5b		 pop	 ebx
  0017c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017f	33 cd		 xor	 ecx, ebp
  00181	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCMemberDayPresentResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wSendDataSize$ = -232					; size = 2
_MemberResult$ = -228					; size = 206
_pMemberResult$ = -20					; size = 4
_pIServerUserItem$ = -16				; size = 4
_pBindParameter$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBPCMemberDayQueryInfoResult, COMDAT
; _this$ = ecx

; 3076 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3077 : 	//判断在线
; 3078 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 3079 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem==NULL)) return true;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@OnDBPCMemb
  0003c	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00043	75 07		 jne	 SHORT $LN2@OnDBPCMemb
$LN3@OnDBPCMemb:
  00045	b0 01		 mov	 al, 1
  00047	e9 d6 00 00 00	 jmp	 $LN1@OnDBPCMemb
$LN2@OnDBPCMemb:

; 3080 : 
; 3081 : 	//获取用户
; 3082 : 	ASSERT(GetBindUserItem(LOWORD(dwContextID))!=NULL);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0004f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00060	ff d0		 call	 eax
  00062	85 c0		 test	 eax, eax
  00064	75 19		 jne	 SHORT $LN5@OnDBPCMemb
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN5@OnDBPCMemb
  0007e	cc		 int	 3
$LN5@OnDBPCMemb:

; 3083 : 	IServerUserItem * pIServerUserItem=GetBindUserItem(LOWORD(dwContextID));

  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00082	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00093	ff d0		 call	 eax
  00095	89 45 f0	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 3084 : 
; 3085 : 	//变量定义
; 3086 : 	DBO_GR_MemberQueryInfoResult * pMemberResult=(DBO_GR_MemberQueryInfoResult *)pData;

  00098	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0009b	89 45 ec	 mov	 DWORD PTR _pMemberResult$[ebp], eax

; 3087 : 
; 3088 : 	//构造结构
; 3089 : 	CMD_GR_MemberQueryInfoResult MemberResult;
; 3090 : 	MemberResult.bPresent=pMemberResult->bPresent;

  0009e	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000a1	8a 08		 mov	 cl, BYTE PTR [eax]
  000a3	88 8d 1c ff ff
	ff		 mov	 BYTE PTR _MemberResult$[ebp], cl

; 3091 : 	MemberResult.bGift=pMemberResult->bGift;

  000a9	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000ac	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  000af	88 8d 1d ff ff
	ff		 mov	 BYTE PTR _MemberResult$[ebp+1], cl

; 3092 : 	//拷贝数据	
; 3093 : 	MemberResult.GiftSubCount = pMemberResult->GiftSubCount;

  000b5	8b 45 ec	 mov	 eax, DWORD PTR _pMemberResult$[ebp]
  000b8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bb	89 8d 1e ff ff
	ff		 mov	 DWORD PTR _MemberResult$[ebp+2], ecx

; 3094 : 	CopyMemory(MemberResult.GiftSub,pMemberResult->GiftSub,sizeof(tagGiftPropertyInfo)*MemberResult.GiftSubCount);

  000c1	8b 85 1e ff ff
	ff		 mov	 eax, DWORD PTR _MemberResult$[ebp+2]
  000c7	c1 e0 02	 shl	 eax, 2
  000ca	50		 push	 eax
  000cb	8b 4d ec	 mov	 ecx, DWORD PTR _pMemberResult$[ebp]
  000ce	83 c1 08	 add	 ecx, 8
  000d1	51		 push	 ecx
  000d2	8d 95 22 ff ff
	ff		 lea	 edx, DWORD PTR _MemberResult$[ebp+6]
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 _memcpy
  000de	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3095 : 
; 3096 : 	//发送数据
; 3097 : 	WORD wSendDataSize=sizeof(MemberResult);

  000e1	b8 ce 00 00 00	 mov	 eax, 206		; 000000ceH
  000e6	66 89 85 18 ff
	ff ff		 mov	 WORD PTR _wSendDataSize$[ebp], ax

; 3098 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_MEMBER,SUB_GR_MEMBER_QUERY_INFO_RESULT,&MemberResult,wSendDataSize);

  000ed	0f b7 85 18 ff
	ff ff		 movzx	 eax, WORD PTR _wSendDataSize$[ebp]
  000f4	50		 push	 eax
  000f5	8d 8d 1c ff ff
	ff		 lea	 ecx, DWORD PTR _MemberResult$[ebp]
  000fb	51		 push	 ecx
  000fc	68 5f 01 00 00	 push	 351			; 0000015fH
  00101	6a 0d		 push	 13			; 0000000dH
  00103	8b 55 08	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00106	52		 push	 edx
  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00110	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00113	8b 01		 mov	 eax, DWORD PTR [ecx]
  00115	8b 8a b4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147380]
  0011b	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0011e	ff d2		 call	 edx

; 3099 : 
; 3100 : 	return true;

  00120	b0 01		 mov	 al, 1
$LN1@OnDBPCMemb:

; 3101 : }

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00128	33 cd		 xor	 ecx, ebp
  0012a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 0c 00	 ret	 12			; 0000000cH
?OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBPCMemberDayQueryInfoResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameMemberParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_pMemberParameter$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameMemberParameter@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameMemberParameter, COMDAT
; _this$ = ecx

; 3063 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3064 : 	//变量定义
; 3065 : 	DBO_GR_MemberParameter * pMemberParameter=(DBO_GR_MemberParameter *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pMemberParameter$[ebp], eax

; 3066 : 
; 3067 : 	//拷贝数据	
; 3068 : 	m_wMemberCount = pMemberParameter->wMemberCount;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _pMemberParameter$[ebp]
  00018	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0001b	66 89 90 48 03
	00 00		 mov	 WORD PTR [eax+840], dx

; 3069 : 	CopyMemory(m_MemberParameter,pMemberParameter->MemberParameter,sizeof(tagMemberParameterNew)*m_wMemberCount);

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	0f b7 88 48 03
	00 00		 movzx	 ecx, WORD PTR [eax+840]
  0002c	6b d1 29	 imul	 edx, ecx, 41
  0002f	52		 push	 edx
  00030	8b 45 f8	 mov	 eax, DWORD PTR _pMemberParameter$[ebp]
  00033	83 c0 02	 add	 eax, 2
  00036	50		 push	 eax
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 4a 03 00
	00		 add	 ecx, 842		; 0000034aH
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _memcpy
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3070 : 
; 3071 : 	return true;

  00049	b0 01		 mov	 al, 1

; 3072 : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameMemberParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameMemberParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameSendTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
tv68 = -256						; size = 4
_SendTrumpet$1 = -188					; size = 170
_cbIndex$2 = -13					; size = 1
_pSendTrumpetResult$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameSendTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameSendTrumpet, COMDAT
; _this$ = ecx

; 3023 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3024 : 	DBO_GR_Send_Trumpet* pSendTrumpetResult = (DBO_GR_Send_Trumpet*)pData;

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pSendTrumpetResult$[ebp], eax

; 3025 : 	if(pSendTrumpetResult->bSuccful)

  0001f	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpetResult$[ebp]
  00022	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00026	0f 84 17 01 00
	00		 je	 $LN2@OnDBGameSe

; 3026 : 	{
; 3027 : 		//道具索引
; 3028 : 		BYTE cbIndex=(pSendTrumpetResult->dwPropID==PROPERTY_ID_TRUMPET)?2:3;

  0002c	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpetResult$[ebp]
  0002f	81 78 08 33 01
	00 00		 cmp	 DWORD PTR [eax+8], 307	; 00000133H
  00036	75 0c		 jne	 SHORT $LN7@OnDBGameSe
  00038	c7 85 00 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv68[ebp], 2
  00042	eb 0a		 jmp	 SHORT $LN8@OnDBGameSe
$LN7@OnDBGameSe:
  00044	c7 85 00 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv68[ebp], 3
$LN8@OnDBGameSe:
  0004e	8a 8d 00 ff ff
	ff		 mov	 cl, BYTE PTR tv68[ebp]
  00054	88 4d f3	 mov	 BYTE PTR _cbIndex$2[ebp], cl

; 3029 : 
; 3030 : 		//构造结构
; 3031 : 		CMD_GR_S_SendTrumpet  SendTrumpet;
; 3032 : 		SendTrumpet.dwSendUserID=pSendTrumpetResult->dwUserID;

  00057	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpetResult$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 8d 46 ff ff
	ff		 mov	 DWORD PTR _SendTrumpet$1[ebp+2], ecx

; 3033 : 		SendTrumpet.wPropertyIndex=(WORD)pSendTrumpetResult->dwPropID;

  00062	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpetResult$[ebp]
  00065	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00069	66 89 8d 44 ff
	ff ff		 mov	 WORD PTR _SendTrumpet$1[ebp], cx

; 3034 : 		SendTrumpet.TrumpetColor=pSendTrumpetResult->TrumpetColor;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpetResult$[ebp]
  00073	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00076	89 8d 4a ff ff
	ff		 mov	 DWORD PTR _SendTrumpet$1[ebp+6], ecx

; 3035 : 		ZeroMemory(SendTrumpet.szTrumpetContent,sizeof(SendTrumpet.szTrumpetContent));

  0007c	68 80 00 00 00	 push	 128			; 00000080H
  00081	6a 00		 push	 0
  00083	8d 85 6e ff ff
	ff		 lea	 eax, DWORD PTR _SendTrumpet$1[ebp+42]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _memset
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3036 : 		CopyMemory(SendTrumpet.szSendNickName,pSendTrumpetResult->szSendNickName,sizeof(SendTrumpet.szSendNickName));

  00092	6a 20		 push	 32			; 00000020H
  00094	8b 45 f4	 mov	 eax, DWORD PTR _pSendTrumpetResult$[ebp]
  00097	83 c0 18	 add	 eax, 24			; 00000018H
  0009a	50		 push	 eax
  0009b	8d 8d 4e ff ff
	ff		 lea	 ecx, DWORD PTR _SendTrumpet$1[ebp+10]
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 _memcpy
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3037 : 
; 3038 : 		//字符过滤
; 3039 : 		SensitiveWordFilter(pSendTrumpetResult->szTrumpetContent,SendTrumpet.szTrumpetContent,CountArray(SendTrumpet.szTrumpetContent));

  000aa	68 80 00 00 00	 push	 128			; 00000080H
  000af	8d 85 6e ff ff
	ff		 lea	 eax, DWORD PTR _SendTrumpet$1[ebp+42]
  000b5	50		 push	 eax
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _pSendTrumpetResult$[ebp]
  000b9	83 c1 28	 add	 ecx, 40			; 00000028H
  000bc	51		 push	 ecx
  000bd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	83 c1 04	 add	 ecx, 4
  000c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c9	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  000cc	ff d2		 call	 edx

; 3040 : 
; 3041 : 		//房间转发
; 3042 : 		if(cbIndex==3)

  000ce	0f b6 45 f3	 movzx	 eax, BYTE PTR _cbIndex$2[ebp]
  000d2	83 f8 03	 cmp	 eax, 3
  000d5	75 35		 jne	 SHORT $LN3@OnDBGameSe

; 3043 : 		{
; 3044 : 			//广播房间
; 3045 : 			if(m_pITCPSocketService)

  000d7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	83 b8 b0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147376], 0
  000e1	74 29		 je	 SHORT $LN3@OnDBGameSe

; 3046 : 			{
; 3047 : 				m_pITCPSocketService->SendData(MDM_CS_MANAGER_SERVICE,SUB_CS_C_PROPERTY_TRUMPET,&SendTrumpet,sizeof(SendTrumpet));

  000e3	68 aa 00 00 00	 push	 170			; 000000aaH
  000e8	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _SendTrumpet$1[ebp]
  000ee	50		 push	 eax
  000ef	6a 02		 push	 2
  000f1	6a 05		 push	 5
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  000fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	8b 12		 mov	 edx, DWORD PTR [edx]
  00101	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00107	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0010a	ff d0		 call	 eax
$LN3@OnDBGameSe:

; 3048 : 			}
; 3049 : 		}
; 3050 : 
; 3051 : 		//游戏转发
; 3052 : 		if(cbIndex==2)

  0010c	0f b6 45 f3	 movzx	 eax, BYTE PTR _cbIndex$2[ebp]
  00110	83 f8 02	 cmp	 eax, 2
  00113	75 2e		 jne	 SHORT $LN2@OnDBGameSe

; 3053 : 		{
; 3054 : 			//发送数据
; 3055 : 			m_pITCPNetworkEngine->SendDataBatch(MDM_GR_PROPERTY,SUB_GR_PROPERTY_TRUMPET,&SendTrumpet,sizeof(SendTrumpet),BG_COMPUTER);

  00115	6a 02		 push	 2
  00117	68 aa 00 00 00	 push	 170			; 000000aaH
  0011c	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _SendTrumpet$1[ebp]
  00122	50		 push	 eax
  00123	68 cd 00 00 00	 push	 205			; 000000cdH
  00128	6a 08		 push	 8
  0012a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  00133	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00136	8b 12		 mov	 edx, DWORD PTR [edx]
  00138	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  0013e	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00141	ff d0		 call	 eax
$LN2@OnDBGameSe:

; 3056 : 		}
; 3057 : 	}
; 3058 : 	return true;

  00143	b0 01		 mov	 al, 1

; 3059 : }

  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
  00148	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014b	33 cd		 xor	 ecx, ebp
  0014d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameSendTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameSendTrumpet
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameLoadTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_UserTrumpet$ = -16					; size = 8
_pUserGameTrumpet$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameLoadTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameLoadTrumpet, COMDAT
; _this$ = ecx

; 3009 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3010 : 	//变量定义
; 3011 : 	DBO_GR_UserGameTrumpet * pUserGameTrumpet=(DBO_GR_UserGameTrumpet *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pUserGameTrumpet$[ebp], eax

; 3012 : 	
; 3013 : 	CMD_GR_S_UserTrumpet UserTrumpet;
; 3014 : 	UserTrumpet.dwTrumpetCount = pUserGameTrumpet->dwTrumpetCount;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _pUserGameTrumpet$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 4d f0	 mov	 DWORD PTR _UserTrumpet$[ebp], ecx

; 3015 : 	UserTrumpet.dwTyphonCount = pUserGameTrumpet->dwTyphonCount;

  0001a	8b 45 f8	 mov	 eax, DWORD PTR _pUserGameTrumpet$[ebp]
  0001d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00020	89 4d f4	 mov	 DWORD PTR _UserTrumpet$[ebp+4], ecx

; 3016 : 
; 3017 : 	//发送数据
; 3018 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_USER_TRUMPET,&UserTrumpet,sizeof(UserTrumpet));

  00023	6a 08		 push	 8
  00025	8d 45 f0	 lea	 eax, DWORD PTR _UserTrumpet$[ebp]
  00028	50		 push	 eax
  00029	68 cf 00 00 00	 push	 207			; 000000cfH
  0002e	6a 08		 push	 8
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 82 b4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147380]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b 89 b4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147380]
  00048	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0004b	ff d0		 call	 eax

; 3019 : 	return true;

  0004d	b0 01		 mov	 al, 1

; 3020 : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameLoadTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameLoadTrumpet
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_dwDataSize$ = -392					; size = 2
_dwHeadSize$ = -388					; size = 2
_PropertyBuffResult$ = -384				; size = 365
_wHeadSize$ = -16					; size = 2
_pGamePropertyBuff$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGamePropertyBuff, COMDAT
; _this$ = ecx

; 2981 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 01 00
	00		 sub	 esp, 456		; 000001c8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2982 : 	//变量定义
; 2983 : 	DBO_GR_UserGamePropertyBuff * pGamePropertyBuff=(DBO_GR_UserGamePropertyBuff *)pData;

  00019	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0001c	89 45 f4	 mov	 DWORD PTR _pGamePropertyBuff$[ebp], eax

; 2984 : 	WORD wHeadSize=sizeof(DBO_GR_UserGamePropertyBuff)-sizeof(pGamePropertyBuff->PropertyBuff);

  0001f	b8 08 00 00 00	 mov	 eax, 8
  00024	66 89 45 f0	 mov	 WORD PTR _wHeadSize$[ebp], ax

; 2985 : 
; 2986 : 	//效验参数
; 2987 : 	ASSERT((wDataSize>=wHeadSize)&&(wDataSize==(wHeadSize+pGamePropertyBuff->cbBuffCount*sizeof(pGamePropertyBuff->PropertyBuff[0]))));

  00028	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002c	0f b7 4d f0	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	7c 18		 jl	 SHORT $LN5@OnDBGamePr
  00034	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  00038	0f b7 45 f0	 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  0003c	8b 4d f4	 mov	 ecx, DWORD PTR _pGamePropertyBuff$[ebp]
  0003f	0f b6 49 04	 movzx	 ecx, BYTE PTR [ecx+4]
  00043	6b c9 24	 imul	 ecx, ecx, 36
  00046	03 c1		 add	 eax, ecx
  00048	3b d0		 cmp	 edx, eax
  0004a	74 19		 je	 SHORT $LN6@OnDBGamePr
$LN5@OnDBGamePr:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00052	83 c2 06	 add	 edx, 6
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0005b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00060	85 c0		 test	 eax, eax
  00062	74 01		 je	 SHORT $LN6@OnDBGamePr
  00064	cc		 int	 3
$LN6@OnDBGamePr:

; 2988 : 	if ((wDataSize<wHeadSize)||(wDataSize!=(wHeadSize+pGamePropertyBuff->cbBuffCount*sizeof(pGamePropertyBuff->PropertyBuff[0])))) return false;

  00065	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00069	0f b7 4d f0	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  0006d	3b c1		 cmp	 eax, ecx
  0006f	7c 18		 jl	 SHORT $LN3@OnDBGamePr
  00071	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00075	0f b7 4d f0	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00079	8b 55 f4	 mov	 edx, DWORD PTR _pGamePropertyBuff$[ebp]
  0007c	0f b6 52 04	 movzx	 edx, BYTE PTR [edx+4]
  00080	6b d2 24	 imul	 edx, edx, 36
  00083	03 ca		 add	 ecx, edx
  00085	3b c1		 cmp	 eax, ecx
  00087	74 07		 je	 SHORT $LN2@OnDBGamePr
$LN3@OnDBGamePr:
  00089	32 c0		 xor	 al, al
  0008b	e9 d0 00 00 00	 jmp	 $LN1@OnDBGamePr
$LN2@OnDBGamePr:

; 2989 : 	
; 2990 : 	//设置管理
; 2991 : 	m_GamePropertyManager.ClearUserBuff(pGamePropertyBuff->dwUserID);

  00090	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	51		 push	 ecx
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ClearUserBuff@CGamePropertyManager@@QAE_NK@Z

; 2992 : 	m_GamePropertyManager.SetGamePropertyBuff(pGamePropertyBuff->dwUserID, pGamePropertyBuff->PropertyBuff,pGamePropertyBuff->cbBuffCount);

  000a5	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  000a8	66 0f b6 48 04	 movzx	 cx, BYTE PTR [eax+4]
  000ad	0f b7 d1	 movzx	 edx, cx
  000b0	52		 push	 edx
  000b1	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  000b4	83 c0 05	 add	 eax, 5
  000b7	50		 push	 eax
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR _pGamePropertyBuff$[ebp]
  000bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bd	52		 push	 edx
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetGamePropertyBuff@CGamePropertyManager@@QAE_NKQBUtagPropertyBuff@@G@Z

; 2993 : 
; 2994 : 	//拷贝数据
; 2995 : 	CMD_GR_S_PropertyBuff PropertyBuffResult;
; 2996 : 	PropertyBuffResult.dwUserID = pGamePropertyBuff->dwUserID;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  000d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d2	89 8d 80 fe ff
	ff		 mov	 DWORD PTR _PropertyBuffResult$[ebp], ecx

; 2997 : 	PropertyBuffResult.cbBuffCount = pGamePropertyBuff->cbBuffCount;

  000d8	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  000db	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000de	88 8d 84 fe ff
	ff		 mov	 BYTE PTR _PropertyBuffResult$[ebp+4], cl

; 2998 : 	memcpy(PropertyBuffResult.PropertyBuff, pGamePropertyBuff->PropertyBuff, sizeof(tagPropertyBuff)*pGamePropertyBuff->cbBuffCount);

  000e4	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  000e7	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  000eb	6b d1 24	 imul	 edx, ecx, 36
  000ee	52		 push	 edx
  000ef	8b 45 f4	 mov	 eax, DWORD PTR _pGamePropertyBuff$[ebp]
  000f2	83 c0 05	 add	 eax, 5
  000f5	50		 push	 eax
  000f6	8d 8d 85 fe ff
	ff		 lea	 ecx, DWORD PTR _PropertyBuffResult$[ebp+5]
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 _memcpy
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2999 : 
; 3000 : 	WORD dwHeadSize=sizeof(PropertyBuffResult)-sizeof(PropertyBuffResult.PropertyBuff);

  00105	b8 05 00 00 00	 mov	 eax, 5
  0010a	66 89 85 7c fe
	ff ff		 mov	 WORD PTR _dwHeadSize$[ebp], ax

; 3001 : 	WORD dwDataSize=PropertyBuffResult.cbBuffCount*sizeof(PropertyBuffResult.PropertyBuff[0]);

  00111	0f b6 85 84 fe
	ff ff		 movzx	 eax, BYTE PTR _PropertyBuffResult$[ebp+4]
  00118	6b c8 24	 imul	 ecx, eax, 36
  0011b	66 89 8d 78 fe
	ff ff		 mov	 WORD PTR _dwDataSize$[ebp], cx

; 3002 : 
; 3003 : 	//发送数据
; 3004 : 	m_pITCPNetworkEngine->SendData(dwContextID,MDM_GR_PROPERTY,SUB_GR_USER_PROP_BUFF,&PropertyBuffResult,dwHeadSize+dwDataSize);

  00122	0f b7 85 7c fe
	ff ff		 movzx	 eax, WORD PTR _dwHeadSize$[ebp]
  00129	0f b7 8d 78 fe
	ff ff		 movzx	 ecx, WORD PTR _dwDataSize$[ebp]
  00130	03 c1		 add	 eax, ecx
  00132	50		 push	 eax
  00133	8d 95 80 fe ff
	ff		 lea	 edx, DWORD PTR _PropertyBuffResult$[ebp]
  00139	52		 push	 edx
  0013a	68 ce 00 00 00	 push	 206			; 000000ceH
  0013f	6a 08		 push	 8
  00141	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00144	50		 push	 eax
  00145	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  0014e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00151	8b 12		 mov	 edx, DWORD PTR [edx]
  00153	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00159	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0015c	ff d0		 call	 eax

; 3005 : 	return true;

  0015e	b0 01		 mov	 al, 1
$LN1@OnDBGamePr:

; 3006 : }

  00160	5f		 pop	 edi
  00161	5e		 pop	 esi
  00162	5b		 pop	 ebx
  00163	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00166	33 cd		 xor	 ecx, ebp
  00168	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016d	8b e5		 mov	 esp, ebp
  0016f	5d		 pop	 ebp
  00170	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGamePropertyBuff
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wHeadSize$ = -12					; size = 2
_pGameAndroidParameter$ = -8				; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameAndroidParameter, COMDAT
; _this$ = ecx

; 2961 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2962 : 	//变量定义
; 2963 : 	DBO_GR_GameAndroidParameter * pGameAndroidParameter=(DBO_GR_GameAndroidParameter *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pGameAndroidParameter$[ebp], eax

; 2964 : 	WORD wHeadSize=sizeof(DBO_GR_GameAndroidParameter)-sizeof(pGameAndroidParameter->AndroidParameter);

  00012	b8 08 00 00 00	 mov	 eax, 8
  00017	66 89 45 f4	 mov	 WORD PTR _wHeadSize$[ebp], ax

; 2965 : 
; 2966 : 	//效验参数
; 2967 : 	ASSERT((wDataSize>=wHeadSize)&&(wDataSize==(wHeadSize+pGameAndroidParameter->wParameterCount*sizeof(pGameAndroidParameter->AndroidParameter[0]))));

  0001b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001f	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	7c 18		 jl	 SHORT $LN6@OnDBGameAn
  00027	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0002b	0f b7 45 f4	 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _pGameAndroidParameter$[ebp]
  00032	0f b7 49 04	 movzx	 ecx, WORD PTR [ecx+4]
  00036	6b c9 54	 imul	 ecx, ecx, 84
  00039	03 c1		 add	 eax, ecx
  0003b	3b d0		 cmp	 edx, eax
  0003d	74 19		 je	 SHORT $LN7@OnDBGameAn
$LN6@OnDBGameAn:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c2 06	 add	 edx, 6
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN7@OnDBGameAn
  00057	cc		 int	 3
$LN7@OnDBGameAn:

; 2968 : 	if ((wDataSize<wHeadSize)||(wDataSize!=(wHeadSize+pGameAndroidParameter->wParameterCount*sizeof(pGameAndroidParameter->AndroidParameter[0])))) return false;

  00058	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005c	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00060	3b c1		 cmp	 eax, ecx
  00062	7c 18		 jl	 SHORT $LN3@OnDBGameAn
  00064	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00068	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  0006c	8b 55 f8	 mov	 edx, DWORD PTR _pGameAndroidParameter$[ebp]
  0006f	0f b7 52 04	 movzx	 edx, WORD PTR [edx+4]
  00073	6b d2 54	 imul	 edx, edx, 84
  00076	03 ca		 add	 ecx, edx
  00078	3b c1		 cmp	 eax, ecx
  0007a	74 04		 je	 SHORT $LN2@OnDBGameAn
$LN3@OnDBGameAn:
  0007c	32 c0		 xor	 al, al
  0007e	eb 30		 jmp	 SHORT $LN1@OnDBGameAn
$LN2@OnDBGameAn:

; 2969 : 
; 2970 : 	//设置机器
; 2971 : 	if (pGameAndroidParameter->lResultCode==DB_SUCCESS)

  00080	8b 45 f8	 mov	 eax, DWORD PTR _pGameAndroidParameter$[ebp]
  00083	83 38 00	 cmp	 DWORD PTR [eax], 0
  00086	75 26		 jne	 SHORT $LN4@OnDBGameAn

; 2972 : 	{
; 2973 : 		m_AndroidUserManager.AddAndroidParameter(pGameAndroidParameter->AndroidParameter,pGameAndroidParameter->wParameterCount);

  00088	8b 45 f8	 mov	 eax, DWORD PTR _pGameAndroidParameter$[ebp]
  0008b	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0008f	51		 push	 ecx
  00090	8b 55 f8	 mov	 edx, DWORD PTR _pGameAndroidParameter$[ebp]
  00093	83 c2 06	 add	 edx, 6
  00096	52		 push	 edx
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 90 28 de 00
	00		 mov	 edx, DWORD PTR [eax+56872]
  000a9	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000ac	ff d0		 call	 eax
$LN4@OnDBGameAn:

; 2974 : 	}
; 2975 : 
; 2976 : 	return true;

  000ae	b0 01		 mov	 al, 1
$LN1@OnDBGameAn:

; 2977 : }

  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameAndroidParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wHeadSize$ = -12					; size = 2
_pGameAndroidInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameAndroidInfo, COMDAT
; _this$ = ecx

; 2941 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2942 : 	//变量定义
; 2943 : 	DBO_GR_GameAndroidInfo * pGameAndroidInfo=(DBO_GR_GameAndroidInfo *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pGameAndroidInfo$[ebp], eax

; 2944 : 	WORD wHeadSize=sizeof(DBO_GR_GameAndroidInfo)-sizeof(pGameAndroidInfo->AndroidAccountsInfo);

  00012	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00017	66 89 45 f4	 mov	 WORD PTR _wHeadSize$[ebp], ax

; 2945 : 
; 2946 : 	//效验参数
; 2947 : 	ASSERT((wDataSize>=wHeadSize)&&(wDataSize==(wHeadSize+pGameAndroidInfo->wAndroidCount*sizeof(pGameAndroidInfo->AndroidAccountsInfo[0]))));

  0001b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001f	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	7c 18		 jl	 SHORT $LN6@OnDBGameAn
  00027	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0002b	0f b7 45 f4	 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _pGameAndroidInfo$[ebp]
  00032	0f b7 49 08	 movzx	 ecx, WORD PTR [ecx+8]
  00036	6b c9 28	 imul	 ecx, ecx, 40
  00039	03 c1		 add	 eax, ecx
  0003b	3b d0		 cmp	 edx, eax
  0003d	74 19		 je	 SHORT $LN7@OnDBGameAn
$LN6@OnDBGameAn:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c2 06	 add	 edx, 6
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN7@OnDBGameAn
  00057	cc		 int	 3
$LN7@OnDBGameAn:

; 2948 : 	if ((wDataSize<wHeadSize)||(wDataSize!=(wHeadSize+pGameAndroidInfo->wAndroidCount*sizeof(pGameAndroidInfo->AndroidAccountsInfo[0])))) return false;

  00058	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005c	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00060	3b c1		 cmp	 eax, ecx
  00062	7c 18		 jl	 SHORT $LN3@OnDBGameAn
  00064	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00068	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  0006c	8b 55 f8	 mov	 edx, DWORD PTR _pGameAndroidInfo$[ebp]
  0006f	0f b7 52 08	 movzx	 edx, WORD PTR [edx+8]
  00073	6b d2 28	 imul	 edx, edx, 40
  00076	03 ca		 add	 ecx, edx
  00078	3b c1		 cmp	 eax, ecx
  0007a	74 04		 je	 SHORT $LN2@OnDBGameAn
$LN3@OnDBGameAn:
  0007c	32 c0		 xor	 al, al
  0007e	eb 37		 jmp	 SHORT $LN1@OnDBGameAn
$LN2@OnDBGameAn:

; 2949 : 
; 2950 : 	//设置机器
; 2951 : 	if (pGameAndroidInfo->lResultCode==DB_SUCCESS)

  00080	8b 45 f8	 mov	 eax, DWORD PTR _pGameAndroidInfo$[ebp]
  00083	83 38 00	 cmp	 DWORD PTR [eax], 0
  00086	75 2d		 jne	 SHORT $LN4@OnDBGameAn

; 2952 : 	{
; 2953 : 		m_AndroidUserManager.InsertAndroidInfo(pGameAndroidInfo->AndroidAccountsInfo,pGameAndroidInfo->wAndroidCount,pGameAndroidInfo->dwBatchID);

  00088	8b 45 f8	 mov	 eax, DWORD PTR _pGameAndroidInfo$[ebp]
  0008b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008e	51		 push	 ecx
  0008f	8b 55 f8	 mov	 edx, DWORD PTR _pGameAndroidInfo$[ebp]
  00092	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00096	50		 push	 eax
  00097	8b 4d f8	 mov	 ecx, DWORD PTR _pGameAndroidInfo$[ebp]
  0009a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0009d	51		 push	 ecx
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000a7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000aa	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  000b0	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000b3	ff d2		 call	 edx
$LN4@OnDBGameAn:

; 2954 : 	}
; 2955 : 
; 2956 : 	return true;

  000b5	b0 01		 mov	 al, 1
$LN1@OnDBGameAn:

; 2957 : }

  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameAndroidInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_wHeadSize$ = -12					; size = 2
_pGameColumnInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameColumnInfo, COMDAT
; _this$ = ecx

; 2915 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2916 : 	//变量定义
; 2917 : 	DBO_GR_GameColumnInfo * pGameColumnInfo=(DBO_GR_GameColumnInfo *)pData;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pGameColumnInfo$[ebp], eax

; 2918 : 	WORD wHeadSize=sizeof(DBO_GR_GameColumnInfo)-sizeof(pGameColumnInfo->ColumnItemInfo);

  00012	b8 08 00 00 00	 mov	 eax, 8
  00017	66 89 45 f4	 mov	 WORD PTR _wHeadSize$[ebp], ax

; 2919 : 
; 2920 : 	//效验参数
; 2921 : 	ASSERT((wDataSize>=wHeadSize)&&(wDataSize==(wHeadSize+pGameColumnInfo->cbColumnCount*sizeof(pGameColumnInfo->ColumnItemInfo[0]))));

  0001b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001f	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	7c 18		 jl	 SHORT $LN7@OnDBGameCo
  00027	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0002b	0f b7 45 f4	 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _pGameColumnInfo$[ebp]
  00032	0f b6 49 04	 movzx	 ecx, BYTE PTR [ecx+4]
  00036	6b c9 12	 imul	 ecx, ecx, 18
  00039	03 c1		 add	 eax, ecx
  0003b	3b d0		 cmp	 edx, eax
  0003d	74 19		 je	 SHORT $LN8@OnDBGameCo
$LN7@OnDBGameCo:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00045	83 c2 06	 add	 edx, 6
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN8@OnDBGameCo
  00057	cc		 int	 3
$LN8@OnDBGameCo:

; 2922 : 	if ((wDataSize<wHeadSize)||(wDataSize!=(wHeadSize+pGameColumnInfo->cbColumnCount*sizeof(pGameColumnInfo->ColumnItemInfo[0])))) return false;

  00058	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005c	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00060	3b c1		 cmp	 eax, ecx
  00062	7c 18		 jl	 SHORT $LN3@OnDBGameCo
  00064	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00068	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  0006c	8b 55 f8	 mov	 edx, DWORD PTR _pGameColumnInfo$[ebp]
  0006f	0f b6 52 04	 movzx	 edx, BYTE PTR [edx+4]
  00073	6b d2 12	 imul	 edx, edx, 18
  00076	03 ca		 add	 ecx, edx
  00078	3b c1		 cmp	 eax, ecx
  0007a	74 04		 je	 SHORT $LN2@OnDBGameCo
$LN3@OnDBGameCo:
  0007c	32 c0		 xor	 al, al
  0007e	eb 42		 jmp	 SHORT $LN1@OnDBGameCo
$LN2@OnDBGameCo:

; 2923 : 
; 2924 : 	//数据处理
; 2925 : 	if (pGameColumnInfo->cbColumnCount==0)

  00080	8b 45 f8	 mov	 eax, DWORD PTR _pGameColumnInfo$[ebp]
  00083	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00087	85 c9		 test	 ecx, ecx
  00089	75 02		 jne	 SHORT $LN4@OnDBGameCo

; 2926 : 	{
; 2927 : 		//默认列表
; 2928 : 	}
; 2929 : 	else

  0008b	eb 33		 jmp	 SHORT $LN5@OnDBGameCo
$LN4@OnDBGameCo:

; 2930 : 	{
; 2931 : 		//拷贝数据
; 2932 : 		m_DataConfigColumn.cbColumnCount=pGameColumnInfo->cbColumnCount;

  0008d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _pGameColumnInfo$[ebp]
  00093	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00096	88 90 ba 00 00
	00		 mov	 BYTE PTR [eax+186], dl

; 2933 : 		CopyMemory(m_DataConfigColumn.ColumnItem,pGameColumnInfo->ColumnItemInfo,pGameColumnInfo->cbColumnCount*sizeof(pGameColumnInfo->ColumnItemInfo[0]));

  0009c	8b 45 f8	 mov	 eax, DWORD PTR _pGameColumnInfo$[ebp]
  0009f	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  000a3	6b d1 12	 imul	 edx, ecx, 18
  000a6	52		 push	 edx
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _pGameColumnInfo$[ebp]
  000aa	83 c0 05	 add	 eax, 5
  000ad	50		 push	 eax
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	81 c1 bb 00 00
	00		 add	 ecx, 187		; 000000bbH
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 _memcpy
  000bd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@OnDBGameCo:

; 2934 : 	}
; 2935 : 
; 2936 : 	return true;

  000c0	b0 01		 mov	 al, 1
$LN1@OnDBGameCo:

; 2937 : }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameColumnInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_ControlResult$1 = -21					; size = 1
_ServiceStatus$ = -20					; size = 4
_pServiceUnits$ = -16					; size = 4
_bVersionInvalid$2 = -9					; size = 1
_pGameParameter$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBGameParameter, COMDAT
; _this$ = ecx

; 2862 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2863 : 	//效验参数
; 2864 : 	ASSERT(wDataSize==sizeof(DBO_GR_GameParameter));

  0000c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 28	 cmp	 eax, 40			; 00000028H
  00013	74 19		 je	 SHORT $LN9@OnDBGamePa
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN9@OnDBGamePa
  0002d	cc		 int	 3
$LN9@OnDBGamePa:

; 2865 : 	if (wDataSize!=sizeof(DBO_GR_GameParameter)) return false;

  0002e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 28	 cmp	 eax, 40			; 00000028H
  00035	74 07		 je	 SHORT $LN2@OnDBGamePa
  00037	32 c0		 xor	 al, al
  00039	e9 11 01 00 00	 jmp	 $LN1@OnDBGamePa
$LN2@OnDBGamePa:

; 2866 : 
; 2867 : 	//变量定义
; 2868 : 	DBO_GR_GameParameter * pGameParameter=(DBO_GR_GameParameter *)pData;

  0003e	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pGameParameter$[ebp], eax

; 2869 : 
; 2870 : 	//汇率信息
; 2871 : 	m_pGameParameter->dwMedalRate=pGameParameter->dwMedalRate;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0004a	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  0004d	8b 02		 mov	 eax, DWORD PTR [edx]
  0004f	89 01		 mov	 DWORD PTR [ecx], eax

; 2872 : 	m_pGameParameter->dwRevenueRate=pGameParameter->dwRevenueRate;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00057	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  0005a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 2873 : 	m_pGameParameter->dwExchangeRate=pGameParameter->dwExchangeRate;	

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00066	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  00069	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0006c	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 2874 : 	m_pGameParameter->dwPresentExchangeRate=pGameParameter->dwPresentExchangeRate;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00075	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  00078	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 2875 : 	m_pGameParameter->dwRateGold=pGameParameter->dwRateGold;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00084	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  00087	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0008a	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 2876 : 	m_pGameParameter->lEducateGrantScore=pGameParameter->lEducateGrantScore;

  0008d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00093	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  00096	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00099	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  0009c	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  0009f	89 51 24	 mov	 DWORD PTR [ecx+36], edx

; 2877 : 
; 2878 : 	//经验奖励
; 2879 : 	m_pGameParameter->dwWinExperience=pGameParameter->dwWinExperience;	

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000a8	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  000ab	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000ae	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 2880 : 
; 2881 : 	//版本信息
; 2882 : 	m_pGameParameter->dwClientVersion=pGameParameter->dwClientVersion;

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000b7	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  000ba	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000bd	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 2883 : 	m_pGameParameter->dwServerVersion=pGameParameter->dwServerVersion;

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000c6	8b 55 f8	 mov	 edx, DWORD PTR _pGameParameter$[ebp]
  000c9	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000cc	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 2884 : 
; 2885 : 	//版本效验
; 2886 : 	if (VERSION_EFFICACY==TRUE)

  000cf	33 c0		 xor	 eax, eax
  000d1	74 4d		 je	 SHORT $LN3@OnDBGamePa

; 2887 : 	{
; 2888 : 		//版本判断
; 2889 : 		bool bVersionInvalid=false;

  000d3	c6 45 f7 00	 mov	 BYTE PTR _bVersionInvalid$2[ebp], 0

; 2890 : 		if (m_pGameParameter->dwClientVersion!=m_pGameServiceAttrib->dwClientVersion) bVersionInvalid=true;

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000dd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000e3	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  000e6	3b 48 30	 cmp	 ecx, DWORD PTR [eax+48]
  000e9	74 04		 je	 SHORT $LN4@OnDBGamePa
  000eb	c6 45 f7 01	 mov	 BYTE PTR _bVersionInvalid$2[ebp], 1
$LN4@OnDBGamePa:

; 2891 : 		if (m_pGameParameter->dwServerVersion!=m_pGameServiceAttrib->dwServerVersion) bVersionInvalid=true;

  000ef	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000f5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f8	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000fb	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  000fe	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  00101	74 04		 je	 SHORT $LN5@OnDBGamePa
  00103	c6 45 f7 01	 mov	 BYTE PTR _bVersionInvalid$2[ebp], 1
$LN5@OnDBGamePa:

; 2892 : 
; 2893 : 		//提示信息
; 2894 : 		if (bVersionInvalid==true)

  00107	0f b6 45 f7	 movzx	 eax, BYTE PTR _bVersionInvalid$2[ebp]
  0010b	83 f8 01	 cmp	 eax, 1
  0010e	75 10		 jne	 SHORT $LN3@OnDBGamePa

; 2895 : 		{
; 2896 : 			CTraceService::TraceString(TEXT("平台数据库服务组件版本注册信息与当前组件版本信息不一致"),TraceLevel_Warning);

  00110	6a 02		 push	 2
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@PICEIPLI@?F?$LN?L?$KI?J?$PN?$LO?$NN?$LP?b?$LH?$PO?N?q?W?i?$LM?$PO?$LA?f?$LB?$LO?W?$KC?$LC?a?P?E?O?$KC?S@
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0011d	83 c4 08	 add	 esp, 8
$LN3@OnDBGamePa:

; 2897 : 		}
; 2898 : 	}
; 2899 : 
; 2900 : 	//获取状态
; 2901 : 	CServiceUnits * pServiceUnits = CServiceUnits::g_pServiceUnits;

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pServiceUnits@CServiceUnits@@2PAV1@A ; CServiceUnits::g_pServiceUnits
  00125	89 45 f0	 mov	 DWORD PTR _pServiceUnits$[ebp], eax

; 2902 : 	enServiceStatus ServiceStatus = pServiceUnits->GetServiceStatus();

  00128	8b 4d f0	 mov	 ecx, DWORD PTR _pServiceUnits$[ebp]
  0012b	e8 00 00 00 00	 call	 ?GetServiceStatus@CServiceUnits@@QAE?AW4enServiceStatus@@XZ ; CServiceUnits::GetServiceStatus
  00130	89 45 ec	 mov	 DWORD PTR _ServiceStatus$[ebp], eax

; 2903 : 	//事件通知
; 2904 : 	if (ServiceStatus != ServiceStatus_Service)

  00133	83 7d ec 02	 cmp	 DWORD PTR _ServiceStatus$[ebp], 2
  00137	74 14		 je	 SHORT $LN7@OnDBGamePa

; 2905 : 	{
; 2906 : 		CP_ControlResult ControlResult;
; 2907 : 		ControlResult.cbSuccess = ER_SUCCESS;

  00139	c6 45 eb 01	 mov	 BYTE PTR _ControlResult$1[ebp], 1

; 2908 : 		SendUIControlPacket(UI_SERVICE_CONFIG_RESULT, &ControlResult, sizeof(ControlResult));

  0013d	6a 01		 push	 1
  0013f	8d 45 eb	 lea	 eax, DWORD PTR _ControlResult$1[ebp]
  00142	50		 push	 eax
  00143	6a 02		 push	 2
  00145	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	e8 00 00 00 00	 call	 ?SendUIControlPacket@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::SendUIControlPacket
$LN7@OnDBGamePa:

; 2909 : 	}
; 2910 : 	return true;

  0014d	b0 01		 mov	 al, 1
$LN1@OnDBGamePa:

; 2911 : }

  0014f	5f		 pop	 edi
  00150	5e		 pop	 esi
  00151	5b		 pop	 ebx
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 0c 00	 ret	 12			; 0000000cH
?OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBGameParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBLogonFailure@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
_pLogonFailure$ = -12					; size = 4
_pBindParameter$ = -8					; size = 4
_this$ = -4						; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBLogonFailure@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBLogonFailure, COMDAT
; _this$ = ecx

; 2838 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2839 : 	//判断在线
; 2840 : 	tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00020	ff d0		 call	 eax
  00022	89 45 f8	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 2841 : 	if ((pBindParameter->dwSocketID!=dwContextID)||(pBindParameter->pIServerUserItem!=NULL)) return true;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  0002d	75 09		 jne	 SHORT $LN3@OnDBLogonF
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00032	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00036	74 04		 je	 SHORT $LN2@OnDBLogonF
$LN3@OnDBLogonF:
  00038	b0 01		 mov	 al, 1
  0003a	eb 70		 jmp	 SHORT $LN1@OnDBLogonF
$LN2@OnDBLogonF:

; 2842 : 
; 2843 : 	//发送错误
; 2844 : 	DBO_GR_LogonFailure * pLogonFailure=(DBO_GR_LogonFailure *)pData;

  0003c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0003f	89 45 f4	 mov	 DWORD PTR _pLogonFailure$[ebp], eax

; 2845 : 	SendLogonFailure(pLogonFailure->szDescribeString,pLogonFailure->lResultCode,dwContextID);

  00042	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00045	50		 push	 eax
  00046	8b 4d f4	 mov	 ecx, DWORD PTR _pLogonFailure$[ebp]
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	52		 push	 edx
  0004c	8b 45 f4	 mov	 eax, DWORD PTR _pLogonFailure$[ebp]
  0004f	83 c0 04	 add	 eax, 4
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2846 : 
; 2847 : 	//断开连接
; 2848 : 	if (LOWORD(dwContextID)>=INDEX_ANDROID)

  0005b	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0005e	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00063	0f b7 c8	 movzx	 ecx, ax
  00066	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  0006c	7c 1f		 jl	 SHORT $LN4@OnDBLogonF

; 2849 : 	{
; 2850 : 		m_AndroidUserManager.DeleteAndroidUserItem(dwContextID,true);

  0006e	6a 01		 push	 1
  00070	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00073	50		 push	 eax
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  0007d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00080	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  00086	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00089	ff d2		 call	 edx

; 2851 : 	}
; 2852 : 	else

  0008b	eb 1d		 jmp	 SHORT $LN5@OnDBLogonF
$LN4@OnDBLogonF:

; 2853 : 	{
; 2854 : 		m_pITCPNetworkEngine->ShutDownSocket(dwContextID);

  0008d	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  0009a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 12		 mov	 edx, DWORD PTR [edx]
  0009f	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  000a5	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  000a8	ff d0		 call	 eax
$LN5@OnDBLogonF:

; 2855 : 	}
; 2856 : 
; 2857 : 	return true;

  000aa	b0 01		 mov	 al, 1
$LN1@OnDBLogonF:

; 2858 : }

  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 0c 00	 ret	 12			; 0000000cH
?OnDBLogonFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBLogonFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z
_TEXT	SEGMENT
tv248 = -2404						; size = 8
tv240 = -2404						; size = 8
tv1081 = -2396						; size = 4
tv1045 = -2396						; size = 4
tv953 = -2396						; size = 8
tv932 = -2396						; size = 8
tv906 = -2396						; size = 4
tv1080 = -2392						; size = 4
tv1072 = -2392						; size = 4
tv1044 = -2392						; size = 4
tv1036 = -2392						; size = 4
tv905 = -2392						; size = 4
tv893 = -2392						; size = 4
tv886 = -2392						; size = 4
tv636 = -2392						; size = 4
tv95 = -2392						; size = 4
tv90 = -2392						; size = 4
_UserID$ = -2068					; size = 4
_pUserInfo$1 = -2064					; size = 4
_UserEnter$2 = -2060					; size = 315
_UserInfoPlus$ = -1744					; size = 1136
_UserInfo$ = -608					; size = 272
_dwOnlineCount$ = -336					; size = 4
_wMaxPlayer$ = -332					; size = 2
_szMsg$3 = -328						; size = 128
_szMsg$4 = -200						; size = 128
_lTakeScore$5 = -72					; size = 8
_lTakeMaxScore$6 = -64					; size = 8
_lTakeMinScore$7 = -56					; size = 8
_pAndroidParameter$8 = -48				; size = 4
_pIAndroidUserItem$9 = -44				; size = 4
_dwUserID$10 = -40					; size = 4
_pIServerUserItem$ = -36				; size = 4
_dwCurrTime$11 = -32					; size = 4
_dwKickTime$ = -28					; size = 4
_bMobileUser$ = -22					; size = 1
_bAndroidUser$ = -21					; size = 1
_pDBOLogonSuccess$ = -20				; size = 4
_pBindParameter$ = -16					; size = 4
_wBindIndex$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwContextID$ = 8					; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z PROC ; CAttemperEngineSink::OnDBLogonSuccess, COMDAT
; _this$ = ecx

; 2511 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 64 09 00
	00		 sub	 esp, 2404		; 00000964H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2512 : 	//变量定义
; 2513 : 	WORD wBindIndex=LOWORD(dwContextID);

  00019	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0001c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00021	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 2514 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00025	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00035	ff d0		 call	 eax
  00037	89 45 f0	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 2515 : 	DBO_GR_LogonSuccess * pDBOLogonSuccess=(DBO_GR_LogonSuccess *)pData;

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR _pDBOLogonSuccess$[ebp], eax

; 2516 : 
; 2517 : 	//废弃判断
; 2518 : 	if ((pBindParameter->pIServerUserItem!=NULL)||(pBindParameter->dwSocketID!=dwContextID))

  00040	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00043	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00047	75 0a		 jne	 SHORT $LN3@OnDBLogonS
  00049	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	3b 4d 08	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00051	74 3f		 je	 SHORT $LN2@OnDBLogonS
$LN3@OnDBLogonS:

; 2519 : 	{
; 2520 : 		//错误断言
; 2521 : 		ASSERT(FALSE);

  00053	33 c0		 xor	 eax, eax
  00055	75 19		 jne	 SHORT $LN28@OnDBLogonS
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  0005d	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00060	51		 push	 ecx
  00061	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00066	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006b	85 c0		 test	 eax, eax
  0006d	74 01		 je	 SHORT $LN28@OnDBLogonS
  0006f	cc		 int	 3
$LN28@OnDBLogonS:

; 2522 : 
; 2523 : 		//解除锁定
; 2524 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_NORMAL);

  00070	6a 00		 push	 0
  00072	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00075	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  0007b	51		 push	 ecx
  0007c	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  0007f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00082	50		 push	 eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2525 : 
; 2526 : 		return true;

  0008b	b0 01		 mov	 al, 1
  0008d	e9 03 0d 00 00	 jmp	 $LN1@OnDBLogonS
$LN2@OnDBLogonS:

; 2527 : 	}
; 2528 : 
; 2529 : 	//变量定义
; 2530 : 	bool bAndroidUser=(wBindIndex>=INDEX_ANDROID);

  00092	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00096	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  0009b	7c 0c		 jl	 SHORT $LN29@OnDBLogonS
  0009d	c7 85 a8 f6 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv90[ebp], 1
  000a7	eb 0a		 jmp	 SHORT $LN30@OnDBLogonS
$LN29@OnDBLogonS:
  000a9	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN30@OnDBLogonS:
  000b3	8a 8d a8 f6 ff
	ff		 mov	 cl, BYTE PTR tv90[ebp]
  000b9	88 4d eb	 mov	 BYTE PTR _bAndroidUser$[ebp], cl

; 2531 : 	bool bMobileUser=(pBindParameter->cbClientKind==CLIENT_KIND_MOBILE);

  000bc	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  000bf	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  000c3	83 f9 02	 cmp	 ecx, 2
  000c6	75 0c		 jne	 SHORT $LN31@OnDBLogonS
  000c8	c7 85 a8 f6 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv95[ebp], 1
  000d2	eb 0a		 jmp	 SHORT $LN32@OnDBLogonS
$LN31@OnDBLogonS:
  000d4	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN32@OnDBLogonS:
  000de	8a 95 a8 f6 ff
	ff		 mov	 dl, BYTE PTR tv95[ebp]
  000e4	88 55 ea	 mov	 BYTE PTR _bMobileUser$[ebp], dl

; 2532 : 
; 2533 : 	//被踢判断
; 2534 : 	DWORD dwKickTime;
; 2535 : 	if(m_KickUserItemMap.Lookup(pDBOLogonSuccess->dwUserID,dwKickTime)==TRUE)

  000e7	8d 45 e4	 lea	 eax, DWORD PTR _dwKickTime$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d ec	 mov	 ecx, DWORD PTR _pDBOLogonSuccess$[ebp]
  000ee	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f1	52		 push	 edx
  000f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  000fb	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKKAAK@@QBEHKAAK@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Lookup
  00100	83 f8 01	 cmp	 eax, 1
  00103	75 68		 jne	 SHORT $LN4@OnDBLogonS

; 2536 : 	{
; 2537 : 		//时效判断
; 2538 : 		DWORD dwCurrTime = (DWORD)time(NULL);

  00105	6a 00		 push	 0
  00107	e8 00 00 00 00	 call	 _time
  0010c	83 c4 04	 add	 esp, 4
  0010f	89 45 e0	 mov	 DWORD PTR _dwCurrTime$11[ebp], eax

; 2539 : 		if(dwKickTime+VALID_TIME_KICK_BY_MANAGER > dwCurrTime)

  00112	8b 45 e4	 mov	 eax, DWORD PTR _dwKickTime$[ebp]
  00115	05 10 0e 00 00	 add	 eax, 3600		; 00000e10H
  0011a	3b 45 e0	 cmp	 eax, DWORD PTR _dwCurrTime$11[ebp]
  0011d	76 39		 jbe	 SHORT $LN5@OnDBLogonS

; 2540 : 		{
; 2541 : 			//发送失败
; 2542 : 			SendLogonFailure(TEXT("您已被管理员请出房间,1小时之内不能进入！"),0,pBindParameter->dwSocketID);

  0011f	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00122	8b 08		 mov	 ecx, DWORD PTR [eax]
  00124	51		 push	 ecx
  00125	6a 00		 push	 0
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@GMGBIJBK@?D?z?R?Q?$LB?$LL?$LJ?$NM?$MA?m?T?$LB?G?k?$LD?v?$LH?$LP?$LM?d?01?P?$KB?J?$LB?V?$KO?D?Z?$LC@
  0012c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2543 : 
; 2544 : 			//解除锁定
; 2545 : 			PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_CONDITIONS);

  00134	6a 05		 push	 5
  00136	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00139	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  0013f	51		 push	 ecx
  00140	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00143	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00146	50		 push	 eax
  00147	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2546 : 
; 2547 : 			return true;

  0014f	b0 01		 mov	 al, 1
  00151	e9 3f 0c 00 00	 jmp	 $LN1@OnDBLogonS

; 2548 : 		}
; 2549 : 		else

  00156	eb 15		 jmp	 SHORT $LN4@OnDBLogonS
$LN5@OnDBLogonS:

; 2550 : 		{
; 2551 : 			//移除玩家
; 2552 : 			m_KickUserItemMap.RemoveKey(pDBOLogonSuccess->dwUserID);

  00158	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0015b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0015e	51		 push	 ecx
  0015f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  00168	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKKAAK@@QAEHK@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveKey
$LN4@OnDBLogonS:

; 2553 : 		}
; 2554 : 	}
; 2555 : 
; 2556 : 	//切换判断
; 2557 : 	IServerUserItem * pIServerUserItem=m_ServerUserManager.SearchUserItem(pDBOLogonSuccess->dwUserID);

  0016d	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00170	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00173	51		 push	 ecx
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0017d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00180	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00186	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00189	ff d2		 call	 edx
  0018b	89 45 dc	 mov	 DWORD PTR _pIServerUserItem$[ebp], eax

; 2558 : 	if (pIServerUserItem!=NULL)

  0018e	83 7d dc 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00192	74 5e		 je	 SHORT $LN7@OnDBLogonS

; 2559 : 	{
; 2560 : 		//切换用户
; 2561 : 		SwitchUserItemConnect(pIServerUserItem,pDBOLogonSuccess->szMachineID,wBindIndex,pDBOLogonSuccess->cbDeviceType,pDBOLogonSuccess->wBehaviorFlags,pDBOLogonSuccess->wPageTableCount);

  00194	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00197	0f b7 88 10 02
	00 00		 movzx	 ecx, WORD PTR [eax+528]
  0019e	51		 push	 ecx
  0019f	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  001a2	0f b7 82 0e 02
	00 00		 movzx	 eax, WORD PTR [edx+526]
  001a9	50		 push	 eax
  001aa	8b 4d ec	 mov	 ecx, DWORD PTR _pDBOLogonSuccess$[ebp]
  001ad	0f b6 91 0c 02
	00 00		 movzx	 edx, BYTE PTR [ecx+524]
  001b4	52		 push	 edx
  001b5	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  001b9	50		 push	 eax
  001ba	8b 4d ec	 mov	 ecx, DWORD PTR _pDBOLogonSuccess$[ebp]
  001bd	81 c1 d0 01 00
	00		 add	 ecx, 464		; 000001d0H
  001c3	51		 push	 ecx
  001c4	8b 55 dc	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001c7	52		 push	 edx
  001c8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cb	e8 00 00 00 00	 call	 ?SwitchUserItemConnect@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@QADGEGG@Z ; CAttemperEngineSink::SwitchUserItemConnect

; 2562 : 
; 2563 : 		//解除锁定
; 2564 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_USER_IMPACT);

  001d0	6a 03		 push	 3
  001d2	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  001d5	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  001db	51		 push	 ecx
  001dc	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  001df	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e2	50		 push	 eax
  001e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2565 : 
; 2566 : 		return true;

  001eb	b0 01		 mov	 al, 1
  001ed	e9 a3 0b 00 00	 jmp	 $LN1@OnDBLogonS
$LN7@OnDBLogonS:

; 2567 : 	}
; 2568 : 
; 2569 : 	//维护判断
; 2570 : 	if ((CServerRule::IsForfendRoomEnter(m_pGameServiceOption->dwServerRule)==true)&&(pDBOLogonSuccess->cbMasterOrder==0))

  001f2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001f8	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  001fb	52		 push	 edx
  001fc	e8 00 00 00 00	 call	 ?IsForfendRoomEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomEnter
  00201	83 c4 04	 add	 esp, 4
  00204	0f b6 c0	 movzx	 eax, al
  00207	83 f8 01	 cmp	 eax, 1
  0020a	75 42		 jne	 SHORT $LN8@OnDBLogonS
  0020c	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0020f	0f b6 48 56	 movzx	 ecx, BYTE PTR [eax+86]
  00213	85 c9		 test	 ecx, ecx
  00215	75 37		 jne	 SHORT $LN8@OnDBLogonS

; 2571 : 	{
; 2572 : 		//发送失败
; 2573 : 		SendLogonFailure(TEXT("抱歉，由于系统维护的原因，当前游戏房间禁止用户进入！"),0,pBindParameter->dwSocketID);

  00217	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	51		 push	 ecx
  0021d	6a 00		 push	 0
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@CKMKCLBK@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?O?$LF?M?$LD?N?$KM?$LL?$KE?$LF?D?T?$KN?R?r?$KD?$KM?$LF?$LB?G?$LA?S@
  00224	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00227	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2574 : 
; 2575 : 		//解除锁定
; 2576 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SYSTEM);

  0022c	6a 01		 push	 1
  0022e	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00231	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  00237	51		 push	 ecx
  00238	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0023e	50		 push	 eax
  0023f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00242	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2577 : 
; 2578 : 		return true;

  00247	b0 01		 mov	 al, 1
  00249	e9 47 0b 00 00	 jmp	 $LN1@OnDBLogonS
$LN8@OnDBLogonS:

; 2579 : 	}
; 2580 : 
; 2581 : 	//查找机器
; 2582 : 	if (bAndroidUser==true && m_pGameServiceOption->wServerType!=GAME_GENRE_MATCH)

  0024e	0f b6 45 eb	 movzx	 eax, BYTE PTR _bAndroidUser$[ebp]
  00252	83 f8 01	 cmp	 eax, 1
  00255	0f 85 43 02 00
	00		 jne	 $LN9@OnDBLogonS
  0025b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0025e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00261	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00265	83 fa 04	 cmp	 edx, 4
  00268	0f 84 30 02 00
	00		 je	 $LN9@OnDBLogonS

; 2583 : 	{
; 2584 : 		//查找机器
; 2585 : 		DWORD dwUserID=pDBOLogonSuccess->dwUserID;

  0026e	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00271	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00274	89 4d d8	 mov	 DWORD PTR _dwUserID$10[ebp], ecx

; 2586 : 		IAndroidUserItem * pIAndroidUserItem=m_AndroidUserManager.SearchAndroidUserItem(dwUserID,dwContextID);

  00277	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  0027a	50		 push	 eax
  0027b	8b 4d d8	 mov	 ecx, DWORD PTR _dwUserID$10[ebp]
  0027e	51		 push	 ecx
  0027f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00288	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0028b	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  00291	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00294	ff d2		 call	 edx
  00296	89 45 d4	 mov	 DWORD PTR _pIAndroidUserItem$9[ebp], eax

; 2587 : 
; 2588 : 		//修改积分
; 2589 : 		if (pIAndroidUserItem!=NULL)

  00299	83 7d d4 00	 cmp	 DWORD PTR _pIAndroidUserItem$9[ebp], 0
  0029d	0f 84 fb 01 00
	00		 je	 $LN9@OnDBLogonS

; 2590 : 		{
; 2591 : 			//获取配置
; 2592 : 			tagAndroidParameter * pAndroidParameter=pIAndroidUserItem->GetAndroidParameter();

  002a3	8b 45 d4	 mov	 eax, DWORD PTR _pIAndroidUserItem$9[ebp]
  002a6	8b 10		 mov	 edx, DWORD PTR [eax]
  002a8	8b 4d d4	 mov	 ecx, DWORD PTR _pIAndroidUserItem$9[ebp]
  002ab	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  002ae	ff d0		 call	 eax
  002b0	89 45 d0	 mov	 DWORD PTR _pAndroidParameter$8[ebp], eax

; 2593 : 
; 2594 : 			//调整积分
; 2595 : 			if ((pAndroidParameter->lTakeMinScore!=0L)&&(pAndroidParameter->lTakeMaxScore!=0L))

  002b3	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$8[ebp]
  002b6	89 85 a8 f6 ff
	ff		 mov	 DWORD PTR tv886[ebp], eax
  002bc	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv886[ebp]
  002c2	8b 95 a8 f6 ff
	ff		 mov	 edx, DWORD PTR tv886[ebp]
  002c8	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  002cb	0b 42 18	 or	 eax, DWORD PTR [edx+24]
  002ce	0f 84 ca 01 00
	00		 je	 $LN9@OnDBLogonS
  002d4	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$8[ebp]
  002d7	89 85 a8 f6 ff
	ff		 mov	 DWORD PTR tv893[ebp], eax
  002dd	8b 8d a8 f6 ff
	ff		 mov	 ecx, DWORD PTR tv893[ebp]
  002e3	8b 95 a8 f6 ff
	ff		 mov	 edx, DWORD PTR tv893[ebp]
  002e9	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  002ec	0b 42 20	 or	 eax, DWORD PTR [edx+32]
  002ef	0f 84 a9 01 00
	00		 je	 $LN9@OnDBLogonS

; 2596 : 			{
; 2597 : 				//变量定义
; 2598 : 				SCORE lTakeMinScore=(SCORE)pAndroidParameter->lTakeMinScore;

  002f5	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$8[ebp]
  002f8	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  002fb	89 4d c8	 mov	 DWORD PTR _lTakeMinScore$7[ebp], ecx
  002fe	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00301	89 55 cc	 mov	 DWORD PTR _lTakeMinScore$7[ebp+4], edx

; 2599 : 				SCORE lTakeMaxScore=(SCORE)__max(pAndroidParameter->lTakeMaxScore,pAndroidParameter->lTakeMinScore);

  00304	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$8[ebp]
  00307	8b 4d d0	 mov	 ecx, DWORD PTR _pAndroidParameter$8[ebp]
  0030a	89 85 a8 f6 ff
	ff		 mov	 DWORD PTR tv905[ebp], eax
  00310	89 8d a4 f6 ff
	ff		 mov	 DWORD PTR tv906[ebp], ecx
  00316	8b 95 a8 f6 ff
	ff		 mov	 edx, DWORD PTR tv905[ebp]
  0031c	8b 85 a4 f6 ff
	ff		 mov	 eax, DWORD PTR tv906[ebp]
  00322	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00325	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  00328	7c 2d		 jl	 SHORT $LN33@OnDBLogonS
  0032a	7f 14		 jg	 SHORT $LN41@OnDBLogonS
  0032c	8b 95 a8 f6 ff
	ff		 mov	 edx, DWORD PTR tv905[ebp]
  00332	8b 85 a4 f6 ff
	ff		 mov	 eax, DWORD PTR tv906[ebp]
  00338	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  0033b	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  0033e	76 17		 jbe	 SHORT $LN33@OnDBLogonS
$LN41@OnDBLogonS:
  00340	8b 55 d0	 mov	 edx, DWORD PTR _pAndroidParameter$8[ebp]
  00343	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00346	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv240[ebp], eax
  0034c	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0034f	89 8d a0 f6 ff
	ff		 mov	 DWORD PTR tv240[ebp+4], ecx
  00355	eb 15		 jmp	 SHORT $LN34@OnDBLogonS
$LN33@OnDBLogonS:
  00357	8b 55 d0	 mov	 edx, DWORD PTR _pAndroidParameter$8[ebp]
  0035a	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0035d	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv240[ebp], eax
  00363	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00366	89 8d a0 f6 ff
	ff		 mov	 DWORD PTR tv240[ebp+4], ecx
$LN34@OnDBLogonS:
  0036c	8b 95 9c f6 ff
	ff		 mov	 edx, DWORD PTR tv240[ebp]
  00372	89 55 c0	 mov	 DWORD PTR _lTakeMaxScore$6[ebp], edx
  00375	8b 85 a0 f6 ff
	ff		 mov	 eax, DWORD PTR tv240[ebp+4]
  0037b	89 45 c4	 mov	 DWORD PTR _lTakeMaxScore$6[ebp+4], eax

; 2600 : 
; 2601 : 				//调整积分
; 2602 : 				if ((lTakeMaxScore-lTakeMinScore)>0L)

  0037e	8b 45 c0	 mov	 eax, DWORD PTR _lTakeMaxScore$6[ebp]
  00381	2b 45 c8	 sub	 eax, DWORD PTR _lTakeMinScore$7[ebp]
  00384	8b 4d c4	 mov	 ecx, DWORD PTR _lTakeMaxScore$6[ebp+4]
  00387	1b 4d cc	 sbb	 ecx, DWORD PTR _lTakeMinScore$7[ebp+4]
  0038a	89 85 a4 f6 ff
	ff		 mov	 DWORD PTR tv932[ebp], eax
  00390	89 8d a8 f6 ff
	ff		 mov	 DWORD PTR tv932[ebp+4], ecx
  00396	83 bd a8 f6 ff
	ff 00		 cmp	 DWORD PTR tv932[ebp+4], 0
  0039d	0f 8c e6 00 00
	00		 jl	 $LN12@OnDBLogonS
  003a3	7f 0d		 jg	 SHORT $LN42@OnDBLogonS
  003a5	83 bd a4 f6 ff
	ff 00		 cmp	 DWORD PTR tv932[ebp], 0
  003ac	0f 86 d7 00 00
	00		 jbe	 $LN12@OnDBLogonS
$LN42@OnDBLogonS:

; 2603 : 				{
; 2604 : 					SCORE lTakeScore = __max((lTakeMaxScore-lTakeMinScore)/10,1);

  003b2	8b 45 c0	 mov	 eax, DWORD PTR _lTakeMaxScore$6[ebp]
  003b5	2b 45 c8	 sub	 eax, DWORD PTR _lTakeMinScore$7[ebp]
  003b8	8b 4d c4	 mov	 ecx, DWORD PTR _lTakeMaxScore$6[ebp+4]
  003bb	1b 4d cc	 sbb	 ecx, DWORD PTR _lTakeMinScore$7[ebp+4]
  003be	6a 00		 push	 0
  003c0	6a 0a		 push	 10			; 0000000aH
  003c2	51		 push	 ecx
  003c3	50		 push	 eax
  003c4	e8 00 00 00 00	 call	 __alldiv
  003c9	89 85 a4 f6 ff
	ff		 mov	 DWORD PTR tv953[ebp], eax
  003cf	89 95 a8 f6 ff
	ff		 mov	 DWORD PTR tv953[ebp+4], edx
  003d5	83 bd a8 f6 ff
	ff 00		 cmp	 DWORD PTR tv953[ebp+4], 0
  003dc	7c 30		 jl	 SHORT $LN35@OnDBLogonS
  003de	7f 09		 jg	 SHORT $LN43@OnDBLogonS
  003e0	83 bd a4 f6 ff
	ff 01		 cmp	 DWORD PTR tv953[ebp], 1
  003e7	76 25		 jbe	 SHORT $LN35@OnDBLogonS
$LN43@OnDBLogonS:
  003e9	8b 55 c0	 mov	 edx, DWORD PTR _lTakeMaxScore$6[ebp]
  003ec	2b 55 c8	 sub	 edx, DWORD PTR _lTakeMinScore$7[ebp]
  003ef	8b 45 c4	 mov	 eax, DWORD PTR _lTakeMaxScore$6[ebp+4]
  003f2	1b 45 cc	 sbb	 eax, DWORD PTR _lTakeMinScore$7[ebp+4]
  003f5	6a 00		 push	 0
  003f7	6a 0a		 push	 10			; 0000000aH
  003f9	50		 push	 eax
  003fa	52		 push	 edx
  003fb	e8 00 00 00 00	 call	 __alldiv
  00400	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv248[ebp], eax
  00406	89 95 a0 f6 ff
	ff		 mov	 DWORD PTR tv248[ebp+4], edx
  0040c	eb 14		 jmp	 SHORT $LN36@OnDBLogonS
$LN35@OnDBLogonS:
  0040e	c7 85 9c f6 ff
	ff 01 00 00 00	 mov	 DWORD PTR tv248[ebp], 1
  00418	c7 85 a0 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp+4], 0
$LN36@OnDBLogonS:
  00422	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv248[ebp]
  00428	89 4d b8	 mov	 DWORD PTR _lTakeScore$5[ebp], ecx
  0042b	8b 95 a0 f6 ff
	ff		 mov	 edx, DWORD PTR tv248[ebp+4]
  00431	89 55 bc	 mov	 DWORD PTR _lTakeScore$5[ebp+4], edx

; 2605 : 					pDBOLogonSuccess->bConsumptionType.lScore=(SCORE)(lTakeMinScore+(rand()%10)*lTakeScore+rand()%lTakeScore);

  00434	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  0043a	99		 cdq
  0043b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00440	f7 f9		 idiv	 ecx
  00442	8b c2		 mov	 eax, edx
  00444	99		 cdq
  00445	8b 4d bc	 mov	 ecx, DWORD PTR _lTakeScore$5[ebp+4]
  00448	51		 push	 ecx
  00449	8b 4d b8	 mov	 ecx, DWORD PTR _lTakeScore$5[ebp]
  0044c	51		 push	 ecx
  0044d	52		 push	 edx
  0044e	50		 push	 eax
  0044f	e8 00 00 00 00	 call	 __allmul
  00454	8b f0		 mov	 esi, eax
  00456	8b fa		 mov	 edi, edx
  00458	03 75 c8	 add	 esi, DWORD PTR _lTakeMinScore$7[ebp]
  0045b	13 7d cc	 adc	 edi, DWORD PTR _lTakeMinScore$7[ebp+4]
  0045e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00464	99		 cdq
  00465	8b 4d bc	 mov	 ecx, DWORD PTR _lTakeScore$5[ebp+4]
  00468	51		 push	 ecx
  00469	8b 4d b8	 mov	 ecx, DWORD PTR _lTakeScore$5[ebp]
  0046c	51		 push	 ecx
  0046d	52		 push	 edx
  0046e	50		 push	 eax
  0046f	e8 00 00 00 00	 call	 __allrem
  00474	03 f0		 add	 esi, eax
  00476	13 fa		 adc	 edi, edx
  00478	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  0047b	89 b2 6d 01 00
	00		 mov	 DWORD PTR [edx+365], esi
  00481	89 ba 71 01 00
	00		 mov	 DWORD PTR [edx+369], edi

; 2606 : 				}
; 2607 : 				else

  00487	eb 15		 jmp	 SHORT $LN9@OnDBLogonS
$LN12@OnDBLogonS:

; 2608 : 				{
; 2609 : 					pDBOLogonSuccess->bConsumptionType.lScore = (SCORE)lTakeMaxScore;

  00489	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0048c	8b 4d c0	 mov	 ecx, DWORD PTR _lTakeMaxScore$6[ebp]
  0048f	89 88 6d 01 00
	00		 mov	 DWORD PTR [eax+365], ecx
  00495	8b 55 c4	 mov	 edx, DWORD PTR _lTakeMaxScore$6[ebp+4]
  00498	89 90 71 01 00
	00		 mov	 DWORD PTR [eax+369], edx
$LN9@OnDBLogonS:

; 2610 : 				}
; 2611 : 			}
; 2612 : 		}
; 2613 : 	}
; 2614 : 
; 2615 : 	//最低分数
; 2616 : 	if ((m_pGameServiceOption->lMinEnterScore != 0L) && (pDBOLogonSuccess->bConsumptionType.lScore<m_pGameServiceOption->lMinEnterScore))

  0049e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004a1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004a4	89 8d a8 f6 ff
	ff		 mov	 DWORD PTR tv1036[ebp], ecx
  004aa	8b 95 a8 f6 ff
	ff		 mov	 edx, DWORD PTR tv1036[ebp]
  004b0	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1036[ebp]
  004b6	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  004b9	0b 48 2c	 or	 ecx, DWORD PTR [eax+44]
  004bc	0f 84 c7 00 00
	00		 je	 $LN14@OnDBLogonS
  004c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004c5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004c8	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  004cb	89 95 a8 f6 ff
	ff		 mov	 DWORD PTR tv1044[ebp], edx
  004d1	89 8d a4 f6 ff
	ff		 mov	 DWORD PTR tv1045[ebp], ecx
  004d7	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1044[ebp]
  004dd	8b 8d a4 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1045[ebp]
  004e3	8b 90 71 01 00
	00		 mov	 edx, DWORD PTR [eax+369]
  004e9	3b 51 2c	 cmp	 edx, DWORD PTR [ecx+44]
  004ec	0f 8f 97 00 00
	00		 jg	 $LN14@OnDBLogonS
  004f2	7c 17		 jl	 SHORT $LN44@OnDBLogonS
  004f4	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1044[ebp]
  004fa	8b 8d a4 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1045[ebp]
  00500	8b 90 6d 01 00
	00		 mov	 edx, DWORD PTR [eax+365]
  00506	3b 51 28	 cmp	 edx, DWORD PTR [ecx+40]
  00509	73 7e		 jae	 SHORT $LN14@OnDBLogonS
$LN44@OnDBLogonS:

; 2617 : 	{
; 2618 : 		//发送失败
; 2619 : 		TCHAR szMsg[128]=TEXT("");

  0050b	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00510	88 85 38 ff ff
	ff		 mov	 BYTE PTR _szMsg$4[ebp], al
  00516	6a 7f		 push	 127			; 0000007fH
  00518	6a 00		 push	 0
  0051a	8d 85 39 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$4[ebp+1]
  00520	50		 push	 eax
  00521	e8 00 00 00 00	 call	 _memset
  00526	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2620 : 		_sntprintf_s(szMsg,CountArray(szMsg), TEXT("抱歉，您的游戏成绩低于当前游戏房间的最低进入成绩%I64d，不能进入当前游戏房间！"), m_pGameServiceOption->lMinEnterScore);

  00529	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0052c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0052f	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00532	52		 push	 edx
  00533	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00536	50		 push	 eax
  00537	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@NGJGJCKH@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
  0053c	68 80 00 00 00	 push	 128			; 00000080H
  00541	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _szMsg$4[ebp]
  00547	51		 push	 ecx
  00548	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  0054d	83 c4 14	 add	 esp, 20			; 00000014H

; 2621 : 		SendLogonFailure(szMsg,0,pBindParameter->dwSocketID);

  00550	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00553	8b 08		 mov	 ecx, DWORD PTR [eax]
  00555	51		 push	 ecx
  00556	6a 00		 push	 0
  00558	8d 95 38 ff ff
	ff		 lea	 edx, DWORD PTR _szMsg$4[ebp]
  0055e	52		 push	 edx
  0055f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00562	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2622 : 
; 2623 : 		//解除锁定
; 2624 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_CONDITIONS);

  00567	6a 05		 push	 5
  00569	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0056c	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  00572	51		 push	 ecx
  00573	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00576	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00579	50		 push	 eax
  0057a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0057d	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2625 : 
; 2626 : 		return true;

  00582	b0 01		 mov	 al, 1
  00584	e9 0c 08 00 00	 jmp	 $LN1@OnDBLogonS
$LN14@OnDBLogonS:

; 2627 : 	}
; 2628 : 
; 2629 : 	//最高分数
; 2630 : 	if ((m_pGameServiceOption->lMaxEnterScore != 0L) && (pDBOLogonSuccess->bConsumptionType.lScore>m_pGameServiceOption->lMaxEnterScore))

  00589	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0058c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0058f	89 8d a8 f6 ff
	ff		 mov	 DWORD PTR tv1072[ebp], ecx
  00595	8b 95 a8 f6 ff
	ff		 mov	 edx, DWORD PTR tv1072[ebp]
  0059b	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1072[ebp]
  005a1	8b 4a 30	 mov	 ecx, DWORD PTR [edx+48]
  005a4	0b 48 34	 or	 ecx, DWORD PTR [eax+52]
  005a7	0f 84 c7 00 00
	00		 je	 $LN15@OnDBLogonS
  005ad	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005b0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005b3	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  005b6	89 95 a8 f6 ff
	ff		 mov	 DWORD PTR tv1080[ebp], edx
  005bc	89 8d a4 f6 ff
	ff		 mov	 DWORD PTR tv1081[ebp], ecx
  005c2	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1080[ebp]
  005c8	8b 8d a4 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1081[ebp]
  005ce	8b 90 71 01 00
	00		 mov	 edx, DWORD PTR [eax+369]
  005d4	3b 51 34	 cmp	 edx, DWORD PTR [ecx+52]
  005d7	0f 8c 97 00 00
	00		 jl	 $LN15@OnDBLogonS
  005dd	7f 17		 jg	 SHORT $LN45@OnDBLogonS
  005df	8b 85 a8 f6 ff
	ff		 mov	 eax, DWORD PTR tv1080[ebp]
  005e5	8b 8d a4 f6 ff
	ff		 mov	 ecx, DWORD PTR tv1081[ebp]
  005eb	8b 90 6d 01 00
	00		 mov	 edx, DWORD PTR [eax+365]
  005f1	3b 51 30	 cmp	 edx, DWORD PTR [ecx+48]
  005f4	76 7e		 jbe	 SHORT $LN15@OnDBLogonS
$LN45@OnDBLogonS:

; 2631 : 	{
; 2632 : 		//发送失败
; 2633 : 		TCHAR szMsg[128]=TEXT("");

  005f6	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  005fb	88 85 b8 fe ff
	ff		 mov	 BYTE PTR _szMsg$3[ebp], al
  00601	6a 7f		 push	 127			; 0000007fH
  00603	6a 00		 push	 0
  00605	8d 85 b9 fe ff
	ff		 lea	 eax, DWORD PTR _szMsg$3[ebp+1]
  0060b	50		 push	 eax
  0060c	e8 00 00 00 00	 call	 _memset
  00611	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2634 : 		_sntprintf_s(szMsg,CountArray(szMsg), TEXT("抱歉，您的游戏成绩高于当前游戏房间的最高进入成绩%I64d，不能进入当前游戏房间！"), m_pGameServiceOption->lMaxEnterScore);

  00614	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00617	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0061a	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  0061d	52		 push	 edx
  0061e	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00621	50		 push	 eax
  00622	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@DKDPOCDP@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?S?N?O?$LH?$LD?I?$LM?$KI?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
  00627	68 80 00 00 00	 push	 128			; 00000080H
  0062c	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _szMsg$3[ebp]
  00632	51		 push	 ecx
  00633	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00638	83 c4 14	 add	 esp, 20			; 00000014H

; 2635 : 		SendLogonFailure(szMsg,0,pBindParameter->dwSocketID);

  0063b	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0063e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00640	51		 push	 ecx
  00641	6a 00		 push	 0
  00643	8d 95 b8 fe ff
	ff		 lea	 edx, DWORD PTR _szMsg$3[ebp]
  00649	52		 push	 edx
  0064a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0064d	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2636 : 
; 2637 : 		//解除锁定
; 2638 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_CONDITIONS);

  00652	6a 05		 push	 5
  00654	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00657	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  0065d	51		 push	 ecx
  0065e	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00661	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00664	50		 push	 eax
  00665	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2639 : 
; 2640 : 		return true;

  0066d	b0 01		 mov	 al, 1
  0066f	e9 21 07 00 00	 jmp	 $LN1@OnDBLogonS
$LN15@OnDBLogonS:

; 2641 : 	}
; 2642 : 
; 2643 : 	//会员判断
; 2644 : 	if(m_pGameServiceOption->cbMinEnterMember != 0 && pDBOLogonSuccess->cbMemberOrder < m_pGameServiceOption->cbMinEnterMember &&(pDBOLogonSuccess->cbMasterOrder==0))

  00674	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00677	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0067a	0f b6 51 38	 movzx	 edx, BYTE PTR [ecx+56]
  0067e	85 d2		 test	 edx, edx
  00680	74 57		 je	 SHORT $LN16@OnDBLogonS
  00682	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00685	0f b6 48 55	 movzx	 ecx, BYTE PTR [eax+85]
  00689	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0068c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0068f	0f b6 50 38	 movzx	 edx, BYTE PTR [eax+56]
  00693	3b ca		 cmp	 ecx, edx
  00695	7d 42		 jge	 SHORT $LN16@OnDBLogonS
  00697	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0069a	0f b6 48 56	 movzx	 ecx, BYTE PTR [eax+86]
  0069e	85 c9		 test	 ecx, ecx
  006a0	75 37		 jne	 SHORT $LN16@OnDBLogonS

; 2645 : 	{
; 2646 : 		//发送失败
; 2647 : 		SendLogonFailure(TEXT("抱歉，您的会员级别低于当前游戏房间的最低进入会员条件，不能进入当前游戏房间！"),0,pBindParameter->dwSocketID);

  006a2	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  006a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006a7	51		 push	 ecx
  006a8	6a 00		 push	 0
  006aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@LEGFOBHM@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LF?M?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
  006af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006b2	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2648 : 
; 2649 : 		//解除锁定
; 2650 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_CONDITIONS);

  006b7	6a 05		 push	 5
  006b9	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  006bc	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  006c2	51		 push	 ecx
  006c3	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  006c6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  006c9	50		 push	 eax
  006ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006cd	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2651 : 
; 2652 : 		return true;

  006d2	b0 01		 mov	 al, 1
  006d4	e9 bc 06 00 00	 jmp	 $LN1@OnDBLogonS
$LN16@OnDBLogonS:

; 2653 : 	}
; 2654 : 
; 2655 : 	//会员判断
; 2656 : 	if(m_pGameServiceOption->cbMaxEnterMember != 0 && pDBOLogonSuccess->cbMemberOrder > m_pGameServiceOption->cbMaxEnterMember &&(pDBOLogonSuccess->cbMasterOrder==0))

  006d9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006dc	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  006df	0f b6 51 39	 movzx	 edx, BYTE PTR [ecx+57]
  006e3	85 d2		 test	 edx, edx
  006e5	74 57		 je	 SHORT $LN17@OnDBLogonS
  006e7	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  006ea	0f b6 48 55	 movzx	 ecx, BYTE PTR [eax+85]
  006ee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006f1	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  006f4	0f b6 50 39	 movzx	 edx, BYTE PTR [eax+57]
  006f8	3b ca		 cmp	 ecx, edx
  006fa	7e 42		 jle	 SHORT $LN17@OnDBLogonS
  006fc	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  006ff	0f b6 48 56	 movzx	 ecx, BYTE PTR [eax+86]
  00703	85 c9		 test	 ecx, ecx
  00705	75 37		 jne	 SHORT $LN17@OnDBLogonS

; 2657 : 	{
; 2658 : 		//发送失败
; 2659 : 		SendLogonFailure(TEXT("抱歉，您的会员级别高于当前游戏房间的最高进入会员条件，不能进入当前游戏房间！"),0,pBindParameter->dwSocketID);

  00707	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0070a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0070c	51		 push	 ecx
  0070d	6a 00		 push	 0
  0070f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@HOOHFPLN@?$LB?$KH?G?$LI?$KD?$KM?D?z?$LF?D?$LL?a?T?$LB?$LM?$LG?$LB?p?$LI?$NP?S?Z?$LF?$LB?G?$LA?S?N?O?$LH?$LH@
  00714	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00717	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2660 : 
; 2661 : 		//解除锁定
; 2662 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_CONDITIONS);

  0071c	6a 05		 push	 5
  0071e	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00721	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  00727	51		 push	 ecx
  00728	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  0072b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0072e	50		 push	 eax
  0072f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00732	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2663 : 
; 2664 : 		return true;

  00737	b0 01		 mov	 al, 1
  00739	e9 57 06 00 00	 jmp	 $LN1@OnDBLogonS
$LN17@OnDBLogonS:

; 2665 : 	}
; 2666 : 
; 2667 : 	//满人判断
; 2668 : 	WORD wMaxPlayer=m_pGameServiceOption->wMaxPlayer;

  0073e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00741	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00744	66 8b 51 44	 mov	 dx, WORD PTR [ecx+68]
  00748	66 89 95 b4 fe
	ff ff		 mov	 WORD PTR _wMaxPlayer$[ebp], dx

; 2669 : 	DWORD dwOnlineCount=m_ServerUserManager.GetUserItemCount();

  0074f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00752	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00758	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0075b	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00761	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00764	ff d0		 call	 eax
  00766	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _dwOnlineCount$[ebp], eax

; 2670 : 	if ((pDBOLogonSuccess->cbMemberOrder==0)&&(pDBOLogonSuccess->cbMasterOrder==0)&&(dwOnlineCount>(DWORD)(wMaxPlayer-RESERVE_USER_COUNT)))

  0076c	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0076f	0f b6 48 55	 movzx	 ecx, BYTE PTR [eax+85]
  00773	85 c9		 test	 ecx, ecx
  00775	75 54		 jne	 SHORT $LN18@OnDBLogonS
  00777	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0077a	0f b6 48 56	 movzx	 ecx, BYTE PTR [eax+86]
  0077e	85 c9		 test	 ecx, ecx
  00780	75 49		 jne	 SHORT $LN18@OnDBLogonS
  00782	0f b7 85 b4 fe
	ff ff		 movzx	 eax, WORD PTR _wMaxPlayer$[ebp]
  00789	83 e8 28	 sub	 eax, 40			; 00000028H
  0078c	39 85 b0 fe ff
	ff		 cmp	 DWORD PTR _dwOnlineCount$[ebp], eax
  00792	76 37		 jbe	 SHORT $LN18@OnDBLogonS

; 2671 : 	{
; 2672 : 		//发送失败
; 2673 : 		SendLogonFailure(TEXT("抱歉，由于此房间已经人满，普通玩家不能继续进入了！"),0,pBindParameter->dwSocketID);

  00794	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00797	8b 08		 mov	 ecx, DWORD PTR [eax]
  00799	51		 push	 ecx
  0079a	6a 00		 push	 0
  0079c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@EDDOLGC@?$LB?$KH?G?$LI?$KD?$KM?S?I?S?Z?$LE?K?$LH?$LP?$LM?d?R?Q?$LO?$KN?H?K?B?z?$KD?$KM?F?U?M?$KI?M@
  007a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a4	e8 00 00 00 00	 call	 ?SendLogonFailure@CAttemperEngineSink@@IAE_NPBDJK@Z ; CAttemperEngineSink::SendLogonFailure

; 2674 : 
; 2675 : 		//解除锁定
; 2676 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_FULL);

  007a9	6a 04		 push	 4
  007ab	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  007ae	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  007b4	51		 push	 ecx
  007b5	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  007b8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  007bb	50		 push	 eax
  007bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007bf	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2677 : 
; 2678 : 		return true;

  007c4	b0 01		 mov	 al, 1
  007c6	e9 ca 05 00 00	 jmp	 $LN1@OnDBLogonS
$LN18@OnDBLogonS:

; 2679 : 	}
; 2680 : 
; 2681 : 	//用户变量
; 2682 : 	tagUserInfo UserInfo;
; 2683 : 	tagUserInfoPlus UserInfoPlus;
; 2684 : 	ZeroMemory(&UserInfo,sizeof(UserInfo));

  007cb	68 10 01 00 00	 push	 272			; 00000110H
  007d0	6a 00		 push	 0
  007d2	8d 85 a0 fd ff
	ff		 lea	 eax, DWORD PTR _UserInfo$[ebp]
  007d8	50		 push	 eax
  007d9	e8 00 00 00 00	 call	 _memset
  007de	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2685 : 	ZeroMemory(&UserInfoPlus,sizeof(UserInfoPlus));

  007e1	68 70 04 00 00	 push	 1136			; 00000470H
  007e6	6a 00		 push	 0
  007e8	8d 85 30 f9 ff
	ff		 lea	 eax, DWORD PTR _UserInfoPlus$[ebp]
  007ee	50		 push	 eax
  007ef	e8 00 00 00 00	 call	 _memset
  007f4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2686 : 
; 2687 : 	//属性资料
; 2688 : 	UserInfo.wFaceID=pDBOLogonSuccess->wFaceID;

  007f7	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  007fa	66 8b 08	 mov	 cx, WORD PTR [eax]
  007fd	66 89 8d 28 fe
	ff ff		 mov	 WORD PTR _UserInfo$[ebp+136], cx

; 2689 : 	UserInfo.dwUserID=pDBOLogonSuccess->dwUserID;

  00804	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00807	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0080a	89 8d a0 fd ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp], ecx

; 2690 : 	UserInfo.dwGameID=pDBOLogonSuccess->dwGameID;

  00810	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00813	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00816	89 8d a4 fd ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+4], ecx

; 2691 : 	UserInfo.dwGroupID=pDBOLogonSuccess->dwGroupID;

  0081c	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0081f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00822	89 8d a8 fd ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+8], ecx

; 2692 : 	UserInfo.dwCustomID=pDBOLogonSuccess->dwCustomID;

  00828	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0082b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0082e	89 8d 2a fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+138], ecx

; 2693 : 	lstrcpyn(UserInfo.szNickName,pDBOLogonSuccess->szNickName,CountArray(UserInfo.szNickName));

  00834	6a 20		 push	 32			; 00000020H
  00836	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00839	83 c0 14	 add	 eax, 20			; 00000014H
  0083c	50		 push	 eax
  0083d	8d 8d ac fd ff
	ff		 lea	 ecx, DWORD PTR _UserInfo$[ebp+12]
  00843	51		 push	 ecx
  00844	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2694 : 
; 2695 : 	//用户资料
; 2696 : 	UserInfo.cbGender=pDBOLogonSuccess->cbGender;

  0084a	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0084d	8a 48 54	 mov	 cl, BYTE PTR [eax+84]
  00850	88 8d 2e fe ff
	ff		 mov	 BYTE PTR _UserInfo$[ebp+142], cl

; 2697 : 	UserInfo.cbMemberOrder=pDBOLogonSuccess->cbMemberOrder;

  00856	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00859	8a 48 55	 mov	 cl, BYTE PTR [eax+85]
  0085c	88 8d 2f fe ff
	ff		 mov	 BYTE PTR _UserInfo$[ebp+143], cl

; 2698 : 	UserInfo.cbMasterOrder=pDBOLogonSuccess->cbMasterOrder;

  00862	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00865	8a 48 56	 mov	 cl, BYTE PTR [eax+86]
  00868	88 8d 30 fe ff
	ff		 mov	 BYTE PTR _UserInfo$[ebp+144], cl

; 2699 : 	lstrcpyn(UserInfo.szGroupName,pDBOLogonSuccess->szGroupName,CountArray(UserInfo.szGroupName));

  0086e	6a 20		 push	 32			; 00000020H
  00870	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00873	83 c0 34	 add	 eax, 52			; 00000034H
  00876	50		 push	 eax
  00877	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR _UserInfo$[ebp+44]
  0087d	51		 push	 ecx
  0087e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2700 : 	lstrcpyn(UserInfo.szUnderWrite,pDBOLogonSuccess->szUnderWrite,CountArray(UserInfo.szUnderWrite));

  00884	6a 20		 push	 32			; 00000020H
  00886	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00889	83 c0 57	 add	 eax, 87			; 00000057H
  0088c	50		 push	 eax
  0088d	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _UserInfo$[ebp+76]
  00893	51		 push	 ecx
  00894	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2701 : 
; 2702 : 	//附属资料
; 2703 : 	lstrcpyn(UserInfo.szQQ,pDBOLogonSuccess->szQQ,CountArray(UserInfo.szQQ));

  0089a	6a 10		 push	 16			; 00000010H
  0089c	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0089f	83 c0 77	 add	 eax, 119		; 00000077H
  008a2	50		 push	 eax
  008a3	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR _UserInfo$[ebp+108]
  008a9	51		 push	 ecx
  008aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2704 : 	lstrcpyn(UserInfo.szMobilePhone,pDBOLogonSuccess->szMobilePhone,CountArray(UserInfo.szMobilePhone));

  008b0	6a 0c		 push	 12			; 0000000cH
  008b2	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  008b5	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  008ba	50		 push	 eax
  008bb	8d 8d 1c fe ff
	ff		 lea	 ecx, DWORD PTR _UserInfo$[ebp+124]
  008c1	51		 push	 ecx
  008c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2705 : 
; 2706 : 	//状态设置
; 2707 : 	UserInfo.cbUserStatus=US_FREE;

  008c8	c6 85 37 fe ff
	ff 01		 mov	 BYTE PTR _UserInfo$[ebp+151], 1

; 2708 : 	UserInfo.wTableID=INVALID_TABLE;

  008cf	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  008d4	66 89 85 31 fe
	ff ff		 mov	 WORD PTR _UserInfo$[ebp+145], ax

; 2709 : 	UserInfo.wChairID=INVALID_CHAIR;

  008db	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  008e0	66 89 85 35 fe
	ff ff		 mov	 WORD PTR _UserInfo$[ebp+149], ax

; 2710 : 
; 2711 : 	//积分信息
; 2712 : 	/*UserInfo.lScore=pDBOLogonSuccess->lScore;
; 2713 : 	UserInfo.lGrade=pDBOLogonSuccess->lGrade;
; 2714 : 	UserInfo.lIngot=pDBOLogonSuccess->lIngot;
; 2715 : 	UserInfo.lInsure=pDBOLogonSuccess->lInsure;
; 2716 : 	UserInfo.dBeans=pDBOLogonSuccess->dBeans;
; 2717 : 	UserInfo.lDiamond = pDBOLogonSuccess->lDimand;*/
; 2718 : 	UserInfo.bConsumptionType = pDBOLogonSuccess->bConsumptionType;

  008e7	8b 75 ec	 mov	 esi, DWORD PTR _pDBOLogonSuccess$[ebp]
  008ea	81 c6 5d 01 00
	00		 add	 esi, 349		; 0000015dH
  008f0	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  008f5	8d bd 38 fe ff
	ff		 lea	 edi, DWORD PTR _UserInfo$[ebp+152]
  008fb	f3 a5		 rep movsd

; 2719 : 
; 2720 : 	UserInfo.dwWinCount=pDBOLogonSuccess->dwWinCount;

  008fd	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00900	8b 88 a0 01 00
	00		 mov	 ecx, DWORD PTR [eax+416]
  00906	89 8d 78 fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+216], ecx

; 2721 : 	UserInfo.dwLostCount=pDBOLogonSuccess->dwLostCount;

  0090c	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0090f	8b 88 a4 01 00
	00		 mov	 ecx, DWORD PTR [eax+420]
  00915	89 8d 7c fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+220], ecx

; 2722 : 	UserInfo.dwDrawCount=pDBOLogonSuccess->dwDrawCount;

  0091b	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0091e	8b 88 a8 01 00
	00		 mov	 ecx, DWORD PTR [eax+424]
  00924	89 8d 80 fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+224], ecx

; 2723 : 	UserInfo.dwFleeCount=pDBOLogonSuccess->dwFleeCount;	

  0092a	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0092d	8b 88 ac 01 00
	00		 mov	 ecx, DWORD PTR [eax+428]
  00933	89 8d 84 fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+228], ecx

; 2724 : 	UserInfo.dwExperience=pDBOLogonSuccess->dwExperience;

  00939	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0093c	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  00942	89 8d 8c fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+236], ecx

; 2725 : 	UserInfo.lLoveLiness=pDBOLogonSuccess->lLoveLiness;

  00948	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0094b	8b 88 b4 01 00
	00		 mov	 ecx, DWORD PTR [eax+436]
  00951	89 8d 90 fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+240], ecx

; 2726 : 	UserInfo.lIntegralCount=pDBOLogonSuccess->lIntegralCount;

  00957	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  0095a	8b 88 b8 01 00
	00		 mov	 ecx, DWORD PTR [eax+440]
  00960	89 8d 94 fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+244], ecx
  00966	8b 90 bc 01 00
	00		 mov	 edx, DWORD PTR [eax+444]
  0096c	89 95 98 fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+248], edx

; 2727 : 
; 2728 : 	//代理信息
; 2729 : 	UserInfo.dwAgentID=pDBOLogonSuccess->dwAgentID;

  00972	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00975	8b 88 c0 01 00
	00		 mov	 ecx, DWORD PTR [eax+448]
  0097b	89 8d 9c fe ff
	ff		 mov	 DWORD PTR _UserInfo$[ebp+252], ecx

; 2730 : 
; 2731 : 	//登录信息
; 2732 : 	UserInfoPlus.dwLogonTime=(DWORD)time(NULL);

  00981	6a 00		 push	 0
  00983	e8 00 00 00 00	 call	 _time
  00988	83 c4 04	 add	 esp, 4
  0098b	89 85 30 f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp], eax

; 2733 : 	UserInfoPlus.dwInoutIndex=pDBOLogonSuccess->dwInoutIndex;

  00991	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00994	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  0099a	89 8d 34 f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp+4], ecx

; 2734 : 
; 2735 : 	//用户权限
; 2736 : 	UserInfoPlus.dwUserRight=pDBOLogonSuccess->dwUserRight;

  009a0	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  009a3	8b 88 c4 01 00
	00		 mov	 ecx, DWORD PTR [eax+452]
  009a9	89 8d 64 f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp+52], ecx

; 2737 : 	UserInfoPlus.dwMasterRight=pDBOLogonSuccess->dwMasterRight;

  009af	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  009b2	8b 88 c8 01 00
	00		 mov	 ecx, DWORD PTR [eax+456]
  009b8	89 8d 68 f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp+56], ecx

; 2738 : 
; 2739 : 	//辅助变量
; 2740 : 	UserInfoPlus.bMobileUser=bMobileUser;

  009be	8a 45 ea	 mov	 al, BYTE PTR _bMobileUser$[ebp]
  009c1	88 85 78 f9 ff
	ff		 mov	 BYTE PTR _UserInfoPlus$[ebp+72], al

; 2741 : 	UserInfoPlus.bAndroidUser=bAndroidUser;

  009c7	8a 45 eb	 mov	 al, BYTE PTR _bAndroidUser$[ebp]
  009ca	88 85 79 f9 ff
	ff		 mov	 BYTE PTR _UserInfoPlus$[ebp+73], al

; 2742 : 	UserInfoPlus.lRestrictScore=m_pGameServiceOption->lRestrictScore;

  009d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  009d3	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  009d6	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  009d9	89 95 70 f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp+64], edx
  009df	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  009e2	89 85 74 f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp+68], eax

; 2743 : 	lstrcpyn(UserInfoPlus.szPassword,pDBOLogonSuccess->szPassword,CountArray(UserInfoPlus.szPassword));

  009e8	6a 21		 push	 33			; 00000021H
  009ea	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  009ed	05 12 02 00 00	 add	 eax, 530		; 00000212H
  009f2	50		 push	 eax
  009f3	8d 8d 7a f9 ff
	ff		 lea	 ecx, DWORD PTR _UserInfoPlus$[ebp+74]
  009f9	51		 push	 ecx
  009fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2744 : 	lstrcpyn(UserInfoPlus.szUserGameData,pDBOLogonSuccess->szUserGameData,CountArray(UserInfoPlus.szUserGameData));

  00a00	68 00 04 00 00	 push	 1024			; 00000400H
  00a05	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00a08	05 b3 02 00 00	 add	 eax, 691		; 000002b3H
  00a0d	50		 push	 eax
  00a0e	8d 8d 9b f9 ff
	ff		 lea	 ecx, DWORD PTR _UserInfoPlus$[ebp+107]
  00a14	51		 push	 ecx
  00a15	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2745 : 
; 2746 : 	//连接信息
; 2747 : 	UserInfoPlus.wBindIndex=wBindIndex;

  00a1b	66 8b 45 f4	 mov	 ax, WORD PTR _wBindIndex$[ebp]
  00a1f	66 89 85 38 f9
	ff ff		 mov	 WORD PTR _UserInfoPlus$[ebp+8], ax

; 2748 : 	UserInfoPlus.dwClientAddr=pBindParameter->dwClientAddr;

  00a26	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00a29	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a2c	89 8d 3c f9 ff
	ff		 mov	 DWORD PTR _UserInfoPlus$[ebp+12], ecx

; 2749 : 	lstrcpyn(UserInfoPlus.szMachineID,pDBOLogonSuccess->szMachineID,CountArray(UserInfoPlus.szMachineID));

  00a32	6a 21		 push	 33			; 00000021H
  00a34	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00a37	05 d0 01 00 00	 add	 eax, 464		; 000001d0H
  00a3c	50		 push	 eax
  00a3d	8d 8d 40 f9 ff
	ff		 lea	 ecx, DWORD PTR _UserInfoPlus$[ebp+16]
  00a43	51		 push	 ecx
  00a44	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2750 : 
; 2751 : 	//激活用户
; 2752 : 	m_ServerUserManager.InsertUserItem(&pIServerUserItem,UserInfo,UserInfoPlus);

  00a4a	8d 85 30 f9 ff
	ff		 lea	 eax, DWORD PTR _UserInfoPlus$[ebp]
  00a50	50		 push	 eax
  00a51	8d 8d a0 fd ff
	ff		 lea	 ecx, DWORD PTR _UserInfo$[ebp]
  00a57	51		 push	 ecx
  00a58	8d 55 dc	 lea	 edx, DWORD PTR _pIServerUserItem$[ebp]
  00a5b	52		 push	 edx
  00a5c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a5f	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00a65	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a68	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00a6e	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00a71	ff d0		 call	 eax

; 2753 : 
; 2754 : 	//用户任务
; 2755 : 	if(pDBOLogonSuccess->wTaskCount>0)

  00a73	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00a76	0f b7 88 b4 06
	00 00		 movzx	 ecx, WORD PTR [eax+1716]
  00a7d	85 c9		 test	 ecx, ecx
  00a7f	7e 3a		 jle	 SHORT $LN19@OnDBLogonS

; 2756 : 	{
; 2757 : 		m_UserTaskManager.SetUserTaskInfo(pIServerUserItem->GetUserID(),pDBOLogonSuccess->UserTaskInfo,pDBOLogonSuccess->wTaskCount);

  00a81	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00a84	0f b7 88 b4 06
	00 00		 movzx	 ecx, WORD PTR [eax+1716]
  00a8b	51		 push	 ecx
  00a8c	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00a8f	81 c2 b8 06 00
	00		 add	 edx, 1720		; 000006b8H
  00a95	52		 push	 edx
  00a96	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00a99	8b 10		 mov	 edx, DWORD PTR [eax]
  00a9b	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00a9e	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00aa1	ff d0		 call	 eax
  00aa3	50		 push	 eax
  00aa4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa7	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  00aad	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00ab0	8b 82 bc 3e 02
	00		 mov	 eax, DWORD PTR [edx+147132]
  00ab6	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00ab9	ff d2		 call	 edx
$LN19@OnDBLogonS:

; 2758 : 	}
; 2759 : 
; 2760 : 	//错误判断
; 2761 : 	if (pIServerUserItem==NULL)

  00abb	83 7d dc 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00abf	0f 85 87 00 00
	00		 jne	 $LN20@OnDBLogonS

; 2762 : 	{
; 2763 : 		//错误断言
; 2764 : 		ASSERT(FALSE);

  00ac5	33 c0		 xor	 eax, eax
  00ac7	75 1c		 jne	 SHORT $LN37@OnDBLogonS
  00ac9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00acf	81 c1 fd 00 00
	00		 add	 ecx, 253		; 000000fdH
  00ad5	51		 push	 ecx
  00ad6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00adb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00ae0	85 c0		 test	 eax, eax
  00ae2	74 01		 je	 SHORT $LN37@OnDBLogonS
  00ae4	cc		 int	 3
$LN37@OnDBLogonS:

; 2765 : 
; 2766 : 		//解除锁定
; 2767 : 		PerformUnlockScore(pDBOLogonSuccess->dwUserID,pDBOLogonSuccess->dwInoutIndex,LER_SERVER_FULL);

  00ae5	6a 04		 push	 4
  00ae7	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00aea	8b 88 cc 01 00
	00		 mov	 ecx, DWORD PTR [eax+460]
  00af0	51		 push	 ecx
  00af1	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00af4	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00af7	50		 push	 eax
  00af8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00afb	e8 00 00 00 00	 call	 ?PerformUnlockScore@CAttemperEngineSink@@IAE_NKKK@Z ; CAttemperEngineSink::PerformUnlockScore

; 2768 : 
; 2769 : 		//断开用户
; 2770 : 		if (bAndroidUser==true)

  00b00	0f b6 45 eb	 movzx	 eax, BYTE PTR _bAndroidUser$[ebp]
  00b04	83 f8 01	 cmp	 eax, 1
  00b07	75 1f		 jne	 SHORT $LN21@OnDBLogonS

; 2771 : 		{
; 2772 : 			m_AndroidUserManager.DeleteAndroidUserItem(dwContextID,true);

  00b09	6a 01		 push	 1
  00b0b	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00b0e	50		 push	 eax
  00b0f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b12	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00b18	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b1b	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  00b21	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00b24	ff d2		 call	 edx

; 2773 : 		}
; 2774 : 		else

  00b26	eb 1d		 jmp	 SHORT $LN22@OnDBLogonS
$LN21@OnDBLogonS:

; 2775 : 		{
; 2776 : 			m_pITCPNetworkEngine->ShutDownSocket(dwContextID);

  00b28	8b 45 08	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00b2b	50		 push	 eax
  00b2c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b2f	8b 91 b4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147380]
  00b35	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b38	8b 12		 mov	 edx, DWORD PTR [edx]
  00b3a	8b 88 b4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147380]
  00b40	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00b43	ff d0		 call	 eax
$LN22@OnDBLogonS:

; 2777 : 		}
; 2778 : 
; 2779 : 		return true;

  00b45	b0 01		 mov	 al, 1
  00b47	e9 49 02 00 00	 jmp	 $LN1@OnDBLogonS
$LN20@OnDBLogonS:

; 2780 : 	}
; 2781 : 
; 2782 : 	//设置用户
; 2783 : 	pBindParameter->pIServerUserItem=pIServerUserItem;

  00b4c	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00b4f	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00b52	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 2784 : 
; 2785 : 	//修改参数
; 2786 : 	if(pIServerUserItem->IsMobileUser())

  00b55	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00b58	8b 10		 mov	 edx, DWORD PTR [eax]
  00b5a	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00b5d	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  00b63	ff d0		 call	 eax
  00b65	0f b6 c8	 movzx	 ecx, al
  00b68	85 c9		 test	 ecx, ecx
  00b6a	74 2d		 je	 SHORT $LN23@OnDBLogonS

; 2787 : 	{
; 2788 : 		SetMobileUserParameter(pIServerUserItem,pDBOLogonSuccess->cbDeviceType,pDBOLogonSuccess->wBehaviorFlags,pDBOLogonSuccess->wPageTableCount);

  00b6c	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00b6f	0f b7 88 10 02
	00 00		 movzx	 ecx, WORD PTR [eax+528]
  00b76	51		 push	 ecx
  00b77	8b 55 ec	 mov	 edx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00b7a	0f b7 82 0e 02
	00 00		 movzx	 eax, WORD PTR [edx+526]
  00b81	50		 push	 eax
  00b82	8b 4d ec	 mov	 ecx, DWORD PTR _pDBOLogonSuccess$[ebp]
  00b85	0f b6 91 0c 02
	00 00		 movzx	 edx, BYTE PTR [ecx+524]
  00b8c	52		 push	 edx
  00b8d	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00b90	50		 push	 eax
  00b91	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b94	e8 00 00 00 00	 call	 ?SetMobileUserParameter@CAttemperEngineSink@@IAEXPAUIServerUserItem@@EGG@Z ; CAttemperEngineSink::SetMobileUserParameter
$LN23@OnDBLogonS:

; 2789 : 	}
; 2790 : 
; 2791 : 	//报名状态
; 2792 : 	if ((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)!=0)

  00b99	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00b9c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00b9f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00ba3	83 e2 04	 and	 edx, 4
  00ba6	74 4b		 je	 SHORT $LN24@OnDBLogonS

; 2793 : 	{
; 2794 : 		pIServerUserItem->SetUserMatchStatus(CUserRight::IsGameMatchUser(pIServerUserItem->GetUserRight())?MUS_SIGNUPED:MUS_NULL);

  00ba8	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00bab	8b 10		 mov	 edx, DWORD PTR [eax]
  00bad	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00bb0	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00bb3	ff d0		 call	 eax
  00bb5	50		 push	 eax
  00bb6	e8 00 00 00 00	 call	 ?IsGameMatchUser@CUserRight@@SA_NK@Z ; CUserRight::IsGameMatchUser
  00bbb	83 c4 04	 add	 esp, 4
  00bbe	0f b6 c8	 movzx	 ecx, al
  00bc1	85 c9		 test	 ecx, ecx
  00bc3	74 0c		 je	 SHORT $LN38@OnDBLogonS
  00bc5	c7 85 a8 f6 ff
	ff 02 00 00 00	 mov	 DWORD PTR tv636[ebp], 2
  00bcf	eb 0a		 jmp	 SHORT $LN39@OnDBLogonS
$LN38@OnDBLogonS:
  00bd1	c7 85 a8 f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv636[ebp], 0
$LN39@OnDBLogonS:
  00bdb	0f b6 95 a8 f6
	ff ff		 movzx	 edx, BYTE PTR tv636[ebp]
  00be2	52		 push	 edx
  00be3	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00be6	8b 10		 mov	 edx, DWORD PTR [eax]
  00be8	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00beb	8b 82 ec 00 00
	00		 mov	 eax, DWORD PTR [edx+236]
  00bf1	ff d0		 call	 eax
$LN24@OnDBLogonS:

; 2795 : 	}
; 2796 : 
; 2797 : 	//登录事件
; 2798 : 	OnEventUserLogon(pIServerUserItem,false);

  00bf3	6a 00		 push	 0
  00bf5	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00bf8	50		 push	 eax
  00bf9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bfc	e8 00 00 00 00	 call	 ?OnEventUserLogon@CAttemperEngineSink@@IAEXPAUIServerUserItem@@_N@Z ; CAttemperEngineSink::OnEventUserLogon

; 2799 : 
; 2800 : 	//汇总用户
; 2801 : 	if (m_bCollectUser==true)

  00c01	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00c04	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00c08	83 f9 01	 cmp	 ecx, 1
  00c0b	0f 85 20 01 00
	00		 jne	 $LN25@OnDBLogonS

; 2802 : 	{
; 2803 : 		//变量定义
; 2804 : 		CMD_CS_C_UserEnter UserEnter;
; 2805 : 		ZeroMemory(&UserEnter,sizeof(UserEnter));

  00c11	68 3b 01 00 00	 push	 315			; 0000013bH
  00c16	6a 00		 push	 0
  00c18	8d 85 f4 f7 ff
	ff		 lea	 eax, DWORD PTR _UserEnter$2[ebp]
  00c1e	50		 push	 eax
  00c1f	e8 00 00 00 00	 call	 _memset
  00c24	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2806 : 
; 2807 : 		//设置变量
; 2808 : 		UserEnter.dwUserID=pIServerUserItem->GetUserID();

  00c27	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c2a	8b 10		 mov	 edx, DWORD PTR [eax]
  00c2c	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c2f	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00c32	ff d0		 call	 eax
  00c34	89 85 f4 f7 ff
	ff		 mov	 DWORD PTR _UserEnter$2[ebp], eax

; 2809 : 		UserEnter.dwGameID=pIServerUserItem->GetGameID();

  00c3a	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c3d	8b 10		 mov	 edx, DWORD PTR [eax]
  00c3f	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c42	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00c45	ff d0		 call	 eax
  00c47	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _UserEnter$2[ebp+4], eax

; 2810 : 		lstrcpyn(UserEnter.szNickName,pIServerUserItem->GetNickName(),CountArray(UserEnter.szNickName));

  00c4d	6a 20		 push	 32			; 00000020H
  00c4f	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c52	8b 10		 mov	 edx, DWORD PTR [eax]
  00c54	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c57	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00c5a	ff d0		 call	 eax
  00c5c	50		 push	 eax
  00c5d	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _UserEnter$2[ebp+8]
  00c63	51		 push	 ecx
  00c64	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2811 : 
; 2812 : 		//辅助信息
; 2813 : 		UserEnter.cbGender=pIServerUserItem->GetGender();

  00c6a	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c6d	8b 10		 mov	 edx, DWORD PTR [eax]
  00c6f	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c72	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00c75	ff d0		 call	 eax
  00c77	88 85 1c f8 ff
	ff		 mov	 BYTE PTR _UserEnter$2[ebp+40], al

; 2814 : 		UserEnter.cbMemberOrder=pIServerUserItem->GetMemberOrder();

  00c7d	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c80	8b 10		 mov	 edx, DWORD PTR [eax]
  00c82	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c85	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  00c8b	ff d0		 call	 eax
  00c8d	88 85 1d f8 ff
	ff		 mov	 BYTE PTR _UserEnter$2[ebp+41], al

; 2815 : 		UserEnter.cbMasterOrder=pIServerUserItem->GetMasterOrder();

  00c93	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00c96	8b 10		 mov	 edx, DWORD PTR [eax]
  00c98	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00c9b	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00ca1	ff d0		 call	 eax
  00ca3	88 85 1e f8 ff
	ff		 mov	 BYTE PTR _UserEnter$2[ebp+42], al

; 2816 : 
; 2817 : 		//用户详细信息
; 2818 : 		tagUserInfo* pUserInfo = pIServerUserItem->GetUserInfo();

  00ca9	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00cac	8b 10		 mov	 edx, DWORD PTR [eax]
  00cae	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00cb1	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00cb4	ff d0		 call	 eax
  00cb6	89 85 f0 f7 ff
	ff		 mov	 DWORD PTR _pUserInfo$1[ebp], eax

; 2819 : 		if(pUserInfo != NULL) memcpy(&UserEnter.userInfo, pUserInfo, sizeof(tagUserInfo));

  00cbc	83 bd f0 f7 ff
	ff 00		 cmp	 DWORD PTR _pUserInfo$1[ebp], 0
  00cc3	74 1b		 je	 SHORT $LN26@OnDBLogonS
  00cc5	68 10 01 00 00	 push	 272			; 00000110H
  00cca	8b 85 f0 f7 ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00cd0	50		 push	 eax
  00cd1	8d 8d 1f f8 ff
	ff		 lea	 ecx, DWORD PTR _UserEnter$2[ebp+43]
  00cd7	51		 push	 ecx
  00cd8	e8 00 00 00 00	 call	 _memcpy
  00cdd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@OnDBLogonS:

; 2820 : 
; 2821 : 		//发送消息
; 2822 : 		ASSERT(m_pITCPSocketService!=NULL);

  00ce0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ce3	83 b8 b0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147376], 0
  00cea	75 1c		 jne	 SHORT $LN40@OnDBLogonS
  00cec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z@4JA
  00cf2	81 c1 37 01 00
	00		 add	 ecx, 311		; 00000137H
  00cf8	51		 push	 ecx
  00cf9	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00cfe	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00d03	85 c0		 test	 eax, eax
  00d05	74 01		 je	 SHORT $LN40@OnDBLogonS
  00d07	cc		 int	 3
$LN40@OnDBLogonS:

; 2823 : 		m_pITCPSocketService->SendData(MDM_CS_USER_COLLECT,SUB_CS_C_USER_ENTER,&UserEnter,sizeof(UserEnter));

  00d08	68 3b 01 00 00	 push	 315			; 0000013bH
  00d0d	8d 85 f4 f7 ff
	ff		 lea	 eax, DWORD PTR _UserEnter$2[ebp]
  00d13	50		 push	 eax
  00d14	6a 01		 push	 1
  00d16	6a 03		 push	 3
  00d18	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d1b	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00d21	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d24	8b 12		 mov	 edx, DWORD PTR [edx]
  00d26	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00d2c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00d2f	ff d0		 call	 eax
$LN25@OnDBLogonS:

; 2824 : 	}
; 2825 : 	
; 2826 : 	//检测道具Buff
; 2827 : 	DWORD UserID = pDBOLogonSuccess->dwUserID;

  00d31	8b 45 ec	 mov	 eax, DWORD PTR _pDBOLogonSuccess$[ebp]
  00d34	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00d37	89 8d ec f7 ff
	ff		 mov	 DWORD PTR _UserID$[ebp], ecx

; 2828 : 	m_pIRecordDataBaseEngine->PostDataBaseRequest(DBR_GR_LOAD_GAME_BUFF,dwContextID,(void*)&UserID,sizeof(UserID));

  00d3d	6a 04		 push	 4
  00d3f	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _UserID$[ebp]
  00d45	50		 push	 eax
  00d46	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00d49	51		 push	 ecx
  00d4a	68 32 01 00 00	 push	 306			; 00000132H
  00d4f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00d52	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  00d58	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d5b	8b 10		 mov	 edx, DWORD PTR [eax]
  00d5d	8b 89 cc 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147404]
  00d63	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00d66	ff d0		 call	 eax

; 2829 : 
; 2830 : 	//背包喇叭
; 2831 : 	m_pIRecordDataBaseEngine->PostDataBaseRequest(DBR_GR_LOAD_TRUMPET,dwContextID,(void*)&UserID,sizeof(UserID));

  00d68	6a 04		 push	 4
  00d6a	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _UserID$[ebp]
  00d70	50		 push	 eax
  00d71	8b 4d 08	 mov	 ecx, DWORD PTR _dwContextID$[ebp]
  00d74	51		 push	 ecx
  00d75	68 35 01 00 00	 push	 309			; 00000135H
  00d7a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00d7d	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  00d83	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d86	8b 10		 mov	 edx, DWORD PTR [eax]
  00d88	8b 89 cc 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147404]
  00d8e	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00d91	ff d0		 call	 eax

; 2832 : 
; 2833 : 	return true;

  00d93	b0 01		 mov	 al, 1
$LN1@OnDBLogonS:

; 2834 : }

  00d95	5f		 pop	 edi
  00d96	5e		 pop	 esi
  00d97	5b		 pop	 ebx
  00d98	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00d9b	33 cd		 xor	 ecx, ebp
  00d9d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00da2	8b e5		 mov	 esp, ebp
  00da4	5d		 pop	 ebp
  00da5	c2 0c 00	 ret	 12			; 0000000cH
?OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ENDP ; CAttemperEngineSink::OnDBLogonSuccess
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z
_TEXT	SEGMENT
_wHeadSize1$ = -2100					; size = 2
_wDataSize1$ = -2096					; size = 2
_dwUserID$ = -2092					; size = 4
_WriteUserGameData$ = -2088				; size = 1036
_wHeadSize$ = -1052					; size = 2
_wDataSize$ = -1048					; size = 2
_UserGameData$ = -1044					; size = 1028
_nLenght$ = -16						; size = 4
_pszUserGameData$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_cbReason$ = 12						; size = 1
?OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z PROC ; CAttemperEngineSink::OnEventUserItemGameData, COMDAT
; _this$ = ecx

; 2469 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 09 00
	00		 sub	 esp, 2420		; 00000974H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2470 : 	//效验参数
; 2471 : 	ASSERT(pIServerUserItem!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 18		 jne	 SHORT $LN5@OnEventUse
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA
  00024	83 c0 02	 add	 eax, 2
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN5@OnEventUse
  00036	cc		 int	 3
$LN5@OnEventUse:

; 2472 : 	if (pIServerUserItem==NULL) return false;

  00037	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003b	75 07		 jne	 SHORT $LN2@OnEventUse
  0003d	32 c0		 xor	 al, al
  0003f	e9 ba 01 00 00	 jmp	 $LN1@OnEventUse
$LN2@OnEventUse:

; 2473 : 
; 2474 : 	LPCTSTR pszUserGameData=pIServerUserItem->GetUserGameData();

  00044	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0004c	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0004f	ff d0		 call	 eax
  00051	89 45 f4	 mov	 DWORD PTR _pszUserGameData$[ebp], eax

; 2475 : 	INT nLenght=lstrlen(pszUserGameData);

  00054	8b 45 f4	 mov	 eax, DWORD PTR _pszUserGameData$[ebp]
  00057	50		 push	 eax
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0005e	89 45 f0	 mov	 DWORD PTR _nLenght$[ebp], eax

; 2476 : 	
; 2477 : 	ASSERT(nLenght>0);

  00061	83 7d f0 00	 cmp	 DWORD PTR _nLenght$[ebp], 0
  00065	7f 18		 jg	 SHORT $LN6@OnEventUse
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA
  0006c	83 c0 08	 add	 eax, 8
  0006f	50		 push	 eax
  00070	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00075	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007a	85 c0		 test	 eax, eax
  0007c	74 01		 je	 SHORT $LN6@OnEventUse
  0007e	cc		 int	 3
$LN6@OnEventUse:

; 2478 : 	if (nLenght<=0) return false;

  0007f	83 7d f0 00	 cmp	 DWORD PTR _nLenght$[ebp], 0
  00083	7f 07		 jg	 SHORT $LN3@OnEventUse
  00085	32 c0		 xor	 al, al
  00087	e9 72 01 00 00	 jmp	 $LN1@OnEventUse
$LN3@OnEventUse:

; 2479 : 
; 2480 : 	CMD_GR_UserGameData UserGameData;
; 2481 : 	ZeroMemory(&UserGameData,sizeof(UserGameData));

  0008c	68 04 04 00 00	 push	 1028			; 00000404H
  00091	6a 00		 push	 0
  00093	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _UserGameData$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _memset
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2482 : 
; 2483 : 	UserGameData.dwUserID=pIServerUserItem->GetUserID();

  000a2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a5	8b 10		 mov	 edx, DWORD PTR [eax]
  000a7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000aa	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  000ad	ff d0		 call	 eax
  000af	89 85 ec fb ff
	ff		 mov	 DWORD PTR _UserGameData$[ebp], eax

; 2484 : 	lstrcpyn(UserGameData.szUserGameData,pszUserGameData,CountArray(UserGameData.szUserGameData));

  000b5	68 00 04 00 00	 push	 1024			; 00000400H
  000ba	8b 45 f4	 mov	 eax, DWORD PTR _pszUserGameData$[ebp]
  000bd	50		 push	 eax
  000be	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _UserGameData$[ebp+4]
  000c4	51		 push	 ecx
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2485 : 
; 2486 : 	//发送数据
; 2487 : 	WORD wDataSize=CountStringBuffer(UserGameData.szUserGameData);

  000cb	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _UserGameData$[ebp+4]
  000d1	50		 push	 eax
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000d8	83 c0 01	 add	 eax, 1
  000db	66 89 85 e8 fb
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 2488 : 	WORD wHeadSize=sizeof(UserGameData)-sizeof(UserGameData.szUserGameData);

  000e2	b8 04 00 00 00	 mov	 eax, 4
  000e7	66 89 85 e4 fb
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 2489 : 	SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_USER_GAME_DATA,&UserGameData,wHeadSize+wDataSize);

  000ee	0f b7 85 e4 fb
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  000f5	0f b7 8d e8 fb
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000fc	03 c1		 add	 eax, ecx
  000fe	50		 push	 eax
  000ff	8d 95 ec fb ff
	ff		 lea	 edx, DWORD PTR _UserGameData$[ebp]
  00105	52		 push	 edx
  00106	6a 68		 push	 104			; 00000068H
  00108	6a 03		 push	 3
  0010a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0010d	50		 push	 eax
  0010e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	83 e9 04	 sub	 ecx, 4
  00114	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00117	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  0011a	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0011d	ff d2		 call	 edx

; 2490 : 
; 2491 : 	//写数据库
; 2492 : 	DBR_GR_WriteUserGameData WriteUserGameData;
; 2493 : 	ZeroMemory(&WriteUserGameData,sizeof(WriteUserGameData));

  0011f	68 0c 04 00 00	 push	 1036			; 0000040cH
  00124	6a 00		 push	 0
  00126	8d 85 d8 f7 ff
	ff		 lea	 eax, DWORD PTR _WriteUserGameData$[ebp]
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 _memset
  00132	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2494 : 
; 2495 : 	WriteUserGameData.wKindID=m_pGameServiceOption->wKindID;

  00135	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00138	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0013b	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0013e	66 89 95 d8 f7
	ff ff		 mov	 WORD PTR _WriteUserGameData$[ebp], dx

; 2496 : 	WriteUserGameData.dwUserID=pIServerUserItem->GetUserID();

  00145	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00148	8b 10		 mov	 edx, DWORD PTR [eax]
  0014a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0014d	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00150	ff d0		 call	 eax
  00152	89 85 dc f7 ff
	ff		 mov	 DWORD PTR _WriteUserGameData$[ebp+4], eax

; 2497 : 	WriteUserGameData.dwClientAddr=pIServerUserItem->GetClientAddr();

  00158	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0015b	8b 10		 mov	 edx, DWORD PTR [eax]
  0015d	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00160	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00163	ff d0		 call	 eax
  00165	89 85 e0 f7 ff
	ff		 mov	 DWORD PTR _WriteUserGameData$[ebp+8], eax

; 2498 : 	lstrcpyn(WriteUserGameData.szUserGameData,pszUserGameData,CountArray(WriteUserGameData.szUserGameData));

  0016b	68 00 04 00 00	 push	 1024			; 00000400H
  00170	8b 45 f4	 mov	 eax, DWORD PTR _pszUserGameData$[ebp]
  00173	50		 push	 eax
  00174	8d 8d e4 f7 ff
	ff		 lea	 ecx, DWORD PTR _WriteUserGameData$[ebp+12]
  0017a	51		 push	 ecx
  0017b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2499 : 
; 2500 : 	//发送请求
; 2501 : 	DWORD dwUserID=pIServerUserItem->GetUserID();

  00181	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00184	8b 10		 mov	 edx, DWORD PTR [eax]
  00186	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00189	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0018c	ff d0		 call	 eax
  0018e	89 85 d4 f7 ff
	ff		 mov	 DWORD PTR _dwUserID$[ebp], eax

; 2502 : 	WORD wDataSize1=CountStringBuffer(WriteUserGameData.szUserGameData);

  00194	8d 85 e4 f7 ff
	ff		 lea	 eax, DWORD PTR _WriteUserGameData$[ebp+12]
  0019a	50		 push	 eax
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  001a1	83 c0 01	 add	 eax, 1
  001a4	66 89 85 d0 f7
	ff ff		 mov	 WORD PTR _wDataSize1$[ebp], ax

; 2503 : 	WORD wHeadSize1=sizeof(WriteUserGameData)-sizeof(WriteUserGameData.szUserGameData);

  001ab	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b0	66 89 85 cc f7
	ff ff		 mov	 WORD PTR _wHeadSize1$[ebp], ax

; 2504 : 	m_pIDBCorrespondManager->PostDataBaseRequest(dwUserID,DBR_GR_WRITE_USER_GAME_DATA,0,&WriteUserGameData,wHeadSize1+wDataSize1);

  001b7	6a 00		 push	 0
  001b9	0f b7 85 cc f7
	ff ff		 movzx	 eax, WORD PTR _wHeadSize1$[ebp]
  001c0	0f b7 8d d0 f7
	ff ff		 movzx	 ecx, WORD PTR _wDataSize1$[ebp]
  001c7	03 c1		 add	 eax, ecx
  001c9	50		 push	 eax
  001ca	8d 95 d8 f7 ff
	ff		 lea	 edx, DWORD PTR _WriteUserGameData$[ebp]
  001d0	52		 push	 edx
  001d1	6a 00		 push	 0
  001d3	68 f7 01 00 00	 push	 503			; 000001f7H
  001d8	8b 85 d4 f7 ff
	ff		 mov	 eax, DWORD PTR _dwUserID$[ebp]
  001de	50		 push	 eax
  001df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e2	8b 91 cc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147404]
  001e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001eb	8b 88 cc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147404]
  001f1	8b 12		 mov	 edx, DWORD PTR [edx]
  001f3	51		 push	 ecx
  001f4	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  001f7	ff d0		 call	 eax
  001f9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2505 : 
; 2506 : 	return true;

  001fc	b0 01		 mov	 al, 1
$LN1@OnEventUse:

; 2507 : }

  001fe	5f		 pop	 edi
  001ff	5e		 pop	 esi
  00200	5b		 pop	 ebx
  00201	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00204	33 cd		 xor	 ecx, ebp
  00206	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020b	8b e5		 mov	 esp, ebp
  0020d	5d		 pop	 ebp
  0020e	c2 08 00	 ret	 8
?OnEventUserItemGameData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z ENDP ; CAttemperEngineSink::OnEventUserItemGameData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z
_TEXT	SEGMENT
tv82 = -96						; size = 4
_ManageUserRight$ = -28					; size = 16
_pUserInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_dwAddRight$ = 12					; size = 4
_dwRemoveRight$ = 16					; size = 4
_cbRightKind$ = 20					; size = 1
?OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z PROC ; CAttemperEngineSink::OnEventUserItemRight, COMDAT
; _this$ = ecx

; 2446 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2447 : 	//效验参数
; 2448 : 	ASSERT(pIServerUserItem!=NULL);

  00016	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001a	75 18		 jne	 SHORT $LN4@OnEventUse
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z@4JA
  00021	83 c0 02	 add	 eax, 2
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002f	85 c0		 test	 eax, eax
  00031	74 01		 je	 SHORT $LN4@OnEventUse
  00033	cc		 int	 3
$LN4@OnEventUse:

; 2449 : 	if (pIServerUserItem==NULL) return false;

  00034	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00038	75 07		 jne	 SHORT $LN2@OnEventUse
  0003a	32 c0		 xor	 al, al
  0003c	e9 82 00 00 00	 jmp	 $LN1@OnEventUse
$LN2@OnEventUse:

; 2450 : 
; 2451 : 	//变量定义
; 2452 : 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  00041	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00049	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0004c	ff d0		 call	 eax
  0004e	89 45 f4	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 2453 : 
; 2454 : 	//比赛权限
; 2455 : 	DBR_GR_ManageUserRight ManageUserRight= {0};

  00051	33 c0		 xor	 eax, eax
  00053	89 45 e4	 mov	 DWORD PTR _ManageUserRight$[ebp], eax
  00056	89 45 e8	 mov	 DWORD PTR _ManageUserRight$[ebp+4], eax
  00059	89 45 ec	 mov	 DWORD PTR _ManageUserRight$[ebp+8], eax
  0005c	89 45 f0	 mov	 DWORD PTR _ManageUserRight$[ebp+12], eax

; 2456 : 	ManageUserRight.dwUserID = pUserInfo->dwUserID;

  0005f	8b 45 f4	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	89 4d e4	 mov	 DWORD PTR _ManageUserRight$[ebp], ecx

; 2457 : 	ManageUserRight.dwAddRight = dwAddRight;

  00067	8b 45 0c	 mov	 eax, DWORD PTR _dwAddRight$[ebp]
  0006a	89 45 e8	 mov	 DWORD PTR _ManageUserRight$[ebp+4], eax

; 2458 : 	ManageUserRight.dwRemoveRight = dwRemoveRight;

  0006d	8b 45 10	 mov	 eax, DWORD PTR _dwRemoveRight$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR _ManageUserRight$[ebp+8], eax

; 2459 : 	ManageUserRight.bGameRight=cbRightKind==UR_KIND_GAME;

  00073	0f b6 45 14	 movzx	 eax, BYTE PTR _cbRightKind$[ebp]
  00077	85 c0		 test	 eax, eax
  00079	75 09		 jne	 SHORT $LN5@OnEventUse
  0007b	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00082	eb 07		 jmp	 SHORT $LN6@OnEventUse
$LN5@OnEventUse:
  00084	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@OnEventUse:
  0008b	8a 4d a0	 mov	 cl, BYTE PTR tv82[ebp]
  0008e	88 4d f0	 mov	 BYTE PTR _ManageUserRight$[ebp+12], cl

; 2460 : 	
; 2461 : 	//发送请求
; 2462 : 	m_pIDBCorrespondManager->PostDataBaseRequest(ManageUserRight.dwUserID,DBR_GR_MANAGE_USER_RIGHT,0,&ManageUserRight,sizeof(ManageUserRight));

  00091	6a 00		 push	 0
  00093	6a 10		 push	 16			; 00000010H
  00095	8d 45 e4	 lea	 eax, DWORD PTR _ManageUserRight$[ebp]
  00098	50		 push	 eax
  00099	6a 00		 push	 0
  0009b	68 cb 00 00 00	 push	 203			; 000000cbH
  000a0	8b 4d e4	 mov	 ecx, DWORD PTR _ManageUserRight$[ebp]
  000a3	51		 push	 ecx
  000a4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a7	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b 91 cc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147404]
  000b6	8b 00		 mov	 eax, DWORD PTR [eax]
  000b8	52		 push	 edx
  000b9	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000bc	ff d1		 call	 ecx
  000be	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2463 : 
; 2464 : 	return true;

  000c1	b0 01		 mov	 al, 1
$LN1@OnEventUse:

; 2465 : }

  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c9	33 cd		 xor	 ecx, ebp
  000cb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c2 10 00	 ret	 16			; 00000010H
?OnEventUserItemRight@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@KKE@Z ENDP ; CAttemperEngineSink::OnEventUserItemRight
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z
_TEXT	SEGMENT
_pBindParameter$1 = -60					; size = 4
_wBindIndex$2 = -56					; size = 2
_Status$ = -52						; size = 13
_wMaxDeskPos$3 = -36					; size = 2
_wNewDeskPos$4 = -32					; size = 2
_cbUserStatus$ = -25					; size = 1
_wTableID$ = -24					; size = 2
_UserStatus$ = -20					; size = 9
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_wOldTableID$ = 12					; size = 2
_wOldChairID$ = 16					; size = 2
?OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z PROC ; CAttemperEngineSink::OnEventUserItemStatus, COMDAT
; _this$ = ecx

; 2330 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2331 : 	//效验参数
; 2332 : 	ASSERT(pIServerUserItem!=NULL);

  00016	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001a	75 18		 jne	 SHORT $LN23@OnEventUse
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z@4JA
  00021	83 c0 02	 add	 eax, 2
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002f	85 c0		 test	 eax, eax
  00031	74 01		 je	 SHORT $LN23@OnEventUse
  00033	cc		 int	 3
$LN23@OnEventUse:

; 2333 : 	if (pIServerUserItem==NULL) return false;

  00034	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00038	75 07		 jne	 SHORT $LN2@OnEventUse
  0003a	32 c0		 xor	 al, al
  0003c	e9 62 03 00 00	 jmp	 $LN1@OnEventUse
$LN2@OnEventUse:

; 2334 : 
; 2335 : 	//变量定义
; 2336 : 	CMD_GR_UserStatus UserStatus;
; 2337 : 	ZeroMemory(&UserStatus,sizeof(UserStatus));

  00041	6a 09		 push	 9
  00043	6a 00		 push	 0
  00045	8d 45 ec	 lea	 eax, DWORD PTR _UserStatus$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 _memset
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2338 : 
; 2339 : 	//构造数据
; 2340 : 	UserStatus.dwUserID=pIServerUserItem->GetUserID();

  00051	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00059	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  0005c	ff d0		 call	 eax
  0005e	89 45 ec	 mov	 DWORD PTR _UserStatus$[ebp], eax

; 2341 : 	UserStatus.UserStatus.wTableID=pIServerUserItem->GetTableID();

  00061	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00069	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0006c	ff d0		 call	 eax
  0006e	66 89 45 f0	 mov	 WORD PTR _UserStatus$[ebp+4], ax

; 2342 : 	UserStatus.UserStatus.wChairID=pIServerUserItem->GetChairID();

  00072	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00075	8b 10		 mov	 edx, DWORD PTR [eax]
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0007a	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  0007d	ff d0		 call	 eax
  0007f	66 89 45 f2	 mov	 WORD PTR _UserStatus$[ebp+6], ax

; 2343 : 	UserStatus.UserStatus.cbUserStatus=pIServerUserItem->GetUserStatus();

  00083	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0008b	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0008e	ff d0		 call	 eax
  00090	88 45 f4	 mov	 BYTE PTR _UserStatus$[ebp+8], al

; 2344 : 
; 2345 : 	//用户信息
; 2346 : 	WORD wTableID=pIServerUserItem->GetTableID();

  00093	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00096	8b 10		 mov	 edx, DWORD PTR [eax]
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0009b	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0009e	ff d0		 call	 eax
  000a0	66 89 45 e8	 mov	 WORD PTR _wTableID$[ebp], ax

; 2347 : 	BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  000a4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000ac	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000af	ff d0		 call	 eax
  000b1	88 45 e7	 mov	 BYTE PTR _cbUserStatus$[ebp], al

; 2348 : 
; 2349 : 	//修改信息
; 2350 : 	if(pIServerUserItem->GetUserStatus()>=US_SIT)

  000b4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000b7	8b 10		 mov	 edx, DWORD PTR [eax]
  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000bc	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  000bf	ff d0		 call	 eax
  000c1	0f b6 c8	 movzx	 ecx, al
  000c4	83 f9 02	 cmp	 ecx, 2
  000c7	7c 71		 jl	 SHORT $LN3@OnEventUse

; 2351 : 	{
; 2352 : 		//定义变量
; 2353 : 		WORD wNewDeskPos = (pIServerUserItem->GetTableID()/m_pInitParameter->m_wVisibleTableCount)*m_pInitParameter->m_wVisibleTableCount;

  000c9	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000cc	8b 10		 mov	 edx, DWORD PTR [eax]
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000d1	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  000d4	ff d0		 call	 eax
  000d6	0f b7 c0	 movzx	 eax, ax
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  000df	0f b7 4a 6c	 movzx	 ecx, WORD PTR [edx+108]
  000e3	99		 cdq
  000e4	f7 f9		 idiv	 ecx
  000e6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e9	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  000ec	0f b7 51 6c	 movzx	 edx, WORD PTR [ecx+108]
  000f0	0f af c2	 imul	 eax, edx
  000f3	66 89 45 e0	 mov	 WORD PTR _wNewDeskPos$4[ebp], ax

; 2354 : 		WORD wMaxDeskPos = m_pGameServiceOption->wTableCount-m_pInitParameter->m_wVisibleTableCount;

  000f7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000fd	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00101	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00107	0f b7 41 6c	 movzx	 eax, WORD PTR [ecx+108]
  0010b	2b d0		 sub	 edx, eax
  0010d	66 89 55 dc	 mov	 WORD PTR _wMaxDeskPos$3[ebp], dx

; 2355 : 		if(wNewDeskPos > wMaxDeskPos) wNewDeskPos = wMaxDeskPos;

  00111	0f b7 45 e0	 movzx	 eax, WORD PTR _wNewDeskPos$4[ebp]
  00115	0f b7 4d dc	 movzx	 ecx, WORD PTR _wMaxDeskPos$3[ebp]
  00119	3b c1		 cmp	 eax, ecx
  0011b	7e 08		 jle	 SHORT $LN4@OnEventUse
  0011d	66 8b 45 dc	 mov	 ax, WORD PTR _wMaxDeskPos$3[ebp]
  00121	66 89 45 e0	 mov	 WORD PTR _wNewDeskPos$4[ebp], ax
$LN4@OnEventUse:

; 2356 : 		pIServerUserItem->SetMobileUserDeskPos(wNewDeskPos);

  00125	0f b7 45 e0	 movzx	 eax, WORD PTR _wNewDeskPos$4[ebp]
  00129	50		 push	 eax
  0012a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0012d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00132	8b 82 30 01 00
	00		 mov	 eax, DWORD PTR [edx+304]
  00138	ff d0		 call	 eax
$LN3@OnEventUse:

; 2357 : 	}
; 2358 : 
; 2359 : 	//发送数据
; 2360 : 	SendData(BG_COMPUTER,MDM_GR_USER,SUB_GR_USER_STATUS,&UserStatus,sizeof(UserStatus));

  0013a	6a 09		 push	 9
  0013c	8d 45 ec	 lea	 eax, DWORD PTR _UserStatus$[ebp]
  0013f	50		 push	 eax
  00140	6a 66		 push	 102			; 00000066H
  00142	6a 03		 push	 3
  00144	6a 02		 push	 2
  00146	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	83 e9 04	 sub	 ecx, 4
  0014c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014f	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00152	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00155	ff d2		 call	 edx

; 2361 : 	if ((m_pGameServiceAttrib->wChairCount >= MAX_CHAIR) || (CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)==true))

  00157	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015a	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0015d	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00161	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00167	7d 1e		 jge	 SHORT $LN7@OnEventUse
  00169	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0016f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00172	52		 push	 edx
  00173	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  00178	83 c4 04	 add	 esp, 4
  0017b	0f b6 c0	 movzx	 eax, al
  0017e	83 f8 01	 cmp	 eax, 1
  00181	0f 85 86 00 00
	00		 jne	 $LN5@OnEventUse
$LN7@OnEventUse:

; 2362 : 	{
; 2363 : 		if (pIServerUserItem->IsMobileUser()==true)

  00187	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0018a	8b 10		 mov	 edx, DWORD PTR [eax]
  0018c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0018f	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  00195	ff d0		 call	 eax
  00197	0f b6 c8	 movzx	 ecx, al
  0019a	83 f9 01	 cmp	 ecx, 1
  0019d	75 21		 jne	 SHORT $LN8@OnEventUse

; 2364 : 		{
; 2365 : 			if (cbUserStatus==US_SIT || cbUserStatus==US_READY)

  0019f	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  001a3	83 f8 02	 cmp	 eax, 2
  001a6	74 09		 je	 SHORT $LN10@OnEventUse
  001a8	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  001ac	83 f8 03	 cmp	 eax, 3
  001af	75 0f		 jne	 SHORT $LN8@OnEventUse
$LN10@OnEventUse:

; 2366 : 			{
; 2367 : 				SendUserInfoPacketBatchToPage(pIServerUserItem);

  001b1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001b4	50		 push	 eax
  001b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b8	83 e9 08	 sub	 ecx, 8
  001bb	e8 00 00 00 00	 call	 ?SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::SendUserInfoPacketBatchToPage
$LN8@OnEventUse:

; 2368 : 			}
; 2369 : 		}
; 2370 : 		//发送消息
; 2371 : 		if(cbUserStatus>=US_SIT)

  001c0	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  001c4	83 f8 02	 cmp	 eax, 2
  001c7	7c 22		 jl	 SHORT $LN11@OnEventUse

; 2372 : 		{
; 2373 : 			SendDataBatchToMobileUser(wTableID,MDM_GR_USER,SUB_GR_USER_STATUS,&UserStatus,sizeof(UserStatus));

  001c9	6a 09		 push	 9
  001cb	8d 45 ec	 lea	 eax, DWORD PTR _UserStatus$[ebp]
  001ce	50		 push	 eax
  001cf	6a 66		 push	 102			; 00000066H
  001d1	6a 03		 push	 3
  001d3	0f b7 4d e8	 movzx	 ecx, WORD PTR _wTableID$[ebp]
  001d7	51		 push	 ecx
  001d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	83 e9 04	 sub	 ecx, 4
  001de	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001e1	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  001e4	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  001e7	ff d2		 call	 edx

; 2374 : 		}
; 2375 : 		else

  001e9	eb 20		 jmp	 SHORT $LN12@OnEventUse
$LN11@OnEventUse:

; 2376 : 		{
; 2377 : 			SendDataBatchToMobileUser(wOldTableID,MDM_GR_USER,SUB_GR_USER_STATUS,&UserStatus,sizeof(UserStatus));

  001eb	6a 09		 push	 9
  001ed	8d 45 ec	 lea	 eax, DWORD PTR _UserStatus$[ebp]
  001f0	50		 push	 eax
  001f1	6a 66		 push	 102			; 00000066H
  001f3	6a 03		 push	 3
  001f5	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wOldTableID$[ebp]
  001f9	51		 push	 ecx
  001fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fd	83 e9 04	 sub	 ecx, 4
  00200	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00203	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00206	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00209	ff d2		 call	 edx
$LN12@OnEventUse:

; 2378 : 		}
; 2379 : 	}
; 2380 : 	else

  0020b	eb 6e		 jmp	 SHORT $LN6@OnEventUse
$LN5@OnEventUse:

; 2381 : 	{
; 2382 : 		if(cbUserStatus>=US_SIT)

  0020d	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00211	83 f8 02	 cmp	 eax, 2
  00214	7c 45		 jl	 SHORT $LN13@OnEventUse

; 2383 : 		{
; 2384 : 			if (wOldTableID==INVALID_TABLE && cbUserStatus==US_SIT)

  00216	0f b7 45 0c	 movzx	 eax, WORD PTR _wOldTableID$[ebp]
  0021a	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0021f	75 18		 jne	 SHORT $LN15@OnEventUse
  00221	0f b6 45 e7	 movzx	 eax, BYTE PTR _cbUserStatus$[ebp]
  00225	83 f8 02	 cmp	 eax, 2
  00228	75 0f		 jne	 SHORT $LN15@OnEventUse

; 2385 : 			{
; 2386 : 				SendUserInfoPacketBatchToPage(pIServerUserItem);

  0022a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0022d	50		 push	 eax
  0022e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	83 e9 08	 sub	 ecx, 8
  00234	e8 00 00 00 00	 call	 ?SendUserInfoPacketBatchToPage@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@@Z ; CAttemperEngineSink::SendUserInfoPacketBatchToPage
$LN15@OnEventUse:

; 2387 : 			}	
; 2388 : 			SendDataBatchToMobileUser(wTableID,MDM_GR_USER,SUB_GR_USER_STATUS,&UserStatus,sizeof(UserStatus));

  00239	6a 09		 push	 9
  0023b	8d 45 ec	 lea	 eax, DWORD PTR _UserStatus$[ebp]
  0023e	50		 push	 eax
  0023f	6a 66		 push	 102			; 00000066H
  00241	6a 03		 push	 3
  00243	0f b7 4d e8	 movzx	 ecx, WORD PTR _wTableID$[ebp]
  00247	51		 push	 ecx
  00248	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0024b	83 e9 04	 sub	 ecx, 4
  0024e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00251	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00254	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00257	ff d2		 call	 edx

; 2389 : 		}
; 2390 : 		else

  00259	eb 20		 jmp	 SHORT $LN6@OnEventUse
$LN13@OnEventUse:

; 2391 : 		{
; 2392 : 			SendDataBatchToMobileUser(wOldTableID,MDM_GR_USER,SUB_GR_USER_STATUS,&UserStatus,sizeof(UserStatus));

  0025b	6a 09		 push	 9
  0025d	8d 45 ec	 lea	 eax, DWORD PTR _UserStatus$[ebp]
  00260	50		 push	 eax
  00261	6a 66		 push	 102			; 00000066H
  00263	6a 03		 push	 3
  00265	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wOldTableID$[ebp]
  00269	51		 push	 ecx
  0026a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	83 e9 04	 sub	 ecx, 4
  00270	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00273	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00276	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00279	ff d2		 call	 edx
$LN6@OnEventUse:

; 2393 : 		}
; 2394 : 	}
; 2395 : 
; 2396 : 	//发送玩家状态
; 2397 : 	CMD_CS_C_UserStatus  Status;
; 2398 : 	Status.dwUserID = UserStatus.dwUserID;

  0027b	8b 45 ec	 mov	 eax, DWORD PTR _UserStatus$[ebp]
  0027e	89 45 cc	 mov	 DWORD PTR _Status$[ebp], eax

; 2399 : 	Status.cbUserStatus = UserStatus.UserStatus.cbUserStatus;

  00281	8a 45 f4	 mov	 al, BYTE PTR _UserStatus$[ebp+8]
  00284	88 45 d0	 mov	 BYTE PTR _Status$[ebp+4], al

; 2400 : 	Status.wKindID  = m_pGameServiceOption->wKindID;

  00287	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0028a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0028d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00290	66 89 55 d1	 mov	 WORD PTR _Status$[ebp+5], dx

; 2401 : 	Status.wServerID =m_pGameServiceOption->wServerID;

  00294	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00297	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0029a	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  0029e	66 89 55 d3	 mov	 WORD PTR _Status$[ebp+7], dx

; 2402 : 	Status.wTableID = UserStatus.UserStatus.wTableID;

  002a2	66 8b 45 f0	 mov	 ax, WORD PTR _UserStatus$[ebp+4]
  002a6	66 89 45 d5	 mov	 WORD PTR _Status$[ebp+9], ax

; 2403 : 	Status.wChairID = UserStatus.UserStatus.wChairID;

  002aa	66 8b 45 f2	 mov	 ax, WORD PTR _UserStatus$[ebp+6]
  002ae	66 89 45 d7	 mov	 WORD PTR _Status$[ebp+11], ax

; 2404 : 	m_pITCPSocketService->SendData(MDM_CS_USER_COLLECT,SUB_CS_C_USER_STATUS,&Status,sizeof(Status));

  002b2	6a 0d		 push	 13			; 0000000dH
  002b4	8d 45 cc	 lea	 eax, DWORD PTR _Status$[ebp]
  002b7	50		 push	 eax
  002b8	6a 04		 push	 4
  002ba	6a 03		 push	 3
  002bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002bf	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  002c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002c8	8b 12		 mov	 edx, DWORD PTR [edx]
  002ca	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  002d0	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002d3	ff d0		 call	 eax

; 2405 : 
; 2406 : 
; 2407 : 	//离开判断
; 2408 : 	if (pIServerUserItem->GetUserStatus()==US_NULL)

  002d5	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002d8	8b 10		 mov	 edx, DWORD PTR [eax]
  002da	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002dd	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  002e0	ff d0		 call	 eax
  002e2	0f b6 c8	 movzx	 ecx, al
  002e5	85 c9		 test	 ecx, ecx
  002e7	0f 85 b4 00 00
	00		 jne	 $LN16@OnEventUse

; 2409 : 	{
; 2410 : 		//获取绑定
; 2411 : 		WORD wBindIndex=pIServerUserItem->GetBindIndex();

  002ed	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002f0	8b 10		 mov	 edx, DWORD PTR [eax]
  002f2	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002f5	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002f8	ff d0		 call	 eax
  002fa	66 89 45 c8	 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 2412 : 		tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  002fe	0f b7 45 c8	 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  00302	50		 push	 eax
  00303	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00306	83 e9 08	 sub	 ecx, 8
  00309	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0030c	8b 42 f8	 mov	 eax, DWORD PTR [edx-8]
  0030f	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00312	ff d2		 call	 edx
  00314	89 45 c4	 mov	 DWORD PTR _pBindParameter$1[ebp], eax

; 2413 : 
; 2414 : 		//绑带处理
; 2415 : 		if (pBindParameter!=NULL)

  00317	83 7d c4 00	 cmp	 DWORD PTR _pBindParameter$1[ebp], 0
  0031b	74 73		 je	 SHORT $LN17@OnEventUse

; 2416 : 		{
; 2417 : 			//绑定处理
; 2418 : 			if (pBindParameter->pIServerUserItem==pIServerUserItem)

  0031d	8b 45 c4	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  00320	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00323	3b 4d 08	 cmp	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00326	75 0a		 jne	 SHORT $LN18@OnEventUse

; 2419 : 			{
; 2420 : 				pBindParameter->pIServerUserItem=NULL;

  00328	8b 45 c4	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  0032b	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN18@OnEventUse:

; 2421 : 			}
; 2422 : 
; 2423 : 			//中断网络
; 2424 : 			if (pBindParameter->dwSocketID!=0L)

  00332	8b 45 c4	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  00335	83 38 00	 cmp	 DWORD PTR [eax], 0
  00338	74 56		 je	 SHORT $LN17@OnEventUse

; 2425 : 			{
; 2426 : 				if (LOWORD(pBindParameter->dwSocketID)>=INDEX_ANDROID)

  0033a	8b 45 c4	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00345	0f b7 d1	 movzx	 edx, cx
  00348	81 fa 00 20 00
	00		 cmp	 edx, 8192		; 00002000H
  0034e	7c 21		 jl	 SHORT $LN20@OnEventUse

; 2427 : 				{
; 2428 : 					m_AndroidUserManager.DeleteAndroidUserItem(pBindParameter->dwSocketID,false);

  00350	6a 00		 push	 0
  00352	8b 45 c4	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  00355	8b 08		 mov	 ecx, DWORD PTR [eax]
  00357	51		 push	 ecx
  00358	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035b	81 c1 20 de 00
	00		 add	 ecx, 56864		; 0000de20H
  00361	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00364	8b 82 20 de 00
	00		 mov	 eax, DWORD PTR [edx+56864]
  0036a	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0036d	ff d2		 call	 edx

; 2429 : 				}
; 2430 : 				else

  0036f	eb 1f		 jmp	 SHORT $LN17@OnEventUse
$LN20@OnEventUse:

; 2431 : 				{
; 2432 : 					m_pITCPNetworkEngine->ShutDownSocket(pBindParameter->dwSocketID);

  00371	8b 45 c4	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  00374	8b 08		 mov	 ecx, DWORD PTR [eax]
  00376	51		 push	 ecx
  00377	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0037a	8b 82 ac 3f 02
	00		 mov	 eax, DWORD PTR [edx+147372]
  00380	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00383	8b 10		 mov	 edx, DWORD PTR [eax]
  00385	8b 89 ac 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147372]
  0038b	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0038e	ff d0		 call	 eax
$LN17@OnEventUse:

; 2433 : 				}
; 2434 : 
; 2435 : 			}
; 2436 : 		}
; 2437 : 
; 2438 : 		//离开处理
; 2439 : 		OnEventUserLogout(pIServerUserItem,0L);

  00390	6a 00		 push	 0
  00392	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00395	50		 push	 eax
  00396	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00399	83 e9 08	 sub	 ecx, 8
  0039c	e8 00 00 00 00	 call	 ?OnEventUserLogout@CAttemperEngineSink@@IAEXPAUIServerUserItem@@K@Z ; CAttemperEngineSink::OnEventUserLogout
$LN16@OnEventUse:

; 2440 : 	}
; 2441 : 	return true;

  003a1	b0 01		 mov	 al, 1
$LN1@OnEventUse:

; 2442 : }

  003a3	5f		 pop	 edi
  003a4	5e		 pop	 esi
  003a5	5b		 pop	 ebx
  003a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003a9	33 cd		 xor	 ecx, ebp
  003ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003b0	8b e5		 mov	 esp, ebp
  003b2	5d		 pop	 ebp
  003b3	c2 0c 00	 ret	 12			; 0000000cH
?OnEventUserItemStatus@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GG@Z ENDP ; CAttemperEngineSink::OnEventUserItemStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z
_TEXT	SEGMENT
tv511 = -776						; size = 4
_WritePersonalScore$1 = -644				; size = 240
_pTableFrame$2 = -404					; size = 4
_i$3 = -400						; size = 4
_nSize$4 = -396						; size = 4
_szPersonalRoomID$5 = -392				; size = 4
_dwRoomHostID$6 = -388					; size = 4
_pUserTaskEntry$7 = -384				; size = 4
_WriteVideoPlayer$8 = -380				; size = 48
_WriteGameScore$9 = -332				; size = 120
_MobileUserScore$ = -212				; size = 96
_pUserInfo$ = -116					; size = 4
_UserScore$ = -112					; size = 104
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_cbReason$ = 12						; size = 1
?OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z PROC ; CAttemperEngineSink::OnEventUserItemScore, COMDAT
; _this$ = ecx

; 2150 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 03 00
	00		 sub	 esp, 776		; 00000308H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2151 : 	//效验参数
; 2152 : 	ASSERT(pIServerUserItem!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 18		 jne	 SHORT $LN18@OnEventUse
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z@4JA
  00024	83 c0 02	 add	 eax, 2
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN18@OnEventUse
  00036	cc		 int	 3
$LN18@OnEventUse:

; 2153 : 	if (pIServerUserItem==NULL) return false;

  00037	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003b	75 07		 jne	 SHORT $LN5@OnEventUse
  0003d	32 c0		 xor	 al, al
  0003f	e9 1f 07 00 00	 jmp	 $LN1@OnEventUse
$LN5@OnEventUse:

; 2154 : 
; 2155 : 	//变量定义
; 2156 : 	CMD_GR_UserScore UserScore;
; 2157 : 	ZeroMemory(&UserScore,sizeof(UserScore));

  00044	6a 68		 push	 104			; 00000068H
  00046	6a 00		 push	 0
  00048	8d 45 90	 lea	 eax, DWORD PTR _UserScore$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _memset
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2158 : 	tagUserInfo * pUserInfo=pIServerUserItem->GetUserInfo();

  00054	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00057	8b 10		 mov	 edx, DWORD PTR [eax]
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0005c	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0005f	ff d0		 call	 eax
  00061	89 45 8c	 mov	 DWORD PTR _pUserInfo$[ebp], eax

; 2159 : 
; 2160 : 	//构造数据
; 2161 : 	UserScore.dwUserID=pUserInfo->dwUserID;

  00064	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00067	8b 08		 mov	 ecx, DWORD PTR [eax]
  00069	89 4d 90	 mov	 DWORD PTR _UserScore$[ebp], ecx

; 2162 : 	UserScore.UserScore.dwWinCount=pUserInfo->dwWinCount;

  0006c	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0006f	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  00075	89 4d d4	 mov	 DWORD PTR _UserScore$[ebp+68], ecx

; 2163 : 	UserScore.UserScore.dwLostCount=pUserInfo->dwLostCount;

  00078	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0007b	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  00081	89 4d d8	 mov	 DWORD PTR _UserScore$[ebp+72], ecx

; 2164 : 	UserScore.UserScore.dwDrawCount=pUserInfo->dwDrawCount;

  00084	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00087	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  0008d	89 4d dc	 mov	 DWORD PTR _UserScore$[ebp+76], ecx

; 2165 : 	UserScore.UserScore.dwFleeCount=pUserInfo->dwFleeCount;	

  00090	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00093	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  00099	89 4d e0	 mov	 DWORD PTR _UserScore$[ebp+80], ecx

; 2166 : 	UserScore.UserScore.dwExperience=pUserInfo->dwExperience;

  0009c	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0009f	8b 88 ec 00 00
	00		 mov	 ecx, DWORD PTR [eax+236]
  000a5	89 4d f0	 mov	 DWORD PTR _UserScore$[ebp+96], ecx

; 2167 : 	UserScore.UserScore.lLoveLiness=pUserInfo->lLoveLiness;

  000a8	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  000ab	8b 88 f0 00 00
	00		 mov	 ecx, DWORD PTR [eax+240]
  000b1	89 4d f4	 mov	 DWORD PTR _UserScore$[ebp+100], ecx

; 2168 : 	UserScore.UserScore.lIntegralCount = pUserInfo->lIntegralCount;

  000b4	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  000b7	8b 88 f4 00 00
	00		 mov	 ecx, DWORD PTR [eax+244]
  000bd	89 4d e4	 mov	 DWORD PTR _UserScore$[ebp+84], ecx
  000c0	8b 90 f8 00 00
	00		 mov	 edx, DWORD PTR [eax+248]
  000c6	89 55 e8	 mov	 DWORD PTR _UserScore$[ebp+88], edx

; 2169 : 
; 2170 : 	//构造积分
; 2171 : 	/*UserScore.UserScore.lGrade=pUserInfo->lGrade;
; 2172 : 	UserScore.UserScore.lInsure=pUserInfo->lInsure;
; 2173 : 	UserScore.UserScore.lIngot=pUserInfo->lIngot;
; 2174 : 	UserScore.UserScore.dBeans=pUserInfo->dBeans;
; 2175 : 	UserScore.UserScore.lScore=pUserInfo->lScore;*/
; 2176 : 	UserScore.UserScore.bConsumptionType = pUserInfo->bConsumptionType;

  000c9	8b 75 8c	 mov	 esi, DWORD PTR _pUserInfo$[ebp]
  000cc	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  000d2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000d7	8d 7d 94	 lea	 edi, DWORD PTR _UserScore$[ebp+4]
  000da	f3 a5		 rep movsd

; 2177 : 
; 2178 : 	UserScore.UserScore.bConsumptionType.lScore += pIServerUserItem->GetTrusteeScore();

  000dc	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000df	8b 10		 mov	 edx, DWORD PTR [eax]
  000e1	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000e4	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  000ea	ff d0		 call	 eax
  000ec	03 45 a4	 add	 eax, DWORD PTR _UserScore$[ebp+20]
  000ef	13 55 a8	 adc	 edx, DWORD PTR _UserScore$[ebp+24]
  000f2	89 45 a4	 mov	 DWORD PTR _UserScore$[ebp+20], eax
  000f5	89 55 a8	 mov	 DWORD PTR _UserScore$[ebp+24], edx

; 2179 : 	UserScore.UserScore.bConsumptionType.lScore += pIServerUserItem->GetFrozenedScore();

  000f8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000fb	8b 10		 mov	 edx, DWORD PTR [eax]
  000fd	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00100	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00106	ff d0		 call	 eax
  00108	03 45 a4	 add	 eax, DWORD PTR _UserScore$[ebp+20]
  0010b	13 55 a8	 adc	 edx, DWORD PTR _UserScore$[ebp+24]
  0010e	89 45 a4	 mov	 DWORD PTR _UserScore$[ebp+20], eax
  00111	89 55 a8	 mov	 DWORD PTR _UserScore$[ebp+24], edx

; 2180 : 
; 2181 : 	//发送数据
; 2182 : 	SendData(BG_COMPUTER,MDM_GR_USER,SUB_GR_USER_SCORE,&UserScore,sizeof(UserScore));

  00114	6a 68		 push	 104			; 00000068H
  00116	8d 45 90	 lea	 eax, DWORD PTR _UserScore$[ebp]
  00119	50		 push	 eax
  0011a	6a 65		 push	 101			; 00000065H
  0011c	6a 03		 push	 3
  0011e	6a 02		 push	 2
  00120	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	83 e9 04	 sub	 ecx, 4
  00126	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00129	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  0012c	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0012f	ff d2		 call	 edx

; 2183 : 
; 2184 : 	//变量定义
; 2185 : 	CMD_GR_MobileUserScore MobileUserScore;
; 2186 : 	ZeroMemory(&MobileUserScore,sizeof(MobileUserScore));

  00131	6a 60		 push	 96			; 00000060H
  00133	6a 00		 push	 0
  00135	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _MobileUserScore$[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 _memset
  00141	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2187 : 
; 2188 : 	//构造数据
; 2189 : 	MobileUserScore.dwUserID=pUserInfo->dwUserID;

  00144	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00147	8b 08		 mov	 ecx, DWORD PTR [eax]
  00149	89 8d 2c ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp], ecx

; 2190 : 	MobileUserScore.UserScore.dwWinCount=pUserInfo->dwWinCount;

  0014f	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00152	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  00158	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+68], ecx

; 2191 : 	MobileUserScore.UserScore.dwLostCount=pUserInfo->dwLostCount;

  0015e	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00161	8b 88 dc 00 00
	00		 mov	 ecx, DWORD PTR [eax+220]
  00167	89 8d 74 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+72], ecx

; 2192 : 	MobileUserScore.UserScore.dwDrawCount=pUserInfo->dwDrawCount;

  0016d	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  00170	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  00176	89 8d 78 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+76], ecx

; 2193 : 	MobileUserScore.UserScore.dwFleeCount=pUserInfo->dwFleeCount;

  0017c	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0017f	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR [eax+228]
  00185	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+80], ecx

; 2194 : 	MobileUserScore.UserScore.dwExperience=pUserInfo->dwExperience;

  0018b	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0018e	8b 88 ec 00 00
	00		 mov	 ecx, DWORD PTR [eax+236]
  00194	89 4d 88	 mov	 DWORD PTR _MobileUserScore$[ebp+92], ecx

; 2195 : 	MobileUserScore.UserScore.lIntegralCount = pUserInfo->lIntegralCount;

  00197	8b 45 8c	 mov	 eax, DWORD PTR _pUserInfo$[ebp]
  0019a	8b 88 f4 00 00
	00		 mov	 ecx, DWORD PTR [eax+244]
  001a0	89 4d 80	 mov	 DWORD PTR _MobileUserScore$[ebp+84], ecx
  001a3	8b 90 f8 00 00
	00		 mov	 edx, DWORD PTR [eax+248]
  001a9	89 55 84	 mov	 DWORD PTR _MobileUserScore$[ebp+88], edx

; 2196 : 
; 2197 : 	//构造积分
; 2198 : 	/*MobileUserScore.UserScore.dBeans = pUserInfo->dBeans;
; 2199 : 	MobileUserScore.UserScore.lScore=pUserInfo->lScore;*/
; 2200 : 
; 2201 : 	MobileUserScore.UserScore.bConsumptionType = pUserInfo->bConsumptionType;

  001ac	8b 75 8c	 mov	 esi, DWORD PTR _pUserInfo$[ebp]
  001af	81 c6 98 00 00
	00		 add	 esi, 152		; 00000098H
  001b5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  001ba	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR _MobileUserScore$[ebp+4]
  001c0	f3 a5		 rep movsd

; 2202 : 
; 2203 : 	MobileUserScore.UserScore.bConsumptionType.lScore += pIServerUserItem->GetTrusteeScore();

  001c2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001c5	8b 10		 mov	 edx, DWORD PTR [eax]
  001c7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001ca	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  001d0	ff d0		 call	 eax
  001d2	03 85 40 ff ff
	ff		 add	 eax, DWORD PTR _MobileUserScore$[ebp+20]
  001d8	13 95 44 ff ff
	ff		 adc	 edx, DWORD PTR _MobileUserScore$[ebp+24]
  001de	89 85 40 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+20], eax
  001e4	89 95 44 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+24], edx

; 2204 : 	MobileUserScore.UserScore.bConsumptionType.lScore += pIServerUserItem->GetFrozenedScore();

  001ea	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001ed	8b 10		 mov	 edx, DWORD PTR [eax]
  001ef	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001f2	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  001f8	ff d0		 call	 eax
  001fa	03 85 40 ff ff
	ff		 add	 eax, DWORD PTR _MobileUserScore$[ebp+20]
  00200	13 95 44 ff ff
	ff		 adc	 edx, DWORD PTR _MobileUserScore$[ebp+24]
  00206	89 85 40 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+20], eax
  0020c	89 95 44 ff ff
	ff		 mov	 DWORD PTR _MobileUserScore$[ebp+24], edx

; 2205 : 	
; 2206 : 
; 2207 : 	//发送数据
; 2208 : 	SendDataBatchToMobileUser(pIServerUserItem->GetTableID(),MDM_GR_USER,SUB_GR_USER_SCORE,&MobileUserScore,sizeof(MobileUserScore));

  00212	6a 60		 push	 96			; 00000060H
  00214	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _MobileUserScore$[ebp]
  0021a	50		 push	 eax
  0021b	6a 65		 push	 101			; 00000065H
  0021d	6a 03		 push	 3
  0021f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00222	8b 11		 mov	 edx, DWORD PTR [ecx]
  00224	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00227	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0022a	ff d0		 call	 eax
  0022c	0f b7 c8	 movzx	 ecx, ax
  0022f	51		 push	 ecx
  00230	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00233	83 e9 04	 sub	 ecx, 4
  00236	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00239	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  0023c	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0023f	ff d2		 call	 edx

; 2209 : 
; 2210 : 
; 2211 : 	//即时写分
; 2212 : 	if (
; 2213 : 		(CServerRule::IsImmediateWriteScore(m_pGameServiceOption->dwServerRule)==true)
; 2214 : 		&& pIServerUserItem->IsVariation()==true)

  00241	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00244	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00247	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0024a	52		 push	 edx
  0024b	e8 00 00 00 00	 call	 ?IsImmediateWriteScore@CServerRule@@SA_NK@Z ; CServerRule::IsImmediateWriteScore
  00250	83 c4 04	 add	 esp, 4
  00253	0f b6 c0	 movzx	 eax, al
  00256	83 f8 01	 cmp	 eax, 1
  00259	0f 85 93 04 00
	00		 jne	 $LN6@OnEventUse
  0025f	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00262	8b 10		 mov	 edx, DWORD PTR [eax]
  00264	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00267	8b 82 f0 00 00
	00		 mov	 eax, DWORD PTR [edx+240]
  0026d	ff d0		 call	 eax
  0026f	0f b6 c8	 movzx	 ecx, al
  00272	83 f9 01	 cmp	 ecx, 1
  00275	0f 85 77 04 00
	00		 jne	 $LN6@OnEventUse

; 2215 : 	{
; 2216 : 		//变量定义
; 2217 : 		DBR_GR_WriteGameScore WriteGameScore;
; 2218 : 		ZeroMemory(&WriteGameScore,sizeof(WriteGameScore));

  0027b	6a 78		 push	 120			; 00000078H
  0027d	6a 00		 push	 0
  0027f	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _WriteGameScore$9[ebp]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 _memset
  0028b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2219 : 
; 2220 : 		//用户信息
; 2221 : 		WriteGameScore.dwUserID=pIServerUserItem->GetUserID();

  0028e	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00296	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00299	ff d0		 call	 eax
  0029b	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _WriteGameScore$9[ebp], eax

; 2222 : 		WriteGameScore.dwDBQuestID=pIServerUserItem->GetDBQuestID();

  002a1	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002a4	8b 10		 mov	 edx, DWORD PTR [eax]
  002a6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002a9	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  002ac	ff d0		 call	 eax
  002ae	89 85 bc fe ff
	ff		 mov	 DWORD PTR _WriteGameScore$9[ebp+8], eax

; 2223 : 		WriteGameScore.dwClientAddr=pIServerUserItem->GetClientAddr();

  002b4	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002b7	8b 10		 mov	 edx, DWORD PTR [eax]
  002b9	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002bc	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002bf	ff d0		 call	 eax
  002c1	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _WriteGameScore$9[ebp+4], eax

; 2224 : 		WriteGameScore.dwInoutIndex=pIServerUserItem->GetInoutIndex();

  002c7	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  002ca	8b 10		 mov	 edx, DWORD PTR [eax]
  002cc	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002cf	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  002d2	ff d0		 call	 eax
  002d4	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _WriteGameScore$9[ebp+12], eax

; 2225 : 
; 2226 : 		//提取积分
; 2227 : 		pIServerUserItem->DistillVariation(WriteGameScore.VariationInfo);

  002da	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _WriteGameScore$9[ebp+24]
  002e0	50		 push	 eax
  002e1	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002e4	8b 11		 mov	 edx, DWORD PTR [ecx]
  002e6	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  002e9	8b 82 f8 00 00
	00		 mov	 eax, DWORD PTR [edx+248]
  002ef	ff d0		 call	 eax

; 2228 : 
; 2229 : 		//视频回放
; 2230 : 		if(CServerRule::IsSuportPlayBack(m_pGameServiceOption->dwServerRule))

  002f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f4	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  002f7	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002fa	52		 push	 edx
  002fb	e8 00 00 00 00	 call	 ?IsSuportPlayBack@CServerRule@@SA_NK@Z ; CServerRule::IsSuportPlayBack
  00300	83 c4 04	 add	 esp, 4
  00303	0f b6 c0	 movzx	 eax, al
  00306	85 c0		 test	 eax, eax
  00308	0f 84 da 00 00
	00		 je	 $LN7@OnEventUse

; 2231 : 		{
; 2232 : 			DBR_GR_WriteVideoPlayer WriteVideoPlayer;
; 2233 : 			ZeroMemory(&WriteVideoPlayer, sizeof(DBR_GR_WriteVideoPlayer));

  0030e	6a 30		 push	 48			; 00000030H
  00310	6a 00		 push	 0
  00312	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _WriteVideoPlayer$8[ebp]
  00318	50		 push	 eax
  00319	e8 00 00 00 00	 call	 _memset
  0031e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2234 : 
; 2235 : 			memcpy(WriteVideoPlayer.szVideoID,pIServerUserItem->GetVideoNumber(),sizeof(WriteVideoPlayer.szVideoID) );			

  00321	6a 16		 push	 22			; 00000016H
  00323	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00326	8b 10		 mov	 edx, DWORD PTR [eax]
  00328	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0032b	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0032e	ff d0		 call	 eax
  00330	50		 push	 eax
  00331	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR _WriteVideoPlayer$8[ebp+4]
  00337	51		 push	 ecx
  00338	e8 00 00 00 00	 call	 _memcpy
  0033d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2236 : 			if(WriteVideoPlayer.szVideoID[0] != '\0')

  00340	b8 01 00 00 00	 mov	 eax, 1
  00345	6b c8 00	 imul	 ecx, eax, 0
  00348	0f be 94 0d 88
	fe ff ff	 movsx	 edx, BYTE PTR _WriteVideoPlayer$8[ebp+ecx+4]
  00350	85 d2		 test	 edx, edx
  00352	0f 84 90 00 00
	00		 je	 $LN7@OnEventUse

; 2237 : 			{
; 2238 : 				WriteVideoPlayer.dwUserID	= WriteGameScore.dwUserID;

  00358	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp]
  0035e	89 85 84 fe ff
	ff		 mov	 DWORD PTR _WriteVideoPlayer$8[ebp], eax

; 2239 : 				WriteVideoPlayer.lScore		= WriteGameScore.VariationInfo.lScore;

  00364	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp+24]
  0036a	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _WriteVideoPlayer$8[ebp+32], eax
  00370	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR _WriteGameScore$9[ebp+28]
  00376	89 8d a8 fe ff
	ff		 mov	 DWORD PTR _WriteVideoPlayer$8[ebp+36], ecx

; 2240 : 				WriteVideoPlayer.wChairID	= pIServerUserItem->GetChairID();

  0037c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0037f	8b 10		 mov	 edx, DWORD PTR [eax]
  00381	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00384	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00387	ff d0		 call	 eax
  00389	66 89 85 ac fe
	ff ff		 mov	 WORD PTR _WriteVideoPlayer$8[ebp+40], ax

; 2241 : 				WriteVideoPlayer.wKindID	= m_pGameServiceAttrib->wKindID;

  00390	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00393	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00396	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00399	66 89 95 ae fe
	ff ff		 mov	 WORD PTR _WriteVideoPlayer$8[ebp+42], dx

; 2242 : 
; 2243 : 				m_pIDBCorrespondManager->PostDataBaseRequest(WriteVideoPlayer.dwUserID,DBR_GR_WRITE_VIDEO_PLAYER_INFO,0L,&WriteVideoPlayer,sizeof(WriteVideoPlayer), TRUE);

  003a0	6a 01		 push	 1
  003a2	6a 30		 push	 48			; 00000030H
  003a4	8d 85 84 fe ff
	ff		 lea	 eax, DWORD PTR _WriteVideoPlayer$8[ebp]
  003aa	50		 push	 eax
  003ab	6a 00		 push	 0
  003ad	68 40 06 00 00	 push	 1600			; 00000640H
  003b2	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR _WriteVideoPlayer$8[ebp]
  003b8	51		 push	 ecx
  003b9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003bc	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  003c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c5	8b 91 cc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147404]
  003cb	8b 00		 mov	 eax, DWORD PTR [eax]
  003cd	52		 push	 edx
  003ce	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  003d1	ff d1		 call	 ecx
  003d3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2244 : 
; 2245 : 				pIServerUserItem->SetVideoNumber("");

  003d6	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  003db	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003de	8b 10		 mov	 edx, DWORD PTR [eax]
  003e0	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003e3	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  003e6	ff d0		 call	 eax
$LN7@OnEventUse:

; 2246 : 			}
; 2247 : 		}
; 2248 : 		//调整分数
; 2249 : 		if(pIServerUserItem->IsAndroidUser()==true)

  003e8	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  003eb	8b 10		 mov	 edx, DWORD PTR [eax]
  003ed	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  003f0	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  003f6	ff d0		 call	 eax
  003f8	0f b6 c8	 movzx	 ecx, al
  003fb	83 f9 01	 cmp	 ecx, 1
  003fe	75 2c		 jne	 SHORT $LN9@OnEventUse

; 2250 : 		{
; 2251 : 			WriteGameScore.VariationInfo.lScore=0;

  00400	0f 57 c0	 xorps	 xmm0, xmm0
  00403	66 0f 13 85 cc
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+24], xmm0

; 2252 : 			WriteGameScore.VariationInfo.lGrade=0;

  0040b	0f 57 c0	 xorps	 xmm0, xmm0
  0040e	66 0f 13 85 d4
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+32], xmm0

; 2253 : 			WriteGameScore.VariationInfo.lInsure=0;

  00416	0f 57 c0	 xorps	 xmm0, xmm0
  00419	66 0f 13 85 dc
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+40], xmm0

; 2254 : 			WriteGameScore.VariationInfo.lRevenue=0;

  00421	0f 57 c0	 xorps	 xmm0, xmm0
  00424	66 0f 13 85 e4
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+48], xmm0
$LN9@OnEventUse:

; 2255 : 		}
; 2256 : 
; 2257 : 		if(m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  0042c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0042f	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00432	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00436	83 fa 10	 cmp	 edx, 16			; 00000010H
  00439	75 48		 jne	 SHORT $LN10@OnEventUse

; 2258 : 		{
; 2259 : 			if ((lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) != 0))

  0043b	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00440	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00443	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00446	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0044c	51		 push	 ecx
  0044d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00453	85 c0		 test	 eax, eax
  00455	74 2c		 je	 SHORT $LN10@OnEventUse

; 2260 : 			{
; 2261 : 				WriteGameScore.VariationInfo.lScore=0;

  00457	0f 57 c0	 xorps	 xmm0, xmm0
  0045a	66 0f 13 85 cc
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+24], xmm0

; 2262 : 				WriteGameScore.VariationInfo.lGrade=0;

  00462	0f 57 c0	 xorps	 xmm0, xmm0
  00465	66 0f 13 85 d4
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+32], xmm0

; 2263 : 				WriteGameScore.VariationInfo.lInsure=0;

  0046d	0f 57 c0	 xorps	 xmm0, xmm0
  00470	66 0f 13 85 dc
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+40], xmm0

; 2264 : 				WriteGameScore.VariationInfo.lRevenue=0;

  00478	0f 57 c0	 xorps	 xmm0, xmm0
  0047b	66 0f 13 85 e4
	fe ff ff	 movlpd	 QWORD PTR _WriteGameScore$9[ebp+48], xmm0
$LN10@OnEventUse:

; 2265 : 			}
; 2266 : 		}
; 2267 : 
; 2268 : 		//查找任务
; 2269 : 		tagUserTaskEntry * pUserTaskEntry=m_UserTaskManager.GetUserTaskEntry(pIServerUserItem->GetUserID(),TASK_STATUS_UNFINISH); 

  00483	6a 00		 push	 0
  00485	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00488	8b 10		 mov	 edx, DWORD PTR [eax]
  0048a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0048d	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  00490	ff d0		 call	 eax
  00492	50		 push	 eax
  00493	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00496	81 c1 b4 3e 02
	00		 add	 ecx, 147124		; 00023eb4H
  0049c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0049f	8b 82 b4 3e 02
	00		 mov	 eax, DWORD PTR [edx+147124]
  004a5	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  004a8	ff d2		 call	 edx
  004aa	89 85 80 fe ff
	ff		 mov	 DWORD PTR _pUserTaskEntry$7[ebp], eax

; 2270 : 		if(pUserTaskEntry!=NULL) WriteGameScore.bTaskForward = true;		

  004b0	83 bd 80 fe ff
	ff 00		 cmp	 DWORD PTR _pUserTaskEntry$7[ebp], 0
  004b7	74 07		 je	 SHORT $LN12@OnEventUse
  004b9	c6 85 c4 fe ff
	ff 01		 mov	 BYTE PTR _WriteGameScore$9[ebp+16], 1
$LN12@OnEventUse:

; 2271 : 
; 2272 : 		//投递请求
; 2273 : 		m_pIDBCorrespondManager->PostDataBaseRequest(WriteGameScore.dwUserID,DBR_GR_WRITE_GAME_SCORE,0L,&WriteGameScore,sizeof(WriteGameScore), TRUE);

  004c0	6a 01		 push	 1
  004c2	6a 78		 push	 120			; 00000078H
  004c4	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _WriteGameScore$9[ebp]
  004ca	50		 push	 eax
  004cb	6a 00		 push	 0
  004cd	68 c8 00 00 00	 push	 200			; 000000c8H
  004d2	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR _WriteGameScore$9[ebp]
  004d8	51		 push	 ecx
  004d9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004dc	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  004e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e5	8b 91 cc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147404]
  004eb	8b 00		 mov	 eax, DWORD PTR [eax]
  004ed	52		 push	 edx
  004ee	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  004f1	ff d1		 call	 ecx
  004f3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2274 : 
; 2275 : 
; 2276 : 		//私人房间ID
; 2277 : 		DWORD dwRoomHostID = 0;

  004f6	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwRoomHostID$6[ebp], 0

; 2278 : 		DWORD szPersonalRoomID = 0;

  00500	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _szPersonalRoomID$5[ebp], 0

; 2279 : 		INT_PTR nSize = m_TableFrameArray.GetCount();

  0050a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0050d	81 c1 c8 dc 00
	00		 add	 ecx, 56520		; 0000dcc8H
  00513	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00518	89 85 74 fe ff
	ff		 mov	 DWORD PTR _nSize$4[ebp], eax

; 2280 : 		for(INT_PTR i = 0; i < nSize; ++i)

  0051e	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$3[ebp], 0
  00528	eb 0f		 jmp	 SHORT $LN4@OnEventUse
$LN2@OnEventUse:
  0052a	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  00530	83 c0 01	 add	 eax, 1
  00533	89 85 70 fe ff
	ff		 mov	 DWORD PTR _i$3[ebp], eax
$LN4@OnEventUse:
  00539	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  0053f	3b 85 74 fe ff
	ff		 cmp	 eax, DWORD PTR _nSize$4[ebp]
  00545	0f 8d 84 00 00
	00		 jge	 $LN3@OnEventUse

; 2281 : 		{
; 2282 : 			CTableFrame* pTableFrame = m_TableFrameArray.GetAt(i);

  0054b	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  00551	50		 push	 eax
  00552	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	81 c1 c8 dc 00
	00		 add	 ecx, 56520		; 0000dcc8H
  0055b	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::GetAt
  00560	8b 08		 mov	 ecx, DWORD PTR [eax]
  00562	89 8d 6c fe ff
	ff		 mov	 DWORD PTR _pTableFrame$2[ebp], ecx

; 2283 : 			if (pTableFrame->GetTableID() == pIServerUserItem->GetTableID())

  00568	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$2[ebp]
  0056e	8b 10		 mov	 edx, DWORD PTR [eax]
  00570	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  00576	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00579	ff d0		 call	 eax
  0057b	0f b7 f0	 movzx	 esi, ax
  0057e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00581	8b 11		 mov	 edx, DWORD PTR [ecx]
  00583	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00586	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00589	ff d0		 call	 eax
  0058b	0f b7 c8	 movzx	 ecx, ax
  0058e	3b f1		 cmp	 esi, ecx
  00590	75 38		 jne	 SHORT $LN13@OnEventUse

; 2284 : 			{
; 2285 : 				szPersonalRoomID = pTableFrame->GetTableID();

  00592	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$2[ebp]
  00598	8b 10		 mov	 edx, DWORD PTR [eax]
  0059a	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  005a0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  005a3	ff d0		 call	 eax
  005a5	0f b7 c8	 movzx	 ecx, ax
  005a8	89 8d 78 fe ff
	ff		 mov	 DWORD PTR _szPersonalRoomID$5[ebp], ecx

; 2286 : 				dwRoomHostID = pTableFrame->GetRecordTableOwner();

  005ae	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$2[ebp]
  005b4	8b 10		 mov	 edx, DWORD PTR [eax]
  005b6	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$2[ebp]
  005bc	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  005c2	ff d0		 call	 eax
  005c4	89 85 7c fe ff
	ff		 mov	 DWORD PTR _dwRoomHostID$6[ebp], eax
$LN13@OnEventUse:

; 2287 : 			}
; 2288 : 		}

  005ca	e9 5b ff ff ff	 jmp	 $LN2@OnEventUse
$LN3@OnEventUse:

; 2289 : 
; 2290 : 		//私人房间分数数据结构
; 2291 : 		DBR_GR_WritePersonalGameScore  WritePersonalScore;
; 2292 : 		WritePersonalScore.dwRoomHostID = dwRoomHostID;

  005cf	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _dwRoomHostID$6[ebp]
  005d5	89 85 ec fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+112], eax

; 2293 : 		WritePersonalScore.bTaskForward = WriteGameScore.bTaskForward;

  005db	8a 85 c4 fe ff
	ff		 mov	 al, BYTE PTR _WriteGameScore$9[ebp+16]
  005e1	88 85 8c fd ff
	ff		 mov	 BYTE PTR _WritePersonalScore$1[ebp+16], al

; 2294 : 		WritePersonalScore.dwClientAddr = WriteGameScore.dwClientAddr;

  005e7	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp+4]
  005ed	89 85 80 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+4], eax

; 2295 : 		WritePersonalScore.dwDBQuestID  = WriteGameScore.dwDBQuestID;

  005f3	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp+8]
  005f9	89 85 84 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+8], eax

; 2296 : 		WritePersonalScore.dwInoutIndex = WriteGameScore.dwInoutIndex;

  005ff	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp+12]
  00605	89 85 88 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+12], eax

; 2297 : 		//WritePersonalScore.dwMatchID    = WriteGameScore.dwMatchID;
; 2298 : 		//WritePersonalScore.dwMatchNO	= WriteGameScore.dwMatchNO;
; 2299 : 		WritePersonalScore.dwUserID		= WriteGameScore.dwUserID;

  0060b	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp]
  00611	89 85 7c fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp], eax

; 2300 : 		WritePersonalScore.dwPersonalRoomTax = m_PersonalRoomOption.lPersonalRoomTax;

  00617	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0061a	8b 48 4b	 mov	 ecx, DWORD PTR [eax+75]
  0061d	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+116], ecx

; 2301 : 		WritePersonalScore.dwPersonalRoomID = szPersonalRoomID;

  00623	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _szPersonalRoomID$5[ebp]
  00629	89 85 f4 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+120], eax

; 2302 : 		memcpy(&WritePersonalScore.VariationInfo, &WriteGameScore.VariationInfo, sizeof(WritePersonalScore.VariationInfo));

  0062f	6a 50		 push	 80			; 00000050H
  00631	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _WriteGameScore$9[ebp+24]
  00637	50		 push	 eax
  00638	8d 8d 94 fd ff
	ff		 lea	 ecx, DWORD PTR _WritePersonalScore$1[ebp+24]
  0063e	51		 push	 ecx
  0063f	e8 00 00 00 00	 call	 _memcpy
  00644	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2303 : 		WritePersonalScore.VariationInfo.lScore += WritePersonalScore.VariationInfo.lRevenue;

  00647	8b 85 94 fd ff
	ff		 mov	 eax, DWORD PTR _WritePersonalScore$1[ebp+24]
  0064d	03 85 ac fd ff
	ff		 add	 eax, DWORD PTR _WritePersonalScore$1[ebp+48]
  00653	8b 8d 98 fd ff
	ff		 mov	 ecx, DWORD PTR _WritePersonalScore$1[ebp+28]
  00659	13 8d b0 fd ff
	ff		 adc	 ecx, DWORD PTR _WritePersonalScore$1[ebp+52]
  0065f	89 85 94 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+24], eax
  00665	89 8d 98 fd ff
	ff		 mov	 DWORD PTR _WritePersonalScore$1[ebp+28], ecx

; 2304 : 		WritePersonalScore.VariationInfo.lRevenue = 0;

  0066b	0f 57 c0	 xorps	 xmm0, xmm0
  0066e	66 0f 13 85 ac
	fd ff ff	 movlpd	 QWORD PTR _WritePersonalScore$1[ebp+48], xmm0

; 2305 : 
; 2306 : 		//请求数据库写入积分
; 2307 : 		if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00676	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00679	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0067c	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00680	83 fa 10	 cmp	 edx, 16			; 00000010H
  00683	75 39		 jne	 SHORT $LN14@OnEventUse

; 2308 : 		{
; 2309 : 			m_pIDBCorrespondManager->PostDataBaseRequest(WritePersonalScore.dwUserID,DBR_GR_WRITE_PERSONAL_GAME_SCORE,0L,&WritePersonalScore,sizeof(WritePersonalScore), TRUE);

  00685	6a 01		 push	 1
  00687	68 f0 00 00 00	 push	 240			; 000000f0H
  0068c	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _WritePersonalScore$1[ebp]
  00692	50		 push	 eax
  00693	6a 00		 push	 0
  00695	68 14 05 00 00	 push	 1300			; 00000514H
  0069a	8b 8d 7c fd ff
	ff		 mov	 ecx, DWORD PTR _WritePersonalScore$1[ebp]
  006a0	51		 push	 ecx
  006a1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006a4	8b 82 cc 3f 02
	00		 mov	 eax, DWORD PTR [edx+147404]
  006aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006ad	8b 91 cc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147404]
  006b3	8b 00		 mov	 eax, DWORD PTR [eax]
  006b5	52		 push	 edx
  006b6	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  006b9	ff d1		 call	 ecx
  006bb	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN14@OnEventUse:

; 2310 : 		}
; 2311 : 
; 2312 : 		//推进任务
; 2313 : 		if(pUserTaskEntry!=NULL)

  006be	83 bd 80 fe ff
	ff 00		 cmp	 DWORD PTR _pUserTaskEntry$7[ebp], 0
  006c5	74 2b		 je	 SHORT $LN6@OnEventUse

; 2314 : 		{
; 2315 : 			PerformTaskProgress(pIServerUserItem,pUserTaskEntry,WriteGameScore.VariationInfo.dwWinCount,WriteGameScore.VariationInfo.dwLostCount,WriteGameScore.VariationInfo.dwDrawCount);

  006c7	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _WriteGameScore$9[ebp+64]
  006cd	50		 push	 eax
  006ce	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR _WriteGameScore$9[ebp+60]
  006d4	51		 push	 ecx
  006d5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _WriteGameScore$9[ebp+56]
  006db	52		 push	 edx
  006dc	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _pUserTaskEntry$7[ebp]
  006e2	50		 push	 eax
  006e3	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006e6	51		 push	 ecx
  006e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006ea	83 e9 08	 sub	 ecx, 8
  006ed	e8 00 00 00 00	 call	 ?PerformTaskProgress@CAttemperEngineSink@@IAE_NPAUIServerUserItem@@PAUtagUserTaskEntry@@KKK@Z ; CAttemperEngineSink::PerformTaskProgress
$LN6@OnEventUse:

; 2316 : 		}		
; 2317 : 	}
; 2318 : 
; 2319 : 	//通知桌子
; 2320 : 	if(pIServerUserItem->GetTableID()!=INVALID_TABLE)

  006f2	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  006f5	8b 10		 mov	 edx, DWORD PTR [eax]
  006f7	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  006fa	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  006fd	ff d0		 call	 eax
  006ff	0f b7 c8	 movzx	 ecx, ax
  00702	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00708	74 57		 je	 SHORT $LN16@OnEventUse

; 2321 : 	{
; 2322 : 		m_TableFrameArray[pIServerUserItem->GetTableID()]->OnUserScroeNotify(pIServerUserItem->GetChairID(),pIServerUserItem,cbReason);

  0070a	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0070d	8b 10		 mov	 edx, DWORD PTR [eax]
  0070f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00712	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00715	ff d0		 call	 eax
  00717	0f b7 c8	 movzx	 ecx, ax
  0071a	51		 push	 ecx
  0071b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0071e	81 c1 c8 dc 00
	00		 add	 ecx, 56520		; 0000dcc8H
  00724	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00729	8b 10		 mov	 edx, DWORD PTR [eax]
  0072b	89 95 f8 fc ff
	ff		 mov	 DWORD PTR tv511[ebp], edx
  00731	0f b6 45 0c	 movzx	 eax, BYTE PTR _cbReason$[ebp]
  00735	50		 push	 eax
  00736	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00739	51		 push	 ecx
  0073a	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  0073d	8b 02		 mov	 eax, DWORD PTR [edx]
  0073f	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00742	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00745	ff d2		 call	 edx
  00747	0f b7 c0	 movzx	 eax, ax
  0074a	50		 push	 eax
  0074b	8b 8d f8 fc ff
	ff		 mov	 ecx, DWORD PTR tv511[ebp]
  00751	8b 11		 mov	 edx, DWORD PTR [ecx]
  00753	8b 8d f8 fc ff
	ff		 mov	 ecx, DWORD PTR tv511[ebp]
  00759	8b 82 30 01 00
	00		 mov	 eax, DWORD PTR [edx+304]
  0075f	ff d0		 call	 eax
$LN16@OnEventUse:

; 2323 : 	}
; 2324 : 
; 2325 : 	return true;

  00761	b0 01		 mov	 al, 1
$LN1@OnEventUse:

; 2326 : }

  00763	5f		 pop	 edi
  00764	5e		 pop	 esi
  00765	5b		 pop	 ebx
  00766	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00769	33 cd		 xor	 ecx, ebp
  0076b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00770	8b e5		 mov	 esp, ebp
  00772	5d		 pop	 ebp
  00773	c2 08 00	 ret	 8
?OnEventUserItemScore@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@E@Z ENDP ; CAttemperEngineSink::OnEventUserItemScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?PersonalRoomWriteJoinInfo@CAttemperEngineSink@@UAEXKGGKKPAD@Z
_TEXT	SEGMENT
_JoinInfo$ = -60					; size = 52
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwUserID$ = 8						; size = 4
_wTableID$ = 12						; size = 2
_wChairID$ = 16						; size = 2
_dwKindID$ = 20						; size = 4
_dwPersonalRoomID$ = 24					; size = 4
_szPersonalRoomGUID$ = 28				; size = 4
?PersonalRoomWriteJoinInfo@CAttemperEngineSink@@UAEXKGGKKPAD@Z PROC ; CAttemperEngineSink::PersonalRoomWriteJoinInfo, COMDAT
; _this$ = ecx

; 10838: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 10839: 	//退还费用
; 10840: 	DBR_GR_WriteJoinInfo JoinInfo;
; 10841: 	ZeroMemory(&JoinInfo, sizeof(DBR_GR_WriteJoinInfo));

  00016	6a 34		 push	 52			; 00000034H
  00018	6a 00		 push	 0
  0001a	8d 45 c4	 lea	 eax, DWORD PTR _JoinInfo$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10842: 
; 10843: 	JoinInfo.dwUserID = dwUserID;

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  00029	89 45 c4	 mov	 DWORD PTR _JoinInfo$[ebp], eax

; 10844: 	JoinInfo.wTableID = wTableID;

  0002c	66 8b 45 0c	 mov	 ax, WORD PTR _wTableID$[ebp]
  00030	66 89 45 c8	 mov	 WORD PTR _JoinInfo$[ebp+4], ax

; 10845: 	JoinInfo.dwPersonalRoomID = dwPersonalRoomID;

  00034	8b 45 18	 mov	 eax, DWORD PTR _dwPersonalRoomID$[ebp]
  00037	89 45 d4	 mov	 DWORD PTR _JoinInfo$[ebp+16], eax

; 10846: 
; 10847: 	//投递数据
; 10848: 	m_pIDBCorrespondManager->PostDataBaseRequest(0, DBR_GR_WRITE_JOIN_INFO, 0, &JoinInfo, sizeof(JoinInfo));

  0003a	6a 00		 push	 0
  0003c	6a 34		 push	 52			; 00000034H
  0003e	8d 45 c4	 lea	 eax, DWORD PTR _JoinInfo$[ebp]
  00041	50		 push	 eax
  00042	6a 00		 push	 0
  00044	68 1d 05 00 00	 push	 1309			; 0000051dH
  00049	6a 00		 push	 0
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 91 d0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147408]
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 88 d0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147408]
  0005d	8b 12		 mov	 edx, DWORD PTR [edx]
  0005f	51		 push	 ecx
  00060	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00063	ff d0		 call	 eax
  00065	83 c4 1c	 add	 esp, 28			; 0000001cH

; 10849: 
; 10850: }

  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 18 00	 ret	 24			; 00000018H
?PersonalRoomWriteJoinInfo@CAttemperEngineSink@@UAEXKGGKKPAD@Z ENDP ; CAttemperEngineSink::PersonalRoomWriteJoinInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?UpdateTablePlayerCount@CAttemperEngineSink@@UAEXGGG@Z
_TEXT	SEGMENT
_UpdateTable$ = -16					; size = 10
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_wTableID$ = 12						; size = 2
_wCount$ = 16						; size = 2
?UpdateTablePlayerCount@CAttemperEngineSink@@UAEXGGG@Z PROC ; CAttemperEngineSink::UpdateTablePlayerCount, COMDAT
; _this$ = ecx

; 10361: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10362: 	//更新桌子
; 10363: 	CMD_CS_C_UpdateTablePlayerCount UpdateTable;

  0000c	8d 4d f0	 lea	 ecx, DWORD PTR _UpdateTable$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CMD_CS_C_UpdateTablePlayerCount@@QAE@XZ ; CMD_CS_C_UpdateTablePlayerCount::CMD_CS_C_UpdateTablePlayerCount

; 10364: 	
; 10365: 	UpdateTable.wServerID = wServerID;

  00014	66 8b 45 08	 mov	 ax, WORD PTR _wServerID$[ebp]
  00018	66 89 45 f4	 mov	 WORD PTR _UpdateTable$[ebp+4], ax

; 10366: 	UpdateTable.wTableID = wTableID;

  0001c	66 8b 45 0c	 mov	 ax, WORD PTR _wTableID$[ebp]
  00020	66 89 45 f6	 mov	 WORD PTR _UpdateTable$[ebp+6], ax

; 10367: 	UpdateTable.wSitCount = wCount;

  00024	66 8b 45 10	 mov	 ax, WORD PTR _wCount$[ebp]
  00028	66 89 45 f8	 mov	 WORD PTR _UpdateTable$[ebp+8], ax

; 10368: 
; 10369: 	//发送消息
; 10370: 	m_pPrsnlRmITCPSocketService->SendData(MDM_CS_SERVICE_INFO, SUB_CS_C_UPDATE_TABLE_COUNT, &UpdateTable, sizeof(CMD_CS_C_UpdateTablePlayerCount));

  0002c	6a 0a		 push	 10			; 0000000aH
  0002e	8d 45 f0	 lea	 eax, DWORD PTR _UpdateTable$[ebp]
  00031	50		 push	 eax
  00032	68 92 00 00 00	 push	 146			; 00000092H
  00037	6a 02		 push	 2
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 91 bc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147388]
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 12		 mov	 edx, DWORD PTR [edx]
  00047	8b 88 bc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147388]
  0004d	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00050	ff d0		 call	 eax

; 10371: }

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 0c 00	 ret	 12			; 0000000cH
?UpdateTablePlayerCount@CAttemperEngineSink@@UAEXGGG@Z ENDP ; CAttemperEngineSink::UpdateTablePlayerCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?CancelCreateTable@CAttemperEngineSink@@UAEXKKKKGK@Z
_TEXT	SEGMENT
_pTableFrame$ = -100					; size = 4
_DismissTable$ = -96					; size = 12
_CancelCreateTable$1 = -84				; size = 32
_pBindParameter$2 = -52					; size = 4
_dwSocketID$3 = -48					; size = 4
_pServerUserItem$ = -44					; size = 4
_CancelCreateTable$ = -40				; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwUserID$ = 8						; size = 4
_dwDrawCountLimit$ = 12					; size = 4
_dwDrawTimeLimit$ = 16					; size = 4
_dwReason$ = 20						; size = 4
_wTableID$ = 24						; size = 2
_dwPersonalRoomID$ = 28					; size = 4
?CancelCreateTable@CAttemperEngineSink@@UAEXKKKKGK@Z PROC ; CAttemperEngineSink::CancelCreateTable, COMDAT
; _this$ = ecx

; 10395: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 10396: 	//设置取消状态
; 10397: 	DBR_GR_CancelCreateTable CancelCreateTable;
; 10398: 	ZeroMemory(&CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  00019	6a 20		 push	 32			; 00000020H
  0001b	6a 00		 push	 0
  0001d	8d 45 d8	 lea	 eax, DWORD PTR _CancelCreateTable$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _memset
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10399: 
; 10400: 	CancelCreateTable.dwUserID = dwUserID;

  00029	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0002c	89 45 d8	 mov	 DWORD PTR _CancelCreateTable$[ebp], eax

; 10401: 	CancelCreateTable.dwReason = dwReason;

  0002f	8b 45 14	 mov	 eax, DWORD PTR _dwReason$[ebp]
  00032	89 45 e8	 mov	 DWORD PTR _CancelCreateTable$[ebp+16], eax

; 10402: 	CancelCreateTable.dwDrawCountLimit = dwDrawCountLimit;

  00035	8b 45 0c	 mov	 eax, DWORD PTR _dwDrawCountLimit$[ebp]
  00038	89 45 ec	 mov	 DWORD PTR _CancelCreateTable$[ebp+20], eax

; 10403: 	CancelCreateTable.dwDrawTimeLimit = dwDrawTimeLimit;

  0003b	8b 45 10	 mov	 eax, DWORD PTR _dwDrawTimeLimit$[ebp]
  0003e	89 45 f0	 mov	 DWORD PTR _CancelCreateTable$[ebp+24], eax

; 10404: 	CancelCreateTable.dwServerID = m_pGameServiceOption->wServerID;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00047	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0004b	89 55 dc	 mov	 DWORD PTR _CancelCreateTable$[ebp+4], edx

; 10405: 	CancelCreateTable.dwPersonalRoomID =dwPersonalRoomID;

  0004e	8b 45 1c	 mov	 eax, DWORD PTR _dwPersonalRoomID$[ebp]
  00051	89 45 f4	 mov	 DWORD PTR _CancelCreateTable$[ebp+28], eax

; 10406: 
; 10407: 	IServerUserItem* pServerUserItem = m_ServerUserManager.SearchUserItem(dwUserID);

  00054	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 d4 dd 00
	00		 add	 ecx, 56788		; 0000ddd4H
  00061	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 82 d4 dd 00
	00		 mov	 eax, DWORD PTR [edx+56788]
  0006a	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0006d	ff d2		 call	 edx
  0006f	89 45 d4	 mov	 DWORD PTR _pServerUserItem$[ebp], eax

; 10408: 	//ASSERT(pServerUserItem != NULL);
; 10409: 
; 10410: 	if(pServerUserItem != NULL)

  00072	83 7d d4 00	 cmp	 DWORD PTR _pServerUserItem$[ebp], 0
  00076	0f 84 99 00 00
	00		 je	 $LN2@CancelCrea

; 10411: 	{
; 10412: 		//判断在线
; 10413: 		DWORD dwSocketID;
; 10414: 		if(pServerUserItem->GetBindIndex() == INVALID_WORD)

  0007c	8b 45 d4	 mov	 eax, DWORD PTR _pServerUserItem$[ebp]
  0007f	8b 10		 mov	 edx, DWORD PTR [eax]
  00081	8b 4d d4	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00084	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00087	ff d0		 call	 eax
  00089	0f b7 c8	 movzx	 ecx, ax
  0008c	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00092	75 10		 jne	 SHORT $LN4@CancelCrea

; 10415: 		{
; 10416: 			dwSocketID = INVALID_DWORD;

  00094	c7 45 d0 ff ff
	ff ff		 mov	 DWORD PTR _dwSocketID$3[ebp], -1

; 10417: 			CancelCreateTable.dwTableID = wTableID;

  0009b	0f b7 45 18	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0009f	89 45 e4	 mov	 DWORD PTR _CancelCreateTable$[ebp+12], eax

; 10418: 		}
; 10419: 		else

  000a2	eb 3d		 jmp	 SHORT $LN5@CancelCrea
$LN4@CancelCrea:

; 10420: 		{
; 10421: 			tagBindParameter* pBindParameter = GetBindParameter(pServerUserItem->GetBindIndex());

  000a4	8b 45 d4	 mov	 eax, DWORD PTR _pServerUserItem$[ebp]
  000a7	8b 10		 mov	 edx, DWORD PTR [eax]
  000a9	8b 4d d4	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  000ac	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000af	ff d0		 call	 eax
  000b1	0f b7 c8	 movzx	 ecx, ax
  000b4	51		 push	 ecx
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	83 e9 04	 sub	 ecx, 4
  000bb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  000c1	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  000c4	ff d2		 call	 edx
  000c6	89 45 cc	 mov	 DWORD PTR _pBindParameter$2[ebp], eax

; 10422: 			dwSocketID = pBindParameter->dwSocketID;

  000c9	8b 45 cc	 mov	 eax, DWORD PTR _pBindParameter$2[ebp]
  000cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ce	89 4d d0	 mov	 DWORD PTR _dwSocketID$3[ebp], ecx

; 10423: 			CancelCreateTable.dwClientAddr = pBindParameter->dwClientAddr;

  000d1	8b 45 cc	 mov	 eax, DWORD PTR _pBindParameter$2[ebp]
  000d4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d7	89 4d e0	 mov	 DWORD PTR _CancelCreateTable$[ebp+8], ecx

; 10424: 			CancelCreateTable.dwTableID = wTableID;

  000da	0f b7 45 18	 movzx	 eax, WORD PTR _wTableID$[ebp]
  000de	89 45 e4	 mov	 DWORD PTR _CancelCreateTable$[ebp+12], eax
$LN5@CancelCrea:

; 10425: 		}
; 10426: 
; 10427: 		//投递数据
; 10428: 		m_pIDBCorrespondManager->PostDataBaseRequest(dwUserID, DBR_GR_CANCEL_CREATE_TABLE, dwSocketID, &CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  000e1	6a 00		 push	 0
  000e3	6a 20		 push	 32			; 00000020H
  000e5	8d 45 d8	 lea	 eax, DWORD PTR _CancelCreateTable$[ebp]
  000e8	50		 push	 eax
  000e9	8b 4d d0	 mov	 ecx, DWORD PTR _dwSocketID$3[ebp]
  000ec	51		 push	 ecx
  000ed	68 16 05 00 00	 push	 1302			; 00000516H
  000f2	8b 55 08	 mov	 edx, DWORD PTR _dwUserID$[ebp]
  000f5	52		 push	 edx
  000f6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	8b 88 d0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147408]
  000ff	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00102	8b 82 d0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147408]
  00108	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0010a	50		 push	 eax
  0010b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0010e	ff d2		 call	 edx
  00110	83 c4 1c	 add	 esp, 28			; 0000001cH

; 10429: 	}
; 10430: 	else

  00113	eb 73		 jmp	 SHORT $LN3@CancelCrea
$LN2@CancelCrea:

; 10431: 	{
; 10432: 		//投递数据
; 10433: 		DBR_GR_CancelCreateTable CancelCreateTable;
; 10434: 		ZeroMemory(&CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  00115	6a 20		 push	 32			; 00000020H
  00117	6a 00		 push	 0
  00119	8d 45 ac	 lea	 eax, DWORD PTR _CancelCreateTable$1[ebp]
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 _memset
  00122	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10435: 
; 10436: 		CancelCreateTable.dwUserID = dwUserID;

  00125	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  00128	89 45 ac	 mov	 DWORD PTR _CancelCreateTable$1[ebp], eax

; 10437: 		CancelCreateTable.dwTableID = wTableID;

  0012b	0f b7 45 18	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0012f	89 45 b8	 mov	 DWORD PTR _CancelCreateTable$1[ebp+12], eax

; 10438: 		CancelCreateTable.dwReason = 0;

  00132	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _CancelCreateTable$1[ebp+16], 0

; 10439: 		CancelCreateTable.dwDrawCountLimit = dwDrawCountLimit;

  00139	8b 45 0c	 mov	 eax, DWORD PTR _dwDrawCountLimit$[ebp]
  0013c	89 45 c0	 mov	 DWORD PTR _CancelCreateTable$1[ebp+20], eax

; 10440: 		CancelCreateTable.dwDrawTimeLimit = dwDrawTimeLimit;

  0013f	8b 45 10	 mov	 eax, DWORD PTR _dwDrawTimeLimit$[ebp]
  00142	89 45 c4	 mov	 DWORD PTR _CancelCreateTable$1[ebp+24], eax

; 10441: 		CancelCreateTable.dwServerID = m_pGameServiceOption->wServerID;

  00145	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00148	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0014b	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0014f	89 55 b0	 mov	 DWORD PTR _CancelCreateTable$1[ebp+4], edx

; 10442: 		CancelCreateTable.dwPersonalRoomID = dwPersonalRoomID;

  00152	8b 45 1c	 mov	 eax, DWORD PTR _dwPersonalRoomID$[ebp]
  00155	89 45 c8	 mov	 DWORD PTR _CancelCreateTable$1[ebp+28], eax

; 10443: 
; 10444: 		m_pIDBCorrespondManager->PostDataBaseRequest(CancelCreateTable.dwUserID, DBR_GR_HOST_CANCEL_CREATE_TABLE, 0, &CancelCreateTable, sizeof(DBR_GR_CancelCreateTable));

  00158	6a 00		 push	 0
  0015a	6a 20		 push	 32			; 00000020H
  0015c	8d 45 ac	 lea	 eax, DWORD PTR _CancelCreateTable$1[ebp]
  0015f	50		 push	 eax
  00160	6a 00		 push	 0
  00162	68 1c 05 00 00	 push	 1308			; 0000051cH
  00167	8b 4d ac	 mov	 ecx, DWORD PTR _CancelCreateTable$1[ebp]
  0016a	51		 push	 ecx
  0016b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0016e	8b 82 d0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147408]
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	8b 91 d0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147408]
  0017d	8b 00		 mov	 eax, DWORD PTR [eax]
  0017f	52		 push	 edx
  00180	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00183	ff d1		 call	 ecx
  00185	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN3@CancelCrea:

; 10445: 	}
; 10446: 
; 10447: 	//解散桌子
; 10448: 	CMD_CS_C_DismissTable DismissTable;

  00188	8d 4d a0	 lea	 ecx, DWORD PTR _DismissTable$[ebp]
  0018b	e8 00 00 00 00	 call	 ??0CMD_CS_C_DismissTable@@QAE@XZ ; CMD_CS_C_DismissTable::CMD_CS_C_DismissTable

; 10449: 	ZeroMemory(&DismissTable, sizeof(CMD_CS_C_DismissTable));

  00190	6a 0c		 push	 12			; 0000000cH
  00192	6a 00		 push	 0
  00194	8d 45 a0	 lea	 eax, DWORD PTR _DismissTable$[ebp]
  00197	50		 push	 eax
  00198	e8 00 00 00 00	 call	 _memset
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10450: 
; 10451: 	DismissTable.dwServerID = m_pGameServiceOption->wServerID;

  001a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  001a6	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  001aa	89 55 a4	 mov	 DWORD PTR _DismissTable$[ebp+4], edx

; 10452: 	DismissTable.dwTableID =wTableID;

  001ad	0f b7 45 18	 movzx	 eax, WORD PTR _wTableID$[ebp]
  001b1	89 45 a8	 mov	 DWORD PTR _DismissTable$[ebp+8], eax

; 10453: 
; 10454: 	//发送消息
; 10455: 	m_pPrsnlRmITCPSocketService->SendData(MDM_CS_SERVICE_INFO, SUB_CS_C_DISMISS_TABLE, &DismissTable, sizeof(CMD_CS_C_DismissTable));

  001b4	6a 0c		 push	 12			; 0000000cH
  001b6	8d 45 a0	 lea	 eax, DWORD PTR _DismissTable$[ebp]
  001b9	50		 push	 eax
  001ba	68 89 00 00 00	 push	 137			; 00000089H
  001bf	6a 02		 push	 2
  001c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c4	8b 91 bc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147388]
  001ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001cd	8b 12		 mov	 edx, DWORD PTR [edx]
  001cf	8b 88 bc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147388]
  001d5	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  001d8	ff d0		 call	 eax

; 10456: 
; 10457: 	CTableFrame* pTableFrame = m_TableFrameArray[wTableID];

  001da	0f b7 45 18	 movzx	 eax, WORD PTR _wTableID$[ebp]
  001de	50		 push	 eax
  001df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e2	81 c1 cc dc 00
	00		 add	 ecx, 56524		; 0000dcccH
  001e8	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ef	89 4d 9c	 mov	 DWORD PTR _pTableFrame$[ebp], ecx

; 10458: 	if(pTableFrame)

  001f2	83 7d 9c 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  001f6	74 33		 je	 SHORT $LN1@CancelCrea

; 10459: 	{
; 10460: 		pTableFrame->SetPersonalTableLocked(false);

  001f8	6a 00		 push	 0
  001fa	8b 45 9c	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  001fd	8b 10		 mov	 edx, DWORD PTR [eax]
  001ff	8b 4d 9c	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00202	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00205	ff d0		 call	 eax

; 10461: 		pTableFrame->SetPersonalTable(0, 0, 0);

  00207	6a 00		 push	 0
  00209	6a 00		 push	 0
  0020b	6a 00		 push	 0
  0020d	6a 00		 push	 0
  0020f	8b 45 9c	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00212	8b 10		 mov	 edx, DWORD PTR [eax]
  00214	8b 4d 9c	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00217	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0021a	ff d0		 call	 eax

; 10462: 		pTableFrame->SetTableOwner(0);

  0021c	6a 00		 push	 0
  0021e	8b 45 9c	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  00221	8b 10		 mov	 edx, DWORD PTR [eax]
  00223	8b 4d 9c	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00226	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00229	ff d0		 call	 eax
$LN1@CancelCrea:

; 10463: 	}
; 10464: 
; 10465: 	return;
; 10466: }

  0022b	5f		 pop	 edi
  0022c	5e		 pop	 esi
  0022d	5b		 pop	 ebx
  0022e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00231	33 cd		 xor	 ecx, ebp
  00233	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00238	8b e5		 mov	 esp, ebp
  0023a	5d		 pop	 ebp
  0023b	c2 18 00	 ret	 24			; 00000018H
?CancelCreateTable@CAttemperEngineSink@@UAEXKKKKGK@Z ENDP ; CAttemperEngineSink::CancelCreateTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?DismissPersonalTable@CAttemperEngineSink@@UAEXGG@Z
_TEXT	SEGMENT
_pTableFrame$ = -20					; size = 4
_DismissTable$ = -16					; size = 12
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_wTableID$ = 12						; size = 2
?DismissPersonalTable@CAttemperEngineSink@@UAEXGG@Z PROC ; CAttemperEngineSink::DismissPersonalTable, COMDAT
; _this$ = ecx

; 10374: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10375: 	//解散桌子
; 10376: 	CMD_CS_C_DismissTable DismissTable;

  0000c	8d 4d f0	 lea	 ecx, DWORD PTR _DismissTable$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CMD_CS_C_DismissTable@@QAE@XZ ; CMD_CS_C_DismissTable::CMD_CS_C_DismissTable

; 10377: 	ZeroMemory(&DismissTable, sizeof(CMD_CS_C_DismissTable));

  00014	6a 0c		 push	 12			; 0000000cH
  00016	6a 00		 push	 0
  00018	8d 45 f0	 lea	 eax, DWORD PTR _DismissTable$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memset
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10378: 
; 10379: 	DismissTable.dwServerID = wServerID;

  00024	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  00028	89 45 f4	 mov	 DWORD PTR _DismissTable$[ebp+4], eax

; 10380: 	DismissTable.dwTableID = wTableID;

  0002b	0f b7 45 0c	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0002f	89 45 f8	 mov	 DWORD PTR _DismissTable$[ebp+8], eax

; 10381: 
; 10382: 	//发送消息
; 10383: 	m_pPrsnlRmITCPSocketService->SendData(MDM_CS_SERVICE_INFO, SUB_CS_C_DISMISS_TABLE, &DismissTable, sizeof(CMD_CS_C_DismissTable));

  00032	6a 0c		 push	 12			; 0000000cH
  00034	8d 45 f0	 lea	 eax, DWORD PTR _DismissTable$[ebp]
  00037	50		 push	 eax
  00038	68 89 00 00 00	 push	 137			; 00000089H
  0003d	6a 02		 push	 2
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 91 bc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147388]
  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 12		 mov	 edx, DWORD PTR [edx]
  0004d	8b 88 bc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147388]
  00053	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00056	ff d0		 call	 eax

; 10384: 
; 10385: 	CTableFrame* pTableFrame = m_TableFrameArray[wTableID];

  00058	0f b7 45 0c	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	81 c1 cc dc 00
	00		 add	 ecx, 56524		; 0000dcccH
  00066	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0006b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006d	89 4d ec	 mov	 DWORD PTR _pTableFrame$[ebp], ecx

; 10386: 	if(pTableFrame)

  00070	83 7d ec 00	 cmp	 DWORD PTR _pTableFrame$[ebp], 0
  00074	74 0f		 je	 SHORT $LN1@DismissPer

; 10387: 	{
; 10388: 		pTableFrame->SetPersonalTableLocked(false);

  00076	6a 00		 push	 0
  00078	8b 45 ec	 mov	 eax, DWORD PTR _pTableFrame$[ebp]
  0007b	8b 10		 mov	 edx, DWORD PTR [eax]
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR _pTableFrame$[ebp]
  00080	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00083	ff d0		 call	 eax
$LN1@DismissPer:

; 10389: 	}
; 10390: 	return;
; 10391: }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?DismissPersonalTable@CAttemperEngineSink@@UAEXGG@Z ENDP ; CAttemperEngineSink::DismissPersonalTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?UnLockAndroidUser@CAttemperEngineSink@@UAEXGG@Z
_TEXT	SEGMENT
_UnlockAndroidUser$ = -8				; size = 4
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_wBatchID$ = 12						; size = 2
?UnLockAndroidUser@CAttemperEngineSink@@UAEXGG@Z PROC	; CAttemperEngineSink::UnLockAndroidUser, COMDAT
; _this$ = ecx

; 10350: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10351: 	//解锁机器
; 10352: 	DBR_GR_UnlockAndroidUser UnlockAndroidUser;
; 10353: 	UnlockAndroidUser.wServerID=wServerID;

  0000c	66 8b 45 08	 mov	 ax, WORD PTR _wServerID$[ebp]
  00010	66 89 45 f8	 mov	 WORD PTR _UnlockAndroidUser$[ebp], ax

; 10354: 	UnlockAndroidUser.wBatchID=wBatchID;

  00014	66 8b 45 0c	 mov	 ax, WORD PTR _wBatchID$[ebp]
  00018	66 89 45 fa	 mov	 WORD PTR _UnlockAndroidUser$[ebp+2], ax

; 10355: 
; 10356: 	//投递请求
; 10357: 	m_pIDBCorrespondManager->PostDataBaseRequest(0,DBR_GR_UNLOCK_ANDROID_USER,0,&UnlockAndroidUser,sizeof(UnlockAndroidUser));

  0001c	6a 00		 push	 0
  0001e	6a 04		 push	 4
  00020	8d 45 f8	 lea	 eax, DWORD PTR _UnlockAndroidUser$[ebp]
  00023	50		 push	 eax
  00024	6a 00		 push	 0
  00026	68 ce 00 00 00	 push	 206			; 000000ceH
  0002b	6a 00		 push	 0
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 91 d0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147408]
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 88 d0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147408]
  0003f	8b 12		 mov	 edx, DWORD PTR [edx]
  00041	51		 push	 ecx
  00042	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00045	ff d0		 call	 eax
  00047	83 c4 1c	 add	 esp, 28			; 0000001cH

; 10358: }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?UnLockAndroidUser@CAttemperEngineSink@@UAEXGG@Z ENDP	; CAttemperEngineSink::UnLockAndroidUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SensitiveWordFilter@CAttemperEngineSink@@UAEXPBDPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
_pszFiltered$ = 12					; size = 4
_nMaxLen$ = 16						; size = 4
?SensitiveWordFilter@CAttemperEngineSink@@UAEXPBDPADH@Z PROC ; CAttemperEngineSink::SensitiveWordFilter, COMDAT
; _this$ = ecx

; 10344: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10345: 	m_WordsFilter.Filtrate(pMsg,pszFiltered,nMaxLen);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _nMaxLen$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _pszFiltered$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 08	 mov	 edx, DWORD PTR _pMsg$[ebp]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 8c 3f 02
	00		 add	 ecx, 147340		; 00023f8cH
  00021	e8 00 00 00 00	 call	 ?Filtrate@CSensitiveWordsFilter@@QAEXPBDPADH@Z ; CSensitiveWordsFilter::Filtrate

; 10346: }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?SensitiveWordFilter@CAttemperEngineSink@@UAEXPBDPADH@Z ENDP ; CAttemperEngineSink::SensitiveWordFilter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?DeleteDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?DeleteDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z PROC ; CAttemperEngineSink::DeleteDistribute, COMDAT
; _this$ = ecx

; 10470: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10471: 	//移除节点
; 10472: 	m_DistributeManage.RemoveDistributeNode(pIServerUserItem);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 34 3f 02
	00		 add	 ecx, 147252		; 00023f34H
  00019	e8 00 00 00 00	 call	 ?RemoveDistributeNode@CDistributeManager@@QAEXPBUIServerUserItem@@@Z ; CDistributeManager::RemoveDistributeNode

; 10473: 
; 10474: 	return true;

  0001e	b0 01		 mov	 al, 1

; 10475: }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?DeleteDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z ENDP ; CAttemperEngineSink::DeleteDistribute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z
_TEXT	SEGMENT
tv287 = -104						; size = 4
tv284 = -100						; size = 8
tv271 = -96						; size = 4
tv204 = -96						; size = 4
tv181 = -93						; size = 1
_wTableID$1 = -28					; size = 2
_DistributeInfo$ = -24					; size = 12
_pBindParameter$2 = -12					; size = 4
_wBindIndex$3 = -8					; size = 2
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
?InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z PROC ; CAttemperEngineSink::InsertDistribute, COMDAT
; _this$ = ecx

; 10288: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10289: 	//效验参数
; 10290: 	ASSERT(pIServerUserItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN9@InsertDist
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN9@InsertDist
  00029	cc		 int	 3
$LN9@InsertDist:

; 10291: 	if (pIServerUserItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0002e	75 07		 jne	 SHORT $LN2@InsertDist
  00030	32 c0		 xor	 al, al
  00032	e9 e1 01 00 00	 jmp	 $LN1@InsertDist
$LN2@InsertDist:

; 10292: 
; 10293: 	//状态判断
; 10294: 	ASSERT(pIServerUserItem->GetUserStatus()<US_PLAYING);

  00037	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0003a	8b 10		 mov	 edx, DWORD PTR [eax]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0003f	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00042	ff d0		 call	 eax
  00044	0f b6 c8	 movzx	 ecx, al
  00047	83 f9 05	 cmp	 ecx, 5
  0004a	7c 19		 jl	 SHORT $LN10@InsertDist
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z@4JA
  00052	83 c2 06	 add	 edx, 6
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0005b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00060	85 c0		 test	 eax, eax
  00062	74 01		 je	 SHORT $LN10@InsertDist
  00064	cc		 int	 3
$LN10@InsertDist:

; 10295: 	if (pIServerUserItem->GetUserStatus()>=US_PLAYING) return false;

  00065	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00068	8b 10		 mov	 edx, DWORD PTR [eax]
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0006d	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00070	ff d0		 call	 eax
  00072	0f b6 c8	 movzx	 ecx, al
  00075	83 f9 05	 cmp	 ecx, 5
  00078	7c 07		 jl	 SHORT $LN3@InsertDist
  0007a	32 c0		 xor	 al, al
  0007c	e9 97 01 00 00	 jmp	 $LN1@InsertDist
$LN3@InsertDist:

; 10296: 
; 10297: 	//比赛类型
; 10298: 	if(m_pIMatchServiceManager!=NULL) 

  00081	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00084	83 b8 c0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147392], 0
  0008b	74 54		 je	 SHORT $LN4@InsertDist

; 10299: 	{
; 10300: 		//获取参数
; 10301: 		WORD wBindIndex=pIServerUserItem->GetBindIndex();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00090	8b 10		 mov	 edx, DWORD PTR [eax]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00095	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00098	ff d0		 call	 eax
  0009a	66 89 45 f8	 mov	 WORD PTR _wBindIndex$3[ebp], ax

; 10302: 		tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  0009e	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	83 e9 04	 sub	 ecx, 4
  000a9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  000af	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  000b2	ff d2		 call	 edx
  000b4	89 45 f4	 mov	 DWORD PTR _pBindParameter$2[ebp], eax

; 10303: 
; 10304: 		//加入比赛
; 10305: 		return m_pIMatchServiceManager->OnEventUserJoinMatch(pIServerUserItem,0,pBindParameter->dwSocketID);

  000b7	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$2[ebp]
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	51		 push	 ecx
  000bd	6a 00		 push	 0
  000bf	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  000c2	52		 push	 edx
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000cf	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d1	8b 8a c0 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147392]
  000d7	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  000da	ff d2		 call	 edx
  000dc	e9 37 01 00 00	 jmp	 $LN1@InsertDist
$LN4@InsertDist:

; 10306: 	}
; 10307: 
; 10308: 	//判断分数
; 10309: 	if (m_pGameServiceOption->lMinTableScore>0 && pIServerUserItem->GetUserScore()<m_pGameServiceOption->lMinTableScore)

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000e7	89 4d a0	 mov	 DWORD PTR tv271[ebp], ecx
  000ea	8b 55 a0	 mov	 edx, DWORD PTR tv271[ebp]
  000ed	83 7a 24 00	 cmp	 DWORD PTR [edx+36], 0
  000f1	7c 49		 jl	 SHORT $LN5@InsertDist
  000f3	7f 09		 jg	 SHORT $LN13@InsertDist
  000f5	8b 45 a0	 mov	 eax, DWORD PTR tv271[ebp]
  000f8	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  000fc	76 3e		 jbe	 SHORT $LN5@InsertDist
$LN13@InsertDist:
  000fe	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00101	8b 10		 mov	 edx, DWORD PTR [eax]
  00103	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00106	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  0010c	ff d0		 call	 eax
  0010e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	8b 49 2c	 mov	 ecx, DWORD PTR [ecx+44]
  00114	89 45 9c	 mov	 DWORD PTR tv284[ebp], eax
  00117	89 55 a0	 mov	 DWORD PTR tv284[ebp+4], edx
  0011a	89 4d 98	 mov	 DWORD PTR tv287[ebp], ecx
  0011d	8b 55 98	 mov	 edx, DWORD PTR tv287[ebp]
  00120	8b 45 a0	 mov	 eax, DWORD PTR tv284[ebp+4]
  00123	3b 42 24	 cmp	 eax, DWORD PTR [edx+36]
  00126	7f 14		 jg	 SHORT $LN5@InsertDist
  00128	7c 0b		 jl	 SHORT $LN14@InsertDist
  0012a	8b 4d 98	 mov	 ecx, DWORD PTR tv287[ebp]
  0012d	8b 55 9c	 mov	 edx, DWORD PTR tv284[ebp]
  00130	3b 51 20	 cmp	 edx, DWORD PTR [ecx+32]
  00133	73 07		 jae	 SHORT $LN5@InsertDist
$LN14@InsertDist:

; 10310: 	{
; 10311: 		return false;

  00135	32 c0		 xor	 al, al
  00137	e9 dc 00 00 00	 jmp	 $LN1@InsertDist
$LN5@InsertDist:

; 10312: 	}
; 10313: 
; 10314: 	//变量定义
; 10315: 	tagDistributeInfo DistributeInfo;
; 10316: 	ZeroMemory(&DistributeInfo,sizeof(DistributeInfo));

  0013c	6a 0c		 push	 12			; 0000000cH
  0013e	6a 00		 push	 0
  00140	8d 45 e8	 lea	 eax, DWORD PTR _DistributeInfo$[ebp]
  00143	50		 push	 eax
  00144	e8 00 00 00 00	 call	 _memset
  00149	83 c4 0c	 add	 esp, 12			; 0000000cH

; 10317: 
; 10318: 	//设置变量
; 10319: 	DistributeInfo.pIServerUserItem=pIServerUserItem;

  0014c	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0014f	89 45 ec	 mov	 DWORD PTR _DistributeInfo$[ebp+4], eax

; 10320: 	DistributeInfo.wLastTableID=pIServerUserItem->GetTableID();

  00152	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00155	8b 10		 mov	 edx, DWORD PTR [eax]
  00157	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0015a	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0015d	ff d0		 call	 eax
  0015f	66 89 45 ea	 mov	 WORD PTR _DistributeInfo$[ebp+2], ax

; 10321: 	DistributeInfo.pPertainNode=NULL;

  00163	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _DistributeInfo$[ebp+8], 0

; 10322: 
; 10323: 	//加入数组
; 10324: 	if(m_DistributeManage.InsertDistributeNode(DistributeInfo)==false)

  0016a	8d 45 e8	 lea	 eax, DWORD PTR _DistributeInfo$[ebp]
  0016d	50		 push	 eax
  0016e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	81 c1 34 3f 02
	00		 add	 ecx, 147252		; 00023f34H
  00177	e8 00 00 00 00	 call	 ?InsertDistributeNode@CDistributeManager@@QAEHABUtagDistributeInfo@@@Z ; CDistributeManager::InsertDistributeNode
  0017c	85 c0		 test	 eax, eax
  0017e	75 26		 jne	 SHORT $LN6@InsertDist

; 10325: 	{
; 10326: 		return pIServerUserItem->IsAndroidUser()?false:true; 

  00180	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00183	8b 10		 mov	 edx, DWORD PTR [eax]
  00185	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00188	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  0018e	ff d0		 call	 eax
  00190	0f b6 c8	 movzx	 ecx, al
  00193	85 c9		 test	 ecx, ecx
  00195	74 06		 je	 SHORT $LN11@InsertDist
  00197	c6 45 a3 00	 mov	 BYTE PTR tv181[ebp], 0
  0019b	eb 04		 jmp	 SHORT $LN12@InsertDist
$LN11@InsertDist:
  0019d	c6 45 a3 01	 mov	 BYTE PTR tv181[ebp], 1
$LN12@InsertDist:
  001a1	8a 45 a3	 mov	 al, BYTE PTR tv181[ebp]
  001a4	eb 72		 jmp	 SHORT $LN1@InsertDist
$LN6@InsertDist:

; 10327: 	}
; 10328: 
; 10329: 	//用户起立
; 10330: 	if (pIServerUserItem->GetTableID()!=INVALID_TABLE)

  001a6	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001a9	8b 10		 mov	 edx, DWORD PTR [eax]
  001ab	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001ae	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  001b1	ff d0		 call	 eax
  001b3	0f b7 c8	 movzx	 ecx, ax
  001b6	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  001bc	74 3f		 je	 SHORT $LN7@InsertDist

; 10331: 	{
; 10332: 		WORD wTableID=pIServerUserItem->GetTableID();

  001be	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001c1	8b 10		 mov	 edx, DWORD PTR [eax]
  001c3	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001c6	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  001c9	ff d0		 call	 eax
  001cb	66 89 45 e4	 mov	 WORD PTR _wTableID$1[ebp], ax

; 10333: 		m_TableFrameArray[wTableID]->PerformStandUpAction(pIServerUserItem);

  001cf	0f b7 45 e4	 movzx	 eax, WORD PTR _wTableID$1[ebp]
  001d3	50		 push	 eax
  001d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d7	81 c1 cc dc 00
	00		 add	 ecx, 56524		; 0000dcccH
  001dd	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e4	89 4d a0	 mov	 DWORD PTR tv204[ebp], ecx
  001e7	6a 00		 push	 0
  001e9	8b 55 08	 mov	 edx, DWORD PTR _pIServerUserItem$[ebp]
  001ec	52		 push	 edx
  001ed	8b 45 a0	 mov	 eax, DWORD PTR tv204[ebp]
  001f0	8b 10		 mov	 edx, DWORD PTR [eax]
  001f2	8b 4d a0	 mov	 ecx, DWORD PTR tv204[ebp]
  001f5	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  001fb	ff d0		 call	 eax
$LN7@InsertDist:

; 10334: 	}
; 10335: 
; 10336: 	//发送通知
; 10337: 	SendData(pIServerUserItem,MDM_GR_USER,SUB_GR_USER_WAIT_DISTRIBUTE,NULL,0);

  001fd	6a 00		 push	 0
  001ff	6a 00		 push	 0
  00201	6a 0c		 push	 12			; 0000000cH
  00203	6a 03		 push	 3
  00205	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00208	50		 push	 eax
  00209	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00211	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00214	ff d0		 call	 eax

; 10338: 
; 10339: 	return true;

  00216	b0 01		 mov	 al, 1
$LN1@InsertDist:

; 10340: }

  00218	5f		 pop	 edi
  00219	5e		 pop	 esi
  0021a	5b		 pop	 ebx
  0021b	8b e5		 mov	 esp, ebp
  0021d	5d		 pop	 ebp
  0021e	c2 04 00	 ret	 4
?InsertDistribute@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@@Z ENDP ; CAttemperEngineSink::InsertDistribute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?DisconnectCorrespond@CAttemperEngineSink@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DisconnectCorrespond@CAttemperEngineSink@@UAE_NXZ PROC	; CAttemperEngineSink::DisconnectCorrespond, COMDAT
; _this$ = ecx

; 10273: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10274: 	//设置变量
; 10275: 	m_bNeekCorrespond=false;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 40 09 00	 mov	 BYTE PTR [eax+9], 0

; 10276: 
; 10277: 	//关闭连接
; 10278: 	if (m_pITCPSocketService!=NULL) m_pITCPSocketService->CloseSocket();

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 b8 ac 3f 02
	00 00		 cmp	 DWORD PTR [eax+147372], 0
  0001d	74 19		 je	 SHORT $LN2@Disconnect
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 88 ac 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147372]
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002d	8b 8a ac 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147372]
  00033	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00036	ff d2		 call	 edx
$LN2@Disconnect:

; 10279: 
; 10280: 	//关闭约战服务连接
; 10281: 	if (m_pPrsnlRmITCPSocketService!=NULL) m_pPrsnlRmITCPSocketService->CloseSocket();

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 b8 bc 3f 02
	00 00		 cmp	 DWORD PTR [eax+147388], 0
  00042	74 19		 je	 SHORT $LN3@Disconnect
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 88 bc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147388]
  0004d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00050	8b 01		 mov	 eax, DWORD PTR [ecx]
  00052	8b 8a bc 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147388]
  00058	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0005b	ff d2		 call	 edx
$LN3@Disconnect:

; 10282: 
; 10283: 	return true;

  0005d	b0 01		 mov	 al, 1

; 10284: }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?DisconnectCorrespond@CAttemperEngineSink@@UAE_NXZ ENDP	; CAttemperEngineSink::DisconnectCorrespond
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendDataBatchToCheatUser@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z
_TEXT	SEGMENT
tv147 = -78						; size = 2
_pITargetUserItem$1 = -12				; size = 4
_wEnumIndex$2 = -8					; size = 2
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendDataBatchToCheatUser@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z PROC ; CAttemperEngineSink::SendDataBatchToCheatUser, COMDAT
; _this$ = ecx

; 2047 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2048 : 
; 2049 : 	if (pIServerUserItem != NULL)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	74 46		 je	 SHORT $LN4@SendDataBa

; 2050 : 	{
; 2051 : 		if (CUserRight::IsGameCheatUser(pIServerUserItem->GetUserRight()))

  00012	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0001a	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0001d	ff d0		 call	 eax
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?IsGameCheatUser@CUserRight@@SA_NK@Z ; CUserRight::IsGameCheatUser
  00025	83 c4 04	 add	 esp, 4
  00028	0f b6 c8	 movzx	 ecx, al
  0002b	85 c9		 test	 ecx, ecx
  0002d	74 24		 je	 SHORT $LN6@SendDataBa

; 2052 : 		{
; 2053 : 			//发送消息
; 2054 : 			SendData(pIServerUserItem, wMainCmdID, wSubCmdID, pData, wDataSize);

  0002f	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00037	51		 push	 ecx
  00038	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0003c	52		 push	 edx
  0003d	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00041	50		 push	 eax
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00045	51		 push	 ecx
  00046	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00049	8b 02		 mov	 eax, DWORD PTR [edx]
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00051	ff d2		 call	 edx
$LN6@SendDataBa:

; 2055 : 		}
; 2056 : 	}
; 2057 : 	else

  00053	e9 ac 00 00 00	 jmp	 $LN5@SendDataBa
$LN4@SendDataBa:

; 2058 : 	{
; 2059 : 		//枚举用户
; 2060 : 		WORD wEnumIndex = 0;

  00058	33 c0		 xor	 eax, eax
  0005a	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$2[ebp], ax
$LN2@SendDataBa:

; 2061 : 		while (wEnumIndex < m_ServerUserManager.GetUserItemCount())

  0005e	0f b7 75 f8	 movzx	 esi, WORD PTR _wEnumIndex$2[ebp]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	81 c1 d4 dd 00
	00		 add	 ecx, 56788		; 0000ddd4H
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	8b 90 d4 dd 00
	00		 mov	 edx, DWORD PTR [eax+56788]
  00074	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00077	ff d0		 call	 eax
  00079	3b f0		 cmp	 esi, eax
  0007b	0f 83 83 00 00
	00		 jae	 $LN5@SendDataBa

; 2062 : 		{
; 2063 : 			//过滤用户
; 2064 : 			IServerUserItem *pITargetUserItem = m_ServerUserManager.EnumUserItem(wEnumIndex++);

  00081	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$2[ebp]
  00085	66 89 45 b2	 mov	 WORD PTR tv147[ebp], ax
  00089	0f b7 4d b2	 movzx	 ecx, WORD PTR tv147[ebp]
  0008d	51		 push	 ecx
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	81 c1 d4 dd 00
	00		 add	 ecx, 56788		; 0000ddd4H
  00097	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009a	8b 82 d4 dd 00
	00		 mov	 eax, DWORD PTR [edx+56788]
  000a0	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000a3	ff d2		 call	 edx
  000a5	89 45 f4	 mov	 DWORD PTR _pITargetUserItem$1[ebp], eax
  000a8	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$2[ebp]
  000ac	66 83 c0 01	 add	 ax, 1
  000b0	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$2[ebp], ax

; 2065 : 			if (pITargetUserItem == NULL) continue;

  000b4	83 7d f4 00	 cmp	 DWORD PTR _pITargetUserItem$1[ebp], 0
  000b8	75 02		 jne	 SHORT $LN7@SendDataBa
  000ba	eb a2		 jmp	 SHORT $LN2@SendDataBa
$LN7@SendDataBa:

; 2066 : 			if (CUserRight::IsGameCheatUser(pITargetUserItem->GetUserRight()) == false) continue;

  000bc	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$1[ebp]
  000bf	8b 10		 mov	 edx, DWORD PTR [eax]
  000c1	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$1[ebp]
  000c4	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  000c7	ff d0		 call	 eax
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?IsGameCheatUser@CUserRight@@SA_NK@Z ; CUserRight::IsGameCheatUser
  000cf	83 c4 04	 add	 esp, 4
  000d2	0f b6 c8	 movzx	 ecx, al
  000d5	85 c9		 test	 ecx, ecx
  000d7	75 02		 jne	 SHORT $LN8@SendDataBa
  000d9	eb 83		 jmp	 SHORT $LN2@SendDataBa
$LN8@SendDataBa:

; 2067 : 
; 2068 : 			//发送消息
; 2069 : 			SendData(pITargetUserItem, wMainCmdID, wSubCmdID, pData, wDataSize);

  000db	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000df	50		 push	 eax
  000e0	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  000e3	51		 push	 ecx
  000e4	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  000e8	52		 push	 edx
  000e9	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$1[ebp]
  000f1	51		 push	 ecx
  000f2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000f5	8b 02		 mov	 eax, DWORD PTR [edx]
  000f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000fd	ff d2		 call	 edx

; 2070 : 		}

  000ff	e9 5a ff ff ff	 jmp	 $LN2@SendDataBa
$LN5@SendDataBa:

; 2071 : 	}
; 2072 : 	return true;

  00104	b0 01		 mov	 al, 1

; 2073 : }

  00106	5f		 pop	 edi
  00107	5e		 pop	 esi
  00108	5b		 pop	 ebx
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c2 14 00	 ret	 20			; 00000014H
?SendDataBatchToCheatUser@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z ENDP ; CAttemperEngineSink::SendDataBatchToCheatUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendDataBatchToMobileUser@CAttemperEngineSink@@UAE_NGGGPAXG@Z
_TEXT	SEGMENT
tv158 = -108						; size = 4
tv153 = -108						; size = 4
tv148 = -108						; size = 4
tv143 = -108						; size = 4
tv91 = -106						; size = 2
_wLastPagePos$1 = -40					; size = 2
_wEverySendPage$2 = -36					; size = 2
_wTagerDeskCount$3 = -32				; size = 2
_wTagerDeskPos$4 = -28					; size = 2
_bRecviceRoomWhisper$5 = -24				; size = 1
_bRecviceRoomChat$6 = -23				; size = 1
_bRecviceGameChat$7 = -22				; size = 1
_bViewModeAll$8 = -21					; size = 1
_wTagerTableID$9 = -20					; size = 2
_wMobileUserRule$10 = -16				; size = 2
_pITargetUserItem$11 = -12				; size = 4
_wEnumIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wCmdTable$ = 8						; size = 2
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendDataBatchToMobileUser@CAttemperEngineSink@@UAE_NGGGPAXG@Z PROC ; CAttemperEngineSink::SendDataBatchToMobileUser, COMDAT
; _this$ = ecx

; 2076 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2077 : 	//枚举用户
; 2078 : 	WORD wEnumIndex=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax
$LN2@SendDataBa:

; 2079 : 	while(wEnumIndex<m_ServerUserManager.GetUserItemCount())

  00012	0f b7 75 f8	 movzx	 esi, WORD PTR _wEnumIndex$[ebp]
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 d4 dd 00
	00		 add	 ecx, 56788		; 0000ddd4H
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 90 d4 dd 00
	00		 mov	 edx, DWORD PTR [eax+56788]
  00028	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0002b	ff d0		 call	 eax
  0002d	3b f0		 cmp	 esi, eax
  0002f	0f 83 ef 02 00
	00		 jae	 $LN3@SendDataBa

; 2080 : 	{
; 2081 : 		//过滤用户
; 2082 : 		IServerUserItem *pITargetUserItem=m_ServerUserManager.EnumUserItem(wEnumIndex++);

  00035	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00039	66 89 45 96	 mov	 WORD PTR tv91[ebp], ax
  0003d	0f b7 4d 96	 movzx	 ecx, WORD PTR tv91[ebp]
  00041	51		 push	 ecx
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 d4 dd 00
	00		 add	 ecx, 56788		; 0000ddd4H
  0004b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 82 d4 dd 00
	00		 mov	 eax, DWORD PTR [edx+56788]
  00054	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00057	ff d2		 call	 edx
  00059	89 45 f4	 mov	 DWORD PTR _pITargetUserItem$11[ebp], eax
  0005c	66 8b 45 f8	 mov	 ax, WORD PTR _wEnumIndex$[ebp]
  00060	66 83 c0 01	 add	 ax, 1
  00064	66 89 45 f8	 mov	 WORD PTR _wEnumIndex$[ebp], ax

; 2083 : 		if(pITargetUserItem==NULL) continue;

  00068	83 7d f4 00	 cmp	 DWORD PTR _pITargetUserItem$11[ebp], 0
  0006c	75 02		 jne	 SHORT $LN4@SendDataBa
  0006e	eb a2		 jmp	 SHORT $LN2@SendDataBa
$LN4@SendDataBa:

; 2084 : 		if(!pITargetUserItem->IsMobileUser()) continue;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$11[ebp]
  00073	8b 10		 mov	 edx, DWORD PTR [eax]
  00075	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  00078	8b 82 c8 00 00
	00		 mov	 eax, DWORD PTR [edx+200]
  0007e	ff d0		 call	 eax
  00080	0f b6 c8	 movzx	 ecx, al
  00083	85 c9		 test	 ecx, ecx
  00085	75 02		 jne	 SHORT $LN5@SendDataBa
  00087	eb 89		 jmp	 SHORT $LN2@SendDataBa
$LN5@SendDataBa:

; 2085 : 
; 2086 : 		//定义变量
; 2087 : 		WORD wMobileUserRule = pITargetUserItem->GetMobileUserRule();

  00089	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$11[ebp]
  0008c	8b 10		 mov	 edx, DWORD PTR [eax]
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  00091	8b 82 24 01 00
	00		 mov	 eax, DWORD PTR [edx+292]
  00097	ff d0		 call	 eax
  00099	66 89 45 f0	 mov	 WORD PTR _wMobileUserRule$10[ebp], ax

; 2088 : 		WORD wTagerTableID = pITargetUserItem->GetTableID();

  0009d	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$11[ebp]
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  000a5	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  000a8	ff d0		 call	 eax
  000aa	66 89 45 ec	 mov	 WORD PTR _wTagerTableID$9[ebp], ax

; 2089 : 		bool bViewModeAll = ((wMobileUserRule&VIEW_MODE_ALL)!=0);

  000ae	0f b7 45 f0	 movzx	 eax, WORD PTR _wMobileUserRule$10[ebp]
  000b2	83 e0 01	 and	 eax, 1
  000b5	74 09		 je	 SHORT $LN29@SendDataBa
  000b7	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv143[ebp], 1
  000be	eb 07		 jmp	 SHORT $LN30@SendDataBa
$LN29@SendDataBa:
  000c0	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN30@SendDataBa:
  000c7	8a 4d 94	 mov	 cl, BYTE PTR tv143[ebp]
  000ca	88 4d eb	 mov	 BYTE PTR _bViewModeAll$8[ebp], cl

; 2090 : 		bool bRecviceGameChat = ((wMobileUserRule&RECVICE_GAME_CHAT)!=0);

  000cd	0f b7 45 f0	 movzx	 eax, WORD PTR _wMobileUserRule$10[ebp]
  000d1	25 00 01 00 00	 and	 eax, 256		; 00000100H
  000d6	74 09		 je	 SHORT $LN31@SendDataBa
  000d8	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv148[ebp], 1
  000df	eb 07		 jmp	 SHORT $LN32@SendDataBa
$LN31@SendDataBa:
  000e1	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN32@SendDataBa:
  000e8	8a 4d 94	 mov	 cl, BYTE PTR tv148[ebp]
  000eb	88 4d ea	 mov	 BYTE PTR _bRecviceGameChat$7[ebp], cl

; 2091 : 		bool bRecviceRoomChat = ((wMobileUserRule&RECVICE_ROOM_CHAT)!=0);

  000ee	0f b7 45 f0	 movzx	 eax, WORD PTR _wMobileUserRule$10[ebp]
  000f2	25 00 02 00 00	 and	 eax, 512		; 00000200H
  000f7	74 09		 je	 SHORT $LN33@SendDataBa
  000f9	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv153[ebp], 1
  00100	eb 07		 jmp	 SHORT $LN34@SendDataBa
$LN33@SendDataBa:
  00102	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN34@SendDataBa:
  00109	8a 4d 94	 mov	 cl, BYTE PTR tv153[ebp]
  0010c	88 4d e9	 mov	 BYTE PTR _bRecviceRoomChat$6[ebp], cl

; 2092 : 		bool bRecviceRoomWhisper = ((wMobileUserRule&RECVICE_ROOM_WHISPER)!=0);

  0010f	0f b7 45 f0	 movzx	 eax, WORD PTR _wMobileUserRule$10[ebp]
  00113	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00118	74 09		 je	 SHORT $LN35@SendDataBa
  0011a	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv158[ebp], 1
  00121	eb 07		 jmp	 SHORT $LN36@SendDataBa
$LN35@SendDataBa:
  00123	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN36@SendDataBa:
  0012a	8a 4d 94	 mov	 cl, BYTE PTR tv158[ebp]
  0012d	88 4d e8	 mov	 BYTE PTR _bRecviceRoomWhisper$5[ebp], cl

; 2093 : 
; 2094 : 		//状态过滤
; 2095 : 		if((pITargetUserItem->GetUserStatus() >= US_SIT) && pITargetUserItem->IsClientReady() &&(m_pGameServiceOption->wServerType!=GAME_GENRE_MATCH))

  00130	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$11[ebp]
  00133	8b 10		 mov	 edx, DWORD PTR [eax]
  00135	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  00138	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0013b	ff d0		 call	 eax
  0013d	0f b6 c8	 movzx	 ecx, al
  00140	83 f9 02	 cmp	 ecx, 2
  00143	7c 42		 jl	 SHORT $LN6@SendDataBa
  00145	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$11[ebp]
  00148	8b 10		 mov	 edx, DWORD PTR [eax]
  0014a	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  0014d	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  00153	ff d0		 call	 eax
  00155	0f b6 c8	 movzx	 ecx, al
  00158	85 c9		 test	 ecx, ecx
  0015a	74 2b		 je	 SHORT $LN6@SendDataBa
  0015c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015f	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00162	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00166	83 fa 04	 cmp	 edx, 4
  00169	74 1c		 je	 SHORT $LN6@SendDataBa

; 2096 : 		{
; 2097 : 			if(wCmdTable!=INVALID_WORD && wTagerTableID != wCmdTable)continue;

  0016b	0f b7 45 08	 movzx	 eax, WORD PTR _wCmdTable$[ebp]
  0016f	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00174	74 11		 je	 SHORT $LN6@SendDataBa
  00176	0f b7 45 ec	 movzx	 eax, WORD PTR _wTagerTableID$9[ebp]
  0017a	0f b7 4d 08	 movzx	 ecx, WORD PTR _wCmdTable$[ebp]
  0017e	3b c1		 cmp	 eax, ecx
  00180	74 05		 je	 SHORT $LN6@SendDataBa
  00182	e9 8b fe ff ff	 jmp	 $LN2@SendDataBa
$LN6@SendDataBa:

; 2098 : 		}
; 2099 : 
; 2100 : 		//聊天过滤
; 2101 : 		if(wSubCmdID==SUB_GR_USER_CHAT || wSubCmdID==SUB_GR_USER_EXPRESSION)

  00187	0f b7 45 10	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0018b	3d c9 00 00 00	 cmp	 eax, 201		; 000000c9H
  00190	74 0b		 je	 SHORT $LN9@SendDataBa
  00192	0f b7 45 10	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00196	3d ca 00 00 00	 cmp	 eax, 202		; 000000caH
  0019b	75 15		 jne	 SHORT $LN8@SendDataBa
$LN9@SendDataBa:

; 2102 : 		{
; 2103 : 			if(!bRecviceGameChat || !bRecviceRoomChat) continue;

  0019d	0f b6 45 ea	 movzx	 eax, BYTE PTR _bRecviceGameChat$7[ebp]
  001a1	85 c0		 test	 eax, eax
  001a3	74 08		 je	 SHORT $LN11@SendDataBa
  001a5	0f b6 45 e9	 movzx	 eax, BYTE PTR _bRecviceRoomChat$6[ebp]
  001a9	85 c0		 test	 eax, eax
  001ab	75 05		 jne	 SHORT $LN8@SendDataBa
$LN11@SendDataBa:
  001ad	e9 60 fe ff ff	 jmp	 $LN2@SendDataBa
$LN8@SendDataBa:

; 2104 : 		}
; 2105 : 		if(wSubCmdID==SUB_GR_WISPER_CHAT || wSubCmdID==SUB_GR_WISPER_EXPRESSION)

  001b2	0f b7 45 10	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  001b6	3d cb 00 00 00	 cmp	 eax, 203		; 000000cbH
  001bb	74 0b		 je	 SHORT $LN13@SendDataBa
  001bd	0f b7 45 10	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  001c1	3d cc 00 00 00	 cmp	 eax, 204		; 000000ccH
  001c6	75 0d		 jne	 SHORT $LN12@SendDataBa
$LN13@SendDataBa:

; 2106 : 		{
; 2107 : 			if(!bRecviceRoomWhisper) continue;

  001c8	0f b6 45 e8	 movzx	 eax, BYTE PTR _bRecviceRoomWhisper$5[ebp]
  001cc	85 c0		 test	 eax, eax
  001ce	75 05		 jne	 SHORT $LN12@SendDataBa
  001d0	e9 3d fe ff ff	 jmp	 $LN2@SendDataBa
$LN12@SendDataBa:

; 2108 : 		}
; 2109 : 
; 2110 : 		//部分可视
; 2111 : 		if(!bViewModeAll)

  001d5	0f b6 45 eb	 movzx	 eax, BYTE PTR _bViewModeAll$8[ebp]
  001d9	85 c0		 test	 eax, eax
  001db	0f 85 1a 01 00
	00		 jne	 $LN15@SendDataBa

; 2112 : 		{
; 2113 : 			//消息过滤
; 2114 : 			if(wMainCmdID==MDM_GR_USER && wSubCmdID==SUB_GR_USER_ENTER && wCmdTable==INVALID_TABLE) continue;

  001e1	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  001e5	83 f8 03	 cmp	 eax, 3
  001e8	75 19		 jne	 SHORT $LN16@SendDataBa
  001ea	0f b7 45 10	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  001ee	83 f8 64	 cmp	 eax, 100		; 00000064H
  001f1	75 10		 jne	 SHORT $LN16@SendDataBa
  001f3	0f b7 45 08	 movzx	 eax, WORD PTR _wCmdTable$[ebp]
  001f7	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  001fc	75 05		 jne	 SHORT $LN16@SendDataBa
  001fe	e9 0f fe ff ff	 jmp	 $LN2@SendDataBa
$LN16@SendDataBa:

; 2115 : 			
; 2116 : 			//定义变量
; 2117 : 			WORD wTagerDeskPos = pITargetUserItem->GetMobileUserDeskPos();

  00203	8b 45 f4	 mov	 eax, DWORD PTR _pITargetUserItem$11[ebp]
  00206	8b 10		 mov	 edx, DWORD PTR [eax]
  00208	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  0020b	8b 82 2c 01 00
	00		 mov	 eax, DWORD PTR [edx+300]
  00211	ff d0		 call	 eax
  00213	66 89 45 e4	 mov	 WORD PTR _wTagerDeskPos$4[ebp], ax

; 2118 : 			WORD wTagerDeskCount = m_pInitParameter->m_wVisibleTableCount;

  00217	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0021a	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0021d	66 8b 51 6c	 mov	 dx, WORD PTR [ecx+108]
  00221	66 89 55 e0	 mov	 WORD PTR _wTagerDeskCount$3[ebp], dx

; 2119 : 			WORD wEverySendPage = m_pInitParameter->m_wEverySendPageCount;

  00225	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00228	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0022b	66 8b 51 6e	 mov	 dx, WORD PTR [ecx+110]
  0022f	66 89 55 dc	 mov	 WORD PTR _wEverySendPage$2[ebp], dx

; 2120 : 
; 2121 : 			//状态消息过滤
; 2122 : 			if (wCmdTable!=INVALID_TABLE)

  00233	0f b7 45 08	 movzx	 eax, WORD PTR _wCmdTable$[ebp]
  00237	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0023c	0f 84 b9 00 00
	00		 je	 $LN15@SendDataBa

; 2123 : 			{
; 2124 : 				WORD wLastPagePos=(m_pGameServiceOption->wTableCount/wTagerDeskCount)*wTagerDeskCount;

  00242	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00245	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00248	0f b7 41 46	 movzx	 eax, WORD PTR [ecx+70]
  0024c	0f b7 4d e0	 movzx	 ecx, WORD PTR _wTagerDeskCount$3[ebp]
  00250	99		 cdq
  00251	f7 f9		 idiv	 ecx
  00253	0f b7 55 e0	 movzx	 edx, WORD PTR _wTagerDeskCount$3[ebp]
  00257	0f af c2	 imul	 eax, edx
  0025a	66 89 45 d8	 mov	 WORD PTR _wLastPagePos$1[ebp], ax

; 2125 : 
; 2126 : 				if (wCmdTable==0)

  0025e	0f b7 45 08	 movzx	 eax, WORD PTR _wCmdTable$[ebp]
  00262	85 c0		 test	 eax, eax
  00264	75 1d		 jne	 SHORT $LN18@SendDataBa

; 2127 : 				{
; 2128 : 					if ((wTagerDeskPos < 0)||(wTagerDeskPos > 2*wTagerDeskCount))continue;

  00266	0f b7 45 e4	 movzx	 eax, WORD PTR _wTagerDeskPos$4[ebp]
  0026a	85 c0		 test	 eax, eax
  0026c	7c 0e		 jl	 SHORT $LN21@SendDataBa
  0026e	0f b7 45 e4	 movzx	 eax, WORD PTR _wTagerDeskPos$4[ebp]
  00272	0f b7 4d e0	 movzx	 ecx, WORD PTR _wTagerDeskCount$3[ebp]
  00276	d1 e1		 shl	 ecx, 1
  00278	3b c1		 cmp	 eax, ecx
  0027a	7e 05		 jle	 SHORT $LN20@SendDataBa
$LN21@SendDataBa:
  0027c	e9 91 fd ff ff	 jmp	 $LN2@SendDataBa
$LN20@SendDataBa:

; 2129 : 				}

  00281	eb 78		 jmp	 SHORT $LN15@SendDataBa
$LN18@SendDataBa:

; 2130 : 				else if (wCmdTable==wLastPagePos)

  00283	0f b7 45 08	 movzx	 eax, WORD PTR _wCmdTable$[ebp]
  00287	0f b7 4d d8	 movzx	 ecx, WORD PTR _wLastPagePos$1[ebp]
  0028b	3b c1		 cmp	 eax, ecx
  0028d	75 2d		 jne	 SHORT $LN22@SendDataBa

; 2131 : 				{
; 2132 : 					if ((wTagerDeskPos < wLastPagePos-2*wTagerDeskCount)||(wTagerDeskPos > wLastPagePos+wTagerDeskCount))continue;

  0028f	0f b7 45 e4	 movzx	 eax, WORD PTR _wTagerDeskPos$4[ebp]
  00293	0f b7 4d d8	 movzx	 ecx, WORD PTR _wLastPagePos$1[ebp]
  00297	0f b7 55 e0	 movzx	 edx, WORD PTR _wTagerDeskCount$3[ebp]
  0029b	d1 e2		 shl	 edx, 1
  0029d	2b ca		 sub	 ecx, edx
  0029f	3b c1		 cmp	 eax, ecx
  002a1	7c 12		 jl	 SHORT $LN25@SendDataBa
  002a3	0f b7 45 e4	 movzx	 eax, WORD PTR _wTagerDeskPos$4[ebp]
  002a7	0f b7 4d d8	 movzx	 ecx, WORD PTR _wLastPagePos$1[ebp]
  002ab	0f b7 55 e0	 movzx	 edx, WORD PTR _wTagerDeskCount$3[ebp]
  002af	03 ca		 add	 ecx, edx
  002b1	3b c1		 cmp	 eax, ecx
  002b3	7e 05		 jle	 SHORT $LN24@SendDataBa
$LN25@SendDataBa:
  002b5	e9 58 fd ff ff	 jmp	 $LN2@SendDataBa
$LN24@SendDataBa:

; 2133 : 				}
; 2134 : 				else

  002ba	eb 3f		 jmp	 SHORT $LN15@SendDataBa
$LN22@SendDataBa:

; 2135 : 				{
; 2136 : 					if ((wTagerDeskPos < wCmdTable-wEverySendPage*wTagerDeskCount)||(wTagerDeskPos > wCmdTable+wEverySendPage*wTagerDeskCount+wTagerDeskCount-1))continue;

  002bc	0f b7 45 e4	 movzx	 eax, WORD PTR _wTagerDeskPos$4[ebp]
  002c0	0f b7 4d 08	 movzx	 ecx, WORD PTR _wCmdTable$[ebp]
  002c4	0f b7 55 dc	 movzx	 edx, WORD PTR _wEverySendPage$2[ebp]
  002c8	0f b7 75 e0	 movzx	 esi, WORD PTR _wTagerDeskCount$3[ebp]
  002cc	0f af d6	 imul	 edx, esi
  002cf	2b ca		 sub	 ecx, edx
  002d1	3b c1		 cmp	 eax, ecx
  002d3	7c 21		 jl	 SHORT $LN27@SendDataBa
  002d5	0f b7 45 e4	 movzx	 eax, WORD PTR _wTagerDeskPos$4[ebp]
  002d9	0f b7 4d 08	 movzx	 ecx, WORD PTR _wCmdTable$[ebp]
  002dd	0f b7 55 dc	 movzx	 edx, WORD PTR _wEverySendPage$2[ebp]
  002e1	0f b7 75 e0	 movzx	 esi, WORD PTR _wTagerDeskCount$3[ebp]
  002e5	0f af d6	 imul	 edx, esi
  002e8	03 ca		 add	 ecx, edx
  002ea	0f b7 55 e0	 movzx	 edx, WORD PTR _wTagerDeskCount$3[ebp]
  002ee	8d 4c 11 ff	 lea	 ecx, DWORD PTR [ecx+edx-1]
  002f2	3b c1		 cmp	 eax, ecx
  002f4	7e 05		 jle	 SHORT $LN15@SendDataBa
$LN27@SendDataBa:
  002f6	e9 17 fd ff ff	 jmp	 $LN2@SendDataBa
$LN15@SendDataBa:

; 2137 : 				}
; 2138 : 			}
; 2139 : 		}
; 2140 : 
; 2141 : 		//发送消息
; 2142 : 		SendData(pITargetUserItem,wMainCmdID,wSubCmdID,pData,wDataSize);

  002fb	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002ff	50		 push	 eax
  00300	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00303	51		 push	 ecx
  00304	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00308	52		 push	 edx
  00309	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0030d	50		 push	 eax
  0030e	8b 4d f4	 mov	 ecx, DWORD PTR _pITargetUserItem$11[ebp]
  00311	51		 push	 ecx
  00312	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00315	8b 02		 mov	 eax, DWORD PTR [edx]
  00317	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031a	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0031d	ff d2		 call	 edx

; 2143 : 	}

  0031f	e9 ee fc ff ff	 jmp	 $LN2@SendDataBa
$LN3@SendDataBa:

; 2144 : 
; 2145 : 	return true;

  00324	b0 01		 mov	 al, 1

; 2146 : }

  00326	5f		 pop	 edi
  00327	5e		 pop	 esi
  00328	5b		 pop	 ebx
  00329	8b e5		 mov	 esp, ebp
  0032b	5d		 pop	 ebp
  0032c	c2 14 00	 ret	 20			; 00000014H
?SendDataBatchToMobileUser@CAttemperEngineSink@@UAE_NGGGPAXG@Z ENDP ; CAttemperEngineSink::SendDataBatchToMobileUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z
_TEXT	SEGMENT
_pBindParameter$1 = -20					; size = 4
_wBindIndex$2 = -16					; size = 2
_pBindParameter$3 = -12					; size = 4
_wBindIndex$4 = -8					; size = 2
_this$ = -4						; size = 4
_pIServerUserItem$ = 8					; size = 4
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z PROC ; CAttemperEngineSink::SendData, COMDAT
; _this$ = ecx

; 2016 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2017 : 	//效验参数
; 2018 : 	ASSERT(pIServerUserItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN7@SendData
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN7@SendData
  00029	cc		 int	 3
$LN7@SendData:

; 2019 : 	if (pIServerUserItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0002e	75 07		 jne	 SHORT $LN2@SendData
  00030	32 c0		 xor	 al, al
  00032	e9 f2 00 00 00	 jmp	 $LN1@SendData
$LN2@SendData:

; 2020 : 
; 2021 : 	//发送数据
; 2022 : 	if (pIServerUserItem->GetBindIndex()!=INVALID_WORD)

  00037	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0003a	8b 10		 mov	 edx, DWORD PTR [eax]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0003f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00042	ff d0		 call	 eax
  00044	0f b7 c8	 movzx	 ecx, ax
  00047	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0004d	0f 84 d4 00 00
	00		 je	 $LN3@SendData

; 2023 : 	{
; 2024 : 		if (pIServerUserItem->IsAndroidUser()==true)

  00053	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00056	8b 10		 mov	 edx, DWORD PTR [eax]
  00058	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0005b	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00061	ff d0		 call	 eax
  00063	0f b6 c8	 movzx	 ecx, al
  00066	83 f9 01	 cmp	 ecx, 1
  00069	75 5c		 jne	 SHORT $LN4@SendData

; 2025 : 		{
; 2026 : 			//机器用户
; 2027 : 			WORD wBindIndex=pIServerUserItem->GetBindIndex();

  0006b	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0006e	8b 10		 mov	 edx, DWORD PTR [eax]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00073	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00076	ff d0		 call	 eax
  00078	66 89 45 f8	 mov	 WORD PTR _wBindIndex$4[ebp], ax

; 2028 : 			tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  0007c	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$4[ebp]
  00080	50		 push	 eax
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	83 e9 04	 sub	 ecx, 4
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  0008d	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00090	ff d2		 call	 edx
  00092	89 45 f4	 mov	 DWORD PTR _pBindParameter$3[ebp], eax

; 2029 : 			m_AndroidUserManager.SendDataToClient(pBindParameter->dwSocketID,wMainCmdID,wSubCmdID,pData,wDataSize);

  00095	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  0009d	51		 push	 ecx
  0009e	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  000a2	52		 push	 edx
  000a3	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d f4	 mov	 ecx, DWORD PTR _pBindParameter$3[ebp]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	52		 push	 edx
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 90 24 de 00
	00		 mov	 edx, DWORD PTR [eax+56868]
  000c0	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000c3	ff d0		 call	 eax

; 2030 : 		}
; 2031 : 		else

  000c5	eb 5c		 jmp	 SHORT $LN5@SendData
$LN4@SendData:

; 2032 : 		{
; 2033 : 			//常规用户
; 2034 : 			WORD wBindIndex=pIServerUserItem->GetBindIndex();

  000c7	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ca	8b 10		 mov	 edx, DWORD PTR [eax]
  000cc	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000cf	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d2	ff d0		 call	 eax
  000d4	66 89 45 f0	 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 2035 : 			tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  000d8	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  000dc	50		 push	 eax
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	83 e9 04	 sub	 ecx, 4
  000e3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  000e9	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  000ec	ff d2		 call	 edx
  000ee	89 45 ec	 mov	 DWORD PTR _pBindParameter$1[ebp], eax

; 2036 : 			m_pITCPNetworkEngine->SendData(pBindParameter->dwSocketID,wMainCmdID,wSubCmdID,pData,wDataSize);

  000f1	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  000f9	51		 push	 ecx
  000fa	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  000fe	52		 push	 edx
  000ff	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00103	50		 push	 eax
  00104	8b 4d ec	 mov	 ecx, DWORD PTR _pBindParameter$1[ebp]
  00107	8b 11		 mov	 edx, DWORD PTR [ecx]
  00109	52		 push	 edx
  0010a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00113	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00116	8b 01		 mov	 eax, DWORD PTR [ecx]
  00118	8b 8a b0 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147376]
  0011e	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00121	ff d2		 call	 edx
$LN5@SendData:

; 2037 : 		}
; 2038 : 
; 2039 : 		return true;

  00123	b0 01		 mov	 al, 1
  00125	eb 02		 jmp	 SHORT $LN1@SendData
$LN3@SendData:

; 2040 : 	}
; 2041 : 
; 2042 : 	return false;

  00127	32 c0		 xor	 al, al
$LN1@SendData:

; 2043 : }

  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 14 00	 ret	 20			; 00000014H
?SendData@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@GGPAXG@Z ENDP ; CAttemperEngineSink::SendData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendData@CAttemperEngineSink@@UAE_NKGGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwSocketID$ = 8					; size = 4
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendData@CAttemperEngineSink@@UAE_NKGGPAXG@Z PROC	; CAttemperEngineSink::SendData, COMDAT
; _this$ = ecx

; 1995 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1996 : 	//发送数据
; 1997 : 	if (LOWORD(dwSocketID)!=INVALID_WORD)

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	0f b7 c8	 movzx	 ecx, ax
  00017	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0001d	74 73		 je	 SHORT $LN2@SendData

; 1998 : 	{
; 1999 : 		if (LOWORD(dwSocketID)>=INDEX_ANDROID)

  0001f	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00022	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00027	0f b7 c8	 movzx	 ecx, ax
  0002a	81 f9 00 20 00
	00		 cmp	 ecx, 8192		; 00002000H
  00030	7c 30		 jl	 SHORT $LN3@SendData

; 2000 : 		{
; 2001 : 			//机器用户
; 2002 : 			m_AndroidUserManager.SendDataToClient(dwSocketID,wMainCmdID,wSubCmdID,pData,wDataSize);

  00032	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  0003a	51		 push	 ecx
  0003b	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0003f	52		 push	 edx
  00040	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00048	51		 push	 ecx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  0005b	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  0005e	ff d2		 call	 edx

; 2003 : 		}
; 2004 : 		else 

  00060	eb 30		 jmp	 SHORT $LN2@SendData
$LN3@SendData:

; 2005 : 		{
; 2006 : 			//网络用户
; 2007 : 			m_pITCPNetworkEngine->SendData(dwSocketID,wMainCmdID,wSubCmdID,pData,wDataSize);

  00062	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00066	50		 push	 eax
  00067	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  0006a	51		 push	 ecx
  0006b	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0006f	52		 push	 edx
  00070	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00074	50		 push	 eax
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00078	51		 push	 ecx
  00079	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007c	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	8b 10		 mov	 edx, DWORD PTR [eax]
  00087	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  0008d	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00090	ff d0		 call	 eax
$LN2@SendData:

; 2008 : 		}
; 2009 : 	}
; 2010 : 
; 2011 : 	return true;

  00092	b0 01		 mov	 al, 1

; 2012 : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 14 00	 ret	 20			; 00000014H
?SendData@CAttemperEngineSink@@UAE_NKGGPAXG@Z ENDP	; CAttemperEngineSink::SendData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendData@CAttemperEngineSink@@UAE_NEGGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbSendMask$ = 8					; size = 1
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendData@CAttemperEngineSink@@UAE_NEGGPAXG@Z PROC	; CAttemperEngineSink::SendData, COMDAT
; _this$ = ecx

; 1972 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1973 : 	//机器数据
; 1974 : 	if ((cbSendMask&BG_COMPUTER)!=0)

  0000c	0f b6 45 08	 movzx	 eax, BYTE PTR _cbSendMask$[ebp]
  00010	83 e0 02	 and	 eax, 2
  00013	74 2a		 je	 SHORT $LN2@SendData

; 1975 : 	{
; 1976 : 		m_AndroidUserManager.SendDataToClient(wMainCmdID,wSubCmdID,pData,wDataSize);

  00015	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  0001d	51		 push	 ecx
  0001e	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00022	52		 push	 edx
  00023	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  0003a	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  0003d	ff d2		 call	 edx
$LN2@SendData:

; 1977 : 	}
; 1978 : 
; 1979 : 	//用户数据
; 1980 : 	if (cbSendMask==BG_ALL_CLIENT)

  0003f	0f b6 45 08	 movzx	 eax, BYTE PTR _cbSendMask$[ebp]
  00043	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  00048	75 5e		 jne	 SHORT $LN3@SendData

; 1981 : 	{
; 1982 : 		m_pITCPNetworkEngine->SendDataBatch(wMainCmdID,wSubCmdID,pData,wDataSize,BG_MOBILE);

  0004a	6a 01		 push	 1
  0004c	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00050	50		 push	 eax
  00051	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00054	51		 push	 ecx
  00055	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00059	52		 push	 edx
  0005a	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 12		 mov	 edx, DWORD PTR [edx]
  0006d	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00073	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00076	ff d0		 call	 eax

; 1983 : 		m_pITCPNetworkEngine->SendDataBatch(wMainCmdID,wSubCmdID,pData,wDataSize,BG_COMPUTER);

  00078	6a 02		 push	 2
  0007a	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0007e	50		 push	 eax
  0007f	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00082	51		 push	 ecx
  00083	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00087	52		 push	 edx
  00088	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00096	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 12		 mov	 edx, DWORD PTR [edx]
  0009b	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  000a1	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000a4	ff d0		 call	 eax

; 1984 : 	}
; 1985 : 	else

  000a6	eb 31		 jmp	 SHORT $LN4@SendData
$LN3@SendData:

; 1986 : 	{
; 1987 : 		m_pITCPNetworkEngine->SendDataBatch(wMainCmdID,wSubCmdID,pData,wDataSize,cbSendMask);

  000a8	0f b6 45 08	 movzx	 eax, BYTE PTR _cbSendMask$[ebp]
  000ac	50		 push	 eax
  000ad	0f b7 4d 18	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000b1	51		 push	 ecx
  000b2	8b 55 14	 mov	 edx, DWORD PTR _pData$[ebp]
  000b5	52		 push	 edx
  000b6	0f b7 45 10	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000ba	50		 push	 eax
  000bb	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wMainCmdID$[ebp]
  000bf	51		 push	 ecx
  000c0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c3	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	8b 10		 mov	 edx, DWORD PTR [eax]
  000ce	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  000d4	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000d7	ff d0		 call	 eax
$LN4@SendData:

; 1988 : 	}
; 1989 : 
; 1990 : 	return true;

  000d9	b0 01		 mov	 al, 1

; 1991 : }

  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 14 00	 ret	 20			; 00000014H
?SendData@CAttemperEngineSink@@UAE_NEGGPAXG@Z ENDP	; CAttemperEngineSink::SendData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendRoomMessage@CAttemperEngineSink@@UAE_NKPBDG_N@Z
_TEXT	SEGMENT
_wSendSize$ = -1044					; size = 2
_wHeadSize$ = -1040					; size = 2
_SystemMessage$ = -1036					; size = 1028
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwSocketID$ = 8					; size = 4
_lpszMessage$ = 12					; size = 4
_wType$ = 16						; size = 2
_bAndroid$ = 20						; size = 1
?SendRoomMessage@CAttemperEngineSink@@UAE_NKPBDG_N@Z PROC ; CAttemperEngineSink::SendRoomMessage, COMDAT
; _this$ = ecx

; 1941 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 04 00
	00		 sub	 esp, 1236		; 000004d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1942 : 	//变量定义
; 1943 : 	CMD_CM_SystemMessage SystemMessage;
; 1944 : 	ZeroMemory(&SystemMessage,sizeof(SystemMessage));

  00019	68 04 04 00 00	 push	 1028			; 00000404H
  0001e	6a 00		 push	 0
  00020	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1945 : 
; 1946 : 	//构造数据
; 1947 : 	SystemMessage.wType=wType;

  0002f	66 8b 45 10	 mov	 ax, WORD PTR _wType$[ebp]
  00033	66 89 85 f4 fb
	ff ff		 mov	 WORD PTR _SystemMessage$[ebp], ax

; 1948 : 	SystemMessage.wLength=lstrlen(lpszMessage)+1;

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00044	83 c0 01	 add	 eax, 1
  00047	66 89 85 f6 fb
	ff ff		 mov	 WORD PTR _SystemMessage$[ebp+2], ax

; 1949 : 	lstrcpyn(SystemMessage.szString,lpszMessage,CountArray(SystemMessage.szString));

  0004e	68 00 04 00 00	 push	 1024			; 00000400H
  00053	8b 45 0c	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  00056	50		 push	 eax
  00057	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp+4]
  0005d	51		 push	 ecx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1950 : 
; 1951 : 	//数据属性
; 1952 : 	WORD wHeadSize=sizeof(SystemMessage)-sizeof(SystemMessage.szString);

  00064	b8 04 00 00 00	 mov	 eax, 4
  00069	66 89 85 f0 fb
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 1953 : 	WORD wSendSize=wHeadSize+CountStringBuffer(SystemMessage.szString);

  00070	0f b7 b5 f0 fb
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$[ebp]
  00077	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$[ebp+4]
  0007d	50		 push	 eax
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00084	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  00088	66 89 8d ec fb
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], cx

; 1954 : 
; 1955 : 	//发送数据
; 1956 : 	if (bAndroid)

  0008f	0f b6 45 14	 movzx	 eax, BYTE PTR _bAndroid$[ebp]
  00093	85 c0		 test	 eax, eax
  00095	74 33		 je	 SHORT $LN2@SendRoomMe

; 1957 : 	{
; 1958 : 		//机器用户
; 1959 : 		m_AndroidUserManager.SendDataToClient(dwSocketID,MDM_CM_SYSTEM,SUB_CM_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  00097	0f b7 85 ec fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  0009e	50		 push	 eax
  0009f	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp]
  000a5	51		 push	 ecx
  000a6	6a 01		 push	 1
  000a8	68 e8 03 00 00	 push	 1000			; 000003e8H
  000ad	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  000b0	52		 push	 edx
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  000ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 90 24 de 00
	00		 mov	 edx, DWORD PTR [eax+56868]
  000c3	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  000c6	ff d0		 call	 eax

; 1960 : 	}
; 1961 : 	else

  000c8	eb 33		 jmp	 SHORT $LN3@SendRoomMe
$LN2@SendRoomMe:

; 1962 : 	{
; 1963 : 		//常规用户
; 1964 : 		m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CM_SYSTEM,SUB_CM_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  000ca	0f b7 85 ec fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  000d1	50		 push	 eax
  000d2	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp]
  000d8	51		 push	 ecx
  000d9	6a 01		 push	 1
  000db	68 e8 03 00 00	 push	 1000			; 000003e8H
  000e0	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  000e3	52		 push	 edx
  000e4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  000ed	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f2	8b 8a b0 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147376]
  000f8	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000fb	ff d2		 call	 edx
$LN3@SendRoomMe:

; 1965 : 	}
; 1966 : 
; 1967 : 	return true;

  000fd	b0 01		 mov	 al, 1

; 1968 : }

  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00105	33 cd		 xor	 ecx, ebp
  00107	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 10 00	 ret	 16			; 00000010H
?SendRoomMessage@CAttemperEngineSink@@UAE_NKPBDG_N@Z ENDP ; CAttemperEngineSink::SendRoomMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z
_TEXT	SEGMENT
_pBindParameter$1 = -1068				; size = 4
_wBindIndex$2 = -1064					; size = 2
_pBindParameter$3 = -1060				; size = 4
_wBindIndex$4 = -1056					; size = 2
_wSendSize$5 = -1052					; size = 2
_wHeadSize$6 = -1048					; size = 2
_pBindParameter$7 = -1044				; size = 4
_dwUserIndex$8 = -1040					; size = 2
_SystemMessage$9 = -1036				; size = 1028
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_lpszMessage$ = 12					; size = 4
_wType$ = 16						; size = 2
?SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z PROC ; CAttemperEngineSink::SendGameMessage, COMDAT
; _this$ = ecx

; 1889 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 04 00
	00		 sub	 esp, 1260		; 000004ecH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1890 : 	//效验参数
; 1891 : 	ASSERT(pIServerUserItem!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 18		 jne	 SHORT $LN8@SendGameMe
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA
  00024	83 c0 02	 add	 eax, 2
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN8@SendGameMe
  00036	cc		 int	 3
$LN8@SendGameMe:

; 1892 : 	if (pIServerUserItem==NULL) return false;

  00037	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003b	75 07		 jne	 SHORT $LN2@SendGameMe
  0003d	32 c0		 xor	 al, al
  0003f	e9 06 02 00 00	 jmp	 $LN1@SendGameMe
$LN2@SendGameMe:

; 1893 : 
; 1894 : 	//发送数据
; 1895 : 	if ((pIServerUserItem->GetBindIndex()!=INVALID_WORD)&&(pIServerUserItem->IsClientReady()==true))

  00044	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0004c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0004f	ff d0		 call	 eax
  00051	0f b7 c8	 movzx	 ecx, ax
  00054	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0005a	0f 84 e8 01 00
	00		 je	 $LN3@SendGameMe
  00060	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00063	8b 10		 mov	 edx, DWORD PTR [eax]
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00068	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  0006e	ff d0		 call	 eax
  00070	0f b6 c8	 movzx	 ecx, al
  00073	83 f9 01	 cmp	 ecx, 1
  00076	0f 85 cc 01 00
	00		 jne	 $LN3@SendGameMe

; 1896 : 	{
; 1897 : 		//变量定义
; 1898 : 		CMD_CM_SystemMessage SystemMessage;
; 1899 : 		ZeroMemory(&SystemMessage,sizeof(SystemMessage));

  0007c	68 04 04 00 00	 push	 1028			; 00000404H
  00081	6a 00		 push	 0
  00083	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$9[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _memset
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1900 : 
; 1901 : 		//构造数据
; 1902 : 		SystemMessage.wType=wType;

  00092	66 8b 45 10	 mov	 ax, WORD PTR _wType$[ebp]
  00096	66 89 85 f4 fb
	ff ff		 mov	 WORD PTR _SystemMessage$9[ebp], ax

; 1903 : 		SystemMessage.wLength=lstrlen(lpszMessage)+1;

  0009d	8b 45 0c	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  000a0	50		 push	 eax
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000a7	83 c0 01	 add	 eax, 1
  000aa	66 89 85 f6 fb
	ff ff		 mov	 WORD PTR _SystemMessage$9[ebp+2], ax

; 1904 : 		lstrcpyn(SystemMessage.szString,lpszMessage,CountArray(SystemMessage.szString));

  000b1	68 00 04 00 00	 push	 1024			; 00000400H
  000b6	8b 45 0c	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  000b9	50		 push	 eax
  000ba	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$9[ebp+4]
  000c0	51		 push	 ecx
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1905 : 
; 1906 : 		//变量定义
; 1907 : 		WORD dwUserIndex=pIServerUserItem->GetBindIndex();

  000c7	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ca	8b 10		 mov	 edx, DWORD PTR [eax]
  000cc	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000cf	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d2	ff d0		 call	 eax
  000d4	66 89 85 f0 fb
	ff ff		 mov	 WORD PTR _dwUserIndex$8[ebp], ax

; 1908 : 		tagBindParameter * pBindParameter=GetBindParameter(dwUserIndex);

  000db	0f b7 85 f0 fb
	ff ff		 movzx	 eax, WORD PTR _dwUserIndex$8[ebp]
  000e2	50		 push	 eax
  000e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	83 e9 04	 sub	 ecx, 4
  000e9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ec	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  000ef	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  000f2	ff d2		 call	 edx
  000f4	89 85 ec fb ff
	ff		 mov	 DWORD PTR _pBindParameter$7[ebp], eax

; 1909 : 
; 1910 : 		//数据属性
; 1911 : 		WORD wHeadSize=sizeof(SystemMessage)-sizeof(SystemMessage.szString);

  000fa	b8 04 00 00 00	 mov	 eax, 4
  000ff	66 89 85 e8 fb
	ff ff		 mov	 WORD PTR _wHeadSize$6[ebp], ax

; 1912 : 		WORD wSendSize=wHeadSize+CountStringBuffer(SystemMessage.szString);

  00106	0f b7 b5 e8 fb
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$6[ebp]
  0010d	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$9[ebp+4]
  00113	50		 push	 eax
  00114	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0011a	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  0011e	66 89 8d e4 fb
	ff ff		 mov	 WORD PTR _wSendSize$5[ebp], cx

; 1913 : 
; 1914 : 		//发送数据
; 1915 : 		if (pIServerUserItem->IsAndroidUser()==true)

  00125	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00128	8b 10		 mov	 edx, DWORD PTR [eax]
  0012a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0012d	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00133	ff d0		 call	 eax
  00135	0f b6 c8	 movzx	 ecx, al
  00138	83 f9 01	 cmp	 ecx, 1
  0013b	0f 85 98 00 00
	00		 jne	 $LN4@SendGameMe

; 1916 : 		{
; 1917 : 			//机器用户
; 1918 : 			WORD wBindIndex=pIServerUserItem->GetBindIndex();

  00141	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00144	8b 10		 mov	 edx, DWORD PTR [eax]
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00149	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0014c	ff d0		 call	 eax
  0014e	66 89 85 e0 fb
	ff ff		 mov	 WORD PTR _wBindIndex$4[ebp], ax

; 1919 : 			tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00155	0f b7 85 e0 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$4[ebp]
  0015c	50		 push	 eax
  0015d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	83 e9 04	 sub	 ecx, 4
  00163	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00166	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00169	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  0016c	ff d2		 call	 edx
  0016e	89 85 dc fb ff
	ff		 mov	 DWORD PTR _pBindParameter$3[ebp], eax

; 1920 : 			m_AndroidUserManager.SendDataToClient(pBindParameter->dwSocketID,MDM_GF_FRAME,SUB_GF_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  00174	0f b7 85 e4 fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$5[ebp]
  0017b	50		 push	 eax
  0017c	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$9[ebp]
  00182	51		 push	 ecx
  00183	68 c8 00 00 00	 push	 200			; 000000c8H
  00188	6a 64		 push	 100			; 00000064H
  0018a	8b 95 dc fb ff
	ff		 mov	 edx, DWORD PTR _pBindParameter$3[ebp]
  00190	8b 02		 mov	 eax, DWORD PTR [edx]
  00192	50		 push	 eax
  00193	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00196	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  0019c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0019f	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  001a5	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  001a8	ff d2		 call	 edx

; 1921 : 
; 1922 : 			//关闭处理
; 1923 : 			if ((wType&(SMT_CLOSE_ROOM|SMT_CLOSE_LINK))!=0) m_AndroidUserManager.DeleteAndroidUserItem(pBindParameter->dwSocketID,true);

  001aa	0f b7 45 10	 movzx	 eax, WORD PTR _wType$[ebp]
  001ae	25 00 05 00 00	 and	 eax, 1280		; 00000500H
  001b3	74 22		 je	 SHORT $LN6@SendGameMe
  001b5	6a 01		 push	 1
  001b7	8b 85 dc fb ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$3[ebp]
  001bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001bf	51		 push	 ecx
  001c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c3	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  001c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001cc	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  001d2	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  001d5	ff d2		 call	 edx
$LN6@SendGameMe:

; 1924 : 		}
; 1925 : 		else

  001d7	eb 6b		 jmp	 SHORT $LN5@SendGameMe
$LN4@SendGameMe:

; 1926 : 		{
; 1927 : 			//常规用户
; 1928 : 			WORD wBindIndex=pIServerUserItem->GetBindIndex();

  001d9	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001dc	8b 10		 mov	 edx, DWORD PTR [eax]
  001de	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001e1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001e4	ff d0		 call	 eax
  001e6	66 89 85 d8 fb
	ff ff		 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 1929 : 			tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  001ed	0f b7 85 d8 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  001f4	50		 push	 eax
  001f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f8	83 e9 04	 sub	 ecx, 4
  001fb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001fe	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00201	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00204	ff d2		 call	 edx
  00206	89 85 d4 fb ff
	ff		 mov	 DWORD PTR _pBindParameter$1[ebp], eax

; 1930 : 			m_pITCPNetworkEngine->SendData(pBindParameter->dwSocketID,MDM_GF_FRAME,SUB_GF_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  0020c	0f b7 85 e4 fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$5[ebp]
  00213	50		 push	 eax
  00214	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$9[ebp]
  0021a	51		 push	 ecx
  0021b	68 c8 00 00 00	 push	 200			; 000000c8H
  00220	6a 64		 push	 100			; 00000064H
  00222	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR _pBindParameter$1[ebp]
  00228	8b 02		 mov	 eax, DWORD PTR [edx]
  0022a	50		 push	 eax
  0022b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022e	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00234	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00237	8b 12		 mov	 edx, DWORD PTR [edx]
  00239	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  0023f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00242	ff d0		 call	 eax
$LN5@SendGameMe:

; 1931 : 		}
; 1932 : 
; 1933 : 		return true;

  00244	b0 01		 mov	 al, 1
  00246	eb 02		 jmp	 SHORT $LN1@SendGameMe
$LN3@SendGameMe:

; 1934 : 	}
; 1935 : 
; 1936 : 	return false;

  00248	32 c0		 xor	 al, al
$LN1@SendGameMe:

; 1937 : }

  0024a	5f		 pop	 edi
  0024b	5e		 pop	 esi
  0024c	5b		 pop	 ebx
  0024d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00250	33 cd		 xor	 ecx, ebp
  00252	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00257	8b e5		 mov	 esp, ebp
  00259	5d		 pop	 ebp
  0025a	c2 0c 00	 ret	 12			; 0000000cH
?SendGameMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z ENDP ; CAttemperEngineSink::SendGameMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z
_TEXT	SEGMENT
_pBindParameter$1 = -1068				; size = 4
_wBindIndex$2 = -1064					; size = 2
_pBindParameter$3 = -1060				; size = 4
_wBindIndex$4 = -1056					; size = 2
_wSendSize$5 = -1052					; size = 2
_wHeadSize$6 = -1048					; size = 2
_pBindParameter$7 = -1044				; size = 4
_dwUserIndex$8 = -1040					; size = 2
_SystemMessage$9 = -1036				; size = 1028
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pIServerUserItem$ = 8					; size = 4
_lpszMessage$ = 12					; size = 4
_wType$ = 16						; size = 2
?SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z PROC ; CAttemperEngineSink::SendRoomMessage, COMDAT
; _this$ = ecx

; 1837 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 04 00
	00		 sub	 esp, 1260		; 000004ecH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1838 : 	//效验参数
; 1839 : 	ASSERT(pIServerUserItem!=NULL);

  00019	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0001d	75 18		 jne	 SHORT $LN8@SendRoomMe
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z@4JA
  00024	83 c0 02	 add	 eax, 2
  00027	50		 push	 eax
  00028	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN8@SendRoomMe
  00036	cc		 int	 3
$LN8@SendRoomMe:

; 1840 : 	if (pIServerUserItem==NULL) return false;

  00037	83 7d 08 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  0003b	75 07		 jne	 SHORT $LN2@SendRoomMe
  0003d	32 c0		 xor	 al, al
  0003f	e9 ea 01 00 00	 jmp	 $LN1@SendRoomMe
$LN2@SendRoomMe:

; 1841 : 
; 1842 : 	//发送数据
; 1843 : 	if (pIServerUserItem->GetBindIndex()!=INVALID_WORD)

  00044	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0004c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0004f	ff d0		 call	 eax
  00051	0f b7 c8	 movzx	 ecx, ax
  00054	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0005a	0f 84 cc 01 00
	00		 je	 $LN3@SendRoomMe

; 1844 : 	{
; 1845 : 		//变量定义
; 1846 : 		CMD_CM_SystemMessage SystemMessage;
; 1847 : 		ZeroMemory(&SystemMessage,sizeof(SystemMessage));

  00060	68 04 04 00 00	 push	 1028			; 00000404H
  00065	6a 00		 push	 0
  00067	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$9[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 _memset
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1848 : 
; 1849 : 		//构造数据
; 1850 : 		SystemMessage.wType=wType;

  00076	66 8b 45 10	 mov	 ax, WORD PTR _wType$[ebp]
  0007a	66 89 85 f4 fb
	ff ff		 mov	 WORD PTR _SystemMessage$9[ebp], ax

; 1851 : 		SystemMessage.wLength=lstrlen(lpszMessage)+1;

  00081	8b 45 0c	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  00084	50		 push	 eax
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0008b	83 c0 01	 add	 eax, 1
  0008e	66 89 85 f6 fb
	ff ff		 mov	 WORD PTR _SystemMessage$9[ebp+2], ax

; 1852 : 		lstrcpyn(SystemMessage.szString,lpszMessage,CountArray(SystemMessage.szString));

  00095	68 00 04 00 00	 push	 1024			; 00000400H
  0009a	8b 45 0c	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  0009d	50		 push	 eax
  0009e	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$9[ebp+4]
  000a4	51		 push	 ecx
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1853 : 
; 1854 : 		//变量定义
; 1855 : 		WORD dwUserIndex=pIServerUserItem->GetBindIndex();

  000ab	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ae	8b 10		 mov	 edx, DWORD PTR [eax]
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  000b3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000b6	ff d0		 call	 eax
  000b8	66 89 85 f0 fb
	ff ff		 mov	 WORD PTR _dwUserIndex$8[ebp], ax

; 1856 : 		tagBindParameter * pBindParameter=GetBindParameter(dwUserIndex);

  000bf	0f b7 85 f0 fb
	ff ff		 movzx	 eax, WORD PTR _dwUserIndex$8[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	83 e9 04	 sub	 ecx, 4
  000cd	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000d0	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  000d3	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  000d6	ff d2		 call	 edx
  000d8	89 85 ec fb ff
	ff		 mov	 DWORD PTR _pBindParameter$7[ebp], eax

; 1857 : 
; 1858 : 		//数据属性
; 1859 : 		WORD wHeadSize=sizeof(SystemMessage)-sizeof(SystemMessage.szString);

  000de	b8 04 00 00 00	 mov	 eax, 4
  000e3	66 89 85 e8 fb
	ff ff		 mov	 WORD PTR _wHeadSize$6[ebp], ax

; 1860 : 		WORD wSendSize=wHeadSize+CountStringBuffer(SystemMessage.szString);

  000ea	0f b7 b5 e8 fb
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$6[ebp]
  000f1	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$9[ebp+4]
  000f7	50		 push	 eax
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000fe	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  00102	66 89 8d e4 fb
	ff ff		 mov	 WORD PTR _wSendSize$5[ebp], cx

; 1861 : 
; 1862 : 		//发送数据
; 1863 : 		if (pIServerUserItem->IsAndroidUser()==true)

  00109	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00111	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00117	ff d0		 call	 eax
  00119	0f b6 c8	 movzx	 ecx, al
  0011c	83 f9 01	 cmp	 ecx, 1
  0011f	0f 85 98 00 00
	00		 jne	 $LN4@SendRoomMe

; 1864 : 		{
; 1865 : 			//机器用户
; 1866 : 			WORD wBindIndex=pIServerUserItem->GetBindIndex();

  00125	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00128	8b 10		 mov	 edx, DWORD PTR [eax]
  0012a	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0012d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00130	ff d0		 call	 eax
  00132	66 89 85 e0 fb
	ff ff		 mov	 WORD PTR _wBindIndex$4[ebp], ax

; 1867 : 			tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00139	0f b7 85 e0 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$4[ebp]
  00140	50		 push	 eax
  00141	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	83 e9 04	 sub	 ecx, 4
  00147	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014a	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  0014d	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00150	ff d2		 call	 edx
  00152	89 85 dc fb ff
	ff		 mov	 DWORD PTR _pBindParameter$3[ebp], eax

; 1868 : 			m_AndroidUserManager.SendDataToClient(pBindParameter->dwSocketID,MDM_CM_SYSTEM,SUB_CM_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  00158	0f b7 85 e4 fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$5[ebp]
  0015f	50		 push	 eax
  00160	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$9[ebp]
  00166	51		 push	 ecx
  00167	6a 01		 push	 1
  00169	68 e8 03 00 00	 push	 1000			; 000003e8H
  0016e	8b 95 dc fb ff
	ff		 mov	 edx, DWORD PTR _pBindParameter$3[ebp]
  00174	8b 02		 mov	 eax, DWORD PTR [edx]
  00176	50		 push	 eax
  00177	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  00180	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00183	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  00189	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  0018c	ff d2		 call	 edx

; 1869 : 
; 1870 : 			//关闭处理
; 1871 : 			if ((wType&(SMT_CLOSE_ROOM|SMT_CLOSE_LINK))!=0) m_AndroidUserManager.DeleteAndroidUserItem(pBindParameter->dwSocketID,true);

  0018e	0f b7 45 10	 movzx	 eax, WORD PTR _wType$[ebp]
  00192	25 00 05 00 00	 and	 eax, 1280		; 00000500H
  00197	74 22		 je	 SHORT $LN6@SendRoomMe
  00199	6a 01		 push	 1
  0019b	8b 85 dc fb ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$3[ebp]
  001a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a3	51		 push	 ecx
  001a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  001ad	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001b0	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  001b6	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  001b9	ff d2		 call	 edx
$LN6@SendRoomMe:

; 1872 : 		}
; 1873 : 		else

  001bb	eb 6b		 jmp	 SHORT $LN5@SendRoomMe
$LN4@SendRoomMe:

; 1874 : 		{
; 1875 : 			//常规用户
; 1876 : 			WORD wBindIndex=pIServerUserItem->GetBindIndex();

  001bd	8b 45 08	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  001c0	8b 10		 mov	 edx, DWORD PTR [eax]
  001c2	8b 4d 08	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  001c5	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c8	ff d0		 call	 eax
  001ca	66 89 85 d8 fb
	ff ff		 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 1877 : 			tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  001d1	0f b7 85 d8 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  001d8	50		 push	 eax
  001d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001dc	83 e9 04	 sub	 ecx, 4
  001df	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001e2	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  001e5	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  001e8	ff d2		 call	 edx
  001ea	89 85 d4 fb ff
	ff		 mov	 DWORD PTR _pBindParameter$1[ebp], eax

; 1878 : 			m_pITCPNetworkEngine->SendData(pBindParameter->dwSocketID,MDM_CM_SYSTEM,SUB_CM_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  001f0	0f b7 85 e4 fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$5[ebp]
  001f7	50		 push	 eax
  001f8	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$9[ebp]
  001fe	51		 push	 ecx
  001ff	6a 01		 push	 1
  00201	68 e8 03 00 00	 push	 1000			; 000003e8H
  00206	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR _pBindParameter$1[ebp]
  0020c	8b 02		 mov	 eax, DWORD PTR [edx]
  0020e	50		 push	 eax
  0020f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00212	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00218	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021b	8b 12		 mov	 edx, DWORD PTR [edx]
  0021d	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  00223	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00226	ff d0		 call	 eax
$LN5@SendRoomMe:

; 1879 : 		}
; 1880 : 
; 1881 : 		return true;

  00228	b0 01		 mov	 al, 1
  0022a	eb 02		 jmp	 SHORT $LN1@SendRoomMe
$LN3@SendRoomMe:

; 1882 : 	}
; 1883 : 
; 1884 : 	return false;

  0022c	32 c0		 xor	 al, al
$LN1@SendRoomMe:

; 1885 : }

  0022e	5f		 pop	 edi
  0022f	5e		 pop	 esi
  00230	5b		 pop	 ebx
  00231	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00234	33 cd		 xor	 ecx, ebp
  00236	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0023b	8b e5		 mov	 esp, ebp
  0023d	5d		 pop	 ebp
  0023e	c2 0c 00	 ret	 12			; 0000000cH
?SendRoomMessage@CAttemperEngineSink@@UAE_NPAUIServerUserItem@@PBDG@Z ENDP ; CAttemperEngineSink::SendRoomMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendGameMessage@CAttemperEngineSink@@UAE_NPBDG@Z
_TEXT	SEGMENT
_wSendSize$ = -1044					; size = 2
_wHeadSize$ = -1040					; size = 2
_SystemMessage$ = -1036					; size = 1028
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpszMessage$ = 8					; size = 4
_wType$ = 12						; size = 2
?SendGameMessage@CAttemperEngineSink@@UAE_NPBDG@Z PROC	; CAttemperEngineSink::SendGameMessage, COMDAT
; _this$ = ecx

; 1814 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 04 00
	00		 sub	 esp, 1236		; 000004d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1815 : 	//变量定义
; 1816 : 	CMD_CM_SystemMessage SystemMessage;
; 1817 : 	ZeroMemory(&SystemMessage,sizeof(SystemMessage));

  00019	68 04 04 00 00	 push	 1028			; 00000404H
  0001e	6a 00		 push	 0
  00020	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1818 : 
; 1819 : 	//构造数据
; 1820 : 	SystemMessage.wType=wType;

  0002f	66 8b 45 0c	 mov	 ax, WORD PTR _wType$[ebp]
  00033	66 89 85 f4 fb
	ff ff		 mov	 WORD PTR _SystemMessage$[ebp], ax

; 1821 : 	SystemMessage.wLength=lstrlen(lpszMessage)+1;

  0003a	8b 45 08	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00044	83 c0 01	 add	 eax, 1
  00047	66 89 85 f6 fb
	ff ff		 mov	 WORD PTR _SystemMessage$[ebp+2], ax

; 1822 : 	lstrcpyn(SystemMessage.szString,lpszMessage,CountArray(SystemMessage.szString));

  0004e	68 00 04 00 00	 push	 1024			; 00000400H
  00053	8b 45 08	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  00056	50		 push	 eax
  00057	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp+4]
  0005d	51		 push	 ecx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1823 : 
; 1824 : 	//数据属性
; 1825 : 	WORD wHeadSize=sizeof(SystemMessage)-sizeof(SystemMessage.szString);

  00064	b8 04 00 00 00	 mov	 eax, 4
  00069	66 89 85 f0 fb
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 1826 : 	WORD wSendSize=wHeadSize+CountStringBuffer(SystemMessage.szString);

  00070	0f b7 b5 f0 fb
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$[ebp]
  00077	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$[ebp+4]
  0007d	50		 push	 eax
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00084	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  00088	66 89 8d ec fb
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], cx

; 1827 : 
; 1828 : 	//发送数据
; 1829 : 	m_AndroidUserManager.SendDataToClient(MDM_GF_FRAME,SUB_GF_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  0008f	0f b7 85 ec fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00096	50		 push	 eax
  00097	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp]
  0009d	51		 push	 ecx
  0009e	68 c8 00 00 00	 push	 200			; 000000c8H
  000a3	6a 64		 push	 100			; 00000064H
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  000ae	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b1	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  000b7	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  000ba	ff d2		 call	 edx

; 1830 : 	m_pITCPNetworkEngine->SendDataBatch(MDM_GF_FRAME,SUB_GF_SYSTEM_MESSAGE,&SystemMessage,wSendSize,BG_ALL_CLIENT);

  000bc	68 ff 00 00 00	 push	 255			; 000000ffH
  000c1	0f b7 85 ec fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  000c8	50		 push	 eax
  000c9	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp]
  000cf	51		 push	 ecx
  000d0	68 c8 00 00 00	 push	 200			; 000000c8H
  000d5	6a 64		 push	 100			; 00000064H
  000d7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000da	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  000e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	8b 10		 mov	 edx, DWORD PTR [eax]
  000e5	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  000eb	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000ee	ff d0		 call	 eax

; 1831 : 
; 1832 : 	return true;

  000f0	b0 01		 mov	 al, 1

; 1833 : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 08 00	 ret	 8
?SendGameMessage@CAttemperEngineSink@@UAE_NPBDG@Z ENDP	; CAttemperEngineSink::SendGameMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?SendRoomMessage@CAttemperEngineSink@@UAE_NPBDG@Z
_TEXT	SEGMENT
_wSendSize$ = -1044					; size = 2
_wHeadSize$ = -1040					; size = 2
_SystemMessage$ = -1036					; size = 1028
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpszMessage$ = 8					; size = 4
_wType$ = 12						; size = 2
?SendRoomMessage@CAttemperEngineSink@@UAE_NPBDG@Z PROC	; CAttemperEngineSink::SendRoomMessage, COMDAT
; _this$ = ecx

; 1791 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 04 00
	00		 sub	 esp, 1236		; 000004d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1792 : 	//变量定义
; 1793 : 	CMD_CM_SystemMessage SystemMessage;
; 1794 : 	ZeroMemory(&SystemMessage,sizeof(SystemMessage));

  00019	68 04 04 00 00	 push	 1028			; 00000404H
  0001e	6a 00		 push	 0
  00020	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1795 : 
; 1796 : 	//构造数据
; 1797 : 	SystemMessage.wType=wType;

  0002f	66 8b 45 0c	 mov	 ax, WORD PTR _wType$[ebp]
  00033	66 89 85 f4 fb
	ff ff		 mov	 WORD PTR _SystemMessage$[ebp], ax

; 1798 : 	SystemMessage.wLength=lstrlen(lpszMessage)+1;

  0003a	8b 45 08	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00044	83 c0 01	 add	 eax, 1
  00047	66 89 85 f6 fb
	ff ff		 mov	 WORD PTR _SystemMessage$[ebp+2], ax

; 1799 : 	lstrcpyn(SystemMessage.szString,lpszMessage,CountArray(SystemMessage.szString));

  0004e	68 00 04 00 00	 push	 1024			; 00000400H
  00053	8b 45 08	 mov	 eax, DWORD PTR _lpszMessage$[ebp]
  00056	50		 push	 eax
  00057	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp+4]
  0005d	51		 push	 ecx
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1800 : 
; 1801 : 	//数据属性
; 1802 : 	WORD wHeadSize=sizeof(SystemMessage)-sizeof(SystemMessage.szString);

  00064	b8 04 00 00 00	 mov	 eax, 4
  00069	66 89 85 f0 fb
	ff ff		 mov	 WORD PTR _wHeadSize$[ebp], ax

; 1803 : 	WORD wSendSize=wHeadSize+CountStringBuffer(SystemMessage.szString);

  00070	0f b7 b5 f0 fb
	ff ff		 movzx	 esi, WORD PTR _wHeadSize$[ebp]
  00077	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR _SystemMessage$[ebp+4]
  0007d	50		 push	 eax
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00084	8d 4c 06 01	 lea	 ecx, DWORD PTR [esi+eax+1]
  00088	66 89 8d ec fb
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], cx

; 1804 : 
; 1805 : 	//发送数据
; 1806 : 	m_AndroidUserManager.SendDataToClient(MDM_CM_SYSTEM,SUB_CM_SYSTEM_MESSAGE,&SystemMessage,wSendSize);

  0008f	0f b7 85 ec fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  00096	50		 push	 eax
  00097	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp]
  0009d	51		 push	 ecx
  0009e	6a 01		 push	 1
  000a0	68 e8 03 00 00	 push	 1000			; 000003e8H
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	81 c1 24 de 00
	00		 add	 ecx, 56868		; 0000de24H
  000ae	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b1	8b 82 24 de 00
	00		 mov	 eax, DWORD PTR [edx+56868]
  000b7	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  000ba	ff d2		 call	 edx

; 1807 : 	m_pITCPNetworkEngine->SendDataBatch(MDM_CM_SYSTEM,SUB_CM_SYSTEM_MESSAGE,&SystemMessage,wSendSize,BG_ALL_CLIENT);

  000bc	68 ff 00 00 00	 push	 255			; 000000ffH
  000c1	0f b7 85 ec fb
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  000c8	50		 push	 eax
  000c9	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _SystemMessage$[ebp]
  000cf	51		 push	 ecx
  000d0	6a 01		 push	 1
  000d2	68 e8 03 00 00	 push	 1000			; 000003e8H
  000d7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000da	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  000e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	8b 10		 mov	 edx, DWORD PTR [eax]
  000e5	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  000eb	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000ee	ff d0		 call	 eax

; 1808 : 
; 1809 : 	return true;

  000f0	b0 01		 mov	 al, 1

; 1810 : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 08 00	 ret	 8
?SendRoomMessage@CAttemperEngineSink@@UAE_NPBDG@Z ENDP	; CAttemperEngineSink::SendRoomMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z
_TEXT	SEGMENT
tv84 = -668						; size = 4
_bReturnVal$1 = -533					; size = 1
_szInfo$2 = -532					; size = 260
_bReturnVal$3 = -269					; size = 1
_szMessage$4 = -268					; size = 260
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_Command$ = 8						; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkRead, COMDAT
; _this$ = ecx

; 1707 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 02 00
	00		 sub	 esp, 668		; 0000029cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1708 : 	if (wDataSize == 866)

  00019	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001d	3d 62 03 00 00	 cmp	 eax, 866		; 00000362H
  00022	75 56		 jne	 SHORT $LN4@OnEventTCP

; 1709 : 	{
; 1710 : 		TCHAR szMessage[260]=TEXT("");

  00024	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00029	88 85 f4 fe ff
	ff		 mov	 BYTE PTR _szMessage$4[ebp], al
  0002f	68 03 01 00 00	 push	 259			; 00000103H
  00034	6a 00		 push	 0
  00036	8d 85 f5 fe ff
	ff		 lea	 eax, DWORD PTR _szMessage$4[ebp+1]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 _memset
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1711 : 		_sntprintf(szMessage,CountArray(szMessage),TEXT("会发生异常的消息: Command.wMainCmdID =%d   Command.wSubCmdID = %d"), Command.wMainCmdID, Command.wSubCmdID);

  00045	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00049	50		 push	 eax
  0004a	0f b7 4d 08	 movzx	 ecx, WORD PTR _Command$[ebp]
  0004e	51		 push	 ecx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@EPLGCFIG@?$LL?a?$LH?$KC?I?z?R?l?$LD?$KD?$LF?D?O?$PL?O?$KC?3?5Command?4wMain@
  00054	68 04 01 00 00	 push	 260			; 00000104H
  00059	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _szMessage$4[ebp]
  0005f	52		 push	 edx
  00060	e8 00 00 00 00	 call	 __snprintf
  00065	83 c4 14	 add	 esp, 20			; 00000014H

; 1712 : 		CTraceService::TraceString(szMessage,TraceLevel_Normal);

  00068	6a 01		 push	 1
  0006a	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _szMessage$4[ebp]
  00070	50		 push	 eax
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00077	83 c4 08	 add	 esp, 8
$LN4@OnEventTCP:

; 1713 : 	}
; 1714 : 	switch (Command.wMainCmdID)

  0007a	0f b7 45 08	 movzx	 eax, WORD PTR _Command$[ebp]
  0007e	89 85 64 fd ff
	ff		 mov	 DWORD PTR tv84[ebp], eax
  00084	8b 8d 64 fd ff
	ff		 mov	 ecx, DWORD PTR tv84[ebp]
  0008a	83 e9 01	 sub	 ecx, 1
  0008d	89 8d 64 fd ff
	ff		 mov	 DWORD PTR tv84[ebp], ecx
  00093	81 bd 64 fd ff
	ff d1 00 00 00	 cmp	 DWORD PTR tv84[ebp], 209 ; 000000d1H
  0009d	0f 87 3c 02 00
	00		 ja	 $LN2@OnEventTCP
  000a3	8b 95 64 fd ff
	ff		 mov	 edx, DWORD PTR tv84[ebp]
  000a9	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN22@OnEventTCP[edx]
  000b0	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN23@OnEventTCP[eax*4]
$LN5@OnEventTCP:

; 1715 : 	{
; 1716 : 	case MDM_GR_USER:		//用户命令
; 1717 : 		{
; 1718 : 			return OnTCPNetworkMainUser(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  000b7	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000ba	50		 push	 eax
  000bb	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000bf	51		 push	 ecx
  000c0	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000c3	52		 push	 edx
  000c4	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  000c8	50		 push	 eax
  000c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	e8 00 00 00 00	 call	 ?OnTCPNetworkMainUser@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainUser
  000d1	e9 0b 02 00 00	 jmp	 $LN1@OnEventTCP
$LN6@OnEventTCP:

; 1719 : 		}
; 1720 : 	case MDM_GR_LOGON:		//登录命令
; 1721 : 		{
; 1722 : 			return OnTCPNetworkMainLogon(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  000d6	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000d9	50		 push	 eax
  000da	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000de	51		 push	 ecx
  000df	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000e2	52		 push	 edx
  000e3	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  000e7	50		 push	 eax
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?OnTCPNetworkMainLogon@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainLogon
  000f0	e9 ec 01 00 00	 jmp	 $LN1@OnEventTCP
$LN7@OnEventTCP:

; 1723 : 		}
; 1724 : 	case MDM_GF_GAME:		//游戏命令
; 1725 : 		{
; 1726 : 			bool bReturnVal = OnTCPNetworkMainGame(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  000f5	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000f8	50		 push	 eax
  000f9	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000fd	51		 push	 ecx
  000fe	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00101	52		 push	 edx
  00102	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00106	50		 push	 eax
  00107	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	e8 00 00 00 00	 call	 ?OnTCPNetworkMainGame@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainGame
  0010f	88 85 f3 fe ff
	ff		 mov	 BYTE PTR _bReturnVal$3[ebp], al

; 1727 : 			if (!bReturnVal)

  00115	0f b6 85 f3 fe
	ff ff		 movzx	 eax, BYTE PTR _bReturnVal$3[ebp]
  0011c	85 c0		 test	 eax, eax
  0011e	75 47		 jne	 SHORT $LN8@OnEventTCP

; 1728 : 			{
; 1729 : 				TCHAR szInfo[260] = {0};

  00120	68 04 01 00 00	 push	 260			; 00000104H
  00125	6a 00		 push	 0
  00127	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szInfo$2[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 _memset
  00133	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1730 : 				wsprintf(szInfo, TEXT("游戏命令返回 false   wMainCmdID = %d  wSubCmdID = %d "),  Command.wMainCmdID, Command.wSubCmdID);

  00136	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  0013a	50		 push	 eax
  0013b	0f b7 4d 08	 movzx	 ecx, WORD PTR _Command$[ebp]
  0013f	51		 push	 ecx
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@GPBCOFJG@?S?N?O?$LH?C?$PM?A?n?$LH?$LF?$LL?X?5false?5?5?5wMainCmdID@
  00145	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _szInfo$2[ebp]
  0014b	52		 push	 edx
  0014c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00152	83 c4 10	 add	 esp, 16			; 00000010H

; 1731 : 				CTraceService::TraceString(szInfo, TraceLevel_Normal);

  00155	6a 01		 push	 1
  00157	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szInfo$2[ebp]
  0015d	50		 push	 eax
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00164	83 c4 08	 add	 esp, 8
$LN8@OnEventTCP:

; 1732 : 			}
; 1733 : 			return bReturnVal;

  00167	8a 85 f3 fe ff
	ff		 mov	 al, BYTE PTR _bReturnVal$3[ebp]
  0016d	e9 6f 01 00 00	 jmp	 $LN1@OnEventTCP
$LN9@OnEventTCP:

; 1734 : 		}
; 1735 : 	case MDM_GF_FRAME:		//框架命令
; 1736 : 		{
; 1737 : 			bool bReturnVal =  OnTCPNetworkMainFrame(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00172	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00175	50		 push	 eax
  00176	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0017a	51		 push	 ecx
  0017b	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0017e	52		 push	 edx
  0017f	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00183	50		 push	 eax
  00184	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	e8 00 00 00 00	 call	 ?OnTCPNetworkMainFrame@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainFrame
  0018c	88 85 eb fd ff
	ff		 mov	 BYTE PTR _bReturnVal$1[ebp], al

; 1738 : 			if (!bReturnVal)

  00192	0f b6 85 eb fd
	ff ff		 movzx	 eax, BYTE PTR _bReturnVal$1[ebp]
  00199	85 c0		 test	 eax, eax
  0019b	75 10		 jne	 SHORT $LN10@OnEventTCP

; 1739 : 			{
; 1740 : 				CTraceService::TraceString(TEXT("MDM_GF_FRAME 框架命令返回 false"),TraceLevel_Normal);

  0019d	6a 01		 push	 1
  0019f	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@BDDILDFJ@MDM_GF_FRAME?5?$LP?r?$LM?$NM?C?$PM?A?n?$LH?$LF?$LL?X?5false@
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  001aa	83 c4 08	 add	 esp, 8
$LN10@OnEventTCP:

; 1741 : 			}
; 1742 : 			return bReturnVal;

  001ad	8a 85 eb fd ff
	ff		 mov	 al, BYTE PTR _bReturnVal$1[ebp]
  001b3	e9 29 01 00 00	 jmp	 $LN1@OnEventTCP
$LN11@OnEventTCP:

; 1743 : 		}
; 1744 : 	case MDM_GR_INSURE:		//银行命令
; 1745 : 		{
; 1746 : 			return OnTCPNetworkMainInsure(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  001b8	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001bb	50		 push	 eax
  001bc	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  001c0	51		 push	 ecx
  001c1	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  001c4	52		 push	 edx
  001c5	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  001c9	50		 push	 eax
  001ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	e8 00 00 00 00	 call	 ?OnTCPNetworkMainInsure@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainInsure
  001d2	e9 0a 01 00 00	 jmp	 $LN1@OnEventTCP
$LN12@OnEventTCP:

; 1747 : 		}
; 1748 : 	case MDM_GR_TASK:		//任务命令
; 1749 : 		{
; 1750 : 			return OnTCPNetworkMainTask(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  001d7	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001da	50		 push	 eax
  001db	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  001df	51		 push	 ecx
  001e0	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  001e3	52		 push	 edx
  001e4	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  001e8	50		 push	 eax
  001e9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ec	e8 00 00 00 00	 call	 ?OnTCPNetworkMainTask@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainTask
  001f1	e9 eb 00 00 00	 jmp	 $LN1@OnEventTCP
$LN13@OnEventTCP:

; 1751 : 		}
; 1752 : 	case MDM_GR_EXCHANGE:	//兑换命令
; 1753 : 		{
; 1754 : 			return OnTCPNetworkMainExchange(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  001f6	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001f9	50		 push	 eax
  001fa	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  001fe	51		 push	 ecx
  001ff	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00202	52		 push	 edx
  00203	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00207	50		 push	 eax
  00208	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020b	e8 00 00 00 00	 call	 ?OnTCPNetworkMainExchange@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainExchange
  00210	e9 cc 00 00 00	 jmp	 $LN1@OnEventTCP
$LN14@OnEventTCP:

; 1755 : 		}
; 1756 : 	case MDM_GR_MANAGE:		//管理命令
; 1757 : 		{
; 1758 : 			return OnTCPNetworkMainManage(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00215	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00218	50		 push	 eax
  00219	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0021d	51		 push	 ecx
  0021e	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00221	52		 push	 edx
  00222	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00226	50		 push	 eax
  00227	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022a	e8 00 00 00 00	 call	 ?OnTCPNetworkMainManage@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainManage
  0022f	e9 ad 00 00 00	 jmp	 $LN1@OnEventTCP
$LN15@OnEventTCP:

; 1759 : 		}
; 1760 : 	case MDM_GR_MATCH:		//比赛命令
; 1761 : 		{
; 1762 : 			return OnTCPNetworkMainMatch(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00234	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00237	50		 push	 eax
  00238	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0023c	51		 push	 ecx
  0023d	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00240	52		 push	 edx
  00241	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00245	50		 push	 eax
  00246	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00249	e8 00 00 00 00	 call	 ?OnTCPNetworkMainMatch@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainMatch
  0024e	e9 8e 00 00 00	 jmp	 $LN1@OnEventTCP
$LN16@OnEventTCP:

; 1763 : 		}
; 1764 : 	case MDM_GR_MEMBER:	//会员命令
; 1765 : 		{
; 1766 : 			return OnTCPNetworkMainMember(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00253	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00256	50		 push	 eax
  00257	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0025b	51		 push	 ecx
  0025c	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0025f	52		 push	 edx
  00260	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00264	50		 push	 eax
  00265	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	e8 00 00 00 00	 call	 ?OnTCPNetworkMainMember@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainMember
  0026d	eb 72		 jmp	 SHORT $LN1@OnEventTCP
$LN17@OnEventTCP:

; 1767 : 		}
; 1768 : 	case MDM_GR_PROPERTY:	//道具命令
; 1769 : 		{
; 1770 : 			return OnTCPNetworkMainProperty(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  0026f	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00272	50		 push	 eax
  00273	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00277	51		 push	 ecx
  00278	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0027b	52		 push	 edx
  0027c	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00280	50		 push	 eax
  00281	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00284	e8 00 00 00 00	 call	 ?OnTCPNetworkMainProperty@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainProperty
  00289	eb 56		 jmp	 SHORT $LN1@OnEventTCP
$LN18@OnEventTCP:

; 1771 : 		}
; 1772 : 	case MDM_GR_BASEENSURE:	//低保命令
; 1773 : 		{
; 1774 : 			return OnTCPNetworkMainBaseEnsure(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  0028b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0028e	50		 push	 eax
  0028f	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00293	51		 push	 ecx
  00294	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00297	52		 push	 edx
  00298	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  0029c	50		 push	 eax
  0029d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a0	e8 00 00 00 00	 call	 ?OnTCPNetworkMainBaseEnsure@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainBaseEnsure
  002a5	eb 3a		 jmp	 SHORT $LN1@OnEventTCP
$LN19@OnEventTCP:

; 1775 : 		}
; 1776 : 	case MDM_GR_CHECKIN: //签到命令
; 1777 : 		{
; 1778 : 			return OnTCPNetworkMainCheckIn(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  002a7	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002aa	50		 push	 eax
  002ab	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  002af	51		 push	 ecx
  002b0	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  002b3	52		 push	 edx
  002b4	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  002b8	50		 push	 eax
  002b9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002bc	e8 00 00 00 00	 call	 ?OnTCPNetworkMainCheckIn@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainCheckIn
  002c1	eb 1e		 jmp	 SHORT $LN1@OnEventTCP
$LN20@OnEventTCP:

; 1779 : 		}
; 1780 : 	case MDM_GR_PERSONAL_TABLE:
; 1781 : 		{
; 1782 : 			return OnTCPNetworkMainPersonalTable(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  002c3	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002c6	50		 push	 eax
  002c7	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  002cb	51		 push	 ecx
  002cc	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  002cf	52		 push	 edx
  002d0	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  002d4	50		 push	 eax
  002d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d8	e8 00 00 00 00	 call	 ?OnTCPNetworkMainPersonalTable@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainPersonalTable
  002dd	eb 02		 jmp	 SHORT $LN1@OnEventTCP
$LN2@OnEventTCP:

; 1783 : 		}
; 1784 : 	}
; 1785 : 
; 1786 : 	return false;

  002df	32 c0		 xor	 al, al
$LN1@OnEventTCP:

; 1787 : }

  002e1	5f		 pop	 edi
  002e2	5e		 pop	 esi
  002e3	5b		 pop	 ebx
  002e4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e7	33 cd		 xor	 ecx, ebp
  002e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ee	8b e5		 mov	 esp, ebp
  002f0	5d		 pop	 ebp
  002f1	c2 10 00	 ret	 16			; 00000010H
$LN23@OnEventTCP:
  002f4	00 00 00 00	 DD	 $LN6@OnEventTCP
  002f8	00 00 00 00	 DD	 $LN5@OnEventTCP
  002fc	00 00 00 00	 DD	 $LN11@OnEventTCP
  00300	00 00 00 00	 DD	 $LN12@OnEventTCP
  00304	00 00 00 00	 DD	 $LN13@OnEventTCP
  00308	00 00 00 00	 DD	 $LN17@OnEventTCP
  0030c	00 00 00 00	 DD	 $LN14@OnEventTCP
  00310	00 00 00 00	 DD	 $LN15@OnEventTCP
  00314	00 00 00 00	 DD	 $LN18@OnEventTCP
  00318	00 00 00 00	 DD	 $LN19@OnEventTCP
  0031c	00 00 00 00	 DD	 $LN16@OnEventTCP
  00320	00 00 00 00	 DD	 $LN9@OnEventTCP
  00324	00 00 00 00	 DD	 $LN7@OnEventTCP
  00328	00 00 00 00	 DD	 $LN20@OnEventTCP
  0032c	00 00 00 00	 DD	 $LN2@OnEventTCP
$LN22@OnEventTCP:
  00330	00		 DB	 0
  00331	0e		 DB	 14			; 0000000eH
  00332	01		 DB	 1
  00333	0e		 DB	 14			; 0000000eH
  00334	02		 DB	 2
  00335	03		 DB	 3
  00336	04		 DB	 4
  00337	05		 DB	 5
  00338	06		 DB	 6
  00339	07		 DB	 7
  0033a	08		 DB	 8
  0033b	09		 DB	 9
  0033c	0a		 DB	 10			; 0000000aH
  0033d	0e		 DB	 14			; 0000000eH
  0033e	0e		 DB	 14			; 0000000eH
  0033f	0e		 DB	 14			; 0000000eH
  00340	0e		 DB	 14			; 0000000eH
  00341	0e		 DB	 14			; 0000000eH
  00342	0e		 DB	 14			; 0000000eH
  00343	0e		 DB	 14			; 0000000eH
  00344	0e		 DB	 14			; 0000000eH
  00345	0e		 DB	 14			; 0000000eH
  00346	0e		 DB	 14			; 0000000eH
  00347	0e		 DB	 14			; 0000000eH
  00348	0e		 DB	 14			; 0000000eH
  00349	0e		 DB	 14			; 0000000eH
  0034a	0e		 DB	 14			; 0000000eH
  0034b	0e		 DB	 14			; 0000000eH
  0034c	0e		 DB	 14			; 0000000eH
  0034d	0e		 DB	 14			; 0000000eH
  0034e	0e		 DB	 14			; 0000000eH
  0034f	0e		 DB	 14			; 0000000eH
  00350	0e		 DB	 14			; 0000000eH
  00351	0e		 DB	 14			; 0000000eH
  00352	0e		 DB	 14			; 0000000eH
  00353	0e		 DB	 14			; 0000000eH
  00354	0e		 DB	 14			; 0000000eH
  00355	0e		 DB	 14			; 0000000eH
  00356	0e		 DB	 14			; 0000000eH
  00357	0e		 DB	 14			; 0000000eH
  00358	0e		 DB	 14			; 0000000eH
  00359	0e		 DB	 14			; 0000000eH
  0035a	0e		 DB	 14			; 0000000eH
  0035b	0e		 DB	 14			; 0000000eH
  0035c	0e		 DB	 14			; 0000000eH
  0035d	0e		 DB	 14			; 0000000eH
  0035e	0e		 DB	 14			; 0000000eH
  0035f	0e		 DB	 14			; 0000000eH
  00360	0e		 DB	 14			; 0000000eH
  00361	0e		 DB	 14			; 0000000eH
  00362	0e		 DB	 14			; 0000000eH
  00363	0e		 DB	 14			; 0000000eH
  00364	0e		 DB	 14			; 0000000eH
  00365	0e		 DB	 14			; 0000000eH
  00366	0e		 DB	 14			; 0000000eH
  00367	0e		 DB	 14			; 0000000eH
  00368	0e		 DB	 14			; 0000000eH
  00369	0e		 DB	 14			; 0000000eH
  0036a	0e		 DB	 14			; 0000000eH
  0036b	0e		 DB	 14			; 0000000eH
  0036c	0e		 DB	 14			; 0000000eH
  0036d	0e		 DB	 14			; 0000000eH
  0036e	0e		 DB	 14			; 0000000eH
  0036f	0e		 DB	 14			; 0000000eH
  00370	0e		 DB	 14			; 0000000eH
  00371	0e		 DB	 14			; 0000000eH
  00372	0e		 DB	 14			; 0000000eH
  00373	0e		 DB	 14			; 0000000eH
  00374	0e		 DB	 14			; 0000000eH
  00375	0e		 DB	 14			; 0000000eH
  00376	0e		 DB	 14			; 0000000eH
  00377	0e		 DB	 14			; 0000000eH
  00378	0e		 DB	 14			; 0000000eH
  00379	0e		 DB	 14			; 0000000eH
  0037a	0e		 DB	 14			; 0000000eH
  0037b	0e		 DB	 14			; 0000000eH
  0037c	0e		 DB	 14			; 0000000eH
  0037d	0e		 DB	 14			; 0000000eH
  0037e	0e		 DB	 14			; 0000000eH
  0037f	0e		 DB	 14			; 0000000eH
  00380	0e		 DB	 14			; 0000000eH
  00381	0e		 DB	 14			; 0000000eH
  00382	0e		 DB	 14			; 0000000eH
  00383	0e		 DB	 14			; 0000000eH
  00384	0e		 DB	 14			; 0000000eH
  00385	0e		 DB	 14			; 0000000eH
  00386	0e		 DB	 14			; 0000000eH
  00387	0e		 DB	 14			; 0000000eH
  00388	0e		 DB	 14			; 0000000eH
  00389	0e		 DB	 14			; 0000000eH
  0038a	0e		 DB	 14			; 0000000eH
  0038b	0e		 DB	 14			; 0000000eH
  0038c	0e		 DB	 14			; 0000000eH
  0038d	0e		 DB	 14			; 0000000eH
  0038e	0e		 DB	 14			; 0000000eH
  0038f	0e		 DB	 14			; 0000000eH
  00390	0e		 DB	 14			; 0000000eH
  00391	0e		 DB	 14			; 0000000eH
  00392	0e		 DB	 14			; 0000000eH
  00393	0b		 DB	 11			; 0000000bH
  00394	0e		 DB	 14			; 0000000eH
  00395	0e		 DB	 14			; 0000000eH
  00396	0e		 DB	 14			; 0000000eH
  00397	0e		 DB	 14			; 0000000eH
  00398	0e		 DB	 14			; 0000000eH
  00399	0e		 DB	 14			; 0000000eH
  0039a	0e		 DB	 14			; 0000000eH
  0039b	0e		 DB	 14			; 0000000eH
  0039c	0e		 DB	 14			; 0000000eH
  0039d	0e		 DB	 14			; 0000000eH
  0039e	0e		 DB	 14			; 0000000eH
  0039f	0e		 DB	 14			; 0000000eH
  003a0	0e		 DB	 14			; 0000000eH
  003a1	0e		 DB	 14			; 0000000eH
  003a2	0e		 DB	 14			; 0000000eH
  003a3	0e		 DB	 14			; 0000000eH
  003a4	0e		 DB	 14			; 0000000eH
  003a5	0e		 DB	 14			; 0000000eH
  003a6	0e		 DB	 14			; 0000000eH
  003a7	0e		 DB	 14			; 0000000eH
  003a8	0e		 DB	 14			; 0000000eH
  003a9	0e		 DB	 14			; 0000000eH
  003aa	0e		 DB	 14			; 0000000eH
  003ab	0e		 DB	 14			; 0000000eH
  003ac	0e		 DB	 14			; 0000000eH
  003ad	0e		 DB	 14			; 0000000eH
  003ae	0e		 DB	 14			; 0000000eH
  003af	0e		 DB	 14			; 0000000eH
  003b0	0e		 DB	 14			; 0000000eH
  003b1	0e		 DB	 14			; 0000000eH
  003b2	0e		 DB	 14			; 0000000eH
  003b3	0e		 DB	 14			; 0000000eH
  003b4	0e		 DB	 14			; 0000000eH
  003b5	0e		 DB	 14			; 0000000eH
  003b6	0e		 DB	 14			; 0000000eH
  003b7	0e		 DB	 14			; 0000000eH
  003b8	0e		 DB	 14			; 0000000eH
  003b9	0e		 DB	 14			; 0000000eH
  003ba	0e		 DB	 14			; 0000000eH
  003bb	0e		 DB	 14			; 0000000eH
  003bc	0e		 DB	 14			; 0000000eH
  003bd	0e		 DB	 14			; 0000000eH
  003be	0e		 DB	 14			; 0000000eH
  003bf	0e		 DB	 14			; 0000000eH
  003c0	0e		 DB	 14			; 0000000eH
  003c1	0e		 DB	 14			; 0000000eH
  003c2	0e		 DB	 14			; 0000000eH
  003c3	0e		 DB	 14			; 0000000eH
  003c4	0e		 DB	 14			; 0000000eH
  003c5	0e		 DB	 14			; 0000000eH
  003c6	0e		 DB	 14			; 0000000eH
  003c7	0e		 DB	 14			; 0000000eH
  003c8	0e		 DB	 14			; 0000000eH
  003c9	0e		 DB	 14			; 0000000eH
  003ca	0e		 DB	 14			; 0000000eH
  003cb	0e		 DB	 14			; 0000000eH
  003cc	0e		 DB	 14			; 0000000eH
  003cd	0e		 DB	 14			; 0000000eH
  003ce	0e		 DB	 14			; 0000000eH
  003cf	0e		 DB	 14			; 0000000eH
  003d0	0e		 DB	 14			; 0000000eH
  003d1	0e		 DB	 14			; 0000000eH
  003d2	0e		 DB	 14			; 0000000eH
  003d3	0e		 DB	 14			; 0000000eH
  003d4	0e		 DB	 14			; 0000000eH
  003d5	0e		 DB	 14			; 0000000eH
  003d6	0e		 DB	 14			; 0000000eH
  003d7	0e		 DB	 14			; 0000000eH
  003d8	0e		 DB	 14			; 0000000eH
  003d9	0e		 DB	 14			; 0000000eH
  003da	0e		 DB	 14			; 0000000eH
  003db	0e		 DB	 14			; 0000000eH
  003dc	0e		 DB	 14			; 0000000eH
  003dd	0e		 DB	 14			; 0000000eH
  003de	0e		 DB	 14			; 0000000eH
  003df	0e		 DB	 14			; 0000000eH
  003e0	0e		 DB	 14			; 0000000eH
  003e1	0e		 DB	 14			; 0000000eH
  003e2	0e		 DB	 14			; 0000000eH
  003e3	0e		 DB	 14			; 0000000eH
  003e4	0e		 DB	 14			; 0000000eH
  003e5	0e		 DB	 14			; 0000000eH
  003e6	0e		 DB	 14			; 0000000eH
  003e7	0e		 DB	 14			; 0000000eH
  003e8	0e		 DB	 14			; 0000000eH
  003e9	0e		 DB	 14			; 0000000eH
  003ea	0e		 DB	 14			; 0000000eH
  003eb	0e		 DB	 14			; 0000000eH
  003ec	0e		 DB	 14			; 0000000eH
  003ed	0e		 DB	 14			; 0000000eH
  003ee	0e		 DB	 14			; 0000000eH
  003ef	0e		 DB	 14			; 0000000eH
  003f0	0e		 DB	 14			; 0000000eH
  003f1	0e		 DB	 14			; 0000000eH
  003f2	0e		 DB	 14			; 0000000eH
  003f3	0e		 DB	 14			; 0000000eH
  003f4	0e		 DB	 14			; 0000000eH
  003f5	0e		 DB	 14			; 0000000eH
  003f6	0e		 DB	 14			; 0000000eH
  003f7	0c		 DB	 12			; 0000000cH
  003f8	0e		 DB	 14			; 0000000eH
  003f9	0e		 DB	 14			; 0000000eH
  003fa	0e		 DB	 14			; 0000000eH
  003fb	0e		 DB	 14			; 0000000eH
  003fc	0e		 DB	 14			; 0000000eH
  003fd	0e		 DB	 14			; 0000000eH
  003fe	0e		 DB	 14			; 0000000eH
  003ff	0e		 DB	 14			; 0000000eH
  00400	0e		 DB	 14			; 0000000eH
  00401	0d		 DB	 13			; 0000000dH
?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
_TEXT	SEGMENT
tv203 = -248						; size = 4
tv202 = -248						; size = 4
tv199 = -248						; size = 4
tv133 = -248						; size = 4
tv200 = -246						; size = 2
tv198 = -246						; size = 2
tv201 = -245						; size = 1
_szMessage$2 = -180					; size = 128
_bImmediteMatch$3 = -50					; size = 1
_cbMatchStatus$4 = -49					; size = 1
_pTableFrame$5 = -48					; size = 4
_wDrawCount$6 = -44					; size = 2
_wTableID$ = -40					; size = 2
_pIServerUserItem$ = -36				; size = 4
_pBindParameter$ = -32					; size = 4
_wBindIndex$ = -28					; size = 2
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwClientAddr$ = 8					; size = 4
_dwActiveTime$ = 12					; size = 4
_dwSocketID$ = 16					; size = 4
?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkShut, COMDAT
; _this$ = ecx

; 1642 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1643 : 	//变量定义
; 1644 : 	WORD wBindIndex=LOWORD(dwSocketID);

  00035	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00038	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003d	66 89 45 e4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 1645 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00041	0f b7 45 e4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00045	50		 push	 eax
  00046	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00051	ff d0		 call	 eax
  00053	89 45 e0	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 1646 : 	if(pBindParameter==NULL) return false;

  00056	83 7d e0 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  0005a	75 07		 jne	 SHORT $LN2@OnEventTCP
  0005c	32 c0		 xor	 al, al
  0005e	e9 49 02 00 00	 jmp	 $LN1@OnEventTCP
$LN2@OnEventTCP:

; 1647 : 
; 1648 : 	//获取用户
; 1649 : 	IServerUserItem * pIServerUserItem=pBindParameter->pIServerUserItem;

  00063	8b 45 e0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00066	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00069	89 4d dc	 mov	 DWORD PTR _pIServerUserItem$[ebp], ecx

; 1650 : 	WORD wTableID=INVALID_WORD;

  0006c	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00071	66 89 45 d8	 mov	 WORD PTR _wTableID$[ebp], ax

; 1651 : 
; 1652 : 	try

  00075	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1653 : 	{
; 1654 : 		//用户处理
; 1655 : 		if (pIServerUserItem!=NULL)

  0007c	83 7d dc 00	 cmp	 DWORD PTR _pIServerUserItem$[ebp], 0
  00080	0f 84 ae 01 00
	00		 je	 $LN4@OnEventTCP

; 1656 : 		{
; 1657 : 			//变量定义
; 1658 : 			wTableID=pIServerUserItem->GetTableID();

  00086	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00089	8b 10		 mov	 edx, DWORD PTR [eax]
  0008b	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0008e	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00091	ff d0		 call	 eax
  00093	66 89 85 0a ff
	ff ff		 mov	 WORD PTR tv198[ebp], ax
  0009a	66 8b 8d 0a ff
	ff ff		 mov	 cx, WORD PTR tv198[ebp]
  000a1	66 89 4d d8	 mov	 WORD PTR _wTableID$[ebp], cx

; 1659 : 
; 1660 : 			WORD wDrawCount = 0;

  000a5	33 c0		 xor	 eax, eax
  000a7	66 89 45 d4	 mov	 WORD PTR _wDrawCount$6[ebp], ax

; 1661 : 			if(wTableID!=INVALID_TABLE)

  000ab	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  000af	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  000b4	74 46		 je	 SHORT $LN5@OnEventTCP

; 1662 : 			{
; 1663 : 				CTableFrame* pTableFrame = m_TableFrameArray[wTableID];

  000b6	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  000c4	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  000c9	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv199[ebp], eax
  000cf	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR tv199[ebp]
  000d5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d7	89 55 d0	 mov	 DWORD PTR _pTableFrame$5[ebp], edx

; 1664 : 				wDrawCount = pTableFrame->GetDrawCount();

  000da	8b 45 d0	 mov	 eax, DWORD PTR _pTableFrame$5[ebp]
  000dd	8b 10		 mov	 edx, DWORD PTR [eax]
  000df	8b 4d d0	 mov	 ecx, DWORD PTR _pTableFrame$5[ebp]
  000e2	8b 82 28 01 00
	00		 mov	 eax, DWORD PTR [edx+296]
  000e8	ff d0		 call	 eax
  000ea	66 89 85 0a ff
	ff ff		 mov	 WORD PTR tv200[ebp], ax
  000f1	66 8b 8d 0a ff
	ff ff		 mov	 cx, WORD PTR tv200[ebp]
  000f8	66 89 4d d4	 mov	 WORD PTR _wDrawCount$6[ebp], cx
$LN5@OnEventTCP:

; 1665 : 			}
; 1666 : 
; 1667 : 			//断线处理
; 1668 : 			BYTE cbMatchStatus = pIServerUserItem->GetUserMatchStatus();

  000fc	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00104	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  0010a	ff d0		 call	 eax
  0010c	88 85 0b ff ff
	ff		 mov	 BYTE PTR tv201[ebp], al
  00112	8a 8d 0b ff ff
	ff		 mov	 cl, BYTE PTR tv201[ebp]
  00118	88 4d cf	 mov	 BYTE PTR _cbMatchStatus$4[ebp], cl

; 1669 : 			bool bImmediteMatch = (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE);

  0011b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00121	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00125	83 fa 04	 cmp	 edx, 4
  00128	75 1b		 jne	 SHORT $LN13@OnEventTCP
  0012a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0012d	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00130	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00134	83 fa 01	 cmp	 edx, 1
  00137	75 0c		 jne	 SHORT $LN13@OnEventTCP
  00139	c7 85 08 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv133[ebp], 1
  00143	eb 0a		 jmp	 SHORT $LN14@OnEventTCP
$LN13@OnEventTCP:
  00145	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN14@OnEventTCP:
  0014f	8a 85 08 ff ff
	ff		 mov	 al, BYTE PTR tv133[ebp]
  00155	88 45 ce	 mov	 BYTE PTR _bImmediteMatch$3[ebp], al

; 1670 : 			if (wTableID!=INVALID_TABLE || (bImmediteMatch==true && cbMatchStatus == MUS_PLAYING)
; 1671 : 				|| (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL && wDrawCount!=0 ))

  00158	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  0015c	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00161	75 31		 jne	 SHORT $LN8@OnEventTCP
  00163	0f b6 45 ce	 movzx	 eax, BYTE PTR _bImmediteMatch$3[ebp]
  00167	83 f8 01	 cmp	 eax, 1
  0016a	75 09		 jne	 SHORT $LN9@OnEventTCP
  0016c	0f b6 45 cf	 movzx	 eax, BYTE PTR _cbMatchStatus$4[ebp]
  00170	83 f8 04	 cmp	 eax, 4
  00173	74 1f		 je	 SHORT $LN8@OnEventTCP
$LN9@OnEventTCP:
  00175	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00178	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0017b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0017f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00182	0f 85 90 00 00
	00		 jne	 $LN6@OnEventTCP
  00188	0f b7 45 d4	 movzx	 eax, WORD PTR _wDrawCount$6[ebp]
  0018c	85 c0		 test	 eax, eax
  0018e	0f 84 84 00 00
	00		 je	 $LN6@OnEventTCP
$LN8@OnEventTCP:

; 1672 : 			{
; 1673 : 				//解除绑定
; 1674 : 				pIServerUserItem->DetachBindStatus();

  00194	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00197	8b 10		 mov	 edx, DWORD PTR [eax]
  00199	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0019c	8b 82 18 01 00
	00		 mov	 eax, DWORD PTR [edx+280]
  001a2	ff d0		 call	 eax

; 1675 : 				if(wTableID < m_pGameServiceOption->wTableCount)

  001a4	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001a7	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001aa	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  001ae	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  001b2	3b c2		 cmp	 eax, edx
  001b4	7d 60		 jge	 SHORT $LN11@OnEventTCP

; 1676 : 				{
; 1677 : 					//断线通知
; 1678 : 					ASSERT(wTableID<m_pGameServiceOption->wTableCount);

  001b6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001b9	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001bc	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  001c0	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  001c4	3b c2		 cmp	 eax, edx
  001c6	7c 24		 jl	 SHORT $LN15@OnEventTCP
  001c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z@4JA
  001ce	83 c1 24	 add	 ecx, 36			; 00000024H
  001d1	51		 push	 ecx
  001d2	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  001d7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001dc	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv202[ebp], eax
  001e2	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR tv202[ebp], 0
  001e9	74 01		 je	 SHORT $LN15@OnEventTCP
  001eb	cc		 int	 3
$LN15@OnEventTCP:

; 1679 : 					m_TableFrameArray[wTableID]->OnEventUserOffLine(pIServerUserItem);

  001ec	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  001f0	50		 push	 eax
  001f1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f4	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  001fa	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  001ff	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv203[ebp], eax
  00205	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  00208	51		 push	 ecx
  00209	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR tv203[ebp]
  0020f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00211	e8 00 00 00 00	 call	 ?OnEventUserOffLine@CTableFrame@@QAE_NPAUIServerUserItem@@@Z ; CTableFrame::OnEventUserOffLine
$LN11@OnEventTCP:

; 1680 : 				}
; 1681 : 				else //先不处理看有什么问题
; 1682 : 				{
; 1683 : 
; 1684 : 				}
; 1685 : 			}
; 1686 : 			else

  00216	eb 1c		 jmp	 SHORT $LN4@OnEventTCP
$LN6@OnEventTCP:

; 1687 : 			{
; 1688 : 				pIServerUserItem->SetUserStatus(US_NULL,INVALID_TABLE,INVALID_CHAIR);

  00218	68 ff ff 00 00	 push	 65535			; 0000ffffH
  0021d	68 ff ff 00 00	 push	 65535			; 0000ffffH
  00222	6a 00		 push	 0
  00224	8b 45 dc	 mov	 eax, DWORD PTR _pIServerUserItem$[ebp]
  00227	8b 10		 mov	 edx, DWORD PTR [eax]
  00229	8b 4d dc	 mov	 ecx, DWORD PTR _pIServerUserItem$[ebp]
  0022c	8b 82 fc 00 00
	00		 mov	 eax, DWORD PTR [edx+252]
  00232	ff d0		 call	 eax
$LN4@OnEventTCP:

; 1689 : 			}
; 1690 : 		}
; 1691 : 	}

  00234	eb 54		 jmp	 SHORT $LN16@OnEventTCP
__catch$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z$0:

; 1692 : 	catch(...)
; 1693 : 	{
; 1694 : 		TCHAR szMessage[128]=TEXT("");

  00236	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0023b	88 85 4c ff ff
	ff		 mov	 BYTE PTR _szMessage$2[ebp], al
  00241	6a 7f		 push	 127			; 0000007fH
  00243	6a 00		 push	 0
  00245	8d 85 4d ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$2[ebp+1]
  0024b	50		 push	 eax
  0024c	e8 00 00 00 00	 call	 _memset
  00251	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1695 : 		_sntprintf_s(szMessage,CountArray(szMessage),TEXT("关闭连接异常: wTableID=%d"),wTableID);

  00254	0f b7 45 d8	 movzx	 eax, WORD PTR _wTableID$[ebp]
  00258	50		 push	 eax
  00259	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KGOAMGLA@?$LJ?X?$LB?U?A?$KM?$LN?S?R?l?$LD?$KD?3?5wTableID?$DN?$CFd@
  0025e	68 80 00 00 00	 push	 128			; 00000080H
  00263	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _szMessage$2[ebp]
  00269	51		 push	 ecx
  0026a	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  0026f	83 c4 10	 add	 esp, 16			; 00000010H

; 1696 : 		CTraceService::TraceString(szMessage,TraceLevel_Normal);

  00272	6a 01		 push	 1
  00274	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$2[ebp]
  0027a	50		 push	 eax
  0027b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00281	83 c4 08	 add	 esp, 8

; 1697 : 	}

  00284	b8 00 00 00 00	 mov	 eax, $LN19@OnEventTCP
  00289	c3		 ret	 0
$LN16@OnEventTCP:
  0028a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00291	eb 07		 jmp	 SHORT __tryend$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z$1
$LN19@OnEventTCP:
  00293	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z$1:

; 1698 : 
; 1699 : 	//清除信息
; 1700 : 	ZeroMemory(pBindParameter,sizeof(tagBindParameter));

  0029a	6a 20		 push	 32			; 00000020H
  0029c	6a 00		 push	 0
  0029e	8b 45 e0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  002a1	50		 push	 eax
  002a2	e8 00 00 00 00	 call	 _memset
  002a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1701 : 
; 1702 : 	return false;

  002aa	32 c0		 xor	 al, al
$LN1@OnEventTCP:

; 1703 : }

  002ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  002af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002b6	59		 pop	 ecx
  002b7	5f		 pop	 edi
  002b8	5e		 pop	 esi
  002b9	5b		 pop	 ebx
  002ba	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bd	33 cd		 xor	 ecx, ebp
  002bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 04 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-252]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkShut
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z
_TEXT	SEGMENT
_pBindParameter$ = -12					; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_dwClientAddr$ = 8					; size = 4
_dwSocketID$ = 12					; size = 4
?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkBind, COMDAT
; _this$ = ecx

; 1619 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1620 : 	//变量定义
; 1621 : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 1622 : 	tagBindParameter * pBindParameter=GetBindParameter(wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00028	ff d0		 call	 eax
  0002a	89 45 f4	 mov	 DWORD PTR _pBindParameter$[ebp], eax

; 1623 : 
; 1624 : 	//设置变量
; 1625 : 	if (pBindParameter!=NULL)

  0002d	83 7d f4 00	 cmp	 DWORD PTR _pBindParameter$[ebp], 0
  00031	74 25		 je	 SHORT $LN2@OnEventTCP

; 1626 : 	{
; 1627 : 		pBindParameter->dwSocketID=dwSocketID;

  00033	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 1628 : 		pBindParameter->dwClientAddr=dwClientAddr;

  0003b	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _dwClientAddr$[ebp]
  00041	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1629 : 		pBindParameter->dwActiveTime=(DWORD)time(NULL);

  00044	6a 00		 push	 0
  00046	e8 00 00 00 00	 call	 _time
  0004b	83 c4 04	 add	 esp, 4
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  00051	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1630 : 
; 1631 : 		return true;

  00054	b0 01		 mov	 al, 1
  00056	eb 1f		 jmp	 SHORT $LN1@OnEventTCP
$LN2@OnEventTCP:

; 1632 : 	}
; 1633 : 
; 1634 : 	//错误断言
; 1635 : 	ASSERT(FALSE);

  00058	33 c0		 xor	 eax, eax
  0005a	75 19		 jne	 SHORT $LN4@OnEventTCP
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA
  00062	83 c1 10	 add	 ecx, 16			; 00000010H
  00065	51		 push	 ecx
  00066	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN4@OnEventTCP
  00074	cc		 int	 3
$LN4@OnEventTCP:

; 1636 : 
; 1637 : 	return false;

  00075	32 c0		 xor	 al, al
$LN1@OnEventTCP:

; 1638 : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkBind
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z
_TEXT	SEGMENT
tv132 = -72						; size = 4
tv67 = -72						; size = 4
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_Command$ = 12						; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z PROC ; CAttemperEngineSink::OnEventTCPSocketRead, COMDAT
; _this$ = ecx

; 1557 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1558 : 	//协调连接
; 1559 : 	if (wServiceID==NETWORK_CORRESPOND)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wServiceID$[ebp]
  00010	83 f8 01	 cmp	 eax, 1
  00013	0f 85 ad 00 00
	00		 jne	 $LN6@OnEventTCP

; 1560 : 	{
; 1561 : 		switch (Command.wMainCmdID)

  00019	0f b7 45 0c	 movzx	 eax, WORD PTR _Command$[ebp]
  0001d	89 45 b8	 mov	 DWORD PTR tv67[ebp], eax
  00020	8b 4d b8	 mov	 ecx, DWORD PTR tv67[ebp]
  00023	83 e9 01	 sub	 ecx, 1
  00026	89 4d b8	 mov	 DWORD PTR tv67[ebp], ecx
  00029	83 7d b8 05	 cmp	 DWORD PTR tv67[ebp], 5
  0002d	0f 87 91 00 00
	00		 ja	 $LN2@OnEventTCP
  00033	8b 55 b8	 mov	 edx, DWORD PTR tv67[ebp]
  00036	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN20@OnEventTCP[edx*4]
$LN8@OnEventTCP:

; 1562 : 		{
; 1563 : 		case MDM_CS_REGISTER:		//注册服务
; 1564 : 			{
; 1565 : 				return OnTCPSocketMainRegister(Command.wSubCmdID,pData,wDataSize);

  0003d	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00041	50		 push	 eax
  00042	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00045	51		 push	 ecx
  00046	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  0004a	52		 push	 edx
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?OnTCPSocketMainRegister@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainRegister
  00053	e9 0c 01 00 00	 jmp	 $LN1@OnEventTCP
$LN9@OnEventTCP:

; 1566 : 			}
; 1567 : 		case MDM_CS_SERVICE_INFO:	//服务信息
; 1568 : 			{
; 1569 : 				return OnTCPSocketMainServiceInfo(Command.wSubCmdID,pData,wDataSize);

  00058	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00060	51		 push	 ecx
  00061	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  00065	52		 push	 edx
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?OnTCPSocketMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainServiceInfo
  0006e	e9 f1 00 00 00	 jmp	 $LN1@OnEventTCP
$LN10@OnEventTCP:

; 1570 : 			}
; 1571 : 		case MDM_CS_USER_COLLECT:	//用户汇总
; 1572 : 			{
; 1573 : 				return OnTCPSocketMainUserCollect(Command.wSubCmdID,pData,wDataSize);

  00073	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00077	50		 push	 eax
  00078	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0007b	51		 push	 ecx
  0007c	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  00080	52		 push	 edx
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?OnTCPSocketMainUserCollect@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainUserCollect
  00089	e9 d6 00 00 00	 jmp	 $LN1@OnEventTCP
$LN11@OnEventTCP:

; 1574 : 			}
; 1575 : 		case MDM_CS_MANAGER_SERVICE: //管理服务
; 1576 : 			{
; 1577 : 				return OnTCPSocketMainManagerService(Command.wSubCmdID,pData,wDataSize);

  0008e	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00092	50		 push	 eax
  00093	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00096	51		 push	 ecx
  00097	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  0009b	52		 push	 edx
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?OnTCPSocketMainManagerService@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainManagerService
  000a4	e9 bb 00 00 00	 jmp	 $LN1@OnEventTCP
$LN12@OnEventTCP:

; 1578 : 			}
; 1579 : 		case MDM_CS_ANDROID_SERVICE: //机器服务
; 1580 : 			{
; 1581 : 				return OnTCPSocketMainAndroidService(Command.wSubCmdID,pData,wDataSize);

  000a9	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000ad	50		 push	 eax
  000ae	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  000b1	51		 push	 ecx
  000b2	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  000b6	52		 push	 edx
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?OnTCPSocketMainAndroidService@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainAndroidService
  000bf	e9 a0 00 00 00	 jmp	 $LN1@OnEventTCP
$LN2@OnEventTCP:

; 1582 : 			}
; 1583 : 		}
; 1584 : 	}
; 1585 : 	else if (wServiceID==NETWORK_PERSONAL_ROOM_CORRESPOND)

  000c4	eb 7f		 jmp	 SHORT $LN7@OnEventTCP
$LN6@OnEventTCP:
  000c6	0f b7 45 08	 movzx	 eax, WORD PTR _wServiceID$[ebp]
  000ca	83 f8 02	 cmp	 eax, 2
  000cd	75 76		 jne	 SHORT $LN7@OnEventTCP

; 1586 : 	{
; 1587 : 		//消息处理
; 1588 : 		if(m_pIPersonalRoomServiceManager)

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  000d9	74 66		 je	 SHORT $LN14@OnEventTCP

; 1589 : 		{
; 1590 : 			switch (Command.wMainCmdID)

  000db	0f b7 45 0c	 movzx	 eax, WORD PTR _Command$[ebp]
  000df	89 45 b8	 mov	 DWORD PTR tv132[ebp], eax
  000e2	83 7d b8 01	 cmp	 DWORD PTR tv132[ebp], 1
  000e6	74 08		 je	 SHORT $LN15@OnEventTCP
  000e8	83 7d b8 02	 cmp	 DWORD PTR tv132[ebp], 2
  000ec	74 1a		 je	 SHORT $LN16@OnEventTCP
  000ee	eb 51		 jmp	 SHORT $LN14@OnEventTCP
$LN15@OnEventTCP:

; 1591 : 			{
; 1592 : 			case MDM_CS_REGISTER:		//注册服务
; 1593 : 				{
; 1594 : 					return OnTCPSocketMainPersonalRoomRegister(Command.wSubCmdID,pData,wDataSize);

  000f0	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000f4	50		 push	 eax
  000f5	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  000f8	51		 push	 ecx
  000f9	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  000fd	52		 push	 edx
  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	e8 00 00 00 00	 call	 ?OnTCPSocketMainPersonalRoomRegister@CAttemperEngineSink@@IAE_NGPAXG@Z ; CAttemperEngineSink::OnTCPSocketMainPersonalRoomRegister
  00106	eb 5c		 jmp	 SHORT $LN1@OnEventTCP
$LN16@OnEventTCP:

; 1595 : 				}
; 1596 : 			case MDM_CS_SERVICE_INFO:	//服务信息
; 1597 : 				{
; 1598 : 					if (m_pIPersonalRoomServiceManager)

  00108	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010b	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  00112	74 29		 je	 SHORT $LN17@OnEventTCP

; 1599 : 					{
; 1600 : 						return m_pIPersonalRoomServiceManager->OnTCPSocketMainServiceInfo(Command.wSubCmdID,pData,wDataSize);

  00114	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00118	50		 push	 eax
  00119	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0011c	51		 push	 ecx
  0011d	0f b7 55 0e	 movzx	 edx, WORD PTR _Command$[ebp+2]
  00121	52		 push	 edx
  00122	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00125	8b 88 c8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147400]
  0012b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0012e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00130	8b 8a c8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147400]
  00136	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00139	ff d2		 call	 edx
  0013b	eb 27		 jmp	 SHORT $LN1@OnEventTCP
$LN17@OnEventTCP:

; 1601 : 					}
; 1602 : 					 return true;

  0013d	b0 01		 mov	 al, 1
  0013f	eb 23		 jmp	 SHORT $LN1@OnEventTCP
$LN14@OnEventTCP:

; 1603 : 				}
; 1604 : 			}
; 1605 : 			
; 1606 : 		}
; 1607 : 
; 1608 : 		return true;

  00141	b0 01		 mov	 al, 1
  00143	eb 1f		 jmp	 SHORT $LN1@OnEventTCP
$LN7@OnEventTCP:

; 1609 : 	}
; 1610 : 
; 1611 : 	//错误断言
; 1612 : 	ASSERT(FALSE);

  00145	33 c0		 xor	 eax, eax
  00147	75 19		 jne	 SHORT $LN19@OnEventTCP
  00149	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z@4JA
  0014f	83 c1 37	 add	 ecx, 55			; 00000037H
  00152	51		 push	 ecx
  00153	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00158	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0015d	85 c0		 test	 eax, eax
  0015f	74 01		 je	 SHORT $LN19@OnEventTCP
  00161	cc		 int	 3
$LN19@OnEventTCP:

; 1613 : 
; 1614 : 	return true;

  00162	b0 01		 mov	 al, 1
$LN1@OnEventTCP:

; 1615 : }

  00164	5f		 pop	 edi
  00165	5e		 pop	 esi
  00166	5b		 pop	 ebx
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c2 10 00	 ret	 16			; 00000010H
  0016d	0f 1f 00	 npad	 3
$LN20@OnEventTCP:
  00170	00 00 00 00	 DD	 $LN8@OnEventTCP
  00174	00 00 00 00	 DD	 $LN9@OnEventTCP
  00178	00 00 00 00	 DD	 $LN10@OnEventTCP
  0017c	00 00 00 00	 DD	 $LN2@OnEventTCP
  00180	00 00 00 00	 DD	 $LN11@OnEventTCP
  00184	00 00 00 00	 DD	 $LN12@OnEventTCP
?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z
_TEXT	SEGMENT
_szDescribe$1 = -264					; size = 128
_szDescribe$2 = -136					; size = 128
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wServiceID$ = 8					; size = 2
_cbShutReason$ = 12					; size = 1
?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z PROC ; CAttemperEngineSink::OnEventTCPSocketShut, COMDAT
; _this$ = ecx

; 1308 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1309 : 	//协调连接
; 1310 : 	if (wServiceID==NETWORK_CORRESPOND)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wServiceID$[ebp]
  0001d	83 f8 01	 cmp	 eax, 1
  00020	0f 85 e7 00 00
	00		 jne	 $LN2@OnEventTCP

; 1311 : 	{
; 1312 : 		//设置变量
; 1313 : 		m_bCollectUser=false;

  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 1314 : 
; 1315 : 		//删除时间
; 1316 : 		m_pITimerEngine->KillTimer(IDI_REPORT_SERVER_INFO);

  0002d	6a 03		 push	 3
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00038	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003d	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  00043	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00046	ff d2		 call	 edx

; 1317 : 
; 1318 : 		//重连判断
; 1319 : 		if (m_bNeekCorrespond==true)

  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  0004f	83 f9 01	 cmp	 ecx, 1
  00052	0f 85 a9 00 00
	00		 jne	 $LN4@OnEventTCP

; 1320 : 		{
; 1321 : 			//构造提示
; 1322 : 			TCHAR szDescribe[128]=TEXT("");

  00058	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0005d	88 85 78 ff ff
	ff		 mov	 BYTE PTR _szDescribe$2[ebp], al
  00063	6a 7f		 push	 127			; 0000007fH
  00065	6a 00		 push	 0
  00067	8d 85 79 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$2[ebp+1]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 _memset
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1323 : 			_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("与协调服务器的连接关闭了，%ld 秒后将重新连接"),m_pInitParameter->m_wConnectTime);

  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0007c	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00080	52		 push	 edx
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@HPLNLDC@?S?k?P?$KN?$LF?w?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@
  00086	68 80 00 00 00	 push	 128			; 00000080H
  0008b	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$2[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 1324 : 
; 1325 : 			//提示消息
; 1326 : 			CTraceService::TraceString(szDescribe,TraceLevel_Warning);

  0009a	6a 02		 push	 2
  0009c	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$2[ebp]
  000a2	50		 push	 eax
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  000a9	83 c4 08	 add	 esp, 8

; 1327 : 
; 1328 : 			//设置时间
; 1329 : 			ASSERT(m_pITimerEngine!=NULL);

  000ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000af	83 b8 a8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147368], 0
  000b6	75 19		 jne	 SHORT $LN8@OnEventTCP
  000b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z@4JA
  000be	83 c1 15	 add	 ecx, 21			; 00000015H
  000c1	51		 push	 ecx
  000c2	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000c7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000cc	85 c0		 test	 eax, eax
  000ce	74 01		 je	 SHORT $LN8@OnEventTCP
  000d0	cc		 int	 3
$LN8@OnEventTCP:

; 1330 : 			m_pITimerEngine->SetTimer(IDI_CONNECT_CORRESPOND,m_pInitParameter->m_wConnectTime*1000L,1,0);

  000d1	6a 00		 push	 0
  000d3	6a 01		 push	 1
  000d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000db	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  000df	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  000e5	50		 push	 eax
  000e6	6a 04		 push	 4
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  000f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	8b 12		 mov	 edx, DWORD PTR [edx]
  000f6	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  000fc	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000ff	ff d0		 call	 eax
$LN4@OnEventTCP:

; 1331 : 		}
; 1332 : 
; 1333 : 		return true;

  00101	b0 01		 mov	 al, 1
  00103	e9 d1 00 00 00	 jmp	 $LN1@OnEventTCP
  00108	e9 ca 00 00 00	 jmp	 $LN3@OnEventTCP
$LN2@OnEventTCP:

; 1334 : 	}
; 1335 : 	else if (wServiceID==NETWORK_PERSONAL_ROOM_CORRESPOND)

  0010d	0f b7 45 08	 movzx	 eax, WORD PTR _wServiceID$[ebp]
  00111	83 f8 02	 cmp	 eax, 2
  00114	0f 85 bd 00 00
	00		 jne	 $LN3@OnEventTCP

; 1336 : 	{
; 1337 : 
; 1338 : 		//重连判断
; 1339 : 		if (m_bNeekCorrespond==true)

  0011a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00121	83 f9 01	 cmp	 ecx, 1
  00124	0f 85 a9 00 00
	00		 jne	 $LN6@OnEventTCP

; 1340 : 		{
; 1341 : 			//构造提示
; 1342 : 			TCHAR szDescribe[128]=TEXT("");

  0012a	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0012f	88 85 f8 fe ff
	ff		 mov	 BYTE PTR _szDescribe$1[ebp], al
  00135	6a 7f		 push	 127			; 0000007fH
  00137	6a 00		 push	 0
  00139	8d 85 f9 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp+1]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 _memset
  00145	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1343 : 			_sntprintf(szDescribe,CountArray(szDescribe),TEXT("与约战服务器的连接关闭了，%ld 秒后将重新连接"),m_pInitParameter->m_wConnectTime);

  00148	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0014e	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00152	52		 push	 edx
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@ONGINNEE@?S?k?T?$LM?U?$LN?$LH?$PO?N?q?F?w?$LF?D?A?$KM?$LN?S?$LJ?X?$LB?U?A?K?$KD?$KM?$CFld?5?C@
  00158	68 80 00 00 00	 push	 128			; 00000080H
  0015d	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 __snprintf
  00169	83 c4 10	 add	 esp, 16			; 00000010H

; 1344 : 
; 1345 : 			//提示消息
; 1346 : 			CTraceService::TraceString(szDescribe,TraceLevel_Warning);

  0016c	6a 02		 push	 2
  0016e	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$1[ebp]
  00174	50		 push	 eax
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0017b	83 c4 08	 add	 esp, 8

; 1347 : 
; 1348 : 			//设置时间
; 1349 : 			ASSERT(m_pITimerEngine!=NULL);

  0017e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00181	83 b8 a8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147368], 0
  00188	75 19		 jne	 SHORT $LN9@OnEventTCP
  0018a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z@4JA
  00190	83 c1 29	 add	 ecx, 41			; 00000029H
  00193	51		 push	 ecx
  00194	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00199	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0019e	85 c0		 test	 eax, eax
  001a0	74 01		 je	 SHORT $LN9@OnEventTCP
  001a2	cc		 int	 3
$LN9@OnEventTCP:

; 1350 : 			m_pITimerEngine->SetTimer(IDI_CONNECT_PERSONAL_ROOM_CORRESPOND,m_pInitParameter->m_wConnectTime*1000L,1,0);

  001a3	6a 00		 push	 0
  001a5	6a 01		 push	 1
  001a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001aa	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  001ad	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  001b1	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  001b7	50		 push	 eax
  001b8	6a 0d		 push	 13			; 0000000dH
  001ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  001c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c6	8b 12		 mov	 edx, DWORD PTR [edx]
  001c8	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  001ce	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  001d1	ff d0		 call	 eax
$LN6@OnEventTCP:

; 1351 : 		}
; 1352 : 
; 1353 : 		return true;

  001d3	b0 01		 mov	 al, 1
  001d5	eb 02		 jmp	 SHORT $LN1@OnEventTCP
$LN3@OnEventTCP:

; 1354 : 	}
; 1355 : 
; 1356 : 	return false;

  001d7	32 c0		 xor	 al, al
$LN1@OnEventTCP:

; 1357 : }

  001d9	5f		 pop	 edi
  001da	5e		 pop	 esi
  001db	5b		 pop	 ebx
  001dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001df	33 cd		 xor	 ecx, ebp
  001e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e6	8b e5		 mov	 esp, ebp
  001e8	5d		 pop	 ebp
  001e9	c2 08 00	 ret	 8
?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketShut
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z
_TEXT	SEGMENT
tv398 = -740						; size = 4
tv153 = -740						; size = 4
_pTableFrame$1 = -608					; size = 4
_i$2 = -604						; size = 2
_bIsTreasureDB$3 = -597					; size = 1
_RegisterPersonal$4 = -596				; size = 8
_pServiceUnits$5 = -588					; size = 4
_RegisterServer$6 = -584				; size = 147
_szDescribe$7 = -436					; size = 128
_pTableFrame$8 = -308					; size = 4
_i$9 = -304						; size = 2
_bIsTreasureDB$10 = -297				; size = 1
_RegisterPersonal$11 = -296				; size = 8
_pServiceUnits$12 = -288				; size = 4
_RegisterServer$13 = -284				; size = 147
_szDescribe$14 = -136					; size = 128
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wServiceID$ = 8					; size = 2
_nErrorCode$ = 12					; size = 4
?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z PROC ; CAttemperEngineSink::OnEventTCPSocketLink, COMDAT
; _this$ = ecx

; 1361 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 02 00
	00		 sub	 esp, 740		; 000002e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1362 : 	//协调连接
; 1363 : 	if (wServiceID==NETWORK_CORRESPOND)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wServiceID$[ebp]
  0001d	83 f8 01	 cmp	 eax, 1
  00020	0f 85 40 04 00
	00		 jne	 $LN8@OnEventTCP

; 1364 : 	{
; 1365 : 		//错误判断
; 1366 : 		if (nErrorCode!=0)

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nErrorCode$[ebp], 0
  0002a	0f 84 b4 00 00
	00		 je	 $LN10@OnEventTCP

; 1367 : 		{
; 1368 : 			//构造提示
; 1369 : 			TCHAR szDescribe[128]=TEXT("");

  00030	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00035	88 85 78 ff ff
	ff		 mov	 BYTE PTR _szDescribe$14[ebp], al
  0003b	6a 7f		 push	 127			; 0000007fH
  0003d	6a 00		 push	 0
  0003f	8d 85 79 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$14[ebp+1]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1370 : 			_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("协调服务器连接失败 [ %ld ]，%ld 秒后将重新连接"),

  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00054	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00058	52		 push	 edx
  00059	8b 45 0c	 mov	 eax, DWORD PTR _nErrorCode$[ebp]
  0005c	50		 push	 eax
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@NEANHCGA@?P?$KN?$LF?w?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@
  00062	68 80 00 00 00	 push	 128			; 00000080H
  00067	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$14[ebp]
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00073	83 c4 14	 add	 esp, 20			; 00000014H

; 1371 : 				nErrorCode,m_pInitParameter->m_wConnectTime);
; 1372 : 
; 1373 : 			//提示消息
; 1374 : 			CTraceService::TraceString(szDescribe,TraceLevel_Warning);

  00076	6a 02		 push	 2
  00078	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _szDescribe$14[ebp]
  0007e	50		 push	 eax
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00085	83 c4 08	 add	 esp, 8

; 1375 : 
; 1376 : 			//设置时间
; 1377 : 			ASSERT(m_pITimerEngine!=NULL);

  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	83 b8 a8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147368], 0
  00092	75 19		 jne	 SHORT $LN24@OnEventTCP
  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA
  0009a	83 c1 10	 add	 ecx, 16			; 00000010H
  0009d	51		 push	 ecx
  0009e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000a3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a8	85 c0		 test	 eax, eax
  000aa	74 01		 je	 SHORT $LN24@OnEventTCP
  000ac	cc		 int	 3
$LN24@OnEventTCP:

; 1378 : 			m_pITimerEngine->SetTimer(IDI_CONNECT_CORRESPOND,m_pInitParameter->m_wConnectTime*1000L,1,0);

  000ad	6a 00		 push	 0
  000af	6a 01		 push	 1
  000b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000b7	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  000bb	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  000c1	50		 push	 eax
  000c2	6a 04		 push	 4
  000c4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  000cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	8b 12		 mov	 edx, DWORD PTR [edx]
  000d2	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  000d8	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000db	ff d0		 call	 eax

; 1379 : 
; 1380 : 			return false;

  000dd	32 c0		 xor	 al, al
  000df	e9 97 07 00 00	 jmp	 $LN1@OnEventTCP
$LN10@OnEventTCP:

; 1381 : 		}
; 1382 : 
; 1383 : 		//提示消息
; 1384 : 		CTraceService::TraceString(TEXT("正在发送游戏房间注册信息..."),TraceLevel_Normal);

  000e4	6a 01		 push	 1
  000e6	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IFKABAKD@?U?$PN?T?Z?$LH?$KC?K?M?S?N?O?$LH?$LH?$LP?$LM?d?W?$KC?$LC?a?P?E?O?$KC?4?4?4@
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  000f1	83 c4 08	 add	 esp, 8

; 1385 : 
; 1386 : 		//变量定义
; 1387 : 		CMD_CS_C_RegisterServer RegisterServer;
; 1388 : 		ZeroMemory(&RegisterServer,sizeof(RegisterServer));

  000f4	68 93 00 00 00	 push	 147			; 00000093H
  000f9	6a 00		 push	 0
  000fb	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _RegisterServer$13[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 _memset
  00107	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1389 : 
; 1390 : 		//服务端口
; 1391 : 		CServiceUnits * pServiceUnits=CServiceUnits::g_pServiceUnits;

  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pServiceUnits@CServiceUnits@@2PAV1@A ; CServiceUnits::g_pServiceUnits
  0010f	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _pServiceUnits$12[ebp], eax

; 1392 : 		RegisterServer.wServerPort=pServiceUnits->m_TCPNetworkEngine->GetCurrentPort();

  00115	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _pServiceUnits$12[ebp]
  0011b	81 c1 78 ff 02
	00		 add	 ecx, 196472		; 0002ff78H
  00121	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ; CTempldateHelper<ITCPNetworkEngine>::operator->
  00126	89 85 1c fd ff
	ff		 mov	 DWORD PTR tv153[ebp], eax
  0012c	8b 85 1c fd ff
	ff		 mov	 eax, DWORD PTR tv153[ebp]
  00132	8b 10		 mov	 edx, DWORD PTR [eax]
  00134	8b 8d 1c fd ff
	ff		 mov	 ecx, DWORD PTR tv153[ebp]
  0013a	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0013d	ff d0		 call	 eax
  0013f	66 89 85 f2 fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+14], ax

; 1393 : 
; 1394 : 		//构造数据
; 1395 : 		RegisterServer.wKindID=m_pGameServiceOption->wKindID;

  00146	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00149	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0014c	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0014f	66 89 95 e4 fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp], dx

; 1396 : 		RegisterServer.wNodeID=m_pGameServiceOption->wNodeID;

  00156	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00159	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0015c	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  00160	66 89 95 e6 fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+2], dx

; 1397 : 		RegisterServer.wSortID=m_pGameServiceOption->wSortID;

  00167	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0016d	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  00171	66 89 95 e8 fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+4], dx

; 1398 : 		RegisterServer.wServerID=m_pGameServiceOption->wServerID;

  00178	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0017e	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  00182	66 89 95 ea fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+6], dx

; 1399 : 		RegisterServer.wServerKind=m_pGameServiceOption->wServerKind;

  00189	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0018f	66 8b 51 4a	 mov	 dx, WORD PTR [ecx+74]
  00193	66 89 95 ec fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+8], dx

; 1400 : 		RegisterServer.wServerType=m_pGameServiceOption->wServerType;	

  0019a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001a0	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  001a4	66 89 95 ee fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+10], dx

; 1401 : 		RegisterServer.wServerLevel=m_pGameServiceOption->wServerLevel;

  001ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ae	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001b1	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  001b5	66 89 95 f0 fe
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+12], dx

; 1402 : 		RegisterServer.lCellScore=m_pGameServiceOption->lCellScore;

  001bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001bf	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001c2	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001c5	99		 cdq
  001c6	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+16], eax
  001cc	89 95 f8 fe ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+20], edx

; 1403 : 		RegisterServer.cbEnterMember=m_pGameServiceOption->cbMinEnterMember;

  001d2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001d8	8a 51 38	 mov	 dl, BYTE PTR [ecx+56]
  001db	88 95 04 ff ff
	ff		 mov	 BYTE PTR _RegisterServer$13[ebp+32], dl

; 1404 : 		RegisterServer.lEnterScore=m_pGameServiceOption->lMinEnterScore;

  001e1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e4	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001e7	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  001ea	89 95 fc fe ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+24], edx
  001f0	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  001f3	89 85 00 ff ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+28], eax

; 1405 : 		RegisterServer.dwOnLineCount=m_ServerUserManager.GetUserItemCount();

  001f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fc	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00202	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  0020b	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0020e	ff d0		 call	 eax
  00210	89 85 05 ff ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+33], eax

; 1406 : 		RegisterServer.dwFullCount=m_pGameServiceOption->wMaxPlayer-RESERVE_USER_COUNT;

  00216	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00219	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0021c	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  00220	83 ea 28	 sub	 edx, 40			; 00000028H
  00223	89 95 09 ff ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+37], edx

; 1407 : 		RegisterServer.dwServerRule=m_pGameServiceOption->dwServerRule&(SR_ALLOW_AVERT_CHEAT_MODE | SR_SUPORT_TYPE_PC | SR_SUPORT_TYPE_MOBILE);

  00229	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0022c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0022f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00232	81 e2 40 00 00
	03		 and	 edx, 50331712		; 03000040H
  00238	89 95 0f ff ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+43], edx

; 1408 : 		RegisterServer.wTableCount = m_pGameServiceOption->wTableCount;

  0023e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00241	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00244	66 8b 51 46	 mov	 dx, WORD PTR [ecx+70]
  00248	66 89 95 0d ff
	ff ff		 mov	 WORD PTR _RegisterServer$13[ebp+41], dx

; 1409 : 		RegisterServer.dwSetPlayerCount = m_pGameServiceOption->dwSetPlayerCount;

  0024f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00252	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00255	8b 91 cc 00 00
	00		 mov	 edx, DWORD PTR [ecx+204]
  0025b	89 95 53 ff ff
	ff		 mov	 DWORD PTR _RegisterServer$13[ebp+111], edx

; 1410 : 
; 1411 : 		lstrcpyn(RegisterServer.szServerName,m_pGameServiceOption->szServerName,CountArray(RegisterServer.szServerName));

  00261	6a 20		 push	 32			; 00000020H
  00263	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00266	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00269	83 c1 50	 add	 ecx, 80			; 00000050H
  0026c	51		 push	 ecx
  0026d	8d 95 33 ff ff
	ff		 lea	 edx, DWORD PTR _RegisterServer$13[ebp+79]
  00273	52		 push	 edx
  00274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1412 : 		lstrcpyn(RegisterServer.szServerAddr,m_pInitParameter->m_ServiceAddress.szAddress,CountArray(RegisterServer.szServerAddr));

  0027a	6a 20		 push	 32			; 00000020H
  0027c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0027f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00282	83 c1 70	 add	 ecx, 112		; 00000070H
  00285	51		 push	 ecx
  00286	8d 95 13 ff ff
	ff		 lea	 edx, DWORD PTR _RegisterServer$13[ebp+47]
  0028c	52		 push	 edx
  0028d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1413 : 		lstrcpyn(RegisterServer.szGameInfomation, m_pGameServiceOption->szGameInfomation, CountArray(RegisterServer.szGameInfomation));

  00293	6a 20		 push	 32			; 00000020H
  00295	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00298	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0029b	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  002a1	51		 push	 ecx
  002a2	8d 95 57 ff ff
	ff		 lea	 edx, DWORD PTR _RegisterServer$13[ebp+115]
  002a8	52		 push	 edx
  002a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1414 : 
; 1415 : 		//发送数据
; 1416 : 		ASSERT(m_pITCPSocketService!=NULL);

  002af	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002b2	83 b8 b0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147376], 0
  002b9	75 19		 jne	 SHORT $LN25@OnEventTCP
  002bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA
  002c1	83 c1 37	 add	 ecx, 55			; 00000037H
  002c4	51		 push	 ecx
  002c5	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  002ca	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002cf	85 c0		 test	 eax, eax
  002d1	74 01		 je	 SHORT $LN25@OnEventTCP
  002d3	cc		 int	 3
$LN25@OnEventTCP:

; 1417 : 		m_pITCPSocketService->SendData(MDM_CS_REGISTER,SUB_CS_C_REGISTER_SERVER,&RegisterServer,sizeof(RegisterServer));

  002d4	68 93 00 00 00	 push	 147			; 00000093H
  002d9	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _RegisterServer$13[ebp]
  002df	50		 push	 eax
  002e0	6a 65		 push	 101			; 00000065H
  002e2	6a 01		 push	 1
  002e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e7	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  002ed	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f0	8b 12		 mov	 edx, DWORD PTR [edx]
  002f2	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  002f8	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002fb	ff d0		 call	 eax

; 1418 : 
; 1419 : 		//如果是约战房发送创建房间限制
; 1420 : 		if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  002fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00300	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00303	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00307	83 fa 10	 cmp	 edx, 16			; 00000010H
  0030a	75 45		 jne	 SHORT $LN11@OnEventTCP

; 1421 : 		{
; 1422 : 			CMD_CS_S_RegisterPersonal  RegisterPersonal;
; 1423 : 			RegisterPersonal.dwKindID = m_pGameServiceOption->wKindID;

  0030c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0030f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00312	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00315	89 95 d8 fe ff
	ff		 mov	 DWORD PTR _RegisterPersonal$11[ebp], edx

; 1424 : 			RegisterPersonal.dwMaxCreate = m_PersonalRoomOption.wCanCreateCount;

  0031b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0031e	0f b7 88 9b 00
	00 00		 movzx	 ecx, WORD PTR [eax+155]
  00325	89 8d dc fe ff
	ff		 mov	 DWORD PTR _RegisterPersonal$11[ebp+4], ecx

; 1425 : 			m_pITCPSocketService->SendData(MDM_CS_REGISTER, SUB_CS_C_REGISTER_PERSONAL, &RegisterPersonal, sizeof(RegisterPersonal));

  0032b	6a 08		 push	 8
  0032d	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _RegisterPersonal$11[ebp]
  00333	50		 push	 eax
  00334	6a 68		 push	 104			; 00000068H
  00336	6a 01		 push	 1
  00338	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0033b	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  00341	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00344	8b 12		 mov	 edx, DWORD PTR [edx]
  00346	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  0034c	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0034f	ff d0		 call	 eax
$LN11@OnEventTCP:

; 1426 : 		}
; 1427 : 		
; 1428 : 		//是否使用金币库
; 1429 : 		bool bIsTreasureDB = false;

  00351	c6 85 d7 fe ff
	ff 00		 mov	 BYTE PTR _bIsTreasureDB$10[ebp], 0

; 1430 : 		if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  00358	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  0035d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00360	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00363	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00369	51		 push	 ecx
  0036a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00370	85 c0		 test	 eax, eax
  00372	75 07		 jne	 SHORT $LN12@OnEventTCP

; 1431 : 		{
; 1432 : 			bIsTreasureDB = true;

  00374	c6 85 d7 fe ff
	ff 01		 mov	 BYTE PTR _bIsTreasureDB$10[ebp], 1
$LN12@OnEventTCP:

; 1433 : 		}
; 1434 : 
; 1435 : 		//桌子状态
; 1436 : 		for (WORD i=0;i<m_TableFrameArray.GetCount();i++)

  0037b	33 c0		 xor	 eax, eax
  0037d	66 89 85 d0 fe
	ff ff		 mov	 WORD PTR _i$9[ebp], ax
  00384	eb 12		 jmp	 SHORT $LN4@OnEventTCP
$LN2@OnEventTCP:
  00386	66 8b 85 d0 fe
	ff ff		 mov	 ax, WORD PTR _i$9[ebp]
  0038d	66 83 c0 01	 add	 ax, 1
  00391	66 89 85 d0 fe
	ff ff		 mov	 WORD PTR _i$9[ebp], ax
$LN4@OnEventTCP:
  00398	0f b7 b5 d0 fe
	ff ff		 movzx	 esi, WORD PTR _i$9[ebp]
  0039f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a2	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  003a8	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  003ad	3b f0		 cmp	 esi, eax
  003af	7d 60		 jge	 SHORT $LN3@OnEventTCP

; 1437 : 		{
; 1438 : 			CTableFrame * pTableFrame=m_TableFrameArray[i];

  003b1	0f b7 85 d0 fe
	ff ff		 movzx	 eax, WORD PTR _i$9[ebp]
  003b8	50		 push	 eax
  003b9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003bc	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  003c2	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  003c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c9	89 8d cc fe ff
	ff		 mov	 DWORD PTR _pTableFrame$8[ebp], ecx

; 1439 : 			//如果使用的是金币数据库
; 1440 : 			if (bIsTreasureDB)

  003cf	0f b6 85 d7 fe
	ff ff		 movzx	 eax, BYTE PTR _bIsTreasureDB$10[ebp]
  003d6	85 c0		 test	 eax, eax
  003d8	74 1a		 je	 SHORT $LN13@OnEventTCP

; 1441 : 			{
; 1442 : 				pTableFrame->SetDataBaseMode(0);

  003da	6a 00		 push	 0
  003dc	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$8[ebp]
  003e2	8b 10		 mov	 edx, DWORD PTR [eax]
  003e4	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$8[ebp]
  003ea	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  003f0	ff d0		 call	 eax

; 1443 : 			}
; 1444 : 			else

  003f2	eb 18		 jmp	 SHORT $LN14@OnEventTCP
$LN13@OnEventTCP:

; 1445 : 			{
; 1446 : 				pTableFrame->SetDataBaseMode(1);

  003f4	6a 01		 push	 1
  003f6	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$8[ebp]
  003fc	8b 10		 mov	 edx, DWORD PTR [eax]
  003fe	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$8[ebp]
  00404	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  0040a	ff d0		 call	 eax
$LN14@OnEventTCP:

; 1447 : 			}
; 1448 : 
; 1449 : 		}

  0040c	e9 75 ff ff ff	 jmp	 $LN2@OnEventTCP
$LN3@OnEventTCP:

; 1450 : 		//设置时间
; 1451 : 		ASSERT(m_pITimerEngine!=NULL);

  00411	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00414	83 b8 a8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147368], 0
  0041b	75 19		 jne	 SHORT $LN26@OnEventTCP
  0041d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA
  00423	83 c1 5a	 add	 ecx, 90			; 0000005aH
  00426	51		 push	 ecx
  00427	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0042c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00431	85 c0		 test	 eax, eax
  00433	74 01		 je	 SHORT $LN26@OnEventTCP
  00435	cc		 int	 3
$LN26@OnEventTCP:

; 1452 : 		m_pITimerEngine->SetTimer(IDI_REPORT_SERVER_INFO,TIME_REPORT_SERVER_INFO*1000L,TIMES_INFINITY,0);

  00436	6a 00		 push	 0
  00438	6a ff		 push	 -1
  0043a	68 30 75 00 00	 push	 30000			; 00007530H
  0043f	6a 03		 push	 3
  00441	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00444	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0044a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0044d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0044f	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  00455	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00458	ff d2		 call	 edx

; 1453 : 
; 1454 : 		return true;

  0045a	b0 01		 mov	 al, 1
  0045c	e9 1a 04 00 00	 jmp	 $LN1@OnEventTCP
  00461	e9 13 04 00 00	 jmp	 $LN9@OnEventTCP
$LN8@OnEventTCP:

; 1455 : 	}
; 1456 : 	else if (wServiceID==NETWORK_PERSONAL_ROOM_CORRESPOND)

  00466	0f b7 45 08	 movzx	 eax, WORD PTR _wServiceID$[ebp]
  0046a	83 f8 02	 cmp	 eax, 2
  0046d	0f 85 06 04 00
	00		 jne	 $LN9@OnEventTCP

; 1457 : 	{
; 1458 : 		//错误判断
; 1459 : 		if (nErrorCode!=0)

  00473	83 7d 0c 00	 cmp	 DWORD PTR _nErrorCode$[ebp], 0
  00477	0f 84 b4 00 00
	00		 je	 $LN16@OnEventTCP

; 1460 : 		{
; 1461 : 			//构造提示
; 1462 : 			TCHAR szDescribe[128]=TEXT("");

  0047d	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00482	88 85 4c fe ff
	ff		 mov	 BYTE PTR _szDescribe$7[ebp], al
  00488	6a 7f		 push	 127			; 0000007fH
  0048a	6a 00		 push	 0
  0048c	8d 85 4d fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$7[ebp+1]
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 _memset
  00498	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1463 : 			_sntprintf_s(szDescribe,CountArray(szDescribe),TEXT("约战服务器连接失败 [ %ld ]，%ld 秒后将重新连接"),

  0049b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0049e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  004a1	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  004a5	52		 push	 edx
  004a6	8b 45 0c	 mov	 eax, DWORD PTR _nErrorCode$[ebp]
  004a9	50		 push	 eax
  004aa	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IEGHCDCN@?T?$LM?U?$LN?$LH?$PO?N?q?F?w?A?$KM?$LN?S?J?$KH?$LA?$NM?5?$FL?5?$CFld?5?$FN?$KD?$KM?$CFld@
  004af	68 80 00 00 00	 push	 128			; 00000080H
  004b4	8d 8d 4c fe ff
	ff		 lea	 ecx, DWORD PTR _szDescribe$7[ebp]
  004ba	51		 push	 ecx
  004bb	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  004c0	83 c4 14	 add	 esp, 20			; 00000014H

; 1464 : 				nErrorCode,m_pInitParameter->m_wConnectTime);
; 1465 : 
; 1466 : 			//提示消息
; 1467 : 			CTraceService::TraceString(szDescribe,TraceLevel_Warning);

  004c3	6a 02		 push	 2
  004c5	8d 85 4c fe ff
	ff		 lea	 eax, DWORD PTR _szDescribe$7[ebp]
  004cb	50		 push	 eax
  004cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  004d2	83 c4 08	 add	 esp, 8

; 1468 : 
; 1469 : 			//设置时间
; 1470 : 			ASSERT(m_pITimerEngine!=NULL);

  004d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004d8	83 b8 a8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147368], 0
  004df	75 19		 jne	 SHORT $LN27@OnEventTCP
  004e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA
  004e7	83 c1 6d	 add	 ecx, 109		; 0000006dH
  004ea	51		 push	 ecx
  004eb	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  004f0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  004f5	85 c0		 test	 eax, eax
  004f7	74 01		 je	 SHORT $LN27@OnEventTCP
  004f9	cc		 int	 3
$LN27@OnEventTCP:

; 1471 : 			m_pITimerEngine->SetTimer(IDI_CONNECT_PERSONAL_ROOM_CORRESPOND,m_pInitParameter->m_wConnectTime*1000L,1,0);

  004fa	6a 00		 push	 0
  004fc	6a 01		 push	 1
  004fe	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00501	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00504	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00508	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  0050e	50		 push	 eax
  0050f	6a 0d		 push	 13			; 0000000dH
  00511	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00514	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  0051a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0051d	8b 12		 mov	 edx, DWORD PTR [edx]
  0051f	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00525	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00528	ff d0		 call	 eax

; 1472 : 
; 1473 : 			return false;

  0052a	32 c0		 xor	 al, al
  0052c	e9 4a 03 00 00	 jmp	 $LN1@OnEventTCP
$LN16@OnEventTCP:

; 1474 : 		}
; 1475 : 
; 1476 : 		//提示消息
; 1477 : 		CTraceService::TraceString(TEXT("正在发送游戏房间注册信息..."),TraceLevel_Normal);

  00531	6a 01		 push	 1
  00533	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IFKABAKD@?U?$PN?T?Z?$LH?$KC?K?M?S?N?O?$LH?$LH?$LP?$LM?d?W?$KC?$LC?a?P?E?O?$KC?4?4?4@
  00538	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0053e	83 c4 08	 add	 esp, 8

; 1478 : 
; 1479 : 		//变量定义
; 1480 : 		CMD_CS_C_RegisterServer RegisterServer;
; 1481 : 		ZeroMemory(&RegisterServer,sizeof(RegisterServer));

  00541	68 93 00 00 00	 push	 147			; 00000093H
  00546	6a 00		 push	 0
  00548	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _RegisterServer$6[ebp]
  0054e	50		 push	 eax
  0054f	e8 00 00 00 00	 call	 _memset
  00554	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1482 : 
; 1483 : 		//服务端口
; 1484 : 		CServiceUnits * pServiceUnits=CServiceUnits::g_pServiceUnits;

  00557	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pServiceUnits@CServiceUnits@@2PAV1@A ; CServiceUnits::g_pServiceUnits
  0055c	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _pServiceUnits$5[ebp], eax

; 1485 : 		RegisterServer.wServerPort=pServiceUnits->m_TCPNetworkEngine->GetCurrentPort();

  00562	8b 8d b4 fd ff
	ff		 mov	 ecx, DWORD PTR _pServiceUnits$5[ebp]
  00568	81 c1 78 ff 02
	00		 add	 ecx, 196472		; 0002ff78H
  0056e	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ; CTempldateHelper<ITCPNetworkEngine>::operator->
  00573	89 85 1c fd ff
	ff		 mov	 DWORD PTR tv398[ebp], eax
  00579	8b 85 1c fd ff
	ff		 mov	 eax, DWORD PTR tv398[ebp]
  0057f	8b 10		 mov	 edx, DWORD PTR [eax]
  00581	8b 8d 1c fd ff
	ff		 mov	 ecx, DWORD PTR tv398[ebp]
  00587	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0058a	ff d0		 call	 eax
  0058c	66 89 85 c6 fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+14], ax

; 1486 : 
; 1487 : 		//构造数据
; 1488 : 		RegisterServer.wKindID=m_pGameServiceOption->wKindID;

  00593	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00596	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00599	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0059c	66 89 95 b8 fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp], dx

; 1489 : 		RegisterServer.wNodeID=m_pGameServiceOption->wNodeID;

  005a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005a6	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005a9	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  005ad	66 89 95 ba fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+2], dx

; 1490 : 		RegisterServer.wSortID=m_pGameServiceOption->wSortID;

  005b4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005b7	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005ba	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  005be	66 89 95 bc fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+4], dx

; 1491 : 		RegisterServer.wServerID=m_pGameServiceOption->wServerID;

  005c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005c8	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005cb	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  005cf	66 89 95 be fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+6], dx

; 1492 : 		RegisterServer.wServerKind=m_pGameServiceOption->wServerKind;

  005d6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005d9	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005dc	66 8b 51 4a	 mov	 dx, WORD PTR [ecx+74]
  005e0	66 89 95 c0 fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+8], dx

; 1493 : 		RegisterServer.wServerType=m_pGameServiceOption->wServerType;	

  005e7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005ea	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005ed	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  005f1	66 89 95 c2 fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+10], dx

; 1494 : 		RegisterServer.wServerLevel=m_pGameServiceOption->wServerLevel;

  005f8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005fb	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005fe	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  00602	66 89 95 c4 fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+12], dx

; 1495 : 		RegisterServer.lCellScore=m_pGameServiceOption->lCellScore;

  00609	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0060c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0060f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00612	99		 cdq
  00613	89 85 c8 fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+16], eax
  00619	89 95 cc fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+20], edx

; 1496 : 		RegisterServer.cbEnterMember=m_pGameServiceOption->cbMinEnterMember;

  0061f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00622	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00625	8a 51 38	 mov	 dl, BYTE PTR [ecx+56]
  00628	88 95 d8 fd ff
	ff		 mov	 BYTE PTR _RegisterServer$6[ebp+32], dl

; 1497 : 		RegisterServer.lEnterScore=m_pGameServiceOption->lMinEnterScore;

  0062e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00631	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00634	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00637	89 95 d0 fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+24], edx
  0063d	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00640	89 85 d4 fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+28], eax

; 1498 : 		RegisterServer.dwOnLineCount=m_ServerUserManager.GetUserItemCount();

  00646	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00649	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0064f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00652	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00658	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0065b	ff d0		 call	 eax
  0065d	89 85 d9 fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+33], eax

; 1499 : 		RegisterServer.dwFullCount=m_pGameServiceOption->wMaxPlayer-RESERVE_USER_COUNT;

  00663	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00666	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00669	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  0066d	83 ea 28	 sub	 edx, 40			; 00000028H
  00670	89 95 dd fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+37], edx

; 1500 : 		RegisterServer.dwServerRule=m_pGameServiceOption->dwServerRule&(SR_ALLOW_AVERT_CHEAT_MODE | SR_SUPORT_TYPE_PC | SR_SUPORT_TYPE_MOBILE);

  00676	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00679	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0067c	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0067f	81 e2 40 00 00
	03		 and	 edx, 50331712		; 03000040H
  00685	89 95 e3 fd ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+43], edx

; 1501 : 		RegisterServer.wTableCount = m_pGameServiceOption->wTableCount;

  0068b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0068e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00691	66 8b 51 46	 mov	 dx, WORD PTR [ecx+70]
  00695	66 89 95 e1 fd
	ff ff		 mov	 WORD PTR _RegisterServer$6[ebp+41], dx

; 1502 : 		RegisterServer.dwSetPlayerCount = m_pGameServiceOption->dwSetPlayerCount;

  0069c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0069f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  006a2	8b 91 cc 00 00
	00		 mov	 edx, DWORD PTR [ecx+204]
  006a8	89 95 27 fe ff
	ff		 mov	 DWORD PTR _RegisterServer$6[ebp+111], edx

; 1503 : 
; 1504 : 		lstrcpyn(RegisterServer.szServerName,m_pGameServiceOption->szServerName,CountArray(RegisterServer.szServerName));

  006ae	6a 20		 push	 32			; 00000020H
  006b0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006b3	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  006b6	83 c1 50	 add	 ecx, 80			; 00000050H
  006b9	51		 push	 ecx
  006ba	8d 95 07 fe ff
	ff		 lea	 edx, DWORD PTR _RegisterServer$6[ebp+79]
  006c0	52		 push	 edx
  006c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1505 : 		lstrcpyn(RegisterServer.szServerAddr,m_pInitParameter->m_ServiceAddress.szAddress,CountArray(RegisterServer.szServerAddr));

  006c7	6a 20		 push	 32			; 00000020H
  006c9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006cc	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  006cf	83 c1 70	 add	 ecx, 112		; 00000070H
  006d2	51		 push	 ecx
  006d3	8d 95 e7 fd ff
	ff		 lea	 edx, DWORD PTR _RegisterServer$6[ebp+47]
  006d9	52		 push	 edx
  006da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1506 : 		lstrcpyn(RegisterServer.szGameInfomation, m_pGameServiceOption->szGameInfomation, CountArray(RegisterServer.szGameInfomation));

  006e0	6a 20		 push	 32			; 00000020H
  006e2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006e5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  006e8	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  006ee	51		 push	 ecx
  006ef	8d 95 2b fe ff
	ff		 lea	 edx, DWORD PTR _RegisterServer$6[ebp+115]
  006f5	52		 push	 edx
  006f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1507 : 
; 1508 : 		//发送数据
; 1509 : 		ASSERT(m_pITCPSocketService!=NULL);

  006fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006ff	83 b8 b0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147376], 0
  00706	75 1c		 jne	 SHORT $LN28@OnEventTCP
  00708	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z@4JA
  0070e	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00714	51		 push	 ecx
  00715	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0071a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0071f	85 c0		 test	 eax, eax
  00721	74 01		 je	 SHORT $LN28@OnEventTCP
  00723	cc		 int	 3
$LN28@OnEventTCP:

; 1510 : 		if (m_pPrsnlRmITCPSocketService)

  00724	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00727	83 b8 c0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147392], 0
  0072e	74 29		 je	 SHORT $LN17@OnEventTCP

; 1511 : 		{
; 1512 : 			m_pPrsnlRmITCPSocketService->SendData(MDM_CS_REGISTER,SUB_CS_C_REGISTER_SERVER,&RegisterServer,sizeof(RegisterServer));

  00730	68 93 00 00 00	 push	 147			; 00000093H
  00735	8d 85 b8 fd ff
	ff		 lea	 eax, DWORD PTR _RegisterServer$6[ebp]
  0073b	50		 push	 eax
  0073c	6a 65		 push	 101			; 00000065H
  0073e	6a 01		 push	 1
  00740	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00743	8b 91 c0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147392]
  00749	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0074c	8b 12		 mov	 edx, DWORD PTR [edx]
  0074e	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  00754	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00757	ff d0		 call	 eax
$LN17@OnEventTCP:

; 1513 : 		}
; 1514 : 
; 1515 : 
; 1516 : 		//如果是约战房发送创建房间限制
; 1517 : 		if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00759	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0075c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0075f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00763	83 fa 10	 cmp	 edx, 16			; 00000010H
  00766	75 51		 jne	 SHORT $LN18@OnEventTCP

; 1518 : 		{
; 1519 : 			CMD_CS_S_RegisterPersonal  RegisterPersonal;
; 1520 : 			RegisterPersonal.dwKindID = m_pGameServiceOption->wKindID;

  00768	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0076b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0076e	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00771	89 95 ac fd ff
	ff		 mov	 DWORD PTR _RegisterPersonal$4[ebp], edx

; 1521 : 			RegisterPersonal.dwMaxCreate = m_PersonalRoomOption.wCanCreateCount;

  00777	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0077a	0f b7 88 9b 00
	00 00		 movzx	 ecx, WORD PTR [eax+155]
  00781	89 8d b0 fd ff
	ff		 mov	 DWORD PTR _RegisterPersonal$4[ebp+4], ecx

; 1522 : 			if (m_pPrsnlRmITCPSocketService)

  00787	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0078a	83 b8 c0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147392], 0
  00791	74 26		 je	 SHORT $LN18@OnEventTCP

; 1523 : 			{
; 1524 : 				m_pPrsnlRmITCPSocketService->SendData(MDM_CS_REGISTER, SUB_CS_C_REGISTER_PERSONAL, &RegisterPersonal, sizeof(RegisterPersonal));

  00793	6a 08		 push	 8
  00795	8d 85 ac fd ff
	ff		 lea	 eax, DWORD PTR _RegisterPersonal$4[ebp]
  0079b	50		 push	 eax
  0079c	6a 68		 push	 104			; 00000068H
  0079e	6a 01		 push	 1
  007a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a3	8b 91 c0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147392]
  007a9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007ac	8b 12		 mov	 edx, DWORD PTR [edx]
  007ae	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  007b4	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  007b7	ff d0		 call	 eax
$LN18@OnEventTCP:

; 1525 : 			}	
; 1526 : 		}
; 1527 : 
; 1528 : 		//是否使用金币库
; 1529 : 		bool bIsTreasureDB = false;

  007b9	c6 85 ab fd ff
	ff 00		 mov	 BYTE PTR _bIsTreasureDB$3[ebp], 0

; 1530 : 		if (lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0)

  007c0	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  007c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007c8	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  007cb	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  007d1	51		 push	 ecx
  007d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  007d8	85 c0		 test	 eax, eax
  007da	75 07		 jne	 SHORT $LN20@OnEventTCP

; 1531 : 		{
; 1532 : 			bIsTreasureDB = true;

  007dc	c6 85 ab fd ff
	ff 01		 mov	 BYTE PTR _bIsTreasureDB$3[ebp], 1
$LN20@OnEventTCP:

; 1533 : 		}
; 1534 : 
; 1535 : 		//桌子状态
; 1536 : 		for (WORD i=0;i<m_TableFrameArray.GetCount();i++)

  007e3	33 c0		 xor	 eax, eax
  007e5	66 89 85 a4 fd
	ff ff		 mov	 WORD PTR _i$2[ebp], ax
  007ec	eb 12		 jmp	 SHORT $LN7@OnEventTCP
$LN5@OnEventTCP:
  007ee	66 8b 85 a4 fd
	ff ff		 mov	 ax, WORD PTR _i$2[ebp]
  007f5	66 83 c0 01	 add	 ax, 1
  007f9	66 89 85 a4 fd
	ff ff		 mov	 WORD PTR _i$2[ebp], ax
$LN7@OnEventTCP:
  00800	0f b7 b5 a4 fd
	ff ff		 movzx	 esi, WORD PTR _i$2[ebp]
  00807	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0080a	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00810	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00815	3b f0		 cmp	 esi, eax
  00817	7d 60		 jge	 SHORT $LN9@OnEventTCP

; 1537 : 		{
; 1538 : 			CTableFrame * pTableFrame=m_TableFrameArray[i];

  00819	0f b7 85 a4 fd
	ff ff		 movzx	 eax, WORD PTR _i$2[ebp]
  00820	50		 push	 eax
  00821	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00824	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0082a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0082f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00831	89 8d a0 fd ff
	ff		 mov	 DWORD PTR _pTableFrame$1[ebp], ecx

; 1539 : 			//如果使用的是金币数据库
; 1540 : 			if (bIsTreasureDB)

  00837	0f b6 85 ab fd
	ff ff		 movzx	 eax, BYTE PTR _bIsTreasureDB$3[ebp]
  0083e	85 c0		 test	 eax, eax
  00840	74 1a		 je	 SHORT $LN21@OnEventTCP

; 1541 : 			{
; 1542 : 				pTableFrame->SetDataBaseMode(0);

  00842	6a 00		 push	 0
  00844	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$1[ebp]
  0084a	8b 10		 mov	 edx, DWORD PTR [eax]
  0084c	8b 8d a0 fd ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  00852	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  00858	ff d0		 call	 eax

; 1543 : 			}
; 1544 : 			else

  0085a	eb 18		 jmp	 SHORT $LN22@OnEventTCP
$LN21@OnEventTCP:

; 1545 : 			{
; 1546 : 				pTableFrame->SetDataBaseMode(1);

  0085c	6a 01		 push	 1
  0085e	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$1[ebp]
  00864	8b 10		 mov	 edx, DWORD PTR [eax]
  00866	8b 8d a0 fd ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$1[ebp]
  0086c	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  00872	ff d0		 call	 eax
$LN22@OnEventTCP:

; 1547 : 			}
; 1548 : 
; 1549 : 		}

  00874	e9 75 ff ff ff	 jmp	 $LN5@OnEventTCP
$LN9@OnEventTCP:

; 1550 : 	}
; 1551 : 
; 1552 : 	return true;

  00879	b0 01		 mov	 al, 1
$LN1@OnEventTCP:

; 1553 : }

  0087b	5f		 pop	 edi
  0087c	5e		 pop	 esi
  0087d	5b		 pop	 ebx
  0087e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00881	33 cd		 xor	 ecx, ebp
  00883	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00888	8b e5		 mov	 esp, ebp
  0088a	5d		 pop	 ebp
  0088b	c2 08 00	 ret	 8
?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketLink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z
_TEXT	SEGMENT
tv420 = -96						; size = 4
tv391 = -96						; size = 4
tv65 = -96						; size = 4
_pCreateSuccess$1 = -28					; size = 4
_pIServerUserItem$2 = -24				; size = 4
_pBindParameter$3 = -20					; size = 4
_pIServerUserItem$4 = -16				; size = 4
_pBindParameter$5 = -12					; size = 4
_pPersonalRoomOption$6 = -8				; size = 4
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_dwContextID$ = 12					; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z PROC ; CAttemperEngineSink::OnEventDataBase, COMDAT
; _this$ = ecx

; 1056 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1057 : 	switch (wRequestID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  00010	89 45 a0	 mov	 DWORD PTR tv65[ebp], eax
  00013	81 7d a0 90 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 400 ; 00000190H
  0001a	7f 34		 jg	 SHORT $LN63@OnEventDat
  0001c	81 7d a0 90 01
	00 00		 cmp	 DWORD PTR tv65[ebp], 400 ; 00000190H
  00023	0f 84 cc 02 00
	00		 je	 $LN22@OnEventDat
  00029	8b 4d a0	 mov	 ecx, DWORD PTR tv65[ebp]
  0002c	83 e9 64	 sub	 ecx, 100		; 00000064H
  0002f	89 4d a0	 mov	 DWORD PTR tv65[ebp], ecx
  00032	81 7d a0 cc 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 204 ; 000000ccH
  00039	0f 87 3b 06 00
	00		 ja	 $LN2@OnEventDat
  0003f	8b 55 a0	 mov	 edx, DWORD PTR tv65[ebp]
  00042	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN72@OnEventDat[edx]
  00049	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN75@OnEventDat[eax*4]
$LN63@OnEventDat:
  00050	81 7d a0 8f 03
	00 00		 cmp	 DWORD PTR tv65[ebp], 911 ; 0000038fH
  00057	7f 37		 jg	 SHORT $LN64@OnEventDat
  00059	81 7d a0 8f 03
	00 00		 cmp	 DWORD PTR tv65[ebp], 911 ; 0000038fH
  00060	0f 84 63 04 00
	00		 je	 $LN40@OnEventDat
  00066	8b 4d a0	 mov	 ecx, DWORD PTR tv65[ebp]
  00069	81 e9 58 02 00
	00		 sub	 ecx, 600		; 00000258H
  0006f	89 4d a0	 mov	 DWORD PTR tv65[ebp], ecx
  00072	81 7d a0 de 00
	00 00		 cmp	 DWORD PTR tv65[ebp], 222 ; 000000deH
  00079	0f 87 fb 05 00
	00		 ja	 $LN2@OnEventDat
  0007f	8b 55 a0	 mov	 edx, DWORD PTR tv65[ebp]
  00082	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN73@OnEventDat[edx]
  00089	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN76@OnEventDat[eax*4]
$LN64@OnEventDat:
  00090	81 7d a0 98 03
	00 00		 cmp	 DWORD PTR tv65[ebp], 920 ; 00000398H
  00097	7f 2d		 jg	 SHORT $LN65@OnEventDat
  00099	81 7d a0 98 03
	00 00		 cmp	 DWORD PTR tv65[ebp], 920 ; 00000398H
  000a0	0f 84 3d 04 00
	00		 je	 $LN41@OnEventDat
  000a6	8b 4d a0	 mov	 ecx, DWORD PTR tv65[ebp]
  000a9	81 e9 90 03 00
	00		 sub	 ecx, 912		; 00000390H
  000af	89 4d a0	 mov	 DWORD PTR tv65[ebp], ecx
  000b2	83 7d a0 04	 cmp	 DWORD PTR tv65[ebp], 4
  000b6	0f 87 be 05 00
	00		 ja	 $LN2@OnEventDat
  000bc	8b 55 a0	 mov	 edx, DWORD PTR tv65[ebp]
  000bf	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN77@OnEventDat[edx*4]
$LN65@OnEventDat:
  000c6	81 7d a0 4c 04
	00 00		 cmp	 DWORD PTR tv65[ebp], 1100 ; 0000044cH
  000cd	7f 2c		 jg	 SHORT $LN66@OnEventDat
  000cf	81 7d a0 4c 04
	00 00		 cmp	 DWORD PTR tv65[ebp], 1100 ; 0000044cH
  000d6	0f 84 e9 02 00
	00		 je	 $LN30@OnEventDat
  000dc	81 7d a0 e8 03
	00 00		 cmp	 DWORD PTR tv65[ebp], 1000 ; 000003e8H
  000e3	0f 84 74 02 00
	00		 je	 $LN26@OnEventDat
  000e9	81 7d a0 e9 03
	00 00		 cmp	 DWORD PTR tv65[ebp], 1001 ; 000003e9H
  000f0	0f 84 81 02 00
	00		 je	 $LN27@OnEventDat
  000f6	e9 7f 05 00 00	 jmp	 $LN2@OnEventDat
$LN66@OnEventDat:
  000fb	8b 45 a0	 mov	 eax, DWORD PTR tv65[ebp]
  000fe	2d b1 04 00 00	 sub	 eax, 1201		; 000004b1H
  00103	89 45 a0	 mov	 DWORD PTR tv65[ebp], eax
  00106	83 7d a0 6a	 cmp	 DWORD PTR tv65[ebp], 106 ; 0000006aH
  0010a	0f 87 6a 05 00
	00		 ja	 $LN2@OnEventDat
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv65[ebp]
  00113	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN74@OnEventDat[ecx]
  0011a	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN78@OnEventDat[edx*4]
$LN4@OnEventDat:

; 1058 : 	{
; 1059 : 	case DBO_GR_LOGON_SUCCESS:			//登录成功
; 1060 : 		{
; 1061 : 			return OnDBLogonSuccess(dwContextID,pData,wDataSize);

  00121	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00125	50		 push	 eax
  00126	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00129	51		 push	 ecx
  0012a	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0012d	52		 push	 edx
  0012e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00131	e8 00 00 00 00	 call	 ?OnDBLogonSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBLogonSuccess
  00136	e9 d3 06 00 00	 jmp	 $LN1@OnEventDat
$LN5@OnEventDat:

; 1062 : 		}
; 1063 : 	case DBO_GR_LOGON_FAILURE:			//登录失败
; 1064 : 		{
; 1065 : 			return OnDBLogonFailure(dwContextID,pData,wDataSize);

  0013b	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0013f	50		 push	 eax
  00140	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00143	51		 push	 ecx
  00144	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00147	52		 push	 edx
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	e8 00 00 00 00	 call	 ?OnDBLogonFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBLogonFailure
  00150	e9 b9 06 00 00	 jmp	 $LN1@OnEventDat
$LN6@OnEventDat:

; 1066 : 		}
; 1067 : 	case DBO_GR_GAME_PARAMETER:			//游戏参数
; 1068 : 		{
; 1069 : 			return OnDBGameParameter(dwContextID,pData,wDataSize);

  00155	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00161	52		 push	 edx
  00162	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	e8 00 00 00 00	 call	 ?OnDBGameParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameParameter
  0016a	e9 9f 06 00 00	 jmp	 $LN1@OnEventDat
$LN7@OnEventDat:

; 1070 : 		}
; 1071 : 	case DBO_GR_GAME_COLUMN_INFO:		//列表信息
; 1072 : 		{
; 1073 : 			return OnDBGameColumnInfo(dwContextID,pData,wDataSize);

  0016f	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00173	50		 push	 eax
  00174	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00177	51		 push	 ecx
  00178	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0017b	52		 push	 edx
  0017c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	e8 00 00 00 00	 call	 ?OnDBGameColumnInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameColumnInfo
  00184	e9 85 06 00 00	 jmp	 $LN1@OnEventDat
$LN8@OnEventDat:

; 1074 : 		}
; 1075 : 	case DBO_GR_GAME_ANDROID_PARAMETER:	//机器参数
; 1076 : 		{
; 1077 : 			return OnDBGameAndroidParameter(dwContextID,pData,wDataSize);

  00189	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0018d	50		 push	 eax
  0018e	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00191	51		 push	 ecx
  00192	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00195	52		 push	 edx
  00196	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00199	e8 00 00 00 00	 call	 ?OnDBGameAndroidParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameAndroidParameter
  0019e	e9 6b 06 00 00	 jmp	 $LN1@OnEventDat
$LN9@OnEventDat:

; 1078 : 		}
; 1079 : 	case DBO_GR_GAME_ANDROID_INFO:		//机器信息
; 1080 : 		{
; 1081 : 			return OnDBGameAndroidInfo(dwContextID,pData,wDataSize);

  001a3	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001a7	50		 push	 eax
  001a8	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  001ab	51		 push	 ecx
  001ac	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  001af	52		 push	 edx
  001b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b3	e8 00 00 00 00	 call	 ?OnDBGameAndroidInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameAndroidInfo
  001b8	e9 51 06 00 00	 jmp	 $LN1@OnEventDat
$LN10@OnEventDat:

; 1082 : 		}
; 1083 : 
; 1084 : 	case DBO_GR_GAME_PROPERTY_BUFF:		//道具Buff
; 1085 : 		{
; 1086 : 			return OnDBGamePropertyBuff(dwContextID,pData,wDataSize);

  001bd	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001c1	50		 push	 eax
  001c2	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  001c5	51		 push	 ecx
  001c6	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  001c9	52		 push	 edx
  001ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	e8 00 00 00 00	 call	 ?OnDBGamePropertyBuff@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGamePropertyBuff
  001d2	e9 37 06 00 00	 jmp	 $LN1@OnEventDat
$LN11@OnEventDat:

; 1087 : 		}
; 1088 : 	case DBO_GR_LOAD_TRUMPET:			//喇叭信息
; 1089 : 		{
; 1090 : 			return OnDBGameLoadTrumpet(dwContextID,pData,wDataSize);

  001d7	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001db	50		 push	 eax
  001dc	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  001df	51		 push	 ecx
  001e0	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  001e3	52		 push	 edx
  001e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e7	e8 00 00 00 00	 call	 ?OnDBGameLoadTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameLoadTrumpet
  001ec	e9 1d 06 00 00	 jmp	 $LN1@OnEventDat
$LN12@OnEventDat:

; 1091 : 		}
; 1092 : 	case DBO_GR_SEND_TRUMPET:			//使用喇叭
; 1093 : 		{
; 1094 : 			return	OnDBGameSendTrumpet(dwContextID,pData,wDataSize);

  001f1	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001f5	50		 push	 eax
  001f6	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  001f9	51		 push	 ecx
  001fa	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  001fd	52		 push	 edx
  001fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00201	e8 00 00 00 00	 call	 ?OnDBGameSendTrumpet@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameSendTrumpet
  00206	e9 03 06 00 00	 jmp	 $LN1@OnEventDat
$LN13@OnEventDat:

; 1095 : 		}
; 1096 : 	case DBO_GR_GAME_MEMBER_PAREMETER:  //会员参数
; 1097 : 		{
; 1098 : 			return OnDBGameMemberParameter(dwContextID,pData,wDataSize);

  0020b	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00213	51		 push	 ecx
  00214	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00217	52		 push	 edx
  00218	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021b	e8 00 00 00 00	 call	 ?OnDBGameMemberParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGameMemberParameter
  00220	e9 e9 05 00 00	 jmp	 $LN1@OnEventDat
$LN14@OnEventDat:

; 1099 : 		}
; 1100 : 	case DBO_GR_MEMBER_QUERY_INFO_RESULT://会员查询
; 1101 : 		{
; 1102 : 			return OnDBPCMemberDayQueryInfoResult(dwContextID,pData,wDataSize);

  00225	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00229	50		 push	 eax
  0022a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0022d	51		 push	 ecx
  0022e	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00231	52		 push	 edx
  00232	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00235	e8 00 00 00 00	 call	 ?OnDBPCMemberDayQueryInfoResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCMemberDayQueryInfoResult
  0023a	e9 cf 05 00 00	 jmp	 $LN1@OnEventDat
$LN15@OnEventDat:

; 1103 : 		}
; 1104 : 	case DBO_GR_MEMBER_DAY_PRESENT_RESULT://会员送金
; 1105 : 		{
; 1106 : 			return OnDBPCMemberDayPresentResult(dwContextID,pData,wDataSize);

  0023f	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00243	50		 push	 eax
  00244	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00247	51		 push	 ecx
  00248	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0024b	52		 push	 edx
  0024c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024f	e8 00 00 00 00	 call	 ?OnDBPCMemberDayPresentResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCMemberDayPresentResult
  00254	e9 b5 05 00 00	 jmp	 $LN1@OnEventDat
$LN16@OnEventDat:

; 1107 : 		}
; 1108 : 	case DBO_GR_MEMBER_DAY_GIFT_RESULT://会员礼包
; 1109 : 		{
; 1110 : 			return OnDBPCMemberDayGiftResult(dwContextID,pData,wDataSize);

  00259	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0025d	50		 push	 eax
  0025e	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00261	51		 push	 ecx
  00262	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00265	52		 push	 edx
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	e8 00 00 00 00	 call	 ?OnDBPCMemberDayGiftResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCMemberDayGiftResult
  0026e	e9 9b 05 00 00	 jmp	 $LN1@OnEventDat
$LN17@OnEventDat:

; 1111 : 		}
; 1112 : 	case DBO_GR_USER_INSURE_INFO:		//银行信息
; 1113 : 		{
; 1114 : 			return OnDBUserInsureInfo(dwContextID,pData,wDataSize);

  00273	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00277	50		 push	 eax
  00278	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0027b	51		 push	 ecx
  0027c	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0027f	52		 push	 edx
  00280	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	e8 00 00 00 00	 call	 ?OnDBUserInsureInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureInfo
  00288	e9 81 05 00 00	 jmp	 $LN1@OnEventDat
$LN18@OnEventDat:

; 1115 : 		}
; 1116 : 	case DBO_GR_USER_INSURE_SUCCESS:	//银行成功
; 1117 : 		{
; 1118 : 			return OnDBUserInsureSuccess(dwContextID,pData,wDataSize);

  0028d	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00291	50		 push	 eax
  00292	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00295	51		 push	 ecx
  00296	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00299	52		 push	 edx
  0029a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029d	e8 00 00 00 00	 call	 ?OnDBUserInsureSuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureSuccess
  002a2	e9 67 05 00 00	 jmp	 $LN1@OnEventDat
$LN19@OnEventDat:

; 1119 : 		}
; 1120 : 	case DBO_GR_USER_INSURE_FAILURE:	//银行失败
; 1121 : 		{
; 1122 : 			return OnDBUserInsureFailure(dwContextID,pData,wDataSize);

  002a7	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002ab	50		 push	 eax
  002ac	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  002af	51		 push	 ecx
  002b0	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  002b3	52		 push	 edx
  002b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b7	e8 00 00 00 00	 call	 ?OnDBUserInsureFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureFailure
  002bc	e9 4d 05 00 00	 jmp	 $LN1@OnEventDat
$LN20@OnEventDat:

; 1123 : 		}
; 1124 : 	case DBO_GR_USER_INSURE_USER_INFO:  //用户信息
; 1125 : 		{
; 1126 : 			return OnDBUserInsureUserInfo(dwContextID,pData,wDataSize);

  002c1	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002c5	50		 push	 eax
  002c6	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  002c9	51		 push	 ecx
  002ca	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  002cd	52		 push	 edx
  002ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d1	e8 00 00 00 00	 call	 ?OnDBUserInsureUserInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureUserInfo
  002d6	e9 33 05 00 00	 jmp	 $LN1@OnEventDat
$LN21@OnEventDat:

; 1127 : 		}
; 1128 : 	case DBO_GR_USER_INSURE_ENABLE_RESULT: //开通结果
; 1129 : 		{
; 1130 : 			return OnDBUserInsureEnableResult(dwContextID,pData,wDataSize);

  002db	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002df	50		 push	 eax
  002e0	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  002e3	51		 push	 ecx
  002e4	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  002e7	52		 push	 edx
  002e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002eb	e8 00 00 00 00	 call	 ?OnDBUserInsureEnableResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserInsureEnableResult
  002f0	e9 19 05 00 00	 jmp	 $LN1@OnEventDat
$LN22@OnEventDat:

; 1131 : 		}
; 1132 : 	case DBO_GR_PROPERTY_SUCCESS:		//道具成功
; 1133 : 		{
; 1134 : 			return OnDBPropertySuccess(dwContextID,pData,wDataSize);

  002f5	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002f9	50		 push	 eax
  002fa	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  002fd	51		 push	 ecx
  002fe	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00301	52		 push	 edx
  00302	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00305	e8 00 00 00 00	 call	 ?OnDBPropertySuccess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPropertySuccess
  0030a	e9 ff 04 00 00	 jmp	 $LN1@OnEventDat
$LN23@OnEventDat:

; 1135 : 		}	
; 1136 : 	case DBO_GR_SYSTEM_MESSAGE_RESULT:  //系统消息
; 1137 : 		{
; 1138 : 			return OnDBSystemMessage(dwContextID, pData, wDataSize);

  0030f	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00313	50		 push	 eax
  00314	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00317	51		 push	 ecx
  00318	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0031b	52		 push	 edx
  0031c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0031f	e8 00 00 00 00	 call	 ?OnDBSystemMessage@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBSystemMessage
  00324	e9 e5 04 00 00	 jmp	 $LN1@OnEventDat
$LN24@OnEventDat:

; 1139 : 		}
; 1140 : 	case DBO_GR_SYSTEM_MESSAGE_FINISH:	//加载完成
; 1141 : 	{
; 1142 : 		return OnDBSystemMessageFinish(dwContextID, pData, wDataSize);

  00329	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0032d	50		 push	 eax
  0032e	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00331	51		 push	 ecx
  00332	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00335	52		 push	 edx
  00336	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00339	e8 00 00 00 00	 call	 ?OnDBSystemMessageFinish@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBSystemMessageFinish
  0033e	e9 cb 04 00 00	 jmp	 $LN1@OnEventDat
$LN25@OnEventDat:

; 1143 : 	}
; 1144 : 	case DBO_GR_SENSITIVE_WORDS:		//加载敏感词
; 1145 : 		{
; 1146 : 			return OnDBSensitiveWords(dwContextID,pData,wDataSize);

  00343	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00347	50		 push	 eax
  00348	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0034b	51		 push	 ecx
  0034c	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0034f	52		 push	 edx
  00350	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?OnDBSensitiveWords@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBSensitiveWords
  00358	e9 b1 04 00 00	 jmp	 $LN1@OnEventDat
$LN26@OnEventDat:

; 1147 : 		}
; 1148 : 	case DBO_GR_CHECKIN_INFO:			//签到信息
; 1149 : 		{
; 1150 : 			return OnDBPCUserCheckInInfo(dwContextID,pData,wDataSize);

  0035d	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00361	50		 push	 eax
  00362	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00365	51		 push	 ecx
  00366	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00369	52		 push	 edx
  0036a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036d	e8 00 00 00 00	 call	 ?OnDBPCUserCheckInInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCUserCheckInInfo
  00372	e9 97 04 00 00	 jmp	 $LN1@OnEventDat
$LN27@OnEventDat:

; 1151 : 		}
; 1152 : 	case DBO_GR_CHECKIN_RESULT:			//签到结果
; 1153 : 		{
; 1154 : 			return OnDBPCUserCheckInResult(dwContextID,pData,wDataSize);

  00377	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0037b	50		 push	 eax
  0037c	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0037f	51		 push	 ecx
  00380	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00383	52		 push	 edx
  00384	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00387	e8 00 00 00 00	 call	 ?OnDBPCUserCheckInResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCUserCheckInResult
  0038c	e9 7d 04 00 00	 jmp	 $LN1@OnEventDat
$LN28@OnEventDat:

; 1155 : 		}
; 1156 : 	case DBO_GR_CHECKIN_REWARD:			//签到奖励
; 1157 : 		{
; 1158 : 			return OnDBPCCheckInReward(dwContextID,pData,wDataSize);

  00391	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00395	50		 push	 eax
  00396	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00399	51		 push	 ecx
  0039a	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0039d	52		 push	 edx
  0039e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a1	e8 00 00 00 00	 call	 ?OnDBPCCheckInReward@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCCheckInReward
  003a6	e9 63 04 00 00	 jmp	 $LN1@OnEventDat
$LN29@OnEventDat:

; 1159 : 		}
; 1160 : 	case DBO_GR_BASEENSURE_PARAMETER:	//低保参数
; 1161 : 		{
; 1162 : 			return OnDBPCBaseEnsureParameter(dwContextID,pData,wDataSize);

  003ab	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003af	50		 push	 eax
  003b0	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  003b3	51		 push	 ecx
  003b4	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  003b7	52		 push	 edx
  003b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003bb	e8 00 00 00 00	 call	 ?OnDBPCBaseEnsureParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCBaseEnsureParameter
  003c0	e9 49 04 00 00	 jmp	 $LN1@OnEventDat
$LN30@OnEventDat:

; 1163 : 		}
; 1164 : 	case DBO_GR_BASEENSURE_RESULT:		//低保结果
; 1165 : 		{
; 1166 : 			return OnDBPCBaseEnsureResult(dwContextID,pData,wDataSize);

  003c5	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003c9	50		 push	 eax
  003ca	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  003cd	51		 push	 ecx
  003ce	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  003d1	52		 push	 edx
  003d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d5	e8 00 00 00 00	 call	 ?OnDBPCBaseEnsureResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCBaseEnsureResult
  003da	e9 2f 04 00 00	 jmp	 $LN1@OnEventDat
$LN31@OnEventDat:

; 1167 : 		}
; 1168 : 	case DBO_GR_TASK_LIST:				//任务列表
; 1169 : 		{
; 1170 : 			return OnDBUserTaskList(dwContextID,pData,wDataSize);

  003df	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003e3	50		 push	 eax
  003e4	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  003e7	51		 push	 ecx
  003e8	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  003eb	52		 push	 edx
  003ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003ef	e8 00 00 00 00	 call	 ?OnDBUserTaskList@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskList
  003f4	e9 15 04 00 00	 jmp	 $LN1@OnEventDat
$LN32@OnEventDat:

; 1171 : 		}
; 1172 : 	case DBO_GR_TASK_LIST_END:			//任务结束
; 1173 : 		{
; 1174 : 			return OnDBUserTaskListEnd(dwContextID,pData,wDataSize);

  003f9	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003fd	50		 push	 eax
  003fe	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00401	51		 push	 ecx
  00402	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00405	52		 push	 edx
  00406	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00409	e8 00 00 00 00	 call	 ?OnDBUserTaskListEnd@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskListEnd
  0040e	e9 fb 03 00 00	 jmp	 $LN1@OnEventDat
$LN33@OnEventDat:

; 1175 : 		}
; 1176 : 	case DBO_GR_TASK_INFO:				//任务信息
; 1177 : 		{
; 1178 : 			return OnDBUserTaskInfo(dwContextID,pData,wDataSize);

  00413	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00417	50		 push	 eax
  00418	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0041b	51		 push	 ecx
  0041c	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0041f	52		 push	 edx
  00420	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00423	e8 00 00 00 00	 call	 ?OnDBUserTaskInfo@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskInfo
  00428	e9 e1 03 00 00	 jmp	 $LN1@OnEventDat
$LN34@OnEventDat:

; 1179 : 		}
; 1180 : 	case DBO_GR_TASK_RESULT:			//任务结果
; 1181 : 		{
; 1182 : 			return OnDBUserTaskResult(dwContextID,pData,wDataSize);

  0042d	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00431	50		 push	 eax
  00432	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00435	51		 push	 ecx
  00436	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00439	52		 push	 edx
  0043a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043d	e8 00 00 00 00	 call	 ?OnDBUserTaskResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBUserTaskResult
  00442	e9 c7 03 00 00	 jmp	 $LN1@OnEventDat
$LN35@OnEventDat:

; 1183 : 		}
; 1184 : 	case DBO_GR_PURCHASE_RESULT:		//购买结果
; 1185 : 		{
; 1186 : 			return OnDBPurchaseResult(dwContextID,pData,wDataSize);

  00447	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0044b	50		 push	 eax
  0044c	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0044f	51		 push	 ecx
  00450	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00453	52		 push	 edx
  00454	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00457	e8 00 00 00 00	 call	 ?OnDBPurchaseResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPurchaseResult
  0045c	e9 ad 03 00 00	 jmp	 $LN1@OnEventDat
$LN36@OnEventDat:

; 1187 : 		}
; 1188 : 	case DBO_GR_EXCHANGE_RESULT:		//兑换结果
; 1189 : 		{
; 1190 : 			return OnDBExChangeResult(dwContextID,pData,wDataSize);

  00461	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00465	50		 push	 eax
  00466	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00469	51		 push	 ecx
  0046a	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0046d	52		 push	 edx
  0046e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00471	e8 00 00 00 00	 call	 ?OnDBExChangeResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBExChangeResult
  00476	e9 93 03 00 00	 jmp	 $LN1@OnEventDat
$LN37@OnEventDat:

; 1191 : 		}
; 1192 : 	case DBO_GR_GROWLEVEL_CONFIG:		//等级配置
; 1193 : 		{
; 1194 : 			return OnDBPCGrowLevelConfig(dwContextID,pData,wDataSize);

  0047b	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0047f	50		 push	 eax
  00480	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00483	51		 push	 ecx
  00484	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00487	52		 push	 edx
  00488	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0048b	e8 00 00 00 00	 call	 ?OnDBPCGrowLevelConfig@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCGrowLevelConfig
  00490	e9 79 03 00 00	 jmp	 $LN1@OnEventDat
$LN38@OnEventDat:

; 1195 : 		}
; 1196 : 	case DBO_GR_GROWLEVEL_PARAMETER:	//等级参数
; 1197 : 		{
; 1198 : 			return OnDBPCGrowLevelParameter(dwContextID,pData,wDataSize);

  00495	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00499	50		 push	 eax
  0049a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0049d	51		 push	 ecx
  0049e	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  004a1	52		 push	 edx
  004a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004a5	e8 00 00 00 00	 call	 ?OnDBPCGrowLevelParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCGrowLevelParameter
  004aa	e9 5f 03 00 00	 jmp	 $LN1@OnEventDat
$LN39@OnEventDat:

; 1199 : 		}
; 1200 : 	case DBO_GR_GROWLEVEL_UPGRADE:		//等级升级
; 1201 : 		{
; 1202 : 			return OnDBPCGrowLevelUpgrade(dwContextID,pData,wDataSize);

  004af	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004b3	50		 push	 eax
  004b4	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  004b7	51		 push	 ecx
  004b8	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  004bb	52		 push	 edx
  004bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004bf	e8 00 00 00 00	 call	 ?OnDBPCGrowLevelUpgrade@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPCGrowLevelUpgrade
  004c4	e9 45 03 00 00	 jmp	 $LN1@OnEventDat
$LN40@OnEventDat:

; 1203 : 		}
; 1204 : 	case DBO_GR_GAME_PROPERTY_BUY:		//购买结果
; 1205 : 		{
; 1206 : 			return OnDBGamePropertyBuy(dwContextID,pData,wDataSize);

  004c9	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004cd	50		 push	 eax
  004ce	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  004d1	51		 push	 ecx
  004d2	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  004d5	52		 push	 edx
  004d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004d9	e8 00 00 00 00	 call	 ?OnDBGamePropertyBuy@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBGamePropertyBuy
  004de	e9 2b 03 00 00	 jmp	 $LN1@OnEventDat
$LN41@OnEventDat:

; 1207 : 		}
; 1208 : 	case DBO_GR_GAME_PROPERTY_FAILURE:		//道具失败
; 1209 : 		{
; 1210 : 			return OnDBPropertyFailure(dwContextID,pData,wDataSize);

  004e3	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004e7	50		 push	 eax
  004e8	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  004eb	51		 push	 ecx
  004ec	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  004ef	52		 push	 edx
  004f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004f3	e8 00 00 00 00	 call	 ?OnDBPropertyFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBPropertyFailure
  004f8	e9 11 03 00 00	 jmp	 $LN1@OnEventDat
$LN42@OnEventDat:

; 1211 : 		}
; 1212 : 	case DBO_GR_QUERY_BACKPACK:			//背包结果
; 1213 : 		{
; 1214 : 			return OnDBQueryPropertyBackpack(dwContextID,pData,wDataSize);

  004fd	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00501	50		 push	 eax
  00502	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00505	51		 push	 ecx
  00506	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00509	52		 push	 edx
  0050a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0050d	e8 00 00 00 00	 call	 ?OnDBQueryPropertyBackpack@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryPropertyBackpack
  00512	e9 f7 02 00 00	 jmp	 $LN1@OnEventDat
$LN43@OnEventDat:

; 1215 : 		}
; 1216 : 	case DBO_GR_PROPERTY_USE:			//使用结果
; 1217 : 		{
; 1218 : 			return OnDBQueryPropertyUse(dwContextID,pData,wDataSize);

  00517	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0051b	50		 push	 eax
  0051c	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0051f	51		 push	 ecx
  00520	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00523	52		 push	 edx
  00524	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00527	e8 00 00 00 00	 call	 ?OnDBQueryPropertyUse@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryPropertyUse
  0052c	e9 dd 02 00 00	 jmp	 $LN1@OnEventDat
$LN44@OnEventDat:

; 1219 : 		}
; 1220 : 	case DBO_GR_QUERY_SEND_PRESENT:		//查询赠送
; 1221 : 		{
; 1222 : 			return OnDBQuerySendPresent(dwContextID,pData,wDataSize);

  00531	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00535	50		 push	 eax
  00536	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00539	51		 push	 ecx
  0053a	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0053d	52		 push	 edx
  0053e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00541	e8 00 00 00 00	 call	 ?OnDBQuerySendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQuerySendPresent
  00546	e9 c3 02 00 00	 jmp	 $LN1@OnEventDat
$LN45@OnEventDat:

; 1223 : 		}
; 1224 : 	case DBO_GR_PROPERTY_PRESENT:		//道具赠送
; 1225 : 		{
; 1226 : 			return OnDBQueryPropertyPresent(dwContextID,pData,wDataSize);

  0054b	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0054f	50		 push	 eax
  00550	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00553	51		 push	 ecx
  00554	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00557	52		 push	 edx
  00558	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0055b	e8 00 00 00 00	 call	 ?OnDBQueryPropertyPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryPropertyPresent
  00560	e9 a9 02 00 00	 jmp	 $LN1@OnEventDat
$LN46@OnEventDat:

; 1227 : 		}
; 1228 : 	case DBO_GR_GET_SEND_PRESENT:		//获取赠送
; 1229 : 		{
; 1230 : 			return OnDBQueryGetSendPresent(dwContextID,pData,wDataSize);

  00565	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00569	50		 push	 eax
  0056a	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0056d	51		 push	 ecx
  0056e	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00571	52		 push	 edx
  00572	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00575	e8 00 00 00 00	 call	 ?OnDBQueryGetSendPresent@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBQueryGetSendPresent
  0057a	e9 8f 02 00 00	 jmp	 $LN1@OnEventDat
$LN47@OnEventDat:

; 1231 : 		}
; 1232 : 	case DBO_GR_CREATE_SUCCESS:			//创建成功
; 1233 : 		{
; 1234 : 			return OnDBCreateSucess(dwContextID,pData,wDataSize);

  0057f	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00583	50		 push	 eax
  00584	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00587	51		 push	 ecx
  00588	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0058b	52		 push	 edx
  0058c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	e8 00 00 00 00	 call	 ?OnDBCreateSucess@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCreateSucess
  00594	e9 75 02 00 00	 jmp	 $LN1@OnEventDat
$LN48@OnEventDat:

; 1235 : 		}
; 1236 : 	case DBO_GR_CREATE_FAILURE:			//创建失败
; 1237 : 		{
; 1238 : 			return OnDBCreateFailure(dwContextID,pData,wDataSize);

  00599	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0059d	50		 push	 eax
  0059e	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  005a1	51		 push	 ecx
  005a2	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  005a5	52		 push	 edx
  005a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005a9	e8 00 00 00 00	 call	 ?OnDBCreateFailure@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCreateFailure
  005ae	e9 5b 02 00 00	 jmp	 $LN1@OnEventDat
$LN49@OnEventDat:

; 1239 : 		}
; 1240 : 	case DBO_GR_CANCEL_CREATE_RESULT:		//取消创建
; 1241 : 		{
; 1242 : 			return OnDBCancelCreateTable(dwContextID,pData,wDataSize);

  005b3	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005b7	50		 push	 eax
  005b8	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  005bb	51		 push	 ecx
  005bc	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  005bf	52		 push	 edx
  005c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005c3	e8 00 00 00 00	 call	 ?OnDBCancelCreateTable@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCancelCreateTable
  005c8	e9 41 02 00 00	 jmp	 $LN1@OnEventDat
$LN50@OnEventDat:

; 1243 : 		}
; 1244 : 	case DBO_GR_LOAD_PERSONAL_ROOM_OPTION:
; 1245 : 		{
; 1246 : 			ASSERT(wDataSize == sizeof(tagPersonalRoomOption));

  005cd	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005d1	83 f8 71	 cmp	 eax, 113		; 00000071H
  005d4	74 1c		 je	 SHORT $LN62@OnEventDat
  005d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z@4JA
  005dc	81 c1 be 00 00
	00		 add	 ecx, 190		; 000000beH
  005e2	51		 push	 ecx
  005e3	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  005e8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  005ed	85 c0		 test	 eax, eax
  005ef	74 01		 je	 SHORT $LN62@OnEventDat
  005f1	cc		 int	 3
$LN62@OnEventDat:

; 1247 : 			if (sizeof(tagPersonalRoomOption)!=wDataSize) return false;

  005f2	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005f6	83 f8 71	 cmp	 eax, 113		; 00000071H
  005f9	74 07		 je	 SHORT $LN51@OnEventDat
  005fb	32 c0		 xor	 al, al
  005fd	e9 0c 02 00 00	 jmp	 $LN1@OnEventDat
$LN51@OnEventDat:

; 1248 : 			tagPersonalRoomOption * pPersonalRoomOption = (tagPersonalRoomOption *)pData;

  00602	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  00605	89 45 f8	 mov	 DWORD PTR _pPersonalRoomOption$6[ebp], eax

; 1249 : 			memcpy(&m_PersonalRoomOption, pPersonalRoomOption, sizeof(tagPersonalRoomOption) );

  00608	6a 71		 push	 113			; 00000071H
  0060a	8b 45 f8	 mov	 eax, DWORD PTR _pPersonalRoomOption$6[ebp]
  0060d	50		 push	 eax
  0060e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00611	83 c1 48	 add	 ecx, 72			; 00000048H
  00614	51		 push	 ecx
  00615	e8 00 00 00 00	 call	 _memcpy
  0061a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1250 : 
; 1251 : 			InitPersonalRoomServiceManager();

  0061d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00620	e8 00 00 00 00	 call	 ?InitPersonalRoomServiceManager@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitPersonalRoomServiceManager

; 1252 : 			return true;

  00625	b0 01		 mov	 al, 1
  00627	e9 e2 01 00 00	 jmp	 $LN1@OnEventDat
$LN52@OnEventDat:

; 1253 : 		}
; 1254 : 	case DBO_GR_LOAD_PERSONAL_PARAMETER:
; 1255 : 		{
; 1256 : 			return OnDBLoadPersonalParameter(dwContextID, pData, wDataSize);

  0062c	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00630	50		 push	 eax
  00631	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00634	51		 push	 ecx
  00635	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00638	52		 push	 edx
  00639	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0063c	e8 00 00 00 00	 call	 ?OnDBLoadPersonalParameter@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBLoadPersonalParameter
  00641	e9 c8 01 00 00	 jmp	 $LN1@OnEventDat
$LN53@OnEventDat:

; 1257 : 		}
; 1258 : 	case DBO_GR_DISSUME_TABLE_RESULTE:
; 1259 : 		{
; 1260 : 			return OnDBDissumeTableResult(dwContextID, pData, wDataSize);

  00646	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0064a	50		 push	 eax
  0064b	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0064e	51		 push	 ecx
  0064f	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00652	52		 push	 edx
  00653	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00656	e8 00 00 00 00	 call	 ?OnDBDissumeTableResult@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBDissumeTableResult
  0065b	e9 ae 01 00 00	 jmp	 $LN1@OnEventDat
$LN54@OnEventDat:

; 1261 : 		}
; 1262 : 	case DBO_GR_CURRENCE_ROOMCARD_AND_BEAN:
; 1263 : 		{
; 1264 : 			return OnDBCurrenceRoomCardAndBeant(dwContextID, pData, wDataSize);

  00660	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00664	50		 push	 eax
  00665	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00668	51		 push	 ecx
  00669	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  0066c	52		 push	 edx
  0066d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00670	e8 00 00 00 00	 call	 ?OnDBCurrenceRoomCardAndBeant@CAttemperEngineSink@@IAE_NKPAXG@Z ; CAttemperEngineSink::OnDBCurrenceRoomCardAndBeant
  00675	e9 94 01 00 00	 jmp	 $LN1@OnEventDat
$LN2@OnEventDat:

; 1265 : 		}
; 1266 : 	}
; 1267 : 
; 1268 : 	//比赛事件
; 1269 : 	if(wRequestID>=DBO_GR_MATCH_EVENT_START && wRequestID<=DBO_GR_MATCH_EVENT_END)

  0067a	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  0067e	3d f4 01 00 00	 cmp	 eax, 500		; 000001f4H
  00683	0f 8c 89 00 00
	00		 jl	 $LN55@OnEventDat
  00689	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  0068d	3d 57 02 00 00	 cmp	 eax, 599		; 00000257H
  00692	7f 7e		 jg	 SHORT $LN55@OnEventDat

; 1270 : 	{
; 1271 : 		//参数效验
; 1272 : 		if(m_pIMatchServiceManager==NULL) return false;

  00694	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00697	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  0069e	75 07		 jne	 SHORT $LN56@OnEventDat
  006a0	32 c0		 xor	 al, al
  006a2	e9 67 01 00 00	 jmp	 $LN1@OnEventDat
$LN56@OnEventDat:

; 1273 : 
; 1274 : 		//查找用户
; 1275 : 		tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  006a7	8b 45 0c	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  006aa	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  006af	50		 push	 eax
  006b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  006b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006b8	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  006bb	ff d0		 call	 eax
  006bd	89 45 f4	 mov	 DWORD PTR _pBindParameter$5[ebp], eax

; 1276 : 		IServerUserItem * pIServerUserItem=pBindParameter!=NULL?pBindParameter->pIServerUserItem:NULL;

  006c0	83 7d f4 00	 cmp	 DWORD PTR _pBindParameter$5[ebp], 0
  006c4	74 0b		 je	 SHORT $LN67@OnEventDat
  006c6	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$5[ebp]
  006c9	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  006cc	89 4d a0	 mov	 DWORD PTR tv391[ebp], ecx
  006cf	eb 07		 jmp	 SHORT $LN68@OnEventDat
$LN67@OnEventDat:
  006d1	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv391[ebp], 0
$LN68@OnEventDat:
  006d8	8b 55 a0	 mov	 edx, DWORD PTR tv391[ebp]
  006db	89 55 f0	 mov	 DWORD PTR _pIServerUserItem$4[ebp], edx

; 1277 : 
; 1278 : 		return m_pIMatchServiceManager->OnEventDataBase(wRequestID,pIServerUserItem,pData,wDataSize,dwContextID);

  006de	8b 45 0c	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  006e1	50		 push	 eax
  006e2	0f b7 4d 14	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  006e6	51		 push	 ecx
  006e7	8b 55 10	 mov	 edx, DWORD PTR _pData$[ebp]
  006ea	52		 push	 edx
  006eb	8b 45 f0	 mov	 eax, DWORD PTR _pIServerUserItem$4[ebp]
  006ee	50		 push	 eax
  006ef	0f b7 4d 08	 movzx	 ecx, WORD PTR _wRequestID$[ebp]
  006f3	51		 push	 ecx
  006f4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  006f7	8b 82 c4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147396]
  006fd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00700	8b 10		 mov	 edx, DWORD PTR [eax]
  00702	8b 89 c4 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147396]
  00708	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0070b	ff d0		 call	 eax
  0070d	e9 fc 00 00 00	 jmp	 $LN1@OnEventDat
$LN55@OnEventDat:

; 1279 : 	}
; 1280 : 
; 1281 : 	//约战（约战房）事件
; 1282 : 	if(wRequestID>=DBO_GR_CREATE_SUCCESS && wRequestID<=DBO_GR_CURRENCE_ROOMCARD_AND_BEAN)

  00712	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  00716	3d 14 05 00 00	 cmp	 eax, 1300		; 00000514H
  0071b	0f 8c eb 00 00
	00		 jl	 $LN57@OnEventDat
  00721	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  00725	3d 19 05 00 00	 cmp	 eax, 1305		; 00000519H
  0072a	0f 8f dc 00 00
	00		 jg	 $LN57@OnEventDat

; 1283 : 	{
; 1284 : 		//参数效验
; 1285 : 		if(m_pIPersonalRoomServiceManager==NULL) return false;

  00730	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00733	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  0073a	75 07		 jne	 SHORT $LN58@OnEventDat
  0073c	32 c0		 xor	 al, al
  0073e	e9 cb 00 00 00	 jmp	 $LN1@OnEventDat
$LN58@OnEventDat:

; 1286 : 
; 1287 : 		//查找用户
; 1288 : 		tagBindParameter * pBindParameter=GetBindParameter(LOWORD(dwContextID));

  00743	8b 45 0c	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  00746	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0074b	50		 push	 eax
  0074c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0074f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00751	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00754	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00757	ff d0		 call	 eax
  00759	89 45 ec	 mov	 DWORD PTR _pBindParameter$3[ebp], eax

; 1289 : 		IServerUserItem * pIServerUserItem=pBindParameter!=NULL?pBindParameter->pIServerUserItem:NULL;

  0075c	83 7d ec 00	 cmp	 DWORD PTR _pBindParameter$3[ebp], 0
  00760	74 0b		 je	 SHORT $LN69@OnEventDat
  00762	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$3[ebp]
  00765	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00768	89 4d a0	 mov	 DWORD PTR tv420[ebp], ecx
  0076b	eb 07		 jmp	 SHORT $LN70@OnEventDat
$LN69@OnEventDat:
  0076d	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv420[ebp], 0
$LN70@OnEventDat:
  00774	8b 55 a0	 mov	 edx, DWORD PTR tv420[ebp]
  00777	89 55 e8	 mov	 DWORD PTR _pIServerUserItem$2[ebp], edx

; 1290 : 
; 1291 : 		if (wRequestID==DBO_GR_CREATE_SUCCESS)

  0077a	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  0077e	3d 14 05 00 00	 cmp	 eax, 1300		; 00000514H
  00783	75 56		 jne	 SHORT $LN59@OnEventDat

; 1292 : 		{
; 1293 : 			//数据校验
; 1294 : 			ASSERT(wDataSize == sizeof(DBO_GR_CreateSuccess));

  00785	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00789	3d fc 00 00 00	 cmp	 eax, 252		; 000000fcH
  0078e	74 1c		 je	 SHORT $LN71@OnEventDat
  00790	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z@4JA
  00796	81 c1 ee 00 00
	00		 add	 ecx, 238		; 000000eeH
  0079c	51		 push	 ecx
  0079d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  007a2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  007a7	85 c0		 test	 eax, eax
  007a9	74 01		 je	 SHORT $LN71@OnEventDat
  007ab	cc		 int	 3
$LN71@OnEventDat:

; 1295 : 			if(wDataSize != sizeof(DBO_GR_CreateSuccess)) return false;

  007ac	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  007b0	3d fc 00 00 00	 cmp	 eax, 252		; 000000fcH
  007b5	74 04		 je	 SHORT $LN60@OnEventDat
  007b7	32 c0		 xor	 al, al
  007b9	eb 53		 jmp	 SHORT $LN1@OnEventDat
$LN60@OnEventDat:

; 1296 : 			//任务推进
; 1297 : 			DBO_GR_CreateSuccess* pCreateSuccess = (DBO_GR_CreateSuccess*)pData;

  007bb	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  007be	89 45 e4	 mov	 DWORD PTR _pCreateSuccess$1[ebp], eax

; 1298 : 			PerformRoomTaskProgress(pIServerUserItem,1,pCreateSuccess->iRoomCardFee,0);

  007c1	6a 00		 push	 0
  007c3	8b 45 e4	 mov	 eax, DWORD PTR _pCreateSuccess$1[ebp]
  007c6	8b 88 f4 00 00
	00		 mov	 ecx, DWORD PTR [eax+244]
  007cc	51		 push	 ecx
  007cd	6a 01		 push	 1
  007cf	8b 55 e8	 mov	 edx, DWORD PTR _pIServerUserItem$2[ebp]
  007d2	52		 push	 edx
  007d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007d6	e8 00 00 00 00	 call	 ?PerformRoomTaskProgress@CAttemperEngineSink@@QAE_NPAUIServerUserItem@@HHH@Z ; CAttemperEngineSink::PerformRoomTaskProgress
$LN59@OnEventDat:

; 1299 : 		}
; 1300 : 		return m_pIPersonalRoomServiceManager->OnEventDataBase(wRequestID,pIServerUserItem,pData,wDataSize,dwContextID);

  007db	8b 45 0c	 mov	 eax, DWORD PTR _dwContextID$[ebp]
  007de	50		 push	 eax
  007df	0f b7 4d 14	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  007e3	51		 push	 ecx
  007e4	8b 55 10	 mov	 edx, DWORD PTR _pData$[ebp]
  007e7	52		 push	 edx
  007e8	8b 45 e8	 mov	 eax, DWORD PTR _pIServerUserItem$2[ebp]
  007eb	50		 push	 eax
  007ec	0f b7 4d 08	 movzx	 ecx, WORD PTR _wRequestID$[ebp]
  007f0	51		 push	 ecx
  007f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  007f4	8b 82 c8 3f 02
	00		 mov	 eax, DWORD PTR [edx+147400]
  007fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007fd	8b 10		 mov	 edx, DWORD PTR [eax]
  007ff	8b 89 c8 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147400]
  00805	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00808	ff d0		 call	 eax
  0080a	eb 02		 jmp	 SHORT $LN1@OnEventDat
$LN57@OnEventDat:

; 1301 : 	}
; 1302 : 
; 1303 : 	return false;

  0080c	32 c0		 xor	 al, al
$LN1@OnEventDat:

; 1304 : }

  0080e	5f		 pop	 edi
  0080f	5e		 pop	 esi
  00810	5b		 pop	 ebx
  00811	8b e5		 mov	 esp, ebp
  00813	5d		 pop	 ebp
  00814	c2 10 00	 ret	 16			; 00000010H
  00817	90		 npad	 1
$LN75@OnEventDat:
  00818	00 00 00 00	 DD	 $LN4@OnEventDat
  0081c	00 00 00 00	 DD	 $LN5@OnEventDat
  00820	00 00 00 00	 DD	 $LN6@OnEventDat
  00824	00 00 00 00	 DD	 $LN7@OnEventDat
  00828	00 00 00 00	 DD	 $LN8@OnEventDat
  0082c	00 00 00 00	 DD	 $LN9@OnEventDat
  00830	00 00 00 00	 DD	 $LN13@OnEventDat
  00834	00 00 00 00	 DD	 $LN10@OnEventDat
  00838	00 00 00 00	 DD	 $LN28@OnEventDat
  0083c	00 00 00 00	 DD	 $LN29@OnEventDat
  00840	00 00 00 00	 DD	 $LN11@OnEventDat
  00844	00 00 00 00	 DD	 $LN12@OnEventDat
  00848	00 00 00 00	 DD	 $LN17@OnEventDat
  0084c	00 00 00 00	 DD	 $LN18@OnEventDat
  00850	00 00 00 00	 DD	 $LN19@OnEventDat
  00854	00 00 00 00	 DD	 $LN20@OnEventDat
  00858	00 00 00 00	 DD	 $LN21@OnEventDat
  0085c	00 00 00 00	 DD	 $LN2@OnEventDat
$LN72@OnEventDat:
  00860	00		 DB	 0
  00861	01		 DB	 1
  00862	11		 DB	 17			; 00000011H
  00863	11		 DB	 17			; 00000011H
  00864	11		 DB	 17			; 00000011H
  00865	11		 DB	 17			; 00000011H
  00866	11		 DB	 17			; 00000011H
  00867	11		 DB	 17			; 00000011H
  00868	11		 DB	 17			; 00000011H
  00869	11		 DB	 17			; 00000011H
  0086a	11		 DB	 17			; 00000011H
  0086b	11		 DB	 17			; 00000011H
  0086c	11		 DB	 17			; 00000011H
  0086d	11		 DB	 17			; 00000011H
  0086e	11		 DB	 17			; 00000011H
  0086f	11		 DB	 17			; 00000011H
  00870	11		 DB	 17			; 00000011H
  00871	11		 DB	 17			; 00000011H
  00872	11		 DB	 17			; 00000011H
  00873	11		 DB	 17			; 00000011H
  00874	11		 DB	 17			; 00000011H
  00875	11		 DB	 17			; 00000011H
  00876	11		 DB	 17			; 00000011H
  00877	11		 DB	 17			; 00000011H
  00878	11		 DB	 17			; 00000011H
  00879	11		 DB	 17			; 00000011H
  0087a	11		 DB	 17			; 00000011H
  0087b	11		 DB	 17			; 00000011H
  0087c	11		 DB	 17			; 00000011H
  0087d	11		 DB	 17			; 00000011H
  0087e	11		 DB	 17			; 00000011H
  0087f	11		 DB	 17			; 00000011H
  00880	11		 DB	 17			; 00000011H
  00881	11		 DB	 17			; 00000011H
  00882	11		 DB	 17			; 00000011H
  00883	11		 DB	 17			; 00000011H
  00884	11		 DB	 17			; 00000011H
  00885	11		 DB	 17			; 00000011H
  00886	11		 DB	 17			; 00000011H
  00887	11		 DB	 17			; 00000011H
  00888	11		 DB	 17			; 00000011H
  00889	11		 DB	 17			; 00000011H
  0088a	11		 DB	 17			; 00000011H
  0088b	11		 DB	 17			; 00000011H
  0088c	11		 DB	 17			; 00000011H
  0088d	11		 DB	 17			; 00000011H
  0088e	11		 DB	 17			; 00000011H
  0088f	11		 DB	 17			; 00000011H
  00890	11		 DB	 17			; 00000011H
  00891	11		 DB	 17			; 00000011H
  00892	11		 DB	 17			; 00000011H
  00893	11		 DB	 17			; 00000011H
  00894	11		 DB	 17			; 00000011H
  00895	11		 DB	 17			; 00000011H
  00896	11		 DB	 17			; 00000011H
  00897	11		 DB	 17			; 00000011H
  00898	11		 DB	 17			; 00000011H
  00899	11		 DB	 17			; 00000011H
  0089a	11		 DB	 17			; 00000011H
  0089b	11		 DB	 17			; 00000011H
  0089c	11		 DB	 17			; 00000011H
  0089d	11		 DB	 17			; 00000011H
  0089e	11		 DB	 17			; 00000011H
  0089f	11		 DB	 17			; 00000011H
  008a0	11		 DB	 17			; 00000011H
  008a1	11		 DB	 17			; 00000011H
  008a2	11		 DB	 17			; 00000011H
  008a3	11		 DB	 17			; 00000011H
  008a4	11		 DB	 17			; 00000011H
  008a5	11		 DB	 17			; 00000011H
  008a6	11		 DB	 17			; 00000011H
  008a7	11		 DB	 17			; 00000011H
  008a8	11		 DB	 17			; 00000011H
  008a9	11		 DB	 17			; 00000011H
  008aa	11		 DB	 17			; 00000011H
  008ab	11		 DB	 17			; 00000011H
  008ac	11		 DB	 17			; 00000011H
  008ad	11		 DB	 17			; 00000011H
  008ae	11		 DB	 17			; 00000011H
  008af	11		 DB	 17			; 00000011H
  008b0	11		 DB	 17			; 00000011H
  008b1	11		 DB	 17			; 00000011H
  008b2	11		 DB	 17			; 00000011H
  008b3	11		 DB	 17			; 00000011H
  008b4	11		 DB	 17			; 00000011H
  008b5	11		 DB	 17			; 00000011H
  008b6	11		 DB	 17			; 00000011H
  008b7	11		 DB	 17			; 00000011H
  008b8	11		 DB	 17			; 00000011H
  008b9	11		 DB	 17			; 00000011H
  008ba	11		 DB	 17			; 00000011H
  008bb	11		 DB	 17			; 00000011H
  008bc	11		 DB	 17			; 00000011H
  008bd	11		 DB	 17			; 00000011H
  008be	11		 DB	 17			; 00000011H
  008bf	11		 DB	 17			; 00000011H
  008c0	11		 DB	 17			; 00000011H
  008c1	11		 DB	 17			; 00000011H
  008c2	11		 DB	 17			; 00000011H
  008c3	11		 DB	 17			; 00000011H
  008c4	02		 DB	 2
  008c5	03		 DB	 3
  008c6	04		 DB	 4
  008c7	05		 DB	 5
  008c8	11		 DB	 17			; 00000011H
  008c9	11		 DB	 17			; 00000011H
  008ca	06		 DB	 6
  008cb	07		 DB	 7
  008cc	08		 DB	 8
  008cd	09		 DB	 9
  008ce	0a		 DB	 10			; 0000000aH
  008cf	0b		 DB	 11			; 0000000bH
  008d0	11		 DB	 17			; 00000011H
  008d1	11		 DB	 17			; 00000011H
  008d2	11		 DB	 17			; 00000011H
  008d3	11		 DB	 17			; 00000011H
  008d4	11		 DB	 17			; 00000011H
  008d5	11		 DB	 17			; 00000011H
  008d6	11		 DB	 17			; 00000011H
  008d7	11		 DB	 17			; 00000011H
  008d8	11		 DB	 17			; 00000011H
  008d9	11		 DB	 17			; 00000011H
  008da	11		 DB	 17			; 00000011H
  008db	11		 DB	 17			; 00000011H
  008dc	11		 DB	 17			; 00000011H
  008dd	11		 DB	 17			; 00000011H
  008de	11		 DB	 17			; 00000011H
  008df	11		 DB	 17			; 00000011H
  008e0	11		 DB	 17			; 00000011H
  008e1	11		 DB	 17			; 00000011H
  008e2	11		 DB	 17			; 00000011H
  008e3	11		 DB	 17			; 00000011H
  008e4	11		 DB	 17			; 00000011H
  008e5	11		 DB	 17			; 00000011H
  008e6	11		 DB	 17			; 00000011H
  008e7	11		 DB	 17			; 00000011H
  008e8	11		 DB	 17			; 00000011H
  008e9	11		 DB	 17			; 00000011H
  008ea	11		 DB	 17			; 00000011H
  008eb	11		 DB	 17			; 00000011H
  008ec	11		 DB	 17			; 00000011H
  008ed	11		 DB	 17			; 00000011H
  008ee	11		 DB	 17			; 00000011H
  008ef	11		 DB	 17			; 00000011H
  008f0	11		 DB	 17			; 00000011H
  008f1	11		 DB	 17			; 00000011H
  008f2	11		 DB	 17			; 00000011H
  008f3	11		 DB	 17			; 00000011H
  008f4	11		 DB	 17			; 00000011H
  008f5	11		 DB	 17			; 00000011H
  008f6	11		 DB	 17			; 00000011H
  008f7	11		 DB	 17			; 00000011H
  008f8	11		 DB	 17			; 00000011H
  008f9	11		 DB	 17			; 00000011H
  008fa	11		 DB	 17			; 00000011H
  008fb	11		 DB	 17			; 00000011H
  008fc	11		 DB	 17			; 00000011H
  008fd	11		 DB	 17			; 00000011H
  008fe	11		 DB	 17			; 00000011H
  008ff	11		 DB	 17			; 00000011H
  00900	11		 DB	 17			; 00000011H
  00901	11		 DB	 17			; 00000011H
  00902	11		 DB	 17			; 00000011H
  00903	11		 DB	 17			; 00000011H
  00904	11		 DB	 17			; 00000011H
  00905	11		 DB	 17			; 00000011H
  00906	11		 DB	 17			; 00000011H
  00907	11		 DB	 17			; 00000011H
  00908	11		 DB	 17			; 00000011H
  00909	11		 DB	 17			; 00000011H
  0090a	11		 DB	 17			; 00000011H
  0090b	11		 DB	 17			; 00000011H
  0090c	11		 DB	 17			; 00000011H
  0090d	11		 DB	 17			; 00000011H
  0090e	11		 DB	 17			; 00000011H
  0090f	11		 DB	 17			; 00000011H
  00910	11		 DB	 17			; 00000011H
  00911	11		 DB	 17			; 00000011H
  00912	11		 DB	 17			; 00000011H
  00913	11		 DB	 17			; 00000011H
  00914	11		 DB	 17			; 00000011H
  00915	11		 DB	 17			; 00000011H
  00916	11		 DB	 17			; 00000011H
  00917	11		 DB	 17			; 00000011H
  00918	11		 DB	 17			; 00000011H
  00919	11		 DB	 17			; 00000011H
  0091a	11		 DB	 17			; 00000011H
  0091b	11		 DB	 17			; 00000011H
  0091c	11		 DB	 17			; 00000011H
  0091d	11		 DB	 17			; 00000011H
  0091e	11		 DB	 17			; 00000011H
  0091f	11		 DB	 17			; 00000011H
  00920	11		 DB	 17			; 00000011H
  00921	11		 DB	 17			; 00000011H
  00922	11		 DB	 17			; 00000011H
  00923	11		 DB	 17			; 00000011H
  00924	11		 DB	 17			; 00000011H
  00925	11		 DB	 17			; 00000011H
  00926	11		 DB	 17			; 00000011H
  00927	11		 DB	 17			; 00000011H
  00928	0c		 DB	 12			; 0000000cH
  00929	0d		 DB	 13			; 0000000dH
  0092a	0e		 DB	 14			; 0000000eH
  0092b	0f		 DB	 15			; 0000000fH
  0092c	10		 DB	 16			; 00000010H
  0092d	0f 1f 00	 npad	 3
$LN76@OnEventDat:
  00930	00 00 00 00	 DD	 $LN23@OnEventDat
  00934	00 00 00 00	 DD	 $LN24@OnEventDat
  00938	00 00 00 00	 DD	 $LN25@OnEventDat
  0093c	00 00 00 00	 DD	 $LN31@OnEventDat
  00940	00 00 00 00	 DD	 $LN32@OnEventDat
  00944	00 00 00 00	 DD	 $LN33@OnEventDat
  00948	00 00 00 00	 DD	 $LN34@OnEventDat
  0094c	00 00 00 00	 DD	 $LN35@OnEventDat
  00950	00 00 00 00	 DD	 $LN36@OnEventDat
  00954	00 00 00 00	 DD	 $LN37@OnEventDat
  00958	00 00 00 00	 DD	 $LN38@OnEventDat
  0095c	00 00 00 00	 DD	 $LN39@OnEventDat
  00960	00 00 00 00	 DD	 $LN2@OnEventDat
$LN73@OnEventDat:
  00964	00		 DB	 0
  00965	01		 DB	 1
  00966	02		 DB	 2
  00967	0c		 DB	 12			; 0000000cH
  00968	0c		 DB	 12			; 0000000cH
  00969	0c		 DB	 12			; 0000000cH
  0096a	0c		 DB	 12			; 0000000cH
  0096b	0c		 DB	 12			; 0000000cH
  0096c	0c		 DB	 12			; 0000000cH
  0096d	0c		 DB	 12			; 0000000cH
  0096e	0c		 DB	 12			; 0000000cH
  0096f	0c		 DB	 12			; 0000000cH
  00970	0c		 DB	 12			; 0000000cH
  00971	0c		 DB	 12			; 0000000cH
  00972	0c		 DB	 12			; 0000000cH
  00973	0c		 DB	 12			; 0000000cH
  00974	0c		 DB	 12			; 0000000cH
  00975	0c		 DB	 12			; 0000000cH
  00976	0c		 DB	 12			; 0000000cH
  00977	0c		 DB	 12			; 0000000cH
  00978	0c		 DB	 12			; 0000000cH
  00979	0c		 DB	 12			; 0000000cH
  0097a	0c		 DB	 12			; 0000000cH
  0097b	0c		 DB	 12			; 0000000cH
  0097c	0c		 DB	 12			; 0000000cH
  0097d	0c		 DB	 12			; 0000000cH
  0097e	0c		 DB	 12			; 0000000cH
  0097f	0c		 DB	 12			; 0000000cH
  00980	0c		 DB	 12			; 0000000cH
  00981	0c		 DB	 12			; 0000000cH
  00982	0c		 DB	 12			; 0000000cH
  00983	0c		 DB	 12			; 0000000cH
  00984	0c		 DB	 12			; 0000000cH
  00985	0c		 DB	 12			; 0000000cH
  00986	0c		 DB	 12			; 0000000cH
  00987	0c		 DB	 12			; 0000000cH
  00988	0c		 DB	 12			; 0000000cH
  00989	0c		 DB	 12			; 0000000cH
  0098a	0c		 DB	 12			; 0000000cH
  0098b	0c		 DB	 12			; 0000000cH
  0098c	0c		 DB	 12			; 0000000cH
  0098d	0c		 DB	 12			; 0000000cH
  0098e	0c		 DB	 12			; 0000000cH
  0098f	0c		 DB	 12			; 0000000cH
  00990	0c		 DB	 12			; 0000000cH
  00991	0c		 DB	 12			; 0000000cH
  00992	0c		 DB	 12			; 0000000cH
  00993	0c		 DB	 12			; 0000000cH
  00994	0c		 DB	 12			; 0000000cH
  00995	0c		 DB	 12			; 0000000cH
  00996	0c		 DB	 12			; 0000000cH
  00997	0c		 DB	 12			; 0000000cH
  00998	0c		 DB	 12			; 0000000cH
  00999	0c		 DB	 12			; 0000000cH
  0099a	0c		 DB	 12			; 0000000cH
  0099b	0c		 DB	 12			; 0000000cH
  0099c	0c		 DB	 12			; 0000000cH
  0099d	0c		 DB	 12			; 0000000cH
  0099e	0c		 DB	 12			; 0000000cH
  0099f	0c		 DB	 12			; 0000000cH
  009a0	0c		 DB	 12			; 0000000cH
  009a1	0c		 DB	 12			; 0000000cH
  009a2	0c		 DB	 12			; 0000000cH
  009a3	0c		 DB	 12			; 0000000cH
  009a4	0c		 DB	 12			; 0000000cH
  009a5	0c		 DB	 12			; 0000000cH
  009a6	0c		 DB	 12			; 0000000cH
  009a7	0c		 DB	 12			; 0000000cH
  009a8	0c		 DB	 12			; 0000000cH
  009a9	0c		 DB	 12			; 0000000cH
  009aa	0c		 DB	 12			; 0000000cH
  009ab	0c		 DB	 12			; 0000000cH
  009ac	0c		 DB	 12			; 0000000cH
  009ad	0c		 DB	 12			; 0000000cH
  009ae	0c		 DB	 12			; 0000000cH
  009af	0c		 DB	 12			; 0000000cH
  009b0	0c		 DB	 12			; 0000000cH
  009b1	0c		 DB	 12			; 0000000cH
  009b2	0c		 DB	 12			; 0000000cH
  009b3	0c		 DB	 12			; 0000000cH
  009b4	0c		 DB	 12			; 0000000cH
  009b5	0c		 DB	 12			; 0000000cH
  009b6	0c		 DB	 12			; 0000000cH
  009b7	0c		 DB	 12			; 0000000cH
  009b8	0c		 DB	 12			; 0000000cH
  009b9	0c		 DB	 12			; 0000000cH
  009ba	0c		 DB	 12			; 0000000cH
  009bb	0c		 DB	 12			; 0000000cH
  009bc	0c		 DB	 12			; 0000000cH
  009bd	0c		 DB	 12			; 0000000cH
  009be	0c		 DB	 12			; 0000000cH
  009bf	0c		 DB	 12			; 0000000cH
  009c0	0c		 DB	 12			; 0000000cH
  009c1	0c		 DB	 12			; 0000000cH
  009c2	0c		 DB	 12			; 0000000cH
  009c3	0c		 DB	 12			; 0000000cH
  009c4	0c		 DB	 12			; 0000000cH
  009c5	0c		 DB	 12			; 0000000cH
  009c6	0c		 DB	 12			; 0000000cH
  009c7	0c		 DB	 12			; 0000000cH
  009c8	03		 DB	 3
  009c9	04		 DB	 4
  009ca	05		 DB	 5
  009cb	06		 DB	 6
  009cc	0c		 DB	 12			; 0000000cH
  009cd	0c		 DB	 12			; 0000000cH
  009ce	0c		 DB	 12			; 0000000cH
  009cf	0c		 DB	 12			; 0000000cH
  009d0	0c		 DB	 12			; 0000000cH
  009d1	0c		 DB	 12			; 0000000cH
  009d2	0c		 DB	 12			; 0000000cH
  009d3	0c		 DB	 12			; 0000000cH
  009d4	0c		 DB	 12			; 0000000cH
  009d5	0c		 DB	 12			; 0000000cH
  009d6	0c		 DB	 12			; 0000000cH
  009d7	0c		 DB	 12			; 0000000cH
  009d8	0c		 DB	 12			; 0000000cH
  009d9	0c		 DB	 12			; 0000000cH
  009da	0c		 DB	 12			; 0000000cH
  009db	0c		 DB	 12			; 0000000cH
  009dc	0c		 DB	 12			; 0000000cH
  009dd	0c		 DB	 12			; 0000000cH
  009de	0c		 DB	 12			; 0000000cH
  009df	0c		 DB	 12			; 0000000cH
  009e0	0c		 DB	 12			; 0000000cH
  009e1	0c		 DB	 12			; 0000000cH
  009e2	0c		 DB	 12			; 0000000cH
  009e3	0c		 DB	 12			; 0000000cH
  009e4	0c		 DB	 12			; 0000000cH
  009e5	0c		 DB	 12			; 0000000cH
  009e6	0c		 DB	 12			; 0000000cH
  009e7	0c		 DB	 12			; 0000000cH
  009e8	0c		 DB	 12			; 0000000cH
  009e9	0c		 DB	 12			; 0000000cH
  009ea	0c		 DB	 12			; 0000000cH
  009eb	0c		 DB	 12			; 0000000cH
  009ec	0c		 DB	 12			; 0000000cH
  009ed	0c		 DB	 12			; 0000000cH
  009ee	0c		 DB	 12			; 0000000cH
  009ef	0c		 DB	 12			; 0000000cH
  009f0	0c		 DB	 12			; 0000000cH
  009f1	0c		 DB	 12			; 0000000cH
  009f2	0c		 DB	 12			; 0000000cH
  009f3	0c		 DB	 12			; 0000000cH
  009f4	0c		 DB	 12			; 0000000cH
  009f5	0c		 DB	 12			; 0000000cH
  009f6	0c		 DB	 12			; 0000000cH
  009f7	0c		 DB	 12			; 0000000cH
  009f8	0c		 DB	 12			; 0000000cH
  009f9	0c		 DB	 12			; 0000000cH
  009fa	0c		 DB	 12			; 0000000cH
  009fb	0c		 DB	 12			; 0000000cH
  009fc	0c		 DB	 12			; 0000000cH
  009fd	0c		 DB	 12			; 0000000cH
  009fe	0c		 DB	 12			; 0000000cH
  009ff	0c		 DB	 12			; 0000000cH
  00a00	0c		 DB	 12			; 0000000cH
  00a01	0c		 DB	 12			; 0000000cH
  00a02	0c		 DB	 12			; 0000000cH
  00a03	0c		 DB	 12			; 0000000cH
  00a04	0c		 DB	 12			; 0000000cH
  00a05	0c		 DB	 12			; 0000000cH
  00a06	0c		 DB	 12			; 0000000cH
  00a07	0c		 DB	 12			; 0000000cH
  00a08	0c		 DB	 12			; 0000000cH
  00a09	0c		 DB	 12			; 0000000cH
  00a0a	0c		 DB	 12			; 0000000cH
  00a0b	0c		 DB	 12			; 0000000cH
  00a0c	0c		 DB	 12			; 0000000cH
  00a0d	0c		 DB	 12			; 0000000cH
  00a0e	0c		 DB	 12			; 0000000cH
  00a0f	0c		 DB	 12			; 0000000cH
  00a10	0c		 DB	 12			; 0000000cH
  00a11	0c		 DB	 12			; 0000000cH
  00a12	0c		 DB	 12			; 0000000cH
  00a13	0c		 DB	 12			; 0000000cH
  00a14	0c		 DB	 12			; 0000000cH
  00a15	0c		 DB	 12			; 0000000cH
  00a16	0c		 DB	 12			; 0000000cH
  00a17	0c		 DB	 12			; 0000000cH
  00a18	0c		 DB	 12			; 0000000cH
  00a19	0c		 DB	 12			; 0000000cH
  00a1a	0c		 DB	 12			; 0000000cH
  00a1b	0c		 DB	 12			; 0000000cH
  00a1c	0c		 DB	 12			; 0000000cH
  00a1d	0c		 DB	 12			; 0000000cH
  00a1e	0c		 DB	 12			; 0000000cH
  00a1f	0c		 DB	 12			; 0000000cH
  00a20	0c		 DB	 12			; 0000000cH
  00a21	0c		 DB	 12			; 0000000cH
  00a22	0c		 DB	 12			; 0000000cH
  00a23	0c		 DB	 12			; 0000000cH
  00a24	0c		 DB	 12			; 0000000cH
  00a25	0c		 DB	 12			; 0000000cH
  00a26	0c		 DB	 12			; 0000000cH
  00a27	0c		 DB	 12			; 0000000cH
  00a28	0c		 DB	 12			; 0000000cH
  00a29	0c		 DB	 12			; 0000000cH
  00a2a	0c		 DB	 12			; 0000000cH
  00a2b	0c		 DB	 12			; 0000000cH
  00a2c	0c		 DB	 12			; 0000000cH
  00a2d	07		 DB	 7
  00a2e	08		 DB	 8
  00a2f	0c		 DB	 12			; 0000000cH
  00a30	0c		 DB	 12			; 0000000cH
  00a31	0c		 DB	 12			; 0000000cH
  00a32	0c		 DB	 12			; 0000000cH
  00a33	0c		 DB	 12			; 0000000cH
  00a34	0c		 DB	 12			; 0000000cH
  00a35	0c		 DB	 12			; 0000000cH
  00a36	0c		 DB	 12			; 0000000cH
  00a37	0c		 DB	 12			; 0000000cH
  00a38	0c		 DB	 12			; 0000000cH
  00a39	0c		 DB	 12			; 0000000cH
  00a3a	0c		 DB	 12			; 0000000cH
  00a3b	0c		 DB	 12			; 0000000cH
  00a3c	0c		 DB	 12			; 0000000cH
  00a3d	0c		 DB	 12			; 0000000cH
  00a3e	0c		 DB	 12			; 0000000cH
  00a3f	0c		 DB	 12			; 0000000cH
  00a40	09		 DB	 9
  00a41	0a		 DB	 10			; 0000000aH
  00a42	0b		 DB	 11			; 0000000bH
  00a43	90		 npad	 1
$LN77@OnEventDat:
  00a44	00 00 00 00	 DD	 $LN42@OnEventDat
  00a48	00 00 00 00	 DD	 $LN43@OnEventDat
  00a4c	00 00 00 00	 DD	 $LN44@OnEventDat
  00a50	00 00 00 00	 DD	 $LN45@OnEventDat
  00a54	00 00 00 00	 DD	 $LN46@OnEventDat
$LN78@OnEventDat:
  00a58	00 00 00 00	 DD	 $LN14@OnEventDat
  00a5c	00 00 00 00	 DD	 $LN15@OnEventDat
  00a60	00 00 00 00	 DD	 $LN16@OnEventDat
  00a64	00 00 00 00	 DD	 $LN47@OnEventDat
  00a68	00 00 00 00	 DD	 $LN48@OnEventDat
  00a6c	00 00 00 00	 DD	 $LN49@OnEventDat
  00a70	00 00 00 00	 DD	 $LN52@OnEventDat
  00a74	00 00 00 00	 DD	 $LN53@OnEventDat
  00a78	00 00 00 00	 DD	 $LN54@OnEventDat
  00a7c	00 00 00 00	 DD	 $LN50@OnEventDat
  00a80	00 00 00 00	 DD	 $LN2@OnEventDat
$LN74@OnEventDat:
  00a84	00		 DB	 0
  00a85	01		 DB	 1
  00a86	02		 DB	 2
  00a87	0a		 DB	 10			; 0000000aH
  00a88	0a		 DB	 10			; 0000000aH
  00a89	0a		 DB	 10			; 0000000aH
  00a8a	0a		 DB	 10			; 0000000aH
  00a8b	0a		 DB	 10			; 0000000aH
  00a8c	0a		 DB	 10			; 0000000aH
  00a8d	0a		 DB	 10			; 0000000aH
  00a8e	0a		 DB	 10			; 0000000aH
  00a8f	0a		 DB	 10			; 0000000aH
  00a90	0a		 DB	 10			; 0000000aH
  00a91	0a		 DB	 10			; 0000000aH
  00a92	0a		 DB	 10			; 0000000aH
  00a93	0a		 DB	 10			; 0000000aH
  00a94	0a		 DB	 10			; 0000000aH
  00a95	0a		 DB	 10			; 0000000aH
  00a96	0a		 DB	 10			; 0000000aH
  00a97	0a		 DB	 10			; 0000000aH
  00a98	0a		 DB	 10			; 0000000aH
  00a99	0a		 DB	 10			; 0000000aH
  00a9a	0a		 DB	 10			; 0000000aH
  00a9b	0a		 DB	 10			; 0000000aH
  00a9c	0a		 DB	 10			; 0000000aH
  00a9d	0a		 DB	 10			; 0000000aH
  00a9e	0a		 DB	 10			; 0000000aH
  00a9f	0a		 DB	 10			; 0000000aH
  00aa0	0a		 DB	 10			; 0000000aH
  00aa1	0a		 DB	 10			; 0000000aH
  00aa2	0a		 DB	 10			; 0000000aH
  00aa3	0a		 DB	 10			; 0000000aH
  00aa4	0a		 DB	 10			; 0000000aH
  00aa5	0a		 DB	 10			; 0000000aH
  00aa6	0a		 DB	 10			; 0000000aH
  00aa7	0a		 DB	 10			; 0000000aH
  00aa8	0a		 DB	 10			; 0000000aH
  00aa9	0a		 DB	 10			; 0000000aH
  00aaa	0a		 DB	 10			; 0000000aH
  00aab	0a		 DB	 10			; 0000000aH
  00aac	0a		 DB	 10			; 0000000aH
  00aad	0a		 DB	 10			; 0000000aH
  00aae	0a		 DB	 10			; 0000000aH
  00aaf	0a		 DB	 10			; 0000000aH
  00ab0	0a		 DB	 10			; 0000000aH
  00ab1	0a		 DB	 10			; 0000000aH
  00ab2	0a		 DB	 10			; 0000000aH
  00ab3	0a		 DB	 10			; 0000000aH
  00ab4	0a		 DB	 10			; 0000000aH
  00ab5	0a		 DB	 10			; 0000000aH
  00ab6	0a		 DB	 10			; 0000000aH
  00ab7	0a		 DB	 10			; 0000000aH
  00ab8	0a		 DB	 10			; 0000000aH
  00ab9	0a		 DB	 10			; 0000000aH
  00aba	0a		 DB	 10			; 0000000aH
  00abb	0a		 DB	 10			; 0000000aH
  00abc	0a		 DB	 10			; 0000000aH
  00abd	0a		 DB	 10			; 0000000aH
  00abe	0a		 DB	 10			; 0000000aH
  00abf	0a		 DB	 10			; 0000000aH
  00ac0	0a		 DB	 10			; 0000000aH
  00ac1	0a		 DB	 10			; 0000000aH
  00ac2	0a		 DB	 10			; 0000000aH
  00ac3	0a		 DB	 10			; 0000000aH
  00ac4	0a		 DB	 10			; 0000000aH
  00ac5	0a		 DB	 10			; 0000000aH
  00ac6	0a		 DB	 10			; 0000000aH
  00ac7	0a		 DB	 10			; 0000000aH
  00ac8	0a		 DB	 10			; 0000000aH
  00ac9	0a		 DB	 10			; 0000000aH
  00aca	0a		 DB	 10			; 0000000aH
  00acb	0a		 DB	 10			; 0000000aH
  00acc	0a		 DB	 10			; 0000000aH
  00acd	0a		 DB	 10			; 0000000aH
  00ace	0a		 DB	 10			; 0000000aH
  00acf	0a		 DB	 10			; 0000000aH
  00ad0	0a		 DB	 10			; 0000000aH
  00ad1	0a		 DB	 10			; 0000000aH
  00ad2	0a		 DB	 10			; 0000000aH
  00ad3	0a		 DB	 10			; 0000000aH
  00ad4	0a		 DB	 10			; 0000000aH
  00ad5	0a		 DB	 10			; 0000000aH
  00ad6	0a		 DB	 10			; 0000000aH
  00ad7	0a		 DB	 10			; 0000000aH
  00ad8	0a		 DB	 10			; 0000000aH
  00ad9	0a		 DB	 10			; 0000000aH
  00ada	0a		 DB	 10			; 0000000aH
  00adb	0a		 DB	 10			; 0000000aH
  00adc	0a		 DB	 10			; 0000000aH
  00add	0a		 DB	 10			; 0000000aH
  00ade	0a		 DB	 10			; 0000000aH
  00adf	0a		 DB	 10			; 0000000aH
  00ae0	0a		 DB	 10			; 0000000aH
  00ae1	0a		 DB	 10			; 0000000aH
  00ae2	0a		 DB	 10			; 0000000aH
  00ae3	0a		 DB	 10			; 0000000aH
  00ae4	0a		 DB	 10			; 0000000aH
  00ae5	0a		 DB	 10			; 0000000aH
  00ae6	0a		 DB	 10			; 0000000aH
  00ae7	03		 DB	 3
  00ae8	04		 DB	 4
  00ae9	05		 DB	 5
  00aea	06		 DB	 6
  00aeb	07		 DB	 7
  00aec	08		 DB	 8
  00aed	0a		 DB	 10			; 0000000aH
  00aee	09		 DB	 9
?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z ENDP ; CAttemperEngineSink::OnEventDataBase
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
_TEXT	SEGMENT
tv2029 = -100588					; size = 8
tv321 = -100584						; size = 4
tv1383 = -100581					; size = 1
tv1362 = -100581					; size = 1
tv1356 = -100581					; size = 1
tv1354 = -100581					; size = 1
tv1348 = -100581					; size = 1
tv1342 = -100581					; size = 1
tv1340 = -100581					; size = 1
tv2028 = -100580					; size = 4
tv1387 = -100580					; size = 4
tv1386 = -100580					; size = 4
tv1384 = -100580					; size = 4
tv1382 = -100580					; size = 4
tv1380 = -100580					; size = 4
tv1379 = -100580					; size = 4
tv1378 = -100580					; size = 4
tv1377 = -100580					; size = 4
tv1374 = -100580					; size = 4
tv1370 = -100580					; size = 4
tv1367 = -100580					; size = 4
tv1363 = -100580					; size = 4
tv1361 = -100580					; size = 4
tv1357 = -100580					; size = 4
tv1355 = -100580					; size = 4
tv1353 = -100580					; size = 4
tv1349 = -100580					; size = 4
tv1347 = -100580					; size = 4
tv1343 = -100580					; size = 4
tv1341 = -100580					; size = 4
tv1339 = -100580					; size = 4
tv1335 = -100580					; size = 4
tv1329 = -100580					; size = 4
tv1328 = -100580					; size = 4
tv1327 = -100580					; size = 4
tv1150 = -100580					; size = 4
tv1144 = -100580					; size = 4
tv1138 = -100580					; size = 4
tv972 = -100580						; size = 4
tv940 = -100580						; size = 4
tv873 = -100580						; size = 4
tv841 = -100580						; size = 4
tv813 = -100580						; size = 4
tv793 = -100580						; size = 4
tv409 = -100580						; size = 4
tv353 = -100580						; size = 4
tv66 = -100580						; size = 4
tv1373 = -100578					; size = 2
tv1372 = -100578					; size = 2
tv1366 = -100578					; size = 2
tv1365 = -100578					; size = 2
tv1360 = -100578					; size = 2
tv1359 = -100578					; size = 2
tv1352 = -100578					; size = 2
tv1351 = -100578					; size = 2
tv1346 = -100578					; size = 2
tv1345 = -100578					; size = 2
tv1338 = -100578					; size = 2
tv1337 = -100578					; size = 2
tv1330 = -100578					; size = 2
tv398 = -100578						; size = 2
tv1388 = -100577					; size = 1
tv1381 = -100577					; size = 1
tv1376 = -100577					; size = 1
tv1375 = -100577					; size = 1
tv1371 = -100577					; size = 1
tv1369 = -100577					; size = 1
tv1368 = -100577					; size = 1
tv1364 = -100577					; size = 1
tv1358 = -100577					; size = 1
tv1350 = -100577					; size = 1
tv1344 = -100577					; size = 1
tv1336 = -100577					; size = 1
tv1334 = -100577					; size = 1
tv1333 = -100577					; size = 1
tv1332 = -100577					; size = 1
tv1331 = -100577					; size = 1
tv1326 = -100577					; size = 1
$T2 = -100576						; size = 4
_szMessage$3 = -100060					; size = 128
_pTableFrame$4 = -99932					; size = 4
_wTableID$5 = -99928					; size = 2
_dwTableTimerID$6 = -99924				; size = 4
_pIAndroidUserItem$7 = -99920				; size = 4
_wAndroidIndex$8 = -99916				; size = 2
_j$9 = -99912						; size = 2
_wIndex$10 = -99908					; size = 2
_AndroidPassivity$11 = -99904				; size = 24584
_bAllowAndroidAttend$12 = -75317			; size = 1
_wSendSize$13 = -75316					; size = 2
_SendMessageA$14 = -75312				; size = 146
_pTagSystemMessage$15 = -75164				; size = 4
_nIndex$16 = -75160					; size = 4
_dwCurrTime$17 = -75156					; size = 4
_pIServerUserItem$18 = -75152				; size = 4
_j$19 = -75148						; size = 2
_bRand$20 = -75141					; size = 1
_wUserSitCount$21 = -75140				; size = 2
_TableUserInfo$22 = -75136				; size = 8
_pTableFrame$23 = -75128				; size = 4
_nTableIndex$24 = -75124				; size = 4
_i$25 = -75120						; size = 4
_pIServerUserItem$26 = -75116				; size = 4
_j$27 = -75112						; size = 2
_bRand$28 = -75105					; size = 1
_wUserSitCount$29 = -75104				; size = 2
_TableUserInfo$30 = -75100				; size = 8
_pTableFrame$31 = -75092				; size = 4
_nTableIndex$32 = -75088				; size = 4
_i$33 = -75084						; size = 4
_nIndex$34 = -75080					; size = 4
_wRandCount$35 = -75076					; size = 2
_wStandUpCount$36 = -75072				; size = 2
_dwCurrTime$37 = -75068					; size = 4
_bMaxPlayerGame$38 = -75061				; size = 1
_dwCurrTime$39 = -75060					; size = 4
_bSinglePlayerGame$40 = -75053				; size = 1
_pIAndroidUserItem$41 = -75052				; size = 4
_j$42 = -75048						; size = 2
_wChairID$43 = -75044					; size = 2
_pIServerUserItem$44 = -75040				; size = 4
_wUserSitCount$45 = -75036				; size = 2
_TableUserInfo$46 = -75032				; size = 8
_pTableFrame$47 = -75024				; size = 4
_i$48 = -75020						; size = 4
_pIAndroidUserItem$49 = -75016				; size = 4
_j$50 = -75012						; size = 2
_wAllAndroidCount$51 = -75008				; size = 2
_AndroidInitiative$52 = -75004				; size = 24584
_pIAndroidUserItem$53 = -50420				; size = 4
_j$54 = -50416						; size = 2
_wChairID$55 = -50412					; size = 2
_pIServerUserItem$56 = -50408				; size = 4
_wUserSitCount$57 = -50404				; size = 2
_TableUserInfo$58 = -50400				; size = 8
_pTableFrame$59 = -50392				; size = 4
_i$60 = -50388						; size = 4
_pIAndroidUserItem$61 = -50384				; size = 4
_j$62 = -50380						; size = 2
_wChairID$63 = -50376					; size = 2
_pIServerUserItem$64 = -50372				; size = 4
_wUserSitCount$65 = -50368				; size = 2
_TableUserInfo$66 = -50364				; size = 8
_pTableFrame$67 = -50356				; size = 4
_i$68 = -50352						; size = 4
_pIAndroidUserItem$69 = -50348				; size = 4
_j$70 = -50344						; size = 2
_AndroidPassivity$71 = -50340				; size = 24584
_pIAndroidUserItem$72 = -25756				; size = 4
_wChairID$73 = -25752					; size = 2
_j$74 = -25748						; size = 2
_wOffUserCount$75 = -25744				; size = 2
_wFreeUserCount$76 = -25740				; size = 2
_wChairCount$77 = -25736				; size = 2
_wWantAndroidCount$78 = -25732				; size = 2
_wHandleCount$79 = -25728				; size = 2
_wUserSitCount$80 = -25724				; size = 2
_TableUserInfo$81 = -25720				; size = 8
_pTableFrame$82 = -25712				; size = 4
_wTableID$83 = -25708					; size = 2
_i$84 = -25704						; size = 2
_AndroidSimulate$85 = -25700				; size = 24584
_bAllowAvertCheatMode$86 = -1116			; size = 1
_bAllowAndroidSimulate$87 = -1115			; size = 1
_bAllowAndroidAttend$88 = -1114				; size = 1
_bAllowDynamicJoin$89 = -1113				; size = 1
_szString$90 = -1112					; size = 512
_pPrsnlRmCorrespondAddress$91 = -600			; size = 4
_szString$92 = -596					; size = 512
_pCorrespondAddress$93 = -84				; size = 4
_ServerOnLine$94 = -80					; size = 12
_LoadAndroidUser$95 = -68				; size = 32
_pAndroidParameter$96 = -36				; size = 4
_dwAndroidCount$97 = -32				; size = 4
_dwBatchID$98 = -28					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwTimerID$ = 8						; size = 4
_wBindParam$ = 12					; size = 4
?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z PROC	; CAttemperEngineSink::OnEventTimer, COMDAT
; _this$ = ecx

; 462  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	b8 dc 88 01 00	 mov	 eax, 100572		; 000188dcH
  00017	e8 00 00 00 00	 call	 __chkstk
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	33 c5		 xor	 eax, ebp
  00023	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00026	53		 push	 ebx
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00036	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : 	try

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 464  : 	{
; 465  : 		//调度时间
; 466  : 		if ((dwTimerID>=IDI_MAIN_MODULE_START)&&(dwTimerID<=IDI_MAIN_MODULE_FINISH))

  00040	83 7d 08 01	 cmp	 DWORD PTR _dwTimerID$[ebp], 1
  00044	0f 82 49 1a 00
	00		 jb	 $LN53@OnEventTim
  0004a	83 7d 08 63	 cmp	 DWORD PTR _dwTimerID$[ebp], 99 ; 00000063H
  0004e	0f 87 3f 1a 00
	00		 ja	 $LN53@OnEventTim

; 467  : 		{
; 468  : 			//时间处理
; 469  : 			switch (dwTimerID)

  00054	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  00057	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv66[ebp], eax
  0005d	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv66[ebp]
  00063	83 e9 02	 sub	 ecx, 2
  00066	89 8d 1c 77 fe
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0006c	83 bd 1c 77 fe
	ff 0b		 cmp	 DWORD PTR tv66[ebp], 11	; 0000000bH
  00073	0f 87 1a 1a 00
	00		 ja	 $LN53@OnEventTim
  00079	8b 95 1c 77 fe
	ff		 mov	 edx, DWORD PTR tv66[ebp]
  0007f	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN179@OnEventTim[edx*4]
$LN54@OnEventTim:

; 470  : 			{
; 471  : 			case IDI_LOAD_ANDROID_USER:		//加载机器
; 472  : 				{
; 473  : 					//变量定义
; 474  : 					DWORD dwBatchID=0;

  00086	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dwBatchID$98[ebp], 0

; 475  : 					DWORD dwAndroidCount=0;

  0008d	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _dwAndroidCount$97[ebp], 0

; 476  : 
; 477  : 					//加载判断
; 478  : 					if(m_AndroidUserManager.GetAndroidLoadInfo(dwBatchID,dwAndroidCount))

  00094	8d 45 e0	 lea	 eax, DWORD PTR _dwAndroidCount$97[ebp]
  00097	50		 push	 eax
  00098	8d 4d e4	 lea	 ecx, DWORD PTR _dwBatchID$98[ebp]
  0009b	51		 push	 ecx
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000a5	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000a8	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  000ae	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  000b1	ff d2		 call	 edx
  000b3	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1326[ebp], al
  000b9	0f b6 85 1f 77
	fe ff		 movzx	 eax, BYTE PTR tv1326[ebp]
  000c0	85 c0		 test	 eax, eax
  000c2	0f 84 99 00 00
	00		 je	 $LN55@OnEventTim

; 479  : 					{
; 480  : 						//变量定义
; 481  : 						tagAndroidParameterEx * pAndroidParameter=NULL;

  000c8	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pAndroidParameter$96[ebp], 0

; 482  : 						pAndroidParameter = m_AndroidUserManager.GetAndroidParameter(dwBatchID);

  000cf	8b 45 e4	 mov	 eax, DWORD PTR _dwBatchID$98[ebp]
  000d2	50		 push	 eax
  000d3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z
  000e2	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1327[ebp], eax
  000e8	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1327[ebp]
  000ee	89 4d dc	 mov	 DWORD PTR _pAndroidParameter$96[ebp], ecx

; 483  : 
; 484  : 						//构造结构
; 485  : 						DBR_GR_LoadAndroidUser LoadAndroidUser;
; 486  : 						LoadAndroidUser.dwBatchID=dwBatchID;

  000f1	8b 45 e4	 mov	 eax, DWORD PTR _dwBatchID$98[ebp]
  000f4	89 45 bc	 mov	 DWORD PTR _LoadAndroidUser$95[ebp], eax

; 487  : 						LoadAndroidUser.dwAndroidCount=dwAndroidCount;

  000f7	8b 45 e0	 mov	 eax, DWORD PTR _dwAndroidCount$97[ebp]
  000fa	89 45 c0	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+4], eax

; 488  : 						LoadAndroidUser.AndroidCountMember0=pAndroidParameter->AndroidParameter.AndroidCountMember0;

  000fd	8b 45 dc	 mov	 eax, DWORD PTR _pAndroidParameter$96[ebp]
  00100	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00103	89 4d c4	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+8], ecx

; 489  : 						LoadAndroidUser.AndroidCountMember1=pAndroidParameter->AndroidParameter.AndroidCountMember1;

  00106	8b 45 dc	 mov	 eax, DWORD PTR _pAndroidParameter$96[ebp]
  00109	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0010c	89 4d c8	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+12], ecx

; 490  : 						LoadAndroidUser.AndroidCountMember2=pAndroidParameter->AndroidParameter.AndroidCountMember2;

  0010f	8b 45 dc	 mov	 eax, DWORD PTR _pAndroidParameter$96[ebp]
  00112	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00115	89 4d cc	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+16], ecx

; 491  : 						LoadAndroidUser.AndroidCountMember3=pAndroidParameter->AndroidParameter.AndroidCountMember3;

  00118	8b 45 dc	 mov	 eax, DWORD PTR _pAndroidParameter$96[ebp]
  0011b	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0011e	89 4d d0	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+20], ecx

; 492  : 						LoadAndroidUser.AndroidCountMember4=pAndroidParameter->AndroidParameter.AndroidCountMember4;

  00121	8b 45 dc	 mov	 eax, DWORD PTR _pAndroidParameter$96[ebp]
  00124	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00127	89 4d d4	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+24], ecx

; 493  : 						LoadAndroidUser.AndroidCountMember5=pAndroidParameter->AndroidParameter.AndroidCountMember5;

  0012a	8b 45 dc	 mov	 eax, DWORD PTR _pAndroidParameter$96[ebp]
  0012d	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00130	89 4d d8	 mov	 DWORD PTR _LoadAndroidUser$95[ebp+28], ecx

; 494  : 						
; 495  : 						//加载机器
; 496  : 						m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_ANDROID_USER,0L,&LoadAndroidUser,sizeof(LoadAndroidUser));

  00133	6a 00		 push	 0
  00135	6a 20		 push	 32			; 00000020H
  00137	8d 45 bc	 lea	 eax, DWORD PTR _LoadAndroidUser$95[ebp]
  0013a	50		 push	 eax
  0013b	6a 00		 push	 0
  0013d	68 2f 01 00 00	 push	 303			; 0000012fH
  00142	6a 00		 push	 0
  00144	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  0014d	52		 push	 edx
  0014e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00151	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00157	8b 11		 mov	 edx, DWORD PTR [ecx]
  00159	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0015c	ff d0		 call	 eax
  0015e	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN55@OnEventTim:

; 497  : 					}
; 498  : 
; 499  : 					return true;

  00161	b0 01		 mov	 al, 1
  00163	e9 dc 1a 00 00	 jmp	 $LN1@OnEventTim
$LN56@OnEventTim:

; 500  : 				}
; 501  : 			case IDI_REPORT_SERVER_INFO:	//房间信息
; 502  : 				{
; 503  : 					//变量定义
; 504  : 					CMD_CS_C_ServerOnLine ServerOnLine;
; 505  : 					ZeroMemory(&ServerOnLine,sizeof(ServerOnLine));

  00168	6a 0c		 push	 12			; 0000000cH
  0016a	6a 00		 push	 0
  0016c	8d 45 b0	 lea	 eax, DWORD PTR _ServerOnLine$94[ebp]
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 _memset
  00175	83 c4 0c	 add	 esp, 12			; 0000000cH

; 506  : 
; 507  : 					//设置变量				
; 508  : 					ServerOnLine.dwAndroidCount=m_ServerUserManager.GetAndroidCount();

  00178	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017b	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00181	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00184	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  0018a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0018d	ff d0		 call	 eax
  0018f	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1328[ebp], eax
  00195	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1328[ebp]
  0019b	89 4d b4	 mov	 DWORD PTR _ServerOnLine$94[ebp+4], ecx

; 509  : 					ServerOnLine.dwOnLineCount=m_ServerUserManager.GetUserItemCount()-ServerOnLine.dwAndroidCount;

  0019e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  001a7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001aa	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  001b0	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  001b3	ff d0		 call	 eax
  001b5	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1329[ebp], eax
  001bb	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1329[ebp]
  001c1	2b 4d b4	 sub	 ecx, DWORD PTR _ServerOnLine$94[ebp+4]
  001c4	89 4d b0	 mov	 DWORD PTR _ServerOnLine$94[ebp], ecx

; 510  : 					ServerOnLine.dwSetCount = m_pGameServiceOption->dwSetPlayerCount;

  001c7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001ca	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  001cd	8b 91 cc 00 00
	00		 mov	 edx, DWORD PTR [ecx+204]
  001d3	89 55 b8	 mov	 DWORD PTR _ServerOnLine$94[ebp+8], edx

; 511  : 					//发送数据
; 512  : 					m_pITCPSocketService->SendData(MDM_CS_SERVICE_INFO,SUB_CS_C_SERVER_ONLINE,&ServerOnLine,sizeof(ServerOnLine));

  001d6	6a 0c		 push	 12			; 0000000cH
  001d8	8d 45 b0	 lea	 eax, DWORD PTR _ServerOnLine$94[ebp]
  001db	50		 push	 eax
  001dc	6a 01		 push	 1
  001de	6a 02		 push	 2
  001e0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e3	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  001e6	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  001ec	8b 10		 mov	 edx, DWORD PTR [eax]
  001ee	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  001f4	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  001f7	ff d0		 call	 eax

; 513  : 
; 514  : 					return true;

  001f9	b0 01		 mov	 al, 1
  001fb	e9 44 1a 00 00	 jmp	 $LN1@OnEventTim
$LN57@OnEventTim:

; 515  : 				}
; 516  : 			case IDI_CONNECT_CORRESPOND:	//连接协调
; 517  : 				{
; 518  : 					//发起连接
; 519  : 					tagAddressInfo * pCorrespondAddress=&m_pInitParameter->m_CorrespondAddress;

  00200	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00203	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00206	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00209	89 4d ac	 mov	 DWORD PTR _pCorrespondAddress$93[ebp], ecx

; 520  : 					m_pITCPSocketService->Connect(pCorrespondAddress->szAddress,m_pInitParameter->m_wCorrespondPort);

  0020c	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0020f	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00212	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00216	52		 push	 edx
  00217	8b 45 ac	 mov	 eax, DWORD PTR _pCorrespondAddress$93[ebp]
  0021a	50		 push	 eax
  0021b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00221	8b 82 b0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147376]
  00227	8b 10		 mov	 edx, DWORD PTR [eax]
  00229	8b 89 b0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147376]
  0022f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00232	ff d0		 call	 eax

; 521  : 
; 522  : 					//构造提示
; 523  : 					TCHAR szString[512]=TEXT("");

  00234	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00239	88 85 ac fd ff
	ff		 mov	 BYTE PTR _szString$92[ebp], al
  0023f	68 ff 01 00 00	 push	 511			; 000001ffH
  00244	6a 00		 push	 0
  00246	8d 85 ad fd ff
	ff		 lea	 eax, DWORD PTR _szString$92[ebp+1]
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 _memset
  00252	83 c4 0c	 add	 esp, 12			; 0000000cH

; 524  : 					_sntprintf_s(szString,CountArray(szString),TEXT("正在连接协调服务器 [ %s:%d ]"),pCorrespondAddress->szAddress,m_pInitParameter->m_wCorrespondPort);

  00255	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00258	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0025b	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  0025f	52		 push	 edx
  00260	8b 45 ac	 mov	 eax, DWORD PTR _pCorrespondAddress$93[ebp]
  00263	50		 push	 eax
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@EEJNAPCD@?U?$PN?T?Z?A?$KM?$LN?S?P?$KN?$LF?w?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@
  00269	68 00 02 00 00	 push	 512			; 00000200H
  0026e	8d 8d ac fd ff
	ff		 lea	 ecx, DWORD PTR _szString$92[ebp]
  00274	51		 push	 ecx
  00275	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  0027a	83 c4 14	 add	 esp, 20			; 00000014H

; 525  : 
; 526  : 					//提示消息
; 527  : 					CTraceService::TraceString(szString,TraceLevel_Normal);

  0027d	6a 01		 push	 1
  0027f	8d 85 ac fd ff
	ff		 lea	 eax, DWORD PTR _szString$92[ebp]
  00285	50		 push	 eax
  00286	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0028c	83 c4 08	 add	 esp, 8

; 528  : 
; 529  : 					return true;

  0028f	b0 01		 mov	 al, 1
  00291	e9 ae 19 00 00	 jmp	 $LN1@OnEventTim
$LN58@OnEventTim:

; 530  : 				}
; 531  : 			case IDI_CONNECT_PERSONAL_ROOM_CORRESPOND:	//连接约战
; 532  : 				{
; 533  : 					//发起连接
; 534  : 					tagAddressInfo * pPrsnlRmCorrespondAddress=&m_pInitParameter->m_PrsnlRmCorrespondAddress;

  00296	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00299	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0029c	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0029f	89 8d a8 fd ff
	ff		 mov	 DWORD PTR _pPrsnlRmCorrespondAddress$91[ebp], ecx

; 535  : 
; 536  : 					if (m_pPrsnlRmITCPSocketService)

  002a5	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002a8	83 b8 c0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147392], 0
  002af	74 2b		 je	 SHORT $LN59@OnEventTim

; 537  : 					{
; 538  : 						m_pPrsnlRmITCPSocketService->Connect(pPrsnlRmCorrespondAddress->szAddress,m_pInitParameter->m_wPrsnlRmCorrespondPort);

  002b1	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002b4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  002b7	0f b7 51 2a	 movzx	 edx, WORD PTR [ecx+42]
  002bb	52		 push	 edx
  002bc	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR _pPrsnlRmCorrespondAddress$91[ebp]
  002c2	50		 push	 eax
  002c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c6	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  002c9	8b 82 c0 3f 02
	00		 mov	 eax, DWORD PTR [edx+147392]
  002cf	8b 10		 mov	 edx, DWORD PTR [eax]
  002d1	8b 89 c0 3f 02
	00		 mov	 ecx, DWORD PTR [ecx+147392]
  002d7	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  002da	ff d0		 call	 eax
$LN59@OnEventTim:

; 539  : 					}
; 540  : 					
; 541  : 
; 542  : 					//构造提示
; 543  : 					TCHAR szString[512]=TEXT("");

  002dc	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  002e1	88 85 a8 fb ff
	ff		 mov	 BYTE PTR _szString$90[ebp], al
  002e7	68 ff 01 00 00	 push	 511			; 000001ffH
  002ec	6a 00		 push	 0
  002ee	8d 85 a9 fb ff
	ff		 lea	 eax, DWORD PTR _szString$90[ebp+1]
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 _memset
  002fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 544  : 					_sntprintf_s(szString,CountArray(szString),TEXT("正在连接约战服务器 [ %s:%d ]"),pPrsnlRmCorrespondAddress->szAddress,m_pInitParameter->m_wPrsnlRmCorrespondPort);

  002fd	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00300	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00303	0f b7 51 2a	 movzx	 edx, WORD PTR [ecx+42]
  00307	52		 push	 edx
  00308	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR _pPrsnlRmCorrespondAddress$91[ebp]
  0030e	50		 push	 eax
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BAEBLECI@?U?$PN?T?Z?A?$KM?$LN?S?T?$LM?U?$LN?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@
  00314	68 00 02 00 00	 push	 512			; 00000200H
  00319	8d 8d a8 fb ff
	ff		 lea	 ecx, DWORD PTR _szString$90[ebp]
  0031f	51		 push	 ecx
  00320	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  00325	83 c4 14	 add	 esp, 20			; 00000014H

; 545  : 
; 546  : 					//提示消息
; 547  : 					CTraceService::TraceString(szString,TraceLevel_Normal);

  00328	6a 01		 push	 1
  0032a	8d 85 a8 fb ff
	ff		 lea	 eax, DWORD PTR _szString$90[ebp]
  00330	50		 push	 eax
  00331	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00337	83 c4 08	 add	 esp, 8

; 548  : 
; 549  : 					return true;

  0033a	b0 01		 mov	 al, 1
  0033c	e9 03 19 00 00	 jmp	 $LN1@OnEventTim
$LN60@OnEventTim:

; 550  : 				}
; 551  : 			case IDI_GAME_SERVICE_PULSE:	//服务维护
; 552  : 				{
; 553  : 					return true;

  00341	b0 01		 mov	 al, 1
  00343	e9 fc 18 00 00	 jmp	 $LN1@OnEventTim
$LN61@OnEventTim:

; 554  : 				}
; 555  : 			case IDI_DISTRIBUTE_ANDROID:	//分配机器
; 556  : 				{
; 557  : 					//约战房不分配机器人
; 558  : 					if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00348	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0034b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0034e	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00352	83 fa 10	 cmp	 edx, 16			; 00000010H
  00355	75 07		 jne	 SHORT $LN62@OnEventTim

; 559  : 					{
; 560  : 						return true;

  00357	b0 01		 mov	 al, 1
  00359	e9 e6 18 00 00	 jmp	 $LN1@OnEventTim
$LN62@OnEventTim:

; 561  : 					}
; 562  : 
; 563  : 					//动作处理
; 564  : 					if (m_AndroidUserManager.GetAndroidCount()>0 && m_pGameServiceOption->wServerType!=GAME_GENRE_MATCH)

  0035e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00361	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00367	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0036a	8b 90 28 de 00
	00		 mov	 edx, DWORD PTR [eax+56872]
  00370	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00373	ff d0		 call	 eax
  00375	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1330[ebp], ax
  0037c	0f b7 8d 1e 77
	fe ff		 movzx	 ecx, WORD PTR tv1330[ebp]
  00383	85 c9		 test	 ecx, ecx
  00385	0f 8e 4a 12 00
	00		 jle	 $LN63@OnEventTim
  0038b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0038e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00391	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00395	83 fa 04	 cmp	 edx, 4
  00398	0f 84 37 12 00
	00		 je	 $LN63@OnEventTim

; 565  : 					{
; 566  : 						//变量定义
; 567  : 						bool bAllowDynamicJoin=CServerRule::IsAllowDynamicJoin(m_pGameServiceOption->dwServerRule);

  0039e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003a1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003a4	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  003a7	52		 push	 edx
  003a8	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  003ad	83 c4 04	 add	 esp, 4
  003b0	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1331[ebp], al
  003b6	8a 85 1f 77 fe
	ff		 mov	 al, BYTE PTR tv1331[ebp]
  003bc	88 85 a7 fb ff
	ff		 mov	 BYTE PTR _bAllowDynamicJoin$89[ebp], al

; 568  : 						bool bAllowAndroidAttend=CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule);

  003c2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003c5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003c8	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  003cb	52		 push	 edx
  003cc	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  003d1	83 c4 04	 add	 esp, 4
  003d4	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1332[ebp], al
  003da	8a 85 1f 77 fe
	ff		 mov	 al, BYTE PTR tv1332[ebp]
  003e0	88 85 a6 fb ff
	ff		 mov	 BYTE PTR _bAllowAndroidAttend$88[ebp], al

; 569  : 						bool bAllowAndroidSimulate=CServerRule::IsAllowAndroidSimulate(m_pGameServiceOption->dwServerRule);

  003e6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003e9	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003ec	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  003ef	52		 push	 edx
  003f0	e8 00 00 00 00	 call	 ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidSimulate
  003f5	83 c4 04	 add	 esp, 4
  003f8	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1333[ebp], al
  003fe	8a 85 1f 77 fe
	ff		 mov	 al, BYTE PTR tv1333[ebp]
  00404	88 85 a5 fb ff
	ff		 mov	 BYTE PTR _bAllowAndroidSimulate$87[ebp], al

; 570  : 						bool bAllowAvertCheatMode=(CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule)&&(m_pGameServiceAttrib->wChairCount < MAX_CHAIR));

  0040a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0040d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00410	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00413	52		 push	 edx
  00414	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  00419	83 c4 04	 add	 esp, 4
  0041c	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1334[ebp], al
  00422	0f b6 85 1f 77
	fe ff		 movzx	 eax, BYTE PTR tv1334[ebp]
  00429	85 c0		 test	 eax, eax
  0042b	74 1d		 je	 SHORT $LN141@OnEventTim
  0042d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00430	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00433	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00437	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  0043c	7d 0c		 jge	 SHORT $LN141@OnEventTim
  0043e	c7 85 18 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv321[ebp], 1
  00448	eb 0a		 jmp	 SHORT $LN142@OnEventTim
$LN141@OnEventTim:
  0044a	c7 85 18 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv321[ebp], 0
$LN142@OnEventTim:
  00454	8a 8d 18 77 fe
	ff		 mov	 cl, BYTE PTR tv321[ebp]
  0045a	88 8d a4 fb ff
	ff		 mov	 BYTE PTR _bAllowAvertCheatMode$86[ebp], cl

; 571  : 
; 572  : 						//模拟处理
; 573  : 						if (bAllowAndroidSimulate==true && bAllowAvertCheatMode==false)

  00460	0f b6 85 a5 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAndroidSimulate$87[ebp]
  00467	83 f8 01	 cmp	 eax, 1
  0046a	0f 85 71 03 00
	00		 jne	 $LN64@OnEventTim
  00470	0f b6 85 a4 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAvertCheatMode$86[ebp]
  00477	85 c0		 test	 eax, eax
  00479	0f 85 62 03 00
	00		 jne	 $LN64@OnEventTim

; 574  : 						{
; 575  : 							//机器状态
; 576  : 							tagAndroidUserInfo AndroidSimulate; 
; 577  : 							m_AndroidUserManager.GetAndroidUserInfo(AndroidSimulate,ANDROID_SIMULATE);

  0047f	6a 01		 push	 1
  00481	8d 85 9c 9b ff
	ff		 lea	 eax, DWORD PTR _AndroidSimulate$85[ebp]
  00487	50		 push	 eax
  00488	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0048b	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00491	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00494	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  0049a	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  0049d	ff d2		 call	 edx

; 578  : 
; 579  : 							//机器处理
; 580  : 							if (AndroidSimulate.wFreeUserCount>0)

  0049f	0f b7 85 9c 9b
	ff ff		 movzx	 eax, WORD PTR _AndroidSimulate$85[ebp]
  004a6	85 c0		 test	 eax, eax
  004a8	0f 8e 33 03 00
	00		 jle	 $LN64@OnEventTim

; 581  : 							{
; 582  : 								for (WORD i=0;i<8;i++)

  004ae	33 c0		 xor	 eax, eax
  004b0	66 89 85 98 9b
	ff ff		 mov	 WORD PTR _i$84[ebp], ax
  004b7	eb 12		 jmp	 SHORT $LN6@OnEventTim
$LN4@OnEventTim:
  004b9	66 8b 85 98 9b
	ff ff		 mov	 ax, WORD PTR _i$84[ebp]
  004c0	66 83 c0 01	 add	 ax, 1
  004c4	66 89 85 98 9b
	ff ff		 mov	 WORD PTR _i$84[ebp], ax
$LN6@OnEventTim:
  004cb	0f b7 85 98 9b
	ff ff		 movzx	 eax, WORD PTR _i$84[ebp]
  004d2	83 f8 08	 cmp	 eax, 8
  004d5	0f 8d 06 03 00
	00		 jge	 $LN64@OnEventTim

; 583  : 								{
; 584  : 									//随机桌子
; 585  : 									WORD wTableID=rand()%(__max(m_pGameServiceOption->wTableCount/3,1));

  004db	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004de	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  004e1	0f b7 41 46	 movzx	 eax, WORD PTR [ecx+70]
  004e5	99		 cdq
  004e6	b9 03 00 00 00	 mov	 ecx, 3
  004eb	f7 f9		 idiv	 ecx
  004ed	83 f8 01	 cmp	 eax, 1
  004f0	7e 1a		 jle	 SHORT $LN143@OnEventTim
  004f2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  004f5	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  004f8	0f b7 40 46	 movzx	 eax, WORD PTR [eax+70]
  004fc	99		 cdq
  004fd	b9 03 00 00 00	 mov	 ecx, 3
  00502	f7 f9		 idiv	 ecx
  00504	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv353[ebp], eax
  0050a	eb 0a		 jmp	 SHORT $LN144@OnEventTim
$LN143@OnEventTim:
  0050c	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv353[ebp], 1
$LN144@OnEventTim:
  00516	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  0051c	99		 cdq
  0051d	f7 bd 1c 77 fe
	ff		 idiv	 DWORD PTR tv353[ebp]
  00523	66 89 95 94 9b
	ff ff		 mov	 WORD PTR _wTableID$83[ebp], dx

; 586  : 
; 587  : 									//获取桌子
; 588  : 									CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  0052a	0f b7 85 94 9b
	ff ff		 movzx	 eax, WORD PTR _wTableID$83[ebp]
  00531	50		 push	 eax
  00532	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00535	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0053b	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00540	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1335[ebp], eax
  00546	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1335[ebp]
  0054c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0054e	89 95 90 9b ff
	ff		 mov	 DWORD PTR _pTableFrame$82[ebp], edx

; 589  : 									if ((pTableFrame->IsGameStarted()==true)&&(bAllowDynamicJoin==false)) continue;

  00554	8b 85 90 9b ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$82[ebp]
  0055a	8b 10		 mov	 edx, DWORD PTR [eax]
  0055c	8b 8d 90 9b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$82[ebp]
  00562	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00565	ff d0		 call	 eax
  00567	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1336[ebp], al
  0056d	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1336[ebp]
  00574	83 f9 01	 cmp	 ecx, 1
  00577	75 10		 jne	 SHORT $LN66@OnEventTim
  00579	0f b6 85 a7 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowDynamicJoin$89[ebp]
  00580	85 c0		 test	 eax, eax
  00582	75 05		 jne	 SHORT $LN66@OnEventTim
  00584	e9 30 ff ff ff	 jmp	 $LN4@OnEventTim
$LN66@OnEventTim:

; 590  : 
; 591  : 									//桌子状况
; 592  : 									tagTableUserInfo TableUserInfo;
; 593  : 									WORD wUserSitCount=pTableFrame->GetTableUserInfo(TableUserInfo);

  00589	8d 85 88 9b ff
	ff		 lea	 eax, DWORD PTR _TableUserInfo$81[ebp]
  0058f	50		 push	 eax
  00590	8b 8d 90 9b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$82[ebp]
  00596	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  0059b	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1337[ebp], ax
  005a2	66 8b 8d 1e 77
	fe ff		 mov	 cx, WORD PTR tv1337[ebp]
  005a9	66 89 8d 84 9b
	ff ff		 mov	 WORD PTR _wUserSitCount$80[ebp], cx

; 594  : 
; 595  : 									//分配判断
; 596  : 									if (TableUserInfo.wTableUserCount>0) continue;

  005b0	0f b7 85 8a 9b
	ff ff		 movzx	 eax, WORD PTR _TableUserInfo$81[ebp+2]
  005b7	85 c0		 test	 eax, eax
  005b9	7e 05		 jle	 SHORT $LN67@OnEventTim
  005bb	e9 f9 fe ff ff	 jmp	 $LN4@OnEventTim
$LN67@OnEventTim:

; 597  : 									if ((wUserSitCount>=TableUserInfo.wMinUserCount)&&(m_pGameServiceAttrib->wChairCount<MAX_CHAIR)) continue;

  005c0	0f b7 85 88 9b
	ff ff		 movzx	 eax, WORD PTR _TableUserInfo$81[ebp]
  005c7	0f b7 8d 84 9b
	ff ff		 movzx	 ecx, WORD PTR _wUserSitCount$80[ebp]
  005ce	3b c8		 cmp	 ecx, eax
  005d0	7c 17		 jl	 SHORT $LN68@OnEventTim
  005d2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  005d5	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  005d8	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  005dc	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  005e2	7d 05		 jge	 SHORT $LN68@OnEventTim
  005e4	e9 d0 fe ff ff	 jmp	 $LN4@OnEventTim
$LN68@OnEventTim:

; 598  : 
; 599  : 									//坐下判断
; 600  : 									if (AndroidSimulate.wFreeUserCount>=TableUserInfo.wMinUserCount)

  005e9	0f b7 85 88 9b
	ff ff		 movzx	 eax, WORD PTR _TableUserInfo$81[ebp]
  005f0	0f b7 8d 9c 9b
	ff ff		 movzx	 ecx, WORD PTR _AndroidSimulate$85[ebp]
  005f7	3b c8		 cmp	 ecx, eax
  005f9	0f 8c dd 01 00
	00		 jl	 $LN69@OnEventTim

; 601  : 									{
; 602  : 										//变量定义
; 603  : 										WORD wHandleCount=0;

  005ff	33 c0		 xor	 eax, eax
  00601	66 89 85 80 9b
	ff ff		 mov	 WORD PTR _wHandleCount$79[ebp], ax

; 604  : 										WORD wWantAndroidCount=TableUserInfo.wMinUserCount;

  00608	66 8b 85 88 9b
	ff ff		 mov	 ax, WORD PTR _TableUserInfo$81[ebp]
  0060f	66 89 85 7c 9b
	ff ff		 mov	 WORD PTR _wWantAndroidCount$78[ebp], ax

; 605  : 
; 606  : 										//数据调整
; 607  : 										if (m_pGameServiceAttrib->wChairCount>TableUserInfo.wMinUserCount)

  00616	0f b7 85 88 9b
	ff ff		 movzx	 eax, WORD PTR _TableUserInfo$81[ebp]
  0061d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00620	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00623	0f b7 4a 02	 movzx	 ecx, WORD PTR [edx+2]
  00627	3b c8		 cmp	 ecx, eax
  00629	0f 8e aa 00 00
	00		 jle	 $LN70@OnEventTim

; 608  : 										{
; 609  : 											WORD wChairCount=m_pGameServiceAttrib->wChairCount;

  0062f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00632	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00635	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  00639	66 89 95 78 9b
	ff ff		 mov	 WORD PTR _wChairCount$77[ebp], dx

; 610  : 											WORD wFreeUserCount=AndroidSimulate.wFreeUserCount;

  00640	66 8b 85 9c 9b
	ff ff		 mov	 ax, WORD PTR _AndroidSimulate$85[ebp]
  00647	66 89 85 74 9b
	ff ff		 mov	 WORD PTR _wFreeUserCount$76[ebp], ax

; 611  : 											WORD wOffUserCount=__min(wChairCount,wFreeUserCount)-TableUserInfo.wMinUserCount;

  0064e	0f b7 85 74 9b
	ff ff		 movzx	 eax, WORD PTR _wFreeUserCount$76[ebp]
  00655	0f b7 8d 78 9b
	ff ff		 movzx	 ecx, WORD PTR _wChairCount$77[ebp]
  0065c	3b c8		 cmp	 ecx, eax
  0065e	7d 10		 jge	 SHORT $LN145@OnEventTim
  00660	66 8b 95 78 9b
	ff ff		 mov	 dx, WORD PTR _wChairCount$77[ebp]
  00667	66 89 95 1e 77
	fe ff		 mov	 WORD PTR tv398[ebp], dx
  0066e	eb 0e		 jmp	 SHORT $LN146@OnEventTim
$LN145@OnEventTim:
  00670	66 8b 85 74 9b
	ff ff		 mov	 ax, WORD PTR _wFreeUserCount$76[ebp]
  00677	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv398[ebp], ax
$LN146@OnEventTim:
  0067e	0f b7 8d 88 9b
	ff ff		 movzx	 ecx, WORD PTR _TableUserInfo$81[ebp]
  00685	0f b7 95 1e 77
	fe ff		 movzx	 edx, WORD PTR tv398[ebp]
  0068c	2b d1		 sub	 edx, ecx
  0068e	66 89 95 70 9b
	ff ff		 mov	 WORD PTR _wOffUserCount$75[ebp], dx

; 612  : 											wWantAndroidCount+=((wOffUserCount > 0) ? (rand()%(wOffUserCount+1)) : 0);

  00695	0f b7 85 70 9b
	ff ff		 movzx	 eax, WORD PTR _wOffUserCount$75[ebp]
  0069c	85 c0		 test	 eax, eax
  0069e	7e 1b		 jle	 SHORT $LN147@OnEventTim
  006a0	0f b7 b5 70 9b
	ff ff		 movzx	 esi, WORD PTR _wOffUserCount$75[ebp]
  006a7	83 c6 01	 add	 esi, 1
  006aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  006b0	99		 cdq
  006b1	f7 fe		 idiv	 esi
  006b3	89 95 1c 77 fe
	ff		 mov	 DWORD PTR tv409[ebp], edx
  006b9	eb 0a		 jmp	 SHORT $LN148@OnEventTim
$LN147@OnEventTim:
  006bb	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN148@OnEventTim:
  006c5	0f b7 8d 7c 9b
	ff ff		 movzx	 ecx, WORD PTR _wWantAndroidCount$78[ebp]
  006cc	03 8d 1c 77 fe
	ff		 add	 ecx, DWORD PTR tv409[ebp]
  006d2	66 89 8d 7c 9b
	ff ff		 mov	 WORD PTR _wWantAndroidCount$78[ebp], cx
$LN70@OnEventTim:

; 613  : 										}
; 614  : 
; 615  : 										//坐下处理
; 616  : 										for (WORD j=0;j<AndroidSimulate.wFreeUserCount;j++)

  006d9	33 c0		 xor	 eax, eax
  006db	66 89 85 6c 9b
	ff ff		 mov	 WORD PTR _j$74[ebp], ax
  006e2	eb 12		 jmp	 SHORT $LN9@OnEventTim
$LN7@OnEventTim:
  006e4	66 8b 85 6c 9b
	ff ff		 mov	 ax, WORD PTR _j$74[ebp]
  006eb	66 83 c0 01	 add	 ax, 1
  006ef	66 89 85 6c 9b
	ff ff		 mov	 WORD PTR _j$74[ebp], ax
$LN9@OnEventTim:
  006f6	0f b7 85 9c 9b
	ff ff		 movzx	 eax, WORD PTR _AndroidSimulate$85[ebp]
  006fd	0f b7 8d 6c 9b
	ff ff		 movzx	 ecx, WORD PTR _j$74[ebp]
  00704	3b c8		 cmp	 ecx, eax
  00706	0f 8d c3 00 00
	00		 jge	 $LN8@OnEventTim

; 617  : 										{
; 618  : 											//变量定义
; 619  : 											WORD wChairID=pTableFrame->GetRandNullChairID();

  0070c	8b 8d 90 9b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$82[ebp]
  00712	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00717	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1338[ebp], ax
  0071e	66 8b 85 1e 77
	fe ff		 mov	 ax, WORD PTR tv1338[ebp]
  00725	66 89 85 68 9b
	ff ff		 mov	 WORD PTR _wChairID$73[ebp], ax

; 620  : 
; 621  : 											//无效过滤
; 622  : 											//ASSERT(wChairID!=INVALID_CHAIR);
; 623  : 											if (wChairID==INVALID_CHAIR) continue;

  0072c	0f b7 85 68 9b
	ff ff		 movzx	 eax, WORD PTR _wChairID$73[ebp]
  00733	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00738	75 02		 jne	 SHORT $LN71@OnEventTim
  0073a	eb a8		 jmp	 SHORT $LN7@OnEventTim
$LN71@OnEventTim:

; 624  : 
; 625  : 											//用户坐下
; 626  : 											IAndroidUserItem * pIAndroidUserItem=AndroidSimulate.pIAndroidUserFree[j];

  0073c	0f b7 85 6c 9b
	ff ff		 movzx	 eax, WORD PTR _j$74[ebp]
  00743	8b 8c 85 a4 9b
	ff ff		 mov	 ecx, DWORD PTR _AndroidSimulate$85[ebp+eax*4+8]
  0074a	89 8d 64 9b ff
	ff		 mov	 DWORD PTR _pIAndroidUserItem$72[ebp], ecx

; 627  : 											if (pTableFrame->PerformSitDownAction(wChairID,pIAndroidUserItem->GetMeUserItem())==true)

  00750	8b 85 64 9b ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$72[ebp]
  00756	8b 10		 mov	 edx, DWORD PTR [eax]
  00758	8b 8d 64 9b ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$72[ebp]
  0075e	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00761	ff d0		 call	 eax
  00763	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1339[ebp], eax
  00769	6a 00		 push	 0
  0076b	6a 00		 push	 0
  0076d	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1339[ebp]
  00773	51		 push	 ecx
  00774	0f b7 95 68 9b
	ff ff		 movzx	 edx, WORD PTR _wChairID$73[ebp]
  0077b	52		 push	 edx
  0077c	8b 85 90 9b ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$82[ebp]
  00782	8b 10		 mov	 edx, DWORD PTR [eax]
  00784	8b 8d 90 9b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$82[ebp]
  0078a	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  00790	ff d0		 call	 eax
  00792	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1340[ebp], al
  00798	0f b6 8d 1b 77
	fe ff		 movzx	 ecx, BYTE PTR tv1340[ebp]
  0079f	83 f9 01	 cmp	 ecx, 1
  007a2	75 26		 jne	 SHORT $LN72@OnEventTim

; 628  : 											{
; 629  : 												//设置变量
; 630  : 												wHandleCount++;

  007a4	66 8b 85 80 9b
	ff ff		 mov	 ax, WORD PTR _wHandleCount$79[ebp]
  007ab	66 83 c0 01	 add	 ax, 1
  007af	66 89 85 80 9b
	ff ff		 mov	 WORD PTR _wHandleCount$79[ebp], ax

; 631  : 
; 632  : 												//完成判断
; 633  : 												if (wHandleCount>=wWantAndroidCount) 

  007b6	0f b7 85 7c 9b
	ff ff		 movzx	 eax, WORD PTR _wWantAndroidCount$78[ebp]
  007bd	0f b7 8d 80 9b
	ff ff		 movzx	 ecx, WORD PTR _wHandleCount$79[ebp]
  007c4	3b c8		 cmp	 ecx, eax
  007c6	7c 02		 jl	 SHORT $LN72@OnEventTim

; 634  : 												{
; 635  : 													break;

  007c8	eb 05		 jmp	 SHORT $LN8@OnEventTim
$LN72@OnEventTim:

; 636  : 												}
; 637  : 											}
; 638  : 										}

  007ca	e9 15 ff ff ff	 jmp	 $LN7@OnEventTim
$LN8@OnEventTim:

; 639  : 
; 640  : 										if(wHandleCount > 0) break;

  007cf	0f b7 85 80 9b
	ff ff		 movzx	 eax, WORD PTR _wHandleCount$79[ebp]
  007d6	85 c0		 test	 eax, eax
  007d8	7e 02		 jle	 SHORT $LN69@OnEventTim
  007da	eb 05		 jmp	 SHORT $LN64@OnEventTim
$LN69@OnEventTim:

; 641  : 									}
; 642  : 								}

  007dc	e9 d8 fc ff ff	 jmp	 $LN4@OnEventTim
$LN64@OnEventTim:

; 643  : 							}
; 644  : 						}
; 645  : 
; 646  : 						//陪打处理
; 647  : 						if (bAllowAndroidAttend==true)

  007e1	0f b6 85 a6 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAndroidAttend$88[ebp]
  007e8	83 f8 01	 cmp	 eax, 1
  007eb	0f 85 8e 04 00
	00		 jne	 $LN75@OnEventTim

; 648  : 						{
; 649  : 							//被动状态
; 650  : 							tagAndroidUserInfo AndroidPassivity;
; 651  : 							m_AndroidUserManager.GetAndroidUserInfo(AndroidPassivity,ANDROID_PASSIVITY);

  007f1	6a 02		 push	 2
  007f3	8d 85 5c 3b ff
	ff		 lea	 eax, DWORD PTR _AndroidPassivity$71[ebp]
  007f9	50		 push	 eax
  007fa	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  007fd	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00803	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00806	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  0080c	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  0080f	ff d2		 call	 edx

; 652  : 
; 653  : 							if(bAllowAvertCheatMode)

  00811	0f b6 85 a4 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAvertCheatMode$86[ebp]
  00818	85 c0		 test	 eax, eax
  0081a	0f 84 97 00 00
	00		 je	 $LN76@OnEventTim

; 654  : 							{
; 655  : 								//坐下处理
; 656  : 								for (WORD j=0;j<AndroidPassivity.wFreeUserCount;j++)

  00820	33 c0		 xor	 eax, eax
  00822	66 89 85 58 3b
	ff ff		 mov	 WORD PTR _j$70[ebp], ax
  00829	eb 12		 jmp	 SHORT $LN12@OnEventTim
$LN10@OnEventTim:
  0082b	66 8b 85 58 3b
	ff ff		 mov	 ax, WORD PTR _j$70[ebp]
  00832	66 83 c0 01	 add	 ax, 1
  00836	66 89 85 58 3b
	ff ff		 mov	 WORD PTR _j$70[ebp], ax
$LN12@OnEventTim:
  0083d	0f b7 85 5c 3b
	ff ff		 movzx	 eax, WORD PTR _AndroidPassivity$71[ebp]
  00844	0f b7 8d 58 3b
	ff ff		 movzx	 ecx, WORD PTR _j$70[ebp]
  0084b	3b c8		 cmp	 ecx, eax
  0084d	7d 63		 jge	 SHORT $LN11@OnEventTim

; 657  : 								{
; 658  : 									IAndroidUserItem * pIAndroidUserItem=AndroidPassivity.pIAndroidUserFree[j];

  0084f	0f b7 85 58 3b
	ff ff		 movzx	 eax, WORD PTR _j$70[ebp]
  00856	8b 8c 85 64 3b
	ff ff		 mov	 ecx, DWORD PTR _AndroidPassivity$71[ebp+eax*4+8]
  0085d	89 8d 54 3b ff
	ff		 mov	 DWORD PTR _pIAndroidUserItem$69[ebp], ecx

; 659  : 									if (InsertDistribute(pIAndroidUserItem->GetMeUserItem())==true) return true;

  00863	8b 85 54 3b ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$69[ebp]
  00869	8b 10		 mov	 edx, DWORD PTR [eax]
  0086b	8b 8d 54 3b ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$69[ebp]
  00871	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00874	ff d0		 call	 eax
  00876	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1341[ebp], eax
  0087c	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1341[ebp]
  00882	51		 push	 ecx
  00883	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00886	83 c1 04	 add	 ecx, 4
  00889	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0088c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0088f	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00892	ff d2		 call	 edx
  00894	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1342[ebp], al
  0089a	0f b6 85 1b 77
	fe ff		 movzx	 eax, BYTE PTR tv1342[ebp]
  008a1	83 f8 01	 cmp	 eax, 1
  008a4	75 07		 jne	 SHORT $LN78@OnEventTim
  008a6	b0 01		 mov	 al, 1
  008a8	e9 97 13 00 00	 jmp	 $LN1@OnEventTim
$LN78@OnEventTim:

; 660  : 								}

  008ad	e9 79 ff ff ff	 jmp	 $LN10@OnEventTim
$LN11@OnEventTim:

; 661  : 							}
; 662  : 							else

  008b2	e9 c8 03 00 00	 jmp	 $LN75@OnEventTim
$LN76@OnEventTim:

; 663  : 							{
; 664  : 								//被动处理
; 665  : 								if (AndroidPassivity.wFreeUserCount>0)

  008b7	0f b7 85 5c 3b
	ff ff		 movzx	 eax, WORD PTR _AndroidPassivity$71[ebp]
  008be	85 c0		 test	 eax, eax
  008c0	0f 8e b9 03 00
	00		 jle	 $LN75@OnEventTim

; 666  : 								{
; 667  : 									//百人游戏
; 668  : 									if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR)

  008c6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  008c9	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  008cc	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  008d0	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  008d6	0f 8c c1 01 00
	00		 jl	 $LN80@OnEventTim

; 669  : 									{
; 670  : 										for (INT_PTR i=0;i<(m_pGameServiceOption->wTableCount);i++)

  008dc	c7 85 50 3b ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$68[ebp], 0
  008e6	eb 0f		 jmp	 SHORT $LN15@OnEventTim
$LN13@OnEventTim:
  008e8	8b 85 50 3b ff
	ff		 mov	 eax, DWORD PTR _i$68[ebp]
  008ee	83 c0 01	 add	 eax, 1
  008f1	89 85 50 3b ff
	ff		 mov	 DWORD PTR _i$68[ebp], eax
$LN15@OnEventTim:
  008f7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  008fa	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  008fd	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00901	39 95 50 3b ff
	ff		 cmp	 DWORD PTR _i$68[ebp], edx
  00907	0f 8d 8b 01 00
	00		 jge	 $LN14@OnEventTim

; 671  : 										{
; 672  : 											//获取桌子
; 673  : 											CTableFrame * pTableFrame=m_TableFrameArray[i];

  0090d	8b 85 50 3b ff
	ff		 mov	 eax, DWORD PTR _i$68[ebp]
  00913	50		 push	 eax
  00914	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00917	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0091d	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00922	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1343[ebp], eax
  00928	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1343[ebp]
  0092e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00930	89 95 4c 3b ff
	ff		 mov	 DWORD PTR _pTableFrame$67[ebp], edx

; 674  : 											if ((pTableFrame->IsGameStarted()==true)&&(bAllowDynamicJoin==false)) continue;

  00936	8b 85 4c 3b ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$67[ebp]
  0093c	8b 10		 mov	 edx, DWORD PTR [eax]
  0093e	8b 8d 4c 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$67[ebp]
  00944	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00947	ff d0		 call	 eax
  00949	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1344[ebp], al
  0094f	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1344[ebp]
  00956	83 f9 01	 cmp	 ecx, 1
  00959	75 0d		 jne	 SHORT $LN82@OnEventTim
  0095b	0f b6 85 a7 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowDynamicJoin$89[ebp]
  00962	85 c0		 test	 eax, eax
  00964	75 02		 jne	 SHORT $LN82@OnEventTim
  00966	eb 80		 jmp	 SHORT $LN13@OnEventTim
$LN82@OnEventTim:

; 675  : 
; 676  : 											//桌子状况
; 677  : 											tagTableUserInfo TableUserInfo;
; 678  : 											WORD wUserSitCount=pTableFrame->GetTableUserInfo(TableUserInfo);

  00968	8d 85 44 3b ff
	ff		 lea	 eax, DWORD PTR _TableUserInfo$66[ebp]
  0096e	50		 push	 eax
  0096f	8b 8d 4c 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$67[ebp]
  00975	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  0097a	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1345[ebp], ax
  00981	66 8b 8d 1e 77
	fe ff		 mov	 cx, WORD PTR tv1345[ebp]
  00988	66 89 8d 40 3b
	ff ff		 mov	 WORD PTR _wUserSitCount$65[ebp], cx

; 679  : 
; 680  : 											//分配判断
; 681  : 											if (wUserSitCount>m_pGameServiceAttrib->wChairCount*2/3) continue;

  0098f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00992	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00995	0f b7 41 02	 movzx	 eax, WORD PTR [ecx+2]
  00999	d1 e0		 shl	 eax, 1
  0099b	99		 cdq
  0099c	b9 03 00 00 00	 mov	 ecx, 3
  009a1	f7 f9		 idiv	 ecx
  009a3	0f b7 95 40 3b
	ff ff		 movzx	 edx, WORD PTR _wUserSitCount$65[ebp]
  009aa	3b d0		 cmp	 edx, eax
  009ac	7e 05		 jle	 SHORT $LN83@OnEventTim
  009ae	e9 35 ff ff ff	 jmp	 $LN13@OnEventTim
$LN83@OnEventTim:

; 682  : 
; 683  : 											//变量定义
; 684  : 											IServerUserItem * pIServerUserItem=NULL;

  009b3	c7 85 3c 3b ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItem$64[ebp], 0

; 685  : 											WORD wChairID=pTableFrame->GetRandNullChairID();

  009bd	8b 8d 4c 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$67[ebp]
  009c3	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  009c8	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1346[ebp], ax
  009cf	66 8b 85 1e 77
	fe ff		 mov	 ax, WORD PTR tv1346[ebp]
  009d6	66 89 85 38 3b
	ff ff		 mov	 WORD PTR _wChairID$63[ebp], ax

; 686  : 
; 687  : 											//无效过滤
; 688  : 											//ASSERT(wChairID!=INVALID_CHAIR);
; 689  : 											if (wChairID==INVALID_CHAIR) continue;

  009dd	0f b7 85 38 3b
	ff ff		 movzx	 eax, WORD PTR _wChairID$63[ebp]
  009e4	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  009e9	75 05		 jne	 SHORT $LN84@OnEventTim
  009eb	e9 f8 fe ff ff	 jmp	 $LN13@OnEventTim
$LN84@OnEventTim:

; 690  : 
; 691  : 											//坐下处理
; 692  : 											for (WORD j=0;j<AndroidPassivity.wFreeUserCount;j++)

  009f0	33 c0		 xor	 eax, eax
  009f2	66 89 85 34 3b
	ff ff		 mov	 WORD PTR _j$62[ebp], ax
  009f9	eb 12		 jmp	 SHORT $LN18@OnEventTim
$LN16@OnEventTim:
  009fb	66 8b 85 34 3b
	ff ff		 mov	 ax, WORD PTR _j$62[ebp]
  00a02	66 83 c0 01	 add	 ax, 1
  00a06	66 89 85 34 3b
	ff ff		 mov	 WORD PTR _j$62[ebp], ax
$LN18@OnEventTim:
  00a0d	0f b7 85 5c 3b
	ff ff		 movzx	 eax, WORD PTR _AndroidPassivity$71[ebp]
  00a14	0f b7 8d 34 3b
	ff ff		 movzx	 ecx, WORD PTR _j$62[ebp]
  00a1b	3b c8		 cmp	 ecx, eax
  00a1d	7d 74		 jge	 SHORT $LN17@OnEventTim

; 693  : 											{
; 694  : 												IAndroidUserItem * pIAndroidUserItem=AndroidPassivity.pIAndroidUserFree[j];

  00a1f	0f b7 85 34 3b
	ff ff		 movzx	 eax, WORD PTR _j$62[ebp]
  00a26	8b 8c 85 64 3b
	ff ff		 mov	 ecx, DWORD PTR _AndroidPassivity$71[ebp+eax*4+8]
  00a2d	89 8d 30 3b ff
	ff		 mov	 DWORD PTR _pIAndroidUserItem$61[ebp], ecx

; 695  : 												if (pTableFrame->PerformSitDownAction(wChairID,pIAndroidUserItem->GetMeUserItem())==true) return true;

  00a33	8b 85 30 3b ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$61[ebp]
  00a39	8b 10		 mov	 edx, DWORD PTR [eax]
  00a3b	8b 8d 30 3b ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$61[ebp]
  00a41	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00a44	ff d0		 call	 eax
  00a46	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1347[ebp], eax
  00a4c	6a 00		 push	 0
  00a4e	6a 00		 push	 0
  00a50	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1347[ebp]
  00a56	51		 push	 ecx
  00a57	0f b7 95 38 3b
	ff ff		 movzx	 edx, WORD PTR _wChairID$63[ebp]
  00a5e	52		 push	 edx
  00a5f	8b 85 4c 3b ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$67[ebp]
  00a65	8b 10		 mov	 edx, DWORD PTR [eax]
  00a67	8b 8d 4c 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$67[ebp]
  00a6d	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  00a73	ff d0		 call	 eax
  00a75	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1348[ebp], al
  00a7b	0f b6 8d 1b 77
	fe ff		 movzx	 ecx, BYTE PTR tv1348[ebp]
  00a82	83 f9 01	 cmp	 ecx, 1
  00a85	75 07		 jne	 SHORT $LN85@OnEventTim
  00a87	b0 01		 mov	 al, 1
  00a89	e9 b6 11 00 00	 jmp	 $LN1@OnEventTim
$LN85@OnEventTim:

; 696  : 											}

  00a8e	e9 68 ff ff ff	 jmp	 $LN16@OnEventTim
$LN17@OnEventTim:

; 697  : 										}

  00a93	e9 50 fe ff ff	 jmp	 $LN13@OnEventTim
$LN14@OnEventTim:

; 698  : 									}
; 699  : 									else

  00a98	e9 e2 01 00 00	 jmp	 $LN75@OnEventTim
$LN80@OnEventTim:

; 700  : 									{
; 701  : 										for (INT_PTR i=0;i<m_pGameServiceOption->wTableCount;i++)

  00a9d	c7 85 2c 3b ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$60[ebp], 0
  00aa7	eb 0f		 jmp	 SHORT $LN21@OnEventTim
$LN19@OnEventTim:
  00aa9	8b 85 2c 3b ff
	ff		 mov	 eax, DWORD PTR _i$60[ebp]
  00aaf	83 c0 01	 add	 eax, 1
  00ab2	89 85 2c 3b ff
	ff		 mov	 DWORD PTR _i$60[ebp], eax
$LN21@OnEventTim:
  00ab8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00abb	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00abe	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00ac2	39 95 2c 3b ff
	ff		 cmp	 DWORD PTR _i$60[ebp], edx
  00ac8	0f 8d b1 01 00
	00		 jge	 $LN75@OnEventTim

; 702  : 										{
; 703  : 											//获取桌子
; 704  : 											CTableFrame * pTableFrame=m_TableFrameArray[i];

  00ace	8b 85 2c 3b ff
	ff		 mov	 eax, DWORD PTR _i$60[ebp]
  00ad4	50		 push	 eax
  00ad5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad8	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00ade	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00ae3	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1349[ebp], eax
  00ae9	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1349[ebp]
  00aef	8b 11		 mov	 edx, DWORD PTR [ecx]
  00af1	89 95 28 3b ff
	ff		 mov	 DWORD PTR _pTableFrame$59[ebp], edx

; 705  : 											if ((pTableFrame->IsGameStarted()==true)&&(bAllowDynamicJoin==false)) continue;

  00af7	8b 85 28 3b ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$59[ebp]
  00afd	8b 10		 mov	 edx, DWORD PTR [eax]
  00aff	8b 8d 28 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$59[ebp]
  00b05	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00b08	ff d0		 call	 eax
  00b0a	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1350[ebp], al
  00b10	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1350[ebp]
  00b17	83 f9 01	 cmp	 ecx, 1
  00b1a	75 0d		 jne	 SHORT $LN86@OnEventTim
  00b1c	0f b6 85 a7 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowDynamicJoin$89[ebp]
  00b23	85 c0		 test	 eax, eax
  00b25	75 02		 jne	 SHORT $LN86@OnEventTim
  00b27	eb 80		 jmp	 SHORT $LN19@OnEventTim
$LN86@OnEventTim:

; 706  : 
; 707  : 											//桌子状况
; 708  : 											tagTableUserInfo TableUserInfo;
; 709  : 											WORD wUserSitCount=pTableFrame->GetTableUserInfo(TableUserInfo);

  00b29	8d 85 20 3b ff
	ff		 lea	 eax, DWORD PTR _TableUserInfo$58[ebp]
  00b2f	50		 push	 eax
  00b30	8b 8d 28 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$59[ebp]
  00b36	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  00b3b	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1351[ebp], ax
  00b42	66 8b 8d 1e 77
	fe ff		 mov	 cx, WORD PTR tv1351[ebp]
  00b49	66 89 8d 1c 3b
	ff ff		 mov	 WORD PTR _wUserSitCount$57[ebp], cx

; 710  : 
; 711  : 											//分配判断
; 712  : 											if (wUserSitCount==0) continue;

  00b50	0f b7 85 1c 3b
	ff ff		 movzx	 eax, WORD PTR _wUserSitCount$57[ebp]
  00b57	85 c0		 test	 eax, eax
  00b59	75 05		 jne	 SHORT $LN87@OnEventTim
  00b5b	e9 49 ff ff ff	 jmp	 $LN19@OnEventTim
$LN87@OnEventTim:

; 713  : 											if (TableUserInfo.wTableUserCount==0) continue;

  00b60	0f b7 85 22 3b
	ff ff		 movzx	 eax, WORD PTR _TableUserInfo$58[ebp+2]
  00b67	85 c0		 test	 eax, eax
  00b69	75 05		 jne	 SHORT $LN88@OnEventTim
  00b6b	e9 39 ff ff ff	 jmp	 $LN19@OnEventTim
$LN88@OnEventTim:

; 714  : 											if ((wUserSitCount>=TableUserInfo.wMinUserCount)&&(rand()%100>50)) continue;

  00b70	0f b7 85 20 3b
	ff ff		 movzx	 eax, WORD PTR _TableUserInfo$58[ebp]
  00b77	0f b7 8d 1c 3b
	ff ff		 movzx	 ecx, WORD PTR _wUserSitCount$57[ebp]
  00b7e	3b c8		 cmp	 ecx, eax
  00b80	7c 18		 jl	 SHORT $LN89@OnEventTim
  00b82	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00b88	99		 cdq
  00b89	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00b8e	f7 f9		 idiv	 ecx
  00b90	83 fa 32	 cmp	 edx, 50			; 00000032H
  00b93	7e 05		 jle	 SHORT $LN89@OnEventTim
  00b95	e9 0f ff ff ff	 jmp	 $LN19@OnEventTim
$LN89@OnEventTim:

; 715  : 
; 716  : 											//变量定义
; 717  : 											IServerUserItem * pIServerUserItem=NULL;

  00b9a	c7 85 18 3b ff
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItem$56[ebp], 0

; 718  : 											WORD wChairID=pTableFrame->GetRandNullChairID();

  00ba4	8b 8d 28 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$59[ebp]
  00baa	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00baf	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1352[ebp], ax
  00bb6	66 8b 85 1e 77
	fe ff		 mov	 ax, WORD PTR tv1352[ebp]
  00bbd	66 89 85 14 3b
	ff ff		 mov	 WORD PTR _wChairID$55[ebp], ax

; 719  : 
; 720  : 											//无效过滤
; 721  : 											//ASSERT(wChairID!=INVALID_CHAIR);
; 722  : 											if (wChairID==INVALID_CHAIR) continue;

  00bc4	0f b7 85 14 3b
	ff ff		 movzx	 eax, WORD PTR _wChairID$55[ebp]
  00bcb	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00bd0	75 05		 jne	 SHORT $LN90@OnEventTim
  00bd2	e9 d2 fe ff ff	 jmp	 $LN19@OnEventTim
$LN90@OnEventTim:

; 723  : 
; 724  : 											//坐下处理
; 725  : 											for (WORD j=0;j<AndroidPassivity.wFreeUserCount;j++)

  00bd7	33 c0		 xor	 eax, eax
  00bd9	66 89 85 10 3b
	ff ff		 mov	 WORD PTR _j$54[ebp], ax
  00be0	eb 12		 jmp	 SHORT $LN24@OnEventTim
$LN22@OnEventTim:
  00be2	66 8b 85 10 3b
	ff ff		 mov	 ax, WORD PTR _j$54[ebp]
  00be9	66 83 c0 01	 add	 ax, 1
  00bed	66 89 85 10 3b
	ff ff		 mov	 WORD PTR _j$54[ebp], ax
$LN24@OnEventTim:
  00bf4	0f b7 85 5c 3b
	ff ff		 movzx	 eax, WORD PTR _AndroidPassivity$71[ebp]
  00bfb	0f b7 8d 10 3b
	ff ff		 movzx	 ecx, WORD PTR _j$54[ebp]
  00c02	3b c8		 cmp	 ecx, eax
  00c04	7d 74		 jge	 SHORT $LN23@OnEventTim

; 726  : 											{
; 727  : 												IAndroidUserItem * pIAndroidUserItem=AndroidPassivity.pIAndroidUserFree[j];

  00c06	0f b7 85 10 3b
	ff ff		 movzx	 eax, WORD PTR _j$54[ebp]
  00c0d	8b 8c 85 64 3b
	ff ff		 mov	 ecx, DWORD PTR _AndroidPassivity$71[ebp+eax*4+8]
  00c14	89 8d 0c 3b ff
	ff		 mov	 DWORD PTR _pIAndroidUserItem$53[ebp], ecx

; 728  : 												if (pTableFrame->PerformSitDownAction(wChairID,pIAndroidUserItem->GetMeUserItem())==true) return true;

  00c1a	8b 85 0c 3b ff
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$53[ebp]
  00c20	8b 10		 mov	 edx, DWORD PTR [eax]
  00c22	8b 8d 0c 3b ff
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$53[ebp]
  00c28	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00c2b	ff d0		 call	 eax
  00c2d	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1353[ebp], eax
  00c33	6a 00		 push	 0
  00c35	6a 00		 push	 0
  00c37	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1353[ebp]
  00c3d	51		 push	 ecx
  00c3e	0f b7 95 14 3b
	ff ff		 movzx	 edx, WORD PTR _wChairID$55[ebp]
  00c45	52		 push	 edx
  00c46	8b 85 28 3b ff
	ff		 mov	 eax, DWORD PTR _pTableFrame$59[ebp]
  00c4c	8b 10		 mov	 edx, DWORD PTR [eax]
  00c4e	8b 8d 28 3b ff
	ff		 mov	 ecx, DWORD PTR _pTableFrame$59[ebp]
  00c54	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  00c5a	ff d0		 call	 eax
  00c5c	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1354[ebp], al
  00c62	0f b6 8d 1b 77
	fe ff		 movzx	 ecx, BYTE PTR tv1354[ebp]
  00c69	83 f9 01	 cmp	 ecx, 1
  00c6c	75 07		 jne	 SHORT $LN91@OnEventTim
  00c6e	b0 01		 mov	 al, 1
  00c70	e9 cf 0f 00 00	 jmp	 $LN1@OnEventTim
$LN91@OnEventTim:

; 729  : 											}

  00c75	e9 68 ff ff ff	 jmp	 $LN22@OnEventTim
$LN23@OnEventTim:

; 730  : 										}

  00c7a	e9 2a fe ff ff	 jmp	 $LN19@OnEventTim
$LN75@OnEventTim:

; 731  : 									}
; 732  : 								}
; 733  : 							}
; 734  : 						}
; 735  : 
; 736  : 						//陪打处理
; 737  : 						if (bAllowAndroidAttend==true)

  00c7f	0f b6 85 a6 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAndroidAttend$88[ebp]
  00c86	83 f8 01	 cmp	 eax, 1
  00c89	0f 85 cc 02 00
	00		 jne	 $LN92@OnEventTim

; 738  : 						{
; 739  : 							//主动状态
; 740  : 							tagAndroidUserInfo AndroidInitiative;
; 741  : 							m_AndroidUserManager.GetAndroidUserInfo(AndroidInitiative,ANDROID_INITIATIVE);

  00c8f	6a 04		 push	 4
  00c91	8d 85 04 db fe
	ff		 lea	 eax, DWORD PTR _AndroidInitiative$52[ebp]
  00c97	50		 push	 eax
  00c98	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c9b	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00ca1	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00ca4	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  00caa	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00cad	ff d2		 call	 edx

; 742  : 							WORD wAllAndroidCount = AndroidInitiative.wFreeUserCount+AndroidInitiative.wPlayUserCount+AndroidInitiative.wSitdownUserCount;

  00caf	0f b7 85 08 db
	fe ff		 movzx	 eax, WORD PTR _AndroidInitiative$52[ebp+4]
  00cb6	0f b7 8d 06 db
	fe ff		 movzx	 ecx, WORD PTR _AndroidInitiative$52[ebp+2]
  00cbd	0f b7 95 04 db
	fe ff		 movzx	 edx, WORD PTR _AndroidInitiative$52[ebp]
  00cc4	03 d1		 add	 edx, ecx
  00cc6	03 d0		 add	 edx, eax
  00cc8	66 89 95 00 db
	fe ff		 mov	 WORD PTR _wAllAndroidCount$51[ebp], dx

; 743  : 
; 744  : 							if(bAllowAvertCheatMode)

  00ccf	0f b6 85 a4 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAvertCheatMode$86[ebp]
  00cd6	85 c0		 test	 eax, eax
  00cd8	0f 84 97 00 00
	00		 je	 $LN93@OnEventTim

; 745  : 							{
; 746  : 								//坐下处理
; 747  : 								for (WORD j=0;j<AndroidInitiative.wFreeUserCount;j++)

  00cde	33 c0		 xor	 eax, eax
  00ce0	66 89 85 fc da
	fe ff		 mov	 WORD PTR _j$50[ebp], ax
  00ce7	eb 12		 jmp	 SHORT $LN27@OnEventTim
$LN25@OnEventTim:
  00ce9	66 8b 85 fc da
	fe ff		 mov	 ax, WORD PTR _j$50[ebp]
  00cf0	66 83 c0 01	 add	 ax, 1
  00cf4	66 89 85 fc da
	fe ff		 mov	 WORD PTR _j$50[ebp], ax
$LN27@OnEventTim:
  00cfb	0f b7 85 04 db
	fe ff		 movzx	 eax, WORD PTR _AndroidInitiative$52[ebp]
  00d02	0f b7 8d fc da
	fe ff		 movzx	 ecx, WORD PTR _j$50[ebp]
  00d09	3b c8		 cmp	 ecx, eax
  00d0b	7d 63		 jge	 SHORT $LN26@OnEventTim

; 748  : 								{
; 749  : 									IAndroidUserItem * pIAndroidUserItem=AndroidInitiative.pIAndroidUserFree[j];

  00d0d	0f b7 85 fc da
	fe ff		 movzx	 eax, WORD PTR _j$50[ebp]
  00d14	8b 8c 85 0c db
	fe ff		 mov	 ecx, DWORD PTR _AndroidInitiative$52[ebp+eax*4+8]
  00d1b	89 8d f8 da fe
	ff		 mov	 DWORD PTR _pIAndroidUserItem$49[ebp], ecx

; 750  : 									if (InsertDistribute(pIAndroidUserItem->GetMeUserItem())==true) return true;

  00d21	8b 85 f8 da fe
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$49[ebp]
  00d27	8b 10		 mov	 edx, DWORD PTR [eax]
  00d29	8b 8d f8 da fe
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$49[ebp]
  00d2f	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00d32	ff d0		 call	 eax
  00d34	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1355[ebp], eax
  00d3a	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1355[ebp]
  00d40	51		 push	 ecx
  00d41	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00d44	83 c1 04	 add	 ecx, 4
  00d47	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00d4a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00d4d	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00d50	ff d2		 call	 edx
  00d52	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1356[ebp], al
  00d58	0f b6 85 1b 77
	fe ff		 movzx	 eax, BYTE PTR tv1356[ebp]
  00d5f	83 f8 01	 cmp	 eax, 1
  00d62	75 07		 jne	 SHORT $LN95@OnEventTim
  00d64	b0 01		 mov	 al, 1
  00d66	e9 d9 0e 00 00	 jmp	 $LN1@OnEventTim
$LN95@OnEventTim:

; 751  : 								}

  00d6b	e9 79 ff ff ff	 jmp	 $LN25@OnEventTim
$LN26@OnEventTim:

; 752  : 							}
; 753  : 							else

  00d70	e9 e6 01 00 00	 jmp	 $LN92@OnEventTim
$LN93@OnEventTim:

; 754  : 							{
; 755  : 								//主动处理
; 756  : 								if (AndroidInitiative.wFreeUserCount>0)

  00d75	0f b7 85 04 db
	fe ff		 movzx	 eax, WORD PTR _AndroidInitiative$52[ebp]
  00d7c	85 c0		 test	 eax, eax
  00d7e	0f 8e d7 01 00
	00		 jle	 $LN92@OnEventTim

; 757  : 								{
; 758  : 									for (INT_PTR i=0;i<m_pGameServiceOption->wTableCount;i++)

  00d84	c7 85 f4 da fe
	ff 00 00 00 00	 mov	 DWORD PTR _i$48[ebp], 0
  00d8e	eb 0f		 jmp	 SHORT $LN30@OnEventTim
$LN28@OnEventTim:
  00d90	8b 85 f4 da fe
	ff		 mov	 eax, DWORD PTR _i$48[ebp]
  00d96	83 c0 01	 add	 eax, 1
  00d99	89 85 f4 da fe
	ff		 mov	 DWORD PTR _i$48[ebp], eax
$LN30@OnEventTim:
  00d9f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00da2	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00da5	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00da9	39 95 f4 da fe
	ff		 cmp	 DWORD PTR _i$48[ebp], edx
  00daf	0f 8d a6 01 00
	00		 jge	 $LN92@OnEventTim

; 759  : 									{
; 760  : 										//获取桌子
; 761  : 										CTableFrame * pTableFrame=m_TableFrameArray[i];

  00db5	8b 85 f4 da fe
	ff		 mov	 eax, DWORD PTR _i$48[ebp]
  00dbb	50		 push	 eax
  00dbc	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00dbf	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00dc5	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00dca	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1357[ebp], eax
  00dd0	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1357[ebp]
  00dd6	8b 11		 mov	 edx, DWORD PTR [ecx]
  00dd8	89 95 f0 da fe
	ff		 mov	 DWORD PTR _pTableFrame$47[ebp], edx

; 762  : 										if ((pTableFrame->IsGameStarted()==true)&&(bAllowDynamicJoin==false)) continue;

  00dde	8b 85 f0 da fe
	ff		 mov	 eax, DWORD PTR _pTableFrame$47[ebp]
  00de4	8b 10		 mov	 edx, DWORD PTR [eax]
  00de6	8b 8d f0 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$47[ebp]
  00dec	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00def	ff d0		 call	 eax
  00df1	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1358[ebp], al
  00df7	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1358[ebp]
  00dfe	83 f9 01	 cmp	 ecx, 1
  00e01	75 0d		 jne	 SHORT $LN97@OnEventTim
  00e03	0f b6 85 a7 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowDynamicJoin$89[ebp]
  00e0a	85 c0		 test	 eax, eax
  00e0c	75 02		 jne	 SHORT $LN97@OnEventTim
  00e0e	eb 80		 jmp	 SHORT $LN28@OnEventTim
$LN97@OnEventTim:

; 763  : 
; 764  : 										//桌子状况
; 765  : 										tagTableUserInfo TableUserInfo;
; 766  : 										WORD wUserSitCount=pTableFrame->GetTableUserInfo(TableUserInfo);

  00e10	8d 85 e8 da fe
	ff		 lea	 eax, DWORD PTR _TableUserInfo$46[ebp]
  00e16	50		 push	 eax
  00e17	8b 8d f0 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$47[ebp]
  00e1d	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  00e22	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1359[ebp], ax
  00e29	66 8b 8d 1e 77
	fe ff		 mov	 cx, WORD PTR tv1359[ebp]
  00e30	66 89 8d e4 da
	fe ff		 mov	 WORD PTR _wUserSitCount$45[ebp], cx

; 767  : 
; 768  : 										//分配判断
; 769  : 										if((m_pGameServiceAttrib->wChairCount<MAX_CHAIR) && wUserSitCount>(TableUserInfo.wMinUserCount-1) && (rand()%100>50)) continue;

  00e37	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00e3a	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00e3d	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00e41	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00e47	7d 2d		 jge	 SHORT $LN98@OnEventTim
  00e49	0f b7 85 e8 da
	fe ff		 movzx	 eax, WORD PTR _TableUserInfo$46[ebp]
  00e50	83 e8 01	 sub	 eax, 1
  00e53	0f b7 8d e4 da
	fe ff		 movzx	 ecx, WORD PTR _wUserSitCount$45[ebp]
  00e5a	3b c8		 cmp	 ecx, eax
  00e5c	7e 18		 jle	 SHORT $LN98@OnEventTim
  00e5e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00e64	99		 cdq
  00e65	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00e6a	f7 f9		 idiv	 ecx
  00e6c	83 fa 32	 cmp	 edx, 50			; 00000032H
  00e6f	7e 05		 jle	 SHORT $LN98@OnEventTim
  00e71	e9 1a ff ff ff	 jmp	 $LN28@OnEventTim
$LN98@OnEventTim:

; 770  : 
; 771  : 										//变量定义
; 772  : 										IServerUserItem * pIServerUserItem=NULL;

  00e76	c7 85 e0 da fe
	ff 00 00 00 00	 mov	 DWORD PTR _pIServerUserItem$44[ebp], 0

; 773  : 										WORD wChairID=pTableFrame->GetRandNullChairID();

  00e80	8b 8d f0 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$47[ebp]
  00e86	e8 00 00 00 00	 call	 ?GetRandNullChairID@CTableFrame@@QAEGXZ ; CTableFrame::GetRandNullChairID
  00e8b	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1360[ebp], ax
  00e92	66 8b 85 1e 77
	fe ff		 mov	 ax, WORD PTR tv1360[ebp]
  00e99	66 89 85 dc da
	fe ff		 mov	 WORD PTR _wChairID$43[ebp], ax

; 774  : 
; 775  : 										//无效过滤
; 776  : 										//ASSERT(wChairID!=INVALID_CHAIR);
; 777  : 										if (wChairID==INVALID_CHAIR) continue;

  00ea0	0f b7 85 dc da
	fe ff		 movzx	 eax, WORD PTR _wChairID$43[ebp]
  00ea7	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00eac	75 05		 jne	 SHORT $LN99@OnEventTim
  00eae	e9 dd fe ff ff	 jmp	 $LN28@OnEventTim
$LN99@OnEventTim:

; 778  : 
; 779  : 										//坐下处理
; 780  : 										for (WORD j=0;j<AndroidInitiative.wFreeUserCount;j++)

  00eb3	33 c0		 xor	 eax, eax
  00eb5	66 89 85 d8 da
	fe ff		 mov	 WORD PTR _j$42[ebp], ax
  00ebc	eb 12		 jmp	 SHORT $LN33@OnEventTim
$LN31@OnEventTim:
  00ebe	66 8b 85 d8 da
	fe ff		 mov	 ax, WORD PTR _j$42[ebp]
  00ec5	66 83 c0 01	 add	 ax, 1
  00ec9	66 89 85 d8 da
	fe ff		 mov	 WORD PTR _j$42[ebp], ax
$LN33@OnEventTim:
  00ed0	0f b7 85 04 db
	fe ff		 movzx	 eax, WORD PTR _AndroidInitiative$52[ebp]
  00ed7	0f b7 8d d8 da
	fe ff		 movzx	 ecx, WORD PTR _j$42[ebp]
  00ede	3b c8		 cmp	 ecx, eax
  00ee0	7d 74		 jge	 SHORT $LN32@OnEventTim

; 781  : 										{
; 782  : 											IAndroidUserItem * pIAndroidUserItem=AndroidInitiative.pIAndroidUserFree[j];

  00ee2	0f b7 85 d8 da
	fe ff		 movzx	 eax, WORD PTR _j$42[ebp]
  00ee9	8b 8c 85 0c db
	fe ff		 mov	 ecx, DWORD PTR _AndroidInitiative$52[ebp+eax*4+8]
  00ef0	89 8d d4 da fe
	ff		 mov	 DWORD PTR _pIAndroidUserItem$41[ebp], ecx

; 783  : 											if (pTableFrame->PerformSitDownAction(wChairID,pIAndroidUserItem->GetMeUserItem())==true) return true;

  00ef6	8b 85 d4 da fe
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$41[ebp]
  00efc	8b 10		 mov	 edx, DWORD PTR [eax]
  00efe	8b 8d d4 da fe
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$41[ebp]
  00f04	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00f07	ff d0		 call	 eax
  00f09	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1361[ebp], eax
  00f0f	6a 00		 push	 0
  00f11	6a 00		 push	 0
  00f13	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1361[ebp]
  00f19	51		 push	 ecx
  00f1a	0f b7 95 dc da
	fe ff		 movzx	 edx, WORD PTR _wChairID$43[ebp]
  00f21	52		 push	 edx
  00f22	8b 85 f0 da fe
	ff		 mov	 eax, DWORD PTR _pTableFrame$47[ebp]
  00f28	8b 10		 mov	 edx, DWORD PTR [eax]
  00f2a	8b 8d f0 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$47[ebp]
  00f30	8b 82 e0 00 00
	00		 mov	 eax, DWORD PTR [edx+224]
  00f36	ff d0		 call	 eax
  00f38	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1362[ebp], al
  00f3e	0f b6 8d 1b 77
	fe ff		 movzx	 ecx, BYTE PTR tv1362[ebp]
  00f45	83 f9 01	 cmp	 ecx, 1
  00f48	75 07		 jne	 SHORT $LN100@OnEventTim
  00f4a	b0 01		 mov	 al, 1
  00f4c	e9 f3 0c 00 00	 jmp	 $LN1@OnEventTim
$LN100@OnEventTim:

; 784  : 										}

  00f51	e9 68 ff ff ff	 jmp	 $LN31@OnEventTim
$LN32@OnEventTim:

; 785  : 									}

  00f56	e9 35 fe ff ff	 jmp	 $LN28@OnEventTim
$LN92@OnEventTim:

; 786  : 								}
; 787  : 							}
; 788  : 						}
; 789  : 
; 790  : 						bool bSinglePlayerGame=m_pGameServiceAttrib->wChairCount==1;

  00f5b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00f5e	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00f61	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00f65	83 fa 01	 cmp	 edx, 1
  00f68	75 0c		 jne	 SHORT $LN149@OnEventTim
  00f6a	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv793[ebp], 1
  00f74	eb 0a		 jmp	 SHORT $LN150@OnEventTim
$LN149@OnEventTim:
  00f76	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv793[ebp], 0
$LN150@OnEventTim:
  00f80	8a 85 1c 77 fe
	ff		 mov	 al, BYTE PTR tv793[ebp]
  00f86	88 85 d3 da fe
	ff		 mov	 BYTE PTR _bSinglePlayerGame$40[ebp], al

; 791  : 						if (bSinglePlayerGame)

  00f8c	0f b6 85 d3 da
	fe ff		 movzx	 eax, BYTE PTR _bSinglePlayerGame$40[ebp]
  00f93	85 c0		 test	 eax, eax
  00f95	74 4e		 je	 SHORT $LN101@OnEventTim

; 792  : 						{
; 793  : 							//获取时间
; 794  : 							DWORD dwCurrTime = (DWORD)time(NULL);

  00f97	6a 00		 push	 0
  00f99	e8 00 00 00 00	 call	 _time
  00f9e	83 c4 04	 add	 esp, 4
  00fa1	89 85 cc da fe
	ff		 mov	 DWORD PTR _dwCurrTime$39[ebp], eax

; 795  : 							if(dwCurrTime<m_dwIntervalTime+m_dwLastDisposeTime) return true;

  00fa7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00faa	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00fad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00fb0	03 4a 14	 add	 ecx, DWORD PTR [edx+20]
  00fb3	39 8d cc da fe
	ff		 cmp	 DWORD PTR _dwCurrTime$39[ebp], ecx
  00fb9	73 07		 jae	 SHORT $LN102@OnEventTim
  00fbb	b0 01		 mov	 al, 1
  00fbd	e9 82 0c 00 00	 jmp	 $LN1@OnEventTim
$LN102@OnEventTim:

; 796  : 
; 797  : 							//设置变量
; 798  : 							m_dwLastDisposeTime=dwCurrTime;

  00fc2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00fc5	8b 8d cc da fe
	ff		 mov	 ecx, DWORD PTR _dwCurrTime$39[ebp]
  00fcb	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 799  : 							m_dwIntervalTime=MIN_INTERVAL_TIME+rand()%(MAX_INTERVAL_TIME-MIN_INTERVAL_TIME);   

  00fce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00fd4	99		 cdq
  00fd5	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00fda	f7 f9		 idiv	 ecx
  00fdc	83 c2 0a	 add	 edx, 10			; 0000000aH
  00fdf	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00fe2	89 50 10	 mov	 DWORD PTR [eax+16], edx
$LN101@OnEventTim:

; 800  : 						}
; 801  : 
; 802  : 						//变量定义
; 803  : 						bool bMaxPlayerGame=m_pGameServiceAttrib->wChairCount>=MAX_CHAIR;

  00fe5	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00fe8	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00feb	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00fef	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00ff5	7c 0c		 jl	 SHORT $LN151@OnEventTim
  00ff7	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv813[ebp], 1
  01001	eb 0a		 jmp	 SHORT $LN152@OnEventTim
$LN151@OnEventTim:
  01003	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv813[ebp], 0
$LN152@OnEventTim:
  0100d	8a 85 1c 77 fe
	ff		 mov	 al, BYTE PTR tv813[ebp]
  01013	88 85 cb da fe
	ff		 mov	 BYTE PTR _bMaxPlayerGame$38[ebp], al

; 804  : 
; 805  : 						//类型判断
; 806  : 						if(bMaxPlayerGame)

  01019	0f b6 85 cb da
	fe ff		 movzx	 eax, BYTE PTR _bMaxPlayerGame$38[ebp]
  01020	85 c0		 test	 eax, eax
  01022	74 4e		 je	 SHORT $LN103@OnEventTim

; 807  : 						{
; 808  : 							//获取时间
; 809  : 							DWORD dwCurrTime = (DWORD)time(NULL);

  01024	6a 00		 push	 0
  01026	e8 00 00 00 00	 call	 _time
  0102b	83 c4 04	 add	 esp, 4
  0102e	89 85 c4 da fe
	ff		 mov	 DWORD PTR _dwCurrTime$37[ebp], eax

; 810  : 							if(dwCurrTime<m_dwIntervalTime+m_dwLastDisposeTime) return true;

  01034	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0103a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0103d	03 4a 14	 add	 ecx, DWORD PTR [edx+20]
  01040	39 8d c4 da fe
	ff		 cmp	 DWORD PTR _dwCurrTime$37[ebp], ecx
  01046	73 07		 jae	 SHORT $LN104@OnEventTim
  01048	b0 01		 mov	 al, 1
  0104a	e9 f5 0b 00 00	 jmp	 $LN1@OnEventTim
$LN104@OnEventTim:

; 811  : 
; 812  : 							//设置变量
; 813  : 							m_dwLastDisposeTime=dwCurrTime;

  0104f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01052	8b 8d c4 da fe
	ff		 mov	 ecx, DWORD PTR _dwCurrTime$37[ebp]
  01058	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 814  : 							m_dwIntervalTime=MIN_INTERVAL_TIME+rand()%(MAX_INTERVAL_TIME-MIN_INTERVAL_TIME);   

  0105b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  01061	99		 cdq
  01062	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  01067	f7 f9		 idiv	 ecx
  01069	83 c2 0a	 add	 edx, 10			; 0000000aH
  0106c	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0106f	89 50 10	 mov	 DWORD PTR [eax+16], edx
$LN103@OnEventTim:

; 815  : 						}
; 816  : 
; 817  : 						//起立处理
; 818  : 						WORD wStandUpCount=0;

  01072	33 c0		 xor	 eax, eax
  01074	66 89 85 c0 da
	fe ff		 mov	 WORD PTR _wStandUpCount$36[ebp], ax

; 819  : 						WORD wRandCount=((rand()%3)+1);

  0107b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  01081	99		 cdq
  01082	b9 03 00 00 00	 mov	 ecx, 3
  01087	f7 f9		 idiv	 ecx
  01089	83 c2 01	 add	 edx, 1
  0108c	66 89 95 bc da
	fe ff		 mov	 WORD PTR _wRandCount$35[ebp], dx

; 820  : 						INT_PTR nIndex = rand()%(__max(m_pGameServiceOption->wTableCount,1));

  01093	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01096	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  01099	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  0109d	83 fa 01	 cmp	 edx, 1
  010a0	7e 12		 jle	 SHORT $LN153@OnEventTim
  010a2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  010a5	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  010a8	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  010ac	89 95 1c 77 fe
	ff		 mov	 DWORD PTR tv841[ebp], edx
  010b2	eb 0a		 jmp	 SHORT $LN154@OnEventTim
$LN153@OnEventTim:
  010b4	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv841[ebp], 1
$LN154@OnEventTim:
  010be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  010c4	99		 cdq
  010c5	f7 bd 1c 77 fe
	ff		 idiv	 DWORD PTR tv841[ebp]
  010cb	89 95 b8 da fe
	ff		 mov	 DWORD PTR _nIndex$34[ebp], edx

; 821  : 						for (INT_PTR i=nIndex;i<m_pGameServiceOption->wTableCount+nIndex;++i)

  010d1	8b 85 b8 da fe
	ff		 mov	 eax, DWORD PTR _nIndex$34[ebp]
  010d7	89 85 b4 da fe
	ff		 mov	 DWORD PTR _i$33[ebp], eax
  010dd	eb 0f		 jmp	 SHORT $LN36@OnEventTim
$LN34@OnEventTim:
  010df	8b 85 b4 da fe
	ff		 mov	 eax, DWORD PTR _i$33[ebp]
  010e5	83 c0 01	 add	 eax, 1
  010e8	89 85 b4 da fe
	ff		 mov	 DWORD PTR _i$33[ebp], eax
$LN36@OnEventTim:
  010ee	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  010f1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  010f4	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  010f8	03 95 b8 da fe
	ff		 add	 edx, DWORD PTR _nIndex$34[ebp]
  010fe	39 95 b4 da fe
	ff		 cmp	 DWORD PTR _i$33[ebp], edx
  01104	0f 8d 3b 02 00
	00		 jge	 $LN35@OnEventTim

; 822  : 						{
; 823  : 							//获取桌子
; 824  : 							INT_PTR nTableIndex=i%m_pGameServiceOption->wTableCount;

  0110a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0110d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  01110	0f b7 49 46	 movzx	 ecx, WORD PTR [ecx+70]
  01114	8b 85 b4 da fe
	ff		 mov	 eax, DWORD PTR _i$33[ebp]
  0111a	99		 cdq
  0111b	f7 f9		 idiv	 ecx
  0111d	89 95 b0 da fe
	ff		 mov	 DWORD PTR _nTableIndex$32[ebp], edx

; 825  : 							CTableFrame * pTableFrame=m_TableFrameArray[nTableIndex];

  01123	8b 85 b0 da fe
	ff		 mov	 eax, DWORD PTR _nTableIndex$32[ebp]
  01129	50		 push	 eax
  0112a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0112d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  01133	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  01138	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1363[ebp], eax
  0113e	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1363[ebp]
  01144	8b 11		 mov	 edx, DWORD PTR [ecx]
  01146	89 95 ac da fe
	ff		 mov	 DWORD PTR _pTableFrame$31[ebp], edx

; 826  : 							if (pTableFrame->IsGameStarted()==true) continue;

  0114c	8b 85 ac da fe
	ff		 mov	 eax, DWORD PTR _pTableFrame$31[ebp]
  01152	8b 10		 mov	 edx, DWORD PTR [eax]
  01154	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  0115a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0115d	ff d0		 call	 eax
  0115f	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1364[ebp], al
  01165	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1364[ebp]
  0116c	83 f9 01	 cmp	 ecx, 1
  0116f	75 05		 jne	 SHORT $LN105@OnEventTim
  01171	e9 69 ff ff ff	 jmp	 $LN34@OnEventTim
$LN105@OnEventTim:

; 827  : 
; 828  : 							//桌子状况
; 829  : 							tagTableUserInfo TableUserInfo;
; 830  : 							WORD wUserSitCount=pTableFrame->GetTableUserInfo(TableUserInfo);

  01176	8d 85 a4 da fe
	ff		 lea	 eax, DWORD PTR _TableUserInfo$30[ebp]
  0117c	50		 push	 eax
  0117d	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  01183	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  01188	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1365[ebp], ax
  0118f	66 8b 8d 1e 77
	fe ff		 mov	 cx, WORD PTR tv1365[ebp]
  01196	66 89 8d a0 da
	fe ff		 mov	 WORD PTR _wUserSitCount$29[ebp], cx

; 831  : 
; 832  : 							//用户过虑
; 833  : 							bool bRand = ((rand()%100)>50);

  0119d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  011a3	99		 cdq
  011a4	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  011a9	f7 f9		 idiv	 ecx
  011ab	83 fa 32	 cmp	 edx, 50			; 00000032H
  011ae	7e 0c		 jle	 SHORT $LN155@OnEventTim
  011b0	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv873[ebp], 1
  011ba	eb 0a		 jmp	 SHORT $LN156@OnEventTim
$LN155@OnEventTim:
  011bc	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv873[ebp], 0
$LN156@OnEventTim:
  011c6	8a 95 1c 77 fe
	ff		 mov	 dl, BYTE PTR tv873[ebp]
  011cc	88 95 9f da fe
	ff		 mov	 BYTE PTR _bRand$28[ebp], dl

; 834  : 							if (TableUserInfo.wTableAndroidCount==0) continue;

  011d2	0f b7 85 aa da
	fe ff		 movzx	 eax, WORD PTR _TableUserInfo$30[ebp+6]
  011d9	85 c0		 test	 eax, eax
  011db	75 05		 jne	 SHORT $LN106@OnEventTim
  011dd	e9 fd fe ff ff	 jmp	 $LN34@OnEventTim
$LN106@OnEventTim:

; 835  : 							if ((TableUserInfo.wTableUserCount>0)&&(bAllowAndroidAttend==true) && bRand) continue;

  011e2	0f b7 85 a6 da
	fe ff		 movzx	 eax, WORD PTR _TableUserInfo$30[ebp+2]
  011e9	85 c0		 test	 eax, eax
  011eb	7e 1c		 jle	 SHORT $LN107@OnEventTim
  011ed	0f b6 85 a6 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAndroidAttend$88[ebp]
  011f4	83 f8 01	 cmp	 eax, 1
  011f7	75 10		 jne	 SHORT $LN107@OnEventTim
  011f9	0f b6 85 9f da
	fe ff		 movzx	 eax, BYTE PTR _bRand$28[ebp]
  01200	85 c0		 test	 eax, eax
  01202	74 05		 je	 SHORT $LN107@OnEventTim
  01204	e9 d6 fe ff ff	 jmp	 $LN34@OnEventTim
$LN107@OnEventTim:

; 836  : 							if (TableUserInfo.wTableAndroidCount>=TableUserInfo.wMinUserCount && bRand) continue;

  01209	0f b7 85 a4 da
	fe ff		 movzx	 eax, WORD PTR _TableUserInfo$30[ebp]
  01210	0f b7 8d aa da
	fe ff		 movzx	 ecx, WORD PTR _TableUserInfo$30[ebp+6]
  01217	3b c8		 cmp	 ecx, eax
  01219	7c 10		 jl	 SHORT $LN108@OnEventTim
  0121b	0f b6 85 9f da
	fe ff		 movzx	 eax, BYTE PTR _bRand$28[ebp]
  01222	85 c0		 test	 eax, eax
  01224	74 05		 je	 SHORT $LN108@OnEventTim
  01226	e9 b4 fe ff ff	 jmp	 $LN34@OnEventTim
$LN108@OnEventTim:

; 837  : 
; 838  : 							//起立处理
; 839  : 							for (WORD j=0;j<pTableFrame->GetChairCount();j++)

  0122b	33 c0		 xor	 eax, eax
  0122d	66 89 85 98 da
	fe ff		 mov	 WORD PTR _j$27[ebp], ax
  01234	eb 12		 jmp	 SHORT $LN39@OnEventTim
$LN37@OnEventTim:
  01236	66 8b 85 98 da
	fe ff		 mov	 ax, WORD PTR _j$27[ebp]
  0123d	66 83 c0 01	 add	 ax, 1
  01241	66 89 85 98 da
	fe ff		 mov	 WORD PTR _j$27[ebp], ax
$LN39@OnEventTim:
  01248	8b 85 ac da fe
	ff		 mov	 eax, DWORD PTR _pTableFrame$31[ebp]
  0124e	8b 10		 mov	 edx, DWORD PTR [eax]
  01250	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  01256	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  01259	ff d0		 call	 eax
  0125b	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1366[ebp], ax
  01262	0f b7 8d 1e 77
	fe ff		 movzx	 ecx, WORD PTR tv1366[ebp]
  01269	0f b7 95 98 da
	fe ff		 movzx	 edx, WORD PTR _j$27[ebp]
  01270	3b d1		 cmp	 edx, ecx
  01272	0f 8d c8 00 00
	00		 jge	 $LN38@OnEventTim

; 840  : 							{
; 841  : 								//获取用户
; 842  : 								IServerUserItem * pIServerUserItem=pTableFrame->GetTableUserItem(j);

  01278	0f b7 85 98 da
	fe ff		 movzx	 eax, WORD PTR _j$27[ebp]
  0127f	50		 push	 eax
  01280	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  01286	8b 11		 mov	 edx, DWORD PTR [ecx]
  01288	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  0128e	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  01294	ff d0		 call	 eax
  01296	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1367[ebp], eax
  0129c	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1367[ebp]
  012a2	89 8d 94 da fe
	ff		 mov	 DWORD PTR _pIServerUserItem$26[ebp], ecx

; 843  : 								if (pIServerUserItem==NULL) continue;

  012a8	83 bd 94 da fe
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$26[ebp], 0
  012af	75 02		 jne	 SHORT $LN109@OnEventTim
  012b1	eb 83		 jmp	 SHORT $LN37@OnEventTim
$LN109@OnEventTim:

; 844  : 
; 845  : 								//用户起立
; 846  : 								if ((pIServerUserItem->IsAndroidUser()==true)&&(pTableFrame->PerformStandUpAction(pIServerUserItem)==true))

  012b3	8b 85 94 da fe
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$26[ebp]
  012b9	8b 10		 mov	 edx, DWORD PTR [eax]
  012bb	8b 8d 94 da fe
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$26[ebp]
  012c1	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  012c7	ff d0		 call	 eax
  012c9	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1368[ebp], al
  012cf	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1368[ebp]
  012d6	83 f9 01	 cmp	 ecx, 1
  012d9	75 60		 jne	 SHORT $LN110@OnEventTim
  012db	6a 00		 push	 0
  012dd	8b 85 94 da fe
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$26[ebp]
  012e3	50		 push	 eax
  012e4	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  012ea	8b 11		 mov	 edx, DWORD PTR [ecx]
  012ec	8b 8d ac da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$31[ebp]
  012f2	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  012f8	ff d0		 call	 eax
  012fa	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1369[ebp], al
  01300	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1369[ebp]
  01307	83 f9 01	 cmp	 ecx, 1
  0130a	75 2f		 jne	 SHORT $LN110@OnEventTim

; 847  : 								{
; 848  : 									wStandUpCount++;

  0130c	66 8b 85 c0 da
	fe ff		 mov	 ax, WORD PTR _wStandUpCount$36[ebp]
  01313	66 83 c0 01	 add	 ax, 1
  01317	66 89 85 c0 da
	fe ff		 mov	 WORD PTR _wStandUpCount$36[ebp], ax

; 849  : 									if(wStandUpCount>=wRandCount)

  0131e	0f b7 85 bc da
	fe ff		 movzx	 eax, WORD PTR _wRandCount$35[ebp]
  01325	0f b7 8d c0 da
	fe ff		 movzx	 ecx, WORD PTR _wStandUpCount$36[ebp]
  0132c	3b c8		 cmp	 ecx, eax
  0132e	7c 09		 jl	 SHORT $LN111@OnEventTim

; 850  : 										return true;

  01330	b0 01		 mov	 al, 1
  01332	e9 0d 09 00 00	 jmp	 $LN1@OnEventTim

; 851  : 									else

  01337	eb 02		 jmp	 SHORT $LN110@OnEventTim
$LN111@OnEventTim:

; 852  : 										break;

  01339	eb 05		 jmp	 SHORT $LN38@OnEventTim
$LN110@OnEventTim:

; 853  : 								}
; 854  : 							}

  0133b	e9 f6 fe ff ff	 jmp	 $LN37@OnEventTim
$LN38@OnEventTim:

; 855  : 						}

  01340	e9 9a fd ff ff	 jmp	 $LN34@OnEventTim
$LN35@OnEventTim:

; 856  : 
; 857  : 						//起立处理
; 858  : 						nIndex = rand()%(__max(m_pGameServiceOption->wTableCount,1));

  01345	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01348	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0134b	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  0134f	83 fa 01	 cmp	 edx, 1
  01352	7e 12		 jle	 SHORT $LN157@OnEventTim
  01354	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01357	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0135a	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  0135e	89 95 1c 77 fe
	ff		 mov	 DWORD PTR tv940[ebp], edx
  01364	eb 0a		 jmp	 SHORT $LN158@OnEventTim
$LN157@OnEventTim:
  01366	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv940[ebp], 1
$LN158@OnEventTim:
  01370	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  01376	99		 cdq
  01377	f7 bd 1c 77 fe
	ff		 idiv	 DWORD PTR tv940[ebp]
  0137d	89 95 b8 da fe
	ff		 mov	 DWORD PTR _nIndex$34[ebp], edx

; 859  : 						for (INT_PTR i=nIndex;i<m_pGameServiceOption->wTableCount+nIndex;++i)

  01383	8b 85 b8 da fe
	ff		 mov	 eax, DWORD PTR _nIndex$34[ebp]
  01389	89 85 90 da fe
	ff		 mov	 DWORD PTR _i$25[ebp], eax
  0138f	eb 0f		 jmp	 SHORT $LN42@OnEventTim
$LN40@OnEventTim:
  01391	8b 85 90 da fe
	ff		 mov	 eax, DWORD PTR _i$25[ebp]
  01397	83 c0 01	 add	 eax, 1
  0139a	89 85 90 da fe
	ff		 mov	 DWORD PTR _i$25[ebp], eax
$LN42@OnEventTim:
  013a0	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  013a3	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  013a6	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  013aa	03 95 b8 da fe
	ff		 add	 edx, DWORD PTR _nIndex$34[ebp]
  013b0	39 95 90 da fe
	ff		 cmp	 DWORD PTR _i$25[ebp], edx
  013b6	0f 8d 19 02 00
	00		 jge	 $LN63@OnEventTim

; 860  : 						{
; 861  : 							//获取桌子
; 862  : 							INT_PTR nTableIndex=i%m_pGameServiceOption->wTableCount;

  013bc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  013bf	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  013c2	0f b7 49 46	 movzx	 ecx, WORD PTR [ecx+70]
  013c6	8b 85 90 da fe
	ff		 mov	 eax, DWORD PTR _i$25[ebp]
  013cc	99		 cdq
  013cd	f7 f9		 idiv	 ecx
  013cf	89 95 8c da fe
	ff		 mov	 DWORD PTR _nTableIndex$24[ebp], edx

; 863  : 							CTableFrame * pTableFrame=m_TableFrameArray[nTableIndex];

  013d5	8b 85 8c da fe
	ff		 mov	 eax, DWORD PTR _nTableIndex$24[ebp]
  013db	50		 push	 eax
  013dc	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  013df	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  013e5	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  013ea	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1370[ebp], eax
  013f0	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1370[ebp]
  013f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  013f8	89 95 88 da fe
	ff		 mov	 DWORD PTR _pTableFrame$23[ebp], edx

; 864  : 							if (pTableFrame->IsGameStarted()==true) continue;

  013fe	8b 85 88 da fe
	ff		 mov	 eax, DWORD PTR _pTableFrame$23[ebp]
  01404	8b 10		 mov	 edx, DWORD PTR [eax]
  01406	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  0140c	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0140f	ff d0		 call	 eax
  01411	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1371[ebp], al
  01417	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1371[ebp]
  0141e	83 f9 01	 cmp	 ecx, 1
  01421	75 05		 jne	 SHORT $LN113@OnEventTim
  01423	e9 69 ff ff ff	 jmp	 $LN40@OnEventTim
$LN113@OnEventTim:

; 865  : 
; 866  : 							//桌子状况
; 867  : 							tagTableUserInfo TableUserInfo;
; 868  : 							WORD wUserSitCount=pTableFrame->GetTableUserInfo(TableUserInfo);

  01428	8d 85 80 da fe
	ff		 lea	 eax, DWORD PTR _TableUserInfo$22[ebp]
  0142e	50		 push	 eax
  0142f	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  01435	e8 00 00 00 00	 call	 ?GetTableUserInfo@CTableFrame@@QAEGAAUtagTableUserInfo@@@Z ; CTableFrame::GetTableUserInfo
  0143a	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1372[ebp], ax
  01441	66 8b 8d 1e 77
	fe ff		 mov	 cx, WORD PTR tv1372[ebp]
  01448	66 89 8d 7c da
	fe ff		 mov	 WORD PTR _wUserSitCount$21[ebp], cx

; 869  : 
; 870  : 							//用户过虑
; 871  : 							bool bRand = ((rand()%100)>50);

  0144f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  01455	99		 cdq
  01456	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0145b	f7 f9		 idiv	 ecx
  0145d	83 fa 32	 cmp	 edx, 50			; 00000032H
  01460	7e 0c		 jle	 SHORT $LN159@OnEventTim
  01462	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv972[ebp], 1
  0146c	eb 0a		 jmp	 SHORT $LN160@OnEventTim
$LN159@OnEventTim:
  0146e	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv972[ebp], 0
$LN160@OnEventTim:
  01478	8a 95 1c 77 fe
	ff		 mov	 dl, BYTE PTR tv972[ebp]
  0147e	88 95 7b da fe
	ff		 mov	 BYTE PTR _bRand$20[ebp], dl

; 872  : 							if (TableUserInfo.wTableAndroidCount==0) continue;

  01484	0f b7 85 86 da
	fe ff		 movzx	 eax, WORD PTR _TableUserInfo$22[ebp+6]
  0148b	85 c0		 test	 eax, eax
  0148d	75 05		 jne	 SHORT $LN114@OnEventTim
  0148f	e9 fd fe ff ff	 jmp	 $LN40@OnEventTim
$LN114@OnEventTim:

; 873  : 							if ((TableUserInfo.wTableUserCount>0)&&(bAllowAndroidAttend==true) && bRand) continue;

  01494	0f b7 85 82 da
	fe ff		 movzx	 eax, WORD PTR _TableUserInfo$22[ebp+2]
  0149b	85 c0		 test	 eax, eax
  0149d	7e 1c		 jle	 SHORT $LN115@OnEventTim
  0149f	0f b6 85 a6 fb
	ff ff		 movzx	 eax, BYTE PTR _bAllowAndroidAttend$88[ebp]
  014a6	83 f8 01	 cmp	 eax, 1
  014a9	75 10		 jne	 SHORT $LN115@OnEventTim
  014ab	0f b6 85 7b da
	fe ff		 movzx	 eax, BYTE PTR _bRand$20[ebp]
  014b2	85 c0		 test	 eax, eax
  014b4	74 05		 je	 SHORT $LN115@OnEventTim
  014b6	e9 d6 fe ff ff	 jmp	 $LN40@OnEventTim
$LN115@OnEventTim:

; 874  : 
; 875  : 							//起立处理
; 876  : 							for (WORD j=0;j<pTableFrame->GetChairCount();j++)

  014bb	33 c0		 xor	 eax, eax
  014bd	66 89 85 74 da
	fe ff		 mov	 WORD PTR _j$19[ebp], ax
  014c4	eb 12		 jmp	 SHORT $LN45@OnEventTim
$LN43@OnEventTim:
  014c6	66 8b 85 74 da
	fe ff		 mov	 ax, WORD PTR _j$19[ebp]
  014cd	66 83 c0 01	 add	 ax, 1
  014d1	66 89 85 74 da
	fe ff		 mov	 WORD PTR _j$19[ebp], ax
$LN45@OnEventTim:
  014d8	8b 85 88 da fe
	ff		 mov	 eax, DWORD PTR _pTableFrame$23[ebp]
  014de	8b 10		 mov	 edx, DWORD PTR [eax]
  014e0	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  014e6	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  014e9	ff d0		 call	 eax
  014eb	66 89 85 1e 77
	fe ff		 mov	 WORD PTR tv1373[ebp], ax
  014f2	0f b7 8d 1e 77
	fe ff		 movzx	 ecx, WORD PTR tv1373[ebp]
  014f9	0f b7 95 74 da
	fe ff		 movzx	 edx, WORD PTR _j$19[ebp]
  01500	3b d1		 cmp	 edx, ecx
  01502	0f 8d c8 00 00
	00		 jge	 $LN44@OnEventTim

; 877  : 							{
; 878  : 								//获取用户
; 879  : 								IServerUserItem * pIServerUserItem=pTableFrame->GetTableUserItem(j);

  01508	0f b7 85 74 da
	fe ff		 movzx	 eax, WORD PTR _j$19[ebp]
  0150f	50		 push	 eax
  01510	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  01516	8b 11		 mov	 edx, DWORD PTR [ecx]
  01518	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  0151e	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  01524	ff d0		 call	 eax
  01526	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1374[ebp], eax
  0152c	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1374[ebp]
  01532	89 8d 70 da fe
	ff		 mov	 DWORD PTR _pIServerUserItem$18[ebp], ecx

; 880  : 								if (pIServerUserItem==NULL) continue;

  01538	83 bd 70 da fe
	ff 00		 cmp	 DWORD PTR _pIServerUserItem$18[ebp], 0
  0153f	75 02		 jne	 SHORT $LN116@OnEventTim
  01541	eb 83		 jmp	 SHORT $LN43@OnEventTim
$LN116@OnEventTim:

; 881  : 
; 882  : 								//用户起立
; 883  : 								if ((pIServerUserItem->IsAndroidUser()==true)&&(pTableFrame->PerformStandUpAction(pIServerUserItem)==true))

  01543	8b 85 70 da fe
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$18[ebp]
  01549	8b 10		 mov	 edx, DWORD PTR [eax]
  0154b	8b 8d 70 da fe
	ff		 mov	 ecx, DWORD PTR _pIServerUserItem$18[ebp]
  01551	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  01557	ff d0		 call	 eax
  01559	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1375[ebp], al
  0155f	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1375[ebp]
  01566	83 f9 01	 cmp	 ecx, 1
  01569	75 60		 jne	 SHORT $LN117@OnEventTim
  0156b	6a 00		 push	 0
  0156d	8b 85 70 da fe
	ff		 mov	 eax, DWORD PTR _pIServerUserItem$18[ebp]
  01573	50		 push	 eax
  01574	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  0157a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0157c	8b 8d 88 da fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$23[ebp]
  01582	8b 82 d8 00 00
	00		 mov	 eax, DWORD PTR [edx+216]
  01588	ff d0		 call	 eax
  0158a	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1376[ebp], al
  01590	0f b6 8d 1f 77
	fe ff		 movzx	 ecx, BYTE PTR tv1376[ebp]
  01597	83 f9 01	 cmp	 ecx, 1
  0159a	75 2f		 jne	 SHORT $LN117@OnEventTim

; 884  : 								{
; 885  : 									wStandUpCount++;

  0159c	66 8b 85 c0 da
	fe ff		 mov	 ax, WORD PTR _wStandUpCount$36[ebp]
  015a3	66 83 c0 01	 add	 ax, 1
  015a7	66 89 85 c0 da
	fe ff		 mov	 WORD PTR _wStandUpCount$36[ebp], ax

; 886  : 									if(wStandUpCount>=wRandCount)

  015ae	0f b7 85 bc da
	fe ff		 movzx	 eax, WORD PTR _wRandCount$35[ebp]
  015b5	0f b7 8d c0 da
	fe ff		 movzx	 ecx, WORD PTR _wStandUpCount$36[ebp]
  015bc	3b c8		 cmp	 ecx, eax
  015be	7c 09		 jl	 SHORT $LN118@OnEventTim

; 887  : 										return true;

  015c0	b0 01		 mov	 al, 1
  015c2	e9 7d 06 00 00	 jmp	 $LN1@OnEventTim

; 888  : 									else

  015c7	eb 02		 jmp	 SHORT $LN117@OnEventTim
$LN118@OnEventTim:

; 889  : 										break;

  015c9	eb 05		 jmp	 SHORT $LN44@OnEventTim
$LN117@OnEventTim:

; 890  : 								}
; 891  : 							}

  015cb	e9 f6 fe ff ff	 jmp	 $LN43@OnEventTim
$LN44@OnEventTim:

; 892  : 						}

  015d0	e9 bc fd ff ff	 jmp	 $LN40@OnEventTim
$LN63@OnEventTim:

; 893  : 					}	
; 894  : 
; 895  : 					return true;

  015d5	b0 01		 mov	 al, 1
  015d7	e9 68 06 00 00	 jmp	 $LN1@OnEventTim
$LN120@OnEventTim:

; 896  : 				}
; 897  : 			case IDI_DBCORRESPOND_NOTIFY: //缓存定时处理
; 898  : 				{
; 899  : 					if(m_pIDBCorrespondManager) m_pIDBCorrespondManager->OnTimerNotify();

  015dc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  015df	83 b8 d4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147412], 0
  015e6	74 1d		 je	 SHORT $LN121@OnEventTim
  015e8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  015eb	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  015f1	51		 push	 ecx
  015f2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  015f5	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  015fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  015fd	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  01600	ff d2		 call	 edx
  01602	83 c4 04	 add	 esp, 4
$LN121@OnEventTim:

; 900  : 					return true;

  01605	b0 01		 mov	 al, 1
  01607	e9 38 06 00 00	 jmp	 $LN1@OnEventTim
$LN122@OnEventTim:

; 901  : 				}
; 902  : 			case IDI_LOAD_SYSTEM_MESSAGE: //系统消息
; 903  : 				{
; 904  : 					//清除消息数据
; 905  : 					RemoveSystemMessage();

  0160c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0160f	e8 00 00 00 00	 call	 ?RemoveSystemMessage@CAttemperEngineSink@@IAEXXZ ; CAttemperEngineSink::RemoveSystemMessage

; 906  : 					
; 907  : 					//加载消息
; 908  : 					m_pIDBCorrespondManager->PostDataBaseRequest(0L, DBR_GR_LOAD_SYSTEM_MESSAGE, 0L, NULL, 0L);

  01614	6a 00		 push	 0
  01616	6a 00		 push	 0
  01618	6a 00		 push	 0
  0161a	6a 00		 push	 0
  0161c	68 cc 00 00 00	 push	 204			; 000000ccH
  01621	6a 00		 push	 0
  01623	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01626	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  0162c	51		 push	 ecx
  0162d	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  01630	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  01636	8b 08		 mov	 ecx, DWORD PTR [eax]
  01638	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0163b	ff d2		 call	 edx
  0163d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 909  : 
; 910  : 					return true;

  01640	b0 01		 mov	 al, 1
  01642	e9 fd 05 00 00	 jmp	 $LN1@OnEventTim
$LN123@OnEventTim:

; 911  : 				}
; 912  : 			case IDI_LOAD_SENSITIVE_WORD:	//加载敏感词
; 913  : 				{
; 914  : 					
; 915  : 					//投递请求
; 916  : 					m_pIRecordDataBaseEngine->PostDataBaseRequest(DBR_GR_LOAD_SENSITIVE_WORDS,0,NULL,0);				

  01647	6a 00		 push	 0
  01649	6a 00		 push	 0
  0164b	6a 00		 push	 0
  0164d	68 cd 00 00 00	 push	 205			; 000000cdH
  01652	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01655	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01658	8b 91 cc 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147404]
  0165e	8b 12		 mov	 edx, DWORD PTR [edx]
  01660	8b 88 cc 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147404]
  01666	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  01669	ff d0		 call	 eax

; 917  : 					return true;

  0166b	b0 01		 mov	 al, 1
  0166d	e9 d2 05 00 00	 jmp	 $LN1@OnEventTim
$LN124@OnEventTim:

; 918  : 				}
; 919  : 			case IDI_SEND_SYSTEM_MESSAGE: //系统消息
; 920  : 				{
; 921  : 					//数量判断
; 922  : 					if (m_SystemMessageActive.GetCount() == 0) return true;

  01672	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01675	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  0167b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
  01680	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1377[ebp], eax
  01686	83 bd 1c 77 fe
	ff 00		 cmp	 DWORD PTR tv1377[ebp], 0
  0168d	75 07		 jne	 SHORT $LN125@OnEventTim
  0168f	b0 01		 mov	 al, 1
  01691	e9 ae 05 00 00	 jmp	 $LN1@OnEventTim
$LN125@OnEventTim:

; 923  : 
; 924  : 					//时效判断
; 925  : 					DWORD dwCurrTime = (DWORD)time(NULL);

  01696	6a 00		 push	 0
  01698	e8 00 00 00 00	 call	 _time
  0169d	83 c4 04	 add	 esp, 4
  016a0	89 85 6c da fe
	ff		 mov	 DWORD PTR _dwCurrTime$17[ebp], eax

; 926  : 					for (INT_PTR nIndex = m_SystemMessageActive.GetCount() - 1; nIndex >= 0; nIndex--)

  016a6	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  016a9	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  016af	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
  016b4	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1378[ebp], eax
  016ba	8b 85 1c 77 fe
	ff		 mov	 eax, DWORD PTR tv1378[ebp]
  016c0	83 e8 01	 sub	 eax, 1
  016c3	89 85 68 da fe
	ff		 mov	 DWORD PTR _nIndex$16[ebp], eax
  016c9	eb 0f		 jmp	 SHORT $LN48@OnEventTim
$LN46@OnEventTim:
  016cb	8b 85 68 da fe
	ff		 mov	 eax, DWORD PTR _nIndex$16[ebp]
  016d1	83 e8 01	 sub	 eax, 1
  016d4	89 85 68 da fe
	ff		 mov	 DWORD PTR _nIndex$16[ebp], eax
$LN48@OnEventTim:
  016da	83 bd 68 da fe
	ff 00		 cmp	 DWORD PTR _nIndex$16[ebp], 0
  016e1	0f 8c 56 02 00
	00		 jl	 $LN47@OnEventTim

; 927  : 					{
; 928  : 						tagSystemMessage *pTagSystemMessage = m_SystemMessageActive[nIndex];

  016e7	8b 85 68 da fe
	ff		 mov	 eax, DWORD PTR _nIndex$16[ebp]
  016ed	50		 push	 eax
  016ee	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  016f1	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  016f7	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
  016fc	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1379[ebp], eax
  01702	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1379[ebp]
  01708	8b 11		 mov	 edx, DWORD PTR [ecx]
  0170a	89 95 64 da fe
	ff		 mov	 DWORD PTR _pTagSystemMessage$15[ebp], edx

; 929  : 
; 930  : 						//时效判断
; 931  : 						if (pTagSystemMessage->SystemMessage.tConcludeTime < dwCurrTime)

  01710	8b 85 6c da fe
	ff		 mov	 eax, DWORD PTR _dwCurrTime$17[ebp]
  01716	33 c9		 xor	 ecx, ecx
  01718	8b 95 64 da fe
	ff		 mov	 edx, DWORD PTR _pTagSystemMessage$15[ebp]
  0171e	89 95 1c 77 fe
	ff		 mov	 DWORD PTR tv2028[ebp], edx
  01724	89 85 14 77 fe
	ff		 mov	 DWORD PTR tv2029[ebp], eax
  0172a	89 8d 18 77 fe
	ff		 mov	 DWORD PTR tv2029[ebp+4], ecx
  01730	8b 85 1c 77 fe
	ff		 mov	 eax, DWORD PTR tv2028[ebp]
  01736	8b 48 1a	 mov	 ecx, DWORD PTR [eax+26]
  01739	3b 8d 18 77 fe
	ff		 cmp	 ecx, DWORD PTR tv2029[ebp+4]
  0173f	0f 8f a4 00 00
	00		 jg	 $LN126@OnEventTim
  01745	7c 15		 jl	 SHORT $LN177@OnEventTim
  01747	8b 95 1c 77 fe
	ff		 mov	 edx, DWORD PTR tv2028[ebp]
  0174d	8b 42 16	 mov	 eax, DWORD PTR [edx+22]
  01750	3b 85 14 77 fe
	ff		 cmp	 eax, DWORD PTR tv2029[ebp]
  01756	0f 83 8d 00 00
	00		 jae	 $LN126@OnEventTim
$LN177@OnEventTim:

; 932  : 						{
; 933  : 							m_SystemMessageActive.RemoveAt(nIndex);

  0175c	6a 01		 push	 1
  0175e	8b 85 68 da fe
	ff		 mov	 eax, DWORD PTR _nIndex$16[ebp]
  01764	50		 push	 eax
  01765	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01768	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  0176e	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAt

; 934  : 							SafeDelete(pTagSystemMessage);

  01773	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  01777	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  0177d	89 85 20 77 fe
	ff		 mov	 DWORD PTR $T2[ebp], eax
  01783	68 9e 00 00 00	 push	 158			; 0000009eH
  01788	8b 8d 20 77 fe
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0178e	51		 push	 ecx
  0178f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01794	83 c4 08	 add	 esp, 8
  01797	eb 31		 jmp	 SHORT $LN170@OnEventTim
__catch$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$0:
  01799	33 c0		 xor	 eax, eax
  0179b	75 27		 jne	 SHORT $LN161@OnEventTim
  0179d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z@4JA
  017a3	81 c1 d8 01 00
	00		 add	 ecx, 472		; 000001d8H
  017a9	51		 push	 ecx
  017aa	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  017af	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  017b4	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1380[ebp], eax
  017ba	83 bd 1c 77 fe
	ff 00		 cmp	 DWORD PTR tv1380[ebp], 0
  017c1	74 01		 je	 SHORT $LN161@OnEventTim
  017c3	cc		 int	 3
$LN161@OnEventTim:
  017c4	b8 00 00 00 00	 mov	 eax, $LN174@OnEventTim
  017c9	c3		 ret	 0
$LN170@OnEventTim:
  017ca	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  017d1	eb 07		 jmp	 SHORT __tryend$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$1
$LN174@OnEventTim:
  017d3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$1:
  017da	c7 85 64 da fe
	ff 00 00 00 00	 mov	 DWORD PTR _pTagSystemMessage$15[ebp], 0

; 935  : 
; 936  : 							continue;

  017e4	e9 e2 fe ff ff	 jmp	 $LN46@OnEventTim
$LN126@OnEventTim:

; 937  : 						}
; 938  : 
; 939  : 						//间隔判断
; 940  : 						if (pTagSystemMessage->dwLastTime + pTagSystemMessage->SystemMessage.dwTimeRate < dwCurrTime)

  017e9	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  017ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  017f1	8b 95 64 da fe
	ff		 mov	 edx, DWORD PTR _pTagSystemMessage$15[ebp]
  017f7	03 4a 0a	 add	 ecx, DWORD PTR [edx+10]
  017fa	3b 8d 6c da fe
	ff		 cmp	 ecx, DWORD PTR _dwCurrTime$17[ebp]
  01800	0f 83 32 01 00
	00		 jae	 $LN128@OnEventTim

; 941  : 						{
; 942  : 							//更新数据
; 943  : 							pTagSystemMessage->dwLastTime = dwCurrTime;

  01806	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  0180c	8b 8d 6c da fe
	ff		 mov	 ecx, DWORD PTR _dwCurrTime$17[ebp]
  01812	89 08		 mov	 DWORD PTR [eax], ecx

; 944  : 
; 945  : 							//构造消息
; 946  : 							CMD_GR_SendMessage SendMessage = {};

  01814	68 92 00 00 00	 push	 146			; 00000092H
  01819	6a 00		 push	 0
  0181b	8d 85 d0 d9 fe
	ff		 lea	 eax, DWORD PTR _SendMessageA$14[ebp]
  01821	50		 push	 eax
  01822	e8 00 00 00 00	 call	 _memset
  01827	83 c4 0c	 add	 esp, 12			; 0000000cH

; 947  : 							SendMessage.cbAllRoom = (pTagSystemMessage->SystemMessage.dwMessageID == TEMP_MESSAGE_ID) ? TRUE : FALSE;

  0182a	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  01830	83 78 04 ff	 cmp	 DWORD PTR [eax+4], -1
  01834	75 0c		 jne	 SHORT $LN162@OnEventTim
  01836	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv1138[ebp], 1
  01840	eb 0a		 jmp	 SHORT $LN163@OnEventTim
$LN162@OnEventTim:
  01842	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv1138[ebp], 0
$LN163@OnEventTim:
  0184c	8a 8d 1c 77 fe
	ff		 mov	 cl, BYTE PTR tv1138[ebp]
  01852	88 8d d2 d9 fe
	ff		 mov	 BYTE PTR _SendMessageA$14[ebp+2], cl

; 948  : 							SendMessage.cbGame = (pTagSystemMessage->SystemMessage.cbMessageType == 1) ? TRUE : FALSE;

  01858	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  0185e	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  01862	83 f9 01	 cmp	 ecx, 1
  01865	75 0c		 jne	 SHORT $LN164@OnEventTim
  01867	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv1144[ebp], 1
  01871	eb 0a		 jmp	 SHORT $LN165@OnEventTim
$LN164@OnEventTim:
  01873	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv1144[ebp], 0
$LN165@OnEventTim:
  0187d	8a 95 1c 77 fe
	ff		 mov	 dl, BYTE PTR tv1144[ebp]
  01883	88 95 d0 d9 fe
	ff		 mov	 BYTE PTR _SendMessageA$14[ebp], dl

; 949  : 							SendMessage.cbRoom = (pTagSystemMessage->SystemMessage.cbMessageType == 2) ? TRUE : FALSE;

  01889	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  0188f	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  01893	83 f9 02	 cmp	 ecx, 2
  01896	75 0c		 jne	 SHORT $LN166@OnEventTim
  01898	c7 85 1c 77 fe
	ff 01 00 00 00	 mov	 DWORD PTR tv1150[ebp], 1
  018a2	eb 0a		 jmp	 SHORT $LN167@OnEventTim
$LN166@OnEventTim:
  018a4	c7 85 1c 77 fe
	ff 00 00 00 00	 mov	 DWORD PTR tv1150[ebp], 0
$LN167@OnEventTim:
  018ae	8a 95 1c 77 fe
	ff		 mov	 dl, BYTE PTR tv1150[ebp]
  018b4	88 95 d1 d9 fe
	ff		 mov	 BYTE PTR _SendMessageA$14[ebp+1], dl

; 950  : 							if (pTagSystemMessage->SystemMessage.cbMessageType == 3)

  018ba	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  018c0	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  018c4	83 f9 03	 cmp	 ecx, 3
  018c7	75 0e		 jne	 SHORT $LN129@OnEventTim

; 951  : 							{
; 952  : 								SendMessage.cbGame = TRUE;

  018c9	c6 85 d0 d9 fe
	ff 01		 mov	 BYTE PTR _SendMessageA$14[ebp], 1

; 953  : 								SendMessage.cbRoom = TRUE;

  018d0	c6 85 d1 d9 fe
	ff 01		 mov	 BYTE PTR _SendMessageA$14[ebp+1], 1
$LN129@OnEventTim:

; 954  : 							}
; 955  : 							lstrcpyn(SendMessage.szSystemMessage, pTagSystemMessage->SystemMessage.szSystemMessage, CountArray(SendMessage.szSystemMessage));

  018d7	68 80 00 00 00	 push	 128			; 00000080H
  018dc	8b 85 64 da fe
	ff		 mov	 eax, DWORD PTR _pTagSystemMessage$15[ebp]
  018e2	83 c0 1e	 add	 eax, 30			; 0000001eH
  018e5	50		 push	 eax
  018e6	8d 8d e2 d9 fe
	ff		 lea	 ecx, DWORD PTR _SendMessageA$14[ebp+18]
  018ec	51		 push	 ecx
  018ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 956  : 							SendMessage.wChatLength = lstrlen(SendMessage.szSystemMessage) + 1;

  018f3	8d 85 e2 d9 fe
	ff		 lea	 eax, DWORD PTR _SendMessageA$14[ebp+18]
  018f9	50		 push	 eax
  018fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  01900	83 c0 01	 add	 eax, 1
  01903	66 89 85 e0 d9
	fe ff		 mov	 WORD PTR _SendMessageA$14[ebp+16], ax

; 957  : 
; 958  : 							//发送消息
; 959  : 							WORD wSendSize = sizeof(SendMessage) - sizeof(SendMessage.szSystemMessage) + CountStringBuffer(SendMessage.szSystemMessage);

  0190a	8d 85 e2 d9 fe
	ff		 lea	 eax, DWORD PTR _SendMessageA$14[ebp+18]
  01910	50		 push	 eax
  01911	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  01917	83 c0 13	 add	 eax, 19			; 00000013H
  0191a	66 89 85 cc d9
	fe ff		 mov	 WORD PTR _wSendSize$13[ebp], ax

; 960  : 							SendSystemMessage(&SendMessage, wSendSize);

  01921	0f b7 85 cc d9
	fe ff		 movzx	 eax, WORD PTR _wSendSize$13[ebp]
  01928	50		 push	 eax
  01929	8d 8d d0 d9 fe
	ff		 lea	 ecx, DWORD PTR _SendMessageA$14[ebp]
  0192f	51		 push	 ecx
  01930	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01933	e8 00 00 00 00	 call	 ?SendSystemMessage@CAttemperEngineSink@@IAE_NPAUCMD_GR_SendMessage@@G@Z ; CAttemperEngineSink::SendSystemMessage
$LN128@OnEventTim:

; 961  : 						}
; 962  : 					}

  01938	e9 8e fd ff ff	 jmp	 $LN46@OnEventTim
$LN47@OnEventTim:

; 963  : 
; 964  : 					return true;

  0193d	b0 01		 mov	 al, 1
  0193f	e9 00 03 00 00	 jmp	 $LN1@OnEventTim
$LN130@OnEventTim:

; 965  : 				}
; 966  : 			case IDI_DISTRIBUTE_USER: //分配用户
; 967  : 				{
; 968  : 					//执行分组
; 969  : 					PerformDistribute();

  01944	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01947	e8 00 00 00 00	 call	 ?PerformDistribute@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::PerformDistribute

; 970  : 
; 971  : 					return true;

  0194c	b0 01		 mov	 al, 1
  0194e	e9 f1 02 00 00	 jmp	 $LN1@OnEventTim
$LN131@OnEventTim:

; 972  : 				}
; 973  : 			case IDI_ANDROID_JION_MATCH:	//机器人参赛
; 974  : 				{
; 975  : 					//比赛类型
; 976  : 					if(m_pGameServiceOption->wServerType==GAME_GENRE_MATCH)

  01953	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01956	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  01959	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0195d	83 fa 04	 cmp	 edx, 4
  01960	0f 85 26 01 00
	00		 jne	 $LN132@OnEventTim

; 977  : 					{
; 978  : 						//陪玩标识
; 979  : 						bool bAllowAndroidAttend=CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule);

  01966	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01969	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0196c	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0196f	52		 push	 edx
  01970	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  01975	83 c4 04	 add	 esp, 4
  01978	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1381[ebp], al
  0197e	8a 85 1f 77 fe
	ff		 mov	 al, BYTE PTR tv1381[ebp]
  01984	88 85 cb d9 fe
	ff		 mov	 BYTE PTR _bAllowAndroidAttend$12[ebp], al

; 980  : 
; 981  : 						//陪玩处理
; 982  : 						if (bAllowAndroidAttend==true)

  0198a	0f b6 85 cb d9
	fe ff		 movzx	 eax, BYTE PTR _bAllowAndroidAttend$12[ebp]
  01991	83 f8 01	 cmp	 eax, 1
  01994	0f 85 f2 00 00
	00		 jne	 $LN132@OnEventTim

; 983  : 						{
; 984  : 							//被动状态
; 985  : 							tagAndroidUserInfo AndroidPassivity;
; 986  : 							m_AndroidUserManager.GetAndroidUserInfo(AndroidPassivity,ANDROID_PASSIVITY);

  0199a	6a 02		 push	 2
  0199c	8d 85 c0 79 fe
	ff		 lea	 eax, DWORD PTR _AndroidPassivity$11[ebp]
  019a2	50		 push	 eax
  019a3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  019a6	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  019ac	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  019af	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  019b5	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  019b8	ff d2		 call	 edx

; 987  : 
; 988  : 							//坐下处理
; 989  : 							WORD wIndex = rand()%(AndroidPassivity.wFreeUserCount+1);

  019ba	0f b7 b5 c0 79
	fe ff		 movzx	 esi, WORD PTR _AndroidPassivity$11[ebp]
  019c1	83 c6 01	 add	 esi, 1
  019c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  019ca	99		 cdq
  019cb	f7 fe		 idiv	 esi
  019cd	66 89 95 bc 79
	fe ff		 mov	 WORD PTR _wIndex$10[ebp], dx

; 990  : 							for (WORD j=wIndex;j<AndroidPassivity.wFreeUserCount+wIndex;j++)

  019d4	66 8b 85 bc 79
	fe ff		 mov	 ax, WORD PTR _wIndex$10[ebp]
  019db	66 89 85 b8 79
	fe ff		 mov	 WORD PTR _j$9[ebp], ax
  019e2	eb 12		 jmp	 SHORT $LN51@OnEventTim
$LN49@OnEventTim:
  019e4	66 8b 85 b8 79
	fe ff		 mov	 ax, WORD PTR _j$9[ebp]
  019eb	66 83 c0 01	 add	 ax, 1
  019ef	66 89 85 b8 79
	fe ff		 mov	 WORD PTR _j$9[ebp], ax
$LN51@OnEventTim:
  019f6	0f b7 85 bc 79
	fe ff		 movzx	 eax, WORD PTR _wIndex$10[ebp]
  019fd	0f b7 8d c0 79
	fe ff		 movzx	 ecx, WORD PTR _AndroidPassivity$11[ebp]
  01a04	03 c8		 add	 ecx, eax
  01a06	0f b7 95 b8 79
	fe ff		 movzx	 edx, WORD PTR _j$9[ebp]
  01a0d	3b d1		 cmp	 edx, ecx
  01a0f	7d 7b		 jge	 SHORT $LN132@OnEventTim

; 991  : 							{
; 992  : 								WORD wAndroidIndex = j%AndroidPassivity.wFreeUserCount;

  01a11	0f b7 8d c0 79
	fe ff		 movzx	 ecx, WORD PTR _AndroidPassivity$11[ebp]
  01a18	0f b7 85 b8 79
	fe ff		 movzx	 eax, WORD PTR _j$9[ebp]
  01a1f	99		 cdq
  01a20	f7 f9		 idiv	 ecx
  01a22	66 89 95 b4 79
	fe ff		 mov	 WORD PTR _wAndroidIndex$8[ebp], dx

; 993  : 								IAndroidUserItem * pIAndroidUserItem=AndroidPassivity.pIAndroidUserFree[wAndroidIndex];

  01a29	0f b7 85 b4 79
	fe ff		 movzx	 eax, WORD PTR _wAndroidIndex$8[ebp]
  01a30	8b 8c 85 c8 79
	fe ff		 mov	 ecx, DWORD PTR _AndroidPassivity$11[ebp+eax*4+8]
  01a37	89 8d b0 79 fe
	ff		 mov	 DWORD PTR _pIAndroidUserItem$7[ebp], ecx

; 994  : 								if (InsertDistribute(pIAndroidUserItem->GetMeUserItem())==true) return true;

  01a3d	8b 85 b0 79 fe
	ff		 mov	 eax, DWORD PTR _pIAndroidUserItem$7[ebp]
  01a43	8b 10		 mov	 edx, DWORD PTR [eax]
  01a45	8b 8d b0 79 fe
	ff		 mov	 ecx, DWORD PTR _pIAndroidUserItem$7[ebp]
  01a4b	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  01a4e	ff d0		 call	 eax
  01a50	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1382[ebp], eax
  01a56	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1382[ebp]
  01a5c	51		 push	 ecx
  01a5d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a60	83 c1 04	 add	 ecx, 4
  01a63	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  01a66	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01a69	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  01a6c	ff d2		 call	 edx
  01a6e	88 85 1b 77 fe
	ff		 mov	 BYTE PTR tv1383[ebp], al
  01a74	0f b6 85 1b 77
	fe ff		 movzx	 eax, BYTE PTR tv1383[ebp]
  01a7b	83 f8 01	 cmp	 eax, 1
  01a7e	75 07		 jne	 SHORT $LN134@OnEventTim
  01a80	b0 01		 mov	 al, 1
  01a82	e9 bd 01 00 00	 jmp	 $LN1@OnEventTim
$LN134@OnEventTim:

; 995  : 							}

  01a87	e9 58 ff ff ff	 jmp	 $LN49@OnEventTim
$LN132@OnEventTim:

; 996  : 						}
; 997  : 					}
; 998  : 
; 999  : 					return true;

  01a8c	b0 01		 mov	 al, 1
  01a8e	e9 b1 01 00 00	 jmp	 $LN1@OnEventTim
$LN53@OnEventTim:

; 1000 : 				}
; 1001 : 			}
; 1002 : 		}
; 1003 : 
; 1004 : 		//机器时器
; 1005 : 		if ((dwTimerID>=IDI_REBOT_MODULE_START)&&(dwTimerID<=IDI_REBOT_MODULE_FINISH))

  01a93	83 7d 08 64	 cmp	 DWORD PTR _dwTimerID$[ebp], 100 ; 00000064H
  01a97	72 2f		 jb	 SHORT $LN135@OnEventTim
  01a99	81 7d 08 c7 00
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 199 ; 000000c7H
  01aa0	77 26		 ja	 SHORT $LN135@OnEventTim

; 1006 : 		{
; 1007 : 			//时间处理
; 1008 : 			m_AndroidUserManager.OnEventTimerPulse(dwTimerID,wBindParam);

  01aa2	8b 45 0c	 mov	 eax, DWORD PTR _wBindParam$[ebp]
  01aa5	50		 push	 eax
  01aa6	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  01aa9	51		 push	 ecx
  01aaa	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01aad	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  01ab3	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  01ab6	8b 82 28 de 00
	00		 mov	 eax, DWORD PTR [edx+56872]
  01abc	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  01abf	ff d2		 call	 edx

; 1009 : 
; 1010 : 			return true;

  01ac1	b0 01		 mov	 al, 1
  01ac3	e9 7c 01 00 00	 jmp	 $LN1@OnEventTim
$LN135@OnEventTim:

; 1011 : 		}
; 1012 : 
; 1013 : 		//比赛定时器
; 1014 : 		if((dwTimerID>=IDI_MATCH_MODULE_START)&&(dwTimerID<IDI_MATCH_MODULE_FINISH))

  01ac8	81 7d 08 c8 00
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 200 ; 000000c8H
  01acf	72 3d		 jb	 SHORT $LN136@OnEventTim
  01ad1	81 7d 08 e7 03
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 999 ; 000003e7H
  01ad8	73 34		 jae	 SHORT $LN136@OnEventTim

; 1015 : 		{
; 1016 : 			if(m_pIMatchServiceManager!=NULL) m_pIMatchServiceManager->OnEventTimer(dwTimerID,wBindParam);

  01ada	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01add	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  01ae4	74 21		 je	 SHORT $LN137@OnEventTim
  01ae6	8b 45 0c	 mov	 eax, DWORD PTR _wBindParam$[ebp]
  01ae9	50		 push	 eax
  01aea	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  01aed	51		 push	 ecx
  01aee	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  01af1	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01af4	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  01afa	8b 01		 mov	 eax, DWORD PTR [ecx]
  01afc	8b 8a c4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147396]
  01b02	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  01b05	ff d2		 call	 edx
$LN137@OnEventTim:

; 1017 : 			return true;

  01b07	b0 01		 mov	 al, 1
  01b09	e9 36 01 00 00	 jmp	 $LN1@OnEventTim
$LN136@OnEventTim:

; 1018 : 		}
; 1019 : 
; 1020 : 		//桌子时间
; 1021 : 		if ((dwTimerID>=IDI_TABLE_MODULE_START)&&(dwTimerID<=IDI_TABLE_MODULE_FINISH))

  01b0e	81 7d 08 10 27
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 10000 ; 00002710H
  01b15	0f 82 e0 00 00
	00		 jb	 $LN138@OnEventTim
  01b1b	81 7d 08 50 c3
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 50000 ; 0000c350H
  01b22	0f 87 d3 00 00
	00		 ja	 $LN138@OnEventTim

; 1022 : 		{
; 1023 : 			//桌子号码
; 1024 : 			DWORD dwTableTimerID=dwTimerID-IDI_TABLE_MODULE_START;

  01b28	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  01b2b	2d 10 27 00 00	 sub	 eax, 10000		; 00002710H
  01b30	89 85 ac 79 fe
	ff		 mov	 DWORD PTR _dwTableTimerID$6[ebp], eax

; 1025 : 			WORD wTableID=(WORD)(dwTableTimerID/TIME_TABLE_MODULE_RANGE);

  01b36	8b 85 ac 79 fe
	ff		 mov	 eax, DWORD PTR _dwTableTimerID$6[ebp]
  01b3c	33 d2		 xor	 edx, edx
  01b3e	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  01b43	f7 f1		 div	 ecx
  01b45	66 89 85 a8 79
	fe ff		 mov	 WORD PTR _wTableID$5[ebp], ax

; 1026 : 
; 1027 : 			//时间效验
; 1028 : 			if (wTableID>=(WORD)m_TableFrameArray.GetCount()) 

  01b4c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01b4f	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  01b55	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  01b5a	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1384[ebp], eax
  01b60	0f b7 85 1c 77
	fe ff		 movzx	 eax, WORD PTR tv1384[ebp]
  01b67	0f b7 8d a8 79
	fe ff		 movzx	 ecx, WORD PTR _wTableID$5[ebp]
  01b6e	3b c8		 cmp	 ecx, eax
  01b70	7c 32		 jl	 SHORT $LN139@OnEventTim

; 1029 : 			{
; 1030 : 				ASSERT(FALSE);

  01b72	33 c0		 xor	 eax, eax
  01b74	75 27		 jne	 SHORT $LN168@OnEventTim
  01b76	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z@4JA
  01b7c	81 c1 38 02 00
	00		 add	 ecx, 568		; 00000238H
  01b82	51		 push	 ecx
  01b83	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  01b88	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  01b8d	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1386[ebp], eax
  01b93	83 bd 1c 77 fe
	ff 00		 cmp	 DWORD PTR tv1386[ebp], 0
  01b9a	74 01		 je	 SHORT $LN168@OnEventTim
  01b9c	cc		 int	 3
$LN168@OnEventTim:

; 1031 : 				return false;

  01b9d	32 c0		 xor	 al, al
  01b9f	e9 a0 00 00 00	 jmp	 $LN1@OnEventTim
$LN139@OnEventTim:

; 1032 : 			}
; 1033 : 
; 1034 : 			//时间通知
; 1035 : 			CTableFrame * pTableFrame=m_TableFrameArray[wTableID];

  01ba4	0f b7 85 a8 79
	fe ff		 movzx	 eax, WORD PTR _wTableID$5[ebp]
  01bab	50		 push	 eax
  01bac	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01baf	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  01bb5	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  01bba	89 85 1c 77 fe
	ff		 mov	 DWORD PTR tv1387[ebp], eax
  01bc0	8b 8d 1c 77 fe
	ff		 mov	 ecx, DWORD PTR tv1387[ebp]
  01bc6	8b 11		 mov	 edx, DWORD PTR [ecx]
  01bc8	89 95 a4 79 fe
	ff		 mov	 DWORD PTR _pTableFrame$4[ebp], edx

; 1036 : 			return pTableFrame->OnEventTimer(dwTableTimerID%TIME_TABLE_MODULE_RANGE,wBindParam);

  01bce	8b 45 0c	 mov	 eax, DWORD PTR _wBindParam$[ebp]
  01bd1	50		 push	 eax
  01bd2	8b 85 ac 79 fe
	ff		 mov	 eax, DWORD PTR _dwTableTimerID$6[ebp]
  01bd8	33 d2		 xor	 edx, edx
  01bda	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  01bdf	f7 f1		 div	 ecx
  01be1	52		 push	 edx
  01be2	8b 8d a4 79 fe
	ff		 mov	 ecx, DWORD PTR _pTableFrame$4[ebp]
  01be8	e8 00 00 00 00	 call	 ?OnEventTimer@CTableFrame@@QAE_NKI@Z ; CTableFrame::OnEventTimer
  01bed	88 85 1f 77 fe
	ff		 mov	 BYTE PTR tv1388[ebp], al
  01bf3	8a 85 1f 77 fe
	ff		 mov	 al, BYTE PTR tv1388[ebp]
  01bf9	eb 49		 jmp	 SHORT $LN1@OnEventTim
$LN138@OnEventTim:

; 1037 : 		}
; 1038 : 	}catch(...)

  01bfb	eb 35		 jmp	 SHORT $LN169@OnEventTim
__catch$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$2:

; 1039 : 	{
; 1040 : 		TCHAR szMessage[128];
; 1041 : 		_sntprintf_s(szMessage,CountArray(szMessage),TEXT("定时器异常：TimerID=%d"),dwTimerID);

  01bfd	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  01c00	50		 push	 eax
  01c01	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ENKFPCCP@?$LG?$KI?J?$LB?F?w?R?l?$LD?$KD?$KD?$LKTimerID?$DN?$CFd@
  01c06	68 80 00 00 00	 push	 128			; 00000080H
  01c0b	8d 8d 24 79 fe
	ff		 lea	 ecx, DWORD PTR _szMessage$3[ebp]
  01c11	51		 push	 ecx
  01c12	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  01c17	83 c4 10	 add	 esp, 16			; 00000010H

; 1042 : 		CTraceService::TraceString(szMessage,TraceLevel_Warning);

  01c1a	6a 02		 push	 2
  01c1c	8d 85 24 79 fe
	ff		 lea	 eax, DWORD PTR _szMessage$3[ebp]
  01c22	50		 push	 eax
  01c23	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  01c29	83 c4 08	 add	 esp, 8

; 1043 : 	}

  01c2c	b8 00 00 00 00	 mov	 eax, $LN176@OnEventTim
  01c31	c3		 ret	 0
$LN169@OnEventTim:
  01c32	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  01c39	eb 07		 jmp	 SHORT __tryend$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$3
$LN176@OnEventTim:
  01c3b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z$3:

; 1044 : 
; 1045 : 	return false;

  01c42	32 c0		 xor	 al, al
$LN1@OnEventTim:

; 1046 : }

  01c44	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  01c47	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  01c4e	59		 pop	 ecx
  01c4f	5f		 pop	 edi
  01c50	5e		 pop	 esi
  01c51	5b		 pop	 ebx
  01c52	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01c55	33 cd		 xor	 ecx, ebp
  01c57	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01c5c	8b e5		 mov	 esp, ebp
  01c5e	5d		 pop	 ebp
  01c5f	c2 08 00	 ret	 8
  01c62	66 90		 npad	 2
$LN179@OnEventTim:
  01c64	00 00 00 00	 DD	 $LN54@OnEventTim
  01c68	00 00 00 00	 DD	 $LN56@OnEventTim
  01c6c	00 00 00 00	 DD	 $LN57@OnEventTim
  01c70	00 00 00 00	 DD	 $LN60@OnEventTim
  01c74	00 00 00 00	 DD	 $LN61@OnEventTim
  01c78	00 00 00 00	 DD	 $LN120@OnEventTim
  01c7c	00 00 00 00	 DD	 $LN122@OnEventTim
  01c80	00 00 00 00	 DD	 $LN124@OnEventTim
  01c84	00 00 00 00	 DD	 $LN123@OnEventTim
  01c88	00 00 00 00	 DD	 $LN130@OnEventTim
  01c8c	00 00 00 00	 DD	 $LN131@OnEventTim
  01c90	00 00 00 00	 DD	 $LN58@OnEventTim
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 10 77 fe
	ff		 mov	 ecx, DWORD PTR [edx-100592]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z ENDP	; CAttemperEngineSink::OnEventTimer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnEventAttemperData, COMDAT
; _this$ = ecx

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 457  : 	return false;

  0000c	32 c0		 xor	 al, al

; 458  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnEventAttemperData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z
_TEXT	SEGMENT
tv65 = -1236						; size = 4
_szString$1 = -1040					; size = 512
_pPrsnlRmCorrespondAddress$2 = -528			; size = 4
_szString$3 = -524					; size = 512
_pCorrespondAddress$4 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wIdentifier$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z PROC	; CAttemperEngineSink::OnEventControl, COMDAT
; _this$ = ecx

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 04 00
	00		 sub	 esp, 1236		; 000004d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 376  : 	switch (wIdentifier)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wIdentifier$[ebp]
  0001d	89 85 2c fb ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	83 bd 2c fb ff
	ff 64		 cmp	 DWORD PTR tv65[ebp], 100 ; 00000064H
  0002a	74 1f		 je	 SHORT $LN4@OnEventCon
  0002c	83 bd 2c fb ff
	ff 65		 cmp	 DWORD PTR tv65[ebp], 101 ; 00000065H
  00033	0f 84 53 01 00
	00		 je	 $LN7@OnEventCon
  00039	83 bd 2c fb ff
	ff 66		 cmp	 DWORD PTR tv65[ebp], 102 ; 00000066H
  00040	0f 84 9b 00 00
	00		 je	 $LN5@OnEventCon
  00046	e9 11 03 00 00	 jmp	 $LN2@OnEventCon
$LN4@OnEventCon:

; 377  : 	{
; 378  : 	case CT_CONNECT_CORRESPOND:		//连接协调
; 379  : 		{
; 380  : 			//发起连接
; 381  : 			tagAddressInfo * pCorrespondAddress=&m_pInitParameter->m_CorrespondAddress;

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00051	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00054	89 4d f4	 mov	 DWORD PTR _pCorrespondAddress$4[ebp], ecx

; 382  : 			m_pITCPSocketService->Connect(pCorrespondAddress->szAddress,m_pInitParameter->m_wCorrespondPort);

  00057	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0005d	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00061	52		 push	 edx
  00062	8b 45 f4	 mov	 eax, DWORD PTR _pCorrespondAddress$4[ebp]
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	8b 91 b0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147376]
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 12		 mov	 edx, DWORD PTR [edx]
  00074	8b 88 b0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147376]
  0007a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0007d	ff d0		 call	 eax

; 383  : 
; 384  : 			//构造提示
; 385  : 			TCHAR szString[512]=TEXT("");

  0007f	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00084	88 85 f4 fd ff
	ff		 mov	 BYTE PTR _szString$3[ebp], al
  0008a	68 ff 01 00 00	 push	 511			; 000001ffH
  0008f	6a 00		 push	 0
  00091	8d 85 f5 fd ff
	ff		 lea	 eax, DWORD PTR _szString$3[ebp+1]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 _memset
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 386  : 			_sntprintf_s(szString,CountArray(szString),TEXT("正在连接协调服务器 [ %s:%d ]"),pCorrespondAddress->szAddress,m_pInitParameter->m_wCorrespondPort);

  000a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000a6	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  000aa	52		 push	 edx
  000ab	8b 45 f4	 mov	 eax, DWORD PTR _pCorrespondAddress$4[ebp]
  000ae	50		 push	 eax
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@EEJNAPCD@?U?$PN?T?Z?A?$KM?$LN?S?P?$KN?$LF?w?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@
  000b4	68 00 02 00 00	 push	 512			; 00000200H
  000b9	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR _szString$3[ebp]
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  000c5	83 c4 14	 add	 esp, 20			; 00000014H

; 387  : 
; 388  : 			//提示消息
; 389  : 			CTraceService::TraceString(szString,TraceLevel_Normal);

  000c8	6a 01		 push	 1
  000ca	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _szString$3[ebp]
  000d0	50		 push	 eax
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  000d7	83 c4 08	 add	 esp, 8

; 390  : 
; 391  : 			return true;

  000da	b0 01		 mov	 al, 1
  000dc	e9 7d 02 00 00	 jmp	 $LN1@OnEventCon
$LN5@OnEventCon:

; 392  : 		}
; 393  : 	case CT_CONNECT_PERSONAL_ROOM_CORRESPOND:
; 394  : 		{
; 395  : 			//发起连接
; 396  : 			tagAddressInfo * pPrsnlRmCorrespondAddress=&m_pInitParameter->m_PrsnlRmCorrespondAddress;

  000e1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000e7	83 c1 2c	 add	 ecx, 44			; 0000002cH
  000ea	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _pPrsnlRmCorrespondAddress$2[ebp], ecx

; 397  : 			
; 398  : 			if (m_pPrsnlRmITCPSocketService)

  000f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	83 b8 c0 3f 02
	00 00		 cmp	 DWORD PTR [eax+147392], 0
  000fa	74 2b		 je	 SHORT $LN6@OnEventCon

; 399  : 			{
; 400  : 					m_pPrsnlRmITCPSocketService->Connect(pPrsnlRmCorrespondAddress->szAddress,m_pInitParameter->m_wPrsnlRmCorrespondPort);

  000fc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00102	0f b7 51 2a	 movzx	 edx, WORD PTR [ecx+42]
  00106	52		 push	 edx
  00107	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR _pPrsnlRmCorrespondAddress$2[ebp]
  0010d	50		 push	 eax
  0010e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	8b 91 c0 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147392]
  00117	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011a	8b 12		 mov	 edx, DWORD PTR [edx]
  0011c	8b 88 c0 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147392]
  00122	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00125	ff d0		 call	 eax
$LN6@OnEventCon:

; 401  : 			}
; 402  : 
; 403  : 
; 404  : 			//构造提示
; 405  : 			TCHAR szString[512]=TEXT("");

  00127	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0012c	88 85 f0 fb ff
	ff		 mov	 BYTE PTR _szString$1[ebp], al
  00132	68 ff 01 00 00	 push	 511			; 000001ffH
  00137	6a 00		 push	 0
  00139	8d 85 f1 fb ff
	ff		 lea	 eax, DWORD PTR _szString$1[ebp+1]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 _memset
  00145	83 c4 0c	 add	 esp, 12			; 0000000cH

; 406  : 			_sntprintf_s(szString,CountArray(szString),TEXT("正在连接约战服务器 [ %s:%d ]"),pPrsnlRmCorrespondAddress->szAddress,m_pInitParameter->m_wPrsnlRmCorrespondPort);

  00148	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0014e	0f b7 51 2a	 movzx	 edx, WORD PTR [ecx+42]
  00152	52		 push	 edx
  00153	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR _pPrsnlRmCorrespondAddress$2[ebp]
  00159	50		 push	 eax
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BAEBLECI@?U?$PN?T?Z?A?$KM?$LN?S?T?$LM?U?$LN?$LH?$PO?N?q?F?w?5?$FL?5?$CFs?3?$CFd?5?$FN@
  0015f	68 00 02 00 00	 push	 512			; 00000200H
  00164	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _szString$1[ebp]
  0016a	51		 push	 ecx
  0016b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  00170	83 c4 14	 add	 esp, 20			; 00000014H

; 407  : 
; 408  : 			//提示消息
; 409  : 			CTraceService::TraceString(szString,TraceLevel_Normal);

  00173	6a 01		 push	 1
  00175	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _szString$1[ebp]
  0017b	50		 push	 eax
  0017c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00182	83 c4 08	 add	 esp, 8

; 410  : 			return true;

  00185	b0 01		 mov	 al, 1
  00187	e9 d2 01 00 00	 jmp	 $LN1@OnEventCon
$LN7@OnEventCon:

; 411  : 		}
; 412  : 	case CT_LOAD_SERVICE_CONFIG:	//加载配置
; 413  : 		{
; 414  : 			//加载配置
; 415  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_PARAMETER,0L,NULL,0L);

  0018c	6a 00		 push	 0
  0018e	6a 00		 push	 0
  00190	6a 00		 push	 0
  00192	6a 00		 push	 0
  00194	68 2c 01 00 00	 push	 300			; 0000012cH
  00199	6a 00		 push	 0
  0019b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019e	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  001a4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001a7	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  001ad	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001af	50		 push	 eax
  001b0	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001b3	ff d2		 call	 edx
  001b5	83 c4 1c	 add	 esp, 28			; 0000001cH

; 416  : 
; 417  : 			//加载列表
; 418  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_GAME_COLUMN,0L,NULL,0L);

  001b8	6a 00		 push	 0
  001ba	6a 00		 push	 0
  001bc	6a 00		 push	 0
  001be	6a 00		 push	 0
  001c0	68 2d 01 00 00	 push	 301			; 0000012dH
  001c5	6a 00		 push	 0
  001c7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ca	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  001d0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001d3	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  001d9	8b 09		 mov	 ecx, DWORD PTR [ecx]
  001db	50		 push	 eax
  001dc	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  001df	ff d2		 call	 edx
  001e1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 419  : 
; 420  : 			//加载机器
; 421  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_ANDROID_PARAMETER,0L,NULL,0L);			

  001e4	6a 00		 push	 0
  001e6	6a 00		 push	 0
  001e8	6a 00		 push	 0
  001ea	6a 00		 push	 0
  001ec	68 2e 01 00 00	 push	 302			; 0000012eH
  001f1	6a 00		 push	 0
  001f3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f6	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  001fc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001ff	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00205	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00207	50		 push	 eax
  00208	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0020b	ff d2		 call	 edx
  0020d	83 c4 1c	 add	 esp, 28			; 0000001cH

; 422  : 			
; 423  : 			//加载消息
; 424  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L, DBR_GR_LOAD_SYSTEM_MESSAGE, 0L, NULL, 0L);

  00210	6a 00		 push	 0
  00212	6a 00		 push	 0
  00214	6a 00		 push	 0
  00216	6a 00		 push	 0
  00218	68 cc 00 00 00	 push	 204			; 000000ccH
  0021d	6a 00		 push	 0
  0021f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00222	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00228	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0022b	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00231	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00233	50		 push	 eax
  00234	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00237	ff d2		 call	 edx
  00239	83 c4 1c	 add	 esp, 28			; 0000001cH

; 425  : 			//加载任务
; 426  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_TASK_LOAD_LIST,0L,NULL,0L);

  0023c	6a 00		 push	 0
  0023e	6a 00		 push	 0
  00240	6a 00		 push	 0
  00242	6a 00		 push	 0
  00244	68 be 02 00 00	 push	 702			; 000002beH
  00249	6a 00		 push	 0
  0024b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0024e	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00254	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00257	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0025d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0025f	50		 push	 eax
  00260	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00263	ff d2		 call	 edx
  00265	83 c4 1c	 add	 esp, 28			; 0000001cH

; 427  : 
; 428  : 			//会员参数
; 429  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_MEMBER_PARAMETER,0,NULL,0);	

  00268	6a 00		 push	 0
  0026a	6a 00		 push	 0
  0026c	6a 00		 push	 0
  0026e	6a 00		 push	 0
  00270	68 36 01 00 00	 push	 310			; 00000136H
  00275	6a 00		 push	 0
  00277	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0027a	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00280	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00283	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00289	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0028b	50		 push	 eax
  0028c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0028f	ff d2		 call	 edx
  00291	83 c4 1c	 add	 esp, 28			; 0000001cH

; 430  : 
; 431  : 
; 432  : 			//成长配置
; 433  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_GROWLEVEL_CONFIG,0,NULL,0);	

  00294	6a 00		 push	 0
  00296	6a 00		 push	 0
  00298	6a 00		 push	 0
  0029a	6a 00		 push	 0
  0029c	68 31 01 00 00	 push	 305			; 00000131H
  002a1	6a 00		 push	 0
  002a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002a6	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  002ac	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002af	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  002b5	8b 09		 mov	 ecx, DWORD PTR [ecx]
  002b7	50		 push	 eax
  002b8	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  002bb	ff d2		 call	 edx
  002bd	83 c4 1c	 add	 esp, 28			; 0000001cH

; 434  : 
; 435  : 			//加载签到
; 436  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_CHECKIN_REWARD,0L,NULL,0L);

  002c0	6a 00		 push	 0
  002c2	6a 00		 push	 0
  002c4	6a 00		 push	 0
  002c6	6a 00		 push	 0
  002c8	68 33 01 00 00	 push	 307			; 00000133H
  002cd	6a 00		 push	 0
  002cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d2	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  002d8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002db	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  002e1	8b 09		 mov	 ecx, DWORD PTR [ecx]
  002e3	50		 push	 eax
  002e4	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  002e7	ff d2		 call	 edx
  002e9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 437  : 
; 438  : 			//加载低保
; 439  : 			m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_BASEENSURE,0L,NULL,0L);

  002ec	6a 00		 push	 0
  002ee	6a 00		 push	 0
  002f0	6a 00		 push	 0
  002f2	6a 00		 push	 0
  002f4	68 34 01 00 00	 push	 308			; 00000134H
  002f9	6a 00		 push	 0
  002fb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002fe	8b 88 d4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147412]
  00304	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00307	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  0030d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0030f	50		 push	 eax
  00310	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00313	ff d2		 call	 edx
  00315	83 c4 1c	 add	 esp, 28			; 0000001cH

; 440  : 
; 441  : 			if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00318	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0031b	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0031e	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00322	83 fa 10	 cmp	 edx, 16			; 00000010H
  00325	75 31		 jne	 SHORT $LN8@OnEventCon

; 442  : 			{
; 443  : 				//私人配置
; 444  : 				m_pIDBCorrespondManager->PostDataBaseRequest(0L,DBR_GR_LOAD_PERSONAL_PARAMETER,0,&m_pGameServiceOption->wKindID,sizeof(WORD),0);

  00327	6a 00		 push	 0
  00329	6a 02		 push	 2
  0032b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0032e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00331	51		 push	 ecx
  00332	6a 00		 push	 0
  00334	68 17 05 00 00	 push	 1303			; 00000517H
  00339	6a 00		 push	 0
  0033b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0033e	8b 82 d4 3f 02
	00		 mov	 eax, DWORD PTR [edx+147412]
  00344	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00347	8b 91 d4 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147412]
  0034d	8b 00		 mov	 eax, DWORD PTR [eax]
  0034f	52		 push	 edx
  00350	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00353	ff d1		 call	 ecx
  00355	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN8@OnEventCon:

; 445  : 			}
; 446  : 
; 447  : 			return true;

  00358	b0 01		 mov	 al, 1
  0035a	eb 02		 jmp	 SHORT $LN1@OnEventCon
$LN2@OnEventCon:

; 448  : 		}
; 449  : 	}
; 450  : 
; 451  : 	return false;

  0035c	32 c0		 xor	 al, al
$LN1@OnEventCon:

; 452  : }

  0035e	5f		 pop	 edi
  0035f	5e		 pop	 esi
  00360	5b		 pop	 ebx
  00361	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00364	33 cd		 xor	 ecx, ebp
  00366	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0036b	8b e5		 mov	 esp, ebp
  0036d	5d		 pop	 ebp
  0036e	c2 0c 00	 ret	 12			; 0000000cH
?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z ENDP	; CAttemperEngineSink::OnEventControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
tv168 = -116						; size = 4
$T2 = -112						; size = 4
$T3 = -108						; size = 4
$T4 = -104						; size = 4
_pPersonalTableParameter$5 = -36			; size = 4
_i$6 = -32						; size = 4
_nSize$7 = -28						; size = 4
_i$8 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pIUnknownEx$ = 8					; size = 4
?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngineSink::OnAttemperEngineConclude, COMDAT
; _this$ = ecx

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 64	 sub	 esp, 100		; 00000064H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 285  : 	//状态变量
; 286  : 	m_bCollectUser=false;

  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 287  : 	m_bNeekCorrespond=true;

  00036	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00039	c6 40 0d 01	 mov	 BYTE PTR [eax+13], 1

; 288  : 	m_bNeekPrsnlRmCorrespond=true;

  0003d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00040	c6 40 0e 01	 mov	 BYTE PTR [eax+14], 1

; 289  : 
; 290  : 	//配置信息
; 291  : 	m_pInitParameter=NULL;

  00044	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 292  : 	m_pGameServiceAttrib=NULL;

  0004e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0

; 293  : 	m_pGameServiceOption=NULL;

  00058	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0

; 294  : 	m_pGameMatchOption=NULL;

  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 295  : 
; 296  : 	//组件变量
; 297  : 	m_pITimerEngine=NULL;

  0006c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	c7 80 a8 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147368], 0

; 298  : 	m_pITCPSocketService=NULL;

  00079	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 80 b0 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147376], 0

; 299  : 	m_pPrsnlRmITCPSocketService=NULL;

  00086	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 80 c0 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147392], 0

; 300  : 	m_pITCPNetworkEngine=NULL;

  00093	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00096	c7 80 b4 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147380], 0

; 301  : 	
; 302  : 	//数据引擎
; 303  : 	m_pIRecordDataBaseEngine=NULL;

  000a0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	c7 80 cc 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147404], 0

; 304  : 	m_pIKernelDataBaseEngine=NULL;

  000ad	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	c7 80 d0 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147408], 0

; 305  : 
; 306  : 	//绑定数据
; 307  : 	SafeDeleteArray(m_pNormalParameter);

  000ba	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000c1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000c7	89 4d 98	 mov	 DWORD PTR $T4[ebp], ecx
  000ca	8b 55 98	 mov	 edx, DWORD PTR $T4[ebp]
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000d3	83 c4 04	 add	 esp, 4
  000d6	eb 23		 jmp	 SHORT $LN19@OnAttemper
__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$0:
  000d8	33 c0		 xor	 eax, eax
  000da	75 19		 jne	 SHORT $LN16@OnAttemper
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  000e2	83 c1 17	 add	 ecx, 23			; 00000017H
  000e5	51		 push	 ecx
  000e6	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000eb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000f0	85 c0		 test	 eax, eax
  000f2	74 01		 je	 SHORT $LN16@OnAttemper
  000f4	cc		 int	 3
$LN16@OnAttemper:
  000f5	b8 00 00 00 00	 mov	 eax, $LN26@OnAttemper
  000fa	c3		 ret	 0
$LN19@OnAttemper:
  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00102	eb 07		 jmp	 SHORT __tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$1
$LN26@OnAttemper:
  00104	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$1:
  0010b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0010e	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 308  : 	SafeDeleteArray(m_pAndroidParameter);

  00115	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  0011c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00122	89 4d 94	 mov	 DWORD PTR $T3[ebp], ecx
  00125	8b 55 94	 mov	 edx, DWORD PTR $T3[ebp]
  00128	52		 push	 edx
  00129	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0012e	83 c4 04	 add	 esp, 4
  00131	eb 23		 jmp	 SHORT $LN21@OnAttemper
__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$2:
  00133	33 c0		 xor	 eax, eax
  00135	75 19		 jne	 SHORT $LN17@OnAttemper
  00137	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  0013d	83 c1 18	 add	 ecx, 24			; 00000018H
  00140	51		 push	 ecx
  00141	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00146	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0014b	85 c0		 test	 eax, eax
  0014d	74 01		 je	 SHORT $LN17@OnAttemper
  0014f	cc		 int	 3
$LN17@OnAttemper:
  00150	b8 00 00 00 00	 mov	 eax, $LN28@OnAttemper
  00155	c3		 ret	 0
$LN21@OnAttemper:
  00156	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0015d	eb 07		 jmp	 SHORT __tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$3
$LN28@OnAttemper:
  0015f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$3:
  00166	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00169	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 309  : 
; 310  : 	//任务变量
; 311  : 	m_wTaskCount=0;

  00170	33 c0		 xor	 eax, eax
  00172	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00175	66 89 81 e4 04
	00 00		 mov	 WORD PTR [ecx+1252], ax

; 312  : 	ZeroMemory(&m_TaskParameter,sizeof(m_TaskParameter));

  0017c	68 80 d6 00 00	 push	 54912			; 0000d680H
  00181	6a 00		 push	 0
  00183	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00186	05 e6 04 00 00	 add	 eax, 1254		; 000004e6H
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 _memset
  00191	83 c4 0c	 add	 esp, 12			; 0000000cH

; 313  : 
; 314  : 	ZeroMemory(m_lCheckInReward,sizeof(m_lCheckInReward));

  00194	6a 38		 push	 56			; 00000038H
  00196	6a 00		 push	 0
  00198	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0019b	05 10 03 00 00	 add	 eax, 784		; 00000310H
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 _memset
  001a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 315  : 
; 316  : 	//会员参数
; 317  : 	m_wMemberCount=0;

  001a9	33 c0		 xor	 eax, eax
  001ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001ae	66 89 81 48 03
	00 00		 mov	 WORD PTR [ecx+840], ax

; 318  : 	ZeroMemory(m_MemberParameter,sizeof(m_MemberParameter));

  001b5	68 9a 01 00 00	 push	 410			; 0000019aH
  001ba	6a 00		 push	 0
  001bc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001bf	05 4a 03 00 00	 add	 eax, 842		; 0000034aH
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 _memset
  001ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 319  : 
; 320  : 	//等级参数
; 321  : 	m_wLevelCount=0;

  001cd	33 c0		 xor	 eax, eax
  001cf	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d2	66 89 81 66 db
	00 00		 mov	 WORD PTR [ecx+56166], ax

; 322  : 	ZeroMemory(m_GrowLevelConfig,sizeof(m_GrowLevelConfig));

  001d9	68 68 01 00 00	 push	 360			; 00000168H
  001de	6a 00		 push	 0
  001e0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001e3	05 68 db 00 00	 add	 eax, 56168		; 0000db68H
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 _memset
  001ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 323  : 
; 324  : 
; 325  : 	//删除桌子
; 326  : 	for (INT_PTR i=0;i<m_TableFrameArray.GetCount();i++)

  001f1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$8[ebp], 0
  001f8	eb 09		 jmp	 SHORT $LN4@OnAttemper
$LN2@OnAttemper:
  001fa	8b 45 e8	 mov	 eax, DWORD PTR _i$8[ebp]
  001fd	83 c0 01	 add	 eax, 1
  00200	89 45 e8	 mov	 DWORD PTR _i$8[ebp], eax
$LN4@OnAttemper:
  00203	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00206	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0020c	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00211	39 45 e8	 cmp	 DWORD PTR _i$8[ebp], eax
  00214	7d 54		 jge	 SHORT $LN3@OnAttemper

; 327  : 	{
; 328  : 		SafeRelease(m_TableFrameArray[i]);

  00216	8b 45 e8	 mov	 eax, DWORD PTR _i$8[ebp]
  00219	50		 push	 eax
  0021a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0021d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00223	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00228	83 38 00	 cmp	 DWORD PTR [eax], 0
  0022b	74 3b		 je	 SHORT $LN10@OnAttemper
  0022d	8b 45 e8	 mov	 eax, DWORD PTR _i$8[ebp]
  00230	50		 push	 eax
  00231	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00234	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0023a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0023f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00241	89 4d 8c	 mov	 DWORD PTR tv168[ebp], ecx
  00244	8b 55 8c	 mov	 edx, DWORD PTR tv168[ebp]
  00247	8b 02		 mov	 eax, DWORD PTR [edx]
  00249	8b 4d 8c	 mov	 ecx, DWORD PTR tv168[ebp]
  0024c	8b 10		 mov	 edx, DWORD PTR [eax]
  0024e	ff d2		 call	 edx
  00250	8b 45 e8	 mov	 eax, DWORD PTR _i$8[ebp]
  00253	50		 push	 eax
  00254	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00257	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0025d	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00262	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN10@OnAttemper:

; 329  : 	}

  00268	eb 90		 jmp	 SHORT $LN2@OnAttemper
$LN3@OnAttemper:

; 330  : 
; 331  : 	//删除用户
; 332  : 	m_TableFrameArray.RemoveAll();

  0026a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00273	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::RemoveAll

; 333  : 	m_DistributeManage.RemoveAll();

  00278	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0027b	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  00281	e8 00 00 00 00	 call	 ?RemoveAll@CDistributeManager@@QAEXXZ ; CDistributeManager::RemoveAll

; 334  : 	m_ServerUserManager.DeleteUserItem();

  00286	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00289	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0028f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00292	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00298	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0029b	ff d0		 call	 eax

; 335  : 	m_ServerListManager.ResetServerList();

  0029d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002a0	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  002a6	e8 00 00 00 00	 call	 ?ResetServerList@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::ResetServerList

; 336  : 	
; 337  : 	//停止服务
; 338  : 	m_AndroidUserManager.ConcludeService();

  002ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ae	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  002b4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002b7	8b 90 28 de 00
	00		 mov	 edx, DWORD PTR [eax+56872]
  002bd	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002c0	ff d0		 call	 eax

; 339  : 
; 340  : 	//停止比赛
; 341  : 	if(m_pIMatchServiceManager!=NULL)

  002c2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002c5	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  002cc	74 19		 je	 SHORT $LN11@OnAttemper

; 342  : 		m_pIMatchServiceManager->StopService();

  002ce	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002d1	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  002d7	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  002da	8b 01		 mov	 eax, DWORD PTR [ecx]
  002dc	8b 8a c4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147396]
  002e2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  002e5	ff d2		 call	 edx
$LN11@OnAttemper:

; 343  : 
; 344  : 	//停止约战服务
; 345  : 	if(m_pIPersonalRoomServiceManager!=NULL)

  002e7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002ea	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  002f1	74 19		 je	 SHORT $LN12@OnAttemper

; 346  : 		m_pIPersonalRoomServiceManager->StopService();	

  002f3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002f6	8b 88 c8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147400]
  002fc	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  002ff	8b 01		 mov	 eax, DWORD PTR [ecx]
  00301	8b 8a c8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147400]
  00307	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0030a	ff d2		 call	 edx
$LN12@OnAttemper:

; 347  : 
; 348  : 	//移除消息
; 349  : 	RemoveSystemMessage();

  0030c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0030f	e8 00 00 00 00	 call	 ?RemoveSystemMessage@CAttemperEngineSink@@IAEXXZ ; CAttemperEngineSink::RemoveSystemMessage

; 350  : 
; 351  : 	//移除任务
; 352  : 	m_UserTaskManager.ResetTaskManager();

  00314	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetTaskManager@CUserTaskManager@@QAEXXZ

; 353  : 
; 354  : 	//复位关键字
; 355  : 	m_WordsFilter.ResetSensitiveWordArray();

  00323	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00326	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  0032c	e8 00 00 00 00	 call	 ?ResetSensitiveWordArray@CSensitiveWordsFilter@@QAEXXZ ; CSensitiveWordsFilter::ResetSensitiveWordArray

; 356  : 
; 357  : 	//私人配置
; 358  : 	if(m_PersonalTableParameterArray.GetCount() > 0)

  00331	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	83 c1 34	 add	 ecx, 52			; 00000034H
  00337	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
  0033c	85 c0		 test	 eax, eax
  0033e	0f 8e a0 00 00
	00		 jle	 $LN13@OnAttemper

; 359  : 	{
; 360  : 		
; 361  : 		INT_PTR nSize = m_PersonalTableParameterArray.GetCount();

  00344	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00347	83 c1 34	 add	 ecx, 52			; 00000034H
  0034a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
  0034f	89 45 e4	 mov	 DWORD PTR _nSize$7[ebp], eax

; 362  : 		for(INT_PTR i = 0; i < nSize; ++i)

  00352	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  00359	eb 09		 jmp	 SHORT $LN7@OnAttemper
$LN5@OnAttemper:
  0035b	8b 45 e0	 mov	 eax, DWORD PTR _i$6[ebp]
  0035e	83 c0 01	 add	 eax, 1
  00361	89 45 e0	 mov	 DWORD PTR _i$6[ebp], eax
$LN7@OnAttemper:
  00364	8b 45 e0	 mov	 eax, DWORD PTR _i$6[ebp]
  00367	3b 45 e4	 cmp	 eax, DWORD PTR _nSize$7[ebp]
  0036a	7d 6d		 jge	 SHORT $LN6@OnAttemper

; 363  : 		{
; 364  : 			tagPersonalTableParameter* pPersonalTableParameter = m_PersonalTableParameterArray.GetAt(i);

  0036c	8b 45 e0	 mov	 eax, DWORD PTR _i$6[ebp]
  0036f	50		 push	 eax
  00370	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00373	83 c1 34	 add	 ecx, 52			; 00000034H
  00376	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetAt
  0037b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037d	89 4d dc	 mov	 DWORD PTR _pPersonalTableParameter$5[ebp], ecx

; 365  : 			SafeDelete(pPersonalTableParameter);

  00380	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 4
  00387	8b 45 dc	 mov	 eax, DWORD PTR _pPersonalTableParameter$5[ebp]
  0038a	89 45 90	 mov	 DWORD PTR $T2[ebp], eax
  0038d	6a 30		 push	 48			; 00000030H
  0038f	8b 4d 90	 mov	 ecx, DWORD PTR $T2[ebp]
  00392	51		 push	 ecx
  00393	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00398	83 c4 08	 add	 esp, 8
  0039b	eb 23		 jmp	 SHORT $LN23@OnAttemper
__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$4:
  0039d	33 c0		 xor	 eax, eax
  0039f	75 19		 jne	 SHORT $LN18@OnAttemper
  003a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  003a7	83 c1 51	 add	 ecx, 81			; 00000051H
  003aa	51		 push	 ecx
  003ab	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  003b0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003b5	85 c0		 test	 eax, eax
  003b7	74 01		 je	 SHORT $LN18@OnAttemper
  003b9	cc		 int	 3
$LN18@OnAttemper:
  003ba	b8 00 00 00 00	 mov	 eax, $LN30@OnAttemper
  003bf	c3		 ret	 0
$LN23@OnAttemper:
  003c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  003c7	eb 07		 jmp	 SHORT __tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$5
$LN30@OnAttemper:
  003c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$5:
  003d0	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pPersonalTableParameter$5[ebp], 0

; 366  : 		}

  003d7	eb 82		 jmp	 SHORT $LN5@OnAttemper
$LN6@OnAttemper:

; 367  : 		m_PersonalTableParameterArray.RemoveAll();

  003d9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003dc	83 c1 34	 add	 ecx, 52			; 00000034H
  003df	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXXZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::RemoveAll
$LN13@OnAttemper:

; 368  : 	}
; 369  : 
; 370  : 	return true;

  003e4	b0 01		 mov	 al, 1

; 371  : }

  003e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  003e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003f0	59		 pop	 ecx
  003f1	5f		 pop	 edi
  003f2	5e		 pop	 esi
  003f3	5b		 pop	 ebx
  003f4	8b e5		 mov	 esp, ebp
  003f6	5d		 pop	 ebp
  003f7	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngineSink::OnAttemperEngineConclude
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngineSink::OnAttemperEngineStart, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 167  : 	//绑定信息
; 168  : 	m_pAndroidParameter=new tagBindParameter[MAX_ANDROID];

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  00011	83 c0 02	 add	 eax, 2
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0001a	68 00 00 01 00	 push	 65536			; 00010000H
  0001f	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH
  00027	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 55 b8	 mov	 edx, DWORD PTR $T2[ebp]
  00030	89 51 1c	 mov	 DWORD PTR [ecx+28], edx

; 169  : 	ZeroMemory(m_pAndroidParameter,sizeof(tagBindParameter)*MAX_ANDROID);

  00033	68 00 00 01 00	 push	 65536			; 00010000H
  00038	6a 00		 push	 0
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _memset
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 170  : 
; 171  : 	//绑定信息
; 172  : 	m_pNormalParameter=new tagBindParameter[m_pGameServiceOption->wMaxPlayer];

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  0004e	83 c0 06	 add	 eax, 6
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0005d	0f b7 42 44	 movzx	 eax, WORD PTR [edx+68]
  00061	33 c9		 xor	 ecx, ecx
  00063	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00068	f7 e2		 mul	 edx
  0006a	0f 90 c1	 seto	 cl
  0006d	f7 d9		 neg	 ecx
  0006f	0b c8		 or	 ecx, eax
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  00083	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 173  : 	ZeroMemory(m_pNormalParameter,sizeof(tagBindParameter)*m_pGameServiceOption->wMaxPlayer);

  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0008c	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  00090	c1 e2 05	 shl	 edx, 5
  00093	52		 push	 edx
  00094	6a 00		 push	 0
  00096	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 _memset
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 174  : 
; 175  : 	//配置比赛
; 176  : 	InitMatchServiceManager();

  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?InitMatchServiceManager@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitMatchServiceManager

; 177  : 
; 178  : 	//配置约战房
; 179  : 	InitPersonalRoomServiceManager();

  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?InitPersonalRoomServiceManager@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitPersonalRoomServiceManager

; 180  : 
; 181  : 	//配置机器
; 182  : 	if (InitAndroidUser()==false)

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?InitAndroidUser@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitAndroidUser
  000bd	0f b6 c0	 movzx	 eax, al
  000c0	85 c0		 test	 eax, eax
  000c2	75 24		 jne	 SHORT $LN2@OnAttemper

; 183  : 	{
; 184  : 		ASSERT(FALSE);

  000c4	33 c0		 xor	 eax, eax
  000c6	75 19		 jne	 SHORT $LN18@OnAttemper
  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  000ce	83 c1 12	 add	 ecx, 18			; 00000012H
  000d1	51		 push	 ecx
  000d2	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000d7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000dc	85 c0		 test	 eax, eax
  000de	74 01		 je	 SHORT $LN18@OnAttemper
  000e0	cc		 int	 3
$LN18@OnAttemper:

; 185  : 		return false;

  000e1	32 c0		 xor	 al, al
  000e3	e9 e8 03 00 00	 jmp	 $LN1@OnAttemper
$LN2@OnAttemper:

; 186  : 	}
; 187  : 
; 188  : 	//配置桌子
; 189  : 	if (InitTableFrameArray()==false)

  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?InitTableFrameArray@CAttemperEngineSink@@IAE_NXZ ; CAttemperEngineSink::InitTableFrameArray
  000f0	0f b6 c0	 movzx	 eax, al
  000f3	85 c0		 test	 eax, eax
  000f5	75 24		 jne	 SHORT $LN3@OnAttemper

; 190  : 	{
; 191  : 		ASSERT(FALSE);

  000f7	33 c0		 xor	 eax, eax
  000f9	75 19		 jne	 SHORT $LN19@OnAttemper
  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  00101	83 c1 19	 add	 ecx, 25			; 00000019H
  00104	51		 push	 ecx
  00105	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  0010a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0010f	85 c0		 test	 eax, eax
  00111	74 01		 je	 SHORT $LN19@OnAttemper
  00113	cc		 int	 3
$LN19@OnAttemper:

; 192  : 		return false;

  00114	32 c0		 xor	 al, al
  00116	e9 b5 03 00 00	 jmp	 $LN1@OnAttemper
$LN3@OnAttemper:

; 193  : 	}
; 194  : 
; 195  : 	//设置接口
; 196  : 	if(m_pIMatchServiceManager!=NULL)

  0011b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	83 b8 c4 3f 02
	00 00		 cmp	 DWORD PTR [eax+147396], 0
  00125	74 61		 je	 SHORT $LN4@OnAttemper

; 197  : 	{
; 198  : 		if (m_ServerUserManager.SetServerUserItemSink(m_pIMatchServiceManager->GetServerUserItemSink())==false)

  00127	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012a	8b 88 c4 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147396]
  00130	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00133	8b 01		 mov	 eax, DWORD PTR [ecx]
  00135	8b 8a c4 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147396]
  0013b	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  0013e	ff d2		 call	 edx
  00140	50		 push	 eax
  00141	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0014a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  00153	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00156	ff d0		 call	 eax
  00158	0f b6 c8	 movzx	 ecx, al
  0015b	85 c9		 test	 ecx, ecx
  0015d	75 24		 jne	 SHORT $LN6@OnAttemper

; 199  : 		{
; 200  : 			ASSERT(FALSE);

  0015f	33 c0		 xor	 eax, eax
  00161	75 19		 jne	 SHORT $LN20@OnAttemper
  00163	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  00169	83 c1 22	 add	 ecx, 34			; 00000022H
  0016c	51		 push	 ecx
  0016d	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00172	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00177	85 c0		 test	 eax, eax
  00179	74 01		 je	 SHORT $LN20@OnAttemper
  0017b	cc		 int	 3
$LN20@OnAttemper:

; 201  : 			return false;

  0017c	32 c0		 xor	 al, al
  0017e	e9 4d 03 00 00	 jmp	 $LN1@OnAttemper
$LN6@OnAttemper:

; 202  : 		}
; 203  : 
; 204  : 	}

  00183	e9 0c 01 00 00	 jmp	 $LN5@OnAttemper
$LN4@OnAttemper:

; 205  : 	else if(m_pIPersonalRoomServiceManager!=NULL)//设置约战房间接口

  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	83 b8 c8 3f 02
	00 00		 cmp	 DWORD PTR [eax+147400], 0
  00192	0f 84 a2 00 00
	00		 je	 $LN7@OnAttemper

; 206  : 	{
; 207  : 		if (m_ServerUserManager.SetServerUserItemSink(m_pIPersonalRoomServiceManager->GetServerUserItemSink())==false)

  00198	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0019b	8b 88 c8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147400]
  001a1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a4	8b 01		 mov	 eax, DWORD PTR [ecx]
  001a6	8b 8a c8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147400]
  001ac	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  001af	ff d2		 call	 edx
  001b1	50		 push	 eax
  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  001bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001be	8b 90 d8 dd 00
	00		 mov	 edx, DWORD PTR [eax+56792]
  001c4	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c7	ff d0		 call	 eax
  001c9	0f b6 c8	 movzx	 ecx, al
  001cc	85 c9		 test	 ecx, ecx
  001ce	75 24		 jne	 SHORT $LN9@OnAttemper

; 208  : 		{
; 209  : 			ASSERT(FALSE);

  001d0	33 c0		 xor	 eax, eax
  001d2	75 19		 jne	 SHORT $LN21@OnAttemper
  001d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  001da	83 c1 2b	 add	 ecx, 43			; 0000002bH
  001dd	51		 push	 ecx
  001de	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  001e3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001e8	85 c0		 test	 eax, eax
  001ea	74 01		 je	 SHORT $LN21@OnAttemper
  001ec	cc		 int	 3
$LN21@OnAttemper:

; 210  : 			return false;

  001ed	32 c0		 xor	 al, al
  001ef	e9 dc 02 00 00	 jmp	 $LN1@OnAttemper
$LN9@OnAttemper:

; 211  : 		}
; 212  : 		//启动约战
; 213  : 		if (m_pIPersonalRoomServiceManager->StartService() == false)

  001f4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f7	8b 88 c8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147400]
  001fd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00200	8b 01		 mov	 eax, DWORD PTR [ecx]
  00202	8b 8a c8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147400]
  00208	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0020b	ff d2		 call	 edx
  0020d	0f b6 c0	 movzx	 eax, al
  00210	85 c0		 test	 eax, eax
  00212	75 24		 jne	 SHORT $LN10@OnAttemper

; 214  : 		{
; 215  : 			ASSERT(FALSE);

  00214	33 c0		 xor	 eax, eax
  00216	75 19		 jne	 SHORT $LN22@OnAttemper
  00218	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  0021e	83 c1 31	 add	 ecx, 49			; 00000031H
  00221	51		 push	 ecx
  00222	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00227	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0022c	85 c0		 test	 eax, eax
  0022e	74 01		 je	 SHORT $LN22@OnAttemper
  00230	cc		 int	 3
$LN22@OnAttemper:

; 216  : 			return false;

  00231	32 c0		 xor	 al, al
  00233	e9 98 02 00 00	 jmp	 $LN1@OnAttemper
$LN10@OnAttemper:

; 217  : 		}
; 218  : 	}
; 219  : 	else

  00238	eb 5a		 jmp	 SHORT $LN5@OnAttemper
$LN7@OnAttemper:

; 220  : 	{
; 221  : 		if (m_ServerUserManager.SetServerUserItemSink(QUERY_ME_INTERFACE(IServerUserItemSink))==false)

  0023a	68 00 01 01 06	 push	 100729088		; 06010100H
  0023f	68 00 00 00 00	 push	 OFFSET ?IID_IServerUserItemSink@@3U_GUID@@B
  00244	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00247	8b 10		 mov	 edx, DWORD PTR [eax]
  00249	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0024f	ff d0		 call	 eax
  00251	50		 push	 eax
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00255	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  0025b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0025e	8b 82 d8 dd 00
	00		 mov	 eax, DWORD PTR [edx+56792]
  00264	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00267	ff d2		 call	 edx
  00269	0f b6 c0	 movzx	 eax, al
  0026c	85 c0		 test	 eax, eax
  0026e	75 24		 jne	 SHORT $LN5@OnAttemper

; 222  : 		{
; 223  : 			ASSERT(FALSE);

  00270	33 c0		 xor	 eax, eax
  00272	75 19		 jne	 SHORT $LN23@OnAttemper
  00274	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  0027a	83 c1 39	 add	 ecx, 57			; 00000039H
  0027d	51		 push	 ecx
  0027e	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00283	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00288	85 c0		 test	 eax, eax
  0028a	74 01		 je	 SHORT $LN23@OnAttemper
  0028c	cc		 int	 3
$LN23@OnAttemper:

; 224  : 			return false;

  0028d	32 c0		 xor	 al, al
  0028f	e9 3c 02 00 00	 jmp	 $LN1@OnAttemper
$LN5@OnAttemper:

; 225  : 		}
; 226  : 	}
; 227  : 
; 228  : 	//启动机器
; 229  : 	if (m_AndroidUserManager.StartService()==false)

  00294	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00297	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  0029d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002a0	8b 90 28 de 00
	00		 mov	 edx, DWORD PTR [eax+56872]
  002a6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002a9	ff d0		 call	 eax
  002ab	0f b6 c8	 movzx	 ecx, al
  002ae	85 c9		 test	 ecx, ecx
  002b0	75 24		 jne	 SHORT $LN12@OnAttemper

; 230  : 	{
; 231  : 		ASSERT(FALSE);

  002b2	33 c0		 xor	 eax, eax
  002b4	75 19		 jne	 SHORT $LN24@OnAttemper
  002b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  002bc	83 c1 41	 add	 ecx, 65			; 00000041H
  002bf	51		 push	 ecx
  002c0	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  002c5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002ca	85 c0		 test	 eax, eax
  002cc	74 01		 je	 SHORT $LN24@OnAttemper
  002ce	cc		 int	 3
$LN24@OnAttemper:

; 232  : 		return false;

  002cf	32 c0		 xor	 al, al
  002d1	e9 fa 01 00 00	 jmp	 $LN1@OnAttemper
$LN12@OnAttemper:

; 233  : 	}
; 234  : 
; 235  : 	//设置接口
; 236  : 	m_AndroidUserManager.SetMainServiceFrame(QUERY_ME_INTERFACE(IMainServiceFrame));

  002d6	68 00 01 01 06	 push	 100729088		; 06010100H
  002db	68 00 00 00 00	 push	 OFFSET ?IID_IMainServiceFrame@@3U_GUID@@B
  002e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e3	8b 10		 mov	 edx, DWORD PTR [eax]
  002e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002eb	ff d0		 call	 eax
  002ed	50		 push	 eax
  002ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f1	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  002f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetMainServiceFrame@CAndroidUserManager@@QAEXPAUIMainServiceFrame@@@Z

; 237  : 
; 238  : 	//设置规则
; 239  : 	m_DistributeManage.SetDistributeRule(m_pGameServiceOption->cbDistributeRule);

  002fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00300	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00303	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  0030a	52		 push	 edx
  0030b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0030e	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  00314	e8 00 00 00 00	 call	 ?SetDistributeRule@CDistributeManager@@QAEXE@Z ; CDistributeManager::SetDistributeRule

; 240  : 
; 241  : 	//设置时间
; 242  : 	m_pITimerEngine->SetTimer(IDI_GAME_SERVICE_PULSE,1000L,TIMES_INFINITY,NULL);

  00319	6a 00		 push	 0
  0031b	6a ff		 push	 -1
  0031d	68 e8 03 00 00	 push	 1000			; 000003e8H
  00322	6a 05		 push	 5
  00324	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00327	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0032d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00330	8b 01		 mov	 eax, DWORD PTR [ecx]
  00332	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  00338	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0033b	ff d2		 call	 edx

; 243  : 	m_pITimerEngine->SetTimer(IDI_DBCORRESPOND_NOTIFY,TIME_DBCORRESPOND_NOTIFY*1000L,TIMES_INFINITY,NULL);

  0033d	6a 00		 push	 0
  0033f	6a ff		 push	 -1
  00341	68 b8 0b 00 00	 push	 3000			; 00000bb8H
  00346	6a 07		 push	 7
  00348	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0034b	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00351	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00354	8b 01		 mov	 eax, DWORD PTR [ecx]
  00356	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  0035c	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0035f	ff d2		 call	 edx

; 244  : #ifdef _DEBUG
; 245  : 	m_pITimerEngine->SetTimer(IDI_LOAD_SYSTEM_MESSAGE, 15 * 1000L, TIMES_INFINITY, NULL);

  00361	6a 00		 push	 0
  00363	6a ff		 push	 -1
  00365	68 98 3a 00 00	 push	 15000			; 00003a98H
  0036a	6a 08		 push	 8
  0036c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0036f	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00375	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00378	8b 01		 mov	 eax, DWORD PTR [ecx]
  0037a	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  00380	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00383	ff d2		 call	 edx

; 246  : 	m_pITimerEngine->SetTimer(IDI_SEND_SYSTEM_MESSAGE, 5 * 1000L, TIMES_INFINITY, NULL);

  00385	6a 00		 push	 0
  00387	6a ff		 push	 -1
  00389	68 88 13 00 00	 push	 5000			; 00001388H
  0038e	6a 09		 push	 9
  00390	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00393	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  00399	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0039c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0039e	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  003a4	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  003a7	ff d2		 call	 edx

; 247  : #else
; 248  : 	m_pITimerEngine->SetTimer(IDI_LOAD_SYSTEM_MESSAGE, TIME_LOAD_SYSTEM_MESSAGE * 1000L, TIMES_INFINITY, NULL);
; 249  : 	m_pITimerEngine->SetTimer(IDI_SEND_SYSTEM_MESSAGE, TIME_SEND_SYSTEM_MESSAGE * 1000L, TIMES_INFINITY, NULL);
; 250  : #endif
; 251  : 	//延时加载敏感词
; 252  : 	m_pITimerEngine->SetTimer(IDI_LOAD_SENSITIVE_WORD,TIME_LOAD_SENSITIVE_WORD*1000L,TIMES_INFINITY,NULL);

  003a9	6a 00		 push	 0
  003ab	6a ff		 push	 -1
  003ad	68 88 13 00 00	 push	 5000			; 00001388H
  003b2	6a 0a		 push	 10			; 0000000aH
  003b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003b7	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  003bd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003c0	8b 01		 mov	 eax, DWORD PTR [ecx]
  003c2	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  003c8	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  003cb	ff d2		 call	 edx

; 253  : 
; 254  : 	//防作弊模式
; 255  : 	if ((m_pGameServiceOption->cbDistributeRule&DISTRIBUTE_ALLOW)!=0)

  003cd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003d0	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003d3	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  003da	83 e2 01	 and	 edx, 1
  003dd	74 33		 je	 SHORT $LN13@OnAttemper

; 256  : 	{
; 257  : 		m_pITimerEngine->SetTimer(IDI_DISTRIBUTE_USER,m_pGameServiceOption->wDistributeTimeSpace*1000,TIMES_INFINITY,NULL);

  003df	6a 00		 push	 0
  003e1	6a ff		 push	 -1
  003e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003e6	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  003e9	0f b7 91 94 00
	00 00		 movzx	 edx, WORD PTR [ecx+148]
  003f0	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  003f6	50		 push	 eax
  003f7	6a 0b		 push	 11			; 0000000bH
  003f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003fc	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  00402	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00405	8b 12		 mov	 edx, DWORD PTR [edx]
  00407	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0040d	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00410	ff d0		 call	 eax
$LN13@OnAttemper:

; 258  : 	}
; 259  : 
; 260  : 	//机器人参赛
; 261  : 	if (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH)

  00412	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00415	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00418	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0041c	83 fa 04	 cmp	 edx, 4
  0041f	75 33		 jne	 SHORT $LN14@OnAttemper

; 262  : 	{
; 263  : 		m_pITimerEngine->SetTimer(IDI_ANDROID_JION_MATCH,m_pGameServiceOption->wDistributeTimeSpace*1000,TIMES_INFINITY,NULL);

  00421	6a 00		 push	 0
  00423	6a ff		 push	 -1
  00425	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00428	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0042b	0f b7 91 94 00
	00 00		 movzx	 edx, WORD PTR [ecx+148]
  00432	69 c2 e8 03 00
	00		 imul	 eax, edx, 1000
  00438	50		 push	 eax
  00439	6a 0c		 push	 12			; 0000000cH
  0043b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0043e	8b 91 a8 3f 02
	00		 mov	 edx, DWORD PTR [ecx+147368]
  00444	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00447	8b 12		 mov	 edx, DWORD PTR [edx]
  00449	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0044f	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00452	ff d0		 call	 eax
$LN14@OnAttemper:

; 264  : 	}
; 265  : 
; 266  : 	//加载机器
; 267  : 	if (CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule) || 

  00454	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00457	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0045a	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0045d	52		 push	 edx
  0045e	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  00463	83 c4 04	 add	 esp, 4
  00466	0f b6 c0	 movzx	 eax, al
  00469	85 c0		 test	 eax, eax
  0046b	75 19		 jne	 SHORT $LN16@OnAttemper
  0046d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00470	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00473	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00476	52		 push	 edx
  00477	e8 00 00 00 00	 call	 ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidSimulate
  0047c	83 c4 04	 add	 esp, 4
  0047f	0f b6 c0	 movzx	 eax, al
  00482	85 c0		 test	 eax, eax
  00484	74 48		 je	 SHORT $LN15@OnAttemper
$LN16@OnAttemper:

; 268  : 		CServerRule::IsAllowAndroidSimulate(m_pGameServiceOption->dwServerRule) )
; 269  : 	{
; 270  : #ifdef _DEBUG			
; 271  : 	m_pITimerEngine->SetTimer(IDI_LOAD_ANDROID_USER,10000L,TIMES_INFINITY,NULL);

  00486	6a 00		 push	 0
  00488	6a ff		 push	 -1
  0048a	68 10 27 00 00	 push	 10000			; 00002710H
  0048f	6a 02		 push	 2
  00491	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00494	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  0049a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0049d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0049f	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  004a5	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  004a8	ff d2		 call	 edx

; 272  : 	m_pITimerEngine->SetTimer(IDI_DISTRIBUTE_ANDROID,TIME_DISTRIBUTE_ANDROID*1000L,TIMES_INFINITY,NULL);

  004aa	6a 00		 push	 0
  004ac	6a ff		 push	 -1
  004ae	68 98 3a 00 00	 push	 15000			; 00003a98H
  004b3	6a 06		 push	 6
  004b5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004b8	8b 88 a8 3f 02
	00		 mov	 ecx, DWORD PTR [eax+147368]
  004be	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004c1	8b 01		 mov	 eax, DWORD PTR [ecx]
  004c3	8b 8a a8 3f 02
	00		 mov	 ecx, DWORD PTR [edx+147368]
  004c9	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  004cc	ff d2		 call	 edx
$LN15@OnAttemper:

; 273  : #else
; 274  : 	m_pITimerEngine->SetTimer(IDI_LOAD_ANDROID_USER,TIME_LOAD_ANDROID_USER*1000L,TIMES_INFINITY,NULL);
; 275  : 	m_pITimerEngine->SetTimer(IDI_DISTRIBUTE_ANDROID,TIME_DISTRIBUTE_ANDROID*1000L,TIMES_INFINITY,NULL);
; 276  : #endif
; 277  : 	}
; 278  : 
; 279  : 	return true;

  004ce	b0 01		 mov	 al, 1
$LN1@OnAttemper:

; 280  : }

  004d0	5f		 pop	 edi
  004d1	5e		 pop	 esi
  004d2	5b		 pop	 ebx
  004d3	8b e5		 mov	 esp, ebp
  004d5	5d		 pop	 ebp
  004d6	c2 04 00	 ret	 4
?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngineSink::OnAttemperEngineStart
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
tv140 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z PROC ; CAttemperEngineSink::QueryInterface, COMDAT
; _this$ = ecx

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 	QUERYINTERFACE(IMainServiceFrame,Guid,dwQueryVer);

  0000c	68 00 00 00 00	 push	 OFFSET ?IID_IMainServiceFrame@@3U_GUID@@B
  00011	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _==
  0001a	83 c4 08	 add	 esp, 8
  0001d	0f b6 c8	 movzx	 ecx, al
  00020	85 c9		 test	 ecx, ecx
  00022	74 38		 je	 SHORT $LN2@QueryInter
  00024	68 00 01 01 06	 push	 100729088		; 06010100H
  00029	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00032	83 c4 08	 add	 esp, 8
  00035	0f b6 c8	 movzx	 ecx, al
  00038	85 c9		 test	 ecx, ecx
  0003a	74 20		 je	 SHORT $LN2@QueryInter
  0003c	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  00040	74 0b		 je	 SHORT $LN7@QueryInter
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 c0 04	 add	 eax, 4
  00048	89 45 b8	 mov	 DWORD PTR tv78[ebp], eax
  0004b	eb 07		 jmp	 SHORT $LN8@QueryInter
$LN7@QueryInter:
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN8@QueryInter:
  00054	8b 45 b8	 mov	 eax, DWORD PTR tv78[ebp]
  00057	e9 bc 00 00 00	 jmp	 $LN1@QueryInter
$LN2@QueryInter:

; 158  : 	QUERYINTERFACE(IAttemperEngineSink,Guid,dwQueryVer);

  0005c	68 00 00 00 00	 push	 OFFSET ?IID_IAttemperEngineSink@@3U_GUID@@B
  00061	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _==
  0006a	83 c4 08	 add	 esp, 8
  0006d	0f b6 c8	 movzx	 ecx, al
  00070	85 c9		 test	 ecx, ecx
  00072	74 20		 je	 SHORT $LN3@QueryInter
  00074	68 00 01 01 06	 push	 100729088		; 06010100H
  00079	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00082	83 c4 08	 add	 esp, 8
  00085	0f b6 c8	 movzx	 ecx, al
  00088	85 c9		 test	 ecx, ecx
  0008a	74 08		 je	 SHORT $LN3@QueryInter
  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	e9 84 00 00 00	 jmp	 $LN1@QueryInter
$LN3@QueryInter:

; 159  : 	QUERYINTERFACE(IServerUserItemSink,Guid,dwQueryVer);

  00094	68 00 00 00 00	 push	 OFFSET ?IID_IServerUserItemSink@@3U_GUID@@B
  00099	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 _==
  000a2	83 c4 08	 add	 esp, 8
  000a5	0f b6 c8	 movzx	 ecx, al
  000a8	85 c9		 test	 ecx, ecx
  000aa	74 35		 je	 SHORT $LN4@QueryInter
  000ac	68 00 01 01 06	 push	 100729088		; 06010100H
  000b1	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  000ba	83 c4 08	 add	 esp, 8
  000bd	0f b6 c8	 movzx	 ecx, al
  000c0	85 c9		 test	 ecx, ecx
  000c2	74 1d		 je	 SHORT $LN4@QueryInter
  000c4	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  000c8	74 0b		 je	 SHORT $LN9@QueryInter
  000ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	83 c0 08	 add	 eax, 8
  000d0	89 45 b8	 mov	 DWORD PTR tv140[ebp], eax
  000d3	eb 07		 jmp	 SHORT $LN10@QueryInter
$LN9@QueryInter:
  000d5	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN10@QueryInter:
  000dc	8b 45 b8	 mov	 eax, DWORD PTR tv140[ebp]
  000df	eb 37		 jmp	 SHORT $LN1@QueryInter
$LN4@QueryInter:

; 160  : 	QUERYINTERFACE_IUNKNOWNEX(IAttemperEngineSink,Guid,dwQueryVer);

  000e1	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  000e6	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 _==
  000ef	83 c4 08	 add	 esp, 8
  000f2	0f b6 c8	 movzx	 ecx, al
  000f5	85 c9		 test	 ecx, ecx
  000f7	74 1d		 je	 SHORT $LN5@QueryInter
  000f9	68 00 01 01 06	 push	 100729088		; 06010100H
  000fe	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00107	83 c4 08	 add	 esp, 8
  0010a	0f b6 c8	 movzx	 ecx, al
  0010d	85 c9		 test	 ecx, ecx
  0010f	74 05		 je	 SHORT $LN5@QueryInter
  00111	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00114	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN5@QueryInter:

; 161  : 	return NULL;

  00116	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 162  : }

  00118	5f		 pop	 edi
  00119	5e		 pop	 esi
  0011a	5b		 pop	 ebx
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 08 00	 ret	 8
?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ENDP ; CAttemperEngineSink::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.h
;	COMDAT ?Release@CAttemperEngineSink@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@CAttemperEngineSink@@UAEXXZ PROC		; CAttemperEngineSink::Release, COMDAT
; _this$ = ecx

; 161  : 	virtual VOID Release() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?Release@CAttemperEngineSink@@UAEXXZ ENDP		; CAttemperEngineSink::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ??1CAttemperEngineSink@@UAE@XZ
_TEXT	SEGMENT
tv279 = -108						; size = 4
tv175 = -108						; size = 4
$T2 = -104						; size = 4
$T3 = -100						; size = 4
$T4 = -96						; size = 4
_i$5 = -28						; size = 4
_i$6 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CAttemperEngineSink@@UAE@XZ PROC			; CAttemperEngineSink::~CAttemperEngineSink, COMDAT
; _this$ = ecx

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAttemperEngineSink@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngineSink@@6BIAttemperEngineSink@@@
  00038	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_7CAttemperEngineSink@@6BIMainServiceFrame@@@
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], OFFSET ??_7CAttemperEngineSink@@6BIServerUserItemSink@@@
  0004c	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH

; 127  : 	//删除数据
; 128  : 	SafeDeleteArray(m_pNormalParameter);

  00053	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+12], 12 ; 0000000cH
  00057	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005d	89 4d a0	 mov	 DWORD PTR $T4[ebp], ecx
  00060	8b 55 a0	 mov	 edx, DWORD PTR $T4[ebp]
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00069	83 c4 04	 add	 esp, 4
  0006c	eb 23		 jmp	 SHORT $LN16@CAttemperE
__catch$??1CAttemperEngineSink@@UAE@XZ$0:
  0006e	33 c0		 xor	 eax, eax
  00070	75 19		 jne	 SHORT $LN13@CAttemperE
  00072	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CAttemperEngineSink@@UAE@XZ@4JA
  00078	83 c1 02	 add	 ecx, 2
  0007b	51		 push	 ecx
  0007c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00081	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00086	85 c0		 test	 eax, eax
  00088	74 01		 je	 SHORT $LN13@CAttemperE
  0008a	cc		 int	 3
$LN13@CAttemperE:
  0008b	b8 00 00 00 00	 mov	 eax, $LN35@CAttemperE
  00090	c3		 ret	 0
$LN16@CAttemperE:
  00091	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH
  00098	eb 07		 jmp	 SHORT __tryend$??1CAttemperEngineSink@@UAE@XZ$1
$LN35@CAttemperE:
  0009a	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH
__tryend$??1CAttemperEngineSink@@UAE@XZ$1:
  000a1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 129  : 	SafeDeleteArray(m_pAndroidParameter);

  000ab	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+12], 14 ; 0000000eH
  000af	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  000b5	89 4d 9c	 mov	 DWORD PTR $T3[ebp], ecx
  000b8	8b 55 9c	 mov	 edx, DWORD PTR $T3[ebp]
  000bb	52		 push	 edx
  000bc	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000c1	83 c4 04	 add	 esp, 4
  000c4	eb 23		 jmp	 SHORT $LN18@CAttemperE
__catch$??1CAttemperEngineSink@@UAE@XZ$2:
  000c6	33 c0		 xor	 eax, eax
  000c8	75 19		 jne	 SHORT $LN14@CAttemperE
  000ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CAttemperEngineSink@@UAE@XZ@4JA
  000d0	83 c1 03	 add	 ecx, 3
  000d3	51		 push	 ecx
  000d4	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  000d9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000de	85 c0		 test	 eax, eax
  000e0	74 01		 je	 SHORT $LN14@CAttemperE
  000e2	cc		 int	 3
$LN14@CAttemperE:
  000e3	b8 00 00 00 00	 mov	 eax, $LN37@CAttemperE
  000e8	c3		 ret	 0
$LN18@CAttemperE:
  000e9	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH
  000f0	eb 07		 jmp	 SHORT __tryend$??1CAttemperEngineSink@@UAE@XZ$3
$LN37@CAttemperE:
  000f2	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH
__tryend$??1CAttemperEngineSink@@UAE@XZ$3:
  000f9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 130  : 
; 131  : 	//删除桌子
; 132  : 	for (INT_PTR i=0;i<m_TableFrameArray.GetCount();i++)

  00103	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  0010a	eb 09		 jmp	 SHORT $LN4@CAttemperE
$LN2@CAttemperE:
  0010c	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  0010f	83 c0 01	 add	 eax, 1
  00112	89 45 e8	 mov	 DWORD PTR _i$6[ebp], eax
$LN4@CAttemperE:
  00115	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0011e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
  00123	39 45 e8	 cmp	 DWORD PTR _i$6[ebp], eax
  00126	7d 54		 jge	 SHORT $LN3@CAttemperE

; 133  : 	{
; 134  : 		SafeRelease(m_TableFrameArray[i]);

  00128	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  0012b	50		 push	 eax
  0012c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00135	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  0013a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0013d	74 3b		 je	 SHORT $LN10@CAttemperE
  0013f	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  00142	50		 push	 eax
  00143	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00146	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0014c	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00151	8b 08		 mov	 ecx, DWORD PTR [eax]
  00153	89 4d 94	 mov	 DWORD PTR tv175[ebp], ecx
  00156	8b 55 94	 mov	 edx, DWORD PTR tv175[ebp]
  00159	8b 02		 mov	 eax, DWORD PTR [edx]
  0015b	8b 4d 94	 mov	 ecx, DWORD PTR tv175[ebp]
  0015e	8b 10		 mov	 edx, DWORD PTR [eax]
  00160	ff d2		 call	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  00165	50		 push	 eax
  00166	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00169	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0016f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
  00174	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN10@CAttemperE:

; 135  : 	}

  0017a	eb 90		 jmp	 SHORT $LN2@CAttemperE
$LN3@CAttemperE:

; 136  : 	
; 137  : 	//删除消息
; 138  : 	m_SystemMessageBuffer.Append(m_SystemMessageActive);

  0017c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0017f	05 68 3f 02 00	 add	 eax, 147304		; 00023f68H
  00184	50		 push	 eax
  00185	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  0018e	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Append

; 139  : 	for (INT_PTR i = 0; i < m_SystemMessageBuffer.GetCount(); i++)

  00193	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  0019a	eb 09		 jmp	 SHORT $LN7@CAttemperE
$LN5@CAttemperE:
  0019c	8b 45 e4	 mov	 eax, DWORD PTR _i$5[ebp]
  0019f	83 c0 01	 add	 eax, 1
  001a2	89 45 e4	 mov	 DWORD PTR _i$5[ebp], eax
$LN7@CAttemperE:
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  001ae	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
  001b3	39 45 e4	 cmp	 DWORD PTR _i$5[ebp], eax
  001b6	0f 8d 84 00 00
	00		 jge	 $LN6@CAttemperE

; 140  : 	{
; 141  : 		SafeDelete(m_SystemMessageBuffer[i]);

  001bc	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+12], 16 ; 00000010H
  001c0	8b 45 e4	 mov	 eax, DWORD PTR _i$5[ebp]
  001c3	50		 push	 eax
  001c4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c7	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  001cd	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
  001d2	89 45 94	 mov	 DWORD PTR tv279[ebp], eax
  001d5	8b 4d 94	 mov	 ecx, DWORD PTR tv279[ebp]
  001d8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001da	89 55 98	 mov	 DWORD PTR $T2[ebp], edx
  001dd	68 9e 00 00 00	 push	 158			; 0000009eH
  001e2	8b 45 98	 mov	 eax, DWORD PTR $T2[ebp]
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001eb	83 c4 08	 add	 esp, 8
  001ee	eb 23		 jmp	 SHORT $LN20@CAttemperE
__catch$??1CAttemperEngineSink@@UAE@XZ$4:
  001f0	33 c0		 xor	 eax, eax
  001f2	75 19		 jne	 SHORT $LN15@CAttemperE
  001f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CAttemperEngineSink@@UAE@XZ@4JA
  001fa	83 c1 0f	 add	 ecx, 15			; 0000000fH
  001fd	51		 push	 ecx
  001fe	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00203	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00208	85 c0		 test	 eax, eax
  0020a	74 01		 je	 SHORT $LN15@CAttemperE
  0020c	cc		 int	 3
$LN15@CAttemperE:
  0020d	b8 00 00 00 00	 mov	 eax, $LN39@CAttemperE
  00212	c3		 ret	 0
$LN20@CAttemperE:
  00213	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH
  0021a	eb 07		 jmp	 SHORT __tryend$??1CAttemperEngineSink@@UAE@XZ$5
$LN39@CAttemperE:
  0021c	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 11 ; 0000000bH
__tryend$??1CAttemperEngineSink@@UAE@XZ$5:
  00223	8b 45 e4	 mov	 eax, DWORD PTR _i$5[ebp]
  00226	50		 push	 eax
  00227	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0022a	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00230	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
  00235	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 142  : 	}

  0023b	e9 5c ff ff ff	 jmp	 $LN5@CAttemperE
$LN6@CAttemperE:

; 143  : 
; 144  : 	//清空数组
; 145  : 	m_SystemMessageActive.RemoveAll();

  00240	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  00249	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAll

; 146  : 	m_SystemMessageBuffer.RemoveAll();

  0024e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00251	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00257	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAll

; 147  : 	//清理数据	
; 148  : 	m_KickUserItemMap.RemoveAll();

  0025c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0025f	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  00265	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKKAAK@@QAEXXZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveAll

; 149  : 	m_DistributeManage.RemoveAll();

  0026a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  00273	e8 00 00 00 00	 call	 ?RemoveAll@CDistributeManager@@QAEXXZ ; CDistributeManager::RemoveAll

; 150  : 
; 151  : 	return;
; 152  : }

  00278	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+12], 10 ; 0000000aH
  0027c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0027f	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  00285	e8 00 00 00 00	 call	 ??1CSensitiveWordsFilter@@UAE@XZ ; CSensitiveWordsFilter::~CSensitiveWordsFilter
  0028a	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+12], 9
  0028e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00291	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00297	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
  0029c	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+12], 8
  002a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002a3	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  002a9	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
  002ae	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+12], 7
  002b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002b5	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  002bb	e8 00 00 00 00	 call	 ??1?$CMap@KKKAAK@@UAE@XZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
  002c0	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+12], 6
  002c4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  002cd	e8 00 00 00 00	 call	 ??1CDistributeManager@@UAE@XZ ; CDistributeManager::~CDistributeManager
  002d2	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
  002d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002d9	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  002df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CGamePropertyManager@@UAE@XZ
  002e5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4
  002e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ec	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  002f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CUserTaskManager@@UAE@XZ
  002f8	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  002fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ff	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  00305	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CAndroidUserManager@@UAE@XZ
  0030b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0030f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00312	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00318	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CServerUserManager@@UAE@XZ
  0031e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00322	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00325	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  0032b	e8 00 00 00 00	 call	 ??1CServerListManager@NServerListManager@@UAE@XZ ; NServerListManager::CServerListManager::~CServerListManager
  00330	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00334	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  0033d	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>
  00342	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00349	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0034c	83 c1 34	 add	 ecx, 52			; 00000034H
  0034f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
  00354	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00357	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0035e	59		 pop	 ecx
  0035f	5f		 pop	 edi
  00360	5e		 pop	 esi
  00361	5b		 pop	 ebx
  00362	8b e5		 mov	 esp, ebp
  00364	5d		 pop	 ebp
  00365	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$6:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 34	 add	 ecx, 52			; 00000034H
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$7:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00014	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$8:
  00019	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  00022	e9 00 00 00 00	 jmp	 ??1CServerListManager@NServerListManager@@UAE@XZ ; NServerListManager::CServerListManager::~CServerListManager
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$9:
  00027	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00030	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CServerUserManager@@UAE@XZ
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$10:
  00036	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  0003f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CAndroidUserManager@@UAE@XZ
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$11:
  00045	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  0004e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CUserTaskManager@@UAE@XZ
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$12:
  00054	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  0005d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CGamePropertyManager@@UAE@XZ
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$13:
  00063	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  0006c	e9 00 00 00 00	 jmp	 ??1CDistributeManager@@UAE@XZ ; CDistributeManager::~CDistributeManager
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$14:
  00071	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  0007a	e9 00 00 00 00	 jmp	 ??1?$CMap@KKKAAK@@UAE@XZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$15:
  0007f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  00088	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$16:
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00096	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
__unwindfunclet$??1CAttemperEngineSink@@UAE@XZ$17:
  0009b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  000a4	e9 00 00 00 00	 jmp	 ??1CSensitiveWordsFilter@@UAE@XZ ; CSensitiveWordsFilter::~CSensitiveWordsFilter
__ehhandler$??1CAttemperEngineSink@@UAE@XZ:
  000a9	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  000ad	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000b0	8b 4a 90	 mov	 ecx, DWORD PTR [edx-112]
  000b3	33 c8		 xor	 ecx, eax
  000b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ba	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAttemperEngineSink@@UAE@XZ
  000bf	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAttemperEngineSink@@UAE@XZ ENDP			; CAttemperEngineSink::~CAttemperEngineSink
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ??0CAttemperEngineSink@@QAE@XZ
_TEXT	SEGMENT
_hInstLibrary$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CAttemperEngineSink@@QAE@XZ PROC			; CAttemperEngineSink::CAttemperEngineSink, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CAttemperEngineSink@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0IAttemperEngineSink@@QAE@XZ
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 04	 add	 ecx, 4
  00039	e8 00 00 00 00	 call	 ??0IMainServiceFrame@@QAE@XZ
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 08	 add	 ecx, 8
  00044	e8 00 00 00 00	 call	 ??0IServerUserItemSink@@QAE@XZ
  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngineSink@@6BIAttemperEngineSink@@@
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_7CAttemperEngineSink@@6BIMainServiceFrame@@@
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], OFFSET ??_7CAttemperEngineSink@@6BIServerUserItemSink@@@
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	83 c1 34	 add	 ecx, 52			; 00000034H
  0006c	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00081	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAE@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::CWHArray<CTableFrame *,CTableFrame * const &>
  00086	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  00093	e8 00 00 00 00	 call	 ??0CServerListManager@NServerListManager@@QAE@XZ ; NServerListManager::CServerListManager::CServerListManager
  00098	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0009c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CServerUserManager@@QAE@XZ
  000ab	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000af	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CAndroidUserManager@@QAE@XZ
  000be	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CUserTaskManager@@QAE@XZ
  000d1	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CGamePropertyManager@@QAE@XZ
  000e4	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000e8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  000f1	e8 00 00 00 00	 call	 ??0CDistributeManager@@QAE@XZ ; CDistributeManager::CDistributeManager
  000f6	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  000fa	6a 0a		 push	 10			; 0000000aH
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  00105	e8 00 00 00 00	 call	 ??0?$CMap@KKKAAK@@QAE@H@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
  0010a	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0010e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  00117	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::CWHArray<tagSystemMessage *,tagSystemMessage * const &>
  0011c	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00120	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00123	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00129	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::CWHArray<tagSystemMessage *,tagSystemMessage * const &>
  0012e	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	81 c1 90 3f 02
	00		 add	 ecx, 147344		; 00023f90H
  0013b	e8 00 00 00 00	 call	 ??0CSensitiveWordsFilter@@QAE@XZ ; CSensitiveWordsFilter::CSensitiveWordsFilter

; 52   : 	//状态变量
; 53   : 	m_bCollectUser=false;

  00140	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 54   : 	m_bNeekCorrespond=true;

  00147	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0014a	c6 40 0d 01	 mov	 BYTE PTR [eax+13], 1

; 55   : 	m_bNeekPrsnlRmCorrespond = true;

  0014e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00151	c6 40 0e 01	 mov	 BYTE PTR [eax+14], 1

; 56   : 
; 57   : 	//控制变量
; 58   : 	m_dwIntervalTime=0;

  00155	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00158	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 59   : 	m_dwLastDisposeTime=0;

  0015f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00162	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 60   : 
; 61   : 	//绑定数据
; 62   : 	m_pNormalParameter=NULL;

  00169	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 63   : 	m_pAndroidParameter=NULL;

  00173	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00176	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 64   : 
; 65   : 	//会员参数
; 66   : 	m_wMemberCount=0;

  0017d	33 c0		 xor	 eax, eax
  0017f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	66 89 81 48 03
	00 00		 mov	 WORD PTR [ecx+840], ax

; 67   : 	ZeroMemory(m_MemberParameter,sizeof(m_MemberParameter));

  00189	68 9a 01 00 00	 push	 410			; 0000019aH
  0018e	6a 00		 push	 0
  00190	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00193	05 4a 03 00 00	 add	 eax, 842		; 0000034aH
  00198	50		 push	 eax
  00199	e8 00 00 00 00	 call	 _memset
  0019e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 68   : 
; 69   : 	//任务参数
; 70   : 	m_wTaskCount=0;

  001a1	33 c0		 xor	 eax, eax
  001a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	66 89 81 e4 04
	00 00		 mov	 WORD PTR [ecx+1252], ax

; 71   : 	ZeroMemory(m_TaskParameter,sizeof(m_TaskParameter));

  001ad	68 80 d6 00 00	 push	 54912			; 0000d680H
  001b2	6a 00		 push	 0
  001b4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b7	05 e6 04 00 00	 add	 eax, 1254		; 000004e6H
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 _memset
  001c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 72   : 
; 73   : 	//等级参数
; 74   : 	m_wLevelCount=0;

  001c5	33 c0		 xor	 eax, eax
  001c7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	66 89 81 66 db
	00 00		 mov	 WORD PTR [ecx+56166], ax

; 75   : 	ZeroMemory(m_GrowLevelConfig,sizeof(m_GrowLevelConfig));

  001d1	68 68 01 00 00	 push	 360			; 00000168H
  001d6	6a 00		 push	 0
  001d8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001db	05 68 db 00 00	 add	 eax, 56168		; 0000db68H
  001e0	50		 push	 eax
  001e1	e8 00 00 00 00	 call	 _memset
  001e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 76   : 
; 77   : 	//状态变量
; 78   : 	m_pInitParameter=NULL;

  001e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001ec	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 79   : 	m_pGameParameter=NULL;

  001f3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001f6	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0

; 80   : 	m_pGameServiceAttrib=NULL;

  001fd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00200	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0

; 81   : 	m_pGameServiceOption=NULL;

  00207	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0020a	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0

; 82   : 	m_pGameMatchOption=NULL;

  00211	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00214	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0

; 83   : 
; 84   : 	//组件变量
; 85   : 	m_pITimerEngine=NULL;

  0021b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0021e	c7 80 a8 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147368], 0

; 86   : 	m_pIAttemperEngine=NULL;

  00228	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0022b	c7 80 ac 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147372], 0

; 87   : 	m_pITCPSocketService=NULL;

  00235	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00238	c7 80 b0 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147376], 0

; 88   : 	m_pPrsnlRmITCPSocketService=NULL;

  00242	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00245	c7 80 c0 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147392], 0

; 89   : 	m_pITCPNetworkEngine=NULL;

  0024f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00252	c7 80 b4 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147380], 0

; 90   : 	m_pIGameServiceManager=NULL;

  0025c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0025f	c7 80 b8 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147384], 0

; 91   : 	
; 92   : 	//数据引擎
; 93   : 	m_pIRecordDataBaseEngine=NULL;

  00269	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0026c	c7 80 cc 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147404], 0

; 94   : 	m_pIKernelDataBaseEngine=NULL;

  00276	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00279	c7 80 d0 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147408], 0

; 95   : 	m_pIDBCorrespondManager=NULL;

  00283	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00286	c7 80 d4 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147412], 0

; 96   : 	m_bHasPersonalRoomService = FALSE;

  00290	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00293	c6 80 b9 00 00
	00 00		 mov	 BYTE PTR [eax+185], 0

; 97   : 
; 98   : 	//配置数据
; 99   : 	ZeroMemory(&m_DataConfigColumn,sizeof(m_DataConfigColumn));

  0029a	68 41 02 00 00	 push	 577			; 00000241H
  0029f	6a 00		 push	 0
  002a1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002a4	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  002a9	50		 push	 eax
  002aa	e8 00 00 00 00	 call	 _memset
  002af	83 c4 0c	 add	 esp, 12			; 0000000cH

; 100  : 	ZeroMemory(m_lCheckInReward,sizeof(m_lCheckInReward));

  002b2	6a 38		 push	 56			; 00000038H
  002b4	6a 00		 push	 0
  002b6	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002b9	05 10 03 00 00	 add	 eax, 784		; 00000310H
  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 _memset
  002c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 101  : 
; 102  : 	//比赛变量
; 103  : 	m_pIMatchServiceManager=NULL;

  002c7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002ca	c7 80 c4 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147396], 0

; 104  : 	m_pIPersonalRoomServiceManager=NULL;

  002d4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  002d7	c7 80 c8 3f 02
	00 00 00 00 00	 mov	 DWORD PTR [eax+147400], 0

; 105  : 
; 106  : 	HINSTANCE hInstLibrary = NULL;

  002e1	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hInstLibrary$[ebp], 0

; 107  : #ifdef _DEBUG
; 108  : 	hInstLibrary = LoadLibrary(TEXT("PersonalRoomService.dll"));

  002e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@
  002ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  002f3	89 45 ec	 mov	 DWORD PTR _hInstLibrary$[ebp], eax

; 109  : #else
; 110  : 	hInstLibrary = LoadLibrary(TEXT("PersonalRoomService.dll"));
; 111  : #endif
; 112  : 	if (hInstLibrary == NULL)

  002f6	83 7d ec 00	 cmp	 DWORD PTR _hInstLibrary$[ebp], 0
  002fa	75 0c		 jne	 SHORT $LN2@CAttemperE

; 113  : 	{
; 114  : 		FreeLibrary(hInstLibrary); 

  002fc	8b 45 ec	 mov	 eax, DWORD PTR _hInstLibrary$[ebp]
  002ff	50		 push	 eax
  00300	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4

; 115  : 	}
; 116  : 	else

  00306	eb 0a		 jmp	 SHORT $LN1@CAttemperE
$LN2@CAttemperE:

; 117  : 	{
; 118  : 		m_bHasPersonalRoomService = true;

  00308	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0030b	c6 80 b9 00 00
	00 01		 mov	 BYTE PTR [eax+185], 1
$LN1@CAttemperE:

; 119  : 	}
; 120  : 
; 121  : 	return;
; 122  : }

  00312	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00319	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0031c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0031f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00326	59		 pop	 ecx
  00327	5f		 pop	 edi
  00328	5e		 pop	 esi
  00329	5b		 pop	 ebx
  0032a	8b e5		 mov	 esp, ebp
  0032c	5d		 pop	 ebp
  0032d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 34	 add	 ecx, 52			; 00000034H
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	81 c1 d0 dc 00
	00		 add	 ecx, 56528		; 0000dcd0H
  00014	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$2:
  00019	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	81 c1 e4 dc 00
	00		 add	 ecx, 56548		; 0000dce4H
  00022	e9 00 00 00 00	 jmp	 ??1CServerListManager@NServerListManager@@UAE@XZ ; NServerListManager::CServerListManager::~CServerListManager
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$3:
  00027	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	81 c1 d8 dd 00
	00		 add	 ecx, 56792		; 0000ddd8H
  00030	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CServerUserManager@@UAE@XZ
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$4:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	81 c1 28 de 00
	00		 add	 ecx, 56872		; 0000de28H
  0003f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CAndroidUserManager@@UAE@XZ
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$5:
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 bc 3e 02
	00		 add	 ecx, 147132		; 00023ebcH
  0004e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CUserTaskManager@@UAE@XZ
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$6:
  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	81 c1 20 3f 02
	00		 add	 ecx, 147232		; 00023f20H
  0005d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CGamePropertyManager@@UAE@XZ
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$7:
  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	81 c1 38 3f 02
	00		 add	 ecx, 147256		; 00023f38H
  0006c	e9 00 00 00 00	 jmp	 ??1CDistributeManager@@UAE@XZ ; CDistributeManager::~CDistributeManager
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$8:
  00071	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	81 c1 4c 3f 02
	00		 add	 ecx, 147276		; 00023f4cH
  0007a	e9 00 00 00 00	 jmp	 ??1?$CMap@KKKAAK@@UAE@XZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$9:
  0007f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	81 c1 68 3f 02
	00		 add	 ecx, 147304		; 00023f68H
  00088	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$10:
  0008d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	81 c1 7c 3f 02
	00		 add	 ecx, 147324		; 00023f7cH
  00096	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
__ehhandler$??0CAttemperEngineSink@@QAE@XZ:
  0009b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0009f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000a2	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  000a5	33 c8		 xor	 ecx, eax
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CAttemperEngineSink@@QAE@XZ
  000b1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CAttemperEngineSink@@QAE@XZ ENDP			; CAttemperEngineSink::CAttemperEngineSink
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHABQAUtagSystemMessage@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHABQAUtagSystemMessage@@@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHABQAUtagSystemMessage@@@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEAAPAUtagSystemMessage@@H@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABV1@@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXH@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABV1@@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEXHABQAUtagSystemMessage@@@Z ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAEHABQAUtagSystemMessage@@@Z ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ PROC	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@UAE@XZ ENDP	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::~CWHArray<tagSystemMessage *,tagSystemMessage * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAE@XZ PROC	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::CWHArray<tagSystemMessage *,tagSystemMessage * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagSystemMessage@@ABQAU1@@@QAE@XZ ENDP	; CWHArray<tagSystemMessage *,tagSystemMessage * const &>::CWHArray<tagSystemMessage *,tagSystemMessage * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KKKAAK@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KKKAAK@@UAEPAXI@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KKKAAK@@UAE@XZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KKKAAK@@UAEPAXI@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KKKAAK@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KKKAAK@@UBEXXZ PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KKKAAK@@UBEXXZ ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KKKAAK@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KKKAAK@@UBEXAAVCDumpContext@@@Z PROC	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKKAAK@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKKAAK@@QBEXAAPAU__POSITION@@AAK1@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KKKAAK@@UBEXAAVCDumpContext@@@Z ENDP	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KKKAAK@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KKKAAK@@UAEXAAVCArchive@@@Z PROC	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KKKAAK@@QAEXKAAK@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KKKAAK@@UAEXAAVCArchive@@@Z ENDP	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KKKAAK@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KKKAAK@@UAE@XZ PROC				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KKKAAK@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKKAAK@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKKAAK@@QAEXXZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KKKAAK@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KKKAAK@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KKKAAK@@UAE@XZ ENDP				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::~CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KKKAAK@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KKKAAK@@IBEPAVCAssoc@1@KAAI0@Z PROC	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KKKAAK@@IBEPAVCAssoc@1@KAAI0@Z ENDP	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@KKKAAK@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@KKKAAK@@IAEXPAVCAssoc@1@@Z PROC	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKKAAK@@QAEXXZ ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@KKKAAK@@IAEXPAVCAssoc@1@@Z ENDP	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KKKAAK@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KKKAAK@@IAEPAVCAssoc@1@K@Z PROC	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KKKAAK@@QAE@K@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KKKAAK@@IAEPAVCAssoc@1@K@Z ENDP	; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KKKAAK@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KKKAAK@@QAEXIH@Z PROC		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KKKAAK@@QAEXIH@Z ENDP		; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KKKAAK@@QBEXAAPAU__POSITION@@AAK1@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KKKAAK@@QBEXAAPAU__POSITION@@AAK1@Z PROC ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KKKAAK@@QBEXAAPAU__POSITION@@AAK1@Z ENDP ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KKKAAK@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KKKAAK@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KKKAAK@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KKKAAK@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KKKAAK@@QAEXXZ PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KKKAAK@@QAEXXZ ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@KKKAAK@@QAEHK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CMap@KKKAAK@@QAEHK@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 83 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00038	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00041	33 d2		 xor	 edx, edx
  00043	f7 71 08	 div	 DWORD PTR [ecx+8]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0004f	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005a	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00065	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00069	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00071	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00074	75 2f		 jne	 SHORT $LN6@RemoveKey
  00076	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00083	85 c0		 test	 eax, eax
  00085	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00087	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00090	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@KKKAAK@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::FreeAssoc

; 1630 : 			return TRUE;

  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000ae	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b0	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?RemoveKey@?$CMap@KKKAAK@@QAEHK@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KKKAAK@@QAEXKAAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KKKAAK@@QAEXKAAK@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KKKAAK@@QAEAAKK@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?SetAt@?$CMap@KKKAAK@@QAEXKAAK@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KKKAAK@@QAEAAKK@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KKKAAK@@QAEAAKK@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKKAAK@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKKAAK@@QAEXIH@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KKKAAK@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KKKAAK@@QAEAAKK@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@KKKAAK@@QBEHKAAK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_rValue$ = 12						; size = 4
?Lookup@?$CMap@KKKAAK@@QBEHKAAK@Z PROC			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKKAAK@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00046	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00049	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?Lookup@?$CMap@KKKAAK@@QBEHKAAK@Z ENDP			; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KKKAAK@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KKKAAK@@QAE@H@Z PROC				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CMap<unsigned long,unsigned long,unsigned long,unsigned long &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KKKAAK@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKKAAK@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KKKAAK@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KKKAAK@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KKKAAK@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KKKAAK@@QAE@H@Z ENDP				; CMap<unsigned long,unsigned long,unsigned long,unsigned long &>::CMap<unsigned long,unsigned long,unsigned long,unsigned long &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAEPAXI@Z PROC	; CWHArray<CTableFrame *,CTableFrame * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ ; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAEPAXI@Z ENDP	; CWHArray<CTableFrame *,CTableFrame * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXXZ PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXXZ ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z ; CWHArray<CTableFrame *,CTableFrame * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::GetAt, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN5@GetAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN6@GetAt
$LN5@GetAt:
  0001d	68 d5 00 00 00	 push	 213			; 000000d5H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN6@GetAt
  00030	cc		 int	 3
$LN6@GetAt:

; 214  : 	if ((nIndex<0)||(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7c 0b		 jl	 SHORT $LN3@GetAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@GetAt
$LN3@GetAt:
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetAt:

; 215  : 	
; 216  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN4@GetAt:

; 217  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?GetAt@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEAAPAVCTableFrame@@H@Z ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetData@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEPAPAVCTableFrame@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEPAPAVCTableFrame@@XZ PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::GetData, COMDAT
; _this$ = ecx

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 158  : 	return m_pData;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 159  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetData@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAEPAPAVCTableFrame@@XZ ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::GetData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ PROC ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCTableFrame@@ABQAV1@@@QBEHXZ ENDP ; CWHArray<CTableFrame *,CTableFrame * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ PROC	; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCTableFrame@@ABQAV1@@@UAE@XZ ENDP	; CWHArray<CTableFrame *,CTableFrame * const &>::~CWHArray<CTableFrame *,CTableFrame * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAE@XZ PROC	; CWHArray<CTableFrame *,CTableFrame * const &>::CWHArray<CTableFrame *,CTableFrame * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCTableFrame@@ABQAV1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCTableFrame@@ABQAV1@@@QAE@XZ ENDP	; CWHArray<CTableFrame *,CTableFrame * const &>::CWHArray<CTableFrame *,CTableFrame * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXHABQAUtagPersonalTableParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXHABQAUtagPersonalTableParameter@@@Z PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXHABQAUtagPersonalTableParameter@@@Z ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetAt, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN5@GetAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN6@GetAt
$LN5@GetAt:
  0001d	68 d5 00 00 00	 push	 213			; 000000d5H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN6@GetAt
  00030	cc		 int	 3
$LN6@GetAt:

; 214  : 	if ((nIndex<0)||(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7c 0b		 jl	 SHORT $LN3@GetAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@GetAt
$LN3@GetAt:
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetAt:

; 215  : 	
; 216  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN4@GetAt:

; 217  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?GetAt@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEAAPAUtagPersonalTableParameter@@H@Z ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEHABQAUtagPersonalTableParameter@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEHABQAUtagPersonalTableParameter@@@Z PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEXHABQAUtagPersonalTableParameter@@@Z ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAEHABQAUtagPersonalTableParameter@@@Z ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::~CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagPersonalTableParameter@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>::CWHArray<tagPersonalTableParameter *,tagPersonalTableParameter * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCSensitiveWordsFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCSensitiveWordsFilter@@UAEPAXI@Z PROC		; CSensitiveWordsFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CSensitiveWordsFilter@@UAE@XZ ; CSensitiveWordsFilter::~CSensitiveWordsFilter
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 18		 push	 24			; 00000018H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCSensitiveWordsFilter@@UAEPAXI@Z ENDP		; CSensitiveWordsFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\sensitivewordsfilter.h
;	COMDAT ??1CSensitiveWordsFilter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CSensitiveWordsFilter@@UAE@XZ PROC			; CSensitiveWordsFilter::~CSensitiveWordsFilter, COMDAT
; _this$ = ecx

; 149  : 	virtual ~CSensitiveWordsFilter(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSensitiveWordsFilter@@6B@
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 04	 add	 ecx, 4
  0001b	e8 00 00 00 00	 call	 ??1CFilterTree@@QAE@XZ	; CFilterTree::~CFilterTree
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CSensitiveWordsFilter@@UAE@XZ ENDP			; CSensitiveWordsFilter::~CSensitiveWordsFilter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\sensitivewordsfilter.h
;	COMDAT ??0CSensitiveWordsFilter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSensitiveWordsFilter@@QAE@XZ PROC			; CSensitiveWordsFilter::CSensitiveWordsFilter, COMDAT
; _this$ = ecx

; 147  : 	CSensitiveWordsFilter(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSensitiveWordsFilter@@6B@
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 04	 add	 ecx, 4
  0001b	e8 00 00 00 00	 call	 ??0CFilterTree@@QAE@XZ	; CFilterTree::CFilterTree
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0CSensitiveWordsFilter@@QAE@XZ ENDP			; CSensitiveWordsFilter::CSensitiveWordsFilter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\sensitivewordsfilter.h
;	COMDAT ??0CFilterTree@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFilterTree@@QAE@XZ PROC				; CFilterTree::CFilterTree, COMDAT
; _this$ = ecx

; 117  : 	CFilterTree()        

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$CWHArray@PBDABQBD@@QAE@XZ ; CWHArray<char const *,char const * const &>::CWHArray<char const *,char const * const &>

; 118  : 	{  
; 119  : 	}   

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CFilterTree@@QAE@XZ ENDP				; CFilterTree::CFilterTree
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PBDABQBD@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PBDABQBD@@UAEPAXI@Z PROC			; CWHArray<char const *,char const * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PBDABQBD@@UAE@XZ ; CWHArray<char const *,char const * const &>::~CWHArray<char const *,char const * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PBDABQBD@@UAEPAXI@Z ENDP			; CWHArray<char const *,char const * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PBDABQBD@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PBDABQBD@@UAE@XZ PROC			; CWHArray<char const *,char const * const &>::~CWHArray<char const *,char const * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PBDABQBD@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PBDABQBD@@UAE@XZ ENDP			; CWHArray<char const *,char const * const &>::~CWHArray<char const *,char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PBDABQBD@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PBDABQBD@@QAE@XZ PROC			; CWHArray<char const *,char const * const &>::CWHArray<char const *,char const * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PBDABQBD@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PBDABQBD@@QAE@XZ ENDP			; CWHArray<char const *,char const * const &>::CWHArray<char const *,char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.h
;	COMDAT ?SetDistributeRule@CDistributeManager@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbDistributeRule$ = 8					; size = 1
?SetDistributeRule@CDistributeManager@@QAEXE@Z PROC	; CDistributeManager::SetDistributeRule, COMDAT
; _this$ = ecx

; 92   : 	inline VOID  SetDistributeRule(BYTE cbDistributeRule) { m_cbDistributeRule=cbDistributeRule; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbDistributeRule$[ebp]
  00012	88 48 10	 mov	 BYTE PTR [eax+16], cl
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetDistributeRule@CDistributeManager@@QAEXE@Z ENDP	; CDistributeManager::SetDistributeRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\distributemanager.h
;	COMDAT ?GetCount@CDistributeManager@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@CDistributeManager@@QAEGXZ PROC		; CDistributeManager::GetCount, COMDAT
; _this$ = ecx

; 86   : 	inline WORD  GetCount() { return m_wNodeCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 04	 mov	 ax, WORD PTR [eax+4]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetCount@CDistributeManager@@QAEGXZ ENDP		; CDistributeManager::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@KK@@YGHPBK0@Z
_TEXT	SEGMENT
tv128 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@KK@@YGHPBK0@Z PROC			; CompareElements<unsigned long,unsigned long>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 04		 push	 4
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 04		 push	 4
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement2$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a8	75 09		 jne	 SHORT $LN12@CompareEle
  000aa	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv128[ebp], 1
  000b1	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@CompareEle:
  000ba	8b 45 b8	 mov	 eax, DWORD PTR tv128[ebp]
$LN6@CompareEle:

; 157  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
??$CompareElements@KK@@YGHPBK0@Z ENDP			; CompareElements<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z PROC	; DumpElements<unsigned long>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ENDP	; DumpElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z PROC	; SerializeElements<unsigned long>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ENDP	; SerializeElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IMainServiceFrame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMainServiceFrame@@QAE@XZ PROC			; IMainServiceFrame::IMainServiceFrame, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IMainServiceFrame@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IMainServiceFrame@@QAE@XZ ENDP			; IMainServiceFrame::IMainServiceFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IServerUserItemSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IServerUserItemSink@@QAE@XZ PROC			; IServerUserItemSink::IServerUserItemSink, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IServerUserItemSink@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IServerUserItemSink@@QAE@XZ ENDP			; IServerUserItemSink::IServerUserItemSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetInterface@?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInterface@?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ PROC ; CTempldateHelper<ITCPNetworkEngine>::GetInterface, COMDAT
; _this$ = ecx

; 316  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	return m_pIModeluInterface; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]

; 318  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInterface@?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ENDP ; CTempldateHelper<ITCPNetworkEngine>::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ PROC ; CTempldateHelper<ITCPNetworkEngine>::operator->, COMDAT
; _this$ = ecx

; 309  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	return GetInterface(); 

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ; CTempldateHelper<ITCPNetworkEngine>::GetInterface

; 311  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$CTempldateHelper@UITCPNetworkEngine@@@@QBEPAUITCPNetworkEngine@@XZ ENDP ; CTempldateHelper<ITCPNetworkEngine>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAttemperEngineSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAttemperEngineSink@@QAE@XZ PROC			; IAttemperEngineSink::IAttemperEngineSink, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAttemperEngineSink@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IAttemperEngineSink@@QAE@XZ ENDP			; IAttemperEngineSink::IAttemperEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMD_GR_DissumeTable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_GR_DissumeTable@@QAE@XZ PROC			; CMD_GR_DissumeTable::CMD_GR_DissumeTable, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0tagPersonalUserScoreInfo@@QAE@XZ ; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
  00011	6a 08		 push	 8
  00013	6a 3c		 push	 60			; 0000003cH
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 c0 15	 add	 eax, 21			; 00000015H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0CMD_GR_DissumeTable@@QAE@XZ ENDP			; CMD_GR_DissumeTable::CMD_GR_DissumeTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\消息定义\cmd_correspond.h
;	COMDAT ??0CMD_CS_C_DismissTable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_CS_C_DismissTable@@QAE@XZ PROC			; CMD_CS_C_DismissTable::CMD_CS_C_DismissTable, COMDAT
; _this$ = ecx

; 578  : 	CMD_CS_C_DismissTable()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 579  : 	{
; 580  : 		dwSocketID = -1;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 581  : 	}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CMD_CS_C_DismissTable@@QAE@XZ ENDP			; CMD_CS_C_DismissTable::CMD_CS_C_DismissTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\消息定义\cmd_correspond.h
;	COMDAT ??0CMD_CS_C_UpdateTablePlayerCount@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_CS_C_UpdateTablePlayerCount@@QAE@XZ PROC		; CMD_CS_C_UpdateTablePlayerCount::CMD_CS_C_UpdateTablePlayerCount, COMDAT
; _this$ = ecx

; 564  : 	CMD_CS_C_UpdateTablePlayerCount()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 565  : 	{
; 566  : 		dwSocketID	= -1;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 567  : 		wServerID	= 0;

  00015	33 c0		 xor	 eax, eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 568  : 		wTableID	= 0;

  0001e	33 c0		 xor	 eax, eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 569  : 		wSitCount	= 0;

  00027	33 c0		 xor	 eax, eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 570  : 	}

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??0CMD_CS_C_UpdateTablePlayerCount@@QAE@XZ ENDP		; CMD_CS_C_UpdateTablePlayerCount::CMD_CS_C_UpdateTablePlayerCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanManagerAndroid@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanManagerAndroid@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanManagerAndroid, COMDAT

; 153  : 	static bool CanManagerAndroid(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_MANAGER_ANDROID)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  00011	74 09		 je	 SHORT $LN3@CanManager
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanManager
$LN3@CanManager:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanManager:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanManagerAndroid@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanManagerAndroid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanIssueMessage@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanIssueMessage@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanIssueMessage, COMDAT

; 149  : 	static bool CanIssueMessage(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_ISSUE_MESSAGE)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	25 00 00 00 01	 and	 eax, 16777216		; 01000000H
  00011	74 09		 je	 SHORT $LN3@CanIssueMe
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanIssueMe
$LN3@CanIssueMe:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanIssueMe:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanIssueMessage@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanIssueMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanSendWarning@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanSendWarning@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanSendWarning, COMDAT

; 133  : 	static bool CanSendWarning(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_SEND_WARNING)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  00011	74 09		 je	 SHORT $LN3@CanSendWar
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanSendWar
$LN3@CanSendWar:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanSendWar:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanSendWarning@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanSendWarning
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanLimitUserChat@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanLimitUserChat@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanLimitUserChat, COMDAT

; 124  : 	static bool CanLimitUserChat(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_LIMIT_USER_CHAT)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  00011	74 09		 je	 SHORT $LN3@CanLimitUs
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanLimitUs
$LN3@CanLimitUs:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanLimitUs:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanLimitUserChat@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanLimitUserChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanDismissGame@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanDismissGame@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanDismissGame, COMDAT

; 122  : 	static bool CanDismissGame(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_DISMISS_GAME)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00011	74 09		 je	 SHORT $LN3@CanDismiss
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanDismiss
$LN3@CanDismiss:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanDismiss:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanDismissGame@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanDismissGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanKillUser@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanKillUser@CMasterRight@@SA_NK@Z PROC			; CMasterRight::CanKillUser, COMDAT

; 118  : 	static bool CanKillUser(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_KILL_USER)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00011	74 09		 je	 SHORT $LN3@CanKillUse
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanKillUse
$LN3@CanKillUse:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanKillUse:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanKillUser@CMasterRight@@SA_NK@Z ENDP			; CMasterRight::CanKillUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanLimitGameChat@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanLimitGameChat@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanLimitGameChat, COMDAT

; 113  : 	static bool CanLimitGameChat(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_LIMIT_GAME_CHAT)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	83 e0 10	 and	 eax, 16			; 00000010H
  0000f	74 09		 je	 SHORT $LN3@CanLimitGa
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@CanLimitGa
$LN3@CanLimitGa:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanLimitGa:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?CanLimitGameChat@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanLimitGameChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanLimitRoomChat@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanLimitRoomChat@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanLimitRoomChat, COMDAT

; 111  : 	static bool CanLimitRoomChat(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_LIMIT_ROOM_CHAT)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	83 e0 08	 and	 eax, 8
  0000f	74 09		 je	 SHORT $LN3@CanLimitRo
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@CanLimitRo
$LN3@CanLimitRo:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanLimitRo:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?CanLimitRoomChat@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanLimitRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanLimitWisper@CMasterRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwMasterRight$ = 8					; size = 4
?CanLimitWisper@CMasterRight@@SA_NK@Z PROC		; CMasterRight::CanLimitWisper, COMDAT

; 109  : 	static bool CanLimitWisper(DWORD dwMasterRight) { return ((dwMasterRight&UR_CAN_LIMIT_WISPER)!=0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwMasterRight$[ebp]
  0000c	83 e0 04	 and	 eax, 4
  0000f	74 09		 je	 SHORT $LN3@CanLimitWi
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@CanLimitWi
$LN3@CanLimitWi:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanLimitWi:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?CanLimitWisper@CMasterRight@@SA_NK@Z ENDP		; CMasterRight::CanLimitWisper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?IsGameCheatUser@CUserRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwUserRight$ = 8					; size = 4
?IsGameCheatUser@CUserRight@@SA_NK@Z PROC		; CUserRight::IsGameCheatUser, COMDAT

; 94   : 	static bool IsGameCheatUser(DWORD dwUserRight) { return (dwUserRight&UR_GAME_CHEAT_USER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwUserRight$[ebp]
  0000c	25 00 00 00 20	 and	 eax, 536870912		; 20000000H
  00011	74 09		 je	 SHORT $LN3@IsGameChea
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsGameChea
$LN3@IsGameChea:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsGameChea:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsGameCheatUser@CUserRight@@SA_NK@Z ENDP		; CUserRight::IsGameCheatUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?IsGameMatchUser@CUserRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwUserRight$ = 8					; size = 4
?IsGameMatchUser@CUserRight@@SA_NK@Z PROC		; CUserRight::IsGameMatchUser, COMDAT

; 92   : 	static bool IsGameMatchUser(DWORD dwUserRight) { return (dwUserRight&UR_GAME_MATCH_USER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwUserRight$[ebp]
  0000c	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00011	74 09		 je	 SHORT $LN3@IsGameMatc
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsGameMatc
$LN3@IsGameMatc:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsGameMatc:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsGameMatchUser@CUserRight@@SA_NK@Z ENDP		; CUserRight::IsGameMatchUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanKillOutUser@CUserRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwUserRight$ = 8					; size = 4
?CanKillOutUser@CUserRight@@SA_NK@Z PROC		; CUserRight::CanKillOutUser, COMDAT

; 87   : 	static bool CanKillOutUser(DWORD dwUserRight) { return (dwUserRight&UR_GAME_KICK_OUT_USER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwUserRight$[ebp]
  0000c	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00011	74 09		 je	 SHORT $LN3@CanKillOut
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@CanKillOut
$LN3@CanKillOut:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanKillOut:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?CanKillOutUser@CUserRight@@SA_NK@Z ENDP		; CUserRight::CanKillOutUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanRoomChat@CUserRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwUserRight$ = 8					; size = 4
?CanRoomChat@CUserRight@@SA_NK@Z PROC			; CUserRight::CanRoomChat, COMDAT

; 74   : 	static bool CanRoomChat(DWORD dwUserRight) { return (dwUserRight&UR_CANNOT_ROOM_CHAT)==0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwUserRight$[ebp]
  0000c	83 e0 08	 and	 eax, 8
  0000f	75 09		 jne	 SHORT $LN3@CanRoomCha
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@CanRoomCha
$LN3@CanRoomCha:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanRoomCha:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?CanRoomChat@CUserRight@@SA_NK@Z ENDP			; CUserRight::CanRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\rightdefine.h
;	COMDAT ?CanWisper@CUserRight@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwUserRight$ = 8					; size = 4
?CanWisper@CUserRight@@SA_NK@Z PROC			; CUserRight::CanWisper, COMDAT

; 72   : 	static bool CanWisper(DWORD dwUserRight) { return (dwUserRight&UR_CANNOT_WISPER)==0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwUserRight$[ebp]
  0000c	83 e0 04	 and	 eax, 4
  0000f	75 09		 jne	 SHORT $LN3@CanWisper
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@CanWisper
$LN3@CanWisper:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@CanWisper:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?CanWisper@CUserRight@@SA_NK@Z ENDP			; CUserRight::CanWisper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsSuportPlayBack@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsSuportPlayBack@CServerRule@@SA_NK@Z PROC		; CServerRule::IsSuportPlayBack, COMDAT

; 181  : 	static bool IsSuportPlayBack(DWORD dwServerRule) { return (dwServerRule&SR_SUPORT_PLAY_BACK)!=0; }	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 00 04	 and	 eax, 67108864		; 04000000H
  00011	74 09		 je	 SHORT $LN3@IsSuportPl
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsSuportPl
$LN3@IsSuportPl:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsSuportPl:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsSuportPlayBack@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsSuportPlayBack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowAndroidAttend, COMDAT

; 170  : 	static VOID SetAllowAndroidAttend(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_ANDROID_ATTEND:dwServerRule&=~SR_ALLOW_ANDROID_ATTEND; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetAllowAn
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 40
	00		 or	 edx, 4194304		; 00400000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetAllowAn
$LN3@SetAllowAn:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff bf
	ff		 and	 ecx, -4194305		; ffbfffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowAn:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowAndroidAttend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendLockTable@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendLockTable@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendLockTable, COMDAT

; 168  : 	static VOID SetForfendLockTable(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_LOCK_TABLE:dwServerRule&=~SR_FORFEND_LOCK_TABLE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 20
	00		 or	 edx, 2097152		; 00200000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff df
	ff		 and	 ecx, -2097153		; ffdfffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendLockTable@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendLockTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameRule@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameRule@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameRule, COMDAT

; 166  : 	static VOID SetForfendGameRule(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_RULE:dwServerRule&=~SR_FORFEND_GAME_RULE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 10
	00		 or	 edx, 1048576		; 00100000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff ef
	ff		 and	 ecx, -1048577		; ffefffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendGameRule@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendSaveInGame, COMDAT

; 161  : 	static VOID SetForfendSaveInGame(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_SAVE_IN_GAME:dwServerRule&=~SR_FORFEND_SAVE_IN_GAME; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 08
	00		 or	 edx, 524288		; 00080000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff f7
	ff		 and	 ecx, -524289		; fff7ffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendSaveInGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendSaveInRoom, COMDAT

; 159  : 	static VOID SetForfendSaveInRoom(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_SAVE_IN_ROOM:dwServerRule&=~SR_FORFEND_SAVE_IN_ROOM; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 04
	00		 or	 edx, 262144		; 00040000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff fb
	ff		 and	 ecx, -262145		; fffbffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendSaveInRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendTakeInGame@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendTakeInGame@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendTakeInGame, COMDAT

; 157  : 	static VOID SetForfendTakeInGame(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_TAKE_IN_GAME:dwServerRule&=~SR_FORFEND_TAKE_IN_GAME; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 02
	00		 or	 edx, 131072		; 00020000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff fd
	ff		 and	 ecx, -131073		; fffdffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendTakeInGame@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendTakeInGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendTakeInRoom@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendTakeInRoom@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendTakeInRoom, COMDAT

; 155  : 	static VOID SetForfendTakeInRoom(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_TAKE_IN_ROOM:dwServerRule&=~SR_FORFEND_TAKE_IN_ROOM; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 01
	00		 or	 edx, 65536		; 00010000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff fe
	ff		 and	 ecx, -65537		; fffeffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendTakeInRoom@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendTakeInRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameLookon, COMDAT

; 150  : 	static VOID SetForfendGameLookon(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_LOOKON:dwServerRule&=~SR_FORFEND_GAME_LOOKON; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 40 00
	00		 or	 edx, 16384		; 00004000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff bf ff
	ff		 and	 ecx, -16385		; ffffbfffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameLookon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameEnter, COMDAT

; 148  : 	static VOID SetForfendGameEnter(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_ENTER:dwServerRule&=~SR_FORFEND_GAME_ENTER; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff df ff
	ff		 and	 ecx, -8193		; ffffdfffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendRoomEnter, COMDAT

; 146  : 	static VOID SetForfendRoomEnter(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_ROOM_ENTER:dwServerRule&=~SR_FORFEND_ROOM_ENTER; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 10 00
	00		 or	 edx, 4096		; 00001000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ef ff
	ff		 and	 ecx, -4097		; ffffefffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendRoomEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetImmediateWriteScore, COMDAT

; 141  : 	static VOID SetImmediateWriteScore(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_IMMEDIATE_WRITE_SCORE:dwServerRule&=~SR_IMMEDIATE_WRITE_SCORE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetImmedia
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 08 00
	00		 or	 edx, 2048		; 00000800H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetImmedia
$LN3@SetImmedia:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff f7 ff
	ff		 and	 ecx, -2049		; fffff7ffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetImmedia:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetImmediateWriteScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetRecordGameTrack, COMDAT

; 137  : 	static VOID SetRecordGameTrack(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_RECORD_GAME_TRACK:dwServerRule&=~SR_RECORD_GAME_TRACK; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetRecordG
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 02 00
	00		 or	 edx, 512		; 00000200H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetRecordG
$LN3@SetRecordG:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff fd ff
	ff		 and	 ecx, -513		; fffffdffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetRecordG:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetRecordGameTrack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetRecordGameScore@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetRecordGameScore@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetRecordGameScore, COMDAT

; 135  : 	static VOID SetRecordGameScore(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_RECORD_GAME_SCORE:dwServerRule&=~SR_RECORD_GAME_SCORE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetRecordG
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 01 00
	00		 or	 edx, 256		; 00000100H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetRecordG
$LN3@SetRecordG:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff fe ff
	ff		 and	 ecx, -257		; fffffeffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetRecordG:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetRecordGameScore@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetRecordGameScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowOffLineTrustee, COMDAT

; 128  : 	static VOID SetAllowOffLineTrustee(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_OFFLINE_TRUSTEE:dwServerRule&=~SR_ALLOW_OFFLINE_TRUSTEE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetAllowOf
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 20	 or	 edx, 32			; 00000020H
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetAllowOf
$LN3@SetAllowOf:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 df	 and	 ecx, -33		; ffffffdfH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowOf:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowOffLineTrustee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowDynamicJoin, COMDAT

; 126  : 	static VOID SetAllowDynamicJoin(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_DYNAMIC_JOIN:dwServerRule&=~SR_ALLOW_DYNAMIC_JOIN; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetAllowDy
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 10	 or	 edx, 16			; 00000010H
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetAllowDy
$LN3@SetAllowDy:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 ef	 and	 ecx, -17		; ffffffefH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowDy:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowDynamicJoin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendWisperOnGame, COMDAT

; 121  : 	static VOID SetForfendWisperOnGame(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_WISPER_ON_GAME:dwServerRule&=~SR_FORFEND_WISPER_ON_GAME; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 08	 or	 edx, 8
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 f7	 and	 ecx, -9			; fffffff7H
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendWisperOnGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendWisperChat, COMDAT

; 119  : 	static VOID SetForfendWisperChat(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_WISPER_CHAT:dwServerRule&=~SR_FORFEND_WISPER_CHAT; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 04	 or	 edx, 4
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 fb	 and	 ecx, -5			; fffffffbH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendWisperChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendRoomChat, COMDAT

; 117  : 	static VOID SetForfendRoomChat(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_ROOM_CHAT:dwServerRule&=~SR_FORFEND_ROOM_CHAT; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 02	 or	 edx, 2
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 fd	 and	 ecx, -3			; fffffffdH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameChat@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameChat@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameChat, COMDAT

; 115  : 	static VOID SetForfendGameChat(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_CHAT:dwServerRule&=~SR_FORFEND_GAME_CHAT; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 01	 or	 edx, 1
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendGameChat@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAndroidSimulate, COMDAT

; 110  : 	static bool IsAllowAndroidSimulate(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_SIMULATE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 80 00	 and	 eax, 8388608		; 00800000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAndroidSimulate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowAndroidAttend, COMDAT

; 108  : 	static bool IsAllowAndroidAttend(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_ATTEND)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 40 00	 and	 eax, 4194304		; 00400000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowAndroidAttend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendLockTable@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendLockTable@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendLockTable, COMDAT

; 106  : 	static bool IsForfendLockTable(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_LOCK_TABLE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 20 00	 and	 eax, 2097152		; 00200000H
  00011	74 09		 je	 SHORT $LN3@IsForfendL
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendL
$LN3@IsForfendL:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendL:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendLockTable@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendLockTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameRule@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameRule@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameRule, COMDAT

; 104  : 	static bool IsForfendGameRule(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_RULE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 10 00	 and	 eax, 1048576		; 00100000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameRule@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendSaveInGame@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendSaveInGame@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendSaveInGame, COMDAT

; 99   : 	static bool IsForfendSaveInGame(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_SAVE_IN_GAME)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 08 00	 and	 eax, 524288		; 00080000H
  00011	74 09		 je	 SHORT $LN3@IsForfendS
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendS
$LN3@IsForfendS:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendS:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendSaveInGame@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendSaveInGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendSaveInRoom@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendSaveInRoom@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendSaveInRoom, COMDAT

; 97   : 	static bool IsForfendSaveInRoom(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_SAVE_IN_ROOM)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 04 00	 and	 eax, 262144		; 00040000H
  00011	74 09		 je	 SHORT $LN3@IsForfendS
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendS
$LN3@IsForfendS:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendS:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendSaveInRoom@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendSaveInRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendTakeInGame@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendTakeInGame@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendTakeInGame, COMDAT

; 95   : 	static bool IsForfendTakeInGame(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_TAKE_IN_GAME)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 02 00	 and	 eax, 131072		; 00020000H
  00011	74 09		 je	 SHORT $LN3@IsForfendT
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendT
$LN3@IsForfendT:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendT:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendTakeInGame@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendTakeInGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendTakeInRoom@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendTakeInRoom@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendTakeInRoom, COMDAT

; 93   : 	static bool IsForfendTakeInRoom(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_TAKE_IN_ROOM)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 01 00	 and	 eax, 65536		; 00010000H
  00011	74 09		 je	 SHORT $LN3@IsForfendT
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendT
$LN3@IsForfendT:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendT:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendTakeInRoom@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendTakeInRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameLookon@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameLookon@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameLookon, COMDAT

; 88   : 	static bool IsForfendGameLookon(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_LOOKON)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameLookon@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameLookon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameEnter@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameEnter@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameEnter, COMDAT

; 86   : 	static bool IsForfendGameEnter(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_ENTER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameEnter@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendRoomEnter@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendRoomEnter@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendRoomEnter, COMDAT

; 84   : 	static bool IsForfendRoomEnter(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_ROOM_ENTER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00011	74 09		 je	 SHORT $LN3@IsForfendR
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendR
$LN3@IsForfendR:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendR:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendRoomEnter@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendRoomEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsImmediateWriteScore@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsImmediateWriteScore@CServerRule@@SA_NK@Z PROC	; CServerRule::IsImmediateWriteScore, COMDAT

; 79   : 	static bool IsImmediateWriteScore(DWORD dwServerRule) { return (dwServerRule&SR_IMMEDIATE_WRITE_SCORE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  00011	74 09		 je	 SHORT $LN3@IsImmediat
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsImmediat
$LN3@IsImmediat:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsImmediat:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsImmediateWriteScore@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsImmediateWriteScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsRecordGameTrack@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsRecordGameTrack@CServerRule@@SA_NK@Z PROC		; CServerRule::IsRecordGameTrack, COMDAT

; 75   : 	static bool IsRecordGameTrack(DWORD dwServerRule) { return (dwServerRule&SR_RECORD_GAME_TRACK)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00011	74 09		 je	 SHORT $LN3@IsRecordGa
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsRecordGa
$LN3@IsRecordGa:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsRecordGa:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsRecordGameTrack@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsRecordGameTrack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsRecordGameScore@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsRecordGameScore@CServerRule@@SA_NK@Z PROC		; CServerRule::IsRecordGameScore, COMDAT

; 73   : 	static bool IsRecordGameScore(DWORD dwServerRule) { return (dwServerRule&SR_RECORD_GAME_SCORE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00011	74 09		 je	 SHORT $LN3@IsRecordGa
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsRecordGa
$LN3@IsRecordGa:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsRecordGa:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsRecordGameScore@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsRecordGameScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAvertCheatMode, COMDAT

; 68   : 	static bool IsAllowAvertCheatMode(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_AVERT_CHEAT_MODE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 40	 and	 eax, 64			; 00000040H
  0000f	74 09		 je	 SHORT $LN3@IsAllowAve
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowAve
$LN3@IsAllowAve:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAve:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAvertCheatMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowOffLineTrustee, COMDAT

; 66   : 	static bool IsAllowOffLineTrustee(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_OFFLINE_TRUSTEE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 20	 and	 eax, 32			; 00000020H
  0000f	74 09		 je	 SHORT $LN3@IsAllowOff
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowOff
$LN3@IsAllowOff:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowOff:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowOffLineTrustee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowDynamicJoin@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowDynamicJoin, COMDAT

; 64   : 	static bool IsAllowDynamicJoin(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_DYNAMIC_JOIN)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 10	 and	 eax, 16			; 00000010H
  0000f	74 09		 je	 SHORT $LN3@IsAllowDyn
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowDyn
$LN3@IsAllowDyn:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowDyn:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowDynamicJoin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendWisperOnGame@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendWisperOnGame@CServerRule@@SA_NK@Z PROC	; CServerRule::IsForfendWisperOnGame, COMDAT

; 59   : 	static bool IsForfendWisperOnGame(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_WISPER_ON_GAME)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 08	 and	 eax, 8
  0000f	74 09		 je	 SHORT $LN3@IsForfendW
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendW
$LN3@IsForfendW:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendW:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendWisperOnGame@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsForfendWisperOnGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendWisperChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendWisperChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendWisperChat, COMDAT

; 57   : 	static bool IsForfendWisperChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_WISPER_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 04	 and	 eax, 4
  0000f	74 09		 je	 SHORT $LN3@IsForfendW
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendW
$LN3@IsForfendW:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendW:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendWisperChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendWisperChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendRoomChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendRoomChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendRoomChat, COMDAT

; 55   : 	static bool IsForfendRoomChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_ROOM_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 02	 and	 eax, 2
  0000f	74 09		 je	 SHORT $LN3@IsForfendR
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendR
$LN3@IsForfendR:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendR:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendRoomChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameChat, COMDAT

; 53   : 	static bool IsForfendGameChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	74 09		 je	 SHORT $LN3@IsForfendG
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendGameChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\packetaide.h
;	COMDAT ?GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z
_TEXT	SEGMENT
_pData$ = -8						; size = 4
_this$ = -4						; size = 4
_DataDescribe$ = 8					; size = 4
?GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z PROC ; CRecvPacketHelper::GetData, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 155  : 	//效验数据
; 156  : 	if (m_wDataPos>=m_wDataSize) 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00012	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00015	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00019	3b c8		 cmp	 ecx, eax
  0001b	7c 42		 jl	 SHORT $LN2@GetData

; 157  : 	{
; 158  : 		ASSERT(m_wDataPos==m_wDataSize);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  0002a	3b c8		 cmp	 ecx, eax
  0002c	74 19		 je	 SHORT $LN6@GetData
  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z@4JA
  00034	83 c1 04	 add	 ecx, 4
  00037	51		 push	 ecx
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00042	85 c0		 test	 eax, eax
  00044	74 01		 je	 SHORT $LN6@GetData
  00046	cc		 int	 3
$LN6@GetData:

; 159  : 		DataDescribe.wDataSize=0;

  00047	33 c0		 xor	 eax, eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _DataDescribe$[ebp]
  0004c	66 89 01	 mov	 WORD PTR [ecx], ax

; 160  : 		DataDescribe.wDataDescribe=DTP_NULL;

  0004f	33 c0		 xor	 eax, eax
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _DataDescribe$[ebp]
  00054	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 161  : 		return NULL;

  00058	33 c0		 xor	 eax, eax
  0005a	e9 e9 00 00 00	 jmp	 $LN1@GetData
$LN2@GetData:

; 162  : 	}
; 163  : 
; 164  : 	//获取数据
; 165  : 	ASSERT((m_wDataPos+sizeof(tagDataDescribe))<=m_wDataSize);

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00065	83 c1 04	 add	 ecx, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  0006f	3b c8		 cmp	 ecx, eax
  00071	76 19		 jbe	 SHORT $LN7@GetData
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z@4JA
  00079	83 c1 0b	 add	 ecx, 11			; 0000000bH
  0007c	51		 push	 ecx
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00082	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00087	85 c0		 test	 eax, eax
  00089	74 01		 je	 SHORT $LN7@GetData
  0008b	cc		 int	 3
$LN7@GetData:

; 166  : 	CopyMemory(&DataDescribe,m_pcbBuffer+m_wDataPos,sizeof(tagDataDescribe));

  0008c	6a 04		 push	 4
  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00094	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00097	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0009a	51		 push	 ecx
  0009b	8b 45 08	 mov	 eax, DWORD PTR _DataDescribe$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 _memcpy
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 167  : 	ASSERT((m_wDataPos+sizeof(tagDataDescribe)+DataDescribe.wDataSize)<=m_wDataSize);

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ad	8b 55 08	 mov	 edx, DWORD PTR _DataDescribe$[ebp]
  000b0	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000b3	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  000b7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ba	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  000be	3b c8		 cmp	 ecx, eax
  000c0	76 19		 jbe	 SHORT $LN8@GetData
  000c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z@4JA
  000c8	83 c1 0d	 add	 ecx, 13			; 0000000dH
  000cb	51		 push	 ecx
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000d1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d6	85 c0		 test	 eax, eax
  000d8	74 01		 je	 SHORT $LN8@GetData
  000da	cc		 int	 3
$LN8@GetData:

; 168  : 
; 169  : 	//效验数据
; 170  : 	if ((m_wDataPos+sizeof(tagDataDescribe)+DataDescribe.wDataSize)>m_wDataSize)

  000db	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000de	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000e1	8b 55 08	 mov	 edx, DWORD PTR _DataDescribe$[ebp]
  000e4	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000e7	8d 4c 01 04	 lea	 ecx, DWORD PTR [ecx+eax+4]
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  000f2	3b c8		 cmp	 ecx, eax
  000f4	76 15		 jbe	 SHORT $LN3@GetData

; 171  : 	{
; 172  : 		DataDescribe.wDataSize=0;

  000f6	33 c0		 xor	 eax, eax
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR _DataDescribe$[ebp]
  000fb	66 89 01	 mov	 WORD PTR [ecx], ax

; 173  : 		DataDescribe.wDataDescribe=DTP_NULL;

  000fe	33 c0		 xor	 eax, eax
  00100	8b 4d 08	 mov	 ecx, DWORD PTR _DataDescribe$[ebp]
  00103	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 174  : 		return NULL;

  00107	33 c0		 xor	 eax, eax
  00109	eb 3d		 jmp	 SHORT $LN1@GetData
$LN3@GetData:

; 175  : 	}
; 176  : 
; 177  : 	//设置数据
; 178  : 	VOID * pData=NULL;

  0010b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pData$[ebp], 0

; 179  : 	if (DataDescribe.wDataSize>0) pData=m_pcbBuffer+m_wDataPos+sizeof(tagDataDescribe);

  00112	8b 45 08	 mov	 eax, DWORD PTR _DataDescribe$[ebp]
  00115	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00118	85 c9		 test	 ecx, ecx
  0011a	7e 13		 jle	 SHORT $LN4@GetData
  0011c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00122	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00125	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00128	8d 4c 08 04	 lea	 ecx, DWORD PTR [eax+ecx+4]
  0012c	89 4d f8	 mov	 DWORD PTR _pData$[ebp], ecx
$LN4@GetData:

; 180  : 	m_wDataPos+=sizeof(tagDataDescribe)+DataDescribe.wDataSize;

  0012f	8b 45 08	 mov	 eax, DWORD PTR _DataDescribe$[ebp]
  00132	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00135	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00138	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0013b	8d 4c 08 04	 lea	 ecx, DWORD PTR [eax+ecx+4]
  0013f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00142	66 89 0a	 mov	 WORD PTR [edx], cx

; 181  : 
; 182  : 	return pData;

  00145	8b 45 f8	 mov	 eax, DWORD PTR _pData$[ebp]
$LN1@GetData:

; 183  : };

  00148	5f		 pop	 edi
  00149	5e		 pop	 esi
  0014a	5b		 pop	 ebx
  0014b	8b e5		 mov	 esp, ebp
  0014d	5d		 pop	 ebp
  0014e	c2 04 00	 ret	 4
?GetData@CRecvPacketHelper@@QAEPAXAAUtagDataDescribe@@@Z ENDP ; CRecvPacketHelper::GetData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\packetaide.h
;	COMDAT ??0CRecvPacketHelper@@QAE@PBXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pcbBuffer$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
??0CRecvPacketHelper@@QAE@PBXG@Z PROC			; CRecvPacketHelper::CRecvPacketHelper, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  : 	//设置变量
; 145  : 	m_wDataPos=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	66 89 01	 mov	 WORD PTR [ecx], ax

; 146  : 	m_wDataSize=wDataSize;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	66 8b 4d 0c	 mov	 cx, WORD PTR _wDataSize$[ebp]
  0001b	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 147  : 	m_pcbBuffer=(BYTE *)pcbBuffer;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pcbBuffer$[ebp]
  00025	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 148  : 
; 149  : 	return;
; 150  : }

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
??0CRecvPacketHelper@@QAE@PBXG@Z ENDP			; CRecvPacketHelper::CRecvPacketHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\packetaide.h
;	COMDAT ?AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z
_TEXT	SEGMENT
_pDataDescribe$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
_wDataType$ = 16					; size = 2
?AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z PROC		; CSendPacketHelper::AddPacket, COMDAT
; _this$ = ecx

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	//效验数据
; 116  : 	ASSERT(wDataType!=DTP_NULL);

  0000c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataType$[ebp]
  00010	85 c0		 test	 eax, eax
  00012	75 19		 jne	 SHORT $LN5@AddPacket
  00014	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA
  0001a	83 c1 02	 add	 ecx, 2
  0001d	51		 push	 ecx
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00023	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00028	85 c0		 test	 eax, eax
  0002a	74 01		 je	 SHORT $LN5@AddPacket
  0002c	cc		 int	 3
$LN5@AddPacket:

; 117  : 	ASSERT((wDataSize+sizeof(tagDataDescribe)+m_wDataSize)<=m_wMaxBytes);

  0002d	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00037	8d 44 10 04	 lea	 eax, DWORD PTR [eax+edx+4]
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00042	3b c2		 cmp	 eax, edx
  00044	76 18		 jbe	 SHORT $LN6@AddPacket
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA
  0004b	83 c0 03	 add	 eax, 3
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00054	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00059	85 c0		 test	 eax, eax
  0005b	74 01		 je	 SHORT $LN6@AddPacket
  0005d	cc		 int	 3
$LN6@AddPacket:

; 118  : 	if ((wDataSize+sizeof(tagDataDescribe)+m_wDataSize)>m_wMaxBytes) return false;

  0005e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00068	8d 44 10 04	 lea	 eax, DWORD PTR [eax+edx+4]
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00073	3b c2		 cmp	 eax, edx
  00075	76 07		 jbe	 SHORT $LN2@AddPacket
  00077	32 c0		 xor	 al, al
  00079	e9 9a 00 00 00	 jmp	 $LN1@AddPacket
$LN2@AddPacket:

; 119  : 
; 120  : 	//插入数据
; 121  : 	ASSERT(m_pcbBuffer!=NULL);

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00085	75 19		 jne	 SHORT $LN7@AddPacket
  00087	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA
  0008d	83 c1 07	 add	 ecx, 7
  00090	51		 push	 ecx
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00096	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009b	85 c0		 test	 eax, eax
  0009d	74 01		 je	 SHORT $LN7@AddPacket
  0009f	cc		 int	 3
$LN7@AddPacket:

; 122  : 	tagDataDescribe * pDataDescribe=(tagDataDescribe *)(m_pcbBuffer+m_wDataSize);

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  000ac	89 4d f8	 mov	 DWORD PTR _pDataDescribe$[ebp], ecx

; 123  : 	pDataDescribe->wDataSize=wDataSize;

  000af	8b 45 f8	 mov	 eax, DWORD PTR _pDataDescribe$[ebp]
  000b2	66 8b 4d 0c	 mov	 cx, WORD PTR _wDataSize$[ebp]
  000b6	66 89 08	 mov	 WORD PTR [eax], cx

; 124  : 	pDataDescribe->wDataDescribe=wDataType;

  000b9	8b 45 f8	 mov	 eax, DWORD PTR _pDataDescribe$[ebp]
  000bc	66 8b 4d 10	 mov	 cx, WORD PTR _wDataType$[ebp]
  000c0	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 125  : 
; 126  : 	//插入数据
; 127  : 	if (wDataSize>0)

  000c4	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000c8	85 c0		 test	 eax, eax
  000ca	7e 36		 jle	 SHORT $LN3@AddPacket

; 128  : 	{
; 129  : 		ASSERT(pData!=NULL);

  000cc	83 7d 08 00	 cmp	 DWORD PTR _pData$[ebp], 0
  000d0	75 18		 jne	 SHORT $LN8@AddPacket
  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z@4JA
  000d7	83 c0 0f	 add	 eax, 15			; 0000000fH
  000da	50		 push	 eax
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000e0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000e5	85 c0		 test	 eax, eax
  000e7	74 01		 je	 SHORT $LN8@AddPacket
  000e9	cc		 int	 3
$LN8@AddPacket:

; 130  : 		CopyMemory(pDataDescribe+1,pData,wDataSize);

  000ea	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  000f2	51		 push	 ecx
  000f3	8b 55 f8	 mov	 edx, DWORD PTR _pDataDescribe$[ebp]
  000f6	83 c2 04	 add	 edx, 4
  000f9	52		 push	 edx
  000fa	e8 00 00 00 00	 call	 _memcpy
  000ff	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@AddPacket:

; 131  : 	}
; 132  : 
; 133  : 	//设置数据
; 134  : 	m_wDataSize+=sizeof(tagDataDescribe)+wDataSize;

  00102	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00106	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0010c	8d 44 02 04	 lea	 eax, DWORD PTR [edx+eax+4]
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	66 89 01	 mov	 WORD PTR [ecx], ax

; 135  : 
; 136  : 	return true;

  00116	b0 01		 mov	 al, 1
$LN1@AddPacket:

; 137  : }

  00118	5f		 pop	 edi
  00119	5e		 pop	 esi
  0011a	5b		 pop	 ebx
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 0c 00	 ret	 12			; 0000000cH
?AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z ENDP		; CSendPacketHelper::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\packetaide.h
;	COMDAT ?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszString$ = 8						; size = 4
_wDataType$ = 12					; size = 2
?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z PROC		; CSendPacketHelper::AddPacket, COMDAT
; _this$ = ecx

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 93   : 	//参数判断
; 94   : 	ASSERT(pszString!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pszString$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@AddPacket
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??AddPacket@CSendPacketHelper@@QAE_NPBDG@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@NEJIDGKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@AddPacket
  00029	cc		 int	 3
$LN4@AddPacket:

; 95   : 	if (pszString[0]==0) return true;

  0002a	b8 01 00 00 00	 mov	 eax, 1
  0002f	6b c8 00	 imul	 ecx, eax, 0
  00032	8b 55 08	 mov	 edx, DWORD PTR _pszString$[ebp]
  00035	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  00039	85 c0		 test	 eax, eax
  0003b	75 04		 jne	 SHORT $LN2@AddPacket
  0003d	b0 01		 mov	 al, 1
  0003f	eb 1f		 jmp	 SHORT $LN1@AddPacket
$LN2@AddPacket:

; 96   : 
; 97   : 	//插入数据
; 98   : 	return AddPacket((VOID *)pszString,CountStringBufferA(pszString),wDataType);

  00041	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataType$[ebp]
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _pszString$[ebp]
  00049	51		 push	 ecx
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00050	83 c0 01	 add	 eax, 1
  00053	50		 push	 eax
  00054	8b 55 08	 mov	 edx, DWORD PTR _pszString$[ebp]
  00057	52		 push	 edx
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?AddPacket@CSendPacketHelper@@QAE_NPAXGG@Z ; CSendPacketHelper::AddPacket
$LN1@AddPacket:

; 99   : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?AddPacket@CSendPacketHelper@@QAE_NPBDG@Z ENDP		; CSendPacketHelper::AddPacket
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\packetaide.h
;	COMDAT ?GetDataSize@CSendPacketHelper@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDataSize@CSendPacketHelper@@QAEGXZ PROC		; CSendPacketHelper::GetDataSize, COMDAT
; _this$ = ecx

; 41   : 	inline WORD GetDataSize() { return m_wDataSize; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 00	 mov	 ax, WORD PTR [eax]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetDataSize@CSendPacketHelper@@QAEGXZ ENDP		; CSendPacketHelper::GetDataSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\packetaide.h
;	COMDAT ??0CSendPacketHelper@@QAE@PAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pcbBuffer$ = 8						; size = 4
_wMaxBytes$ = 12					; size = 2
??0CSendPacketHelper@@QAE@PAXG@Z PROC			; CSendPacketHelper::CSendPacketHelper, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	//设置变量
; 83   : 	m_wDataSize=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	66 89 01	 mov	 WORD PTR [ecx], ax

; 84   : 	m_wMaxBytes=wMaxBytes;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	66 8b 4d 0c	 mov	 cx, WORD PTR _wMaxBytes$[ebp]
  0001b	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 85   : 	m_pcbBuffer=(BYTE *)pcbBuffer;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pcbBuffer$[ebp]
  00025	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 86   : 
; 87   : 	return;
; 88   : }

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
??0CSendPacketHelper@@QAE@PAXG@Z ENDP			; CSendPacketHelper::CSendPacketHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00012	83 c4 04	 add	 esp, 4
  00015	0f b6 f0	 movzx	 esi, al
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00021	83 c4 04	 add	 esp, 4
  00024	0f b6 d0	 movzx	 edx, al
  00027	3b f2		 cmp	 esi, edx
  00029	7e 04		 jle	 SHORT $LN2@InterfaceV
  0002b	32 c0		 xor	 al, al
  0002d	eb 74		 jmp	 SHORT $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00038	83 c4 04	 add	 esp, 4
  0003b	0f b6 f0	 movzx	 esi, al
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00047	83 c4 04	 add	 esp, 4
  0004a	0f b6 d0	 movzx	 edx, al
  0004d	3b f2		 cmp	 esi, edx
  0004f	74 04		 je	 SHORT $LN3@InterfaceV
  00051	32 c0		 xor	 al, al
  00053	eb 4e		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00055	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0005e	83 c4 04	 add	 esp, 4
  00061	0f b6 f0	 movzx	 esi, al
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 d0	 movzx	 edx, al
  00073	3b f2		 cmp	 esi, edx
  00075	74 04		 je	 SHORT $LN4@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 28		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 f0	 movzx	 esi, al
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00093	83 c4 04	 add	 esp, 4
  00096	0f b6 d0	 movzx	 edx, al
  00099	3b f2		 cmp	 esi, edx
  0009b	74 04		 je	 SHORT $LN5@InterfaceV
  0009d	32 c0		 xor	 al, al
  0009f	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000a1	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	d1 e0		 shl	 eax, 1
  00010	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 03	 imul	 ecx, eax, 3
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagPersonalUserScoreInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalUserScoreInfo@@QAE@XZ PROC		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo, COMDAT
; _this$ = ecx

; 1112 : 	tagPersonalUserScoreInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1113 : 	{
; 1114 : 		memset(this, 0, sizeof(tagPersonalUserScoreInfo));

  0000c	6a 3c		 push	 60			; 0000003cH
  0000e	6a 00		 push	 0
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1115 : 	}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0tagPersonalUserScoreInfo@@QAE@XZ ENDP		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@K@@YGIK@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 4
??$HashKey@K@@YGIK@Z PROC				; HashKey<unsigned long>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00018	83 c4 08	 add	 esp, 8
  0001b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001e	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00021	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00024	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00027	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002a	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002d	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00034	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003b	2b c1		 sub	 eax, ecx
  0003d	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00040	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00045	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004a	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??$HashKey@K@@YGIK@Z ENDP				; HashKey<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBNHGHMI@atlTraceString@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 00 02 00	 push	 131072			; 00020000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  :             return _time64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00013	83 c4 04	 add	 esp, 4

; 537  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 __vsnprintf
  00024	83 c4 10	 add	 esp, 16			; 00000010H
  00027	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1975 :         __crt_va_end(_ArgList);

  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1976 :         return _Result;

  00031	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1977 :     }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT

; 1409 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1410 :         #pragma warning(push)
; 1411 :         #pragma warning(disable: 4996) // Deprecation
; 1412 :         return _vsnprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1413 :         #pragma warning(pop)
; 1414 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv68 = -68						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _IsEqualGUID
  00016	83 c4 08	 add	 esp, 8
  00019	85 c0		 test	 eax, eax
  0001b	74 09		 je	 SHORT $LN3@
  0001d	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00026	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  0002d	8a 45 bc	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -68						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 _memcmp
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN3@IsEqualGUI
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务器\attemperenginesink.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
