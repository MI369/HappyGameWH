; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\模块管理\MatchInfoManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	_sprintf
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	_wmemcpy
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
PUBLIC	??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ	; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
PUBLIC	?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance
PUBLIC	?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
PUBLIC	??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
PUBLIC	?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
PUBLIC	??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z	; CTempldateHelper<IDataBase>::`scalar deleting destructor'
PUBLIC	??0CDataBaseHelper@@QAE@XZ			; CDataBaseHelper::CDataBaseHelper
PUBLIC	??1CDataBaseHelper@@UAE@XZ			; CDataBaseHelper::~CDataBaseHelper
PUBLIC	??_GCDataBaseHelper@@UAEPAXI@Z			; CDataBaseHelper::`scalar deleting destructor'
PUBLIC	?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
PUBLIC	?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetPlatformDBParameter
PUBLIC	?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetGameMatchDBParameter
PUBLIC	?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetGameMatchDBParameter
PUBLIC	?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
PUBLIC	??0CModuleDBParameter@@QAE@ABV0@@Z		; CModuleDBParameter::CModuleDBParameter
PUBLIC	??4CModuleDBParameter@@QAEAAV0@ABV0@@Z		; CModuleDBParameter::operator=
PUBLIC	??_GCModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`scalar deleting destructor'
PUBLIC	??_ECModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`vector deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABQAUtagGameMatchOption@@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Add
PUBLIC	?Append@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHABQAUtagGameMatchOption@@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::AllocMemory
PUBLIC	??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
PUBLIC	??0CMatchInfoBuffer@@QAE@XZ			; CMatchInfoBuffer::CMatchInfoBuffer
PUBLIC	??1CMatchInfoBuffer@@UAE@XZ			; CMatchInfoBuffer::~CMatchInfoBuffer
PUBLIC	?ResetMatchOption@CMatchInfoBuffer@@QAE_NXZ	; CMatchInfoBuffer::ResetMatchOption
PUBLIC	?DeleteMatchOption@CMatchInfoBuffer@@QAE_NK@Z	; CMatchInfoBuffer::DeleteMatchOption
PUBLIC	?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z ; CMatchInfoBuffer::InsertMatchOption
PUBLIC	?GetMatchOptionCount@CMatchInfoBuffer@@QAEKXZ	; CMatchInfoBuffer::GetMatchOptionCount
PUBLIC	?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z ; CMatchInfoBuffer::SearchMatchOption
PUBLIC	?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ ; CMatchInfoBuffer::CreateMatchOption
PUBLIC	??0CMatchInfoBuffer@@QAE@ABV0@@Z		; CMatchInfoBuffer::CMatchInfoBuffer
PUBLIC	??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z		; CMatchInfoBuffer::operator=
PUBLIC	??_GCMatchInfoBuffer@@UAEPAXI@Z			; CMatchInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECMatchInfoBuffer@@UAEPAXI@Z			; CMatchInfoBuffer::`vector deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABQAUtagMatchRewardInfo@@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Add
PUBLIC	?Append@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHABQAUtagMatchRewardInfo@@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::AllocMemory
PUBLIC	??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor'
PUBLIC	??0CRewardInfoBuffer@@QAE@XZ			; CRewardInfoBuffer::CRewardInfoBuffer
PUBLIC	??1CRewardInfoBuffer@@UAE@XZ			; CRewardInfoBuffer::~CRewardInfoBuffer
PUBLIC	?ResetMatchRewardInfo@CRewardInfoBuffer@@QAE_NXZ ; CRewardInfoBuffer::ResetMatchRewardInfo
PUBLIC	?DeleteMatchRewardInfo@CRewardInfoBuffer@@QAE_NG@Z ; CRewardInfoBuffer::DeleteMatchRewardInfo
PUBLIC	?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z ; CRewardInfoBuffer::InsertMatchRewardInfo
PUBLIC	?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ	; CRewardInfoBuffer::GetMatchRewardCount
PUBLIC	?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
PUBLIC	?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ ; CRewardInfoBuffer::CreateMatchRewardInfo
PUBLIC	??0CRewardInfoBuffer@@QAE@ABV0@@Z		; CRewardInfoBuffer::CRewardInfoBuffer
PUBLIC	??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z		; CRewardInfoBuffer::operator=
PUBLIC	??_GCRewardInfoBuffer@@UAEPAXI@Z		; CRewardInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECRewardInfoBuffer@@UAEPAXI@Z		; CRewardInfoBuffer::`vector deleting destructor'
PUBLIC	??0CMatchInfoManager@@QAE@XZ			; CMatchInfoManager::CMatchInfoManager
PUBLIC	??1CMatchInfoManager@@UAE@XZ			; CMatchInfoManager::~CMatchInfoManager
PUBLIC	?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z ; CMatchInfoManager::LoadGameMatchReward
PUBLIC	?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z ; CMatchInfoManager::LoadGameMatchOption
PUBLIC	?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z ; CMatchInfoManager::LoadGameMatchOption
PUBLIC	?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z ; CMatchInfoManager::DeleteGameMatchOption
PUBLIC	?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::InsertGameMatchOption
PUBLIC	?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ModifyGameMatchOption
PUBLIC	?ConnectPlatformDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectPlatformDB
PUBLIC	?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
PUBLIC	?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ReadGameMatchOption
PUBLIC	??0CMatchInfoManager@@QAE@ABV0@@Z		; CMatchInfoManager::CMatchInfoManager
PUBLIC	??4CMatchInfoManager@@QAEAAV0@ABV0@@Z		; CMatchInfoManager::operator=
PUBLIC	??_GCMatchInfoManager@@UAEPAXI@Z		; CMatchInfoManager::`scalar deleting destructor'
PUBLIC	??_ECMatchInfoManager@@UAEPAXI@Z		; CMatchInfoManager::`vector deleting destructor'
PUBLIC	??0CModuleInfoManager@@QAE@ABV0@@Z		; CModuleInfoManager::CModuleInfoManager
PUBLIC	??4CModuleInfoManager@@QAEAAV0@ABV0@@Z		; CModuleInfoManager::operator=
PUBLIC	??_GCModuleInfoManager@@UAEPAXI@Z		; CModuleInfoManager::`scalar deleting destructor'
PUBLIC	??_ECModuleInfoManager@@UAEPAXI@Z		; CModuleInfoManager::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7?$CTempldateHelper@UIDataBase@@@@6B@	; CTempldateHelper<IDataBase>::`vftable'
PUBLIC	??_7CDataBaseHelper@@6B@			; CDataBaseHelper::`vftable'
PUBLIC	??_C@_0P@IKJBDFNG@CreateDataBase@		; `string'
PUBLIC	??_C@_0BB@BEMLEOHB@KernelEngine?4dll@		; `string'
PUBLIC	??_7CModuleDBParameter@@6B@			; CModuleDBParameter::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
PUBLIC	??_7CMatchInfoBuffer@@6B@			; CMatchInfoBuffer::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vftable'
PUBLIC	??_7CRewardInfoBuffer@@6B@			; CRewardInfoBuffer::`vftable'
PUBLIC	??_7CMatchInfoManager@@6B@			; CMatchInfoManager::`vftable'
PUBLIC	??_7CModuleInfoManager@@6B@			; CModuleInfoManager::`vftable'
PUBLIC	?__LINE__Var@?0???1CMatchInfoBuffer@@UAE@XZ@4JA	; `CMatchInfoBuffer::~CMatchInfoBuffer'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU3@@Z@4JA ; `CMatchInfoBuffer::InsertMatchOption'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CRewardInfoBuffer@@UAE@XZ@4JA ; `CRewardInfoBuffer::~CRewardInfoBuffer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU3@@Z@4JA ; `CRewardInfoBuffer::InsertMatchRewardInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z@4JA ; `CMatchInfoManager::LoadGameMatchReward'::`1'::__LINE__Var
PUBLIC	??_C@_0L@MKEKGMGP@?$EAdwMatchID@		; `string'
PUBLIC	??_C@_0BH@NDBLJKCK@GSP_GS_LoadMatchReward@	; `string'
PUBLIC	??_C@_09EPMDJCNA@MatchRank@			; `string'
PUBLIC	??_C@_0L@CKLPJIFO@RewardGold@			; `string'
PUBLIC	??_C@_0M@BLJEFPLJ@RewardIngot@			; `string'
PUBLIC	??_C@_0BB@DAEFAHAB@RewardExperience@		; `string'
PUBLIC	??_R0PAUIDataBaseException@@@8			; IDataBaseException * `RTTI Type Descriptor'
PUBLIC	?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z@4JA ; `CMatchInfoManager::LoadGameMatchOption'::`1'::__LINE__Var
PUBLIC	??_C@_08HBBOJKPI@?$EAwKindID@			; `string'
PUBLIC	??_C@_0BD@CBAFKNPB@?$EAstrServiceMachine@	; `string'
PUBLIC	??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@	; `string'
PUBLIC	??_C@_0BJ@HGGCIMNG@GSP_GS_LoadGameMatchItem@	; `string'
PUBLIC	?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z@4JA ; `CMatchInfoManager::LoadGameMatchOption'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z@4JA ; `CMatchInfoManager::DeleteGameMatchOption'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@LLLDCBFA@GSP_GS_DeleteGameMatchItem@	; `string'
PUBLIC	?__LINE__Var@?0??InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA ; `CMatchInfoManager::InsertGameMatchOption'::`1'::__LINE__Var
PUBLIC	??_C@_04JFFKLGJF@?$CF02X@			; `string'
PUBLIC	??_C@_0O@IDKCNMDH@?$EAstrMatchName@		; `string'
PUBLIC	??_C@_0O@NKOFFMGJ@?$EAstrMatchDate@		; `string'
PUBLIC	??_C@_0N@NLBCJFKK@?$EAcbMatchType@		; `string'
PUBLIC	??_C@_0L@PDOPAGMD@?$EAcbFeeType@		; `string'
PUBLIC	??_C@_0O@BAHPIMKH@?$EAcbDeductArea@		; `string'
PUBLIC	??_C@_0M@HBHPDEE@?$EAlSignupFee@		; `string'
PUBLIC	??_C@_0O@IGAIKEL@?$EAcbSignupMode@		; `string'
PUBLIC	??_C@_0BB@NIOCNJO@?$EAcbJoinCondition@		; `string'
PUBLIC	??_C@_0P@NMLGPOCE@?$EAcbMemberOrder@		; `string'
PUBLIC	??_C@_0O@FHHALJLH@?$EAdwExperience@		; `string'
PUBLIC	??_C@_0P@IAEFAMCC@?$EAdwFromMatchID@		; `string'
PUBLIC	??_C@_0O@JBFEJKCF@?$EAcbFilterType@		; `string'
PUBLIC	??_C@_0M@GKCAPLMD@?$EAwMaxRankID@		; `string'
PUBLIC	??_C@_0O@PJDBJKDJ@?$EAMatchEndDate@		; `string'
PUBLIC	??_C@_0BA@LIHJEKAK@?$EAMatchStartDate@		; `string'
PUBLIC	??_C@_0P@LJGINACK@?$EAcbRankingMode@		; `string'
PUBLIC	??_C@_0P@DBECKJP@?$EAwCountInnings@		; `string'
PUBLIC	??_C@_0BE@MMGHFAJ@?$EAcbFilterGradesMode@	; `string'
PUBLIC	??_C@_0BC@OEHLNJCG@?$EAcbDistributeRule@	; `string'
PUBLIC	??_C@_0BE@HAABPICC@?$EAwMinDistributeUser@	; `string'
PUBLIC	??_C@_0BG@PGABJKOH@?$EAwDistributeTimeSpace@	; `string'
PUBLIC	??_C@_0BF@EICMGAPH@?$EAwMinPartakeGameUser@	; `string'
PUBLIC	??_C@_0BF@OPBIOAIO@?$EAwMaxPartakeGameUser@	; `string'
PUBLIC	??_C@_0P@HICCMOMP@?$EAstrRewardGold@		; `string'
PUBLIC	??_C@_0BA@JMMOGBDN@?$EAstrRewardIngot@		; `string'
PUBLIC	??_C@_0BF@HBDODLCL@?$EAstrRewardExperience@	; `string'
PUBLIC	??_C@_0O@PIALAMEL@?$EAstrMatchRule@		; `string'
PUBLIC	??_C@_0BL@NBMBGJOC@GSP_GS_InsertGameMatchItem@	; `string'
PUBLIC	?__LINE__Var@?0??ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA ; `CMatchInfoManager::ModifyGameMatchOption'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@NMEDDMNL@GSP_GS_ModifyGameMatchItem@	; `string'
PUBLIC	??_C@_0DA@PCJBGNDG@CreateGameServer?5?$LE?$LE?$LN?$KI?5PlatformD@ ; `string'
PUBLIC	??_C@_0DD@HOLKKKGP@ConnectGameMatchDB?5?$LE?$LE?$LN?$KI?5GameMat@ ; `string'
PUBLIC	?__LINE__Var@?0??ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z@4JA ; `CMatchInfoManager::ReadGameMatchOption'::`1'::__LINE__Var
PUBLIC	??_C@_07FOGJBBBD@MatchID@			; `string'
PUBLIC	??_C@_0M@LGFHLALO@MatchStatus@			; `string'
PUBLIC	??_C@_09NNBFLLPE@MatchType@			; `string'
PUBLIC	??_C@_09HGBGHLIE@MatchName@			; `string'
PUBLIC	??_C@_07GDEHGHPI@FeeType@			; `string'
PUBLIC	??_C@_0L@JMKKPHHK@DeductArea@			; `string'
PUBLIC	??_C@_09PFOFOOFC@SignupFee@			; `string'
PUBLIC	??_C@_0L@IELFPBJG@SignupMode@			; `string'
PUBLIC	??_C@_0O@LCKNANBH@JoinCondition@		; `string'
PUBLIC	??_C@_0M@CEFIIFDG@MemberOrder@			; `string'
PUBLIC	??_C@_0L@DCGNFONO@Experience@			; `string'
PUBLIC	??_C@_0M@LEEOMIDJ@FromMatchID@			; `string'
PUBLIC	??_C@_0L@BNIBOBPI@FilterType@			; `string'
PUBLIC	??_C@_09BFAFKFFK@MaxRankID@			; `string'
PUBLIC	??_C@_0N@GGEHFCIN@MatchEndDate@			; `string'
PUBLIC	??_C@_0P@KNGPPEEC@MatchStartDate@		; `string'
PUBLIC	??_C@_0M@EBIGKLDI@RankingMode@			; `string'
PUBLIC	??_C@_0N@JOOKANAC@CountInnings@			; `string'
PUBLIC	??_C@_0BB@NFMBAAGJ@FilterGradesMode@		; `string'
PUBLIC	??_C@_0P@HAKAMBIC@DistributeRule@		; `string'
PUBLIC	??_C@_0BC@BPMHCGIJ@MinDistributeUser@		; `string'
PUBLIC	??_C@_0BE@NKJJGPNA@DistributeTimeSpace@		; `string'
PUBLIC	??_C@_0BD@JEHNMEJ@MinPartakeGameUser@		; `string'
PUBLIC	??_C@_0BD@KOHDFMDA@MaxPartakeGameUser@		; `string'
PUBLIC	??_C@_09NLPKLPI@MatchRule@			; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ ; `string'
PUBLIC	??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4CDataBaseHelper@@6B@			; CDataBaseHelper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDataBaseHelper@@@8			; CDataBaseHelper `RTTI Type Descriptor'
PUBLIC	??_R3CDataBaseHelper@@8				; CDataBaseHelper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDataBaseHelper@@8				; CDataBaseHelper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDataBaseHelper@@8		; CDataBaseHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8	; CTempldateHelper<IDataBase> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTempldateHelper@UIDataBase@@@@8		; CTempldateHelper<IDataBase>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTempldateHelper@UIDataBase@@@@8		; CTempldateHelper<IDataBase>::`RTTI Base Class Array'
PUBLIC	??_R4?$CTempldateHelper@UIDataBase@@@@6B@	; CTempldateHelper<IDataBase>::`RTTI Complete Object Locator'
PUBLIC	??_R4CModuleDBParameter@@6B@			; CModuleDBParameter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleDBParameter@@@8			; CModuleDBParameter `RTTI Type Descriptor'
PUBLIC	??_R3CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleDBParameter@@8		; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchInfoBuffer@@6B@			; CMatchInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchInfoBuffer@@@8			; CMatchInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CMatchInfoBuffer@@8			; CMatchInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchInfoBuffer@@8			; CMatchInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchInfoBuffer@@8		; CMatchInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRewardInfoBuffer@@6B@			; CRewardInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRewardInfoBuffer@@@8			; CRewardInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CRewardInfoBuffer@@8			; CRewardInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRewardInfoBuffer@@8			; CRewardInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRewardInfoBuffer@@8		; CRewardInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchInfoManager@@6B@			; CMatchInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchInfoManager@@@8			; CMatchInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CMatchInfoManager@@8			; CMatchInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchInfoManager@@8			; CMatchInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchInfoManager@@8		; CMatchInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CModuleInfoManager@@6B@			; CModuleInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleInfoManager@@@8			; CModuleInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CModuleInfoManager@@8			; CModuleInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleInfoManager@@8			; CModuleInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleInfoManager@@8		; CModuleInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z:PROC	; AfxLoadLibrary
EXTRN	?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z:PROC	; AfxFreeLibrary
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	??_E?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z:PROC ; CTempldateHelper<IDataBase>::`vector deleting destructor'
EXTRN	??_ECDataBaseHelper@@UAEPAXI@Z:PROC		; CDataBaseHelper::`vector deleting destructor'
EXTRN	__imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z:PROC
EXTRN	__imp_??1CDataBaseAide@@UAE@XZ:PROC
EXTRN	__imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z:PROC
EXTRN	__imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z:PROC
EXTRN	__imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z:PROC
EXTRN	__imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z:PROC
EXTRN	__imp_?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z:PROC
EXTRN	__imp_?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z:PROC
EXTRN	__imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z:PROC
EXTRN	__imp_?ResetParameter@CDataBaseAide@@QAEXXZ:PROC
EXTRN	__imp_?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??1CModuleDBParameter@@UAE@XZ:PROC		; CModuleDBParameter::~CModuleDBParameter
EXTRN	??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vector deleting destructor'
EXTRN	??1CModuleInfoManager@@UAE@XZ:PROC		; CModuleInfoManager::~CModuleInfoManager
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A:DWORD ; CModuleDBParameter::m_pModuleDBParameter
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleInfoManager@@8 DD FLAT:??_R0?AVCModuleInfoManager@@@8 ; CModuleInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleInfoManager@@8
rdata$r	SEGMENT
??_R2CModuleInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CModuleInfoManager@@8 ; CModuleInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleInfoManager@@8
rdata$r	SEGMENT
??_R3CModuleInfoManager@@8 DD 00H			; CModuleInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleInfoManager@@@8
data$r	SEGMENT
??_R0?AVCModuleInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleInfoManager@@6B@
rdata$r	SEGMENT
??_R4CModuleInfoManager@@6B@ DD 00H			; CModuleInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleInfoManager@@@8
	DD	FLAT:??_R3CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchInfoManager@@8 DD FLAT:??_R0?AVCMatchInfoManager@@@8 ; CMatchInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchInfoManager@@8
rdata$r	SEGMENT
??_R2CMatchInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CMatchInfoManager@@8 ; CMatchInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchInfoManager@@8
rdata$r	SEGMENT
??_R3CMatchInfoManager@@8 DD 00H			; CMatchInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchInfoManager@@@8
data$r	SEGMENT
??_R0?AVCMatchInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CMatchInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchInfoManager@@6B@
rdata$r	SEGMENT
??_R4CMatchInfoManager@@6B@ DD 00H			; CMatchInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchInfoManager@@@8
	DD	FLAT:??_R3CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRewardInfoBuffer@@8 DD FLAT:??_R0?AVCRewardInfoBuffer@@@8 ; CRewardInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R2CRewardInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CRewardInfoBuffer@@8 ; CRewardInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R3CRewardInfoBuffer@@8 DD 00H			; CRewardInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRewardInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCRewardInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@ ; CRewardInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRewardInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRewardInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CRewardInfoBuffer@@6B@ DD 00H			; CRewardInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRewardInfoBuffer@@@8
	DD	FLAT:??_R3CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchInfoBuffer@@8 DD FLAT:??_R0?AVCMatchInfoBuffer@@@8 ; CMatchInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R2CMatchInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CMatchInfoBuffer@@8 ; CMatchInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R3CMatchInfoBuffer@@8 DD 00H				; CMatchInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCMatchInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@	; CMatchInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CMatchInfoBuffer@@6B@ DD 00H			; CMatchInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchInfoBuffer@@@8
	DD	FLAT:??_R3CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD 00H ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleDBParameter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleDBParameter@@8 DD FLAT:??_R0?AVCModuleDBParameter@@@8 ; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleDBParameter@@8
rdata$r	SEGMENT
??_R2CModuleDBParameter@@8 DD FLAT:??_R1A@?0A@EA@CModuleDBParameter@@8 ; CModuleDBParameter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleDBParameter@@8
rdata$r	SEGMENT
??_R3CModuleDBParameter@@8 DD 00H			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleDBParameter@@@8
data$r	SEGMENT
??_R0?AVCModuleDBParameter@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleDBParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleDBParameter@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleDBParameter@@6B@
rdata$r	SEGMENT
??_R4CModuleDBParameter@@6B@ DD 00H			; CModuleDBParameter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleDBParameter@@@8
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTempldateHelper@UIDataBase@@@@6B@
rdata$r	SEGMENT
??_R4?$CTempldateHelper@UIDataBase@@@@6B@ DD 00H	; CTempldateHelper<IDataBase>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8
	DD	FLAT:??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R2?$CTempldateHelper@UIDataBase@@@@8 DD FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R3?$CTempldateHelper@UIDataBase@@@@8 DD 00H		; CTempldateHelper<IDataBase>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8
data$r	SEGMENT
??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8 DD FLAT:??_7type_info@@6B@ ; CTempldateHelper<IDataBase> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTempldateHelper@UIDataBase@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 DD FLAT:??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDataBaseHelper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDataBaseHelper@@8 DD FLAT:??_R0?AVCDataBaseHelper@@@8 ; CDataBaseHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_R2CDataBaseHelper@@8
rdata$r	SEGMENT
??_R2CDataBaseHelper@@8 DD FLAT:??_R1A@?0A@EA@CDataBaseHelper@@8 ; CDataBaseHelper::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CDataBaseHelper@@8
rdata$r	SEGMENT
??_R3CDataBaseHelper@@8 DD 00H				; CDataBaseHelper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDataBaseHelper@@@8
data$r	SEGMENT
??_R0?AVCDataBaseHelper@@@8 DD FLAT:??_7type_info@@6B@	; CDataBaseHelper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDataBaseHelper@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDataBaseHelper@@6B@
rdata$r	SEGMENT
??_R4CDataBaseHelper@@6B@ DD 00H			; CDataBaseHelper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDataBaseHelper@@@8
	DD	FLAT:??_R3CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
CONST	SEGMENT
??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ DB 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH
	DB	0a1H, 0b0H, '%s', 0a1H, 0b1H, 0b2H, 0faH, 0c9H, 0faH, 0ceH, 0b4H
	DB	0d6H, 0aaH, 0d2H, 0ecH, 0b3H, 0a3H, 0b4H, 0edH, 0ceH, 0f3H, 0a3H
	DB	0acH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0a1H, 0b0H, '%s', 0a1H, 0b1H, 0a3H, 0acH, 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H, 0b0H, 0dcH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ DB 0b5H
	DB	0f7H, 0d3H, 0c3H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H
	DB	0b1H, 0c9H, 0faH, 0b3H, 0c9H, 0b6H, 0d4H, 0cfH, 0f3H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
CONST	SEGMENT
??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ DB 0d5H
	DB	0d2H, 0b2H, 0bbH, 0b5H, 0bdH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H
	DB	0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H, 0b1H
	DB	':%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ DB 0a1H
	DB	0b0H, '%s', 0a1H, 0b1H, 0c4H, 0a3H, 0bfH, 0e9H, 0bcH, 0d3H, 0d4H
	DB	0d8H, 0caH, 0a7H, 0b0H, 0dcH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\m'
	DB	'odule.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NLPKLPI@MatchRule@
CONST	SEGMENT
??_C@_09NLPKLPI@MatchRule@ DB 'MatchRule', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOHDFMDA@MaxPartakeGameUser@
CONST	SEGMENT
??_C@_0BD@KOHDFMDA@MaxPartakeGameUser@ DB 'MaxPartakeGameUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JEHNMEJ@MinPartakeGameUser@
CONST	SEGMENT
??_C@_0BD@JEHNMEJ@MinPartakeGameUser@ DB 'MinPartakeGameUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NKJJGPNA@DistributeTimeSpace@
CONST	SEGMENT
??_C@_0BE@NKJJGPNA@DistributeTimeSpace@ DB 'DistributeTimeSpace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BPMHCGIJ@MinDistributeUser@
CONST	SEGMENT
??_C@_0BC@BPMHCGIJ@MinDistributeUser@ DB 'MinDistributeUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HAKAMBIC@DistributeRule@
CONST	SEGMENT
??_C@_0P@HAKAMBIC@DistributeRule@ DB 'DistributeRule', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NFMBAAGJ@FilterGradesMode@
CONST	SEGMENT
??_C@_0BB@NFMBAAGJ@FilterGradesMode@ DB 'FilterGradesMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JOOKANAC@CountInnings@
CONST	SEGMENT
??_C@_0N@JOOKANAC@CountInnings@ DB 'CountInnings', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EBIGKLDI@RankingMode@
CONST	SEGMENT
??_C@_0M@EBIGKLDI@RankingMode@ DB 'RankingMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KNGPPEEC@MatchStartDate@
CONST	SEGMENT
??_C@_0P@KNGPPEEC@MatchStartDate@ DB 'MatchStartDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GGEHFCIN@MatchEndDate@
CONST	SEGMENT
??_C@_0N@GGEHFCIN@MatchEndDate@ DB 'MatchEndDate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BFAFKFFK@MaxRankID@
CONST	SEGMENT
??_C@_09BFAFKFFK@MaxRankID@ DB 'MaxRankID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BNIBOBPI@FilterType@
CONST	SEGMENT
??_C@_0L@BNIBOBPI@FilterType@ DB 'FilterType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LEEOMIDJ@FromMatchID@
CONST	SEGMENT
??_C@_0M@LEEOMIDJ@FromMatchID@ DB 'FromMatchID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DCGNFONO@Experience@
CONST	SEGMENT
??_C@_0L@DCGNFONO@Experience@ DB 'Experience', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEFIIFDG@MemberOrder@
CONST	SEGMENT
??_C@_0M@CEFIIFDG@MemberOrder@ DB 'MemberOrder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCKNANBH@JoinCondition@
CONST	SEGMENT
??_C@_0O@LCKNANBH@JoinCondition@ DB 'JoinCondition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IELFPBJG@SignupMode@
CONST	SEGMENT
??_C@_0L@IELFPBJG@SignupMode@ DB 'SignupMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PFOFOOFC@SignupFee@
CONST	SEGMENT
??_C@_09PFOFOOFC@SignupFee@ DB 'SignupFee', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JMKKPHHK@DeductArea@
CONST	SEGMENT
??_C@_0L@JMKKPHHK@DeductArea@ DB 'DeductArea', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDEHGHPI@FeeType@
CONST	SEGMENT
??_C@_07GDEHGHPI@FeeType@ DB 'FeeType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGBGHLIE@MatchName@
CONST	SEGMENT
??_C@_09HGBGHLIE@MatchName@ DB 'MatchName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NNBFLLPE@MatchType@
CONST	SEGMENT
??_C@_09NNBFLLPE@MatchType@ DB 'MatchType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LGFHLALO@MatchStatus@
CONST	SEGMENT
??_C@_0M@LGFHLALO@MatchStatus@ DB 'MatchStatus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FOGJBBBD@MatchID@
CONST	SEGMENT
??_C@_07FOGJBBBD@MatchID@ DB 'MatchID', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z@4JA DD 034aH ; `CMatchInfoManager::ReadGameMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DD@HOLKKKGP@ConnectGameMatchDB?5?$LE?$LE?$LN?$KI?5GameMat@
CONST	SEGMENT
??_C@_0DD@HOLKKKGP@ConnectGameMatchDB?5?$LE?$LE?$LN?$KI?5GameMat@ DB 'Con'
	DB	'nectGameMatchDB ', 0b4H, 0b4H, 0bdH, 0a8H, ' GameMatchDBModul'
	DB	'e ', 0b6H, 0d4H, 0cfH, 0f3H, 0caH, 0a7H, 0b0H, 0dcH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PCJBGNDG@CreateGameServer?5?$LE?$LE?$LN?$KI?5PlatformD@
CONST	SEGMENT
??_C@_0DA@PCJBGNDG@CreateGameServer?5?$LE?$LE?$LN?$KI?5PlatformD@ DB 'Cre'
	DB	'ateGameServer ', 0b4H, 0b4H, 0bdH, 0a8H, ' PlatformDBModule ', 0b6H
	DB	0d4H, 0cfH, 0f3H, 0caH, 0a7H, 0b0H, 0dcH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NMEDDMNL@GSP_GS_ModifyGameMatchItem@
CONST	SEGMENT
??_C@_0BL@NMEDDMNL@GSP_GS_ModifyGameMatchItem@ DB 'GSP_GS_ModifyGameMatch'
	DB	'Item', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA DD 02afH ; `CMatchInfoManager::ModifyGameMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@NBMBGJOC@GSP_GS_InsertGameMatchItem@
CONST	SEGMENT
??_C@_0BL@NBMBGJOC@GSP_GS_InsertGameMatchItem@ DB 'GSP_GS_InsertGameMatch'
	DB	'Item', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIALAMEL@?$EAstrMatchRule@
CONST	SEGMENT
??_C@_0O@PIALAMEL@?$EAstrMatchRule@ DB '@strMatchRule', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HBDODLCL@?$EAstrRewardExperience@
CONST	SEGMENT
??_C@_0BF@HBDODLCL@?$EAstrRewardExperience@ DB '@strRewardExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JMMOGBDN@?$EAstrRewardIngot@
CONST	SEGMENT
??_C@_0BA@JMMOGBDN@?$EAstrRewardIngot@ DB '@strRewardIngot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HICCMOMP@?$EAstrRewardGold@
CONST	SEGMENT
??_C@_0P@HICCMOMP@?$EAstrRewardGold@ DB '@strRewardGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OPBIOAIO@?$EAwMaxPartakeGameUser@
CONST	SEGMENT
??_C@_0BF@OPBIOAIO@?$EAwMaxPartakeGameUser@ DB '@wMaxPartakeGameUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EICMGAPH@?$EAwMinPartakeGameUser@
CONST	SEGMENT
??_C@_0BF@EICMGAPH@?$EAwMinPartakeGameUser@ DB '@wMinPartakeGameUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PGABJKOH@?$EAwDistributeTimeSpace@
CONST	SEGMENT
??_C@_0BG@PGABJKOH@?$EAwDistributeTimeSpace@ DB '@wDistributeTimeSpace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAABPICC@?$EAwMinDistributeUser@
CONST	SEGMENT
??_C@_0BE@HAABPICC@?$EAwMinDistributeUser@ DB '@wMinDistributeUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OEHLNJCG@?$EAcbDistributeRule@
CONST	SEGMENT
??_C@_0BC@OEHLNJCG@?$EAcbDistributeRule@ DB '@cbDistributeRule', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MMGHFAJ@?$EAcbFilterGradesMode@
CONST	SEGMENT
??_C@_0BE@MMGHFAJ@?$EAcbFilterGradesMode@ DB '@cbFilterGradesMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DBECKJP@?$EAwCountInnings@
CONST	SEGMENT
??_C@_0P@DBECKJP@?$EAwCountInnings@ DB '@wCountInnings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LJGINACK@?$EAcbRankingMode@
CONST	SEGMENT
??_C@_0P@LJGINACK@?$EAcbRankingMode@ DB '@cbRankingMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LIHJEKAK@?$EAMatchStartDate@
CONST	SEGMENT
??_C@_0BA@LIHJEKAK@?$EAMatchStartDate@ DB '@MatchStartDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJDBJKDJ@?$EAMatchEndDate@
CONST	SEGMENT
??_C@_0O@PJDBJKDJ@?$EAMatchEndDate@ DB '@MatchEndDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKCAPLMD@?$EAwMaxRankID@
CONST	SEGMENT
??_C@_0M@GKCAPLMD@?$EAwMaxRankID@ DB '@wMaxRankID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBFEJKCF@?$EAcbFilterType@
CONST	SEGMENT
??_C@_0O@JBFEJKCF@?$EAcbFilterType@ DB '@cbFilterType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IAEFAMCC@?$EAdwFromMatchID@
CONST	SEGMENT
??_C@_0P@IAEFAMCC@?$EAdwFromMatchID@ DB '@dwFromMatchID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FHHALJLH@?$EAdwExperience@
CONST	SEGMENT
??_C@_0O@FHHALJLH@?$EAdwExperience@ DB '@dwExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NMLGPOCE@?$EAcbMemberOrder@
CONST	SEGMENT
??_C@_0P@NMLGPOCE@?$EAcbMemberOrder@ DB '@cbMemberOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NIOCNJO@?$EAcbJoinCondition@
CONST	SEGMENT
??_C@_0BB@NIOCNJO@?$EAcbJoinCondition@ DB '@cbJoinCondition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IGAIKEL@?$EAcbSignupMode@
CONST	SEGMENT
??_C@_0O@IGAIKEL@?$EAcbSignupMode@ DB '@cbSignupMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HBHPDEE@?$EAlSignupFee@
CONST	SEGMENT
??_C@_0M@HBHPDEE@?$EAlSignupFee@ DB '@lSignupFee', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BAHPIMKH@?$EAcbDeductArea@
CONST	SEGMENT
??_C@_0O@BAHPIMKH@?$EAcbDeductArea@ DB '@cbDeductArea', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PDOPAGMD@?$EAcbFeeType@
CONST	SEGMENT
??_C@_0L@PDOPAGMD@?$EAcbFeeType@ DB '@cbFeeType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NLBCJFKK@?$EAcbMatchType@
CONST	SEGMENT
??_C@_0N@NLBCJFKK@?$EAcbMatchType@ DB '@cbMatchType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKOFFMGJ@?$EAstrMatchDate@
CONST	SEGMENT
??_C@_0O@NKOFFMGJ@?$EAstrMatchDate@ DB '@strMatchDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IDKCNMDH@?$EAstrMatchName@
CONST	SEGMENT
??_C@_0O@IDKCNMDH@?$EAstrMatchName@ DB '@strMatchName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA DD 0246H ; `CMatchInfoManager::InsertGameMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@LLLDCBFA@GSP_GS_DeleteGameMatchItem@
CONST	SEGMENT
??_C@_0BL@LLLDCBFA@GSP_GS_DeleteGameMatchItem@ DB 'GSP_GS_DeleteGameMatch'
	DB	'Item', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z@4JA DD 021aH ; `CMatchInfoManager::DeleteGameMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z@4JA DD 01cbH ; `CMatchInfoManager::LoadGameMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BJ@HGGCIMNG@GSP_GS_LoadGameMatchItem@
CONST	SEGMENT
??_C@_0BJ@HGGCIMNG@GSP_GS_LoadGameMatchItem@ DB 'GSP_GS_LoadGameMatchItem'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
CONST	SEGMENT
??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@ DB '@strErrorDescribe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBAFKNPB@?$EAstrServiceMachine@
CONST	SEGMENT
??_C@_0BD@CBAFKNPB@?$EAstrServiceMachine@ DB '@strServiceMachine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBBOJKPI@?$EAwKindID@
CONST	SEGMENT
??_C@_08HBBOJKPI@?$EAwKindID@ DB '@wKindID', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z@4JA DD 0185H ; `CMatchInfoManager::LoadGameMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_R0PAUIDataBaseException@@@8
data$r	SEGMENT
??_R0PAUIDataBaseException@@@8 DD FLAT:??_7type_info@@6B@ ; IDataBaseException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAUIDataBaseException@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BB@DAEFAHAB@RewardExperience@
CONST	SEGMENT
??_C@_0BB@DAEFAHAB@RewardExperience@ DB 'RewardExperience', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BLJEFPLJ@RewardIngot@
CONST	SEGMENT
??_C@_0M@BLJEFPLJ@RewardIngot@ DB 'RewardIngot', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKLPJIFO@RewardGold@
CONST	SEGMENT
??_C@_0L@CKLPJIFO@RewardGold@ DB 'RewardGold', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EPMDJCNA@MatchRank@
CONST	SEGMENT
??_C@_09EPMDJCNA@MatchRank@ DB 'MatchRank', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NDBLJKCK@GSP_GS_LoadMatchReward@
CONST	SEGMENT
??_C@_0BH@NDBLJKCK@GSP_GS_LoadMatchReward@ DB 'GSP_GS_LoadMatchReward', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MKEKGMGP@?$EAdwMatchID@
CONST	SEGMENT
??_C@_0L@MKEKGMGP@?$EAdwMatchID@ DB '@dwMatchID', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z@4JA DD 0146H ; `CMatchInfoManager::LoadGameMatchReward'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU3@@Z@4JA DD 0e4H ; `CRewardInfoBuffer::InsertMatchRewardInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CRewardInfoBuffer@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CRewardInfoBuffer@@UAE@XZ@4JA DD 0a9H ; `CRewardInfoBuffer::~CRewardInfoBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU3@@Z@4JA DD 049H ; `CMatchInfoBuffer::InsertMatchOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0a3H, 0bfH, 0e9H, 0b9H, 0dcH, 0c0H, 0edH, '\m'
	DB	'atchinfomanager.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CMatchInfoBuffer@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CMatchInfoBuffer@@UAE@XZ@4JA DD 0eH	; `CMatchInfoBuffer::~CMatchInfoBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CModuleInfoManager@@6B@
CONST	SEGMENT
??_7CModuleInfoManager@@6B@ DD FLAT:??_R4CModuleInfoManager@@6B@ ; CModuleInfoManager::`vftable'
	DD	FLAT:??_ECModuleInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CMatchInfoManager@@6B@
CONST	SEGMENT
??_7CMatchInfoManager@@6B@ DD FLAT:??_R4CMatchInfoManager@@6B@ ; CMatchInfoManager::`vftable'
	DD	FLAT:??_ECMatchInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRewardInfoBuffer@@6B@
CONST	SEGMENT
??_7CRewardInfoBuffer@@6B@ DD FLAT:??_R4CRewardInfoBuffer@@6B@ ; CRewardInfoBuffer::`vftable'
	DD	FLAT:??_ECRewardInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CMatchInfoBuffer@@6B@
CONST	SEGMENT
??_7CMatchInfoBuffer@@6B@ DD FLAT:??_R4CMatchInfoBuffer@@6B@ ; CMatchInfoBuffer::`vftable'
	DD	FLAT:??_ECMatchInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CModuleDBParameter@@6B@
CONST	SEGMENT
??_7CModuleDBParameter@@6B@ DD FLAT:??_R4CModuleDBParameter@@6B@ ; CModuleDBParameter::`vftable'
	DD	FLAT:??_ECModuleDBParameter@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0BB@BEMLEOHB@KernelEngine?4dll@
CONST	SEGMENT
??_C@_0BB@BEMLEOHB@KernelEngine?4dll@ DB 'KernelEngine.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IKJBDFNG@CreateDataBase@
CONST	SEGMENT
??_C@_0P@IKJBDFNG@CreateDataBase@ DB 'CreateDataBase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDataBaseHelper@@6B@
CONST	SEGMENT
??_7CDataBaseHelper@@6B@ DD FLAT:??_R4CDataBaseHelper@@6B@ ; CDataBaseHelper::`vftable'
	DD	FLAT:??_ECDataBaseHelper@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTempldateHelper@UIDataBase@@@@6B@
CONST	SEGMENT
??_7?$CTempldateHelper@UIDataBase@@@@6B@ DD FLAT:??_R4?$CTempldateHelper@UIDataBase@@@@6B@ ; CTempldateHelper<IDataBase>::`vftable'
	DD	FLAT:??_E?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z$0
__ehfuncinfo$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffff97cH
	DD	FLAT:__catch$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$0
__tryblocktable$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$4
__unwindtable$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffff97cH
	DD	FLAT:__catch$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$0
__tryblocktable$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$4
__unwindtable$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffffe00H
	DD	FLAT:__catch$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$0
__tryblocktable$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$4
__unwindtable$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z
	DD	01H
	DD	FLAT:__tryblocktable$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffffabcH
	DD	FLAT:__catch$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$0
__tryblocktable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$4
__unwindtable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffffd84H
	DD	FLAT:__catch$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$0
__tryblocktable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$4
__unwindtable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffffdecH
	DD	FLAT:__catch$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$0
__tryblocktable$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$4
__unwindtable$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECRewardInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ$0
__unwindtable$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ$2
__ehfuncinfo$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CRewardInfoBuffer@@UAE@XZ$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CRewardInfoBuffer@@UAE@XZ$0
__tryblocktable$??1CRewardInfoBuffer@@UAE@XZ DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??1CRewardInfoBuffer@@UAE@XZ$4
__unwindtable$??1CRewardInfoBuffer@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CRewardInfoBuffer@@UAE@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$??1CRewardInfoBuffer@@UAE@XZ$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$??1CRewardInfoBuffer@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CRewardInfoBuffer@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CRewardInfoBuffer@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRewardInfoBuffer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRewardInfoBuffer@@QAE@XZ$0
__ehfuncinfo$??0CRewardInfoBuffer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CRewardInfoBuffer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ$0
__unwindtable$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ$2
__ehfuncinfo$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CMatchInfoBuffer@@UAE@XZ$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CMatchInfoBuffer@@UAE@XZ$0
__tryblocktable$??1CMatchInfoBuffer@@UAE@XZ DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??1CMatchInfoBuffer@@UAE@XZ$4
__unwindtable$??1CMatchInfoBuffer@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMatchInfoBuffer@@UAE@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$??1CMatchInfoBuffer@@UAE@XZ$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$??1CMatchInfoBuffer@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CMatchInfoBuffer@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CMatchInfoBuffer@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMatchInfoBuffer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMatchInfoBuffer@@QAE@XZ$0
__ehfuncinfo$??0CMatchInfoBuffer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMatchInfoBuffer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$3
__catchsym$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$3 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$1
__ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleInfoManager@@UAEPAXI@Z PROC			; CModuleInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 44		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 04		 push	 4
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1d		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00058	8d 14 8d 04 00
	00 00		 lea	 edx, DWORD PTR [ecx*4+4]
  0005f	52		 push	 edx
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 e8 04	 sub	 eax, 4
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 e8 04	 sub	 eax, 4
  00075	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 0e		 je	 SHORT $LN4@vector
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN4@vector:
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleInfoManager@@UAEPAXI@Z ENDP			; CModuleInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleInfoManager@@UAEPAXI@Z PROC			; CModuleInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCModuleInfoManager@@UAEPAXI@Z ENDP			; CModuleInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleInfoManager@@QAEAAV0@ABV0@@Z PROC		; CModuleInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4CModuleInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CModuleInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleInfoManager@@QAE@ABV0@@Z PROC			; CModuleInfoManager::CModuleInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoManager@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CModuleInfoManager@@QAE@ABV0@@Z ENDP			; CModuleInfoManager::CModuleInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchInfoManager@@UAEPAXI@Z PROC			; CMatchInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 44		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 04		 push	 4
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1d		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00058	8d 14 8d 04 00
	00 00		 lea	 edx, DWORD PTR [ecx*4+4]
  0005f	52		 push	 edx
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 e8 04	 sub	 eax, 4
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 e8 04	 sub	 eax, 4
  00075	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 0e		 je	 SHORT $LN4@vector
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN4@vector:
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchInfoManager@@UAEPAXI@Z ENDP			; CMatchInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchInfoManager@@UAEPAXI@Z PROC			; CMatchInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchInfoManager@@UAEPAXI@Z ENDP			; CMatchInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchInfoManager@@QAEAAV0@ABV0@@Z PROC		; CMatchInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4CMatchInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CMatchInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchInfoManager@@QAE@ABV0@@Z PROC			; CMatchInfoManager::CMatchInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoManager@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CMatchInfoManager@@QAE@ABV0@@Z ENDP			; CMatchInfoManager::CMatchInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
tv331 = -1312						; size = 4
$T2 = -1305						; size = 1
_i$3 = -1112						; size = 2
_pMatchRewardInfo$ = -1108				; size = 4
_RewardInfoBuffer$ = -1104				; size = 44
_cbChar2$4 = -1058					; size = 1
_cbChar1$5 = -1057					; size = 1
_i$6 = -1056						; size = 4
_nMatchRuleSize$7 = -1052				; size = 4
_szMatchRule$ = -1048					; size = 1025
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_GameMatchDBAide$ = 8					; size = 4
_GameMatchResult$ = 12					; size = 4
?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z PROC ; CMatchInfoManager::ReadGameMatchOption, COMDAT
; _this$ = ecx

; 842  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 14 05 00
	00		 sub	 esp, 1300		; 00000514H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 843  : 	//设置变量
; 844  : 	ZeroMemory(&GameMatchResult,sizeof(GameMatchResult));

  00031	68 c8 02 00 00	 push	 712			; 000002c8H
  00036	6a 00		 push	 0
  00038	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 _memset
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 845  : 
; 846  : 	//索引变量	
; 847  : 	GameMatchResult.dwMatchID=GameMatchDBAide.GetValue_DWORD(TEXT("MatchID"));	

  00044	68 00 00 00 00	 push	 OFFSET ??_C@_07FOGJBBBD@MatchID@
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00055	89 01		 mov	 DWORD PTR [ecx], eax

; 848  : 	GameMatchResult.cbMatchStatus=GameMatchDBAide.GetValue_BYTE(TEXT("MatchStatus"));

  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LGFHLALO@MatchStatus@
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  00065	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00068	88 41 10	 mov	 BYTE PTR [ecx+16], al

; 849  : 
; 850  : 	//比赛信息
; 851  : 	GameMatchResult.cbMatchType = GameMatchDBAide.GetValue_BYTE(TEXT("MatchType"));		

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_09NNBFLLPE@MatchType@
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  00079	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0007c	88 41 11	 mov	 BYTE PTR [ecx+17], al

; 852  : 	GameMatchDBAide.GetValue_String(TEXT("MatchName"),GameMatchResult.szMatchName,CountArray(GameMatchResult.szMatchName));

  0007f	6a 20		 push	 32			; 00000020H
  00081	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00084	83 c0 12	 add	 eax, 18			; 00000012H
  00087	50		 push	 eax
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_09HGBGHLIE@MatchName@
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 853  : 
; 854  : 	//报名信息
; 855  : 	GameMatchResult.cbFeeType= GameMatchDBAide.GetValue_BYTE(TEXT("FeeType"));

  00096	68 00 00 00 00	 push	 OFFSET ??_C@_07GDEHGHPI@FeeType@
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  000a4	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  000a7	88 41 32	 mov	 BYTE PTR [ecx+50], al

; 856  : 	GameMatchResult.cbDeductArea= GameMatchDBAide.GetValue_BYTE(TEXT("DeductArea"));

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JMKKPHHK@DeductArea@
  000af	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  000b8	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  000bb	88 41 33	 mov	 BYTE PTR [ecx+51], al

; 857  : 	GameMatchResult.lSignupFee= GameMatchDBAide.GetValue_LONGLONG(TEXT("SignupFee"));

  000be	68 00 00 00 00	 push	 OFFSET ??_C@_09PFOFOOFC@SignupFee@
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
  000cc	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  000cf	89 41 38	 mov	 DWORD PTR [ecx+56], eax
  000d2	89 51 3c	 mov	 DWORD PTR [ecx+60], edx

; 858  : 	GameMatchResult.cbSignupMode= GameMatchDBAide.GetValue_BYTE(TEXT("SignupMode"));	

  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IELFPBJG@SignupMode@
  000da	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  000e3	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  000e6	88 41 40	 mov	 BYTE PTR [ecx+64], al

; 859  : 	GameMatchResult.cbJoinCondition = GameMatchDBAide.GetValue_BYTE(TEXT("JoinCondition"));

  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LCKNANBH@JoinCondition@
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  000f7	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  000fa	88 41 41	 mov	 BYTE PTR [ecx+65], al

; 860  : 	GameMatchResult.cbMemberOrder = GameMatchDBAide.GetValue_BYTE(TEXT("MemberOrder"));

  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CEFIIFDG@MemberOrder@
  00102	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  0010b	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0010e	88 41 42	 mov	 BYTE PTR [ecx+66], al

; 861  : 	GameMatchResult.dwExperience = GameMatchDBAide.GetValue_DWORD(TEXT("Experience"));

  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DCGNFONO@Experience@
  00116	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  0011f	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00122	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 862  : 	GameMatchResult.dwFromMatchID = GameMatchDBAide.GetValue_DWORD(TEXT("FromMatchID"));	

  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LEEOMIDJ@FromMatchID@
  0012a	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  00133	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00136	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 863  : 	GameMatchResult.cbFilterType = GameMatchDBAide.GetValue_BYTE(TEXT("FilterType"));

  00139	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BNIBOBPI@FilterType@
  0013e	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  00147	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0014a	88 41 4c	 mov	 BYTE PTR [ecx+76], al

; 864  : 	GameMatchResult.wMaxRankID = GameMatchDBAide.GetValue_WORD(TEXT("MaxRankID"));

  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_09BFAFKFFK@MaxRankID@
  00152	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00155	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  0015b	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0015e	66 89 41 4e	 mov	 WORD PTR [ecx+78], ax

; 865  : 	GameMatchDBAide.GetValue_SystemTime(TEXT("MatchEndDate"),GameMatchResult.MatchEndDate);

  00162	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00165	83 c0 50	 add	 eax, 80			; 00000050H
  00168	50		 push	 eax
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GGEHFCIN@MatchEndDate@
  0016e	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00171	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z

; 866  : 	GameMatchDBAide.GetValue_SystemTime(TEXT("MatchStartDate"),GameMatchResult.MatchStartDate);

  00177	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  0017a	83 c0 60	 add	 eax, 96			; 00000060H
  0017d	50		 push	 eax
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KNGPPEEC@MatchStartDate@
  00183	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00186	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z

; 867  : 
; 868  : 	//排名参数
; 869  : 	GameMatchResult.cbRankingMode = GameMatchDBAide.GetValue_BYTE(TEXT("RankingMode"));

  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EBIGKLDI@RankingMode@
  00191	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  0019a	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0019d	88 41 70	 mov	 BYTE PTR [ecx+112], al

; 870  : 	GameMatchResult.wCountInnings = GameMatchDBAide.GetValue_WORD(TEXT("CountInnings"));

  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JOOKANAC@CountInnings@
  001a5	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  001ae	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  001b1	66 89 41 72	 mov	 WORD PTR [ecx+114], ax

; 871  : 	GameMatchResult.cbFilterGradesMode = GameMatchDBAide.GetValue_BYTE(TEXT("FilterGradesMode"));

  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NFMBAAGJ@FilterGradesMode@
  001ba	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  001c3	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  001c6	88 41 74	 mov	 BYTE PTR [ecx+116], al

; 872  : 
; 873  : 	//配桌参数
; 874  : 	GameMatchResult.cbDistributeRule=GameMatchDBAide.GetValue_BYTE(TEXT("DistributeRule"));

  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HAKAMBIC@DistributeRule@
  001ce	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  001d7	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  001da	88 41 75	 mov	 BYTE PTR [ecx+117], al

; 875  : 	GameMatchResult.wMinDistributeUser=GameMatchDBAide.GetValue_WORD(TEXT("MinDistributeUser"));

  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BPMHCGIJ@MinDistributeUser@
  001e2	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  001eb	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  001ee	66 89 41 76	 mov	 WORD PTR [ecx+118], ax

; 876  : 	GameMatchResult.wDistributeTimeSpace=GameMatchDBAide.GetValue_WORD(TEXT("DistributeTimeSpace"));

  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NKJJGPNA@DistributeTimeSpace@
  001f7	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  00200	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00203	66 89 41 78	 mov	 WORD PTR [ecx+120], ax

; 877  : 	GameMatchResult.wMinPartakeGameUser=GameMatchDBAide.GetValue_WORD(TEXT("MinPartakeGameUser"));

  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JEHNMEJ@MinPartakeGameUser@
  0020c	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0020f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  00215	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00218	66 89 41 7a	 mov	 WORD PTR [ecx+122], ax

; 878  : 	GameMatchResult.wMaxPartakeGameUser=GameMatchDBAide.GetValue_WORD(TEXT("MaxPartakeGameUser"));

  0021c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KOHDFMDA@MaxPartakeGameUser@
  00221	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  0022a	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0022d	66 89 41 7c	 mov	 WORD PTR [ecx+124], ax

; 879  : 
; 880  : 	//比赛规则
; 881  : 	TCHAR szMatchRule[CountArray(GameMatchResult.cbMatchRule)*2+1];
; 882  : 	GameMatchDBAide.GetValue_String(TEXT("MatchRule"),szMatchRule,CountArray(szMatchRule));

  00231	68 01 04 00 00	 push	 1025			; 00000401H
  00236	8d 85 e8 fb ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$[ebp]
  0023c	50		 push	 eax
  0023d	68 00 00 00 00	 push	 OFFSET ??_C@_09NLPKLPI@MatchRule@
  00242	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00245	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 883  : 
; 884  : 	//扩展配置
; 885  : 	if (szMatchRule[0]!=0)

  0024b	b8 01 00 00 00	 mov	 eax, 1
  00250	6b c8 00	 imul	 ecx, eax, 0
  00253	0f be 94 0d e8
	fb ff ff	 movsx	 edx, BYTE PTR _szMatchRule$[ebp+ecx]
  0025b	85 d2		 test	 edx, edx
  0025d	0f 84 30 02 00
	00		 je	 $LN8@ReadGameMa

; 886  : 	{
; 887  : 		//获取长度
; 888  : 		ASSERT(lstrlen(szMatchRule)%2==0);

  00263	8d 85 e8 fb ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$[ebp]
  00269	50		 push	 eax
  0026a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00270	25 01 00 00 80	 and	 eax, -2147483647	; 80000001H
  00275	79 05		 jns	 SHORT $LN26@ReadGameMa
  00277	48		 dec	 eax
  00278	83 c8 fe	 or	 eax, -2			; fffffffeH
  0027b	40		 inc	 eax
$LN26@ReadGameMa:
  0027c	85 c0		 test	 eax, eax
  0027e	74 19		 je	 SHORT $LN15@ReadGameMa
  00280	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z@4JA
  00286	83 c1 2e	 add	 ecx, 46			; 0000002eH
  00289	51		 push	 ecx
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0028f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00294	85 c0		 test	 eax, eax
  00296	74 01		 je	 SHORT $LN15@ReadGameMa
  00298	cc		 int	 3
$LN15@ReadGameMa:

; 889  : 		INT nMatchRuleSize=lstrlen(szMatchRule)/2;

  00299	8d 85 e8 fb ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$[ebp]
  0029f	50		 push	 eax
  002a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  002a6	99		 cdq
  002a7	2b c2		 sub	 eax, edx
  002a9	d1 f8		 sar	 eax, 1
  002ab	89 85 e4 fb ff
	ff		 mov	 DWORD PTR _nMatchRuleSize$7[ebp], eax

; 890  : 
; 891  : 		//转换字符
; 892  : 		for (INT i=0;i<nMatchRuleSize;i++)

  002b1	c7 85 e0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$6[ebp], 0
  002bb	eb 0f		 jmp	 SHORT $LN4@ReadGameMa
$LN2@ReadGameMa:
  002bd	8b 85 e0 fb ff
	ff		 mov	 eax, DWORD PTR _i$6[ebp]
  002c3	83 c0 01	 add	 eax, 1
  002c6	89 85 e0 fb ff
	ff		 mov	 DWORD PTR _i$6[ebp], eax
$LN4@ReadGameMa:
  002cc	8b 85 e0 fb ff
	ff		 mov	 eax, DWORD PTR _i$6[ebp]
  002d2	3b 85 e4 fb ff
	ff		 cmp	 eax, DWORD PTR _nMatchRuleSize$7[ebp]
  002d8	0f 8d b5 01 00
	00		 jge	 $LN8@ReadGameMa

; 893  : 		{
; 894  : 			//获取字符
; 895  : 			TCHAR cbChar1=szMatchRule[i*2];

  002de	8b 85 e0 fb ff
	ff		 mov	 eax, DWORD PTR _i$6[ebp]
  002e4	8a 8c 45 e8 fb
	ff ff		 mov	 cl, BYTE PTR _szMatchRule$[ebp+eax*2]
  002eb	88 8d df fb ff
	ff		 mov	 BYTE PTR _cbChar1$5[ebp], cl

; 896  : 			TCHAR cbChar2=szMatchRule[i*2+1];

  002f1	8b 85 e0 fb ff
	ff		 mov	 eax, DWORD PTR _i$6[ebp]
  002f7	8a 8c 45 e9 fb
	ff ff		 mov	 cl, BYTE PTR _szMatchRule$[ebp+eax*2+1]
  002fe	88 8d de fb ff
	ff		 mov	 BYTE PTR _cbChar2$4[ebp], cl

; 897  : 
; 898  : 			//效验字符
; 899  : 			ASSERT((cbChar1>=TEXT('0'))&&(cbChar1<=TEXT('9'))||(cbChar1>=TEXT('A'))&&(cbChar1<=TEXT('F')));

  00304	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  0030b	83 f8 30	 cmp	 eax, 48			; 00000030H
  0030e	7c 0c		 jl	 SHORT $LN16@ReadGameMa
  00310	0f be 8d df fb
	ff ff		 movsx	 ecx, BYTE PTR _cbChar1$5[ebp]
  00317	83 f9 39	 cmp	 ecx, 57			; 00000039H
  0031a	7e 31		 jle	 SHORT $LN18@ReadGameMa
$LN16@ReadGameMa:
  0031c	0f be 95 df fb
	ff ff		 movsx	 edx, BYTE PTR _cbChar1$5[ebp]
  00323	83 fa 41	 cmp	 edx, 65			; 00000041H
  00326	7c 0c		 jl	 SHORT $LN17@ReadGameMa
  00328	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  0032f	83 f8 46	 cmp	 eax, 70			; 00000046H
  00332	7e 19		 jle	 SHORT $LN18@ReadGameMa
$LN17@ReadGameMa:
  00334	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z@4JA
  0033a	83 c1 39	 add	 ecx, 57			; 00000039H
  0033d	51		 push	 ecx
  0033e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00343	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00348	85 c0		 test	 eax, eax
  0034a	74 01		 je	 SHORT $LN18@ReadGameMa
  0034c	cc		 int	 3
$LN18@ReadGameMa:

; 900  : 			ASSERT((cbChar2>=TEXT('0'))&&(cbChar2<=TEXT('9'))||(cbChar2>=TEXT('A'))&&(cbChar2<=TEXT('F')));

  0034d	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  00354	83 f8 30	 cmp	 eax, 48			; 00000030H
  00357	7c 0c		 jl	 SHORT $LN19@ReadGameMa
  00359	0f be 8d de fb
	ff ff		 movsx	 ecx, BYTE PTR _cbChar2$4[ebp]
  00360	83 f9 39	 cmp	 ecx, 57			; 00000039H
  00363	7e 31		 jle	 SHORT $LN21@ReadGameMa
$LN19@ReadGameMa:
  00365	0f be 95 de fb
	ff ff		 movsx	 edx, BYTE PTR _cbChar2$4[ebp]
  0036c	83 fa 41	 cmp	 edx, 65			; 00000041H
  0036f	7c 0c		 jl	 SHORT $LN20@ReadGameMa
  00371	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  00378	83 f8 46	 cmp	 eax, 70			; 00000046H
  0037b	7e 19		 jle	 SHORT $LN21@ReadGameMa
$LN20@ReadGameMa:
  0037d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z@4JA
  00383	83 c1 3a	 add	 ecx, 58			; 0000003aH
  00386	51		 push	 ecx
  00387	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0038c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00391	85 c0		 test	 eax, eax
  00393	74 01		 je	 SHORT $LN21@ReadGameMa
  00395	cc		 int	 3
$LN21@ReadGameMa:

; 901  : 
; 902  : 			//生成结果
; 903  : 			if ((cbChar2>=TEXT('0'))&&(cbChar2<=TEXT('9'))) GameMatchResult.cbMatchRule[i]+=(cbChar2-TEXT('0'));

  00396	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  0039d	83 f8 30	 cmp	 eax, 48			; 00000030H
  003a0	7c 30		 jl	 SHORT $LN9@ReadGameMa
  003a2	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  003a9	83 f8 39	 cmp	 eax, 57			; 00000039H
  003ac	7f 24		 jg	 SHORT $LN9@ReadGameMa
  003ae	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  003b5	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  003b8	03 8d e0 fb ff
	ff		 add	 ecx, DWORD PTR _i$6[ebp]
  003be	0f b6 51 7e	 movzx	 edx, BYTE PTR [ecx+126]
  003c2	8d 44 02 d0	 lea	 eax, DWORD PTR [edx+eax-48]
  003c6	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  003c9	03 8d e0 fb ff
	ff		 add	 ecx, DWORD PTR _i$6[ebp]
  003cf	88 41 7e	 mov	 BYTE PTR [ecx+126], al
$LN9@ReadGameMa:

; 904  : 			if ((cbChar2>=TEXT('A'))&&(cbChar2<=TEXT('F'))) GameMatchResult.cbMatchRule[i]+=(cbChar2-TEXT('A')+0x0A);

  003d2	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  003d9	83 f8 41	 cmp	 eax, 65			; 00000041H
  003dc	7c 30		 jl	 SHORT $LN10@ReadGameMa
  003de	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  003e5	83 f8 46	 cmp	 eax, 70			; 00000046H
  003e8	7f 24		 jg	 SHORT $LN10@ReadGameMa
  003ea	0f be 85 de fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar2$4[ebp]
  003f1	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  003f4	03 8d e0 fb ff
	ff		 add	 ecx, DWORD PTR _i$6[ebp]
  003fa	0f b6 51 7e	 movzx	 edx, BYTE PTR [ecx+126]
  003fe	8d 44 02 c9	 lea	 eax, DWORD PTR [edx+eax-55]
  00402	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00405	03 8d e0 fb ff
	ff		 add	 ecx, DWORD PTR _i$6[ebp]
  0040b	88 41 7e	 mov	 BYTE PTR [ecx+126], al
$LN10@ReadGameMa:

; 905  : 			if ((cbChar1>=TEXT('0'))&&(cbChar1<=TEXT('9'))) GameMatchResult.cbMatchRule[i]+=(cbChar1-TEXT('0'))*0x10;

  0040e	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  00415	83 f8 30	 cmp	 eax, 48			; 00000030H
  00418	7c 34		 jl	 SHORT $LN11@ReadGameMa
  0041a	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  00421	83 f8 39	 cmp	 eax, 57			; 00000039H
  00424	7f 28		 jg	 SHORT $LN11@ReadGameMa
  00426	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  0042d	83 e8 30	 sub	 eax, 48			; 00000030H
  00430	c1 e0 04	 shl	 eax, 4
  00433	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00436	03 8d e0 fb ff
	ff		 add	 ecx, DWORD PTR _i$6[ebp]
  0043c	0f b6 51 7e	 movzx	 edx, BYTE PTR [ecx+126]
  00440	03 d0		 add	 edx, eax
  00442	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00445	03 85 e0 fb ff
	ff		 add	 eax, DWORD PTR _i$6[ebp]
  0044b	88 50 7e	 mov	 BYTE PTR [eax+126], dl
$LN11@ReadGameMa:

; 906  : 			if ((cbChar1>=TEXT('A'))&&(cbChar1<=TEXT('F'))) GameMatchResult.cbMatchRule[i]+=(cbChar1-TEXT('A')+0x0A)*0x10;

  0044e	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  00455	83 f8 41	 cmp	 eax, 65			; 00000041H
  00458	7c 34		 jl	 SHORT $LN12@ReadGameMa
  0045a	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  00461	83 f8 46	 cmp	 eax, 70			; 00000046H
  00464	7f 28		 jg	 SHORT $LN12@ReadGameMa
  00466	0f be 85 df fb
	ff ff		 movsx	 eax, BYTE PTR _cbChar1$5[ebp]
  0046d	83 e8 37	 sub	 eax, 55			; 00000037H
  00470	c1 e0 04	 shl	 eax, 4
  00473	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00476	03 8d e0 fb ff
	ff		 add	 ecx, DWORD PTR _i$6[ebp]
  0047c	0f b6 51 7e	 movzx	 edx, BYTE PTR [ecx+126]
  00480	03 d0		 add	 edx, eax
  00482	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00485	03 85 e0 fb ff
	ff		 add	 eax, DWORD PTR _i$6[ebp]
  0048b	88 50 7e	 mov	 BYTE PTR [eax+126], dl
$LN12@ReadGameMa:

; 907  : 		}

  0048e	e9 2a fe ff ff	 jmp	 $LN2@ReadGameMa
$LN8@ReadGameMa:

; 908  : 	}
; 909  : 
; 910  : 	//加载奖励
; 911  : 	CRewardInfoBuffer RewardInfoBuffer;

  00493	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  00499	e8 00 00 00 00	 call	 ??0CRewardInfoBuffer@@QAE@XZ ; CRewardInfoBuffer::CRewardInfoBuffer
  0049e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 912  : 	LoadGameMatchReward(GameMatchResult.dwMatchID,RewardInfoBuffer);	

  004a5	8d 85 b0 fb ff
	ff		 lea	 eax, DWORD PTR _RewardInfoBuffer$[ebp]
  004ab	50		 push	 eax
  004ac	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  004af	8b 11		 mov	 edx, DWORD PTR [ecx]
  004b1	52		 push	 edx
  004b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004b5	e8 00 00 00 00	 call	 ?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z ; CMatchInfoManager::LoadGameMatchReward

; 913  : 
; 914  : 	//奖励人数
; 915  : 	GameMatchResult.wRewardCount=(WORD)__min(RewardInfoBuffer.GetMatchRewardCount(),CountArray(GameMatchResult.MatchRewardInfo));

  004ba	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  004c0	e8 00 00 00 00	 call	 ?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ ; CRewardInfoBuffer::GetMatchRewardCount
  004c5	83 f8 03	 cmp	 eax, 3
  004c8	73 13		 jae	 SHORT $LN22@ReadGameMa
  004ca	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  004d0	e8 00 00 00 00	 call	 ?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ ; CRewardInfoBuffer::GetMatchRewardCount
  004d5	89 85 e0 fa ff
	ff		 mov	 DWORD PTR tv331[ebp], eax
  004db	eb 0a		 jmp	 SHORT $LN23@ReadGameMa
$LN22@ReadGameMa:
  004dd	c7 85 e0 fa ff
	ff 03 00 00 00	 mov	 DWORD PTR tv331[ebp], 3
$LN23@ReadGameMa:
  004e7	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  004ea	66 8b 8d e0 fa
	ff ff		 mov	 cx, WORD PTR tv331[ebp]
  004f1	66 89 88 7e 02
	00 00		 mov	 WORD PTR [eax+638], cx

; 916  : 
; 917  : 	//变量定义
; 918  : 	tagMatchRewardInfo * pMatchRewardInfo=NULL;

  004f8	c7 85 ac fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 919  : 	for (WORD i=0;i<GameMatchResult.wRewardCount;i++)

  00502	33 c0		 xor	 eax, eax
  00504	66 89 85 a8 fb
	ff ff		 mov	 WORD PTR _i$3[ebp], ax
  0050b	eb 12		 jmp	 SHORT $LN7@ReadGameMa
$LN5@ReadGameMa:
  0050d	66 8b 85 a8 fb
	ff ff		 mov	 ax, WORD PTR _i$3[ebp]
  00514	66 83 c0 01	 add	 ax, 1
  00518	66 89 85 a8 fb
	ff ff		 mov	 WORD PTR _i$3[ebp], ax
$LN7@ReadGameMa:
  0051f	0f b7 85 a8 fb
	ff ff		 movzx	 eax, WORD PTR _i$3[ebp]
  00526	8b 4d 0c	 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  00529	0f b7 91 7e 02
	00 00		 movzx	 edx, WORD PTR [ecx+638]
  00530	3b c2		 cmp	 eax, edx
  00532	7d 4f		 jge	 SHORT $LN6@ReadGameMa

; 920  : 	{
; 921  : 		//查询奖励
; 922  : 		pMatchRewardInfo=RewardInfoBuffer.SearchMatchReward(i+1);

  00534	0f b7 85 a8 fb
	ff ff		 movzx	 eax, WORD PTR _i$3[ebp]
  0053b	83 c0 01	 add	 eax, 1
  0053e	50		 push	 eax
  0053f	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  00545	e8 00 00 00 00	 call	 ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
  0054a	89 85 ac fb ff
	ff		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], eax

; 923  : 		if (pMatchRewardInfo==NULL) break;

  00550	83 bd ac fb ff
	ff 00		 cmp	 DWORD PTR _pMatchRewardInfo$[ebp], 0
  00557	75 02		 jne	 SHORT $LN13@ReadGameMa
  00559	eb 28		 jmp	 SHORT $LN6@ReadGameMa
$LN13@ReadGameMa:

; 924  : 
; 925  : 		//拷贝奖励
; 926  : 		CopyMemory(&GameMatchResult.MatchRewardInfo[i],pMatchRewardInfo,sizeof(GameMatchResult.MatchRewardInfo[0]));

  0055b	6a 16		 push	 22			; 00000016H
  0055d	8b 85 ac fb ff
	ff		 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  00563	50		 push	 eax
  00564	0f b7 8d a8 fb
	ff ff		 movzx	 ecx, WORD PTR _i$3[ebp]
  0056b	6b d1 16	 imul	 edx, ecx, 22
  0056e	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00571	8d 8c 10 80 02
	00 00		 lea	 ecx, DWORD PTR [eax+edx+640]
  00578	51		 push	 ecx
  00579	e8 00 00 00 00	 call	 _memcpy
  0057e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 927  : 	}	

  00581	eb 8a		 jmp	 SHORT $LN5@ReadGameMa
$LN6@ReadGameMa:

; 928  : 
; 929  : 	return true;

  00583	c6 85 e7 fa ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  0058a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00591	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  00597	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  0059c	8a 85 e7 fa ff
	ff		 mov	 al, BYTE PTR $T2[ebp]

; 930  : }

  005a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  005ac	59		 pop	 ecx
  005ad	5f		 pop	 edi
  005ae	5e		 pop	 esi
  005af	5b		 pop	 ebx
  005b0	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005b3	33 cd		 xor	 ecx, ebp
  005b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005ba	8b e5		 mov	 esp, ebp
  005bc	5d		 pop	 ebp
  005bd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z$0:
  00000	8d 8d b0 fb ff
	ff		 lea	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
__ehhandler$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a dc fa ff
	ff		 mov	 ecx, DWORD PTR [edx-1316]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z ENDP ; CMatchInfoManager::ReadGameMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z
_TEXT	SEGMENT
tv144 = -80						; size = 4
tv92 = -80						; size = 4
_pDataBaseParameter$ = -12				; size = 4
_pModuleDBParameter$ = -8				; size = 4
_this$ = -4						; size = 4
_GameMatchDBModule$ = 8					; size = 4
?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z PROC ; CMatchInfoManager::ConnectGameMatchDB, COMDAT
; _this$ = ecx

; 818  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 819  : 	//获取参数
; 820  : 	CModuleDBParameter * pModuleDBParameter=CModuleDBParameter::GetModuleDBParameter();

  0000c	e8 00 00 00 00	 call	 ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
  00011	89 45 f8	 mov	 DWORD PTR _pModuleDBParameter$[ebp], eax

; 821  : 	tagDataBaseParameter * pDataBaseParameter=pModuleDBParameter->GetGameMatchDBParameter();

  00014	8b 4d f8	 mov	 ecx, DWORD PTR _pModuleDBParameter$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetGameMatchDBParameter
  0001c	89 45 f4	 mov	 DWORD PTR _pDataBaseParameter$[ebp], eax

; 822  : 
; 823  : 	//创建对象
; 824  : 	if ((GameMatchDBModule.GetInterface()==NULL)&&(GameMatchDBModule.CreateInstance()==false))

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00022	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  00027	85 c0		 test	 eax, eax
  00029	75 21		 jne	 SHORT $LN2@ConnectGam
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0002e	e8 00 00 00 00	 call	 ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	75 12		 jne	 SHORT $LN2@ConnectGam

; 825  : 	{
; 826  : 		AfxMessageBox(TEXT("ConnectGameMatchDB 创建 GameMatchDBModule 对象失败"),MB_ICONERROR);

  0003a	6a 00		 push	 0
  0003c	6a 10		 push	 16			; 00000010H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@HOLKKKGP@ConnectGameMatchDB?5?$LE?$LE?$LN?$KI?5GameMat@
  00043	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 827  : 		return false;

  00048	32 c0		 xor	 al, al
  0004a	eb 55		 jmp	 SHORT $LN1@ConnectGam
$LN2@ConnectGam:

; 828  : 	}
; 829  : 
; 830  : 	//设置连接
; 831  : 	GameMatchDBModule->SetConnectionInfo(pDataBaseParameter->szDataBaseAddr,pDataBaseParameter->wDataBasePort,

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004f	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00054	89 45 b0	 mov	 DWORD PTR tv92[ebp], eax
  00057	8b 45 f4	 mov	 eax, DWORD PTR _pDataBaseParameter$[ebp]
  0005a	83 c0 42	 add	 eax, 66			; 00000042H
  0005d	50		 push	 eax
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR _pDataBaseParameter$[ebp]
  00061	83 c1 22	 add	 ecx, 34			; 00000022H
  00064	51		 push	 ecx
  00065	8b 55 f4	 mov	 edx, DWORD PTR _pDataBaseParameter$[ebp]
  00068	83 c2 62	 add	 edx, 98			; 00000062H
  0006b	52		 push	 edx
  0006c	8b 45 f4	 mov	 eax, DWORD PTR _pDataBaseParameter$[ebp]
  0006f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00072	51		 push	 ecx
  00073	8b 55 f4	 mov	 edx, DWORD PTR _pDataBaseParameter$[ebp]
  00076	83 c2 02	 add	 edx, 2
  00079	52		 push	 edx
  0007a	8b 45 b0	 mov	 eax, DWORD PTR tv92[ebp]
  0007d	8b 10		 mov	 edx, DWORD PTR [eax]
  0007f	8b 4d b0	 mov	 ecx, DWORD PTR tv92[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	ff d0		 call	 eax

; 832  : 		pDataBaseParameter->szDataBaseName,pDataBaseParameter->szDataBaseUser,pDataBaseParameter->szDataBasePass);
; 833  : 
; 834  : 	//发起连接
; 835  : 	GameMatchDBModule->OpenConnection();

  00087	8b 4d 08	 mov	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0008a	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  0008f	89 45 b0	 mov	 DWORD PTR tv144[ebp], eax
  00092	8b 45 b0	 mov	 eax, DWORD PTR tv144[ebp]
  00095	8b 10		 mov	 edx, DWORD PTR [eax]
  00097	8b 4d b0	 mov	 ecx, DWORD PTR tv144[ebp]
  0009a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009d	ff d0		 call	 eax

; 836  : 
; 837  : 	return true;

  0009f	b0 01		 mov	 al, 1
$LN1@ConnectGam:

; 838  : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ENDP ; CMatchInfoManager::ConnectGameMatchDB
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?ConnectPlatformDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z
_TEXT	SEGMENT
tv144 = -80						; size = 4
tv92 = -80						; size = 4
_pDataBaseParameter$ = -12				; size = 4
_pModuleDBParameter$ = -8				; size = 4
_this$ = -4						; size = 4
_PlatformDBModule$ = 8					; size = 4
?ConnectPlatformDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z PROC ; CMatchInfoManager::ConnectPlatformDB, COMDAT
; _this$ = ecx

; 794  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 795  : 	//获取参数
; 796  : 	CModuleDBParameter * pModuleDBParameter=CModuleDBParameter::GetModuleDBParameter();

  0000c	e8 00 00 00 00	 call	 ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
  00011	89 45 f8	 mov	 DWORD PTR _pModuleDBParameter$[ebp], eax

; 797  : 	tagDataBaseParameter * pDataBaseParameter=pModuleDBParameter->GetPlatformDBParameter();

  00014	8b 4d f8	 mov	 ecx, DWORD PTR _pModuleDBParameter$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
  0001c	89 45 f4	 mov	 DWORD PTR _pDataBaseParameter$[ebp], eax

; 798  : 
; 799  : 	//创建对象
; 800  : 	if ((PlatformDBModule.GetInterface()==NULL)&&(PlatformDBModule.CreateInstance()==false))

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00022	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  00027	85 c0		 test	 eax, eax
  00029	75 21		 jne	 SHORT $LN2@ConnectPla
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0002e	e8 00 00 00 00	 call	 ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	75 12		 jne	 SHORT $LN2@ConnectPla

; 801  : 	{
; 802  : 		AfxMessageBox(TEXT("CreateGameServer 创建 PlatformDBModule 对象失败"),MB_ICONERROR);

  0003a	6a 00		 push	 0
  0003c	6a 10		 push	 16			; 00000010H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@PCJBGNDG@CreateGameServer?5?$LE?$LE?$LN?$KI?5PlatformD@
  00043	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 803  : 		return false;

  00048	32 c0		 xor	 al, al
  0004a	eb 55		 jmp	 SHORT $LN1@ConnectPla
$LN2@ConnectPla:

; 804  : 	}
; 805  : 
; 806  : 	//设置连接
; 807  : 	PlatformDBModule->SetConnectionInfo(pDataBaseParameter->szDataBaseAddr,pDataBaseParameter->wDataBasePort,

  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0004f	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00054	89 45 b0	 mov	 DWORD PTR tv92[ebp], eax
  00057	8b 45 f4	 mov	 eax, DWORD PTR _pDataBaseParameter$[ebp]
  0005a	83 c0 42	 add	 eax, 66			; 00000042H
  0005d	50		 push	 eax
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR _pDataBaseParameter$[ebp]
  00061	83 c1 22	 add	 ecx, 34			; 00000022H
  00064	51		 push	 ecx
  00065	8b 55 f4	 mov	 edx, DWORD PTR _pDataBaseParameter$[ebp]
  00068	83 c2 62	 add	 edx, 98			; 00000062H
  0006b	52		 push	 edx
  0006c	8b 45 f4	 mov	 eax, DWORD PTR _pDataBaseParameter$[ebp]
  0006f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00072	51		 push	 ecx
  00073	8b 55 f4	 mov	 edx, DWORD PTR _pDataBaseParameter$[ebp]
  00076	83 c2 02	 add	 edx, 2
  00079	52		 push	 edx
  0007a	8b 45 b0	 mov	 eax, DWORD PTR tv92[ebp]
  0007d	8b 10		 mov	 edx, DWORD PTR [eax]
  0007f	8b 4d b0	 mov	 ecx, DWORD PTR tv92[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	ff d0		 call	 eax

; 808  : 		pDataBaseParameter->szDataBaseName,pDataBaseParameter->szDataBaseUser,pDataBaseParameter->szDataBasePass);
; 809  : 
; 810  : 	//发起连接
; 811  : 	PlatformDBModule->OpenConnection();

  00087	8b 4d 08	 mov	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0008a	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  0008f	89 45 b0	 mov	 DWORD PTR tv144[ebp], eax
  00092	8b 45 b0	 mov	 eax, DWORD PTR tv144[ebp]
  00095	8b 10		 mov	 edx, DWORD PTR [eax]
  00097	8b 4d b0	 mov	 ecx, DWORD PTR tv144[ebp]
  0009a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009d	ff d0		 call	 eax

; 812  : 
; 813  : 	return true;

  0009f	b0 01		 mov	 al, 1
$LN1@ConnectPla:

; 814  : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?ConnectPlatformDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ENDP ; CMatchInfoManager::ConnectPlatformDB
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
tv377 = -1940						; size = 4
tv376 = -1940						; size = 4
tv65 = -1940						; size = 4
tv69 = -1934						; size = 1
$T2 = -1933						; size = 1
$T3 = -1932						; size = 1
$T4 = -1931						; size = 1
$T5 = -1930						; size = 1
$T6 = -1929						; size = 1
_pszDescribe$7 = -1672					; size = 4
_pIException$8 = -1668					; size = 4
_szDescribeString$9 = -1664				; size = 128
_i$10 = -1536						; size = 4
_szMatchRule$11 = -1532					; size = 1025
_GameMatchDBModule$ = -504				; size = 472
_GameMatchDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_pCreateMatchInfo$ = 8					; size = 4
_GameMatchResult$ = 12					; size = 4
?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z PROC ; CMatchInfoManager::ModifyGameMatchOption, COMDAT
; _this$ = ecx

; 687  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 84 07 00
	00		 sub	 esp, 1924		; 00000784H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 688  : 	//变量定义
; 689  : 	CDataBaseAide GameMatchDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 690  : 	CDataBaseHelper GameMatchDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 691  : 
; 692  : 	//执行逻辑
; 693  : 	try

  00056	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 694  : 	{
; 695  : 		//连接数据库
; 696  : 		if (ConnectGameMatchDB(GameMatchDBModule)==false)

  0005a	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _GameMatchDBModule$[ebp]
  00060	50		 push	 eax
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
  00069	88 85 72 f8 ff
	ff		 mov	 BYTE PTR tv69[ebp], al
  0006f	0f b6 8d 72 f8
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	75 59		 jne	 SHORT $LN6@ModifyGame

; 697  : 		{
; 698  : 			ASSERT(FALSE);

  0007a	33 c0		 xor	 eax, eax
  0007c	75 24		 jne	 SHORT $LN9@ModifyGame
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA
  00084	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00087	51		 push	 ecx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00092	89 85 6c f8 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00098	83 bd 6c f8 ff
	ff 00		 cmp	 DWORD PTR tv65[ebp], 0
  0009f	74 01		 je	 SHORT $LN9@ModifyGame
  000a1	cc		 int	 3
$LN9@ModifyGame:

; 699  : 			return false;

  000a2	c6 85 77 f8 ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  000a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000ad	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000c8	8a 85 77 f8 ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  000ce	e9 3a 05 00 00	 jmp	 $LN1@ModifyGame
$LN6@ModifyGame:

; 700  : 		}
; 701  : 
; 702  : 		//设置对象
; 703  : 		GameMatchDBAide.SetDataBase(GameMatchDBModule.GetInterface());

  000d3	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000d9	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  000de	89 85 6c f8 ff
	ff		 mov	 DWORD PTR tv376[ebp], eax
  000e4	8b 85 6c f8 ff
	ff		 mov	 eax, DWORD PTR tv376[ebp]
  000ea	50		 push	 eax
  000eb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 704  : 
; 705  : 		//比赛规则
; 706  : 		TCHAR szMatchRule[CountArray(pCreateMatchInfo->cbMatchRule)*2+1]=TEXT("");

  000f4	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  000f9	88 85 04 fa ff
	ff		 mov	 BYTE PTR _szMatchRule$11[ebp], al
  000ff	68 00 04 00 00	 push	 1024			; 00000400H
  00104	6a 00		 push	 0
  00106	8d 85 05 fa ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$11[ebp+1]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 _memset
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH

; 707  : 		for (INT i = 0; i<CountArray(pCreateMatchInfo->cbMatchRule); i++) _stprintf(&szMatchRule[i * 2], TEXT("%02X"), pCreateMatchInfo->cbMatchRule[i]);

  00115	c7 85 00 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$10[ebp], 0
  0011f	eb 0f		 jmp	 SHORT $LN4@ModifyGame
$LN2@ModifyGame:
  00121	8b 85 00 fa ff
	ff		 mov	 eax, DWORD PTR _i$10[ebp]
  00127	83 c0 01	 add	 eax, 1
  0012a	89 85 00 fa ff
	ff		 mov	 DWORD PTR _i$10[ebp], eax
$LN4@ModifyGame:
  00130	81 bd 00 fa ff
	ff 00 02 00 00	 cmp	 DWORD PTR _i$10[ebp], 512 ; 00000200H
  0013a	73 2e		 jae	 SHORT $LN3@ModifyGame
  0013c	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0013f	03 85 00 fa ff
	ff		 add	 eax, DWORD PTR _i$10[ebp]
  00145	0f b6 88 be 06
	00 00		 movzx	 ecx, BYTE PTR [eax+1726]
  0014c	51		 push	 ecx
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_04JFFKLGJF@?$CF02X@
  00152	8b 95 00 fa ff
	ff		 mov	 edx, DWORD PTR _i$10[ebp]
  00158	8d 84 55 04 fa
	ff ff		 lea	 eax, DWORD PTR _szMatchRule$11[ebp+edx*2]
  0015f	50		 push	 eax
  00160	e8 00 00 00 00	 call	 _sprintf
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH
  00168	eb b7		 jmp	 SHORT $LN2@ModifyGame
$LN3@ModifyGame:

; 708  : 
; 709  : 		//基础参数
; 710  : 		GameMatchDBAide.ResetParameter();

  0016a	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0016d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 711  : 		GameMatchDBAide.AddParameter(TEXT("@wKindID"),pCreateMatchInfo->wKindID);	

  00173	6a 01		 push	 1
  00175	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00178	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0017b	51		 push	 ecx
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_08HBBOJKPI@?$EAwKindID@
  00181	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00184	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 712  : 		GameMatchDBAide.AddParameter(TEXT("@dwMatchID"),pCreateMatchInfo->dwMatchID);		

  0018a	6a 01		 push	 1
  0018c	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0018f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00192	51		 push	 ecx
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MKEKGMGP@?$EAdwMatchID@
  00198	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 713  : 		GameMatchDBAide.AddParameter(TEXT("@strMatchName"),pCreateMatchInfo->szMatchName);

  001a1	6a 01		 push	 1
  001a3	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001a6	83 c0 11	 add	 eax, 17			; 00000011H
  001a9	50		 push	 eax
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IDKCNMDH@?$EAstrMatchName@
  001af	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 714  : 		GameMatchDBAide.AddParameter(TEXT("@strMatchDate"),pCreateMatchInfo->szMatchDate);

  001b8	6a 01		 push	 1
  001ba	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001bd	83 c0 31	 add	 eax, 49			; 00000031H
  001c0	50		 push	 eax
  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKOFFMGJ@?$EAstrMatchDate@
  001c6	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 715  : 		GameMatchDBAide.AddParameter(TEXT("@cbMatchType"),pCreateMatchInfo->cbMatchType);

  001cf	6a 01		 push	 1
  001d1	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001d4	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  001d8	51		 push	 ecx
  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NLBCJFKK@?$EAcbMatchType@
  001de	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 716  : 
; 717  : 		//报名参数
; 718  : 		GameMatchDBAide.AddParameter(TEXT("@cbFeeType"),pCreateMatchInfo->cbFeeType);

  001e7	6a 01		 push	 1
  001e9	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001ec	0f b6 48 71	 movzx	 ecx, BYTE PTR [eax+113]
  001f0	51		 push	 ecx
  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PDOPAGMD@?$EAcbFeeType@
  001f6	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 719  : 		GameMatchDBAide.AddParameter(TEXT("@cbDeductArea"),pCreateMatchInfo->cbDeductArea);		

  001ff	6a 01		 push	 1
  00201	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00204	0f b6 48 72	 movzx	 ecx, BYTE PTR [eax+114]
  00208	51		 push	 ecx
  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BAHPIMKH@?$EAcbDeductArea@
  0020e	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00211	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 720  : 		GameMatchDBAide.AddParameter(TEXT("@lSignupFee"),pCreateMatchInfo->lSignupFee);

  00217	6a 01		 push	 1
  00219	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0021c	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0021f	51		 push	 ecx
  00220	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  00223	52		 push	 edx
  00224	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HBHPDEE@?$EAlSignupFee@
  00229	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0022c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z

; 721  : 		GameMatchDBAide.AddParameter(TEXT("@cbSignupMode"),pCreateMatchInfo->cbSignupMode);		

  00232	6a 01		 push	 1
  00234	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00237	0f b6 88 80 00
	00 00		 movzx	 ecx, BYTE PTR [eax+128]
  0023e	51		 push	 ecx
  0023f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IGAIKEL@?$EAcbSignupMode@
  00244	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 722  : 		GameMatchDBAide.AddParameter(TEXT("@cbJoinCondition"),pCreateMatchInfo->cbJoinCondition);

  0024d	6a 01		 push	 1
  0024f	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00252	0f b6 88 81 00
	00 00		 movzx	 ecx, BYTE PTR [eax+129]
  00259	51		 push	 ecx
  0025a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NIOCNJO@?$EAcbJoinCondition@
  0025f	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00262	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 723  : 		GameMatchDBAide.AddParameter(TEXT("@cbMemberOrder"),pCreateMatchInfo->cbMemberOrder);

  00268	6a 01		 push	 1
  0026a	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0026d	0f b6 88 82 00
	00 00		 movzx	 ecx, BYTE PTR [eax+130]
  00274	51		 push	 ecx
  00275	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NMLGPOCE@?$EAcbMemberOrder@
  0027a	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0027d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 724  : 		GameMatchDBAide.AddParameter(TEXT("@dwExperience"),pCreateMatchInfo->dwExperience);

  00283	6a 01		 push	 1
  00285	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00288	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0028e	51		 push	 ecx
  0028f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FHHALJLH@?$EAdwExperience@
  00294	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00297	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 725  : 		GameMatchDBAide.AddParameter(TEXT("@dwFromMatchID"),pCreateMatchInfo->dwFromMatchID);

  0029d	6a 01		 push	 1
  0029f	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002a2	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  002a8	51		 push	 ecx
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IAEFAMCC@?$EAdwFromMatchID@
  002ae	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 726  : 		GameMatchDBAide.AddParameter(TEXT("@cbFilterType"),pCreateMatchInfo->cbFilterType);

  002b7	6a 01		 push	 1
  002b9	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002bc	0f b6 88 8c 00
	00 00		 movzx	 ecx, BYTE PTR [eax+140]
  002c3	51		 push	 ecx
  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JBFEJKCF@?$EAcbFilterType@
  002c9	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 727  : 		GameMatchDBAide.AddParameter(TEXT("@wMaxRankID"),pCreateMatchInfo->wMaxRankID);

  002d2	6a 01		 push	 1
  002d4	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002d7	0f b7 88 8e 00
	00 00		 movzx	 ecx, WORD PTR [eax+142]
  002de	51		 push	 ecx
  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GKCAPLMD@?$EAwMaxRankID@
  002e4	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 728  : 		GameMatchDBAide.AddParameter(TEXT("@MatchEndDate"),pCreateMatchInfo->MatchEndDate);

  002ed	6a 01		 push	 1
  002ef	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002f2	05 90 00 00 00	 add	 eax, 144		; 00000090H
  002f7	50		 push	 eax
  002f8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PJDBJKDJ@?$EAMatchEndDate@
  002fd	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00300	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z

; 729  : 		GameMatchDBAide.AddParameter(TEXT("@MatchStartDate"),pCreateMatchInfo->MatchStartDate);

  00306	6a 01		 push	 1
  00308	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0030b	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  00310	50		 push	 eax
  00311	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LIHJEKAK@?$EAMatchStartDate@
  00316	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00319	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z

; 730  : 
; 731  : 		//排名参数
; 732  : 		GameMatchDBAide.AddParameter(TEXT("@cbRankingMode"),pCreateMatchInfo->cbRankingMode);

  0031f	6a 01		 push	 1
  00321	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00324	0f b6 88 b0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+176]
  0032b	51		 push	 ecx
  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LJGINACK@?$EAcbRankingMode@
  00331	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00334	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 733  : 		GameMatchDBAide.AddParameter(TEXT("@wCountInnings"),pCreateMatchInfo->wCountInnings);

  0033a	6a 01		 push	 1
  0033c	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0033f	0f b7 88 b2 00
	00 00		 movzx	 ecx, WORD PTR [eax+178]
  00346	51		 push	 ecx
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DBECKJP@?$EAwCountInnings@
  0034c	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0034f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 734  : 		GameMatchDBAide.AddParameter(TEXT("@cbFilterGradesMode"),pCreateMatchInfo->cbFilterGradesMode);

  00355	6a 01		 push	 1
  00357	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0035a	0f b6 88 b4 00
	00 00		 movzx	 ecx, BYTE PTR [eax+180]
  00361	51		 push	 ecx
  00362	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MMGHFAJ@?$EAcbFilterGradesMode@
  00367	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0036a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 735  : 
; 736  : 		//配桌参数
; 737  : 		GameMatchDBAide.AddParameter(TEXT("@cbDistributeRule"),pCreateMatchInfo->cbDistributeRule);

  00370	6a 01		 push	 1
  00372	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00375	0f b6 88 b5 00
	00 00		 movzx	 ecx, BYTE PTR [eax+181]
  0037c	51		 push	 ecx
  0037d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OEHLNJCG@?$EAcbDistributeRule@
  00382	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00385	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 738  : 		GameMatchDBAide.AddParameter(TEXT("@wMinDistributeUser"),pCreateMatchInfo->wMinDistributeUser);

  0038b	6a 01		 push	 1
  0038d	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00390	0f b7 88 b6 00
	00 00		 movzx	 ecx, WORD PTR [eax+182]
  00397	51		 push	 ecx
  00398	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HAABPICC@?$EAwMinDistributeUser@
  0039d	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 739  : 		GameMatchDBAide.AddParameter(TEXT("@wDistributeTimeSpace"),pCreateMatchInfo->wDistributeTimeSpace);

  003a6	6a 01		 push	 1
  003a8	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003ab	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  003b2	51		 push	 ecx
  003b3	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PGABJKOH@?$EAwDistributeTimeSpace@
  003b8	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 740  : 		GameMatchDBAide.AddParameter(TEXT("@wMinPartakeGameUser"),pCreateMatchInfo->wMinPartakeGameUser);

  003c1	6a 01		 push	 1
  003c3	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003c6	0f b7 88 ba 00
	00 00		 movzx	 ecx, WORD PTR [eax+186]
  003cd	51		 push	 ecx
  003ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EICMGAPH@?$EAwMinPartakeGameUser@
  003d3	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 741  : 		GameMatchDBAide.AddParameter(TEXT("@wMaxPartakeGameUser"),pCreateMatchInfo->wMaxPartakeGameUser);

  003dc	6a 01		 push	 1
  003de	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003e1	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  003e8	51		 push	 ecx
  003e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OPBIOAIO@?$EAwMaxPartakeGameUser@
  003ee	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 742  : 
; 743  : 		//比赛奖励
; 744  : 		GameMatchDBAide.AddParameter(TEXT("@strRewardGold"),pCreateMatchInfo->szRewardGold);

  003f7	6a 01		 push	 1
  003f9	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003fc	05 be 00 00 00	 add	 eax, 190		; 000000beH
  00401	50		 push	 eax
  00402	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HICCMOMP@?$EAstrRewardGold@
  00407	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0040a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 745  : 		GameMatchDBAide.AddParameter(TEXT("@strRewardIngot"),pCreateMatchInfo->szRewardIngot);	

  00410	6a 01		 push	 1
  00412	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00415	05 be 02 00 00	 add	 eax, 702		; 000002beH
  0041a	50		 push	 eax
  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JMMOGBDN@?$EAstrRewardIngot@
  00420	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00423	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 746  : 		GameMatchDBAide.AddParameter(TEXT("@strRewardExperience"),pCreateMatchInfo->szRewardExperience);

  00429	6a 01		 push	 1
  0042b	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0042e	05 be 04 00 00	 add	 eax, 1214		; 000004beH
  00433	50		 push	 eax
  00434	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HBDODLCL@?$EAstrRewardExperience@
  00439	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0043c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 747  : 
; 748  : 		//比赛规则
; 749  : 		GameMatchDBAide.AddParameter(TEXT("@strMatchRule"),szMatchRule);		

  00442	6a 01		 push	 1
  00444	8d 85 04 fa ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$11[ebp]
  0044a	50		 push	 eax
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PIALAMEL@?$EAstrMatchRule@
  00450	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00453	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 750  : 
; 751  : 		//输出信息
; 752  : 		TCHAR szDescribeString[128]=TEXT("");

  00459	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0045e	88 85 80 f9 ff
	ff		 mov	 BYTE PTR _szDescribeString$9[ebp], al
  00464	6a 7f		 push	 127			; 0000007fH
  00466	6a 00		 push	 0
  00468	8d 85 81 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp+1]
  0046e	50		 push	 eax
  0046f	e8 00 00 00 00	 call	 _memset
  00474	83 c4 0c	 add	 esp, 12			; 0000000cH

; 753  : 		GameMatchDBAide.AddParameterOutput(TEXT("@strErrorDescribe"),szDescribeString,sizeof(szDescribeString),adParamOutput);

  00477	6a 02		 push	 2
  00479	68 80 00 00 00	 push	 128			; 00000080H
  0047e	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  00484	50		 push	 eax
  00485	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  0048a	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0048d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z

; 754  : 
; 755  : 		//执行脚本
; 756  : 		if (GameMatchDBAide.ExecuteProcess(TEXT("GSP_GS_ModifyGameMatchItem"),true)!=DB_SUCCESS)

  00493	6a 01		 push	 1
  00495	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NMEDDMNL@GSP_GS_ModifyGameMatchItem@
  0049a	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0049d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  004a3	89 85 6c f8 ff
	ff		 mov	 DWORD PTR tv377[ebp], eax
  004a9	83 bd 6c f8 ff
	ff 00		 cmp	 DWORD PTR tv377[ebp], 0
  004b0	74 6d		 je	 SHORT $LN7@ModifyGame

; 757  : 		{
; 758  : 			//获取信息
; 759  : 			GameMatchDBAide.GetParameter(TEXT("@strErrorDescribe"),szDescribeString,CountArray(szDescribeString));

  004b2	68 80 00 00 00	 push	 128			; 00000080H
  004b7	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  004bd	50		 push	 eax
  004be	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  004c3	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  004c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z

; 760  : 
; 761  : 			//错误提示
; 762  : 			CTraceService::TraceString(szDescribeString,TraceLevel_Exception);

  004cc	6a 03		 push	 3
  004ce	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  004d4	50		 push	 eax
  004d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  004db	83 c4 08	 add	 esp, 8

; 763  : 
; 764  : 			//错误提示
; 765  : 			AfxMessageBox(szDescribeString,MB_ICONERROR);

  004de	6a 00		 push	 0
  004e0	6a 10		 push	 16			; 00000010H
  004e2	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  004e8	50		 push	 eax
  004e9	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 766  : 
; 767  : 			return false;

  004ee	c6 85 76 f8 ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
  004f5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  004f9	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  004ff	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00504	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0050b	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0050e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00514	8a 85 76 f8 ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  0051a	e9 ee 00 00 00	 jmp	 $LN1@ModifyGame
$LN7@ModifyGame:

; 768  : 		}
; 769  : 
; 770  : 		//读取配置
; 771  : 		ReadGameMatchOption(GameMatchDBAide,GameMatchResult);

  0051f	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00522	50		 push	 eax
  00523	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00526	51		 push	 ecx
  00527	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052a	e8 00 00 00 00	 call	 ?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ReadGameMatchOption

; 772  : 
; 773  : 		return true;

  0052f	c6 85 75 f8 ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  00536	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0053a	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00540	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00545	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0054c	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0054f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00555	8a 85 75 f8 ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  0055b	e9 ad 00 00 00	 jmp	 $LN1@ModifyGame
__catch$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$0:

; 774  : 	}
; 775  : 	catch (IDataBaseException * pIException)
; 776  : 	{
; 777  : 		//错误信息
; 778  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  00560	8b 85 7c f9 ff
	ff		 mov	 eax, DWORD PTR _pIException$8[ebp]
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	8b 8d 7c f9 ff
	ff		 mov	 ecx, DWORD PTR _pIException$8[ebp]
  0056e	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00571	ff d0		 call	 eax
  00573	89 85 78 f9 ff
	ff		 mov	 DWORD PTR _pszDescribe$7[ebp], eax

; 779  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  00579	6a 03		 push	 3
  0057b	8b 85 78 f9 ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  00581	50		 push	 eax
  00582	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00588	83 c4 08	 add	 esp, 8

; 780  : 
; 781  : 		//错误提示
; 782  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  0058b	6a 00		 push	 0
  0058d	6a 10		 push	 16			; 00000010H
  0058f	8b 85 78 f9 ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  00595	50		 push	 eax
  00596	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 783  : 
; 784  : 		return false;

  0059b	c6 85 74 f8 ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  005a2	b8 00 00 00 00	 mov	 eax, $LN15@ModifyGame
  005a7	c3		 ret	 0

; 785  : 	}

  005a8	b8 00 00 00 00	 mov	 eax, __tryend$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$1
  005ad	c3		 ret	 0
__tryend$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$1:
  005ae	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  005b5	eb 2a		 jmp	 SHORT $LN14@ModifyGame
$LN15@ModifyGame:

; 783  : 
; 784  : 		return false;

  005b7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  005be	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  005c4	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  005c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  005d0	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  005d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  005d9	8a 85 74 f8 ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  005df	eb 2c		 jmp	 SHORT $LN1@ModifyGame
$LN14@ModifyGame:

; 786  : 
; 787  : 	return false;

  005e1	c6 85 73 f8 ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  005e8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  005ec	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  005f2	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  005f7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  005fe	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00601	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00607	8a 85 73 f8 ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@ModifyGame:

; 788  : }

  0060d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00610	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00617	59		 pop	 ecx
  00618	5f		 pop	 edi
  00619	5e		 pop	 esi
  0061a	5b		 pop	 ebx
  0061b	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0061e	33 cd		 xor	 ecx, ebp
  00620	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00625	8b e5		 mov	 esp, ebp
  00627	5d		 pop	 ebp
  00628	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 68 f8 ff
	ff		 mov	 ecx, DWORD PTR [edx-1944]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z ENDP ; CMatchInfoManager::ModifyGameMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
tv377 = -1940						; size = 4
tv376 = -1940						; size = 4
tv65 = -1940						; size = 4
tv69 = -1934						; size = 1
$T2 = -1933						; size = 1
$T3 = -1932						; size = 1
$T4 = -1931						; size = 1
$T5 = -1930						; size = 1
$T6 = -1929						; size = 1
_pszDescribe$7 = -1672					; size = 4
_pIException$8 = -1668					; size = 4
_szDescribeString$9 = -1664				; size = 128
_i$10 = -1536						; size = 4
_szMatchRule$11 = -1532					; size = 1025
_GameMatchDBModule$ = -504				; size = 472
_GameMatchDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_pCreateMatchInfo$ = 8					; size = 4
_GameMatchResult$ = 12					; size = 4
?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z PROC ; CMatchInfoManager::InsertGameMatchOption, COMDAT
; _this$ = ecx

; 582  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 84 07 00
	00		 sub	 esp, 1924		; 00000784H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 583  : 	//变量定义
; 584  : 	CDataBaseAide GameMatchDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 585  : 	CDataBaseHelper GameMatchDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 586  : 
; 587  : 	//执行逻辑
; 588  : 	try

  00056	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 589  : 	{
; 590  : 		//连接数据库
; 591  : 		if (ConnectGameMatchDB(GameMatchDBModule)==false)

  0005a	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _GameMatchDBModule$[ebp]
  00060	50		 push	 eax
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
  00069	88 85 72 f8 ff
	ff		 mov	 BYTE PTR tv69[ebp], al
  0006f	0f b6 8d 72 f8
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	75 59		 jne	 SHORT $LN6@InsertGame

; 592  : 		{
; 593  : 			ASSERT(FALSE);

  0007a	33 c0		 xor	 eax, eax
  0007c	75 24		 jne	 SHORT $LN9@InsertGame
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z@4JA
  00084	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00087	51		 push	 ecx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00092	89 85 6c f8 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00098	83 bd 6c f8 ff
	ff 00		 cmp	 DWORD PTR tv65[ebp], 0
  0009f	74 01		 je	 SHORT $LN9@InsertGame
  000a1	cc		 int	 3
$LN9@InsertGame:

; 594  : 			return false;

  000a2	c6 85 77 f8 ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  000a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000ad	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000c8	8a 85 77 f8 ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  000ce	e9 3c 05 00 00	 jmp	 $LN1@InsertGame
$LN6@InsertGame:

; 595  : 		}
; 596  : 
; 597  : 		//设置对象
; 598  : 		GameMatchDBAide.SetDataBase(GameMatchDBModule.GetInterface());		

  000d3	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000d9	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  000de	89 85 6c f8 ff
	ff		 mov	 DWORD PTR tv376[ebp], eax
  000e4	8b 85 6c f8 ff
	ff		 mov	 eax, DWORD PTR tv376[ebp]
  000ea	50		 push	 eax
  000eb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 599  : 
; 600  : 		//比赛规则
; 601  : 		TCHAR szMatchRule[CountArray(pCreateMatchInfo->cbMatchRule)*2+1]=TEXT("");

  000f4	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  000f9	88 85 04 fa ff
	ff		 mov	 BYTE PTR _szMatchRule$11[ebp], al
  000ff	68 00 04 00 00	 push	 1024			; 00000400H
  00104	6a 00		 push	 0
  00106	8d 85 05 fa ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$11[ebp+1]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 _memset
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH

; 602  : 		for (INT i = 0; i<CountArray(pCreateMatchInfo->cbMatchRule); i++) _stprintf(&szMatchRule[i * 2], TEXT("%02X"), pCreateMatchInfo->cbMatchRule[i]);

  00115	c7 85 00 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$10[ebp], 0
  0011f	eb 0f		 jmp	 SHORT $LN4@InsertGame
$LN2@InsertGame:
  00121	8b 85 00 fa ff
	ff		 mov	 eax, DWORD PTR _i$10[ebp]
  00127	83 c0 01	 add	 eax, 1
  0012a	89 85 00 fa ff
	ff		 mov	 DWORD PTR _i$10[ebp], eax
$LN4@InsertGame:
  00130	81 bd 00 fa ff
	ff 00 02 00 00	 cmp	 DWORD PTR _i$10[ebp], 512 ; 00000200H
  0013a	73 2e		 jae	 SHORT $LN3@InsertGame
  0013c	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0013f	03 85 00 fa ff
	ff		 add	 eax, DWORD PTR _i$10[ebp]
  00145	0f b6 88 be 06
	00 00		 movzx	 ecx, BYTE PTR [eax+1726]
  0014c	51		 push	 ecx
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_04JFFKLGJF@?$CF02X@
  00152	8b 95 00 fa ff
	ff		 mov	 edx, DWORD PTR _i$10[ebp]
  00158	8d 84 55 04 fa
	ff ff		 lea	 eax, DWORD PTR _szMatchRule$11[ebp+edx*2]
  0015f	50		 push	 eax
  00160	e8 00 00 00 00	 call	 _sprintf
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH
  00168	eb b7		 jmp	 SHORT $LN2@InsertGame
$LN3@InsertGame:

; 603  : 
; 604  : 		//插入参数
; 605  : 		GameMatchDBAide.ResetParameter();		

  0016a	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0016d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 606  :  		GameMatchDBAide.AddParameter(TEXT("@wKindID"),pCreateMatchInfo->wKindID);							

  00173	6a 01		 push	 1
  00175	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00178	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0017b	51		 push	 ecx
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_08HBBOJKPI@?$EAwKindID@
  00181	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00184	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 607  : 		GameMatchDBAide.AddParameter(TEXT("@strMatchName"),pCreateMatchInfo->szMatchName);

  0018a	6a 01		 push	 1
  0018c	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0018f	83 c0 11	 add	 eax, 17			; 00000011H
  00192	50		 push	 eax
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IDKCNMDH@?$EAstrMatchName@
  00198	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 608  : 		GameMatchDBAide.AddParameter(TEXT("@strMatchDate"),pCreateMatchInfo->szMatchDate);

  001a1	6a 01		 push	 1
  001a3	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001a6	83 c0 31	 add	 eax, 49			; 00000031H
  001a9	50		 push	 eax
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NKOFFMGJ@?$EAstrMatchDate@
  001af	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 609  : 		GameMatchDBAide.AddParameter(TEXT("@cbMatchType"),pCreateMatchInfo->cbMatchType);		

  001b8	6a 01		 push	 1
  001ba	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001bd	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  001c1	51		 push	 ecx
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NLBCJFKK@?$EAcbMatchType@
  001c7	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 610  : 
; 611  : 		//报名参数
; 612  : 		GameMatchDBAide.AddParameter(TEXT("@cbFeeType"),pCreateMatchInfo->cbFeeType);

  001d0	6a 01		 push	 1
  001d2	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001d5	0f b6 48 71	 movzx	 ecx, BYTE PTR [eax+113]
  001d9	51		 push	 ecx
  001da	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PDOPAGMD@?$EAcbFeeType@
  001df	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 613  : 		GameMatchDBAide.AddParameter(TEXT("@cbDeductArea"),pCreateMatchInfo->cbDeductArea);		

  001e8	6a 01		 push	 1
  001ea	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  001ed	0f b6 48 72	 movzx	 ecx, BYTE PTR [eax+114]
  001f1	51		 push	 ecx
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BAHPIMKH@?$EAcbDeductArea@
  001f7	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 614  : 		GameMatchDBAide.AddParameter(TEXT("@lSignupFee"),pCreateMatchInfo->lSignupFee);

  00200	6a 01		 push	 1
  00202	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00205	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00208	51		 push	 ecx
  00209	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  0020c	52		 push	 edx
  0020d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HBHPDEE@?$EAlSignupFee@
  00212	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00215	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z

; 615  : 		GameMatchDBAide.AddParameter(TEXT("@cbSignupMode"),pCreateMatchInfo->cbSignupMode);		

  0021b	6a 01		 push	 1
  0021d	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00220	0f b6 88 80 00
	00 00		 movzx	 ecx, BYTE PTR [eax+128]
  00227	51		 push	 ecx
  00228	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IGAIKEL@?$EAcbSignupMode@
  0022d	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00230	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 616  : 		GameMatchDBAide.AddParameter(TEXT("@cbJoinCondition"),pCreateMatchInfo->cbJoinCondition);

  00236	6a 01		 push	 1
  00238	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0023b	0f b6 88 81 00
	00 00		 movzx	 ecx, BYTE PTR [eax+129]
  00242	51		 push	 ecx
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NIOCNJO@?$EAcbJoinCondition@
  00248	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0024b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 617  : 		GameMatchDBAide.AddParameter(TEXT("@cbMemberOrder"),pCreateMatchInfo->cbMemberOrder);

  00251	6a 01		 push	 1
  00253	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00256	0f b6 88 82 00
	00 00		 movzx	 ecx, BYTE PTR [eax+130]
  0025d	51		 push	 ecx
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NMLGPOCE@?$EAcbMemberOrder@
  00263	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00266	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 618  : 		GameMatchDBAide.AddParameter(TEXT("@dwExperience"),pCreateMatchInfo->dwExperience);

  0026c	6a 01		 push	 1
  0026e	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00271	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00277	51		 push	 ecx
  00278	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FHHALJLH@?$EAdwExperience@
  0027d	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00280	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 619  : 		GameMatchDBAide.AddParameter(TEXT("@dwFromMatchID"),pCreateMatchInfo->dwFromMatchID);

  00286	6a 01		 push	 1
  00288	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0028b	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00291	51		 push	 ecx
  00292	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IAEFAMCC@?$EAdwFromMatchID@
  00297	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0029a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 620  : 		GameMatchDBAide.AddParameter(TEXT("@cbFilterType"),pCreateMatchInfo->cbFilterType);

  002a0	6a 01		 push	 1
  002a2	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002a5	0f b6 88 8c 00
	00 00		 movzx	 ecx, BYTE PTR [eax+140]
  002ac	51		 push	 ecx
  002ad	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JBFEJKCF@?$EAcbFilterType@
  002b2	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 621  : 		GameMatchDBAide.AddParameter(TEXT("@wMaxRankID"),pCreateMatchInfo->wMaxRankID);

  002bb	6a 01		 push	 1
  002bd	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002c0	0f b7 88 8e 00
	00 00		 movzx	 ecx, WORD PTR [eax+142]
  002c7	51		 push	 ecx
  002c8	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GKCAPLMD@?$EAwMaxRankID@
  002cd	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 622  : 		GameMatchDBAide.AddParameter(TEXT("@MatchEndDate"),pCreateMatchInfo->MatchEndDate);

  002d6	6a 01		 push	 1
  002d8	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002db	05 90 00 00 00	 add	 eax, 144		; 00000090H
  002e0	50		 push	 eax
  002e1	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PJDBJKDJ@?$EAMatchEndDate@
  002e6	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z

; 623  : 		GameMatchDBAide.AddParameter(TEXT("@MatchStartDate"),pCreateMatchInfo->MatchStartDate);

  002ef	6a 01		 push	 1
  002f1	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  002f4	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  002f9	50		 push	 eax
  002fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LIHJEKAK@?$EAMatchStartDate@
  002ff	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00302	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z

; 624  : 
; 625  : 		//排名参数
; 626  : 		GameMatchDBAide.AddParameter(TEXT("@cbRankingMode"),pCreateMatchInfo->cbRankingMode);

  00308	6a 01		 push	 1
  0030a	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0030d	0f b6 88 b0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+176]
  00314	51		 push	 ecx
  00315	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LJGINACK@?$EAcbRankingMode@
  0031a	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 627  : 		GameMatchDBAide.AddParameter(TEXT("@wCountInnings"),pCreateMatchInfo->wCountInnings);

  00323	6a 01		 push	 1
  00325	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00328	0f b7 88 b2 00
	00 00		 movzx	 ecx, WORD PTR [eax+178]
  0032f	51		 push	 ecx
  00330	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DBECKJP@?$EAwCountInnings@
  00335	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00338	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 628  : 		GameMatchDBAide.AddParameter(TEXT("@cbFilterGradesMode"),pCreateMatchInfo->cbFilterGradesMode);

  0033e	6a 01		 push	 1
  00340	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00343	0f b6 88 b4 00
	00 00		 movzx	 ecx, BYTE PTR [eax+180]
  0034a	51		 push	 ecx
  0034b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MMGHFAJ@?$EAcbFilterGradesMode@
  00350	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00353	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 629  : 
; 630  : 		//配桌参数
; 631  : 		GameMatchDBAide.AddParameter(TEXT("@cbDistributeRule"),pCreateMatchInfo->cbDistributeRule);

  00359	6a 01		 push	 1
  0035b	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  0035e	0f b6 88 b5 00
	00 00		 movzx	 ecx, BYTE PTR [eax+181]
  00365	51		 push	 ecx
  00366	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OEHLNJCG@?$EAcbDistributeRule@
  0036b	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0036e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z

; 632  : 		GameMatchDBAide.AddParameter(TEXT("@wMinDistributeUser"),pCreateMatchInfo->wMinDistributeUser);

  00374	6a 01		 push	 1
  00376	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00379	0f b7 88 b6 00
	00 00		 movzx	 ecx, WORD PTR [eax+182]
  00380	51		 push	 ecx
  00381	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HAABPICC@?$EAwMinDistributeUser@
  00386	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00389	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 633  : 		GameMatchDBAide.AddParameter(TEXT("@wDistributeTimeSpace"),pCreateMatchInfo->wDistributeTimeSpace);

  0038f	6a 01		 push	 1
  00391	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00394	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0039b	51		 push	 ecx
  0039c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PGABJKOH@?$EAwDistributeTimeSpace@
  003a1	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 634  : 		GameMatchDBAide.AddParameter(TEXT("@wMinPartakeGameUser"),pCreateMatchInfo->wMinPartakeGameUser);

  003aa	6a 01		 push	 1
  003ac	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003af	0f b7 88 ba 00
	00 00		 movzx	 ecx, WORD PTR [eax+186]
  003b6	51		 push	 ecx
  003b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EICMGAPH@?$EAwMinPartakeGameUser@
  003bc	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 635  : 		GameMatchDBAide.AddParameter(TEXT("@wMaxPartakeGameUser"),pCreateMatchInfo->wMaxPartakeGameUser);

  003c5	6a 01		 push	 1
  003c7	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003ca	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  003d1	51		 push	 ecx
  003d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OPBIOAIO@?$EAwMaxPartakeGameUser@
  003d7	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 636  : 
; 637  : 		//比赛奖励
; 638  : 		GameMatchDBAide.AddParameter(TEXT("@strRewardGold"),pCreateMatchInfo->szRewardGold);

  003e0	6a 01		 push	 1
  003e2	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003e5	05 be 00 00 00	 add	 eax, 190		; 000000beH
  003ea	50		 push	 eax
  003eb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HICCMOMP@?$EAstrRewardGold@
  003f0	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  003f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 639  : 		GameMatchDBAide.AddParameter(TEXT("@strRewardIngot"),pCreateMatchInfo->szRewardIngot);

  003f9	6a 01		 push	 1
  003fb	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  003fe	05 be 02 00 00	 add	 eax, 702		; 000002beH
  00403	50		 push	 eax
  00404	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JMMOGBDN@?$EAstrRewardIngot@
  00409	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0040c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 640  : 		GameMatchDBAide.AddParameter(TEXT("@strRewardExperience"),pCreateMatchInfo->szRewardExperience);

  00412	6a 01		 push	 1
  00414	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00417	05 be 04 00 00	 add	 eax, 1214		; 000004beH
  0041c	50		 push	 eax
  0041d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HBDODLCL@?$EAstrRewardExperience@
  00422	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00425	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 641  : 
; 642  : 		//扩展配置
; 643  : 		GameMatchDBAide.AddParameter(TEXT("@strMatchRule"),szMatchRule);

  0042b	6a 01		 push	 1
  0042d	8d 85 04 fa ff
	ff		 lea	 eax, DWORD PTR _szMatchRule$11[ebp]
  00433	50		 push	 eax
  00434	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PIALAMEL@?$EAstrMatchRule@
  00439	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0043c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 644  : 		GameMatchDBAide.AddParameter(TEXT("@strServiceMachine"),pCreateMatchInfo->szServiceMachine);		

  00442	6a 01		 push	 1
  00444	8b 45 08	 mov	 eax, DWORD PTR _pCreateMatchInfo$[ebp]
  00447	05 be 08 00 00	 add	 eax, 2238		; 000008beH
  0044c	50		 push	 eax
  0044d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CBAFKNPB@?$EAstrServiceMachine@
  00452	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00455	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 645  : 
; 646  : 		//输出信息
; 647  : 		TCHAR szDescribeString[128]=TEXT("");

  0045b	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00460	88 85 80 f9 ff
	ff		 mov	 BYTE PTR _szDescribeString$9[ebp], al
  00466	6a 7f		 push	 127			; 0000007fH
  00468	6a 00		 push	 0
  0046a	8d 85 81 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp+1]
  00470	50		 push	 eax
  00471	e8 00 00 00 00	 call	 _memset
  00476	83 c4 0c	 add	 esp, 12			; 0000000cH

; 648  : 		GameMatchDBAide.AddParameterOutput(TEXT("@strErrorDescribe"),szDescribeString,sizeof(szDescribeString),adParamOutput);

  00479	6a 02		 push	 2
  0047b	68 80 00 00 00	 push	 128			; 00000080H
  00480	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  00486	50		 push	 eax
  00487	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  0048c	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0048f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z

; 649  : 
; 650  : 		//执行脚本
; 651  : 		if (GameMatchDBAide.ExecuteProcess(TEXT("GSP_GS_InsertGameMatchItem"),true)!=DB_SUCCESS)

  00495	6a 01		 push	 1
  00497	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NBMBGJOC@GSP_GS_InsertGameMatchItem@
  0049c	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0049f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  004a5	89 85 6c f8 ff
	ff		 mov	 DWORD PTR tv377[ebp], eax
  004ab	83 bd 6c f8 ff
	ff 00		 cmp	 DWORD PTR tv377[ebp], 0
  004b2	74 6d		 je	 SHORT $LN7@InsertGame

; 652  : 		{
; 653  : 			//获取信息
; 654  : 			GameMatchDBAide.GetParameter(TEXT("@strErrorDescribe"),szDescribeString,CountArray(szDescribeString));

  004b4	68 80 00 00 00	 push	 128			; 00000080H
  004b9	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  004bf	50		 push	 eax
  004c0	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  004c5	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  004c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z

; 655  : 
; 656  : 			//错误提示
; 657  : 			CTraceService::TraceString(szDescribeString,TraceLevel_Exception);

  004ce	6a 03		 push	 3
  004d0	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  004d6	50		 push	 eax
  004d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  004dd	83 c4 08	 add	 esp, 8

; 658  : 
; 659  : 			//错误提示
; 660  : 			AfxMessageBox(szDescribeString,MB_ICONERROR);

  004e0	6a 00		 push	 0
  004e2	6a 10		 push	 16			; 00000010H
  004e4	8d 85 80 f9 ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$9[ebp]
  004ea	50		 push	 eax
  004eb	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 661  : 
; 662  : 			return false;

  004f0	c6 85 76 f8 ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
  004f7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  004fb	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00501	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00506	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0050d	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00510	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00516	8a 85 76 f8 ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  0051c	e9 ee 00 00 00	 jmp	 $LN1@InsertGame
$LN7@InsertGame:

; 663  : 		}
; 664  : 
; 665  : 		//读取配置
; 666  : 		ReadGameMatchOption(GameMatchDBAide,GameMatchResult);

  00521	8b 45 0c	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00524	50		 push	 eax
  00525	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00528	51		 push	 ecx
  00529	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052c	e8 00 00 00 00	 call	 ?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ReadGameMatchOption

; 667  : 
; 668  : 		return true;

  00531	c6 85 75 f8 ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  00538	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0053c	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00542	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00547	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0054e	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00551	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00557	8a 85 75 f8 ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  0055d	e9 ad 00 00 00	 jmp	 $LN1@InsertGame
__catch$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$0:

; 669  : 	}
; 670  : 	catch (IDataBaseException * pIException)
; 671  : 	{
; 672  : 		//错误信息
; 673  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  00562	8b 85 7c f9 ff
	ff		 mov	 eax, DWORD PTR _pIException$8[ebp]
  00568	8b 10		 mov	 edx, DWORD PTR [eax]
  0056a	8b 8d 7c f9 ff
	ff		 mov	 ecx, DWORD PTR _pIException$8[ebp]
  00570	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00573	ff d0		 call	 eax
  00575	89 85 78 f9 ff
	ff		 mov	 DWORD PTR _pszDescribe$7[ebp], eax

; 674  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  0057b	6a 03		 push	 3
  0057d	8b 85 78 f9 ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  00583	50		 push	 eax
  00584	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0058a	83 c4 08	 add	 esp, 8

; 675  : 
; 676  : 		//错误提示
; 677  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  0058d	6a 00		 push	 0
  0058f	6a 10		 push	 16			; 00000010H
  00591	8b 85 78 f9 ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  00597	50		 push	 eax
  00598	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 678  : 
; 679  : 		return false;

  0059d	c6 85 74 f8 ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  005a4	b8 00 00 00 00	 mov	 eax, $LN15@InsertGame
  005a9	c3		 ret	 0

; 680  : 	}

  005aa	b8 00 00 00 00	 mov	 eax, __tryend$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$1
  005af	c3		 ret	 0
__tryend$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$1:
  005b0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  005b7	eb 2a		 jmp	 SHORT $LN14@InsertGame
$LN15@InsertGame:

; 678  : 
; 679  : 		return false;

  005b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  005c0	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  005c6	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  005cb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  005d2	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  005d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  005db	8a 85 74 f8 ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  005e1	eb 2c		 jmp	 SHORT $LN1@InsertGame
$LN14@InsertGame:

; 681  : 
; 682  : 	return false;

  005e3	c6 85 73 f8 ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  005ea	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  005ee	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  005f4	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  005f9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00600	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00603	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00609	8a 85 73 f8 ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@InsertGame:

; 683  : }

  0060f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00612	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00619	59		 pop	 ecx
  0061a	5f		 pop	 edi
  0061b	5e		 pop	 esi
  0061c	5b		 pop	 ebx
  0061d	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00620	33 cd		 xor	 ecx, ebp
  00622	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00627	8b e5		 mov	 esp, ebp
  00629	5d		 pop	 ebp
  0062a	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 68 f8 ff
	ff		 mov	 ecx, DWORD PTR [edx-1944]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z ENDP ; CMatchInfoManager::InsertGameMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z
_TEXT	SEGMENT
tv160 = -652						; size = 4
tv159 = -652						; size = 4
tv137 = -652						; size = 4
tv65 = -652						; size = 4
tv69 = -649						; size = 1
$T2 = -648						; size = 1
$T3 = -647						; size = 1
$T4 = -646						; size = 1
$T5 = -645						; size = 1
_pszDescribe$6 = -516					; size = 4
_pIException$7 = -512					; size = 4
_lResultCode$8 = -508					; size = 4
_GameMatchDBModule$ = -504				; size = 472
_GameMatchDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwMatchID$ = 8						; size = 4
?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z PROC	; CMatchInfoManager::DeleteGameMatchOption, COMDAT
; _this$ = ecx

; 538  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 7c 02 00
	00		 sub	 esp, 636		; 0000027cH
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 	//变量定义
; 540  : 	CDataBaseAide GameMatchDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 541  : 	CDataBaseHelper GameMatchDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 542  : 
; 543  : 	//执行逻辑
; 544  : 	try

  00056	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 545  : 	{
; 546  : 		//连接数据库
; 547  : 		if (ConnectGameMatchDB(GameMatchDBModule)==false)

  0005a	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _GameMatchDBModule$[ebp]
  00060	50		 push	 eax
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
  00069	88 85 77 fd ff
	ff		 mov	 BYTE PTR tv69[ebp], al
  0006f	0f b6 8d 77 fd
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	75 59		 jne	 SHORT $LN3@DeleteGame

; 548  : 		{
; 549  : 			ASSERT(FALSE);

  0007a	33 c0		 xor	 eax, eax
  0007c	75 24		 jne	 SHORT $LN5@DeleteGame
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z@4JA
  00084	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00087	51		 push	 ecx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00092	89 85 74 fd ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00098	83 bd 74 fd ff
	ff 00		 cmp	 DWORD PTR tv65[ebp], 0
  0009f	74 01		 je	 SHORT $LN5@DeleteGame
  000a1	cc		 int	 3
$LN5@DeleteGame:

; 550  : 			return false;

  000a2	c6 85 7b fd ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
  000a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000ad	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000c8	8a 85 7b fd ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  000ce	e9 62 01 00 00	 jmp	 $LN1@DeleteGame
$LN3@DeleteGame:

; 551  : 		}
; 552  : 
; 553  : 		//设置对象
; 554  : 		GameMatchDBAide.SetDataBase(GameMatchDBModule.GetInterface());

  000d3	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000d9	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  000de	89 85 74 fd ff
	ff		 mov	 DWORD PTR tv159[ebp], eax
  000e4	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv159[ebp]
  000ea	50		 push	 eax
  000eb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 555  : 
; 556  : 		//插入参数
; 557  : 		GameMatchDBAide.ResetParameter();		

  000f4	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 558  : 		GameMatchDBAide.AddParameter(TEXT("@dwMatchID"),dwMatchID);

  000fd	6a 01		 push	 1
  000ff	8b 45 08	 mov	 eax, DWORD PTR _dwMatchID$[ebp]
  00102	50		 push	 eax
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MKEKGMGP@?$EAdwMatchID@
  00108	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0010b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 559  : 
; 560  : 		//读取列表
; 561  : 		LONG lResultCode=GameMatchDBAide.ExecuteProcess(TEXT("GSP_GS_DeleteGameMatchItem"),false);

  00111	6a 00		 push	 0
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@LLLDCBFA@GSP_GS_DeleteGameMatchItem@
  00118	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0011b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  00121	89 85 74 fd ff
	ff		 mov	 DWORD PTR tv160[ebp], eax
  00127	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR tv160[ebp]
  0012d	89 85 04 fe ff
	ff		 mov	 DWORD PTR _lResultCode$8[ebp], eax

; 562  : 		
; 563  : 		return lResultCode==DB_SUCCESS;

  00133	83 bd 04 fe ff
	ff 00		 cmp	 DWORD PTR _lResultCode$8[ebp], 0
  0013a	75 0c		 jne	 SHORT $LN6@DeleteGame
  0013c	c7 85 74 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv137[ebp], 1
  00146	eb 0a		 jmp	 SHORT $LN7@DeleteGame
$LN6@DeleteGame:
  00148	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN7@DeleteGame:
  00152	8a 85 74 fd ff
	ff		 mov	 al, BYTE PTR tv137[ebp]
  00158	88 85 7a fd ff
	ff		 mov	 BYTE PTR $T4[ebp], al
  0015e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00162	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00168	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  0016d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00174	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00177	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  0017d	8a 85 7a fd ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  00183	e9 ad 00 00 00	 jmp	 $LN1@DeleteGame
__catch$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$0:

; 564  : 	}
; 565  : 	catch (IDataBaseException * pIException)
; 566  : 	{
; 567  : 		//错误信息
; 568  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  00188	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pIException$7[ebp]
  0018e	8b 10		 mov	 edx, DWORD PTR [eax]
  00190	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR _pIException$7[ebp]
  00196	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00199	ff d0		 call	 eax
  0019b	89 85 fc fd ff
	ff		 mov	 DWORD PTR _pszDescribe$6[ebp], eax

; 569  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  001a1	6a 03		 push	 3
  001a3	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$6[ebp]
  001a9	50		 push	 eax
  001aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  001b0	83 c4 08	 add	 esp, 8

; 570  : 
; 571  : 		//错误提示
; 572  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  001b3	6a 00		 push	 0
  001b5	6a 10		 push	 16			; 00000010H
  001b7	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$6[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 573  : 
; 574  : 		return false;

  001c3	c6 85 79 fd ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  001ca	b8 00 00 00 00	 mov	 eax, $LN13@DeleteGame
  001cf	c3		 ret	 0

; 575  : 	}

  001d0	b8 00 00 00 00	 mov	 eax, __tryend$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$1
  001d5	c3		 ret	 0
__tryend$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$1:
  001d6	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  001dd	eb 2a		 jmp	 SHORT $LN12@DeleteGame
$LN13@DeleteGame:

; 573  : 
; 574  : 		return false;

  001df	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  001e6	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  001ec	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  001f1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001f8	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00201	8a 85 79 fd ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  00207	eb 2c		 jmp	 SHORT $LN1@DeleteGame
$LN12@DeleteGame:

; 576  : 
; 577  : 	return false;

  00209	c6 85 78 fd ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  00210	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00214	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0021a	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  0021f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00226	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00229	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  0022f	8a 85 78 fd ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@DeleteGame:

; 578  : }

  00235	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00238	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0023f	59		 pop	 ecx
  00240	5f		 pop	 edi
  00241	5e		 pop	 esi
  00242	5b		 pop	 ebx
  00243	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00246	33 cd		 xor	 ecx, ebp
  00248	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024d	8b e5		 mov	 esp, ebp
  0024f	5d		 pop	 ebp
  00250	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 70 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-656]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z ENDP	; CMatchInfoManager::DeleteGameMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z
_TEXT	SEGMENT
tv221 = -1561						; size = 1
tv193 = -1560						; size = 4
tv175 = -1560						; size = 4
tv222 = -1556						; size = 4
tv220 = -1556						; size = 4
tv219 = -1556						; size = 4
tv218 = -1556						; size = 4
tv65 = -1556						; size = 4
tv69 = -1550						; size = 1
$T2 = -1549						; size = 1
$T3 = -1548						; size = 1
$T4 = -1547						; size = 1
$T5 = -1546						; size = 1
$T6 = -1545						; size = 1
_pszDescribe$7 = -1352					; size = 4
_pIException$8 = -1348					; size = 4
_GameMatchResult$9 = -1344				; size = 712
_szDescribeString$10 = -632				; size = 128
_GameMatchDBModule$ = -504				; size = 472
_GameMatchDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_wKindID$ = 8						; size = 2
_szMachineID$ = 12					; size = 4
_MatchInfoBuffer$ = 16					; size = 4
?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z PROC ; CMatchInfoManager::LoadGameMatchOption, COMDAT
; _this$ = ecx

; 459  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 0c 06 00
	00		 sub	 esp, 1548		; 0000060cH
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 460  : 	//变量定义
; 461  : 	CDataBaseAide GameMatchDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 462  : 	CDataBaseHelper GameMatchDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 463  : 
; 464  : 	//执行逻辑
; 465  : 	try

  00056	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 466  : 	{
; 467  : 		//连接数据库
; 468  : 		if (ConnectGameMatchDB(GameMatchDBModule)==false)

  0005a	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _GameMatchDBModule$[ebp]
  00060	50		 push	 eax
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
  00069	88 85 f2 f9 ff
	ff		 mov	 BYTE PTR tv69[ebp], al
  0006f	0f b6 8d f2 f9
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	75 59		 jne	 SHORT $LN5@LoadGameMa

; 469  : 		{
; 470  : 			ASSERT(FALSE);

  0007a	33 c0		 xor	 eax, eax
  0007c	75 24		 jne	 SHORT $LN8@LoadGameMa
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z@4JA
  00084	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00087	51		 push	 ecx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00092	89 85 ec f9 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00098	83 bd ec f9 ff
	ff 00		 cmp	 DWORD PTR tv65[ebp], 0
  0009f	74 01		 je	 SHORT $LN8@LoadGameMa
  000a1	cc		 int	 3
$LN8@LoadGameMa:

; 471  : 			return false;

  000a2	c6 85 f7 f9 ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  000a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000ad	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000c8	8a 85 f7 f9 ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  000ce	e9 a9 02 00 00	 jmp	 $LN1@LoadGameMa
$LN5@LoadGameMa:

; 472  : 		}
; 473  : 
; 474  : 		//设置对象
; 475  : 		GameMatchDBAide.SetDataBase(GameMatchDBModule.GetInterface());

  000d3	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000d9	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  000de	89 85 ec f9 ff
	ff		 mov	 DWORD PTR tv218[ebp], eax
  000e4	8b 85 ec f9 ff
	ff		 mov	 eax, DWORD PTR tv218[ebp]
  000ea	50		 push	 eax
  000eb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 476  : 
; 477  : 		//插入参数
; 478  : 		GameMatchDBAide.ResetParameter();

  000f4	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 479  : 		GameMatchDBAide.AddParameter(TEXT("@wKindID"),wKindID);

  000fd	6a 01		 push	 1
  000ff	0f b7 45 08	 movzx	 eax, WORD PTR _wKindID$[ebp]
  00103	50		 push	 eax
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_08HBBOJKPI@?$EAwKindID@
  00109	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 480  : 		GameMatchDBAide.AddParameter(TEXT("@dwMatchID"),0);

  00112	6a 01		 push	 1
  00114	6a 00		 push	 0
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MKEKGMGP@?$EAdwMatchID@
  0011b	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z

; 481  : 		GameMatchDBAide.AddParameter(TEXT("@strServiceMachine"),szMachineID);

  00124	6a 01		 push	 1
  00126	8b 45 0c	 mov	 eax, DWORD PTR _szMachineID$[ebp]
  00129	50		 push	 eax
  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CBAFKNPB@?$EAstrServiceMachine@
  0012f	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 482  : 
; 483  : 		//输出信息
; 484  : 		TCHAR szDescribeString[128]=TEXT("");

  00138	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0013d	88 85 88 fd ff
	ff		 mov	 BYTE PTR _szDescribeString$10[ebp], al
  00143	6a 7f		 push	 127			; 0000007fH
  00145	6a 00		 push	 0
  00147	8d 85 89 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp+1]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 _memset
  00153	83 c4 0c	 add	 esp, 12			; 0000000cH

; 485  : 		GameMatchDBAide.AddParameterOutput(TEXT("@strErrorDescribe"),szDescribeString,sizeof(szDescribeString),adParamOutput);

  00156	6a 02		 push	 2
  00158	68 80 00 00 00	 push	 128			; 00000080H
  0015d	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  00163	50		 push	 eax
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  00169	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0016c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z

; 486  : 
; 487  : 		//读取列表
; 488  : 		if (GameMatchDBAide.ExecuteProcess(TEXT("GSP_GS_LoadGameMatchItem"),true)!=DB_SUCCESS)

  00172	6a 01		 push	 1
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGGCIMNG@GSP_GS_LoadGameMatchItem@
  00179	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0017c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  00182	89 85 ec f9 ff
	ff		 mov	 DWORD PTR tv219[ebp], eax
  00188	83 bd ec f9 ff
	ff 00		 cmp	 DWORD PTR tv219[ebp], 0
  0018f	74 6d		 je	 SHORT $LN6@LoadGameMa

; 489  : 		{
; 490  : 			//获取信息
; 491  : 			GameMatchDBAide.GetParameter(TEXT("@strErrorDescribe"),szDescribeString,CountArray(szDescribeString));

  00191	68 80 00 00 00	 push	 128			; 00000080H
  00196	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  0019c	50		 push	 eax
  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  001a2	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z

; 492  : 
; 493  : 			//错误提示
; 494  : 			CTraceService::TraceString(szDescribeString,TraceLevel_Exception);

  001ab	6a 03		 push	 3
  001ad	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  001b3	50		 push	 eax
  001b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  001ba	83 c4 08	 add	 esp, 8

; 495  : 
; 496  : 			//错误提示
; 497  : 			AfxMessageBox(szDescribeString,MB_ICONERROR);

  001bd	6a 00		 push	 0
  001bf	6a 10		 push	 16			; 00000010H
  001c1	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  001c7	50		 push	 eax
  001c8	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 498  : 
; 499  : 			return false;

  001cd	c6 85 f6 f9 ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
  001d4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  001d8	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  001de	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  001e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ea	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  001f3	8a 85 f6 f9 ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  001f9	e9 7e 01 00 00	 jmp	 $LN1@LoadGameMa
$LN6@LoadGameMa:

; 500  : 		}
; 501  : 
; 502  : 		//清空列表
; 503  : 		MatchInfoBuffer.ResetMatchOption();

  001fe	8b 4d 10	 mov	 ecx, DWORD PTR _MatchInfoBuffer$[ebp]
  00201	e8 00 00 00 00	 call	 ?ResetMatchOption@CMatchInfoBuffer@@QAE_NXZ ; CMatchInfoBuffer::ResetMatchOption
$LN2@LoadGameMa:

; 504  : 
; 505  : 		//读取列表
; 506  : 		while (GameMatchDBModule->IsRecordsetEnd()==false)

  00206	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0020c	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00211	89 85 ec f9 ff
	ff		 mov	 DWORD PTR tv220[ebp], eax
  00217	8b 85 ec f9 ff
	ff		 mov	 eax, DWORD PTR tv220[ebp]
  0021d	89 85 e8 f9 ff
	ff		 mov	 DWORD PTR tv175[ebp], eax
  00223	8b 8d e8 f9 ff
	ff		 mov	 ecx, DWORD PTR tv175[ebp]
  00229	8b 11		 mov	 edx, DWORD PTR [ecx]
  0022b	8b 8d e8 f9 ff
	ff		 mov	 ecx, DWORD PTR tv175[ebp]
  00231	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00234	ff d0		 call	 eax
  00236	88 85 e7 f9 ff
	ff		 mov	 BYTE PTR tv221[ebp], al
  0023c	0f b6 8d e7 f9
	ff ff		 movzx	 ecx, BYTE PTR tv221[ebp]
  00243	85 c9		 test	 ecx, ecx
  00245	75 57		 jne	 SHORT $LN3@LoadGameMa

; 507  : 		{
; 508  : 			//读取数据
; 509  : 			tagGameMatchOption GameMatchResult;
; 510  : 			ReadGameMatchOption(GameMatchDBAide,GameMatchResult);

  00247	8d 85 c0 fa ff
	ff		 lea	 eax, DWORD PTR _GameMatchResult$9[ebp]
  0024d	50		 push	 eax
  0024e	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00251	51		 push	 ecx
  00252	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00255	e8 00 00 00 00	 call	 ?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ReadGameMatchOption

; 511  : 
; 512  : 			//插入列表
; 513  : 			MatchInfoBuffer.InsertMatchOption(&GameMatchResult);

  0025a	8d 85 c0 fa ff
	ff		 lea	 eax, DWORD PTR _GameMatchResult$9[ebp]
  00260	50		 push	 eax
  00261	8b 4d 10	 mov	 ecx, DWORD PTR _MatchInfoBuffer$[ebp]
  00264	e8 00 00 00 00	 call	 ?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z ; CMatchInfoBuffer::InsertMatchOption

; 514  : 
; 515  : 			//移动记录
; 516  : 			GameMatchDBModule->MoveToNext();

  00269	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0026f	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00274	89 85 ec f9 ff
	ff		 mov	 DWORD PTR tv222[ebp], eax
  0027a	8b 85 ec f9 ff
	ff		 mov	 eax, DWORD PTR tv222[ebp]
  00280	89 85 e8 f9 ff
	ff		 mov	 DWORD PTR tv193[ebp], eax
  00286	8b 8d e8 f9 ff
	ff		 mov	 ecx, DWORD PTR tv193[ebp]
  0028c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0028e	8b 8d e8 f9 ff
	ff		 mov	 ecx, DWORD PTR tv193[ebp]
  00294	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00297	ff d0		 call	 eax

; 517  : 		}

  00299	e9 68 ff ff ff	 jmp	 $LN2@LoadGameMa
$LN3@LoadGameMa:

; 518  : 
; 519  : 		return true;

  0029e	c6 85 f5 f9 ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
  002a5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  002a9	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  002af	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  002b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002bb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  002c4	8a 85 f5 f9 ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  002ca	e9 ad 00 00 00	 jmp	 $LN1@LoadGameMa
__catch$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$0:

; 520  : 	}
; 521  : 	catch (IDataBaseException * pIException)
; 522  : 	{
; 523  : 		//错误信息
; 524  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  002cf	8b 85 bc fa ff
	ff		 mov	 eax, DWORD PTR _pIException$8[ebp]
  002d5	8b 10		 mov	 edx, DWORD PTR [eax]
  002d7	8b 8d bc fa ff
	ff		 mov	 ecx, DWORD PTR _pIException$8[ebp]
  002dd	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002e0	ff d0		 call	 eax
  002e2	89 85 b8 fa ff
	ff		 mov	 DWORD PTR _pszDescribe$7[ebp], eax

; 525  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  002e8	6a 03		 push	 3
  002ea	8b 85 b8 fa ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  002f0	50		 push	 eax
  002f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  002f7	83 c4 08	 add	 esp, 8

; 526  : 
; 527  : 		//错误提示
; 528  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  002fa	6a 00		 push	 0
  002fc	6a 10		 push	 16			; 00000010H
  002fe	8b 85 b8 fa ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$7[ebp]
  00304	50		 push	 eax
  00305	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 529  : 
; 530  : 		return false;

  0030a	c6 85 f4 f9 ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  00311	b8 00 00 00 00	 mov	 eax, $LN14@LoadGameMa
  00316	c3		 ret	 0

; 531  : 	}

  00317	b8 00 00 00 00	 mov	 eax, __tryend$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$1
  0031c	c3		 ret	 0
__tryend$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$1:
  0031d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00324	eb 2a		 jmp	 SHORT $LN13@LoadGameMa
$LN14@LoadGameMa:

; 529  : 
; 530  : 		return false;

  00326	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0032d	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00333	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00338	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0033f	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00342	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00348	8a 85 f4 f9 ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  0034e	eb 2c		 jmp	 SHORT $LN1@LoadGameMa
$LN13@LoadGameMa:

; 532  : 
; 533  : 	return false;

  00350	c6 85 f3 f9 ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  00357	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0035b	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00361	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00366	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0036d	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00370	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00376	8a 85 f3 f9 ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@LoadGameMa:

; 534  : }

  0037c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0037f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00386	59		 pop	 ecx
  00387	5f		 pop	 edi
  00388	5e		 pop	 esi
  00389	5b		 pop	 ebx
  0038a	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0038d	33 cd		 xor	 ecx, ebp
  0038f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00394	8b e5		 mov	 esp, ebp
  00396	5d		 pop	 ebp
  00397	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a e0 f9 ff
	ff		 mov	 ecx, DWORD PTR [edx-1568]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z ENDP ; CMatchInfoManager::LoadGameMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
tv210 = -785						; size = 1
tv174 = -784						; size = 4
tv209 = -780						; size = 4
tv208 = -780						; size = 4
tv207 = -780						; size = 4
tv65 = -780						; size = 4
tv69 = -775						; size = 1
$T2 = -774						; size = 1
$T3 = -773						; size = 1
$T4 = -772						; size = 1
$T5 = -771						; size = 1
$T6 = -770						; size = 1
$T7 = -769						; size = 1
_pszDescribe$8 = -640					; size = 4
_pIException$9 = -636					; size = 4
_szDescribeString$10 = -632				; size = 128
_GameMatchDBModule$ = -504				; size = 472
_GameMatchDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_wKindID$ = 8						; size = 2
_dwMatchID$ = 12					; size = 4
_GameMatchResult$ = 16					; size = 4
?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z PROC ; CMatchInfoManager::LoadGameMatchOption, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 04 03 00
	00		 sub	 esp, 772		; 00000304H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 390  : 	//变量定义
; 391  : 	CDataBaseAide GameMatchDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 392  : 	CDataBaseHelper GameMatchDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 393  : 
; 394  : 	//执行逻辑
; 395  : 	try

  00056	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 396  : 	{
; 397  : 		//连接数据库
; 398  : 		if (ConnectGameMatchDB(GameMatchDBModule)==false)

  0005a	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _GameMatchDBModule$[ebp]
  00060	50		 push	 eax
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
  00069	88 85 f9 fc ff
	ff		 mov	 BYTE PTR tv69[ebp], al
  0006f	0f b6 8d f9 fc
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	75 59		 jne	 SHORT $LN3@LoadGameMa

; 399  : 		{
; 400  : 			ASSERT(FALSE);

  0007a	33 c0		 xor	 eax, eax
  0007c	75 24		 jne	 SHORT $LN7@LoadGameMa
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z@4JA
  00084	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00087	51		 push	 ecx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00092	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00098	83 bd f4 fc ff
	ff 00		 cmp	 DWORD PTR tv65[ebp], 0
  0009f	74 01		 je	 SHORT $LN7@LoadGameMa
  000a1	cc		 int	 3
$LN7@LoadGameMa:

; 401  : 			return false;

  000a2	c6 85 ff fc ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
  000a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000ad	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000bf	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000c8	8a 85 ff fc ff
	ff		 mov	 al, BYTE PTR $T7[ebp]
  000ce	e9 8e 02 00 00	 jmp	 $LN1@LoadGameMa
$LN3@LoadGameMa:

; 402  : 		}
; 403  : 
; 404  : 		//设置对象
; 405  : 		GameMatchDBAide.SetDataBase(GameMatchDBModule.GetInterface());

  000d3	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000d9	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  000de	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv207[ebp], eax
  000e4	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR tv207[ebp]
  000ea	50		 push	 eax
  000eb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 406  : 
; 407  : 		//读取列表
; 408  : 		GameMatchDBAide.ResetParameter();

  000f4	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 409  : 		GameMatchDBAide.AddParameter(TEXT("@wKindID"),wKindID);

  000fd	6a 01		 push	 1
  000ff	0f b7 45 08	 movzx	 eax, WORD PTR _wKindID$[ebp]
  00103	50		 push	 eax
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_08HBBOJKPI@?$EAwKindID@
  00109	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0010c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z

; 410  : 		GameMatchDBAide.AddParameter(TEXT("@dwMatchID"),dwMatchID);

  00112	6a 01		 push	 1
  00114	8b 45 0c	 mov	 eax, DWORD PTR _dwMatchID$[ebp]
  00117	50		 push	 eax
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MKEKGMGP@?$EAdwMatchID@
  0011d	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 411  : 		GameMatchDBAide.AddParameter(TEXT("@strServiceMachine"),TEXT(""));

  00126	6a 01		 push	 1
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CBAFKNPB@?$EAstrServiceMachine@
  00132	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 412  : 
; 413  : 		//输出信息
; 414  : 		TCHAR szDescribeString[128]=TEXT("");

  0013b	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00140	88 85 88 fd ff
	ff		 mov	 BYTE PTR _szDescribeString$10[ebp], al
  00146	6a 7f		 push	 127			; 0000007fH
  00148	6a 00		 push	 0
  0014a	8d 85 89 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp+1]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 _memset
  00156	83 c4 0c	 add	 esp, 12			; 0000000cH

; 415  : 		GameMatchDBAide.AddParameterOutput(TEXT("@strErrorDescribe"),szDescribeString,sizeof(szDescribeString),adParamOutput);

  00159	6a 02		 push	 2
  0015b	68 80 00 00 00	 push	 128			; 00000080H
  00160	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  00166	50		 push	 eax
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  0016c	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0016f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z

; 416  : 
; 417  : 		//读取列表
; 418  : 		if (GameMatchDBAide.ExecuteProcess(TEXT("GSP_GS_LoadGameMatchItem"),true)!=DB_SUCCESS)

  00175	6a 01		 push	 1
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGGCIMNG@GSP_GS_LoadGameMatchItem@
  0017c	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0017f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  00185	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv208[ebp], eax
  0018b	83 bd f4 fc ff
	ff 00		 cmp	 DWORD PTR tv208[ebp], 0
  00192	74 6d		 je	 SHORT $LN4@LoadGameMa

; 419  : 		{
; 420  : 			//获取信息
; 421  : 			GameMatchDBAide.GetParameter(TEXT("@strErrorDescribe"),szDescribeString,CountArray(szDescribeString));

  00194	68 80 00 00 00	 push	 128			; 00000080H
  00199	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  0019f	50		 push	 eax
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IIOJPJPJ@?$EAstrErrorDescribe@
  001a5	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z

; 422  : 
; 423  : 			//错误提示
; 424  : 			CTraceService::TraceString(szDescribeString,TraceLevel_Exception);

  001ae	6a 03		 push	 3
  001b0	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  001b6	50		 push	 eax
  001b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  001bd	83 c4 08	 add	 esp, 8

; 425  : 
; 426  : 			//错误提示
; 427  : 			AfxMessageBox(szDescribeString,MB_ICONERROR);

  001c0	6a 00		 push	 0
  001c2	6a 10		 push	 16			; 00000010H
  001c4	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR _szDescribeString$10[ebp]
  001ca	50		 push	 eax
  001cb	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 428  : 
; 429  : 			return false;

  001d0	c6 85 fe fc ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  001d7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  001db	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  001e1	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  001e6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ed	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  001f6	8a 85 fe fc ff
	ff		 mov	 al, BYTE PTR $T6[ebp]
  001fc	e9 60 01 00 00	 jmp	 $LN1@LoadGameMa
$LN4@LoadGameMa:

; 430  : 		}
; 431  : 
; 432  : 		//读取数据
; 433  : 		if (GameMatchDBModule->IsRecordsetEnd()==false)

  00201	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00207	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  0020c	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv209[ebp], eax
  00212	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR tv209[ebp]
  00218	89 85 f0 fc ff
	ff		 mov	 DWORD PTR tv174[ebp], eax
  0021e	8b 8d f0 fc ff
	ff		 mov	 ecx, DWORD PTR tv174[ebp]
  00224	8b 11		 mov	 edx, DWORD PTR [ecx]
  00226	8b 8d f0 fc ff
	ff		 mov	 ecx, DWORD PTR tv174[ebp]
  0022c	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0022f	ff d0		 call	 eax
  00231	88 85 ef fc ff
	ff		 mov	 BYTE PTR tv210[ebp], al
  00237	0f b6 8d ef fc
	ff ff		 movzx	 ecx, BYTE PTR tv210[ebp]
  0023e	85 c9		 test	 ecx, ecx
  00240	75 41		 jne	 SHORT $LN5@LoadGameMa

; 434  : 		{
; 435  : 			ReadGameMatchOption(GameMatchDBAide,GameMatchResult);

  00242	8b 45 10	 mov	 eax, DWORD PTR _GameMatchResult$[ebp]
  00245	50		 push	 eax
  00246	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00249	51		 push	 ecx
  0024a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0024d	e8 00 00 00 00	 call	 ?ReadGameMatchOption@CMatchInfoManager@@AAE_NAAVCDataBaseAide@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ReadGameMatchOption

; 436  : 
; 437  : 			return true;

  00252	c6 85 fd fc ff
	ff 01		 mov	 BYTE PTR $T5[ebp], 1
  00259	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0025d	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00263	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00268	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0026f	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00272	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00278	8a 85 fd fc ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  0027e	e9 de 00 00 00	 jmp	 $LN1@LoadGameMa
$LN5@LoadGameMa:

; 438  : 		}
; 439  : 
; 440  : 		return false;

  00283	c6 85 fc fc ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  0028a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0028e	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00294	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00299	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002a0	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  002a9	8a 85 fc fc ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  002af	e9 ad 00 00 00	 jmp	 $LN1@LoadGameMa
__catch$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$0:

; 441  : 	}
; 442  : 	catch (IDataBaseException * pIException)
; 443  : 	{
; 444  : 		//错误信息
; 445  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  002b4	8b 85 84 fd ff
	ff		 mov	 eax, DWORD PTR _pIException$9[ebp]
  002ba	8b 10		 mov	 edx, DWORD PTR [eax]
  002bc	8b 8d 84 fd ff
	ff		 mov	 ecx, DWORD PTR _pIException$9[ebp]
  002c2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002c5	ff d0		 call	 eax
  002c7	89 85 80 fd ff
	ff		 mov	 DWORD PTR _pszDescribe$8[ebp], eax

; 446  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  002cd	6a 03		 push	 3
  002cf	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$8[ebp]
  002d5	50		 push	 eax
  002d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  002dc	83 c4 08	 add	 esp, 8

; 447  : 
; 448  : 		//错误提示
; 449  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  002df	6a 00		 push	 0
  002e1	6a 10		 push	 16			; 00000010H
  002e3	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$8[ebp]
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 450  : 
; 451  : 		return false;

  002ef	c6 85 fb fc ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  002f6	b8 00 00 00 00	 mov	 eax, $LN13@LoadGameMa
  002fb	c3		 ret	 0

; 452  : 	}

  002fc	b8 00 00 00 00	 mov	 eax, __tryend$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$1
  00301	c3		 ret	 0
__tryend$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$1:
  00302	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00309	eb 2a		 jmp	 SHORT $LN12@LoadGameMa
$LN13@LoadGameMa:

; 450  : 
; 451  : 		return false;

  0030b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00312	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00318	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  0031d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00324	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00327	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  0032d	8a 85 fb fc ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  00333	eb 2c		 jmp	 SHORT $LN1@LoadGameMa
$LN12@LoadGameMa:

; 453  : 
; 454  : 	return false;

  00335	c6 85 fa fc ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  0033c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00340	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00346	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  0034b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00352	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00355	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  0035b	8a 85 fa fc ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@LoadGameMa:

; 455  : }

  00361	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00364	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0036b	59		 pop	 ecx
  0036c	5f		 pop	 edi
  0036d	5e		 pop	 esi
  0036e	5b		 pop	 ebx
  0036f	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00372	33 cd		 xor	 ecx, ebp
  00374	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00379	8b e5		 mov	 esp, ebp
  0037b	5d		 pop	 ebp
  0037c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a e8 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-792]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadGameMatchOption@CMatchInfoManager@@QAE_NGKAAUtagGameMatchOption@@@Z ENDP ; CMatchInfoManager::LoadGameMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z
_TEXT	SEGMENT
tv203 = -681						; size = 1
tv206 = -680						; size = 8
tv205 = -680						; size = 8
tv174 = -680						; size = 4
tv147 = -680						; size = 4
tv209 = -676						; size = 4
tv208 = -676						; size = 4
tv207 = -676						; size = 4
tv202 = -676						; size = 4
tv201 = -676						; size = 4
tv200 = -676						; size = 4
tv65 = -676						; size = 4
tv204 = -674						; size = 2
tv69 = -673						; size = 1
$T2 = -672						; size = 2
$T3 = -670						; size = 2
$T4 = -668						; size = 2
$T5 = -666						; size = 2
_pszDescribe$6 = -536					; size = 4
_pIException$7 = -532					; size = 4
_MatchRewardInfo$8 = -528				; size = 22
_GameMatchDBModule$ = -504				; size = 472
_GameMatchDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwMatchID$ = 8						; size = 4
_RewardInfoBuffer$ = 12					; size = 4
?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z PROC ; CMatchInfoManager::LoadGameMatchReward, COMDAT
; _this$ = ecx

; 326  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 9c 02 00
	00		 sub	 esp, 668		; 0000029cH
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 	//变量定义
; 328  : 	CDataBaseAide GameMatchDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 329  : 	CDataBaseHelper GameMatchDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 330  : 
; 331  : 	//执行逻辑
; 332  : 	try

  00056	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 333  : 	{
; 334  : 		//连接数据库
; 335  : 		if (ConnectGameMatchDB(GameMatchDBModule)==false)

  0005a	8d 85 08 fe ff
	ff		 lea	 eax, DWORD PTR _GameMatchDBModule$[ebp]
  00060	50		 push	 eax
  00061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?ConnectGameMatchDB@CMatchInfoManager@@AAE_NAAVCDataBaseHelper@@@Z ; CMatchInfoManager::ConnectGameMatchDB
  00069	88 85 5f fd ff
	ff		 mov	 BYTE PTR tv69[ebp], al
  0006f	0f b6 8d 5f fd
	ff ff		 movzx	 ecx, BYTE PTR tv69[ebp]
  00076	85 c9		 test	 ecx, ecx
  00078	75 5c		 jne	 SHORT $LN5@LoadGameMa

; 336  : 		{
; 337  : 			ASSERT(FALSE);

  0007a	33 c0		 xor	 eax, eax
  0007c	75 24		 jne	 SHORT $LN8@LoadGameMa
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z@4JA
  00084	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00087	51		 push	 ecx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00092	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00098	83 bd 5c fd ff
	ff 00		 cmp	 DWORD PTR tv65[ebp], 0
  0009f	74 01		 je	 SHORT $LN8@LoadGameMa
  000a1	cc		 int	 3
$LN8@LoadGameMa:

; 338  : 			return false;

  000a2	33 c0		 xor	 eax, eax
  000a4	66 89 85 66 fd
	ff ff		 mov	 WORD PTR $T5[ebp], ax
  000ab	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000af	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000b5	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000ca	66 8b 85 66 fd
	ff ff		 mov	 ax, WORD PTR $T5[ebp]
  000d1	e9 b2 02 00 00	 jmp	 $LN1@LoadGameMa
$LN5@LoadGameMa:

; 339  : 		}
; 340  : 
; 341  : 		//设置对象
; 342  : 		GameMatchDBAide.SetDataBase(GameMatchDBModule.GetInterface());

  000d6	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  000dc	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  000e1	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv200[ebp], eax
  000e7	8b 85 5c fd ff
	ff		 mov	 eax, DWORD PTR tv200[ebp]
  000ed	50		 push	 eax
  000ee	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 343  : 
; 344  : 		//插入参数
; 345  : 		GameMatchDBAide.ResetParameter();

  000f7	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 346  : 		GameMatchDBAide.AddParameter(TEXT("@dwMatchID"),dwMatchID);

  00100	6a 01		 push	 1
  00102	8b 45 08	 mov	 eax, DWORD PTR _dwMatchID$[ebp]
  00105	50		 push	 eax
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MKEKGMGP@?$EAdwMatchID@
  0010b	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0010e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z

; 347  : 
; 348  : 		//读取列表
; 349  : 		if (GameMatchDBAide.ExecuteProcess(TEXT("GSP_GS_LoadMatchReward"),true)==DB_SUCCESS)

  00114	6a 01		 push	 1
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NDBLJKCK@GSP_GS_LoadMatchReward@
  0011b	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  00124	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv201[ebp], eax
  0012a	83 bd 5c fd ff
	ff 00		 cmp	 DWORD PTR tv201[ebp], 0
  00131	0f 85 57 01 00
	00		 jne	 $LN6@LoadGameMa

; 350  : 		{
; 351  : 			//变量定义
; 352  : 			tagMatchRewardInfo MatchRewardInfo={0};

  00137	33 c0		 xor	 eax, eax
  00139	89 85 f0 fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp], eax
  0013f	89 85 f4 fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+4], eax
  00145	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+8], eax
  0014b	89 85 fc fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+12], eax
  00151	89 85 00 fe ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+16], eax
  00157	66 89 85 04 fe
	ff ff		 mov	 WORD PTR _MatchRewardInfo$8[ebp+20], ax
$LN2@LoadGameMa:

; 353  : 
; 354  : 			while (GameMatchDBModule->IsRecordsetEnd()==false)

  0015e	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  00164	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00169	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv202[ebp], eax
  0016f	8b 85 5c fd ff
	ff		 mov	 eax, DWORD PTR tv202[ebp]
  00175	89 85 58 fd ff
	ff		 mov	 DWORD PTR tv147[ebp], eax
  0017b	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR tv147[ebp]
  00181	8b 11		 mov	 edx, DWORD PTR [ecx]
  00183	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR tv147[ebp]
  00189	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0018c	ff d0		 call	 eax
  0018e	88 85 57 fd ff
	ff		 mov	 BYTE PTR tv203[ebp], al
  00194	0f b6 8d 57 fd
	ff ff		 movzx	 ecx, BYTE PTR tv203[ebp]
  0019b	85 c9		 test	 ecx, ecx
  0019d	0f 85 eb 00 00
	00		 jne	 $LN6@LoadGameMa

; 355  : 			{
; 356  : 				//读取数据
; 357  : 				MatchRewardInfo.wRankID=GameMatchDBAide.GetValue_WORD(TEXT("MatchRank"));

  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_09EPMDJCNA@MatchRank@
  001a8	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  001b1	66 89 85 5e fd
	ff ff		 mov	 WORD PTR tv204[ebp], ax
  001b8	66 8b 85 5e fd
	ff ff		 mov	 ax, WORD PTR tv204[ebp]
  001bf	66 89 85 f0 fd
	ff ff		 mov	 WORD PTR _MatchRewardInfo$8[ebp], ax

; 358  : 				MatchRewardInfo.lRewardGold=GameMatchDBAide.GetValue_LONGLONG(TEXT("RewardGold"));

  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKLPJIFO@RewardGold@
  001cb	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  001ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
  001d4	89 85 58 fd ff
	ff		 mov	 DWORD PTR tv205[ebp], eax
  001da	89 95 5c fd ff
	ff		 mov	 DWORD PTR tv205[ebp+4], edx
  001e0	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR tv205[ebp]
  001e6	89 85 f2 fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+2], eax
  001ec	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR tv205[ebp+4]
  001f2	89 8d f6 fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+6], ecx

; 359  : 				MatchRewardInfo.lRewardIngot=GameMatchDBAide.GetValue_LONGLONG(TEXT("RewardIngot"));

  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BLJEFPLJ@RewardIngot@
  001fd	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00200	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
  00206	89 85 58 fd ff
	ff		 mov	 DWORD PTR tv206[ebp], eax
  0020c	89 95 5c fd ff
	ff		 mov	 DWORD PTR tv206[ebp+4], edx
  00212	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR tv206[ebp]
  00218	89 85 fa fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+10], eax
  0021e	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR tv206[ebp+4]
  00224	89 8d fe fd ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+14], ecx

; 360  : 				MatchRewardInfo.dwRewardExperience=GameMatchDBAide.GetValue_DWORD(TEXT("RewardExperience"));

  0022a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DAEFAHAB@RewardExperience@
  0022f	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00232	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  00238	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv207[ebp], eax
  0023e	8b 85 5c fd ff
	ff		 mov	 eax, DWORD PTR tv207[ebp]
  00244	89 85 02 fe ff
	ff		 mov	 DWORD PTR _MatchRewardInfo$8[ebp+18], eax

; 361  : 
; 362  : 				//添加奖励
; 363  : 				RewardInfoBuffer.InsertMatchRewardInfo(MatchRewardInfo);

  0024a	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _MatchRewardInfo$8[ebp]
  00250	50		 push	 eax
  00251	8b 4d 0c	 mov	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  00254	e8 00 00 00 00	 call	 ?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z ; CRewardInfoBuffer::InsertMatchRewardInfo

; 364  : 
; 365  : 				//移动游标
; 366  : 				GameMatchDBModule->MoveToNext();

  00259	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0025f	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00264	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv208[ebp], eax
  0026a	8b 85 5c fd ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  00270	89 85 58 fd ff
	ff		 mov	 DWORD PTR tv174[ebp], eax
  00276	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR tv174[ebp]
  0027c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027e	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR tv174[ebp]
  00284	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00287	ff d0		 call	 eax

; 367  : 			}

  00289	e9 d0 fe ff ff	 jmp	 $LN2@LoadGameMa
$LN6@LoadGameMa:

; 368  : 		}		
; 369  : 
; 370  : 		return (WORD)RewardInfoBuffer.GetMatchRewardCount();

  0028e	8b 4d 0c	 mov	 ecx, DWORD PTR _RewardInfoBuffer$[ebp]
  00291	e8 00 00 00 00	 call	 ?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ ; CRewardInfoBuffer::GetMatchRewardCount
  00296	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv209[ebp], eax
  0029c	66 8b 85 5c fd
	ff ff		 mov	 ax, WORD PTR tv209[ebp]
  002a3	66 89 85 64 fd
	ff ff		 mov	 WORD PTR $T4[ebp], ax
  002aa	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  002ae	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  002b4	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  002b9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002c0	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  002c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  002c9	66 8b 85 64 fd
	ff ff		 mov	 ax, WORD PTR $T4[ebp]
  002d0	e9 b3 00 00 00	 jmp	 $LN1@LoadGameMa
__catch$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$0:

; 371  : 	}
; 372  : 	catch (IDataBaseException * pIException)
; 373  : 	{
; 374  : 		//错误信息
; 375  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  002d5	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pIException$7[ebp]
  002db	8b 10		 mov	 edx, DWORD PTR [eax]
  002dd	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _pIException$7[ebp]
  002e3	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  002e6	ff d0		 call	 eax
  002e8	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _pszDescribe$6[ebp], eax

; 376  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  002ee	6a 03		 push	 3
  002f0	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$6[ebp]
  002f6	50		 push	 eax
  002f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  002fd	83 c4 08	 add	 esp, 8

; 377  : 
; 378  : 		//错误提示
; 379  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  00300	6a 00		 push	 0
  00302	6a 10		 push	 16			; 00000010H
  00304	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$6[ebp]
  0030a	50		 push	 eax
  0030b	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 380  : 
; 381  : 		return 0;

  00310	33 c0		 xor	 eax, eax
  00312	66 89 85 62 fd
	ff ff		 mov	 WORD PTR $T3[ebp], ax
  00319	b8 00 00 00 00	 mov	 eax, $LN14@LoadGameMa
  0031e	c3		 ret	 0

; 382  : 	}

  0031f	b8 00 00 00 00	 mov	 eax, __tryend$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$1
  00324	c3		 ret	 0
__tryend$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$1:
  00325	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  0032c	eb 2b		 jmp	 SHORT $LN13@LoadGameMa
$LN14@LoadGameMa:

; 380  : 
; 381  : 		return 0;

  0032e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00335	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0033b	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00340	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00347	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0034a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00350	66 8b 85 62 fd
	ff ff		 mov	 ax, WORD PTR $T3[ebp]
  00357	eb 2f		 jmp	 SHORT $LN1@LoadGameMa
$LN13@LoadGameMa:

; 383  : 
; 384  : 	return 0;

  00359	33 c0		 xor	 eax, eax
  0035b	66 89 85 60 fd
	ff ff		 mov	 WORD PTR $T2[ebp], ax
  00362	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00366	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0036c	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00371	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00378	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  0037b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00381	66 8b 85 60 fd
	ff ff		 mov	 ax, WORD PTR $T2[ebp]
$LN1@LoadGameMa:

; 385  : }

  00388	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0038b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00392	59		 pop	 ecx
  00393	5f		 pop	 edi
  00394	5e		 pop	 esi
  00395	5b		 pop	 ebx
  00396	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00399	33 cd		 xor	 ecx, ebp
  0039b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a0	8b e5		 mov	 esp, ebp
  003a2	5d		 pop	 ebp
  003a3	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _GameMatchDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _GameMatchDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 50 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-688]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z ENDP ; CMatchInfoManager::LoadGameMatchReward
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ??1CMatchInfoManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMatchInfoManager@@UAE@XZ PROC			; CMatchInfoManager::~CMatchInfoManager, COMDAT
; _this$ = ecx

; 321  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoManager@@6B@

; 322  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMatchInfoManager@@UAE@XZ ENDP			; CMatchInfoManager::~CMatchInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ??0CMatchInfoManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMatchInfoManager@@QAE@XZ PROC			; CMatchInfoManager::CMatchInfoManager, COMDAT
; _this$ = ecx

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoManager@@6B@

; 317  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CMatchInfoManager@@QAE@XZ ENDP			; CMatchInfoManager::CMatchInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECRewardInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECRewardInfoBuffer@@UAEPAXI@Z PROC			; CRewardInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECRewardInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECRewardInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECRewardInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECRewardInfoBuffer@@UAEPAXI@Z ENDP			; CRewardInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCRewardInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRewardInfoBuffer@@UAEPAXI@Z PROC			; CRewardInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCRewardInfoBuffer@@UAEPAXI@Z ENDP			; CRewardInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z PROC		; CRewardInfoBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z ENDP		; CRewardInfoBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CRewardInfoBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CRewardInfoBuffer@@QAE@ABV0@@Z PROC			; CRewardInfoBuffer::CRewardInfoBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRewardInfoBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CRewardInfoBuffer@@QAE@ABV0@@Z ENDP			; CRewardInfoBuffer::CRewardInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ
_TEXT	SEGMENT
tv90 = -104						; size = 4
tv89 = -104						; size = 4
tv88 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_nArrayCount$4 = -28					; size = 4
_pMatchRewardInfo$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ PROC ; CRewardInfoBuffer::CreateMatchRewardInfo, COMDAT
; _this$ = ecx

; 282  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 58	 sub	 esp, 88			; 00000058H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 283  : 	//变量定义
; 284  : 	tagMatchRewardInfo * pMatchRewardInfo=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 285  : 
; 286  : 	//创建对象
; 287  : 	try

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 288  : 	{
; 289  : 		INT_PTR nArrayCount=m_MatchRewardInfoBuffer.GetCount();

  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	83 c1 18	 add	 ecx, 24			; 00000018H
  00043	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
  00048	89 45 98	 mov	 DWORD PTR tv88[ebp], eax
  0004b	8b 45 98	 mov	 eax, DWORD PTR tv88[ebp]
  0004e	89 45 e4	 mov	 DWORD PTR _nArrayCount$4[ebp], eax

; 290  : 		if (nArrayCount>0)

  00051	83 7d e4 00	 cmp	 DWORD PTR _nArrayCount$4[ebp], 0
  00055	7e 33		 jle	 SHORT $LN3@CreateMatc

; 291  : 		{
; 292  : 			pMatchRewardInfo=m_MatchRewardInfoBuffer[nArrayCount-1];

  00057	8b 45 e4	 mov	 eax, DWORD PTR _nArrayCount$4[ebp]
  0005a	83 e8 01	 sub	 eax, 1
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 18	 add	 ecx, 24			; 00000018H
  00064	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
  00069	89 45 98	 mov	 DWORD PTR tv89[ebp], eax
  0006c	8b 4d 98	 mov	 ecx, DWORD PTR tv89[ebp]
  0006f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00071	89 55 e8	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], edx

; 293  : 			m_MatchRewardInfoBuffer.RemoveAt(nArrayCount-1);

  00074	6a 01		 push	 1
  00076	8b 45 e4	 mov	 eax, DWORD PTR _nArrayCount$4[ebp]
  00079	83 e8 01	 sub	 eax, 1
  0007c	50		 push	 eax
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	83 c1 18	 add	 ecx, 24			; 00000018H
  00083	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAt

; 294  : 		}
; 295  : 		else

  00088	eb 23		 jmp	 SHORT $LN4@CreateMatc
$LN3@CreateMatc:

; 296  : 		{
; 297  : 			pMatchRewardInfo=new tagMatchRewardInfo;

  0008a	6a 16		 push	 22			; 00000016H
  0008c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00091	83 c4 04	 add	 esp, 4
  00094	89 45 98	 mov	 DWORD PTR tv90[ebp], eax
  00097	8b 45 98	 mov	 eax, DWORD PTR tv90[ebp]
  0009a	89 45 a0	 mov	 DWORD PTR $T3[ebp], eax
  0009d	8b 4d a0	 mov	 ecx, DWORD PTR $T3[ebp]
  000a0	89 4d e8	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], ecx

; 298  : 			if (pMatchRewardInfo==NULL) return NULL;

  000a3	83 7d e8 00	 cmp	 DWORD PTR _pMatchRewardInfo$[ebp], 0
  000a7	75 04		 jne	 SHORT $LN4@CreateMatc
  000a9	33 c0		 xor	 eax, eax
  000ab	eb 3d		 jmp	 SHORT $LN1@CreateMatc
$LN4@CreateMatc:

; 299  : 		}
; 300  : 	}

  000ad	eb 13		 jmp	 SHORT $LN7@CreateMatc
__catch$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ$0:

; 301  : 	catch (...) 
; 302  : 	{ 
; 303  : 		return NULL; 

  000af	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  000b6	b8 00 00 00 00	 mov	 eax, $LN10@CreateMatc
  000bb	c3		 ret	 0

; 304  : 	}

  000bc	b8 00 00 00 00	 mov	 eax, $LN7@CreateMatc
  000c1	c3		 ret	 0
$LN7@CreateMatc:
  000c2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c9	eb 0c		 jmp	 SHORT $LN9@CreateMatc
$LN10@CreateMatc:
  000cb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 301  : 	catch (...) 
; 302  : 	{ 
; 303  : 		return NULL; 

  000d2	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  000d5	eb 13		 jmp	 SHORT $LN1@CreateMatc
$LN9@CreateMatc:

; 305  : 
; 306  : 	//设置变量
; 307  : 	ZeroMemory(pMatchRewardInfo,sizeof(tagMatchRewardInfo));

  000d7	6a 16		 push	 22			; 00000016H
  000d9	6a 00		 push	 0
  000db	8b 45 e8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 _memset
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 308  : 
; 309  : 	return pMatchRewardInfo;

  000e7	8b 45 e8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
$LN1@CreateMatc:

; 310  : }

  000ea	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f4	59		 pop	 ecx
  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 94	 mov	 ecx, DWORD PTR [edx-108]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ ENDP ; CRewardInfoBuffer::CreateMatchRewardInfo
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_pMatchRewardInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_wRankID$ = 8						; size = 2
?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z PROC ; CRewardInfoBuffer::SearchMatchReward, COMDAT
; _this$ = ecx

; 263  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 264  : 	//变量定义
; 265  : 	tagMatchRewardInfo * pMatchRewardInfo=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 266  : 
; 267  : 	//查找对象
; 268  : 	for (INT_PTR i=0;i<m_MatchRewardInfoArray.GetCount();i++)

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@SearchMatc
$LN2@SearchMatc:
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SearchMatc:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 04	 add	 ecx, 4
  0002b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
  00030	39 45 f4	 cmp	 DWORD PTR _i$1[ebp], eax
  00033	7d 29		 jge	 SHORT $LN3@SearchMatc

; 269  : 	{
; 270  : 		pMatchRewardInfo=m_MatchRewardInfoArray[i];

  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 04	 add	 ecx, 4
  0003f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 4d f8	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], ecx

; 271  : 		if (pMatchRewardInfo->wRankID==wRankID)

  00049	8b 45 f8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0004c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0004f	0f b7 55 08	 movzx	 edx, WORD PTR _wRankID$[ebp]
  00053	3b ca		 cmp	 ecx, edx
  00055	75 05		 jne	 SHORT $LN5@SearchMatc

; 272  : 		{
; 273  : 			return pMatchRewardInfo;

  00057	8b 45 f8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0005a	eb 04		 jmp	 SHORT $LN1@SearchMatc
$LN5@SearchMatc:

; 274  : 		}
; 275  : 	}

  0005c	eb be		 jmp	 SHORT $LN2@SearchMatc
$LN3@SearchMatc:

; 276  : 
; 277  : 	return NULL;

  0005e	33 c0		 xor	 eax, eax
$LN1@SearchMatc:

; 278  : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ENDP ; CRewardInfoBuffer::SearchMatchReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ PROC	; CRewardInfoBuffer::GetMatchRewardCount, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 258  : 	return (DWORD)(m_MatchRewardInfoArray.GetCount());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount

; 259  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ ENDP	; CRewardInfoBuffer::GetMatchRewardCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z
_TEXT	SEGMENT
_pMatchRewardInsert$ = -8				; size = 4
_this$ = -4						; size = 4
_MatchRewardInfo$ = 8					; size = 4
?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z PROC ; CRewardInfoBuffer::InsertMatchRewardInfo, COMDAT
; _this$ = ecx

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 229  : 	//查找现存
; 230  : 	tagMatchRewardInfo * pMatchRewardInsert=SearchMatchReward(MatchRewardInfo.wRankID);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _MatchRewardInfo$[ebp]
  0000f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00012	51		 push	 ecx
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
  0001b	89 45 f8	 mov	 DWORD PTR _pMatchRewardInsert$[ebp], eax

; 231  : 
; 232  : 	//创建判断
; 233  : 	if (pMatchRewardInsert==NULL)

  0001e	83 7d f8 00	 cmp	 DWORD PTR _pMatchRewardInsert$[ebp], 0
  00022	75 41		 jne	 SHORT $LN2@InsertMatc

; 234  : 	{
; 235  : 		//创建对象
; 236  : 		pMatchRewardInsert=CreateMatchRewardInfo();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?CreateMatchRewardInfo@CRewardInfoBuffer@@AAEPAUtagMatchRewardInfo@@XZ ; CRewardInfoBuffer::CreateMatchRewardInfo
  0002c	89 45 f8	 mov	 DWORD PTR _pMatchRewardInsert$[ebp], eax

; 237  : 
; 238  : 		//结果判断
; 239  : 		if (pMatchRewardInsert==NULL)

  0002f	83 7d f8 00	 cmp	 DWORD PTR _pMatchRewardInsert$[ebp], 0
  00033	75 21		 jne	 SHORT $LN3@InsertMatc

; 240  : 		{
; 241  : 			ASSERT(FALSE);

  00035	33 c0		 xor	 eax, eax
  00037	75 19		 jne	 SHORT $LN5@InsertMatc
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU3@@Z@4JA
  0003f	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00042	51		 push	 ecx
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00048	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004d	85 c0		 test	 eax, eax
  0004f	74 01		 je	 SHORT $LN5@InsertMatc
  00051	cc		 int	 3
$LN5@InsertMatc:

; 242  : 			return NULL;

  00052	33 c0		 xor	 eax, eax
  00054	eb 24		 jmp	 SHORT $LN1@InsertMatc
$LN3@InsertMatc:

; 243  : 		}
; 244  : 
; 245  : 		//添加数据
; 246  : 		m_MatchRewardInfoArray.Add(pMatchRewardInsert);		

  00056	8d 45 f8	 lea	 eax, DWORD PTR _pMatchRewardInsert$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 04	 add	 ecx, 4
  00060	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABQAUtagMatchRewardInfo@@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Add
$LN2@InsertMatc:

; 247  : 	}
; 248  : 
; 249  : 	//拷贝数据
; 250  : 	CopyMemory(pMatchRewardInsert,&MatchRewardInfo,sizeof(tagMatchRewardInfo));

  00065	6a 16		 push	 22			; 00000016H
  00067	8b 45 08	 mov	 eax, DWORD PTR _MatchRewardInfo$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _pMatchRewardInsert$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 _memcpy
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 251  : 
; 252  : 	return pMatchRewardInsert;

  00077	8b 45 f8	 mov	 eax, DWORD PTR _pMatchRewardInsert$[ebp]
$LN1@InsertMatc:

; 253  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z ENDP ; CRewardInfoBuffer::InsertMatchRewardInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?DeleteMatchRewardInfo@CRewardInfoBuffer@@QAE_NG@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_pMatchRewardInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_wRankID$ = 8						; size = 2
?DeleteMatchRewardInfo@CRewardInfoBuffer@@QAE_NG@Z PROC	; CRewardInfoBuffer::DeleteMatchRewardInfo, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 203  : 	//变量定义
; 204  : 	tagMatchRewardInfo * pMatchRewardInfo=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 205  : 
; 206  : 	//查找对象
; 207  : 	for (INT_PTR i=0;i<m_MatchRewardInfoArray.GetCount();i++)

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@DeleteMatc
$LN2@DeleteMatc:
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@DeleteMatc:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 04	 add	 ecx, 4
  0002b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
  00030	39 45 f4	 cmp	 DWORD PTR _i$1[ebp], eax
  00033	7d 56		 jge	 SHORT $LN3@DeleteMatc

; 208  : 	{
; 209  : 		pMatchRewardInfo=m_MatchRewardInfoArray[i];

  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 04	 add	 ecx, 4
  0003f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 4d f8	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], ecx

; 210  : 		if (pMatchRewardInfo->wRankID==wRankID)

  00049	8b 45 f8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0004c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0004f	0f b7 55 08	 movzx	 edx, WORD PTR _wRankID$[ebp]
  00053	3b ca		 cmp	 ecx, edx
  00055	75 32		 jne	 SHORT $LN5@DeleteMatc

; 211  : 		{
; 212  : 			//删除数据
; 213  : 			m_MatchRewardInfoArray.RemoveAt(i);

  00057	6a 01		 push	 1
  00059	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 04	 add	 ecx, 4
  00063	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAt

; 214  : 			m_MatchRewardInfoBuffer.Add(pMatchRewardInfo);

  00068	8d 45 f8	 lea	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 18	 add	 ecx, 24			; 00000018H
  00072	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABQAUtagMatchRewardInfo@@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Add

; 215  : 
; 216  : 			//设置变量
; 217  : 			ZeroMemory(pMatchRewardInfo,sizeof(tagMatchRewardInfo));

  00077	6a 16		 push	 22			; 00000016H
  00079	6a 00		 push	 0
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 
; 219  : 			break;

  00087	eb 02		 jmp	 SHORT $LN3@DeleteMatc
$LN5@DeleteMatc:

; 220  : 		}
; 221  : 	}	

  00089	eb 91		 jmp	 SHORT $LN2@DeleteMatc
$LN3@DeleteMatc:

; 222  : 
; 223  : 	return true;

  0008b	b0 01		 mov	 al, 1

; 224  : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?DeleteMatchRewardInfo@CRewardInfoBuffer@@QAE_NG@Z ENDP	; CRewardInfoBuffer::DeleteMatchRewardInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?ResetMatchRewardInfo@CRewardInfoBuffer@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetMatchRewardInfo@CRewardInfoBuffer@@QAE_NXZ PROC	; CRewardInfoBuffer::ResetMatchRewardInfo, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 191  : 	//添加对象
; 192  : 	m_MatchRewardInfoBuffer.Append(m_MatchRewardInfoArray);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 18	 add	 ecx, 24			; 00000018H
  00019	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Append

; 193  : 
; 194  : 	//删除元素
; 195  : 	m_MatchRewardInfoArray.RemoveAll();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 04	 add	 ecx, 4
  00024	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAll

; 196  : 
; 197  : 	return true;

  00029	b0 01		 mov	 al, 1

; 198  : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?ResetMatchRewardInfo@CRewardInfoBuffer@@QAE_NXZ ENDP	; CRewardInfoBuffer::ResetMatchRewardInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ??1CRewardInfoBuffer@@UAE@XZ
_TEXT	SEGMENT
$T2 = -96						; size = 4
_i$3 = -28						; size = 4
_pMatchRewardInfo$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CRewardInfoBuffer@@UAE@XZ PROC			; CRewardInfoBuffer::~CRewardInfoBuffer, COMDAT
; _this$ = ecx

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CRewardInfoBuffer@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 50	 sub	 esp, 80			; 00000050H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRewardInfoBuffer@@6B@
  00038	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1

; 170  : 	//变量定义
; 171  : 	tagMatchRewardInfo * pMatchRewardInfo=NULL;

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 172  : 
; 173  : 	//删除数组
; 174  : 	m_MatchRewardInfoBuffer.Append(m_MatchRewardInfoArray);

  00046	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00049	83 c0 04	 add	 eax, 4
  0004c	50		 push	 eax
  0004d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 18	 add	 ecx, 24			; 00000018H
  00053	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Append

; 175  : 	for (INT_PTR i=0;i<m_MatchRewardInfoBuffer.GetCount();i++)

  00058	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  0005f	eb 09		 jmp	 SHORT $LN4@CRewardInf
$LN2@CRewardInf:
  00061	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  00064	83 c0 01	 add	 eax, 1
  00067	89 45 e4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@CRewardInf:
  0006a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	83 c1 18	 add	 ecx, 24			; 00000018H
  00070	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
  00075	39 45 e4	 cmp	 DWORD PTR _i$3[ebp], eax
  00078	7d 6d		 jge	 SHORT $LN3@CRewardInf

; 176  : 	{
; 177  : 		pMatchRewardInfo=m_MatchRewardInfoBuffer[i];

  0007a	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	83 c1 18	 add	 ecx, 24			; 00000018H
  00084	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	89 4d e8	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], ecx

; 178  : 		SafeDelete(pMatchRewardInfo);

  0008e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00092	8b 45 e8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  00095	89 45 a0	 mov	 DWORD PTR $T2[ebp], eax
  00098	6a 16		 push	 22			; 00000016H
  0009a	8b 4d a0	 mov	 ecx, DWORD PTR $T2[ebp]
  0009d	51		 push	 ecx
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a3	83 c4 08	 add	 esp, 8
  000a6	eb 23		 jmp	 SHORT $LN8@CRewardInf
__catch$??1CRewardInfoBuffer@@UAE@XZ$0:
  000a8	33 c0		 xor	 eax, eax
  000aa	75 19		 jne	 SHORT $LN7@CRewardInf
  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CRewardInfoBuffer@@UAE@XZ@4JA
  000b2	83 c1 09	 add	 ecx, 9
  000b5	51		 push	 ecx
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000bb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c0	85 c0		 test	 eax, eax
  000c2	74 01		 je	 SHORT $LN7@CRewardInf
  000c4	cc		 int	 3
$LN7@CRewardInf:
  000c5	b8 00 00 00 00	 mov	 eax, $LN13@CRewardInf
  000ca	c3		 ret	 0
$LN8@CRewardInf:
  000cb	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  000d2	eb 07		 jmp	 SHORT __tryend$??1CRewardInfoBuffer@@UAE@XZ$1
$LN13@CRewardInf:
  000d4	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??1CRewardInfoBuffer@@UAE@XZ$1:
  000db	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 179  : 	}

  000e2	e9 7a ff ff ff	 jmp	 $LN2@CRewardInf
$LN3@CRewardInf:

; 180  : 
; 181  : 	//删除引用
; 182  : 	m_MatchRewardInfoArray.RemoveAll();

  000e7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	83 c1 04	 add	 ecx, 4
  000ed	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAll

; 183  : 	m_MatchRewardInfoBuffer.RemoveAll();

  000f2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	83 c1 18	 add	 ecx, 24			; 00000018H
  000f8	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAll

; 184  : 
; 185  : 	return;
; 186  : }

  000fd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00101	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	83 c1 18	 add	 ecx, 24			; 00000018H
  00107	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
  0010c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00113	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	83 c1 04	 add	 ecx, 4
  00119	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
  0011e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00128	59		 pop	 ecx
  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CRewardInfoBuffer@@UAE@XZ$2:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
__unwindfunclet$??1CRewardInfoBuffer@@UAE@XZ$3:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 18	 add	 ecx, 24			; 00000018H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
__ehhandler$??1CRewardInfoBuffer@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CRewardInfoBuffer@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CRewardInfoBuffer@@UAE@XZ ENDP			; CRewardInfoBuffer::~CRewardInfoBuffer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ??0CRewardInfoBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CRewardInfoBuffer@@QAE@XZ PROC			; CRewardInfoBuffer::CRewardInfoBuffer, COMDAT
; _this$ = ecx

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CRewardInfoBuffer@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRewardInfoBuffer@@6B@
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 18	 add	 ecx, 24			; 00000018H
  0004c	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>

; 165  : }

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRewardInfoBuffer@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
__ehhandler$??0CRewardInfoBuffer@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CRewardInfoBuffer@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CRewardInfoBuffer@@QAE@XZ ENDP			; CRewardInfoBuffer::CRewardInfoBuffer
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHABQAUtagMatchRewardInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHABQAUtagMatchRewardInfo@@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHABQAUtagMatchRewardInfo@@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABV1@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABV1@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABQAUtagMatchRewardInfo@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABQAUtagMatchRewardInfo@@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEXHABQAUtagMatchRewardInfo@@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEHABQAUtagMatchRewardInfo@@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchInfoBuffer@@UAEPAXI@Z PROC			; CMatchInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchInfoBuffer@@UAEPAXI@Z ENDP			; CMatchInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchInfoBuffer@@UAEPAXI@Z PROC			; CMatchInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchInfoBuffer@@UAEPAXI@Z ENDP			; CMatchInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z PROC		; CMatchInfoBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z ENDP		; CMatchInfoBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchInfoBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchInfoBuffer@@QAE@ABV0@@Z PROC			; CMatchInfoBuffer::CMatchInfoBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CMatchInfoBuffer@@QAE@ABV0@@Z ENDP			; CMatchInfoBuffer::CMatchInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ
_TEXT	SEGMENT
tv90 = -104						; size = 4
tv89 = -104						; size = 4
tv88 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_nArrayCount$4 = -28					; size = 4
_pGameMatchOption$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ PROC ; CMatchInfoBuffer::CreateMatchOption, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 58	 sub	 esp, 88			; 00000058H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 132  : 	//变量定义
; 133  : 	tagGameMatchOption * pGameMatchOption=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameMatchOption$[ebp], 0

; 134  : 
; 135  : 	//创建对象
; 136  : 	try

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 137  : 	{
; 138  : 		INT_PTR nArrayCount=m_GameMatchOptionBuffer.GetCount();

  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	83 c1 18	 add	 ecx, 24			; 00000018H
  00043	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
  00048	89 45 98	 mov	 DWORD PTR tv88[ebp], eax
  0004b	8b 45 98	 mov	 eax, DWORD PTR tv88[ebp]
  0004e	89 45 e4	 mov	 DWORD PTR _nArrayCount$4[ebp], eax

; 139  : 		if (nArrayCount>0)

  00051	83 7d e4 00	 cmp	 DWORD PTR _nArrayCount$4[ebp], 0
  00055	7e 33		 jle	 SHORT $LN3@CreateMatc

; 140  : 		{
; 141  : 			pGameMatchOption=m_GameMatchOptionBuffer[nArrayCount-1];

  00057	8b 45 e4	 mov	 eax, DWORD PTR _nArrayCount$4[ebp]
  0005a	83 e8 01	 sub	 eax, 1
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 18	 add	 ecx, 24			; 00000018H
  00064	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
  00069	89 45 98	 mov	 DWORD PTR tv89[ebp], eax
  0006c	8b 4d 98	 mov	 ecx, DWORD PTR tv89[ebp]
  0006f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00071	89 55 e8	 mov	 DWORD PTR _pGameMatchOption$[ebp], edx

; 142  : 			m_GameMatchOptionBuffer.RemoveAt(nArrayCount-1);

  00074	6a 01		 push	 1
  00076	8b 45 e4	 mov	 eax, DWORD PTR _nArrayCount$4[ebp]
  00079	83 e8 01	 sub	 eax, 1
  0007c	50		 push	 eax
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	83 c1 18	 add	 ecx, 24			; 00000018H
  00083	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAt

; 143  : 		}
; 144  : 		else

  00088	eb 26		 jmp	 SHORT $LN4@CreateMatc
$LN3@CreateMatc:

; 145  : 		{
; 146  : 			pGameMatchOption=new tagGameMatchOption;

  0008a	68 c8 02 00 00	 push	 712			; 000002c8H
  0008f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00094	83 c4 04	 add	 esp, 4
  00097	89 45 98	 mov	 DWORD PTR tv90[ebp], eax
  0009a	8b 45 98	 mov	 eax, DWORD PTR tv90[ebp]
  0009d	89 45 a0	 mov	 DWORD PTR $T3[ebp], eax
  000a0	8b 4d a0	 mov	 ecx, DWORD PTR $T3[ebp]
  000a3	89 4d e8	 mov	 DWORD PTR _pGameMatchOption$[ebp], ecx

; 147  : 			if (pGameMatchOption==NULL) return NULL;

  000a6	83 7d e8 00	 cmp	 DWORD PTR _pGameMatchOption$[ebp], 0
  000aa	75 04		 jne	 SHORT $LN4@CreateMatc
  000ac	33 c0		 xor	 eax, eax
  000ae	eb 40		 jmp	 SHORT $LN1@CreateMatc
$LN4@CreateMatc:

; 148  : 		}
; 149  : 	}

  000b0	eb 13		 jmp	 SHORT $LN7@CreateMatc
__catch$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ$0:

; 150  : 	catch (...) 
; 151  : 	{ 
; 152  : 		return NULL; 

  000b2	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  000b9	b8 00 00 00 00	 mov	 eax, $LN10@CreateMatc
  000be	c3		 ret	 0

; 153  : 	}

  000bf	b8 00 00 00 00	 mov	 eax, $LN7@CreateMatc
  000c4	c3		 ret	 0
$LN7@CreateMatc:
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000cc	eb 0c		 jmp	 SHORT $LN9@CreateMatc
$LN10@CreateMatc:
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 150  : 	catch (...) 
; 151  : 	{ 
; 152  : 		return NULL; 

  000d5	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  000d8	eb 16		 jmp	 SHORT $LN1@CreateMatc
$LN9@CreateMatc:

; 154  : 
; 155  : 	//设置变量
; 156  : 	ZeroMemory(pGameMatchOption,sizeof(tagGameMatchOption));

  000da	68 c8 02 00 00	 push	 712			; 000002c8H
  000df	6a 00		 push	 0
  000e1	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 _memset
  000ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 
; 158  : 	return pGameMatchOption;

  000ed	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
$LN1@CreateMatc:

; 159  : }

  000f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fa	59		 pop	 ecx
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 94	 mov	 ecx, DWORD PTR [edx-108]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ ENDP ; CMatchInfoBuffer::CreateMatchOption
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_pGameMatchOption$ = -8					; size = 4
_this$ = -4						; size = 4
_dwMatchID$ = 8						; size = 4
?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z PROC ; CMatchInfoBuffer::SearchMatchOption, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 	//变量定义
; 114  : 	tagGameMatchOption * pGameMatchOption=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameMatchOption$[ebp], 0

; 115  : 
; 116  : 	//查找对象
; 117  : 	for(INT_PTR i=0;i<m_GameMatchOptionArray.GetCount();i++)

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@SearchMatc
$LN2@SearchMatc:
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SearchMatc:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 04	 add	 ecx, 4
  0002b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
  00030	39 45 f4	 cmp	 DWORD PTR _i$1[ebp], eax
  00033	7d 25		 jge	 SHORT $LN3@SearchMatc

; 118  : 	{
; 119  : 		pGameMatchOption=m_GameMatchOptionArray[i];

  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 04	 add	 ecx, 4
  0003f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 4d f8	 mov	 DWORD PTR _pGameMatchOption$[ebp], ecx

; 120  : 		if(pGameMatchOption->dwMatchID==dwMatchID)

  00049	8b 45 f8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	3b 4d 08	 cmp	 ecx, DWORD PTR _dwMatchID$[ebp]
  00051	75 05		 jne	 SHORT $LN5@SearchMatc

; 121  : 		{
; 122  : 			return pGameMatchOption;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00056	eb 04		 jmp	 SHORT $LN1@SearchMatc
$LN5@SearchMatc:

; 123  : 		}
; 124  : 	}

  00058	eb c2		 jmp	 SHORT $LN2@SearchMatc
$LN3@SearchMatc:

; 125  : 
; 126  : 	return NULL;

  0005a	33 c0		 xor	 eax, eax
$LN1@SearchMatc:

; 127  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z ENDP ; CMatchInfoBuffer::SearchMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?GetMatchOptionCount@CMatchInfoBuffer@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMatchOptionCount@CMatchInfoBuffer@@QAEKXZ PROC	; CMatchInfoBuffer::GetMatchOptionCount, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	return (DWORD)(m_GameMatchOptionArray.GetCount());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount

; 108  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetMatchOptionCount@CMatchInfoBuffer@@QAEKXZ ENDP	; CMatchInfoBuffer::GetMatchOptionCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z
_TEXT	SEGMENT
_pGameMatchInsert$ = -8					; size = 4
_this$ = -4						; size = 4
_pGameMatchOption$ = 8					; size = 4
?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z PROC ; CMatchInfoBuffer::InsertMatchOption, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   : 	//效验参数
; 75   : 	ASSERT(pGameMatchOption!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pGameMatchOption$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@InsertMatc
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU3@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN6@InsertMatc
  00029	cc		 int	 3
$LN6@InsertMatc:

; 76   : 	if (pGameMatchOption==NULL) return NULL;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pGameMatchOption$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@InsertMatc
  00030	33 c0		 xor	 eax, eax
  00032	eb 70		 jmp	 SHORT $LN1@InsertMatc
$LN2@InsertMatc:

; 77   : 
; 78   : 	//查找现存
; 79   : 	tagGameMatchOption * pGameMatchInsert=SearchMatchOption(pGameMatchOption->dwMatchID);

  00034	8b 45 08	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	51		 push	 ecx
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z ; CMatchInfoBuffer::SearchMatchOption
  00042	89 45 f8	 mov	 DWORD PTR _pGameMatchInsert$[ebp], eax

; 80   : 
; 81   : 	//创建判断
; 82   : 	if (pGameMatchInsert==NULL)

  00045	83 7d f8 00	 cmp	 DWORD PTR _pGameMatchInsert$[ebp], 0
  00049	75 41		 jne	 SHORT $LN3@InsertMatc

; 83   : 	{
; 84   : 		//创建对象
; 85   : 		pGameMatchInsert=CreateMatchOption();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?CreateMatchOption@CMatchInfoBuffer@@AAEPAUtagGameMatchOption@@XZ ; CMatchInfoBuffer::CreateMatchOption
  00053	89 45 f8	 mov	 DWORD PTR _pGameMatchInsert$[ebp], eax

; 86   : 
; 87   : 		//结果判断
; 88   : 		if (pGameMatchInsert==NULL)

  00056	83 7d f8 00	 cmp	 DWORD PTR _pGameMatchInsert$[ebp], 0
  0005a	75 21		 jne	 SHORT $LN4@InsertMatc

; 89   : 		{
; 90   : 			ASSERT(FALSE);

  0005c	33 c0		 xor	 eax, eax
  0005e	75 19		 jne	 SHORT $LN7@InsertMatc
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU3@@Z@4JA
  00066	83 c1 11	 add	 ecx, 17			; 00000011H
  00069	51		 push	 ecx
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN7@InsertMatc
  00078	cc		 int	 3
$LN7@InsertMatc:

; 91   : 			return NULL;

  00079	33 c0		 xor	 eax, eax
  0007b	eb 27		 jmp	 SHORT $LN1@InsertMatc
$LN4@InsertMatc:

; 92   : 		}
; 93   : 
; 94   : 		//添加数据
; 95   : 		m_GameMatchOptionArray.Add(pGameMatchInsert);

  0007d	8d 45 f8	 lea	 eax, DWORD PTR _pGameMatchInsert$[ebp]
  00080	50		 push	 eax
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	83 c1 04	 add	 ecx, 4
  00087	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABQAUtagGameMatchOption@@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Add
$LN3@InsertMatc:

; 96   : 	}
; 97   : 
; 98   : 	//拷贝数据	
; 99   : 	CopyMemory(pGameMatchInsert,pGameMatchOption,sizeof(tagGameMatchOption));

  0008c	68 c8 02 00 00	 push	 712			; 000002c8H
  00091	8b 45 08	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00094	50		 push	 eax
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _pGameMatchInsert$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 _memcpy
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 100  : 
; 101  : 	return pGameMatchInsert;

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _pGameMatchInsert$[ebp]
$LN1@InsertMatc:

; 102  : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z ENDP ; CMatchInfoBuffer::InsertMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?DeleteMatchOption@CMatchInfoBuffer@@QAE_NK@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_pGameMatchOption$ = -8					; size = 4
_this$ = -4						; size = 4
_dwMatchID$ = 8						; size = 4
?DeleteMatchOption@CMatchInfoBuffer@@QAE_NK@Z PROC	; CMatchInfoBuffer::DeleteMatchOption, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 48   : 	//变量定义
; 49   : 	tagGameMatchOption * pGameMatchOption=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameMatchOption$[ebp], 0

; 50   : 
; 51   : 	//查找对象
; 52   : 	for(INT_PTR i=0;i<m_GameMatchOptionArray.GetCount();i++)

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@DeleteMatc
$LN2@DeleteMatc:
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@DeleteMatc:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 04	 add	 ecx, 4
  0002b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
  00030	39 45 f4	 cmp	 DWORD PTR _i$1[ebp], eax
  00033	7d 55		 jge	 SHORT $LN3@DeleteMatc

; 53   : 	{
; 54   : 		pGameMatchOption=m_GameMatchOptionArray[i];

  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 04	 add	 ecx, 4
  0003f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 4d f8	 mov	 DWORD PTR _pGameMatchOption$[ebp], ecx

; 55   : 		if(pGameMatchOption->dwMatchID==dwMatchID)

  00049	8b 45 f8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	3b 4d 08	 cmp	 ecx, DWORD PTR _dwMatchID$[ebp]
  00051	75 35		 jne	 SHORT $LN5@DeleteMatc

; 56   : 		{
; 57   : 			//删除数据
; 58   : 			m_GameMatchOptionArray.RemoveAt(i);

  00053	6a 01		 push	 1
  00055	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00058	50		 push	 eax
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	83 c1 04	 add	 ecx, 4
  0005f	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAt

; 59   : 			m_GameMatchOptionBuffer.Add(pGameMatchOption);

  00064	8d 45 f8	 lea	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00067	50		 push	 eax
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	83 c1 18	 add	 ecx, 24			; 00000018H
  0006e	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABQAUtagGameMatchOption@@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Add

; 60   : 
; 61   : 			//设置变量
; 62   : 			ZeroMemory(pGameMatchOption,sizeof(tagGameMatchOption));

  00073	68 c8 02 00 00	 push	 712			; 000002c8H
  00078	6a 00		 push	 0
  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 _memset
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   : 
; 64   : 			break;

  00086	eb 02		 jmp	 SHORT $LN3@DeleteMatc
$LN5@DeleteMatc:

; 65   : 		}
; 66   : 	}	

  00088	eb 92		 jmp	 SHORT $LN2@DeleteMatc
$LN3@DeleteMatc:

; 67   : 
; 68   : 	return true;

  0008a	b0 01		 mov	 al, 1

; 69   : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?DeleteMatchOption@CMatchInfoBuffer@@QAE_NK@Z ENDP	; CMatchInfoBuffer::DeleteMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?ResetMatchOption@CMatchInfoBuffer@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetMatchOption@CMatchInfoBuffer@@QAE_NXZ PROC	; CMatchInfoBuffer::ResetMatchOption, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 36   : 	//添加对象
; 37   : 	m_GameMatchOptionBuffer.Append(m_GameMatchOptionArray);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 18	 add	 ecx, 24			; 00000018H
  00019	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Append

; 38   : 
; 39   : 	//删除元素
; 40   : 	m_GameMatchOptionArray.RemoveAll();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 04	 add	 ecx, 4
  00024	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAll

; 41   : 
; 42   : 	return true;

  00029	b0 01		 mov	 al, 1

; 43   : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?ResetMatchOption@CMatchInfoBuffer@@QAE_NXZ ENDP	; CMatchInfoBuffer::ResetMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ??1CMatchInfoBuffer@@UAE@XZ
_TEXT	SEGMENT
$T2 = -96						; size = 4
_i$3 = -28						; size = 4
_pGameMatchOption$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CMatchInfoBuffer@@UAE@XZ PROC			; CMatchInfoBuffer::~CMatchInfoBuffer, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMatchInfoBuffer@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 50	 sub	 esp, 80			; 00000050H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoBuffer@@6B@
  00038	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1

; 15   : 	//变量定义
; 16   : 	tagGameMatchOption * pGameMatchOption=NULL;

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameMatchOption$[ebp], 0

; 17   : 
; 18   : 	//删除数组
; 19   : 	m_GameMatchOptionBuffer.Append(m_GameMatchOptionArray);

  00046	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00049	83 c0 04	 add	 eax, 4
  0004c	50		 push	 eax
  0004d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 18	 add	 ecx, 24			; 00000018H
  00053	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Append

; 20   : 	for (INT_PTR i=0;i<m_GameMatchOptionBuffer.GetCount();i++)

  00058	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  0005f	eb 09		 jmp	 SHORT $LN4@CMatchInfo
$LN2@CMatchInfo:
  00061	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  00064	83 c0 01	 add	 eax, 1
  00067	89 45 e4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@CMatchInfo:
  0006a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	83 c1 18	 add	 ecx, 24			; 00000018H
  00070	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
  00075	39 45 e4	 cmp	 DWORD PTR _i$3[ebp], eax
  00078	7d 70		 jge	 SHORT $LN3@CMatchInfo

; 21   : 	{
; 22   : 		pGameMatchOption=m_GameMatchOptionBuffer[i];

  0007a	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	83 c1 18	 add	 ecx, 24			; 00000018H
  00084	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	89 4d e8	 mov	 DWORD PTR _pGameMatchOption$[ebp], ecx

; 23   : 		SafeDelete(pGameMatchOption);

  0008e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00092	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00095	89 45 a0	 mov	 DWORD PTR $T2[ebp], eax
  00098	68 c8 02 00 00	 push	 712			; 000002c8H
  0009d	8b 4d a0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a6	83 c4 08	 add	 esp, 8
  000a9	eb 23		 jmp	 SHORT $LN8@CMatchInfo
__catch$??1CMatchInfoBuffer@@UAE@XZ$0:
  000ab	33 c0		 xor	 eax, eax
  000ad	75 19		 jne	 SHORT $LN7@CMatchInfo
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CMatchInfoBuffer@@UAE@XZ@4JA
  000b5	83 c1 09	 add	 ecx, 9
  000b8	51		 push	 ecx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@MBAAFFLP@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000be	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c3	85 c0		 test	 eax, eax
  000c5	74 01		 je	 SHORT $LN7@CMatchInfo
  000c7	cc		 int	 3
$LN7@CMatchInfo:
  000c8	b8 00 00 00 00	 mov	 eax, $LN13@CMatchInfo
  000cd	c3		 ret	 0
$LN8@CMatchInfo:
  000ce	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  000d5	eb 07		 jmp	 SHORT __tryend$??1CMatchInfoBuffer@@UAE@XZ$1
$LN13@CMatchInfo:
  000d7	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??1CMatchInfoBuffer@@UAE@XZ$1:
  000de	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameMatchOption$[ebp], 0

; 24   : 	}

  000e5	e9 77 ff ff ff	 jmp	 $LN2@CMatchInfo
$LN3@CMatchInfo:

; 25   : 
; 26   : 	//删除引用
; 27   : 	m_GameMatchOptionArray.RemoveAll();

  000ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	83 c1 04	 add	 ecx, 4
  000f0	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAll

; 28   : 	m_GameMatchOptionBuffer.RemoveAll();

  000f5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	83 c1 18	 add	 ecx, 24			; 00000018H
  000fb	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAll

; 29   : 
; 30   : 	return;
; 31   : }

  00100	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00104	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	83 c1 18	 add	 ecx, 24			; 00000018H
  0010a	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  0010f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	83 c1 04	 add	 ecx, 4
  0011c	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  00121	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00124	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012b	59		 pop	 ecx
  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMatchInfoBuffer@@UAE@XZ$2:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
__unwindfunclet$??1CMatchInfoBuffer@@UAE@XZ$3:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 18	 add	 ecx, 24			; 00000018H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
__ehhandler$??1CMatchInfoBuffer@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMatchInfoBuffer@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMatchInfoBuffer@@UAE@XZ ENDP			; CMatchInfoBuffer::~CMatchInfoBuffer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ??0CMatchInfoBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMatchInfoBuffer@@QAE@XZ PROC			; CMatchInfoBuffer::CMatchInfoBuffer, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CMatchInfoBuffer@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoBuffer@@6B@
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 18	 add	 ecx, 24			; 00000018H
  0004c	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>

; 10   : }

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMatchInfoBuffer@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
__ehhandler$??0CMatchInfoBuffer@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CMatchInfoBuffer@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CMatchInfoBuffer@@QAE@XZ ENDP			; CMatchInfoBuffer::CMatchInfoBuffer
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHABQAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHABQAUtagGameMatchOption@@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHABQAUtagGameMatchOption@@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABV1@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABV1@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABQAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABQAUtagGameMatchOption@@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEXHABQAUtagGameMatchOption@@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEHABQAUtagGameMatchOption@@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 08 01 00 00	 push	 264			; 00000108H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 08 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 264
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 11		 je	 SHORT $LN4@vector
  0008a	68 08 01 00 00	 push	 264			; 00000108H
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00098	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 08 01 00 00	 push	 264			; 00000108H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleDBParameter@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z PROC		; CModuleDBParameter::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0000f	83 c6 04	 add	 esi, 4
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	83 c7 04	 add	 edi, 4
  00018	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00024	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  0002a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0002d	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00033	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00038	f3 a5		 rep movsd
  0003a	66 a5		 movsw
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z ENDP		; CModuleDBParameter::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleDBParameter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleDBParameter@@QAE@ABV0@@Z PROC			; CModuleDBParameter::CModuleDBParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleDBParameter@@6B@
  00015	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00018	83 c6 04	 add	 esi, 4
  0001b	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0001e	83 c7 04	 add	 edi, 4
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f3 a5		 rep movsd
  00028	66 a5		 movsw
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  00033	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00036	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  0003c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00041	f3 a5		 rep movsd
  00043	66 a5		 movsw
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0CModuleDBParameter@@QAE@ABV0@@Z ENDP			; CModuleDBParameter::CModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ
_TEXT	SEGMENT
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ PROC ; CModuleDBParameter::GetModuleDBParameter, COMDAT

; 46   : 	static CModuleDBParameter * GetModuleDBParameter() { return m_pModuleDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A ; CModuleDBParameter::m_pModuleDBParameter
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ENDP ; CModuleDBParameter::GetModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameMatchDBParameter$ = 8				; size = 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 41   : 	VOID SetGameMatchDBParameter(tagDataBaseParameter & GameMatchDBParameter) { m_GameMatchDBParameter=GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	8b 75 08	 mov	 esi, DWORD PTR _GameMatchDBParameter$[ebp]
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 39   : 	tagDataBaseParameter * GetGameMatchDBParameter() { return &m_GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 86 00 00 00	 add	 eax, 134		; 00000086H
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PlatformDBParameter$ = 8				; size = 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetPlatformDBParameter, COMDAT
; _this$ = ecx

; 34   : 	VOID SetPlatformDBParameter(tagDataBaseParameter & PlatformDBParameter) { m_PlatformDBParameter=PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	83 c7 04	 add	 edi, 4
  00012	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00017	8b 75 08	 mov	 esi, DWORD PTR _PlatformDBParameter$[ebp]
  0001a	f3 a5		 rep movsd
  0001c	66 a5		 movsw
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetPlatformDBParameter, COMDAT
; _this$ = ecx

; 32   : 	tagDataBaseParameter * GetPlatformDBParameter() { return &m_PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDataBaseHelper@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDataBaseHelper@@UAEPAXI@Z PROC			; CDataBaseHelper::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCDataBaseHelper@@UAEPAXI@Z ENDP			; CDataBaseHelper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1CDataBaseHelper@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDataBaseHelper@@UAE@XZ PROC				; CDataBaseHelper::~CDataBaseHelper, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CDataBaseHelper@@UAE@XZ ENDP				; CDataBaseHelper::~CDataBaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\kernelenginehead.h
;	COMDAT ??0CDataBaseHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDataBaseHelper@@QAE@XZ PROC				; CDataBaseHelper::CDataBaseHelper, COMDAT
; _this$ = ecx

; 842  : DECLARE_MODULE_HELPER(DataBase, KERNEL_ENGINE_DLL_NAME, "CreateDataBase")

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IKJBDFNG@CreateDataBase@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BEMLEOHB@KernelEngine?4dll@
  00016	68 00 01 01 06	 push	 100729088		; 06010100H
  0001b	68 00 00 00 00	 push	 OFFSET ?IID_IDataBase@@3U_GUID@@B
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDataBaseHelper@@6B@
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0CDataBaseHelper@@QAE@XZ ENDP				; CDataBaseHelper::CDataBaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z PROC	; CTempldateHelper<IDataBase>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z ENDP	; CTempldateHelper<IDataBase>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ PROC ; CTempldateHelper<IDataBase>::GetInterface, COMDAT
; _this$ = ecx

; 316  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	return m_pIModeluInterface; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]

; 318  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ENDP ; CTempldateHelper<IDataBase>::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ PROC ; CTempldateHelper<IDataBase>::operator->, COMDAT
; _this$ = ecx

; 309  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	return GetInterface(); 

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface

; 311  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ENDP ; CTempldateHelper<IDataBase>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
_TEXT	SEGMENT
tv173 = -100						; size = 4
tv172 = -100						; size = 4
tv171 = -100						; size = 4
tv170 = -100						; size = 4
$T2 = -94						; size = 1
$T3 = -93						; size = 1
_pszError$4 = -28					; size = 4
_CreateProc$5 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ PROC ; CTempldateHelper<IDataBase>::CreateInstance, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	//释放组件
; 214  : 	CloseInstance();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance

; 215  : 
; 216  : 	//创建组件
; 217  : 	try

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 218  : 	{
; 219  : 		//效验参数
; 220  : 		ASSERT(m_szCreateProc[0]!=0);

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	6b c8 00	 imul	 ecx, eax, 0
  00046	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00049	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  0004e	85 c0		 test	 eax, eax
  00050	75 19		 jne	 SHORT $LN7@CreateInst
  00052	68 dc 00 00 00	 push	 220			; 000000dcH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00061	89 45 9c	 mov	 DWORD PTR tv170[ebp], eax
  00064	83 7d 9c 00	 cmp	 DWORD PTR tv170[ebp], 0
  00068	74 01		 je	 SHORT $LN7@CreateInst
  0006a	cc		 int	 3
$LN7@CreateInst:

; 221  : 		ASSERT(m_szModuleDllName[0]!=0);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	0f be 44 0a 4c	 movsx	 eax, BYTE PTR [edx+ecx+76]
  0007b	85 c0		 test	 eax, eax
  0007d	75 19		 jne	 SHORT $LN8@CreateInst
  0007f	68 dd 00 00 00	 push	 221			; 000000ddH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	89 45 9c	 mov	 DWORD PTR tv171[ebp], eax
  00091	83 7d 9c 00	 cmp	 DWORD PTR tv171[ebp], 0
  00095	74 01		 je	 SHORT $LN8@CreateInst
  00097	cc		 int	 3
$LN8@CreateInst:

; 222  : 
; 223  : 		//加载模块
; 224  : 		m_hDllInstance=AfxLoadLibrary(m_szModuleDllName);

  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	83 c0 4c	 add	 eax, 76			; 0000004cH
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z ; AfxLoadLibrary
  000a4	89 45 9c	 mov	 DWORD PTR tv172[ebp], eax
  000a7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 55 9c	 mov	 edx, DWORD PTR tv172[ebp]
  000ad	89 91 50 01 00
	00		 mov	 DWORD PTR [ecx+336], edx

; 225  : 		if (m_hDllInstance==NULL) 

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  000bd	75 2a		 jne	 SHORT $LN3@CreateInst

; 226  : 		{
; 227  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("“%s”模块加载失败"),m_szModuleDllName);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	83 c0 4c	 add	 eax, 76			; 0000004cH
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
  000cb	68 80 00 00 00	 push	 128			; 00000080H
  000d0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 228  : 			return false;

  000e2	32 c0		 xor	 al, al
  000e4	e9 34 01 00 00	 jmp	 $LN1@CreateInst
$LN3@CreateInst:

; 229  : 		}
; 230  : 
; 231  : 		//寻找函数
; 232  : 		ModuleCreateProc * CreateProc=(ModuleCreateProc *)GetProcAddress(m_hDllInstance,m_szCreateProc);

  000e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	83 c0 0c	 add	 eax, 12			; 0000000cH
  000ef	50		 push	 eax
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  000f9	52		 push	 edx
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00100	89 45 e8	 mov	 DWORD PTR _CreateProc$5[ebp], eax

; 233  : 		if (CreateProc==NULL) 

  00103	83 7d e8 00	 cmp	 DWORD PTR _CreateProc$5[ebp], 0
  00107	75 31		 jne	 SHORT $LN4@CreateInst

; 234  : 		{		
; 235  : 			_sntprintf_s(m_szDescribe, CountArray(m_szDescribe), TEXT("找不到组件创建函数“%s”:%d"), m_szCreateProc, GetLastError());

  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0010f	50		 push	 eax
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	83 c0 0c	 add	 eax, 12			; 0000000cH
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
  0011c	68 80 00 00 00	 push	 128			; 00000080H
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00130	83 c4 14	 add	 esp, 20			; 00000014H

; 236  : 			return false;

  00133	32 c0		 xor	 al, al
  00135	e9 e3 00 00 00	 jmp	 $LN1@CreateInst
$LN4@CreateInst:

; 237  : 		}
; 238  : 
; 239  : 		//创建组件
; 240  : 		m_pIModeluInterface=(IModeluInterface *)CreateProc(m_Guid,m_dwVersion);

  0013a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00140	51		 push	 ecx
  00141	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00144	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00147	50		 push	 eax
  00148	ff 55 e8	 call	 DWORD PTR _CreateProc$5[ebp]
  0014b	83 c4 08	 add	 esp, 8
  0014e	89 45 9c	 mov	 DWORD PTR tv173[ebp], eax
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 55 9c	 mov	 edx, DWORD PTR tv173[ebp]
  00157	89 91 54 01 00
	00		 mov	 DWORD PTR [ecx+340], edx

; 241  : 		if (m_pIModeluInterface==NULL) 

  0015d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00160	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00167	75 2a		 jne	 SHORT $LN5@CreateInst

; 242  : 		{
; 243  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("调用函数“%s”生成对象失败"),m_szCreateProc);

  00169	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
  00175	68 80 00 00 00	 push	 128			; 00000080H
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00189	83 c4 10	 add	 esp, 16			; 00000010H

; 244  : 			return false;

  0018c	32 c0		 xor	 al, al
  0018e	e9 8a 00 00 00	 jmp	 $LN1@CreateInst
$LN5@CreateInst:

; 245  : 		}
; 246  : 	}

  00193	eb 63		 jmp	 SHORT $LN9@CreateInst
__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$0:

; 247  : 	catch (LPCTSTR pszError)
; 248  : 	{
; 249  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("由于“%s”，组件创建失败"),pszError);

  00195	8b 45 e4	 mov	 eax, DWORD PTR _pszError$4[ebp]
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  0019e	68 80 00 00 00	 push	 128			; 00000080H
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001ac	51		 push	 ecx
  001ad	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001b2	83 c4 10	 add	 esp, 16			; 00000010H

; 250  : 		return false;

  001b5	c6 45 a3 00	 mov	 BYTE PTR $T3[ebp], 0
  001b9	b8 00 00 00 00	 mov	 eax, $LN13@CreateInst
  001be	c3		 ret	 0

; 251  : 	}

  001bf	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001c4	c3		 ret	 0
__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$1:

; 252  : 	catch (...)	
; 253  : 	{ 
; 254  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("组件创建函数“%s”产生未知异常错误，组件创建失败"),m_szCreateProc);

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  001cb	50		 push	 eax
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
  001d1	68 80 00 00 00	 push	 128			; 00000080H
  001d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001df	51		 push	 ecx
  001e0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001e5	83 c4 10	 add	 esp, 16			; 00000010H

; 255  : 		return false;

  001e8	c6 45 a2 00	 mov	 BYTE PTR $T2[ebp], 0
  001ec	b8 00 00 00 00	 mov	 eax, $LN15@CreateInst
  001f1	c3		 ret	 0

; 256  : 	}

  001f2	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001f7	c3		 ret	 0
$LN9@CreateInst:
  001f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ff	eb 0c		 jmp	 SHORT $LN14@CreateInst
$LN15@CreateInst:
  00201	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 255  : 		return false;

  00208	8a 45 a2	 mov	 al, BYTE PTR $T2[ebp]
  0020b	eb 10		 jmp	 SHORT $LN1@CreateInst
$LN14@CreateInst:
  0020d	eb 0c		 jmp	 SHORT $LN12@CreateInst
$LN13@CreateInst:
  0020f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 250  : 		return false;

  00216	8a 45 a3	 mov	 al, BYTE PTR $T3[ebp]
  00219	eb 02		 jmp	 SHORT $LN1@CreateInst
$LN12@CreateInst:

; 257  : 
; 258  : 	return true;

  0021b	b0 01		 mov	 al, 1
$LN1@CreateInst:

; 259  : }

  0021d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00220	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00227	59		 pop	 ecx
  00228	5f		 pop	 edi
  00229	5e		 pop	 esi
  0022a	5b		 pop	 ebx
  0022b	8b e5		 mov	 esp, ebp
  0022d	5d		 pop	 ebp
  0022e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ENDP ; CTempldateHelper<IDataBase>::CreateInstance
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ PROC ; CTempldateHelper<IDataBase>::CloseInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//设置变量
; 266  : 	m_szDescribe[0]=0;

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 267  : 
; 268  : 	//销毁对象
; 269  : 	if (m_pIModeluInterface!=NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00029	74 25		 je	 SHORT $LN2@CloseInsta

; 270  : 	{
; 271  : 		m_pIModeluInterface->Release();

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 8a 54 01 00
	00		 mov	 ecx, DWORD PTR [edx+340]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	ff d2		 call	 edx

; 272  : 		m_pIModeluInterface=NULL;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0
$LN2@CloseInsta:

; 273  : 	}
; 274  : 
; 275  : 	//释放 DLL
; 276  : 	if (m_hDllInstance!=NULL)

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  0005a	74 1c		 je	 SHORT $LN3@CloseInsta

; 277  : 	{
; 278  : 		AfxFreeLibrary(m_hDllInstance);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z ; AfxFreeLibrary

; 279  : 		m_hDllInstance=NULL;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0
$LN3@CloseInsta:

; 280  : 	}
; 281  : 
; 282  : 	return true;

  00078	b0 01		 mov	 al, 1

; 283  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ENDP ; CTempldateHelper<IDataBase>::CloseInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ PROC		; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIDataBase@@@@6B@

; 206  : 	CloseInstance();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance

; 207  : }

  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00046	59		 pop	 ecx
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ENDP		; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwVersion$ = 12					; size = 4
_pszModuleDll$ = 16					; size = 4
_pszCreateProc$ = 20					; size = 4
??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z PROC ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>, COMDAT
; _this$ = ecx

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIDataBase@@@@6B@

; 186  : CTempldateHelper<IModeluInterface>::CTempldateHelper(REFGUID Guid, DWORD dwVersion, LPCTSTR pszModuleDll, LPCSTR pszCreateProc) : m_dwVersion(dwVersion), m_Guid(Guid)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _dwVersion$[ebp]
  00024	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 188  : 	//辅助变量
; 189  : 	m_szDescribe[0]=0;

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 190  : 
; 191  : 	//内核信息
; 192  : 	m_hDllInstance=NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0

; 193  : 	m_pIModeluInterface=NULL;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 194  : 
; 195  : 	//组件属性
; 196  : 	lstrcpynA(m_szCreateProc,pszCreateProc,CountArray(m_szCreateProc));

  00054	6a 40		 push	 64			; 00000040H
  00056	8b 45 14	 mov	 eax, DWORD PTR _pszCreateProc$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00060	51		 push	 ecx
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 197  : 	lstrcpyn(m_szModuleDllName,pszModuleDll,CountArray(m_szModuleDllName));

  00067	68 04 01 00 00	 push	 260			; 00000104H
  0006c	8b 45 10	 mov	 eax, DWORD PTR _pszModuleDll$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00076	51		 push	 ecx
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 198  : 
; 199  : 	return;
; 200  : }

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 10 00	 ret	 16			; 00000010H
??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ENDP ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\matchinfomanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
