; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\模块管理\DlgServerWizard.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?OnSize@CDlgServerOptionItem@@AAEXIHH@Z		; CDlgServerOptionItem::OnSize
PUBLIC	?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem::GetThisMessageMap
PUBLIC	?OnSelchangeServerType@CDlgServerOptionItem1@@IAEXXZ ; CDlgServerOptionItem1::OnSelchangeServerType
PUBLIC	?OnSelchangeServerKind@CDlgServerOptionItem1@@IAEXXZ ; CDlgServerOptionItem1::OnSelchangeServerKind
PUBLIC	?OnSelchangePersonalSqlType@CDlgServerOptionItem1@@IAEXXZ ; CDlgServerOptionItem1::OnSelchangePersonalSqlType
PUBLIC	?OnBnClickedRevenueRadio@CDlgServerOptionItem1@@QAEXXZ ; CDlgServerOptionItem1::OnBnClickedRevenueRadio
PUBLIC	?OnBnClickedServiceRadio@CDlgServerOptionItem1@@QAEXXZ ; CDlgServerOptionItem1::OnBnClickedServiceRadio
PUBLIC	?OnBnClickedJoinGameRadio@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnBnClickedJoinGameRadio
PUBLIC	?OnBnClickedNotJoinRadio@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnBnClickedNotJoinRadio
PUBLIC	?OnSelChangeGameMode1@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnSelChangeGameMode1
PUBLIC	?OnSelChangeGameMode2@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnSelChangeGameMode2
PUBLIC	?OnSelChangeGameMode3@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnSelChangeGameMode3
PUBLIC	?OnSelChangeGameMode4@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnSelChangeGameMode4
PUBLIC	?OnSelChangeGameMode5@CDlgServerOptionItem5@@QAEXXZ ; CDlgServerOptionItem5::OnSelChangeGameMode5
PUBLIC	?OnNcDestroy@CDlgServerOptionItemCustom@@AAEXXZ	; CDlgServerOptionItemCustom::OnNcDestroy
PUBLIC	?OnSetFocus@CDlgServerOptionItemCustom@@AAEXPAVCWnd@@@Z ; CDlgServerOptionItemCustom::OnSetFocus
PUBLIC	?OnNcDestroy@CDlgServerOptionItemPersonal@@AAEXXZ ; CDlgServerOptionItemPersonal::OnNcDestroy
PUBLIC	?OnSetFocus@CDlgServerOptionItemPersonal@@AAEXPAVCWnd@@@Z ; CDlgServerOptionItemPersonal::OnSetFocus
PUBLIC	?OnSize@CDlgServerWizardItem@@AAEXIHH@Z		; CDlgServerWizardItem::OnSize
PUBLIC	?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem::GetThisMessageMap
PUBLIC	?OnNMDblclkModuleList@CDlgServerWizardItem1@@IAEXPAUtagNMHDR@@PAJ@Z ; CDlgServerWizardItem1::OnNMDblclkModuleList
PUBLIC	?OnSetFocus@CDlgServerWizardItem2@@IAEXPAVCWnd@@@Z ; CDlgServerWizardItem2::OnSetFocus
PUBLIC	?OnTcnSelchangeTabCtrl@CDlgServerWizardItem2@@IAEXPAUtagNMHDR@@PAJ@Z ; CDlgServerWizardItem2::OnTcnSelchangeTabCtrl
PUBLIC	?OnBnClickedLast@CDlgServerWizard@@QAEXXZ	; CDlgServerWizard::OnBnClickedLast
PUBLIC	?OnBnClickedNext@CDlgServerWizard@@QAEXXZ	; CDlgServerWizard::OnBnClickedNext
PUBLIC	?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ	; CDlgServerWizard::OnBnClickedFinish
EXTRN	?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ:PROC ; CDialog::GetThisMessageMap
CONST	SEGMENT
?szTreasureDB@@3QBDB DB 'QPTreasureDB', 00H		; szTreasureDB
	ORG $+3
?szGameMatchDB@@3QBDB DB 'QPGameMatchDB', 00H		; szGameMatchDB
	ORG $+2
?szGameScoreDB@@3QBDB DB 'QPGameScoreDB', 00H		; szGameScoreDB
	ORG $+2
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IGameServiceCustomRule@@3U_GUID@@B DD 0c7ace01dH	; IID_IGameServiceCustomRule
	DW	075f8H
	DW	04af7H
	DB	0b1H
	DB	080H
	DB	0a8H
	DB	053H
	DB	0cdH
	DB	02eH
	DB	0aH
	DB	0b6H
?IID_IGameServicePersonalRule@@3U_GUID@@B DD 0bb76044fH	; IID_IGameServicePersonalRule
	DW	0388eH
	DW	04bd7H
	DB	0a0H
	DB	015H
	DB	0b0H
	DB	09bH
	DB	093H
	DB	04bH
	DB	09fH
	DB	09aH
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 05H ; `CDlgServerOptionItem::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	01aH
	DD	FLAT:?OnSize@CDlgServerOptionItem@@AAEXIHH@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItem::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 05H ; `CDlgServerWizardItem::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	01aH
	DD	FLAT:?OnSize@CDlgServerWizardItem@@AAEXIHH@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerWizardItem::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgServerOptionItem1::GetThisMessageMap'::`2'::_messageEntries
	DD	01H
	DD	03f0H
	DD	03f0H
	DD	03aH
	DD	FLAT:?OnSelchangeServerType@CDlgServerOptionItem1@@IAEXXZ
	DD	0111H
	DD	01H
	DD	03f1H
	DD	03f1H
	DD	03aH
	DD	FLAT:?OnSelchangeServerKind@CDlgServerOptionItem1@@IAEXXZ
	DD	0111H
	DD	01H
	DD	03fbH
	DD	03fbH
	DD	03aH
	DD	FLAT:?OnSelchangePersonalSqlType@CDlgServerOptionItem1@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0403H
	DD	0403H
	DD	03aH
	DD	FLAT:?OnBnClickedRevenueRadio@CDlgServerOptionItem1@@QAEXXZ
	DD	0111H
	DD	00H
	DD	02340H
	DD	02340H
	DD	03aH
	DD	FLAT:?OnBnClickedServiceRadio@CDlgServerOptionItem1@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItem1::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 00H ; `CDlgServerOptionItem2::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItem2::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 00H ; `CDlgServerOptionItem3::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItem3::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 07H ; `CDlgServerOptionItemCustom::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	024H
	DD	FLAT:?OnSetFocus@CDlgServerOptionItemCustom@@AAEXPAVCWnd@@@Z
	DD	082H
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnNcDestroy@CDlgServerOptionItemCustom@@AAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItemCustom::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 07H ; `CDlgServerOptionItemPersonal::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	024H
	DD	FLAT:?OnSetFocus@CDlgServerOptionItemPersonal@@AAEXPAVCWnd@@@Z
	DD	082H
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnNcDestroy@CDlgServerOptionItemPersonal@@AAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItemPersonal::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 04eH ; `CDlgServerWizardItem1::GetThisMessageMap'::`2'::_messageEntries
	DD	0fffdH
	DD	03eaH
	DD	03eaH
	DD	03eH
	DD	FLAT:?OnNMDblclkModuleList@CDlgServerWizardItem1@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerWizardItem1::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 07H ; `CDlgServerWizardItem2::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	024H
	DD	FLAT:?OnSetFocus@CDlgServerWizardItem2@@IAEXPAVCWnd@@@Z
	DD	04eH
	DD	0fdd9H
	DD	02337H
	DD	02337H
	DD	03eH
	DD	FLAT:?OnTcnSelchangeTabCtrl@CDlgServerWizardItem2@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerWizardItem2::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgServerOptionItem5::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	02340H
	DD	02340H
	DD	03aH
	DD	FLAT:?OnBnClickedJoinGameRadio@CDlgServerOptionItem5@@QAEXXZ
	DD	0111H
	DD	00H
	DD	02345H
	DD	02345H
	DD	03aH
	DD	FLAT:?OnBnClickedNotJoinRadio@CDlgServerOptionItem5@@QAEXXZ
	DD	0111H
	DD	01H
	DD	02371H
	DD	02371H
	DD	03aH
	DD	FLAT:?OnSelChangeGameMode1@CDlgServerOptionItem5@@QAEXXZ
	DD	0111H
	DD	01H
	DD	02372H
	DD	02372H
	DD	03aH
	DD	FLAT:?OnSelChangeGameMode2@CDlgServerOptionItem5@@QAEXXZ
	DD	0111H
	DD	01H
	DD	02373H
	DD	02373H
	DD	03aH
	DD	FLAT:?OnSelChangeGameMode3@CDlgServerOptionItem5@@QAEXXZ
	DD	0111H
	DD	01H
	DD	02374H
	DD	02374H
	DD	03aH
	DD	FLAT:?OnSelChangeGameMode4@CDlgServerOptionItem5@@QAEXXZ
	DD	0111H
	DD	01H
	DD	02375H
	DD	02375H
	DD	03aH
	DD	FLAT:?OnSelChangeGameMode5@CDlgServerOptionItem5@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerOptionItem5::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgServerWizard::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	0429H
	DD	0429H
	DD	03aH
	DD	FLAT:?OnBnClickedLast@CDlgServerWizard@@QAEXXZ
	DD	0111H
	DD	00H
	DD	042bH
	DD	042bH
	DD	03aH
	DD	FLAT:?OnBnClickedNext@CDlgServerWizard@@QAEXXZ
	DD	0111H
	DD	00H
	DD	0434H
	DD	0434H
	DD	03aH
	DD	FLAT:?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerWizard::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAX@Z			; __global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAXI@Z			; __global_delete
PUBLIC	?__global_array_delete@@YAXPAX@Z		; __global_array_delete
PUBLIC	?__global_array_delete@@YAXPAXI@Z		; __global_array_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	__snprintf
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	_wmemcpy
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??0CreateRoomPayFee@@QAE@XZ			; CreateRoomPayFee::CreateRoomPayFee
PUBLIC	??0tagPersonalRoomOptionRightAndFee@@QAE@XZ	; tagPersonalRoomOptionRightAndFee::tagPersonalRoomOptionRightAndFee
PUBLIC	??0tagPersonalGeneralRule@@QAE@XZ		; tagPersonalGeneralRule::tagPersonalGeneralRule
PUBLIC	??0tagPersonalRule@@QAE@XZ			; tagPersonalRule::tagPersonalRule
PUBLIC	?IsForfendGameChat@CServerRule@@SA_NK@Z		; CServerRule::IsForfendGameChat
PUBLIC	?IsForfendRoomChat@CServerRule@@SA_NK@Z		; CServerRule::IsForfendRoomChat
PUBLIC	?IsForfendWisperChat@CServerRule@@SA_NK@Z	; CServerRule::IsForfendWisperChat
PUBLIC	?IsForfendWisperOnGame@CServerRule@@SA_NK@Z	; CServerRule::IsForfendWisperOnGame
PUBLIC	?IsAllowDynamicJoin@CServerRule@@SA_NK@Z	; CServerRule::IsAllowDynamicJoin
PUBLIC	?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z	; CServerRule::IsAllowOffLineTrustee
PUBLIC	?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAvertCheatMode
PUBLIC	?IsRecordGameScore@CServerRule@@SA_NK@Z		; CServerRule::IsRecordGameScore
PUBLIC	?IsRecordGameTrack@CServerRule@@SA_NK@Z		; CServerRule::IsRecordGameTrack
PUBLIC	?IsDynamicCellScore@CServerRule@@SA_NK@Z	; CServerRule::IsDynamicCellScore
PUBLIC	?IsImmediateWriteScore@CServerRule@@SA_NK@Z	; CServerRule::IsImmediateWriteScore
PUBLIC	?IsForfendRoomEnter@CServerRule@@SA_NK@Z	; CServerRule::IsForfendRoomEnter
PUBLIC	?IsForfendGameEnter@CServerRule@@SA_NK@Z	; CServerRule::IsForfendGameEnter
PUBLIC	?IsForfendGameLookon@CServerRule@@SA_NK@Z	; CServerRule::IsForfendGameLookon
PUBLIC	?IsForfendSaveInRoom@CServerRule@@SA_NK@Z	; CServerRule::IsForfendSaveInRoom
PUBLIC	?IsForfendSaveInGame@CServerRule@@SA_NK@Z	; CServerRule::IsForfendSaveInGame
PUBLIC	?IsForfendGameRule@CServerRule@@SA_NK@Z		; CServerRule::IsForfendGameRule
PUBLIC	?IsForfendLockTable@CServerRule@@SA_NK@Z	; CServerRule::IsForfendLockTable
PUBLIC	?IsAllowAndroidAttend@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidAttend
PUBLIC	?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidSimulate
PUBLIC	?SetForfendGameChat@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameChat
PUBLIC	?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendRoomChat
PUBLIC	?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendWisperChat
PUBLIC	?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendWisperOnGame
PUBLIC	?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowDynamicJoin
PUBLIC	?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowOffLineTrustee
PUBLIC	?SetAllowAvertCheatMode@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowAvertCheatMode
PUBLIC	?SetRecordGameScore@CServerRule@@SAXAAK_N@Z	; CServerRule::SetRecordGameScore
PUBLIC	?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z	; CServerRule::SetRecordGameTrack
PUBLIC	?SetDynamicCellScore@CServerRule@@SAXAAK_N@Z	; CServerRule::SetDynamicCellScore
PUBLIC	?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z	; CServerRule::SetImmediateWriteScore
PUBLIC	?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendRoomEnter
PUBLIC	?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameEnter
PUBLIC	?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameLookon
PUBLIC	?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendSaveInRoom
PUBLIC	?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendSaveInGame
PUBLIC	?SetForfendGameRule@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendGameRule
PUBLIC	?SetForfendLockTable@CServerRule@@SAXAAK_N@Z	; CServerRule::SetForfendLockTable
PUBLIC	?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z	; CServerRule::SetAllowAndroidAttend
PUBLIC	?SetAllowAndroidSimulate@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowAndroidSimulate
PUBLIC	?IsSuportMobile@CServerRule@@SA_NK@Z		; CServerRule::IsSuportMobile
PUBLIC	?IsSuportPC@CServerRule@@SA_NK@Z		; CServerRule::IsSuportPC
PUBLIC	?IsSuportPlayBack@CServerRule@@SA_NK@Z		; CServerRule::IsSuportPlayBack
PUBLIC	?SetSuportMobile@CServerRule@@SAXAAK_N@Z	; CServerRule::SetSuportMobile
PUBLIC	?SetSuportPC@CServerRule@@SAXAAK_N@Z		; CServerRule::SetSuportPC
PUBLIC	?SetSuportPlayBack@CServerRule@@SAXAAK_N@Z	; CServerRule::SetSuportPlayBack
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>
PUBLIC	??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
PUBLIC	?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance
PUBLIC	?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CreateInstance
PUBLIC	?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo
PUBLIC	?GetErrorDescribe@?$CTempldateHelper@UIGameServiceManager@@@@QBEPBDXZ ; CTempldateHelper<IGameServiceManager>::GetErrorDescribe
PUBLIC	?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ; CTempldateHelper<IGameServiceManager>::GetInterface
PUBLIC	??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z ; CTempldateHelper<IGameServiceManager>::`scalar deleting destructor'
PUBLIC	??0CGameServiceManagerHelper@@QAE@XZ		; CGameServiceManagerHelper::CGameServiceManagerHelper
PUBLIC	??1CGameServiceManagerHelper@@UAE@XZ		; CGameServiceManagerHelper::~CGameServiceManagerHelper
PUBLIC	??_GCGameServiceManagerHelper@@UAEPAXI@Z	; CGameServiceManagerHelper::`scalar deleting destructor'
PUBLIC	??0tagModuleInitParameter@@QAE@XZ		; tagModuleInitParameter::tagModuleInitParameter
PUBLIC	?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc
PUBLIC	??0CModuleInfoManager@@QAE@ABV0@@Z		; CModuleInfoManager::CModuleInfoManager
PUBLIC	??4CModuleInfoManager@@QAEAAV0@ABV0@@Z		; CModuleInfoManager::operator=
PUBLIC	??_GCModuleInfoManager@@UAEPAXI@Z		; CModuleInfoManager::`scalar deleting destructor'
PUBLIC	??_ECModuleInfoManager@@UAEPAXI@Z		; CModuleInfoManager::`vector deleting destructor'
PUBLIC	??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
PUBLIC	??0CMatchOptionBuffer@@QAE@ABV0@@Z		; CMatchOptionBuffer::CMatchOptionBuffer
PUBLIC	??4CMatchOptionBuffer@@QAEAAV0@ABV0@@Z		; CMatchOptionBuffer::operator=
PUBLIC	??_GCMatchOptionBuffer@@UAEPAXI@Z		; CMatchOptionBuffer::`scalar deleting destructor'
PUBLIC	??_ECMatchOptionBuffer@@UAEPAXI@Z		; CMatchOptionBuffer::`vector deleting destructor'
PUBLIC	??0CServerInfoManager@@QAE@ABV0@@Z		; CServerInfoManager::CServerInfoManager
PUBLIC	??4CServerInfoManager@@QAEAAV0@ABV0@@Z		; CServerInfoManager::operator=
PUBLIC	??_GCServerInfoManager@@UAEPAXI@Z		; CServerInfoManager::`scalar deleting destructor'
PUBLIC	??_ECServerInfoManager@@UAEPAXI@Z		; CServerInfoManager::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItem@@IAE@I@Z		; CDlgServerOptionItem::CDlgServerOptionItem
PUBLIC	??1CDlgServerOptionItem@@MAE@XZ			; CDlgServerOptionItem::~CDlgServerOptionItem
PUBLIC	?OnOK@CDlgServerOptionItem@@MAEXXZ		; CDlgServerOptionItem::OnOK
PUBLIC	?OnCancel@CDlgServerOptionItem@@MAEXXZ		; CDlgServerOptionItem::OnCancel
PUBLIC	?SaveItemData@CDlgServerOptionItem@@AAE_NXZ	; CDlgServerOptionItem::SaveItemData
PUBLIC	?ShowOptionItem@CDlgServerOptionItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgServerOptionItem::ShowOptionItem
PUBLIC	?GetMessageMap@CDlgServerOptionItem@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem::GetMessageMap
PUBLIC	??_GCDlgServerOptionItem@@MAEPAXI@Z		; CDlgServerOptionItem::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItem@@MAEPAXI@Z		; CDlgServerOptionItem::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItem1@@QAE@XZ		; CDlgServerOptionItem1::CDlgServerOptionItem1
PUBLIC	??1CDlgServerOptionItem1@@UAE@XZ		; CDlgServerOptionItem1::~CDlgServerOptionItem1
PUBLIC	?OnInitDialog@CDlgServerOptionItem1@@MAEHXZ	; CDlgServerOptionItem1::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerOptionItem1@@UAE_NXZ	; CDlgServerOptionItem1::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerOptionItem1@@UAEXHH@Z	; CDlgServerOptionItem1::RectifyControl
PUBLIC	?InitCtrlWindow@CDlgServerOptionItem1@@IAEXXZ	; CDlgServerOptionItem1::InitCtrlWindow
PUBLIC	?UpdateDataBaseName@CDlgServerOptionItem1@@IAEXXZ ; CDlgServerOptionItem1::UpdateDataBaseName
PUBLIC	?GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem1::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerOptionItem1@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem1::GetMessageMap
PUBLIC	?PreTranslateMessage@CDlgServerOptionItem1@@UAEHPAUtagMSG@@@Z ; CDlgServerOptionItem1::PreTranslateMessage
PUBLIC	??_GCDlgServerOptionItem1@@UAEPAXI@Z		; CDlgServerOptionItem1::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItem1@@UAEPAXI@Z		; CDlgServerOptionItem1::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItem2@@QAE@XZ		; CDlgServerOptionItem2::CDlgServerOptionItem2
PUBLIC	??1CDlgServerOptionItem2@@UAE@XZ		; CDlgServerOptionItem2::~CDlgServerOptionItem2
PUBLIC	?OnInitDialog@CDlgServerOptionItem2@@MAEHXZ	; CDlgServerOptionItem2::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerOptionItem2@@UAE_NXZ	; CDlgServerOptionItem2::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerOptionItem2@@UAEXHH@Z	; CDlgServerOptionItem2::RectifyControl
PUBLIC	?InitCtrlWindow@CDlgServerOptionItem2@@IAEXXZ	; CDlgServerOptionItem2::InitCtrlWindow
PUBLIC	?GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem2::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerOptionItem2@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem2::GetMessageMap
PUBLIC	?PreTranslateMessage@CDlgServerOptionItem2@@UAEHPAUtagMSG@@@Z ; CDlgServerOptionItem2::PreTranslateMessage
PUBLIC	??_GCDlgServerOptionItem2@@UAEPAXI@Z		; CDlgServerOptionItem2::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItem2@@UAEPAXI@Z		; CDlgServerOptionItem2::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItem3@@QAE@XZ		; CDlgServerOptionItem3::CDlgServerOptionItem3
PUBLIC	??1CDlgServerOptionItem3@@UAE@XZ		; CDlgServerOptionItem3::~CDlgServerOptionItem3
PUBLIC	?OnInitDialog@CDlgServerOptionItem3@@MAEHXZ	; CDlgServerOptionItem3::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerOptionItem3@@UAE_NXZ	; CDlgServerOptionItem3::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerOptionItem3@@UAEXHH@Z	; CDlgServerOptionItem3::RectifyControl
PUBLIC	?GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem3::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerOptionItem3@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem3::GetMessageMap
PUBLIC	?PreTranslateMessage@CDlgServerOptionItem3@@MAEHPAUtagMSG@@@Z ; CDlgServerOptionItem3::PreTranslateMessage
PUBLIC	??_GCDlgServerOptionItem3@@UAEPAXI@Z		; CDlgServerOptionItem3::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItem3@@UAEPAXI@Z		; CDlgServerOptionItem3::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItem5@@QAE@XZ		; CDlgServerOptionItem5::CDlgServerOptionItem5
PUBLIC	??1CDlgServerOptionItem5@@UAE@XZ		; CDlgServerOptionItem5::~CDlgServerOptionItem5
PUBLIC	?OnInitDialog@CDlgServerOptionItem5@@MAEHXZ	; CDlgServerOptionItem5::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerOptionItem5@@UAE_NXZ	; CDlgServerOptionItem5::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerOptionItem5@@UAEXHH@Z	; CDlgServerOptionItem5::RectifyControl
PUBLIC	?GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem5::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerOptionItem5@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem5::GetMessageMap
PUBLIC	?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z ; CDlgServerOptionItem5::GetPersonalRoomInfo
PUBLIC	?PreTranslateMessage@CDlgServerOptionItem5@@UAEHPAUtagMSG@@@Z ; CDlgServerOptionItem5::PreTranslateMessage
PUBLIC	??_GCDlgServerOptionItem5@@UAEPAXI@Z		; CDlgServerOptionItem5::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItem5@@UAEPAXI@Z		; CDlgServerOptionItem5::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItemCustom@@QAE@XZ		; CDlgServerOptionItemCustom::CDlgServerOptionItemCustom
PUBLIC	??1CDlgServerOptionItemCustom@@UAE@XZ		; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
PUBLIC	?OnInitDialog@CDlgServerOptionItemCustom@@MAEHXZ ; CDlgServerOptionItemCustom::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerOptionItemCustom@@UAE_NXZ ; CDlgServerOptionItemCustom::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerOptionItemCustom@@UAEXHH@Z ; CDlgServerOptionItemCustom::RectifyControl
PUBLIC	?GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItemCustom::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerOptionItemCustom@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItemCustom::GetMessageMap
PUBLIC	??_GCDlgServerOptionItemCustom@@UAEPAXI@Z	; CDlgServerOptionItemCustom::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItemCustom@@UAEPAXI@Z	; CDlgServerOptionItemCustom::`vector deleting destructor'
PUBLIC	??0CDlgServerOptionItemPersonal@@QAE@XZ		; CDlgServerOptionItemPersonal::CDlgServerOptionItemPersonal
PUBLIC	??1CDlgServerOptionItemPersonal@@UAE@XZ		; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal
PUBLIC	?OnInitDialog@CDlgServerOptionItemPersonal@@MAEHXZ ; CDlgServerOptionItemPersonal::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerOptionItemPersonal@@UAE_NXZ ; CDlgServerOptionItemPersonal::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerOptionItemPersonal@@UAEXHH@Z ; CDlgServerOptionItemPersonal::RectifyControl
PUBLIC	?GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItemPersonal::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerOptionItemPersonal@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItemPersonal::GetMessageMap
PUBLIC	??_GCDlgServerOptionItemPersonal@@UAEPAXI@Z	; CDlgServerOptionItemPersonal::`scalar deleting destructor'
PUBLIC	??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z	; CDlgServerOptionItemPersonal::`vector deleting destructor'
PUBLIC	??0CDlgServerWizardItem@@IAE@I@Z		; CDlgServerWizardItem::CDlgServerWizardItem
PUBLIC	??1CDlgServerWizardItem@@MAE@XZ			; CDlgServerWizardItem::~CDlgServerWizardItem
PUBLIC	?OnOK@CDlgServerWizardItem@@MAEXXZ		; CDlgServerWizardItem::OnOK
PUBLIC	?OnCancel@CDlgServerWizardItem@@MAEXXZ		; CDlgServerWizardItem::OnCancel
PUBLIC	?SaveItemData@CDlgServerWizardItem@@AAE_NXZ	; CDlgServerWizardItem::SaveItemData
PUBLIC	?ShowWizardItem@CDlgServerWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgServerWizardItem::ShowWizardItem
PUBLIC	?GetMessageMap@CDlgServerWizardItem@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem::GetMessageMap
PUBLIC	??_GCDlgServerWizardItem@@MAEPAXI@Z		; CDlgServerWizardItem::`scalar deleting destructor'
PUBLIC	??_ECDlgServerWizardItem@@MAEPAXI@Z		; CDlgServerWizardItem::`vector deleting destructor'
PUBLIC	??0CDlgServerWizardItem1@@QAE@XZ		; CDlgServerWizardItem1::CDlgServerWizardItem1
PUBLIC	??1CDlgServerWizardItem1@@UAE@XZ		; CDlgServerWizardItem1::~CDlgServerWizardItem1
PUBLIC	?DoDataExchange@CDlgServerWizardItem1@@MAEXPAVCDataExchange@@@Z ; CDlgServerWizardItem1::DoDataExchange
PUBLIC	?OnInitDialog@CDlgServerWizardItem1@@MAEHXZ	; CDlgServerWizardItem1::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerWizardItem1@@UAE_NXZ	; CDlgServerWizardItem1::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerWizardItem1@@UAEXHH@Z	; CDlgServerWizardItem1::RectifyControl
PUBLIC	?LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ ; CDlgServerWizardItem1::LoadDBModuleItem
PUBLIC	?GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem1::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerWizardItem1@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem1::GetMessageMap
PUBLIC	??_GCDlgServerWizardItem1@@UAEPAXI@Z		; CDlgServerWizardItem1::`scalar deleting destructor'
PUBLIC	??_ECDlgServerWizardItem1@@UAEPAXI@Z		; CDlgServerWizardItem1::`vector deleting destructor'
PUBLIC	??0CDlgServerWizardItem2@@QAE@XZ		; CDlgServerWizardItem2::CDlgServerWizardItem2
PUBLIC	??1CDlgServerWizardItem2@@UAE@XZ		; CDlgServerWizardItem2::~CDlgServerWizardItem2
PUBLIC	?DoDataExchange@CDlgServerWizardItem2@@MAEXPAVCDataExchange@@@Z ; CDlgServerWizardItem2::DoDataExchange
PUBLIC	?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ	; CDlgServerWizardItem2::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgServerWizardItem2@@UAE_NXZ	; CDlgServerWizardItem2::SaveInputInfo
PUBLIC	?RectifyControl@CDlgServerWizardItem2@@UAEXHH@Z	; CDlgServerWizardItem2::RectifyControl
PUBLIC	?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
PUBLIC	?GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem2::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerWizardItem2@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem2::GetMessageMap
PUBLIC	??_GCDlgServerWizardItem2@@UAEPAXI@Z		; CDlgServerWizardItem2::`scalar deleting destructor'
PUBLIC	??_ECDlgServerWizardItem2@@UAEPAXI@Z		; CDlgServerWizardItem2::`vector deleting destructor'
PUBLIC	??0CDlgServerWizard@@QAE@XZ			; CDlgServerWizard::CDlgServerWizard
PUBLIC	??1CDlgServerWizard@@UAE@XZ			; CDlgServerWizard::~CDlgServerWizard
PUBLIC	?OnInitDialog@CDlgServerWizard@@UAEHXZ		; CDlgServerWizard::OnInitDialog
PUBLIC	?OnOK@CDlgServerWizard@@UAEXXZ			; CDlgServerWizard::OnOK
PUBLIC	?CreateGameServer@CDlgServerWizard@@QAE_NXZ	; CDlgServerWizard::CreateGameServer
PUBLIC	?SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z ; CDlgServerWizard::SetWizardParameter
PUBLIC	?SetPersonalRoomParameter@CDlgServerWizard@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z ; CDlgServerWizard::SetPersonalRoomParameter
PUBLIC	?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z	; CDlgServerWizard::ActiveWizardItem
PUBLIC	?SaveData@CDlgServerWizard@@QAEXXZ		; CDlgServerWizard::SaveData
PUBLIC	?GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizard::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerWizard@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerWizard::GetMessageMap
PUBLIC	??_GCDlgServerWizard@@UAEPAXI@Z			; CDlgServerWizard::`scalar deleting destructor'
PUBLIC	??_ECDlgServerWizard@@UAEPAXI@Z			; CDlgServerWizard::`vector deleting destructor'
PUBLIC	?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
PUBLIC	?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetPlatformDBParameter
PUBLIC	?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetGameMatchDBParameter
PUBLIC	?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetGameMatchDBParameter
PUBLIC	?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
PUBLIC	??0CModuleDBParameter@@QAE@ABV0@@Z		; CModuleDBParameter::CModuleDBParameter
PUBLIC	??4CModuleDBParameter@@QAEAAV0@ABV0@@Z		; CModuleDBParameter::operator=
PUBLIC	??_GCModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`scalar deleting destructor'
PUBLIC	??_ECModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`vector deleting destructor'
PUBLIC	??0?$CA2CAEX@$0IA@@ATL@@QAE@PBD@Z		; ATL::CA2CAEX<128>::CA2CAEX<128>
PUBLIC	??1?$CA2CAEX@$0IA@@ATL@@QAE@XZ			; ATL::CA2CAEX<128>::~CA2CAEX<128>
PUBLIC	??B?$CA2CAEX@$0IA@@ATL@@QBEPBDXZ		; ATL::CA2CAEX<128>::operator char const *
PUBLIC	??$_snprintf_s@$0BA@@@YAHAAY0BA@DIPBDZZ		; _snprintf_s<16>
PUBLIC	??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ	; _snprintf_s<512>
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ	; _snprintf_s<260>
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	??_C@_0P@MBNHGHMI@atlTraceString@		; `string'
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDialog@@8			; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R3CDialog@@8					; CDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialog@@8					; CDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@ ; CTempldateHelper<IGameServiceManager>::`vftable'
PUBLIC	??_7CGameServiceManagerHelper@@6B@		; CGameServiceManagerHelper::`vftable'
PUBLIC	??_7CModuleInfoManager@@6B@			; CModuleInfoManager::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
PUBLIC	??_7CMatchOptionBuffer@@6B@			; CMatchOptionBuffer::`vftable'
PUBLIC	??_7CServerInfoManager@@6B@			; CServerInfoManager::`vftable'
PUBLIC	??_7CDlgServerOptionItem@@6B@			; CDlgServerOptionItem::`vftable'
PUBLIC	??_7CDlgServerOptionItem1@@6B@			; CDlgServerOptionItem1::`vftable'
PUBLIC	??_7CDlgServerOptionItem2@@6B@			; CDlgServerOptionItem2::`vftable'
PUBLIC	??_7CDlgServerOptionItem3@@6B@			; CDlgServerOptionItem3::`vftable'
PUBLIC	??_7CDlgServerOptionItem5@@6B@			; CDlgServerOptionItem5::`vftable'
PUBLIC	??_7CDlgServerOptionItemCustom@@6B@		; CDlgServerOptionItemCustom::`vftable'
PUBLIC	??_7CDlgServerOptionItemPersonal@@6B@		; CDlgServerOptionItemPersonal::`vftable'
PUBLIC	??_7CDlgServerWizardItem@@6B@			; CDlgServerWizardItem::`vftable'
PUBLIC	??_7CDlgServerWizardItem1@@6B@			; CDlgServerWizardItem1::`vftable'
PUBLIC	??_7CDlgServerWizardItem2@@6B@			; CDlgServerWizardItem2::`vftable'
PUBLIC	??_7CDlgServerWizard@@6B@			; CDlgServerWizard::`vftable'
PUBLIC	??_7CModuleDBParameter@@6B@			; CModuleDBParameter::`vftable'
PUBLIC	??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@	; `string'
PUBLIC	??_C@_0BC@LFCAOGLK@ModuleManager?4dll@		; `string'
PUBLIC	??_C@_0BH@HNIGNBJA@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?$KD?$KM?W?n?$LE?s?$LD?$KE?$LG?H31@ ; `string'
PUBLIC	??_C@_0BE@BMFELJAK@?S?N?O?$LH?$LF?H?$LM?$LG?5?$KD?$KM?W?n?$LE?s9999@ ; `string'
PUBLIC	??_C@_0BH@PNJOEPMK@?$LP?I?I?h?V?C?N?$KK?F?U?M?$KI?$LH?$LP?$LK?M?C?$NM?B?k?$LH?$LP@ ; `string'
PUBLIC	??_C@_0CF@GFGAHLND@?$LH?$LP?$LM?d?$MA?$OA?P?M?I?h?V?C?N?$KK?C?$NM?B?k?$LH?$LP?$LC?E?$LP?I?S?C?$KD?$KM?W?n?$LE@ ; `string'
PUBLIC	??_C@_08KKHNDKNH@?S?N?O?$LH?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_0CL@COOGMDKL@?S?N?O?$LH?$LH?$PO?N?q?$LG?K?$LP?Z?$KD?$KM?$LP?I?R?T?N?$KK?$LP?U?$KD?$KM?$LC?$LL?D?$NM?$LK?M?F@ ; `string'
PUBLIC	??_C@_0DF@HHOOMJCF@?T?$LM?U?$LN?J?$PN?$LO?$NN?$LP?b?E?d?V?C?$KD?$KM?V?$LL?S?P?S?N?O?$LH?$MA?$OA?P?M?Q?$KB?T@ ; `string'
PUBLIC	??_C@_0CF@JMFBPOKD@?Q?$KB?T?q?S?N?O?$LH?$MA?$OA?P?M?$LK?s?$LL?a?W?T?$LG?$KP?L?n?P?$LE?$KD?$KM?$LC?$LL?M?F?$LM@ ; `string'
PUBLIC	??_C@_0CE@IJDFCHCA@?I?h?V?C?$LH?$LP?$LM?d?W?$MA?W?S?J?$PN?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?G?$LP?V?F?D?$KM?H@ ; `string'
PUBLIC	??_C@_0DK@CDOLDLNP@?I?h?V?C?$LH?$LP?$LM?d?$LP?I?R?T?H?$NN?D?I?$LG?$OA?I?Y?H?K?5?$KD?$KM?$LC?$LL?L?n?D?$KM@ ; `string'
PUBLIC	??_C@_0DH@FEFBIDED@?I?h?V?C?$LH?$LP?$LM?d?P?i?D?b?H?K?J?$PN?$KD?$KM?$LP?M?$LL?$KH?$LG?K?O?T?J?$LO?H?K?J@ ; `string'
PUBLIC	??_C@_0BD@JFMMMIGM@?S?N?O?$LH?$LH?$LP?$LM?d?$LF?D?L?X?I?$KL?M?f?$LH?$KI@ ; `string'
PUBLIC	??_C@_0DJ@JONKEAKJ@?I?h?V?C?S?N?O?$LH?$LF?W?$LH?V?$KD?$KM?H?g?$LJ?$PL?N?$KK?$LH?$LP?$LP?$KI?D?$KD?J?$LN?$LC?$KC?E@ ; `string'
PUBLIC	??_C@_0CD@CMIHPLLM@?I?h?V?C?$LF?$KF?$LO?V?S?N?O?$LH?W?n?$LE?s?J?d?S?$KO?$KD?$KM?$LC?$LP?$LH?V?S?N?O?$LH?N@ ; `string'
PUBLIC	??_C@_0FH@NDFAJCCE@?I?h?V?C?S?N?O?$LH?K?$LA?J?U?$LL?r?U?$NP?$LH?$PO?N?q?$LH?Q?$KD?$KM?$LH?$PO?N?q?F?w?$LC@ ; `string'
PUBLIC	??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@	; `string'
PUBLIC	??_C@_0CJ@CKGBPABI@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?W?V?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@ ; `string'
PUBLIC	??_C@_0CJ@FKABHCFH@?S?N?O?$LH?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@ ; `string'
PUBLIC	??_C@_0CN@HOBLABLI@?S?N?O?$LH?$LH?$LP?$LM?d?$MA?$OA?P?M?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T@ ; `string'
PUBLIC	??_C@_0CJ@DDNPCCLO@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?C?$PL?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@ ; `string'
PUBLIC	??_C@_0DD@DBPPFMOI@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH?$LI?q?J?$LN?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G?k?V?X?P@ ; `string'
PUBLIC	??_C@_0EB@PKKMHEMF@?S?N?O?$LH?W?$MA?W?S?J?$PN?D?$LP?N?$NO?P?$KH?$KD?$KM?G?k?V?X?P?B?J?d?H?k?S?N?O@ ; `string'
PUBLIC	??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08NFPDDPHH@?F?U?M?$KI?$LH?$LP?$LM?d@	; `string'
PUBLIC	??_C@_08PPKPGJDI@?C?$NM?B?k?$LH?$LP?$LM?d@	; `string'
PUBLIC	??_C@_06DFBDGPAN@?$LN?p?$LB?R?$LP?b@		; `string'
PUBLIC	??_C@_06OKHPCLBO@?$LL?$PN?$LH?V?$LP?b@		; `string'
PUBLIC	??_C@_0N@LLCONOIB@?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@ ; `string'
PUBLIC	??_C@_0BF@MLEAOAEA@?T?$LM?U?$LN?$MA?$OA?P?M?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@ ; `string'
PUBLIC	??_C@_0BH@LELEGCLA@?S?C?$LL?$KH?I?h?V?C?$LF?D?$LH?$LP?$LM?d?$LJ?f?T?r?N?$NO?P?$KH@ ; `string'
PUBLIC	??_C@_0BF@GFGGEHBF@?S?C?$LL?$KH?N?$NO?$LH?$KI?I?h?V?C?W?$MA?W?S?C?$NM?B?k@ ; `string'
PUBLIC	??_C@_0DG@KOBIODKO@?C?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?5?W?x?O?B?V?$LL?D?$NM?T?Z?$LP?U?O?P?W?$LE?L?$KM?$KD?$KM@ ; `string'
PUBLIC	??_C@_0DM@NKGOLKOC@?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?$LP?$KK?$LJ?X?0?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?O?B?$KD?$KM?S?C@ ; `string'
PUBLIC	??_C@_0BP@DCCNMAEM@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KM?J?V?$LL?z?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@ ; `string'
PUBLIC	??_C@_0BN@HKKGDCEG@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KMPC?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@ ; `string'
PUBLIC	??_C@_0DL@MGOIAGMH@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LD?I?$LM?$KI?$LB?H?W?n?$LI?$NP?$LD?I?$LM?$KI?$LL?$LJ?$LI?$NP?$KD@ ; `string'
PUBLIC	??_C@_0ED@CLCMPDHD@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LL?a?T?$LB?$LM?$LG?$LB?p?$LB?H?W?n?$LI?$NP?$LL?a?T?$LB?$LM@ ; `string'
PUBLIC	??_C@_08MJLFADOM@?K?y?S?P?S?C?$LL?$KH@		; `string'
PUBLIC	??_C@_04MCHDAMDM@VIP1@				; `string'
PUBLIC	??_C@_04OJFOFPPP@VIP2@				; `string'
PUBLIC	??_C@_04PAEFGOLO@VIP3@				; `string'
PUBLIC	??_C@_04LPAEPIHJ@VIP4@				; `string'
PUBLIC	??_C@_04KGBPMJDI@VIP5@				; `string'
PUBLIC	??_C@_08BGFLHOFE@?$LO?V?J?$PN?D?$KD?J?$LN@	; `string'
PUBLIC	??_C@_08MKFLPDGN@?J?$LB?$LM?d?D?$KD?J?$LN@	; `string'
PUBLIC	??_C@_08DJLCFFJL@?H?$KG?J?$PN?D?$KD?J?$LN@	; `string'
PUBLIC	??_C@_08BIAEABAF@?$LL?$PN?$LH?V?D?$KD?J?$LN@	; `string'
PUBLIC	??_C@_04KIDPNELE@?$LO?V?J?$PN@			; `string'
PUBLIC	??_C@_04MJOAOAPL@?J?$LB?$LM?d@			; `string'
PUBLIC	??_C@_04LFJCGBEH@?H?$KG?J?$PN@			; `string'
PUBLIC	??_C@_04DNLFHFJB@?$LL?$PN?$LH?V@		; `string'
PUBLIC	??_C@_0BL@LFMLNCPB@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LK?s?G?$LP?V?F?$LN?x?H?k?$LH?$LP?$LM?d@ ; `string'
PUBLIC	??_C@_0BH@EBCHOPCM@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LO?V?J?$PN?D?$KD?J?$LN?$LN?x?P?P@ ; `string'
PUBLIC	??_C@_0BH@KKIMEOCL@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?J?$LB?$LM?d?D?$KD?J?$LN?$LN?x?P?P@ ; `string'
PUBLIC	??_C@_0BH@HPHMMNIB@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?H?$KG?J?$PN?D?$KD?J?$LN?$LN?x?P?P@ ; `string'
PUBLIC	??_C@_0BL@PHEPAGLP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LL?$PN?$LH?V?I?O?O?$NO?D?$KD?J?$LN?$LN?x?P?P@ ; `string'
PUBLIC	??_C@_0BH@OJIPJDBF@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LP?I?R?T?$LC?$LL?$LN?x?H?k@ ; `string'
PUBLIC	??_C@_0CE@BAIHJHEF@?$LH?$LP?V?w?$LP?I?R?T?$LE?$LE?$LN?$KI?W?n?$LE?s?J?$PN?A?$LP?$KD?$KM?N?$KK0?$LB?m?J?$LO?$LC?$LL@ ; `string'
PUBLIC	??_C@_0CF@NPDJBIPG@?K?$LN?H?K?$LH?$LP?$LG?$MA?A?$KC?$LF?D?K?$LA?J?U?$KD?$KM?$LK?M?M?$KI?S?C?K?$LA?J?U?$LJ?$LC?M@ ; `string'
PUBLIC	??_C@_0BP@HHFBKMPP@?C?b?$LH?Q?J?$LB?$LM?d?D?Z?$KD?$KM?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?$LL?O?$PL?$LK?D?W?j?J?$KP@ ; `string'
PUBLIC	??_C@_09LOOPACNL@?$CFs?2?$CFd?4ini@		; `string'
PUBLIC	??_C@_07DOAOMMKG@Enabled@			; `string'
PUBLIC	??_C@_06CKGENIKG@Enable@			; `string'
PUBLIC	??_C@_0L@HLGININO@IsJoinGame@			; `string'
PUBLIC	??_C@_06CJHLBMGC@Option@			; `string'
PUBLIC	??_C@_09BAGGAEBH@MinPeople@			; `string'
PUBLIC	??_C@_09BBGKJOKD@MaxPeople@			; `string'
PUBLIC	??_C@_0N@CNCFIDBJ@MaxCellScore@			; `string'
PUBLIC	??_C@_0BA@GCOMLPGF@PersonalRoomTax@		; `string'
PUBLIC	??_C@_0P@LNMJOPEM@CanCreateCount@		; `string'
PUBLIC	??_C@_0O@FDPMPBME@PlayTurnCount@		; `string'
PUBLIC	??_C@_0O@FAGABJFM@PlayTimeLimit@		; `string'
PUBLIC	??_C@_0BE@NHDBBOLF@TimeAfterBeginCount@		; `string'
PUBLIC	??_C@_0BB@BHHEMCMJ@TimeOffLineCount@		; `string'
PUBLIC	??_C@_0BB@EFKEMBID@TimeNotBeginGame@		; `string'
PUBLIC	??_C@_0BE@MAFCEFJP@TimeAfterCreateRoom@		; `string'
PUBLIC	??_C@_0O@DEEAMCAI@BeginFreeTime@		; `string'
PUBLIC	??_C@_0M@OHDGOHJM@EndFreeTime@			; `string'
PUBLIC	??_C@_0M@JGNJEEEJ@CreateRight@			; `string'
PUBLIC	??_C@_0BA@MEGPCNND@CreateRoomRight@		; `string'
PUBLIC	??_C@_0BB@NDJBEBBP@PlayTurnLimit_?$CFd@		; `string'
PUBLIC	??_C@_0N@BPNJNFLH@FeeParameter@			; `string'
PUBLIC	??_C@_09NPCPBNFG@PayFee_?$CFd@			; `string'
PUBLIC	??_C@_0M@PLHAIOPP@AAPayFee_?$CFd@		; `string'
PUBLIC	??_C@_0M@NFLEKBDJ@IniScore_?$CFd@		; `string'
PUBLIC	??_C@_0M@MCMOAOCB@GameMode_?$CFd@		; `string'
PUBLIC	??_C@_05KPJEPPD@?$LO?V?J?$PN1@			; `string'
PUBLIC	??_C@_05OMPLMMMG@?J?$LB?$LM?d1@			; `string'
PUBLIC	??_C@_05COFAEBOA@?H?$KG?J?$PN1@			; `string'
PUBLIC	??_C@_05EBGIBBBF@?$LL?$PN?$LH?V1@		; `string'
PUBLIC	??_C@_05CBNEBMDA@?$LO?V?J?$PN2@			; `string'
PUBLIC	??_C@_05MHNGJPAF@?J?$LB?$LM?d2@			; `string'
PUBLIC	??_C@_05FHNBCCD@?H?$KG?J?$PN2@			; `string'
PUBLIC	??_C@_05GKEFECNG@?$LL?$PN?$LH?V2@		; `string'
PUBLIC	??_C@_05DIMPCNHB@?$LO?V?J?$PN3@			; `string'
PUBLIC	??_C@_05NOMNKOEE@?J?$LB?$LM?d3@			; `string'
PUBLIC	??_C@_05BMGGCDGC@?H?$KG?J?$PN3@			; `string'
PUBLIC	??_C@_05HDFOHDJH@?$LL?$PN?$LH?V3@		; `string'
PUBLIC	??_C@_05HHIOLLLG@?$LO?V?J?$PN4@			; `string'
PUBLIC	??_C@_05JBIMDIID@?J?$LB?$LM?d4@			; `string'
PUBLIC	??_C@_05FDCHLFKF@?H?$KG?J?$PN4@			; `string'
PUBLIC	??_C@_05DMBPOFFA@?$LL?$PN?$LH?V4@		; `string'
PUBLIC	??_C@_05GOJFIKPH@?$LO?V?J?$PN5@			; `string'
PUBLIC	??_C@_05IIJHAJMC@?J?$LB?$LM?d5@			; `string'
PUBLIC	??_C@_05EKDMIEOE@?H?$KG?J?$PN5@			; `string'
PUBLIC	??_C@_05CFAENEBB@?$LL?$PN?$LH?V5@		; `string'
PUBLIC	??_C@_0BP@PJKCGFJH@?G?k?D?z?O?H?$LE?S?S?N?O?$LH?A?P?$LB?m?V?P?Q?$KB?T?q?S?N?O?$LH?W?i?$LM?$PO@ ; `string'
PUBLIC	??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@	; `string'
PUBLIC	??_C@_0CM@PKPMOEPA@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LL?$LJ?C?$LL?S?P?$LA?$LC?W?$LA?$KD?$KM?G?k?O?H@ ; `string'
PUBLIC	??_C@_0CO@FMLCDPAO@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LI?$PM?P?B?A?K?$KD?$KM?J?G?$LH?q?$LL?$LJ?$LM?L@ ; `string'
PUBLIC	??_C@_0DA@PHBCCHJI@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LM?S?T?X?J?$KH?$LA?$NM?$KD?$KM?$LE?$LE?$LN?$KI?S?N@ ; `string'
PUBLIC	?__LINE__Var@?0??LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ@4JA ; `CDlgServerWizardItem1::LoadDBModuleItem'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_08IEBKPAKK@?$LL?y?$LB?$LO?E?d?V?C@	; `string'
PUBLIC	??_C@_08ELGJNJNI@?$LH?$LP?$LM?d?Q?$KB?O?n@	; `string'
PUBLIC	??_C@_08LBOCGJIJ@?$LH?V?W?i?Q?$KB?O?n@		; `string'
PUBLIC	??_C@_0L@FGFOLDNK@?K?$LN?H?K?$LH?$LP?E?d?V?C@	; `string'
PUBLIC	??_C@_08JOACJLAD@?$LH?$PO?N?q?$LG?$KI?V?F@	; `string'
PUBLIC	??_C@_08INBHOBNB@?T?$LM?U?$LN?$LG?$KI?V?F@	; `string'
PUBLIC	?__LINE__Var@?0??SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z@4JA ; `CDlgServerWizard::SetWizardParameter'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@PPCMMBCC@?$LH?$LP?$LM?d?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@ ; `string'
PUBLIC	?__LINE__Var@?0??OnBnClickedLast@CDlgServerWizard@@QAEXXZ@4JA ; `CDlgServerWizard::OnBnClickedLast'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnBnClickedNext@CDlgServerWizard@@QAEXXZ@4JA ; `CDlgServerWizard::OnBnClickedNext'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnBnClickedFinish@CDlgServerWizard@@QAEXXZ@4JA ; `CDlgServerWizard::OnBnClickedFinish'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@HACHHGOC@?S?N?O?$LH?$LH?$LP?$LM?d?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@ ; `string'
PUBLIC	??_C@_0BB@CJFLLFDE@?S?N?O?$LH?$LH?$LP?$LM?d?E?d?V?C?$LD?I?$LJ?$KG@ ; `string'
PUBLIC	??_C@_0BH@BMJGHNOL@?$CFs?2MobileParameter?4ini@	; `string'
PUBLIC	??_C@_0BC@IGEEDJJG@VisibleTableCount@		; `string'
PUBLIC	??_C@_0BD@GBODAJDE@EverySendPageCount@		; `string'
PUBLIC	??_C@_0L@NIKGMENH@?K?$LA?J?U?$LB?H?$MA?$PN?$KD?$LK@ ; `string'
PUBLIC	??_C@_0L@IBIEHAJI@?$LH?$PO?N?q?$LH?Q?J?$PN?$KD?$LK@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ ; `string'
PUBLIC	??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ ; `string'
PUBLIC	??_R4CGameServiceManagerHelper@@6B@		; CGameServiceManagerHelper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGameServiceManagerHelper@@@8		; CGameServiceManagerHelper `RTTI Type Descriptor'
PUBLIC	??_R3CGameServiceManagerHelper@@8		; CGameServiceManagerHelper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGameServiceManagerHelper@@8		; CGameServiceManagerHelper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGameServiceManagerHelper@@8	; CGameServiceManagerHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8 ; CTempldateHelper<IGameServiceManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Array'
PUBLIC	??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@ ; CTempldateHelper<IGameServiceManager>::`RTTI Complete Object Locator'
PUBLIC	??_R4CModuleInfoManager@@6B@			; CModuleInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleInfoManager@@@8			; CModuleInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CModuleInfoManager@@8			; CModuleInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleInfoManager@@8			; CModuleInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleInfoManager@@8		; CModuleInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchOptionBuffer@@6B@			; CMatchOptionBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchOptionBuffer@@@8			; CMatchOptionBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CMatchOptionBuffer@@8			; CMatchOptionBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchOptionBuffer@@8			; CMatchOptionBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchOptionBuffer@@8		; CMatchOptionBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CServerInfoManager@@6B@			; CServerInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServerInfoManager@@@8			; CServerInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CServerInfoManager@@8			; CServerInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServerInfoManager@@8			; CServerInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServerInfoManager@@8		; CServerInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerWizard@@6B@			; CDlgServerWizard::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerWizard@@@8			; CDlgServerWizard `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerWizard@@8			; CDlgServerWizard::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerWizard@@8			; CDlgServerWizard::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerWizard@@8		; CDlgServerWizard::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerOptionItem@@6B@			; CDlgServerOptionItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItem@@@8		; CDlgServerOptionItem `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItem@@8			; CDlgServerOptionItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItem@@8			; CDlgServerOptionItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItem@@8		; CDlgServerOptionItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerWizardItem2@@6B@			; CDlgServerWizardItem2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerWizardItem2@@@8		; CDlgServerWizardItem2 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerWizardItem2@@8			; CDlgServerWizardItem2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerWizardItem2@@8			; CDlgServerWizardItem2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerWizardItem2@@8		; CDlgServerWizardItem2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDlgServerWizardItem@@8		; CDlgServerWizardItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDlgServerWizardItem@@@8		; CDlgServerWizardItem `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerWizardItem@@8			; CDlgServerWizardItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerWizardItem@@8			; CDlgServerWizardItem::`RTTI Base Class Array'
PUBLIC	??_R4CDlgServerOptionItem1@@6B@			; CDlgServerOptionItem1::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItem1@@@8		; CDlgServerOptionItem1 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItem1@@8			; CDlgServerOptionItem1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItem1@@8			; CDlgServerOptionItem1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItem1@@8		; CDlgServerOptionItem1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerOptionItem2@@6B@			; CDlgServerOptionItem2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItem2@@@8		; CDlgServerOptionItem2 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItem2@@8			; CDlgServerOptionItem2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItem2@@8			; CDlgServerOptionItem2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItem2@@8		; CDlgServerOptionItem2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerOptionItem3@@6B@			; CDlgServerOptionItem3::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItem3@@@8		; CDlgServerOptionItem3 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItem3@@8			; CDlgServerOptionItem3::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItem3@@8			; CDlgServerOptionItem3::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItem3@@8		; CDlgServerOptionItem3::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerOptionItem5@@6B@			; CDlgServerOptionItem5::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItem5@@@8		; CDlgServerOptionItem5 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItem5@@8			; CDlgServerOptionItem5::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItem5@@8			; CDlgServerOptionItem5::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItem5@@8		; CDlgServerOptionItem5::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerOptionItemCustom@@6B@		; CDlgServerOptionItemCustom::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItemCustom@@@8		; CDlgServerOptionItemCustom `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItemCustom@@8		; CDlgServerOptionItemCustom::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItemCustom@@8		; CDlgServerOptionItemCustom::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItemCustom@@8	; CDlgServerOptionItemCustom::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerOptionItemPersonal@@6B@		; CDlgServerOptionItemPersonal::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerOptionItemPersonal@@@8	; CDlgServerOptionItemPersonal `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerOptionItemPersonal@@8		; CDlgServerOptionItemPersonal::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerOptionItemPersonal@@8		; CDlgServerOptionItemPersonal::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerOptionItemPersonal@@8	; CDlgServerOptionItemPersonal::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerWizardItem@@6B@			; CDlgServerWizardItem::`RTTI Complete Object Locator'
PUBLIC	??_R4CDlgServerWizardItem1@@6B@			; CDlgServerWizardItem1::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerWizardItem1@@@8		; CDlgServerWizardItem1 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerWizardItem1@@8			; CDlgServerWizardItem1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerWizardItem1@@8			; CDlgServerWizardItem1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerWizardItem1@@8		; CDlgServerWizardItem1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CModuleDBParameter@@6B@			; CModuleDBParameter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleDBParameter@@@8			; CModuleDBParameter `RTTI Type Descriptor'
PUBLIC	??_R3CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleDBParameter@@8		; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	__imp__lstrcmpA@8:PROC
EXTRN	__imp__lstrcmpiA@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrcpyA@8:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	__imp__htonl@4:PROC
EXTRN	__imp__inet_addr@4:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z:PROC
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z:PROC ; DDX_Control
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ:PROC	; CWnd::GetSafeHwnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:PROC		; CWnd::GetDlgItem
EXTRN	?PostMessageA@CWnd@@QAEHIIJ@Z:PROC		; CWnd::PostMessageA
EXTRN	?SetWindowTextA@CWnd@@QAEXPBD@Z:PROC		; CWnd::SetWindowTextA
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z:PROC	; CWnd::MoveWindow
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:PROC	; CWnd::SetWindowPos
EXTRN	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetWindowRect
EXTRN	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetClientRect
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ScreenToClient
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:PROC			; CWnd::ShowWindow
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:PROC		; CWnd::EnableWindow
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:PROC			; CWnd::SetFocus
EXTRN	?GetDlgItemInt@CWnd@@QBEIHPAHH@Z:PROC		; CWnd::GetDlgItemInt
EXTRN	?GetDlgItemTextA@CWnd@@QBEHHPADH@Z:PROC		; CWnd::GetDlgItemTextA
EXTRN	?SetDlgItemInt@CWnd@@QAEXHIH@Z:PROC		; CWnd::SetDlgItemInt
EXTRN	?SetDlgItemTextA@CWnd@@QAEXHPBD@Z:PROC		; CWnd::SetDlgItemTextA
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?GetParent@CWnd@@QBEPAV1@XZ:PROC		; CWnd::GetParent
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnSetFocus@CWnd@@IAEXPAV1@@Z:PROC		; CWnd::OnSetFocus
EXTRN	?OnSize@CWnd@@IAEXIHH@Z:PROC			; CWnd::OnSize
EXTRN	?OnNcDestroy@CWnd@@IAEXXZ:PROC			; CWnd::OnNcDestroy
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:PROC ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:PROC	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:PROC		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:PROC ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:PROC ; CDialog::CreateIndirect
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:PROC		; CDialog::CDialog
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	?EndDialog@CDialog@@QAEXH@Z:PROC		; CDialog::EndDialog
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:PROC		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:PROC	; CDialog::OnSetFont
EXTRN	?OnCancel@CDialog@@MAEXXZ:PROC			; CDialog::OnCancel
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	?AssertValid@CDialog@@UBEXXZ:PROC		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:PROC	; CDialog::Dump
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:PROC ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:PROC		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CDialog::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CDialog::GetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:PROC		; CDialog::PreInitDialog
EXTRN	??0CStatic@@QAE@XZ:PROC				; CStatic::CStatic
EXTRN	??1CStatic@@UAE@XZ:PROC				; CStatic::~CStatic
EXTRN	?GetCheck@CButton@@QBEHXZ:PROC			; CButton::GetCheck
EXTRN	?SetCheck@CButton@@QAEXH@Z:PROC			; CButton::SetCheck
EXTRN	?GetCount@CComboBox@@QBEHXZ:PROC		; CComboBox::GetCount
EXTRN	?GetCurSel@CComboBox@@QBEHXZ:PROC		; CComboBox::GetCurSel
EXTRN	?SetCurSel@CComboBox@@QAEHH@Z:PROC		; CComboBox::SetCurSel
EXTRN	?GetItemData@CComboBox@@QBEKH@Z:PROC		; CComboBox::GetItemData
EXTRN	?SetItemData@CComboBox@@QAEHHK@Z:PROC		; CComboBox::SetItemData
EXTRN	?AddString@CComboBox@@QAEHPBD@Z:PROC		; CComboBox::AddString
EXTRN	?InsertString@CComboBox@@QAEHHPBD@Z:PROC	; CComboBox::InsertString
EXTRN	?LimitText@CEdit@@QAEXH@Z:PROC			; CEdit::LimitText
EXTRN	?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z:PROC ; AfxSetResourceHandle
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z:PROC	; AfxLoadLibrary
EXTRN	?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z:PROC	; AfxFreeLibrary
EXTRN	?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ:PROC ; CListCtrl::GetFirstSelectedItemPosition
EXTRN	?GetNextSelectedItem@CListCtrl@@QBEHAAPAU__POSITION@@@Z:PROC ; CListCtrl::GetNextSelectedItem
EXTRN	?GetItemData@CListCtrl@@QBEKH@Z:PROC		; CListCtrl::GetItemData
EXTRN	?DeleteAllItems@CListCtrl@@QAEHXZ:PROC		; CListCtrl::DeleteAllItems
EXTRN	??0CToolTipCtrl@@QAE@XZ:PROC			; CToolTipCtrl::CToolTipCtrl
EXTRN	?SetMaxTipWidth@CToolTipCtrl@@QAEHH@Z:PROC	; CToolTipCtrl::SetMaxTipWidth
EXTRN	?Activate@CToolTipCtrl@@QAEXH@Z:PROC		; CToolTipCtrl::Activate
EXTRN	?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z:PROC ; CToolTipCtrl::AddTool
EXTRN	?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z:PROC ; CToolTipCtrl::RelayEvent
EXTRN	??1CToolTipCtrl@@UAE@XZ:PROC			; CToolTipCtrl::~CToolTipCtrl
EXTRN	??0CTabCtrl@@QAE@XZ:PROC			; CTabCtrl::CTabCtrl
EXTRN	?GetCurSel@CTabCtrl@@QBEHXZ:PROC		; CTabCtrl::GetCurSel
EXTRN	?SetCurSel@CTabCtrl@@QAEHH@Z:PROC		; CTabCtrl::SetCurSel
EXTRN	?InsertItem@CTabCtrl@@QAEJHPBD@Z:PROC		; CTabCtrl::InsertItem
EXTRN	?AdjustRect@CTabCtrl@@QAEXHPAUtagRECT@@@Z:PROC	; CTabCtrl::AdjustRect
EXTRN	??1CTabCtrl@@UAE@XZ:PROC			; CTabCtrl::~CTabCtrl
EXTRN	?GetAddress@CIPAddressCtrl@@QBEHAAK@Z:PROC	; CIPAddressCtrl::GetAddress
EXTRN	?SetAddress@CIPAddressCtrl@@QAEXK@Z:PROC	; CIPAddressCtrl::SetAddress
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?GetMachineID@CWHService@@SA_NQAD@Z:PROC
EXTRN	__imp_?GetWorkDirectory@CWHService@@SA_NQADG@Z:PROC
EXTRN	__imp_??0CWHIniData@@QAE@XZ:PROC
EXTRN	__imp_??1CWHIniData@@UAE@XZ:PROC
EXTRN	__imp_?SetIniFilePath@CWHIniData@@QAEXPBD@Z:PROC
EXTRN	__imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z:PROC
EXTRN	__imp_?WriteInt@CWHIniData@@QAE_NPBD0H@Z:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??_E?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z:PROC ; CTempldateHelper<IGameServiceManager>::`vector deleting destructor'
EXTRN	??_ECGameServiceManagerHelper@@UAEPAXI@Z:PROC	; CGameServiceManagerHelper::`vector deleting destructor'
EXTRN	??0CModuleListControl@@QAE@XZ:PROC		; CModuleListControl::CModuleListControl
EXTRN	??1CModuleListControl@@UAE@XZ:PROC		; CModuleListControl::~CModuleListControl
EXTRN	?InsertModuleInfo@CModuleListControl@@QAE_NPAUtagGameModuleInfo@@@Z:PROC ; CModuleListControl::InsertModuleInfo
EXTRN	??0CModuleInfoBuffer@@QAE@XZ:PROC		; CModuleInfoBuffer::CModuleInfoBuffer
EXTRN	??1CModuleInfoBuffer@@UAE@XZ:PROC		; CModuleInfoBuffer::~CModuleInfoBuffer
EXTRN	??0CModuleInfoManager@@QAE@XZ:PROC		; CModuleInfoManager::CModuleInfoManager
EXTRN	??1CModuleInfoManager@@UAE@XZ:PROC		; CModuleInfoManager::~CModuleInfoManager
EXTRN	?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z:PROC ; CModuleInfoManager::LoadGameModuleInfo
EXTRN	??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vector deleting destructor'
EXTRN	??1CMatchOptionBuffer@@UAE@XZ:PROC		; CMatchOptionBuffer::~CMatchOptionBuffer
EXTRN	??0CServerInfoManager@@QAE@XZ:PROC		; CServerInfoManager::CServerInfoManager
EXTRN	??1CServerInfoManager@@UAE@XZ:PROC		; CServerInfoManager::~CServerInfoManager
EXTRN	?InsertGameServer@CServerInfoManager@@QAE_NPAUtagGameServerCreate@@AAUtagGameServerInfo@@@Z:PROC ; CServerInfoManager::InsertGameServer
EXTRN	?ModifyGameServer@CServerInfoManager@@QAE_NPAUtagGameServerCreate@@AAUtagGameServerInfo@@@Z:PROC ; CServerInfoManager::ModifyGameServer
EXTRN	?SetPersonalRoomOption@CServerInfoManager@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z:PROC ; CServerInfoManager::SetPersonalRoomOption
EXTRN	??1CModuleDBParameter@@UAE@XZ:PROC		; CModuleDBParameter::~CModuleDBParameter
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A:DWORD ; CModuleDBParameter::m_pModuleDBParameter
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleDBParameter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleDBParameter@@8 DD FLAT:??_R0?AVCModuleDBParameter@@@8 ; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleDBParameter@@8
rdata$r	SEGMENT
??_R2CModuleDBParameter@@8 DD FLAT:??_R1A@?0A@EA@CModuleDBParameter@@8 ; CModuleDBParameter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleDBParameter@@8
rdata$r	SEGMENT
??_R3CModuleDBParameter@@8 DD 00H			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleDBParameter@@@8
data$r	SEGMENT
??_R0?AVCModuleDBParameter@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleDBParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleDBParameter@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleDBParameter@@6B@
rdata$r	SEGMENT
??_R4CModuleDBParameter@@6B@ DD 00H			; CModuleDBParameter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleDBParameter@@@8
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerWizardItem1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerWizardItem1@@8 DD FLAT:??_R0?AVCDlgServerWizardItem1@@@8 ; CDlgServerWizardItem1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerWizardItem1@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerWizardItem1@@8
rdata$r	SEGMENT
??_R2CDlgServerWizardItem1@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerWizardItem1@@8 ; CDlgServerWizardItem1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerWizardItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerWizardItem1@@8
rdata$r	SEGMENT
??_R3CDlgServerWizardItem1@@8 DD 00H			; CDlgServerWizardItem1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerWizardItem1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerWizardItem1@@@8
data$r	SEGMENT
??_R0?AVCDlgServerWizardItem1@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerWizardItem1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerWizardItem1@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerWizardItem1@@6B@
rdata$r	SEGMENT
??_R4CDlgServerWizardItem1@@6B@ DD 00H			; CDlgServerWizardItem1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerWizardItem1@@@8
	DD	FLAT:??_R3CDlgServerWizardItem1@@8
rdata$r	ENDS
;	COMDAT ??_R4CDlgServerWizardItem@@6B@
rdata$r	SEGMENT
??_R4CDlgServerWizardItem@@6B@ DD 00H			; CDlgServerWizardItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerWizardItem@@@8
	DD	FLAT:??_R3CDlgServerWizardItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItemPersonal@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItemPersonal@@8 DD FLAT:??_R0?AVCDlgServerOptionItemPersonal@@@8 ; CDlgServerOptionItemPersonal::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItemPersonal@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItemPersonal@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItemPersonal@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItemPersonal@@8 ; CDlgServerOptionItemPersonal::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItemPersonal@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItemPersonal@@8 DD 00H		; CDlgServerOptionItemPersonal::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerOptionItemPersonal@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItemPersonal@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItemPersonal@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItemPersonal `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItemPersonal@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItemPersonal@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItemPersonal@@6B@ DD 00H		; CDlgServerOptionItemPersonal::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItemPersonal@@@8
	DD	FLAT:??_R3CDlgServerOptionItemPersonal@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItemCustom@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItemCustom@@8 DD FLAT:??_R0?AVCDlgServerOptionItemCustom@@@8 ; CDlgServerOptionItemCustom::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItemCustom@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItemCustom@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItemCustom@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItemCustom@@8 ; CDlgServerOptionItemCustom::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItemCustom@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItemCustom@@8 DD 00H		; CDlgServerOptionItemCustom::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerOptionItemCustom@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItemCustom@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItemCustom@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItemCustom `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItemCustom@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItemCustom@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItemCustom@@6B@ DD 00H		; CDlgServerOptionItemCustom::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItemCustom@@@8
	DD	FLAT:??_R3CDlgServerOptionItemCustom@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItem5@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItem5@@8 DD FLAT:??_R0?AVCDlgServerOptionItem5@@@8 ; CDlgServerOptionItem5::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItem5@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItem5@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItem5@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItem5@@8 ; CDlgServerOptionItem5::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItem5@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItem5@@8 DD 00H			; CDlgServerOptionItem5::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerOptionItem5@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItem5@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItem5@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItem5 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItem5@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItem5@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItem5@@6B@ DD 00H			; CDlgServerOptionItem5::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItem5@@@8
	DD	FLAT:??_R3CDlgServerOptionItem5@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItem3@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItem3@@8 DD FLAT:??_R0?AVCDlgServerOptionItem3@@@8 ; CDlgServerOptionItem3::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItem3@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItem3@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItem3@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItem3@@8 ; CDlgServerOptionItem3::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItem3@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItem3@@8 DD 00H			; CDlgServerOptionItem3::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerOptionItem3@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItem3@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItem3@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItem3 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItem3@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItem3@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItem3@@6B@ DD 00H			; CDlgServerOptionItem3::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItem3@@@8
	DD	FLAT:??_R3CDlgServerOptionItem3@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItem2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItem2@@8 DD FLAT:??_R0?AVCDlgServerOptionItem2@@@8 ; CDlgServerOptionItem2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItem2@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItem2@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItem2@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItem2@@8 ; CDlgServerOptionItem2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItem2@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItem2@@8 DD 00H			; CDlgServerOptionItem2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerOptionItem2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItem2@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItem2@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItem2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItem2@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItem2@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItem2@@6B@ DD 00H			; CDlgServerOptionItem2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItem2@@@8
	DD	FLAT:??_R3CDlgServerOptionItem2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItem1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItem1@@8 DD FLAT:??_R0?AVCDlgServerOptionItem1@@@8 ; CDlgServerOptionItem1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItem1@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItem1@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItem1@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItem1@@8 ; CDlgServerOptionItem1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItem1@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItem1@@8 DD 00H			; CDlgServerOptionItem1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerOptionItem1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItem1@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItem1@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItem1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItem1@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItem1@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItem1@@6B@ DD 00H			; CDlgServerOptionItem1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItem1@@@8
	DD	FLAT:??_R3CDlgServerOptionItem1@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerWizardItem@@8
rdata$r	SEGMENT
??_R2CDlgServerWizardItem@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerWizardItem@@8 ; CDlgServerWizardItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerWizardItem@@8
rdata$r	SEGMENT
??_R3CDlgServerWizardItem@@8 DD 00H			; CDlgServerWizardItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgServerWizardItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerWizardItem@@@8
data$r	SEGMENT
??_R0?AVCDlgServerWizardItem@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerWizardItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerWizardItem@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerWizardItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerWizardItem@@8 DD FLAT:??_R0?AVCDlgServerWizardItem@@@8 ; CDlgServerWizardItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerWizardItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerWizardItem2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerWizardItem2@@8 DD FLAT:??_R0?AVCDlgServerWizardItem2@@@8 ; CDlgServerWizardItem2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerWizardItem2@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerWizardItem2@@8
rdata$r	SEGMENT
??_R2CDlgServerWizardItem2@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerWizardItem2@@8 ; CDlgServerWizardItem2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgServerWizardItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerWizardItem2@@8
rdata$r	SEGMENT
??_R3CDlgServerWizardItem2@@8 DD 00H			; CDlgServerWizardItem2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgServerWizardItem2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerWizardItem2@@@8
data$r	SEGMENT
??_R0?AVCDlgServerWizardItem2@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerWizardItem2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerWizardItem2@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerWizardItem2@@6B@
rdata$r	SEGMENT
??_R4CDlgServerWizardItem2@@6B@ DD 00H			; CDlgServerWizardItem2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerWizardItem2@@@8
	DD	FLAT:??_R3CDlgServerWizardItem2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerOptionItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerOptionItem@@8 DD FLAT:??_R0?AVCDlgServerOptionItem@@@8 ; CDlgServerOptionItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerOptionItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerOptionItem@@8
rdata$r	SEGMENT
??_R2CDlgServerOptionItem@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerOptionItem@@8 ; CDlgServerOptionItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerOptionItem@@8
rdata$r	SEGMENT
??_R3CDlgServerOptionItem@@8 DD 00H			; CDlgServerOptionItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgServerOptionItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerOptionItem@@@8
data$r	SEGMENT
??_R0?AVCDlgServerOptionItem@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgServerOptionItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerOptionItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerOptionItem@@6B@
rdata$r	SEGMENT
??_R4CDlgServerOptionItem@@6B@ DD 00H			; CDlgServerOptionItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerOptionItem@@@8
	DD	FLAT:??_R3CDlgServerOptionItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerWizard@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerWizard@@8 DD FLAT:??_R0?AVCDlgServerWizard@@@8 ; CDlgServerWizard::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerWizard@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerWizard@@8
rdata$r	SEGMENT
??_R2CDlgServerWizard@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerWizard@@8 ; CDlgServerWizard::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerWizard@@8
rdata$r	SEGMENT
??_R3CDlgServerWizard@@8 DD 00H				; CDlgServerWizard::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgServerWizard@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerWizard@@@8
data$r	SEGMENT
??_R0?AVCDlgServerWizard@@@8 DD FLAT:??_7type_info@@6B@	; CDlgServerWizard `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerWizard@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerWizard@@6B@
rdata$r	SEGMENT
??_R4CDlgServerWizard@@6B@ DD 00H			; CDlgServerWizard::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerWizard@@@8
	DD	FLAT:??_R3CDlgServerWizard@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CServerInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServerInfoManager@@8 DD FLAT:??_R0?AVCServerInfoManager@@@8 ; CServerInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServerInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CServerInfoManager@@8
rdata$r	SEGMENT
??_R2CServerInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CServerInfoManager@@8 ; CServerInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CServerInfoManager@@8
rdata$r	SEGMENT
??_R3CServerInfoManager@@8 DD 00H			; CServerInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CServerInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServerInfoManager@@@8
data$r	SEGMENT
??_R0?AVCServerInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CServerInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServerInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServerInfoManager@@6B@
rdata$r	SEGMENT
??_R4CServerInfoManager@@6B@ DD 00H			; CServerInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServerInfoManager@@@8
	DD	FLAT:??_R3CServerInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchOptionBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchOptionBuffer@@8 DD FLAT:??_R0?AVCMatchOptionBuffer@@@8 ; CMatchOptionBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchOptionBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchOptionBuffer@@8
rdata$r	SEGMENT
??_R2CMatchOptionBuffer@@8 DD FLAT:??_R1A@?0A@EA@CMatchOptionBuffer@@8 ; CMatchOptionBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchOptionBuffer@@8
rdata$r	SEGMENT
??_R3CMatchOptionBuffer@@8 DD 00H			; CMatchOptionBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchOptionBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchOptionBuffer@@@8
data$r	SEGMENT
??_R0?AVCMatchOptionBuffer@@@8 DD FLAT:??_7type_info@@6B@ ; CMatchOptionBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchOptionBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchOptionBuffer@@6B@
rdata$r	SEGMENT
??_R4CMatchOptionBuffer@@6B@ DD 00H			; CMatchOptionBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchOptionBuffer@@@8
	DD	FLAT:??_R3CMatchOptionBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleInfoManager@@8 DD FLAT:??_R0?AVCModuleInfoManager@@@8 ; CModuleInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleInfoManager@@8
rdata$r	SEGMENT
??_R2CModuleInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CModuleInfoManager@@8 ; CModuleInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleInfoManager@@8
rdata$r	SEGMENT
??_R3CModuleInfoManager@@8 DD 00H			; CModuleInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleInfoManager@@@8
data$r	SEGMENT
??_R0?AVCModuleInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleInfoManager@@6B@
rdata$r	SEGMENT
??_R4CModuleInfoManager@@6B@ DD 00H			; CModuleInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleInfoManager@@@8
	DD	FLAT:??_R3CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@
rdata$r	SEGMENT
??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@ DD 00H ; CTempldateHelper<IGameServiceManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8
	DD	FLAT:??_R3?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	SEGMENT
??_R2?$CTempldateHelper@UIGameServiceManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	SEGMENT
??_R3?$CTempldateHelper@UIGameServiceManager@@@@8 DD 00H ; CTempldateHelper<IGameServiceManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8
data$r	SEGMENT
??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; CTempldateHelper<IGameServiceManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTempldateHelper@UIGameServiceManager@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8 DD FLAT:??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGameServiceManagerHelper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGameServiceManagerHelper@@8 DD FLAT:??_R0?AVCGameServiceManagerHelper@@@8 ; CGameServiceManagerHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGameServiceManagerHelper@@8
rdata$r	ENDS
;	COMDAT ??_R2CGameServiceManagerHelper@@8
rdata$r	SEGMENT
??_R2CGameServiceManagerHelper@@8 DD FLAT:??_R1A@?0A@EA@CGameServiceManagerHelper@@8 ; CGameServiceManagerHelper::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CGameServiceManagerHelper@@8
rdata$r	SEGMENT
??_R3CGameServiceManagerHelper@@8 DD 00H		; CGameServiceManagerHelper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGameServiceManagerHelper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGameServiceManagerHelper@@@8
data$r	SEGMENT
??_R0?AVCGameServiceManagerHelper@@@8 DD FLAT:??_7type_info@@6B@ ; CGameServiceManagerHelper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGameServiceManagerHelper@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGameServiceManagerHelper@@6B@
rdata$r	SEGMENT
??_R4CGameServiceManagerHelper@@6B@ DD 00H		; CGameServiceManagerHelper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGameServiceManagerHelper@@@8
	DD	FLAT:??_R3CGameServiceManagerHelper@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
CONST	SEGMENT
??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ DB 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH
	DB	0a1H, 0b0H, '%s', 0a1H, 0b1H, 0b2H, 0faH, 0c9H, 0faH, 0ceH, 0b4H
	DB	0d6H, 0aaH, 0d2H, 0ecH, 0b3H, 0a3H, 0b4H, 0edH, 0ceH, 0f3H, 0a3H
	DB	0acH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0a1H, 0b0H, '%s', 0a1H, 0b1H, 0a3H, 0acH, 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H, 0b0H, 0dcH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ DB 0b5H
	DB	0f7H, 0d3H, 0c3H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H
	DB	0b1H, 0c9H, 0faH, 0b3H, 0c9H, 0b6H, 0d4H, 0cfH, 0f3H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
CONST	SEGMENT
??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ DB 0d5H
	DB	0d2H, 0b2H, 0bbH, 0b5H, 0bdH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H
	DB	0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H, 0b1H
	DB	':%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ DB 0a1H
	DB	0b0H, '%s', 0a1H, 0b1H, 0c4H, 0a3H, 0bfH, 0e9H, 0bcH, 0d3H, 0d4H
	DB	0d8H, 0caH, 0a7H, 0b0H, 0dcH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\m'
	DB	'odule.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IBIEHAJI@?$LH?$PO?N?q?$LH?Q?J?$PN?$KD?$LK@
CONST	SEGMENT
??_C@_0L@IBIEHAJI@?$LH?$PO?N?q?$LH?Q?J?$PN?$KD?$LK@ DB 0b7H, 0feH, 0ceH, 0f1H
	DB	0b7H, 0d1H, 0caH, 0fdH, 0a3H, 0baH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NIKGMENH@?K?$LA?J?U?$LB?H?$MA?$PN?$KD?$LK@
CONST	SEGMENT
??_C@_0L@NIKGMENH@?K?$LA?J?U?$LB?H?$MA?$PN?$KD?$LK@ DB 0cbH, 0b0H, 0caH, 0d5H
	DB	0b1H, 0c8H, 0c0H, 0fdH, 0a3H, 0baH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBODAJDE@EverySendPageCount@
CONST	SEGMENT
??_C@_0BD@GBODAJDE@EverySendPageCount@ DB 'EverySendPageCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IGEEDJJG@VisibleTableCount@
CONST	SEGMENT
??_C@_0BC@IGEEDJJG@VisibleTableCount@ DB 'VisibleTableCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BMJGHNOL@?$CFs?2MobileParameter?4ini@
CONST	SEGMENT
??_C@_0BH@BMJGHNOL@?$CFs?2MobileParameter?4ini@ DB '%s\MobileParameter.in'
	DB	'i', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CJFLLFDE@?S?N?O?$LH?$LH?$LP?$LM?d?E?d?V?C?$LD?I?$LJ?$KG@
CONST	SEGMENT
??_C@_0BB@CJFLLFDE@?S?N?O?$LH?$LH?$LP?$LM?d?E?d?V?C?$LD?I?$LJ?$KG@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0c5H, 0e4H, 0d6H, 0c3H
	DB	0b3H, 0c9H, 0b9H, 0a6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HACHHGOC@?S?N?O?$LH?$LH?$LP?$LM?d?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@
CONST	SEGMENT
??_C@_0BB@HACHHGOC@?S?N?O?$LH?$LH?$LP?$LM?d?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0b3H, 0c9H, 0b9H, 0a6H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedFinish@CDlgServerWizard@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedFinish@CDlgServerWizard@@QAEXXZ@4JA DD 0a6cH ; `CDlgServerWizard::OnBnClickedFinish'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedNext@CDlgServerWizard@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedNext@CDlgServerWizard@@QAEXXZ@4JA DD 0a60H ; `CDlgServerWizard::OnBnClickedNext'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedLast@CDlgServerWizard@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedLast@CDlgServerWizard@@QAEXXZ@4JA DD 0a53H ; `CDlgServerWizard::OnBnClickedLast'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@PPCMMBCC@?$LH?$LP?$LM?d?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@
CONST	SEGMENT
??_C@_0BN@PPCMMBCC@?$LH?$LP?$LM?d?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@ DB 0b7H
	DB	0bfH, 0bcH, 0e4H, 0c5H, 0e4H, 0d6H, 0c3H, 0cfH, 0f2H, 0b5H, 0bcH
	DB	' --- [ ', 0b2H, 0bdH, 0d6H, 0e8H, ' %d ]', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z@4JA DD 09cbH ; `CDlgServerWizard::SetWizardParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08INBHOBNB@?T?$LM?U?$LN?$LG?$KI?V?F@
CONST	SEGMENT
??_C@_08INBHOBNB@?T?$LM?U?$LN?$LG?$KI?V?F@ DB 0d4H, 0bcH, 0d5H, 0bdH, 0b6H
	DB	0a8H, 0d6H, 0c6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOACJLAD@?$LH?$PO?N?q?$LG?$KI?V?F@
CONST	SEGMENT
??_C@_08JOACJLAD@?$LH?$PO?N?q?$LG?$KI?V?F@ DB 0b7H, 0feH, 0ceH, 0f1H, 0b6H
	DB	0a8H, 0d6H, 0c6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FGFOLDNK@?K?$LN?H?K?$LH?$LP?E?d?V?C@
CONST	SEGMENT
??_C@_0L@FGFOLDNK@?K?$LN?H?K?$LH?$LP?E?d?V?C@ DB 0cbH, 0bdH, 0c8H, 0cbH, 0b7H
	DB	0bfH, 0c5H, 0e4H, 0d6H, 0c3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LBOCGJIJ@?$LH?V?W?i?Q?$KB?O?n@
CONST	SEGMENT
??_C@_08LBOCGJIJ@?$LH?V?W?i?Q?$KB?O?n@ DB 0b7H, 0d6H, 0d7H, 0e9H, 0d1H, 0a1H
	DB	0cfH, 0eeH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08ELGJNJNI@?$LH?$LP?$LM?d?Q?$KB?O?n@
CONST	SEGMENT
??_C@_08ELGJNJNI@?$LH?$LP?$LM?d?Q?$KB?O?n@ DB 0b7H, 0bfH, 0bcH, 0e4H, 0d1H
	DB	0a1H, 0cfH, 0eeH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08IEBKPAKK@?$LL?y?$LB?$LO?E?d?V?C@
CONST	SEGMENT
??_C@_08IEBKPAKK@?$LL?y?$LB?$LO?E?d?V?C@ DB 0bbH, 0f9H, 0b1H, 0beH, 0c5H, 0e4H
	DB	0d6H, 0c3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0a3H, 0bfH, 0e9H, 0b9H, 0dcH, 0c0H, 0edH, '\d'
	DB	'lgserverwizard.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ@4JA DD 0889H ; `CDlgServerWizardItem1::LoadDBModuleItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DA@PHBCCHJI@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LM?S?T?X?J?$KH?$LA?$NM?$KD?$KM?$LE?$LE?$LN?$KI?S?N@
CONST	SEGMENT
??_C@_0DA@PHBCCHJI@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LM?S?T?X?J?$KH?$LA?$NM?$KD?$KM?$LE?$LE?$LN?$KI?S?N@ DB '['
	DB	' %s ] ', 0b7H, 0feH, 0ceH, 0f1H, 0d7H, 0e9H, 0bcH, 0feH, 0bcH
	DB	0d3H, 0d4H, 0d8H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0acH, 0b4H, 0b4H
	DB	0bdH, 0a8H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0caH
	DB	0a7H, 0b0H, 0dcH, 0a1H, 0beH, '%s', 0a1H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FMLCDPAO@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LI?$PM?P?B?A?K?$KD?$KM?J?G?$LH?q?$LL?$LJ?$LM?L@
CONST	SEGMENT
??_C@_0CO@FMLCDPAO@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LI?$PM?P?B?A?K?$KD?$KM?J?G?$LH?q?$LL?$LJ?$LM?L@ DB '['
	DB	' %s ] ', 0b7H, 0feH, 0ceH, 0f1H, 0d7H, 0e9H, 0bcH, 0feH, 0b8H
	DB	0fcH, 0d0H, 0c2H, 0c1H, 0cbH, 0a3H, 0acH, 0caH, 0c7H, 0b7H, 0f1H
	DB	0bbH, 0b9H, 0bcH, 0ccH, 0d0H, 0f8H, 0b4H, 0b4H, 0bdH, 0a8H, 0b7H
	DB	0bfH, 0bcH, 0e4H, 0c2H, 0f0H, 0a3H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PKPMOEPA@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LL?$LJ?C?$LL?S?P?$LA?$LC?W?$LA?$KD?$KM?G?k?O?H@
CONST	SEGMENT
??_C@_0CM@PKPMOEPA@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LL?$LJ?C?$LL?S?P?$LA?$LC?W?$LA?$KD?$KM?G?k?O?H@ DB '['
	DB	' %s ] ', 0b7H, 0feH, 0ceH, 0f1H, 0d7H, 0e9H, 0bcH, 0feH, 0bbH
	DB	0b9H, 0c3H, 0bbH, 0d3H, 0d0H, 0b0H, 0b2H, 0d7H, 0b0H, 0a3H, 0acH
	DB	0c7H, 0ebH, 0cfH, 0c8H, 0b0H, 0b2H, 0d7H, 0b0H, 0b7H, 0feH, 0ceH
	DB	0f1H, 0d7H, 0e9H, 0bcH, 0feH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@
CONST	SEGMENT
??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@ DB 'CreateGameServiceManager'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PJKCGFJH@?G?k?D?z?O?H?$LE?S?S?N?O?$LH?A?P?$LB?m?V?P?Q?$KB?T?q?S?N?O?$LH?W?i?$LM?$PO@
CONST	SEGMENT
??_C@_0BP@PJKCGFJH@?G?k?D?z?O?H?$LE?S?S?N?O?$LH?A?P?$LB?m?V?P?Q?$KB?T?q?S?N?O?$LH?W?i?$LM?$PO@ DB 0c7H
	DB	0ebH, 0c4H, 0faH, 0cfH, 0c8H, 0b4H, 0d3H, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0c1H, 0d0H, 0b1H, 0edH, 0d6H, 0d0H, 0d1H, 0a1H, 0d4H, 0f1H, 0d3H
	DB	0ceH, 0cfH, 0b7H, 0d7H, 0e9H, 0bcH, 0feH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CFAENEBB@?$LL?$PN?$LH?V5@
CONST	SEGMENT
??_C@_05CFAENEBB@?$LL?$PN?$LH?V5@ DB 0bbH, 0fdH, 0b7H, 0d6H, '5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EKDMIEOE@?H?$KG?J?$PN5@
CONST	SEGMENT
??_C@_05EKDMIEOE@?H?$KG?J?$PN5@ DB 0c8H, 0a6H, 0caH, 0fdH, '5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IIJHAJMC@?J?$LB?$LM?d5@
CONST	SEGMENT
??_C@_05IIJHAJMC@?J?$LB?$LM?d5@ DB 0caH, 0b1H, 0bcH, 0e4H, '5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GOJFIKPH@?$LO?V?J?$PN5@
CONST	SEGMENT
??_C@_05GOJFIKPH@?$LO?V?J?$PN5@ DB 0beH, 0d6H, 0caH, 0fdH, '5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DMBPOFFA@?$LL?$PN?$LH?V4@
CONST	SEGMENT
??_C@_05DMBPOFFA@?$LL?$PN?$LH?V4@ DB 0bbH, 0fdH, 0b7H, 0d6H, '4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FDCHLFKF@?H?$KG?J?$PN4@
CONST	SEGMENT
??_C@_05FDCHLFKF@?H?$KG?J?$PN4@ DB 0c8H, 0a6H, 0caH, 0fdH, '4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05JBIMDIID@?J?$LB?$LM?d4@
CONST	SEGMENT
??_C@_05JBIMDIID@?J?$LB?$LM?d4@ DB 0caH, 0b1H, 0bcH, 0e4H, '4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HHIOLLLG@?$LO?V?J?$PN4@
CONST	SEGMENT
??_C@_05HHIOLLLG@?$LO?V?J?$PN4@ DB 0beH, 0d6H, 0caH, 0fdH, '4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDFOHDJH@?$LL?$PN?$LH?V3@
CONST	SEGMENT
??_C@_05HDFOHDJH@?$LL?$PN?$LH?V3@ DB 0bbH, 0fdH, 0b7H, 0d6H, '3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BMGGCDGC@?H?$KG?J?$PN3@
CONST	SEGMENT
??_C@_05BMGGCDGC@?H?$KG?J?$PN3@ DB 0c8H, 0a6H, 0caH, 0fdH, '3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NOMNKOEE@?J?$LB?$LM?d3@
CONST	SEGMENT
??_C@_05NOMNKOEE@?J?$LB?$LM?d3@ DB 0caH, 0b1H, 0bcH, 0e4H, '3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DIMPCNHB@?$LO?V?J?$PN3@
CONST	SEGMENT
??_C@_05DIMPCNHB@?$LO?V?J?$PN3@ DB 0beH, 0d6H, 0caH, 0fdH, '3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GKEFECNG@?$LL?$PN?$LH?V2@
CONST	SEGMENT
??_C@_05GKEFECNG@?$LL?$PN?$LH?V2@ DB 0bbH, 0fdH, 0b7H, 0d6H, '2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FHNBCCD@?H?$KG?J?$PN2@
CONST	SEGMENT
??_C@_05FHNBCCD@?H?$KG?J?$PN2@ DB 0c8H, 0a6H, 0caH, 0fdH, '2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHNGJPAF@?J?$LB?$LM?d2@
CONST	SEGMENT
??_C@_05MHNGJPAF@?J?$LB?$LM?d2@ DB 0caH, 0b1H, 0bcH, 0e4H, '2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CBNEBMDA@?$LO?V?J?$PN2@
CONST	SEGMENT
??_C@_05CBNEBMDA@?$LO?V?J?$PN2@ DB 0beH, 0d6H, 0caH, 0fdH, '2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EBGIBBBF@?$LL?$PN?$LH?V1@
CONST	SEGMENT
??_C@_05EBGIBBBF@?$LL?$PN?$LH?V1@ DB 0bbH, 0fdH, 0b7H, 0d6H, '1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05COFAEBOA@?H?$KG?J?$PN1@
CONST	SEGMENT
??_C@_05COFAEBOA@?H?$KG?J?$PN1@ DB 0c8H, 0a6H, 0caH, 0fdH, '1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05OMPLMMMG@?J?$LB?$LM?d1@
CONST	SEGMENT
??_C@_05OMPLMMMG@?J?$LB?$LM?d1@ DB 0caH, 0b1H, 0bcH, 0e4H, '1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KPJEPPD@?$LO?V?J?$PN1@
CONST	SEGMENT
??_C@_05KPJEPPD@?$LO?V?J?$PN1@ DB 0beH, 0d6H, 0caH, 0fdH, '1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MCMOAOCB@GameMode_?$CFd@
CONST	SEGMENT
??_C@_0M@MCMOAOCB@GameMode_?$CFd@ DB 'GameMode_%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NFLEKBDJ@IniScore_?$CFd@
CONST	SEGMENT
??_C@_0M@NFLEKBDJ@IniScore_?$CFd@ DB 'IniScore_%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PLHAIOPP@AAPayFee_?$CFd@
CONST	SEGMENT
??_C@_0M@PLHAIOPP@AAPayFee_?$CFd@ DB 'AAPayFee_%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPCPBNFG@PayFee_?$CFd@
CONST	SEGMENT
??_C@_09NPCPBNFG@PayFee_?$CFd@ DB 'PayFee_%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPNJNFLH@FeeParameter@
CONST	SEGMENT
??_C@_0N@BPNJNFLH@FeeParameter@ DB 'FeeParameter', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NDJBEBBP@PlayTurnLimit_?$CFd@
CONST	SEGMENT
??_C@_0BB@NDJBEBBP@PlayTurnLimit_?$CFd@ DB 'PlayTurnLimit_%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MEGPCNND@CreateRoomRight@
CONST	SEGMENT
??_C@_0BA@MEGPCNND@CreateRoomRight@ DB 'CreateRoomRight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGNJEEEJ@CreateRight@
CONST	SEGMENT
??_C@_0M@JGNJEEEJ@CreateRight@ DB 'CreateRight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHDGOHJM@EndFreeTime@
CONST	SEGMENT
??_C@_0M@OHDGOHJM@EndFreeTime@ DB 'EndFreeTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DEEAMCAI@BeginFreeTime@
CONST	SEGMENT
??_C@_0O@DEEAMCAI@BeginFreeTime@ DB 'BeginFreeTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MAFCEFJP@TimeAfterCreateRoom@
CONST	SEGMENT
??_C@_0BE@MAFCEFJP@TimeAfterCreateRoom@ DB 'TimeAfterCreateRoom', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EFKEMBID@TimeNotBeginGame@
CONST	SEGMENT
??_C@_0BB@EFKEMBID@TimeNotBeginGame@ DB 'TimeNotBeginGame', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BHHEMCMJ@TimeOffLineCount@
CONST	SEGMENT
??_C@_0BB@BHHEMCMJ@TimeOffLineCount@ DB 'TimeOffLineCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHDBBOLF@TimeAfterBeginCount@
CONST	SEGMENT
??_C@_0BE@NHDBBOLF@TimeAfterBeginCount@ DB 'TimeAfterBeginCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAGABJFM@PlayTimeLimit@
CONST	SEGMENT
??_C@_0O@FAGABJFM@PlayTimeLimit@ DB 'PlayTimeLimit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FDPMPBME@PlayTurnCount@
CONST	SEGMENT
??_C@_0O@FDPMPBME@PlayTurnCount@ DB 'PlayTurnCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LNMJOPEM@CanCreateCount@
CONST	SEGMENT
??_C@_0P@LNMJOPEM@CanCreateCount@ DB 'CanCreateCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GCOMLPGF@PersonalRoomTax@
CONST	SEGMENT
??_C@_0BA@GCOMLPGF@PersonalRoomTax@ DB 'PersonalRoomTax', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CNCFIDBJ@MaxCellScore@
CONST	SEGMENT
??_C@_0N@CNCFIDBJ@MaxCellScore@ DB 'MaxCellScore', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BBGKJOKD@MaxPeople@
CONST	SEGMENT
??_C@_09BBGKJOKD@MaxPeople@ DB 'MaxPeople', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BAGGAEBH@MinPeople@
CONST	SEGMENT
??_C@_09BAGGAEBH@MinPeople@ DB 'MinPeople', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CJHLBMGC@Option@
CONST	SEGMENT
??_C@_06CJHLBMGC@Option@ DB 'Option', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HLGININO@IsJoinGame@
CONST	SEGMENT
??_C@_0L@HLGININO@IsJoinGame@ DB 'IsJoinGame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKGENIKG@Enable@
CONST	SEGMENT
??_C@_06CKGENIKG@Enable@ DB 'Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DOAOMMKG@Enabled@
CONST	SEGMENT
??_C@_07DOAOMMKG@Enabled@ DB 'Enabled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LOOPACNL@?$CFs?2?$CFd?4ini@
CONST	SEGMENT
??_C@_09LOOPACNL@?$CFs?2?$CFd?4ini@ DB '%s\%d.ini', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HHFBKMPP@?C?b?$LH?Q?J?$LB?$LM?d?D?Z?$KD?$KM?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?$LL?O?$PL?$LK?D?W?j?J?$KP@
CONST	SEGMENT
??_C@_0BP@HHFBKMPP@?C?b?$LH?Q?J?$LB?$LM?d?D?Z?$KD?$KM?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?$LL?O?$PL?$LK?D?W?j?J?$KP@ DB 0c3H
	DB	0e2H, 0b7H, 0d1H, 0caH, 0b1H, 0bcH, 0e4H, 0c4H, 0daH, 0a3H, 0acH
	DB	0b4H, 0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0b2H, 0bbH, 0cfH
	DB	0fbH, 0baH, 0c4H, 0d7H, 0eaH, 0caH, 0afH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NPDJBIPG@?K?$LN?H?K?$LH?$LP?$LG?$MA?A?$KC?$LF?D?K?$LA?J?U?$KD?$KM?$LK?M?M?$KI?S?C?K?$LA?J?U?$LJ?$LC?M@
CONST	SEGMENT
??_C@_0CF@NPDJBIPG@?K?$LN?H?K?$LH?$LP?$LG?$MA?A?$KC?$LF?D?K?$LA?J?U?$KD?$KM?$LK?M?M?$KI?S?C?K?$LA?J?U?$LJ?$LC?M@ DB 0cbH
	DB	0bdH, 0c8H, 0cbH, 0b7H, 0bfH, 0b6H, 0c0H, 0c1H, 0a2H, 0b5H, 0c4H
	DB	0cbH, 0b0H, 0caH, 0d5H, 0a3H, 0acH, 0baH, 0cdH, 0cdH, 0a8H, 0d3H
	DB	0c3H, 0cbH, 0b0H, 0caH, 0d5H, 0b9H, 0b2H, 0cdH, 0acH, 0bcH, 0c6H
	DB	0cbH, 0e3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BAIHJHEF@?$LH?$LP?V?w?$LP?I?R?T?$LE?$LE?$LN?$KI?W?n?$LE?s?J?$PN?A?$LP?$KD?$KM?N?$KK0?$LB?m?J?$LO?$LC?$LL@
CONST	SEGMENT
??_C@_0CE@BAIHJHEF@?$LH?$LP?V?w?$LP?I?R?T?$LE?$LE?$LN?$KI?W?n?$LE?s?J?$PN?A?$LP?$KD?$KM?N?$KK0?$LB?m?J?$LO?$LC?$LL@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0bfH, 0c9H, 0d2H, 0d4H, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0d7H, 0eeH, 0b4H, 0f3H, 0caH, 0fdH, 0c1H, 0bfH, 0a3H, 0acH, 0ceH
	DB	0aaH, '0', 0b1H, 0edH, 0caH, 0beH, 0b2H, 0bbH, 0cfH, 0deH, 0d6H
	DB	0c6H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OJIPJDBF@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LP?I?R?T?$LC?$LL?$LN?x?H?k@
CONST	SEGMENT
??_C@_0BH@OJIPJDBF@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LP?I?R?T?$LC?$LL?$LN?x?H?k@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0b4H, 0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0bfH, 0c9H, 0d2H, 0d4H, 0b2H, 0bbH, 0bdH, 0f8H, 0c8H, 0ebH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PHEPAGLP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LL?$PN?$LH?V?I?O?O?$NO?D?$KD?J?$LN?$LN?x?P?P@
CONST	SEGMENT
??_C@_0BL@PHEPAGLP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LL?$PN?$LH?V?I?O?O?$NO?D?$KD?J?$LN?$LN?x?P?P@ DB 0b4H
	DB	0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d4H, 0bbH, 0fdH
	DB	0b7H, 0d6H, 0c9H, 0cfH, 0cfH, 0deH, 0c4H, 0a3H, 0caH, 0bdH, 0bdH
	DB	0f8H, 0d0H, 0d0H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HPHMMNIB@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?H?$KG?J?$PN?D?$KD?J?$LN?$LN?x?P?P@
CONST	SEGMENT
??_C@_0BH@HPHMMNIB@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?H?$KG?J?$PN?D?$KD?J?$LN?$LN?x?P?P@ DB 0b4H
	DB	0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d4H, 0c8H, 0a6H
	DB	0caH, 0fdH, 0c4H, 0a3H, 0caH, 0bdH, 0bdH, 0f8H, 0d0H, 0d0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KKIMEOCL@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?J?$LB?$LM?d?D?$KD?J?$LN?$LN?x?P?P@
CONST	SEGMENT
??_C@_0BH@KKIMEOCL@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?J?$LB?$LM?d?D?$KD?J?$LN?$LN?x?P?P@ DB 0b4H
	DB	0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d4H, 0caH, 0b1H
	DB	0bcH, 0e4H, 0c4H, 0a3H, 0caH, 0bdH, 0bdH, 0f8H, 0d0H, 0d0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EBCHOPCM@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LO?V?J?$PN?D?$KD?J?$LN?$LN?x?P?P@
CONST	SEGMENT
??_C@_0BH@EBCHOPCM@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LO?V?J?$PN?D?$KD?J?$LN?$LN?x?P?P@ DB 0b4H
	DB	0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d4H, 0beH, 0d6H
	DB	0caH, 0fdH, 0c4H, 0a3H, 0caH, 0bdH, 0bdH, 0f8H, 0d0H, 0d0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LFMLNCPB@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LK?s?G?$LP?V?F?$LN?x?H?k?$LH?$LP?$LM?d@
CONST	SEGMENT
??_C@_0BL@LFMLNCPB@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LK?s?G?$LP?V?F?$LN?x?H?k?$LH?$LP?$LM?d@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0b4H, 0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H
	DB	0baH, 0f3H, 0c7H, 0bfH, 0d6H, 0c6H, 0bdH, 0f8H, 0c8H, 0ebH, 0b7H
	DB	0bfH, 0bcH, 0e4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DNLFHFJB@?$LL?$PN?$LH?V@
CONST	SEGMENT
??_C@_04DNLFHFJB@?$LL?$PN?$LH?V@ DB 0bbH, 0fdH, 0b7H, 0d6H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LFJCGBEH@?H?$KG?J?$PN@
CONST	SEGMENT
??_C@_04LFJCGBEH@?H?$KG?J?$PN@ DB 0c8H, 0a6H, 0caH, 0fdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MJOAOAPL@?J?$LB?$LM?d@
CONST	SEGMENT
??_C@_04MJOAOAPL@?J?$LB?$LM?d@ DB 0caH, 0b1H, 0bcH, 0e4H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KIDPNELE@?$LO?V?J?$PN@
CONST	SEGMENT
??_C@_04KIDPNELE@?$LO?V?J?$PN@ DB 0beH, 0d6H, 0caH, 0fdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BIAEABAF@?$LL?$PN?$LH?V?D?$KD?J?$LN@
CONST	SEGMENT
??_C@_08BIAEABAF@?$LL?$PN?$LH?V?D?$KD?J?$LN@ DB 0bbH, 0fdH, 0b7H, 0d6H, 0c4H
	DB	0a3H, 0caH, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DJLCFFJL@?H?$KG?J?$PN?D?$KD?J?$LN@
CONST	SEGMENT
??_C@_08DJLCFFJL@?H?$KG?J?$PN?D?$KD?J?$LN@ DB 0c8H, 0a6H, 0caH, 0fdH, 0c4H
	DB	0a3H, 0caH, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MKFLPDGN@?J?$LB?$LM?d?D?$KD?J?$LN@
CONST	SEGMENT
??_C@_08MKFLPDGN@?J?$LB?$LM?d?D?$KD?J?$LN@ DB 0caH, 0b1H, 0bcH, 0e4H, 0c4H
	DB	0a3H, 0caH, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08BGFLHOFE@?$LO?V?J?$PN?D?$KD?J?$LN@
CONST	SEGMENT
??_C@_08BGFLHOFE@?$LO?V?J?$PN?D?$KD?J?$LN@ DB 0beH, 0d6H, 0caH, 0fdH, 0c4H
	DB	0a3H, 0caH, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KGBPMJDI@VIP5@
CONST	SEGMENT
??_C@_04KGBPMJDI@VIP5@ DB 'VIP5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LPAEPIHJ@VIP4@
CONST	SEGMENT
??_C@_04LPAEPIHJ@VIP4@ DB 'VIP4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PAEFGOLO@VIP3@
CONST	SEGMENT
??_C@_04PAEFGOLO@VIP3@ DB 'VIP3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OJFOFPPP@VIP2@
CONST	SEGMENT
??_C@_04OJFOFPPP@VIP2@ DB 'VIP2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MCHDAMDM@VIP1@
CONST	SEGMENT
??_C@_04MCHDAMDM@VIP1@ DB 'VIP1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MJLFADOM@?K?y?S?P?S?C?$LL?$KH@
CONST	SEGMENT
??_C@_08MJLFADOM@?K?y?S?P?S?C?$LL?$KH@ DB 0cbH, 0f9H, 0d3H, 0d0H, 0d3H, 0c3H
	DB	0bbH, 0a7H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@CLCMPDHD@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LL?a?T?$LB?$LM?$LG?$LB?p?$LB?H?W?n?$LI?$NP?$LL?a?T?$LB?$LM@
CONST	SEGMENT
??_C@_0ED@CLCMPDHD@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LL?a?T?$LB?$LM?$LG?$LB?p?$LB?H?W?n?$LI?$NP?$LL?a?T?$LB?$LM@ DB 0bdH
	DB	0f8H, 0c8H, 0ebH, 0b7H, 0bfH, 0bcH, 0e4H, 0d7H, 0eeH, 0b5H, 0cdH
	DB	0bbH, 0e1H, 0d4H, 0b1H, 0bcH, 0b6H, 0b1H, 0f0H, 0b1H, 0c8H, 0d7H
	DB	0eeH, 0b8H, 0dfH, 0bbH, 0e1H, 0d4H, 0b1H, 0bcH, 0b6H, 0b1H, 0f0H
	DB	0bbH, 0b9H, 0b8H, 0dfH, 0a3H, 0acH, 0bdH, 0abH, 0bbH, 0e1H, 0d4H
	DB	0ecH, 0b3H, 0c9H, 0c8H, 0ceH, 0baH, 0ceH, 0cdH, 0e6H, 0bcH, 0d2H
	DB	0b6H, 0bcH, 0b2H, 0bbH, 0c4H, 0dcH, 0bdH, 0f8H, 0c8H, 0ebH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@MGOIAGMH@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LD?I?$LM?$KI?$LB?H?W?n?$LI?$NP?$LD?I?$LM?$KI?$LL?$LJ?$LI?$NP?$KD@
CONST	SEGMENT
??_C@_0DL@MGOIAGMH@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LD?I?$LM?$KI?$LB?H?W?n?$LI?$NP?$LD?I?$LM?$KI?$LL?$LJ?$LI?$NP?$KD@ DB 0bdH
	DB	0f8H, 0c8H, 0ebH, 0b7H, 0bfH, 0bcH, 0e4H, 0d7H, 0eeH, 0b5H, 0cdH
	DB	0b3H, 0c9H, 0bcH, 0a8H, 0b1H, 0c8H, 0d7H, 0eeH, 0b8H, 0dfH, 0b3H
	DB	0c9H, 0bcH, 0a8H, 0bbH, 0b9H, 0b8H, 0dfH, 0a3H, 0acH, 0bdH, 0abH
	DB	0bbH, 0e1H, 0d4H, 0ecH, 0b3H, 0c9H, 0c8H, 0ceH, 0baH, 0ceH, 0cdH
	DB	0e6H, 0bcH, 0d2H, 0b6H, 0bcH, 0b2H, 0bbH, 0c4H, 0dcH, 0bdH, 0f8H
	DB	0c8H, 0ebH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HKKGDCEG@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KMPC?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@
CONST	SEGMENT
??_C@_0BN@HKKGDCEG@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KMPC?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@ DB 0b2H
	DB	0bbH, 0b9H, 0b4H, 0d1H, 0a1H, 0b5H, 0c4H, 0bbH, 0b0H, 0a3H, 0acH
	DB	'PC', 0b6H, 0cbH, 0b2H, 0bbH, 0bbH, 0e1H, 0cfH, 0d4H, 0caH, 0beH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DCCNMAEM@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KM?J?V?$LL?z?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@
CONST	SEGMENT
??_C@_0BP@DCCNMAEM@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KM?J?V?$LL?z?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@ DB 0b2H
	DB	0bbH, 0b9H, 0b4H, 0d1H, 0a1H, 0b5H, 0c4H, 0bbH, 0b0H, 0a3H, 0acH
	DB	0caH, 0d6H, 0bbH, 0faH, 0b6H, 0cbH, 0b2H, 0bbH, 0bbH, 0e1H, 0cfH
	DB	0d4H, 0caH, 0beH, 0d3H, 0ceH, 0cfH, 0b7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NKGOLKOC@?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?$LP?$KK?$LJ?X?0?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?O?B?$KD?$KM?S?C@
CONST	SEGMENT
??_C@_0DM@NKGOLKOC@?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?$LP?$KK?$LJ?X?0?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?O?B?$KD?$KM?S?C@ DB 0b7H
	DB	0c0H, 0d7H, 0f7H, 0b1H, 0d7H, 0c4H, 0a3H, 0caH, 0bdH, 0bfH, 0aaH
	DB	0b9H, 0d8H, ',', 0b7H, 0c0H, 0d7H, 0f7H, 0b1H, 0d7H, 0c4H, 0a3H
	DB	0caH, 0bdH, 0cfH, 0c2H, 0a3H, 0acH, 0d3H, 0c3H, 0bbH, 0a7H, 0b2H
	DB	0bbH, 0c4H, 0dcH, 0d7H, 0d4H, 0d6H, 0f7H, 0d1H, 0a1H, 0d7H, 0c0H
	DB	0a3H, 0acH, 0b5H, 0c8H, 0b4H, 0fdH, 0cfH, 0b5H, 0cdH, 0b3H, 0b7H
	DB	0d6H, 0c5H, 0e4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KOBIODKO@?C?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?5?W?x?O?B?V?$LL?D?$NM?T?Z?$LP?U?O?P?W?$LE?L?$KM?$KD?$KM@
CONST	SEGMENT
??_C@_0DG@KOBIODKO@?C?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?5?W?x?O?B?V?$LL?D?$NM?T?Z?$LP?U?O?P?W?$LE?L?$KM?$KD?$KM@ DB 0c3H
	DB	0bbH, 0b9H, 0b4H, 0d1H, 0a1H, 0b5H, 0c4H, 0bbH, 0b0H, ' ', 0d7H
	DB	0f8H, 0cfH, 0c2H, 0d6H, 0bbH, 0c4H, 0dcH, 0d4H, 0daH, 0bfH, 0d5H
	DB	0cfH, 0d0H, 0d7H, 0b4H, 0ccH, 0acH, 0a3H, 0acH, 0b9H, 0b4H, 0d1H
	DB	0a1H, 0c3H, 0bbH, 0d3H, 0d0H, 0cfH, 0deH, 0d6H, 0c6H, 0a3H, 0acH
	DB	0cdH, 0c6H, 0bcH, 0f6H, 0b9H, 0b4H, 0d1H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GFGGEHBF@?S?C?$LL?$KH?N?$NO?$LH?$KI?I?h?V?C?W?$MA?W?S?C?$NM?B?k@
CONST	SEGMENT
??_C@_0BF@GFGGEHBF@?S?C?$LL?$KH?N?$NO?$LH?$KI?I?h?V?C?W?$MA?W?S?C?$NM?B?k@ DB 0d3H
	DB	0c3H, 0bbH, 0a7H, 0ceH, 0deH, 0b7H, 0a8H, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0d7H, 0c0H, 0d7H, 0d3H, 0c3H, 0dcH, 0c2H, 0ebH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LELEGCLA@?S?C?$LL?$KH?I?h?V?C?$LF?D?$LH?$LP?$LM?d?$LJ?f?T?r?N?$NO?P?$KH@
CONST	SEGMENT
??_C@_0BH@LELEGCLA@?S?C?$LL?$KH?I?h?V?C?$LF?D?$LH?$LP?$LM?d?$LJ?f?T?r?N?$NO?P?$KH@ DB 0d3H
	DB	0c3H, 0bbH, 0a7H, 0c9H, 0e8H, 0d6H, 0c3H, 0b5H, 0c4H, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0b9H, 0e6H, 0d4H, 0f2H, 0ceH, 0deH, 0d0H, 0a7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MLEAOAEA@?T?$LM?U?$LN?$MA?$OA?P?M?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@
CONST	SEGMENT
??_C@_0BF@MLEAOAEA@?T?$LM?U?$LN?$MA?$OA?P?M?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0c0H, 0e0H, 0d0H, 0cdH, 0caH, 0fdH, 0beH, 0ddH
	DB	0bfH, 0e2H, 0d1H, 0a1H, 0cfH, 0eeH, 0a3H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LLCONOIB@?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@
CONST	SEGMENT
??_C@_0N@LLCONOIB@?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@ DB 0caH, 0fdH, 0beH
	DB	0ddH, 0bfH, 0e2H, 0d1H, 0a1H, 0cfH, 0eeH, 0a3H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OKHPCLBO@?$LL?$PN?$LH?V?$LP?b@
CONST	SEGMENT
??_C@_06OKHPCLBO@?$LL?$PN?$LH?V?$LP?b@ DB 0bbH, 0fdH, 0b7H, 0d6H, 0bfH, 0e2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06DFBDGPAN@?$LN?p?$LB?R?$LP?b@
CONST	SEGMENT
??_C@_06DFBDGPAN@?$LN?p?$LB?R?$LP?b@ DB 0bdH, 0f0H, 0b1H, 0d2H, 0bfH, 0e2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPKPGJDI@?C?$NM?B?k?$LH?$LP?$LM?d@
CONST	SEGMENT
??_C@_08PPKPGJDI@?C?$NM?B?k?$LH?$LP?$LM?d@ DB 0c3H, 0dcH, 0c2H, 0ebH, 0b7H
	DB	0bfH, 0bcH, 0e4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NFPDDPHH@?F?U?M?$KI?$LH?$LP?$LM?d@
CONST	SEGMENT
??_C@_08NFPDDPHH@?F?U?M?$KI?$LH?$LP?$LM?d@ DB 0c6H, 0d5H, 0cdH, 0a8H, 0b7H
	DB	0bfH, 0bcH, 0e4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@ DB 0d4H, 0bcH, 0d5H, 0bdH, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@ DB 0b2H, 0c6H, 0b8H, 0bbH, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@PKKMHEMF@?S?N?O?$LH?W?$MA?W?S?J?$PN?D?$LP?N?$NO?P?$KH?$KD?$KM?G?k?V?X?P?B?J?d?H?k?S?N?O@
CONST	SEGMENT
??_C@_0EB@PKKMHEMF@?S?N?O?$LH?W?$MA?W?S?J?$PN?D?$LP?N?$NO?P?$KH?$KD?$KM?G?k?V?X?P?B?J?d?H?k?S?N?O@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0d7H, 0c0H, 0d7H, 0d3H, 0caH, 0fdH, 0c4H, 0bfH
	DB	0ceH, 0deH, 0d0H, 0a7H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H
	DB	0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0d7H, 0c0H
	DB	0d7H, 0d3H, 0caH, 0fdH, 0c4H, 0bfH, 0a3H, 0acH, 0d3H, 0d0H, 0d0H
	DB	0a7H, 0caH, 0fdH, 0d6H, 0b5H, 0b7H, 0b6H, 0ceH, 0a7H, 0ceH, 0aaH
	DB	' 1 - 512', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DBPPFMOI@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH?$LI?q?J?$LN?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G?k?V?X?P@
CONST	SEGMENT
??_C@_0DD@DBPPFMOI@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH?$LI?q?J?$LN?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G?k?V?X?P@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0caH, 0fdH, 0beH, 0ddH, 0bfH, 0e2H, 0b5H, 0d8H
	DB	0d6H, 0b7H, 0b8H, 0f1H, 0caH, 0bdH, 0b2H, 0bbH, 0d5H, 0fdH, 0c8H
	DB	0b7H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H
	DB	0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0caH, 0fdH, 0beH, 0ddH, 0bfH
	DB	0e2H, 0b5H, 0d8H, 0d6H, 0b7H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DDNPCCLO@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?C?$PL?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@
CONST	SEGMENT
??_C@_0CJ@DDNPCCLO@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?C?$PL?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0caH, 0fdH, 0beH, 0ddH, 0bfH, 0e2H, 0c3H, 0fbH
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0ceH, 0aaH, 0bfH, 0d5H, 0a3H, 0acH, 0c7H
	DB	0ebH, 0caH, 0e4H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0caH, 0fdH
	DB	0beH, 0ddH, 0bfH, 0e2H, 0c3H, 0fbH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HOBLABLI@?S?N?O?$LH?$LH?$LP?$LM?d?$MA?$OA?P?M?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T@
CONST	SEGMENT
??_C@_0CN@HOBLABLI@?S?N?O?$LH?$LH?$LP?$LM?d?$MA?$OA?P?M?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0c0H, 0e0H, 0d0H, 0cdH
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0ceH, 0aaH, 0bfH, 0d5H, 0a3H, 0acH, 0c7H
	DB	0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0d1H, 0a1H, 0d4H, 0f1H, 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0c0H, 0e0H, 0d0H, 0cdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FKABHCFH@?S?N?O?$LH?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@
CONST	SEGMENT
??_C@_0CJ@FKABHCFH@?S?N?O?$LH?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0c3H, 0dcH, 0c2H, 0ebH
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0ceH, 0aaH, 0bfH, 0d5H, 0a3H, 0acH, 0c7H
	DB	0ebH, 0caH, 0e4H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0c3H, 0dcH, 0c2H, 0ebH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CKGBPABI@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?W?V?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@
CONST	SEGMENT
??_C@_0CJ@CKGBPABI@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?W?V?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0c3H, 0fbH, 0d7H, 0d6H
	DB	0b2H, 0bbH, 0c4H, 0dcH, 0ceH, 0aaH, 0bfH, 0d5H, 0a3H, 0acH, 0c7H
	DB	0ebH, 0caH, 0e4H, 0c8H, 0ebH, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0c3H, 0fbH, 0d7H, 0d6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@
CONST	SEGMENT
??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@ DB '%d.%d.%d.%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@NDFAJCCE@?I?h?V?C?S?N?O?$LH?K?$LA?J?U?$LL?r?U?$NP?$LH?$PO?N?q?$LH?Q?$KD?$KM?$LH?$PO?N?q?F?w?$LC@
CONST	SEGMENT
??_C@_0FH@NDFAJCCE@?I?h?V?C?S?N?O?$LH?K?$LA?J?U?$LL?r?U?$NP?$LH?$PO?N?q?$LH?Q?$KD?$KM?$LH?$PO?N?q?F?w?$LC@ DB 0c9H
	DB	0e8H, 0d6H, 0c3H, 0d3H, 0ceH, 0cfH, 0b7H, 0cbH, 0b0H, 0caH, 0d5H
	DB	0bbH, 0f2H, 0d5H, 0dfH, 0b7H, 0feH, 0ceH, 0f1H, 0b7H, 0d1H, 0a3H
	DB	0acH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0b2H, 0bfH, 0b7H, 0d6H
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0ceH, 0deH, 0d0H, 0a7H, 0a3H, 0acH, 0cdH
	DB	0c6H, 0bcH, 0f6H, 0caH, 0b9H, 0d3H, 0c3H, 0cbH, 0b0H, 0caH, 0d5H
	DB	0a3H, 0acH, 0cbH, 0b0H, 0caH, 0d5H, 0ceH, 0aaH, 0c7H, 0a7H, 0b7H
	DB	0d6H, 0b1H, 0c8H, 0a3H, 0acH, 0b7H, 0feH, 0ceH, 0f1H, 0b7H, 0d1H
	DB	0ceH, 0aaH, 0caH, 0b5H, 0bcH, 0caH, 0d6H, 0b5H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CMIHPLLM@?I?h?V?C?$LF?$KF?$LO?V?S?N?O?$LH?W?n?$LE?s?J?d?S?$KO?$KD?$KM?$LC?$LP?$LH?V?S?N?O?$LH?N@
CONST	SEGMENT
??_C@_0CD@CMIHPLLM@?I?h?V?C?$LF?$KF?$LO?V?S?N?O?$LH?W?n?$LE?s?J?d?S?$KO?$KD?$KM?$LC?$LP?$LH?V?S?N?O?$LH?N@ DB 0c9H
	DB	0e8H, 0d6H, 0c3H, 0b5H, 0a5H, 0beH, 0d6H, 0d3H, 0ceH, 0cfH, 0b7H
	DB	0d7H, 0eeH, 0b4H, 0f3H, 0caH, 0e4H, 0d3H, 0aeH, 0a3H, 0acH, 0b2H
	DB	0bfH, 0b7H, 0d6H, 0d3H, 0ceH, 0cfH, 0b7H, 0ceH, 0deH, 0d0H, 0a7H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@JONKEAKJ@?I?h?V?C?S?N?O?$LH?$LF?W?$LH?V?$KD?$KM?H?g?$LJ?$PL?N?$KK?$LH?$LP?$LP?$KI?D?$KD?J?$LN?$LC?$KC?E@
CONST	SEGMENT
??_C@_0DJ@JONKEAKJ@?I?h?V?C?S?N?O?$LH?$LF?W?$LH?V?$KD?$KM?H?g?$LJ?$PL?N?$KK?$LH?$LP?$LP?$KI?D?$KD?J?$LN?$LC?$KC?E@ DB 0c9H
	DB	0e8H, 0d6H, 0c3H, 0d3H, 0ceH, 0cfH, 0b7H, 0b5H, 0d7H, 0b7H, 0d6H
	DB	0a3H, 0acH, 0c8H, 0e7H, 0b9H, 0fbH, 0ceH, 0aaH, 0b7H, 0bfH, 0bfH
	DB	0a8H, 0c4H, 0a3H, 0caH, 0bdH, 0b2H, 0a2H, 0c5H, 0e4H, 0d6H, 0c3H
	DB	0c1H, 0cbH, 0d3H, 0ceH, 0cfH, 0b7H, 0b5H, 0d7H, 0b7H, 0d6H, 0a3H
	DB	0acH, 0d4H, 0f2H, 0b8H, 0c3H, 0cfH, 0eeH, 0caH, 0a7H, 0d0H, 0a7H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JFMMMIGM@?S?N?O?$LH?$LH?$LP?$LM?d?$LF?D?L?X?I?$KL?M?f?$LH?$KI@
CONST	SEGMENT
??_C@_0BD@JFMMMIGM@?S?N?O?$LH?$LH?$LP?$LM?d?$LF?D?L?X?I?$KL?M?f?$LH?$KI@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0b5H, 0c4H, 0ccH, 0d8H
	DB	0c9H, 0abH, 0cdH, 0e6H, 0b7H, 0a8H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FEFBIDED@?I?h?V?C?$LH?$LP?$LM?d?P?i?D?b?H?K?J?$PN?$KD?$KM?$LP?M?$LL?$KH?$LG?K?O?T?J?$LO?H?K?J@
CONST	SEGMENT
??_C@_0DH@FEFBIDED@?I?h?V?C?$LH?$LP?$LM?d?P?i?D?b?H?K?J?$PN?$KD?$KM?$LP?M?$LL?$KH?$LG?K?O?T?J?$LO?H?K?J@ DB 0c9H
	DB	0e8H, 0d6H, 0c3H, 0b7H, 0bfH, 0bcH, 0e4H, 0d0H, 0e9H, 0c4H, 0e2H
	DB	0c8H, 0cbH, 0caH, 0fdH, 0a3H, 0acH, 0bfH, 0cdH, 0bbH, 0a7H, 0b6H
	DB	0cbH, 0cfH, 0d4H, 0caH, 0beH, 0c8H, 0cbH, 0caH, 0fdH, 0ceH, 0aaH
	DB	0d5H, 0e6H, 0caH, 0b5H, 0c8H, 0cbH, 0caH, 0fdH, 0bcH, 0d3H, 0c9H
	DB	0cfH, 0d0H, 0e9H, 0c4H, 0e2H, 0c8H, 0cbH, 0caH, 0fdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@CDOLDLNP@?I?h?V?C?$LH?$LP?$LM?d?$LP?I?R?T?H?$NN?D?I?$LG?$OA?I?Y?H?K?5?$KD?$KM?$LC?$LL?L?n?D?$KM@
CONST	SEGMENT
??_C@_0DK@CDOLDLNP@?I?h?V?C?$LH?$LP?$LM?d?$LP?I?R?T?H?$NN?D?I?$LG?$OA?I?Y?H?K?5?$KD?$KM?$LC?$LL?L?n?D?$KM@ DB 0c9H
	DB	0e8H, 0d6H, 0c3H, 0b7H, 0bfH, 0bcH, 0e4H, 0bfH, 0c9H, 0d2H, 0d4H
	DB	0c8H, 0ddH, 0c4H, 0c9H, 0b6H, 0e0H, 0c9H, 0d9H, 0c8H, 0cbH, ' '
	DB	0a3H, 0acH, 0b2H, 0bbH, 0ccH, 0eeH, 0c4H, 0acH, 0c8H, 0cfH, 0ceH
	DB	0aaH, 0d7H, 0c0H, 0d7H, 0d3H, 0caH, 0fdH, 0b3H, 0cbH, 0d2H, 0d4H
	DB	0b5H, 0a5H, 0d7H, 0c0H, 0d7H, 0eeH, 0b4H, 0f3H, 0c8H, 0cbH, 0caH
	DB	0fdH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IJDFCHCA@?I?h?V?C?$LH?$LP?$LM?d?W?$MA?W?S?J?$PN?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?G?$LP?V?F?D?$KM?H@
CONST	SEGMENT
??_C@_0CE@IJDFCHCA@?I?h?V?C?$LH?$LP?$LM?d?W?$MA?W?S?J?$PN?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?G?$LP?V?F?D?$KM?H@ DB 0c9H
	DB	0e8H, 0d6H, 0c3H, 0b7H, 0bfH, 0bcH, 0e4H, 0d7H, 0c0H, 0d7H, 0d3H
	DB	0caH, 0fdH, 0a3H, 0acH, 0b0H, 0d9H, 0c8H, 0cbH, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0c7H, 0bfH, 0d6H, 0c6H, 0c4H, 0acH, 0c8H, 0cfH, 0ceH, 0aaH
	DB	'1', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JMFBPOKD@?Q?$KB?T?q?S?N?O?$LH?$MA?$OA?P?M?$LK?s?$LL?a?W?T?$LG?$KP?L?n?P?$LE?$KD?$KM?$LC?$LL?M?F?$LM@
CONST	SEGMENT
??_C@_0CF@JMFBPOKD@?Q?$KB?T?q?S?N?O?$LH?$MA?$OA?P?M?$LK?s?$LL?a?W?T?$LG?$KP?L?n?P?$LE?$KD?$KM?$LC?$LL?M?F?$LM@ DB 0d1H
	DB	0a1H, 0d4H, 0f1H, 0d3H, 0ceH, 0cfH, 0b7H, 0c0H, 0e0H, 0d0H, 0cdH
	DB	0baH, 0f3H, 0bbH, 0e1H, 0d7H, 0d4H, 0b6H, 0afH, 0ccH, 0eeH, 0d0H
	DB	0b4H, 0a3H, 0acH, 0b2H, 0bbH, 0cdH, 0c6H, 0bcH, 0f6H, 0d0H, 0deH
	DB	0b8H, 0c4H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HHOOMJCF@?T?$LM?U?$LN?J?$PN?$LO?$NN?$LP?b?E?d?V?C?$KD?$KM?V?$LL?S?P?S?N?O?$LH?$MA?$OA?P?M?Q?$KB?T@
CONST	SEGMENT
??_C@_0DF@HHOOMJCF@?T?$LM?U?$LN?J?$PN?$LO?$NN?$LP?b?E?d?V?C?$KD?$KM?V?$LL?S?P?S?N?O?$LH?$MA?$OA?P?M?Q?$KB?T@ DB 0d4H
	DB	0bcH, 0d5H, 0bdH, 0caH, 0fdH, 0beH, 0ddH, 0bfH, 0e2H, 0c5H, 0e4H
	DB	0d6H, 0c3H, 0a3H, 0acH, 0d6H, 0bbH, 0d3H, 0d0H, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0c0H, 0e0H, 0d0H, 0cdH, 0d1H, 0a1H, 0d4H, 0f1H, 0ceH, 0aaH
	DB	0d4H, 0bcH, 0d5H, 0bdH, 0c0H, 0e0H, 0d0H, 0cdH, 0a3H, 0acH, 0b2H
	DB	0c5H, 0bbH, 0e1H, 0c9H, 0faH, 0d0H, 0a7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@COOGMDKL@?S?N?O?$LH?$LH?$PO?N?q?$LG?K?$LP?Z?$KD?$KM?$LP?I?R?T?N?$KK?$LP?U?$KD?$KM?$LC?$LL?D?$NM?$LK?M?F@
CONST	SEGMENT
??_C@_0CL@COOGMDKL@?S?N?O?$LH?$LH?$PO?N?q?$LG?K?$LP?Z?$KD?$KM?$LP?I?R?T?N?$KK?$LP?U?$KD?$KM?$LC?$LL?D?$NM?$LK?M?F@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH, 0f1H, 0b6H, 0cbH, 0bfH, 0daH
	DB	0a3H, 0acH, 0bfH, 0c9H, 0d2H, 0d4H, 0ceH, 0aaH, 0bfH, 0d5H, 0a3H
	DB	0acH, 0b2H, 0bbH, 0c4H, 0dcH, 0baH, 0cdH, 0c6H, 0e4H, 0cbH, 0fbH
	DB	0b6H, 0cbH, 0bfH, 0daH, 0b3H, 0e5H, 0cdH, 0bbH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KKHNDKNH@?S?N?O?$LH?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08KKHNDKNH@?S?N?O?$LH?$MA?$OA?P?M@ DB 0d3H, 0ceH, 0cfH, 0b7H, 0c0H, 0e0H
	DB	0d0H, 0cdH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GFGAHLND@?$LH?$LP?$LM?d?$MA?$OA?P?M?I?h?V?C?N?$KK?C?$NM?B?k?$LH?$LP?$LC?E?$LP?I?S?C?$KD?$KM?W?n?$LE@
CONST	SEGMENT
??_C@_0CF@GFGAHLND@?$LH?$LP?$LM?d?$MA?$OA?P?M?I?h?V?C?N?$KK?C?$NM?B?k?$LH?$LP?$LC?E?$LP?I?S?C?$KD?$KM?W?n?$LE@ DB 0b7H
	DB	0bfH, 0bcH, 0e4H, 0c0H, 0e0H, 0d0H, 0cdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0ceH, 0aaH, 0c3H, 0dcH, 0c2H, 0ebH, 0b7H, 0bfH, 0b2H, 0c5H, 0bfH
	DB	0c9H, 0d3H, 0c3H, 0a3H, 0acH, 0d7H, 0eeH, 0b4H, 0f3H, '32', 0ceH
	DB	0bbH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PNJOEPMK@?$LP?I?I?h?V?C?N?$KK?F?U?M?$KI?$LH?$LP?$LK?M?C?$NM?B?k?$LH?$LP@
CONST	SEGMENT
??_C@_0BH@PNJOEPMK@?$LP?I?I?h?V?C?N?$KK?F?U?M?$KI?$LH?$LP?$LK?M?C?$NM?B?k?$LH?$LP@ DB 0bfH
	DB	0c9H, 0c9H, 0e8H, 0d6H, 0c3H, 0ceH, 0aaH, 0c6H, 0d5H, 0cdH, 0a8H
	DB	0b7H, 0bfH, 0baH, 0cdH, 0c3H, 0dcH, 0c2H, 0ebH, 0b7H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BMFELJAK@?S?N?O?$LH?$LF?H?$LM?$LG?5?$KD?$KM?W?n?$LE?s9999@
CONST	SEGMENT
??_C@_0BE@BMFELJAK@?S?N?O?$LH?$LF?H?$LM?$LG?5?$KD?$KM?W?n?$LE?s9999@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b5H, 0c8H, 0bcH, 0b6H, ' ', 0a3H, 0acH, 0d7H
	DB	0eeH, 0b4H, 0f3H, '9999', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HNIGNBJA@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?$KD?$KM?W?n?$LE?s?$LD?$KE?$LG?H31@
CONST	SEGMENT
??_C@_0BH@HNIGNBJA@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?$KD?$KM?W?n?$LE?s?$LD?$KE?$LG?H31@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b7H, 0bfH, 0bcH, 0e4H, 0c3H, 0fbH, 0a3H, 0acH
	DB	0d7H, 0eeH, 0b4H, 0f3H, 0b3H, 0a4H, 0b6H, 0c8H, '31', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
CONST	SEGMENT
??_C@_0BC@LFCAOGLK@ModuleManager?4dll@ DB 'ModuleManager.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@
CONST	SEGMENT
??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@ DB 'PersonalRoomService.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CModuleDBParameter@@6B@
CONST	SEGMENT
??_7CModuleDBParameter@@6B@ DD FLAT:??_R4CModuleDBParameter@@6B@ ; CModuleDBParameter::`vftable'
	DD	FLAT:??_ECModuleDBParameter@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerWizard@@6B@
CONST	SEGMENT
??_7CDlgServerWizard@@6B@ DD FLAT:??_R4CDlgServerWizard@@6B@ ; CDlgServerWizard::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerWizard@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerWizard@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerWizard@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerWizard@@UAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CDlgServerWizardItem2@@6B@
CONST	SEGMENT
??_7CDlgServerWizardItem2@@6B@ DD FLAT:??_R4CDlgServerWizardItem2@@6B@ ; CDlgServerWizardItem2::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerWizardItem2@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerWizardItem2@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CDlgServerWizardItem2@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerWizardItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerWizardItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerWizardItem2@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerWizardItem2@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerWizardItem1@@6B@
CONST	SEGMENT
??_7CDlgServerWizardItem1@@6B@ DD FLAT:??_R4CDlgServerWizardItem1@@6B@ ; CDlgServerWizardItem1::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerWizardItem1@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerWizardItem1@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CDlgServerWizardItem1@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerWizardItem1@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerWizardItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerWizardItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerWizardItem1@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerWizardItem1@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerWizardItem@@6B@
CONST	SEGMENT
??_7CDlgServerWizardItem@@6B@ DD FLAT:??_R4CDlgServerWizardItem@@6B@ ; CDlgServerWizardItem::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerWizardItem@@MAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerWizardItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerWizardItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerWizardItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItemPersonal@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItemPersonal@@6B@ DD FLAT:??_R4CDlgServerOptionItemPersonal@@6B@ ; CDlgServerOptionItemPersonal::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItemPersonal@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerOptionItemPersonal@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerOptionItemPersonal@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerOptionItemPersonal@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItemCustom@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItemCustom@@6B@ DD FLAT:??_R4CDlgServerOptionItemCustom@@6B@ ; CDlgServerOptionItemCustom::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItemCustom@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItemCustom@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerOptionItemCustom@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerOptionItemCustom@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerOptionItemCustom@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItem5@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItem5@@6B@ DD FLAT:??_R4CDlgServerOptionItem5@@6B@ ; CDlgServerOptionItem5::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItem5@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItem5@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDlgServerOptionItem5@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerOptionItem5@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerOptionItem5@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerOptionItem5@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItem3@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItem3@@6B@ DD FLAT:??_R4CDlgServerOptionItem3@@6B@ ; CDlgServerOptionItem3::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItem3@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItem3@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDlgServerOptionItem3@@MAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerOptionItem3@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerOptionItem3@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerOptionItem3@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItem2@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItem2@@6B@ DD FLAT:??_R4CDlgServerOptionItem2@@6B@ ; CDlgServerOptionItem2::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItem2@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItem2@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDlgServerOptionItem2@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerOptionItem2@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerOptionItem2@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerOptionItem2@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItem1@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItem1@@6B@ DD FLAT:??_R4CDlgServerOptionItem1@@6B@ ; CDlgServerOptionItem1::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItem1@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItem1@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDlgServerOptionItem1@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerOptionItem1@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgServerOptionItem1@@UAE_NXZ
	DD	FLAT:?RectifyControl@CDlgServerOptionItem1@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerOptionItem@@6B@
CONST	SEGMENT
??_7CDlgServerOptionItem@@6B@ DD FLAT:??_R4CDlgServerOptionItem@@6B@ ; CDlgServerOptionItem::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerOptionItem@@MAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerOptionItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgServerOptionItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CServerInfoManager@@6B@
CONST	SEGMENT
??_7CServerInfoManager@@6B@ DD FLAT:??_R4CServerInfoManager@@6B@ ; CServerInfoManager::`vftable'
	DD	FLAT:??_ECServerInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CMatchOptionBuffer@@6B@
CONST	SEGMENT
??_7CMatchOptionBuffer@@6B@ DD FLAT:??_R4CMatchOptionBuffer@@6B@ ; CMatchOptionBuffer::`vftable'
	DD	FLAT:??_ECMatchOptionBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CModuleInfoManager@@6B@
CONST	SEGMENT
??_7CModuleInfoManager@@6B@ DD FLAT:??_R4CModuleInfoManager@@6B@ ; CModuleInfoManager::`vftable'
	DD	FLAT:??_ECModuleInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGameServiceManagerHelper@@6B@
CONST	SEGMENT
??_7CGameServiceManagerHelper@@6B@ DD FLAT:??_R4CGameServiceManagerHelper@@6B@ ; CGameServiceManagerHelper::`vftable'
	DD	FLAT:??_ECGameServiceManagerHelper@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@
CONST	SEGMENT
??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@ DD FLAT:??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@ ; CTempldateHelper<IGameServiceManager>::`vftable'
	DD	FLAT:??_E?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$r	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$r	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CDialog@@8
rdata$r	SEGMENT
??_R2CDialog@@8 DD FLAT:??_R1A@?0A@EA@CDialog@@8	; CDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialog@@8
rdata$r	SEGMENT
??_R3CDialog@@8 DD 00H					; CDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
data$r	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBNHGHMI@atlTraceString@
CONST	SEGMENT
??_C@_0P@MBNHGHMI@atlTraceString@ DB 'atlTraceString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerWizard@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveData@CDlgServerWizard@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveData@CDlgServerWizard@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveData@CDlgServerWizard@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveData@CDlgServerWizard@@QAEXXZ$2
__ehfuncinfo$?SaveData@CDlgServerWizard@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SaveData@CDlgServerWizard@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ$0
__ehfuncinfo$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDlgServerWizard@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgServerWizard@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizard@@QAE@XZ$1
__ehfuncinfo$??0CDlgServerWizard@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDlgServerWizard@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerWizardItem2@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ$0
__ehfuncinfo$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CDlgServerWizardItem2@@QAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0CDlgServerWizardItem2@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CDlgServerWizardItem2@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerWizardItem1@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CDlgServerWizardItem1@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CDlgServerWizardItem1@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CDlgServerWizardItem1@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerWizardItem@@MAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItemCustom@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItem5@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z$0
__ehfuncinfo$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItem3@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItem2@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItem1@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerOptionItem@@MAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDlgServerOptionItem@@IAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgServerOptionItem@@IAE@I@Z$0
__ehfuncinfo$??0CDlgServerOptionItem@@IAE@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDlgServerOptionItem@@IAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECServerInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchOptionBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$3
__catchsym$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$3 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$1
__ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ PROC		; _snprintf_s<260>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 04 01 00 00	 push	 260			; 00000104H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ ENDP		; _snprintf_s<260>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ PROC		; _snprintf_s<512>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 00 02 00 00	 push	 512			; 00000200H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ENDP		; _snprintf_s<512>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0BA@@@YAHAAY0BA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0BA@@@YAHAAY0BA@DIPBDZZ PROC		; _snprintf_s<16>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	6a 10		 push	 16			; 00000010H
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vsnprintf_s
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_snprintf_s@$0BA@@@YAHAAY0BA@DIPBDZZ ENDP		; _snprintf_s<16>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??B?$CA2CAEX@$0IA@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CA2CAEX@$0IA@@ATL@@QBEPBDXZ PROC			; ATL::CA2CAEX<128>::operator char const *, COMDAT
; _this$ = ecx

; 293  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 		return( m_psz );

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 295  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CA2CAEX@$0IA@@ATL@@QBEPBDXZ ENDP			; ATL::CA2CAEX<128>::operator char const *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??1?$CA2CAEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CA2CAEX@$0IA@@ATL@@QAE@XZ PROC			; ATL::CA2CAEX<128>::~CA2CAEX<128>, COMDAT
; _this$ = ecx

; 289  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 290  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$CA2CAEX@$0IA@@ATL@@QAE@XZ ENDP			; ATL::CA2CAEX<128>::~CA2CAEX<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??0?$CA2CAEX@$0IA@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
??0?$CA2CAEX@$0IA@@ATL@@QAE@PBD@Z PROC			; ATL::CA2CAEX<128>::CA2CAEX<128>, COMDAT
; _this$ = ecx

; 279  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 278  : 		m_psz( psz )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 280  : 	}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0?$CA2CAEX@$0IA@@ATL@@QAE@PBD@Z ENDP			; ATL::CA2CAEX<128>::CA2CAEX<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 08 01 00 00	 push	 264			; 00000108H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 08 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 264
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 11		 je	 SHORT $LN4@vector
  0008a	68 08 01 00 00	 push	 264			; 00000108H
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00098	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 08 01 00 00	 push	 264			; 00000108H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleDBParameter@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z PROC		; CModuleDBParameter::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0000f	83 c6 04	 add	 esi, 4
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	83 c7 04	 add	 edi, 4
  00018	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00024	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  0002a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0002d	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00033	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00038	f3 a5		 rep movsd
  0003a	66 a5		 movsw
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z ENDP		; CModuleDBParameter::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleDBParameter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleDBParameter@@QAE@ABV0@@Z PROC			; CModuleDBParameter::CModuleDBParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleDBParameter@@6B@
  00015	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00018	83 c6 04	 add	 esi, 4
  0001b	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0001e	83 c7 04	 add	 edi, 4
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f3 a5		 rep movsd
  00028	66 a5		 movsw
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  00033	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00036	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  0003c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00041	f3 a5		 rep movsd
  00043	66 a5		 movsw
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0CModuleDBParameter@@QAE@ABV0@@Z ENDP			; CModuleDBParameter::CModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ
_TEXT	SEGMENT
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ PROC ; CModuleDBParameter::GetModuleDBParameter, COMDAT

; 46   : 	static CModuleDBParameter * GetModuleDBParameter() { return m_pModuleDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A ; CModuleDBParameter::m_pModuleDBParameter
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ENDP ; CModuleDBParameter::GetModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameMatchDBParameter$ = 8				; size = 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 41   : 	VOID SetGameMatchDBParameter(tagDataBaseParameter & GameMatchDBParameter) { m_GameMatchDBParameter=GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	8b 75 08	 mov	 esi, DWORD PTR _GameMatchDBParameter$[ebp]
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 39   : 	tagDataBaseParameter * GetGameMatchDBParameter() { return &m_GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 86 00 00 00	 add	 eax, 134		; 00000086H
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PlatformDBParameter$ = 8				; size = 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetPlatformDBParameter, COMDAT
; _this$ = ecx

; 34   : 	VOID SetPlatformDBParameter(tagDataBaseParameter & PlatformDBParameter) { m_PlatformDBParameter=PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	83 c7 04	 add	 edi, 4
  00012	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00017	8b 75 08	 mov	 esi, DWORD PTR _PlatformDBParameter$[ebp]
  0001a	f3 a5		 rep movsd
  0001c	66 a5		 movsw
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetPlatformDBParameter, COMDAT
; _this$ = ecx

; 32   : 	tagDataBaseParameter * GetPlatformDBParameter() { return &m_PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerWizard@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerWizard@@UAEPAXI@Z PROC			; CDlgServerWizard::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerWizard@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerWizard@@UAE@XZ ; CDlgServerWizard::~CDlgServerWizard
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 10 1c 00 00	 push	 7184			; 00001c10H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 10 1c
	00 00		 imul	 ecx, DWORD PTR [eax-4], 7184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerWizard@@UAE@XZ ; CDlgServerWizard::~CDlgServerWizard
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 10 1c 00 00	 push	 7184			; 00001c10H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerWizard@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerWizard@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerWizard@@UAEPAXI@Z ENDP			; CDlgServerWizard::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerWizard@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerWizard@@UAEPAXI@Z PROC			; CDlgServerWizard::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerWizard@@UAE@XZ ; CDlgServerWizard::~CDlgServerWizard
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 10 1c 00 00	 push	 7184			; 00001c10H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerWizard@@UAEPAXI@Z ENDP			; CDlgServerWizard::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerWizard@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerWizard@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizard::GetMessageMap, COMDAT
; _this$ = ecx

; 76   : BEGIN_MESSAGE_MAP(CDlgServerWizard, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizard::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerWizard@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizard::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizard::GetThisMessageMap, COMDAT

; 76   : BEGIN_MESSAGE_MAP(CDlgServerWizard, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 77   : 	ON_BN_CLICKED(IDC_LAST, OnBnClickedLast)
; 78   : 	ON_BN_CLICKED(IDC_NEXT, OnBnClickedNext)
; 79   : 	ON_BN_CLICKED(IDC_FINISH, OnBnClickedFinish)
; 80   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerWizard@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizard::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveData@CDlgServerWizard@@QAEXXZ
_TEXT	SEGMENT
tv172 = -948						; size = 4
tv92 = -944						; size = 4
$T2 = -940						; size = 4
_strClientName$ = -808					; size = 4
_IniData$ = -804					; size = 264
_szIniFile$ = -540					; size = 260
_szWorkDir$ = -280					; size = 260
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SaveData@CDlgServerWizard@@QAEXXZ PROC			; CDlgServerWizard::SaveData, COMDAT
; _this$ = ecx

; 2833 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SaveData@CDlgServerWizard@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a8 03 00
	00		 sub	 esp, 936		; 000003a8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2834 : 	//获取路径
; 2835 : 	TCHAR szWorkDir[MAX_PATH] = TEXT("");

  00031	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00036	88 85 e8 fe ff
	ff		 mov	 BYTE PTR _szWorkDir$[ebp], al
  0003c	68 03 01 00 00	 push	 259			; 00000103H
  00041	6a 00		 push	 0
  00043	8d 85 e9 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp+1]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _memset
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2836 : 	CWHService::GetWorkDirectory(szWorkDir, CountArray(szWorkDir));

  00052	68 04 01 00 00	 push	 260			; 00000104H
  00057	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp]
  0005d	50		 push	 eax
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWorkDirectory@CWHService@@SA_NQADG@Z
  00064	83 c4 08	 add	 esp, 8

; 2837 : 
; 2838 : 	//构造路径
; 2839 : 	TCHAR szIniFile[MAX_PATH] = TEXT("");

  00067	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0006c	88 85 e4 fd ff
	ff		 mov	 BYTE PTR _szIniFile$[ebp], al
  00072	68 03 01 00 00	 push	 259			; 00000103H
  00077	6a 00		 push	 0
  00079	8d 85 e5 fd ff
	ff		 lea	 eax, DWORD PTR _szIniFile$[ebp+1]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 _memset
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2840 : 	_sntprintf_s(szIniFile, CountArray(szIniFile), TEXT("%s\\MobileParameter.ini"), szWorkDir);

  00088	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp]
  0008e	50		 push	 eax
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BMJGHNOL@?$CFs?2MobileParameter?4ini@
  00094	68 04 01 00 00	 push	 260			; 00000104H
  00099	8d 8d e4 fd ff
	ff		 lea	 ecx, DWORD PTR _szIniFile$[ebp]
  0009f	51		 push	 ecx
  000a0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BAE@@@YAHAAY0BAE@DIPBDZZ ; _snprintf_s<260>
  000a5	83 c4 10	 add	 esp, 16			; 00000010H

; 2841 : 
; 2842 : 	//读取配置
; 2843 : 	CWHIniData IniData;

  000a8	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHIniData@@QAE@XZ
  000b4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2844 : 	IniData.SetIniFilePath(szIniFile);

  000bb	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szIniFile$[ebp]
  000c1	50		 push	 eax
  000c2	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetIniFilePath@CWHIniData@@QAEXPBD@Z

; 2845 : 
; 2846 : 	CString strClientName(m_ModuleInitParameter.GameServiceAttrib.szClientEXEName);

  000ce	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  000d6	50		 push	 eax
  000d7	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  000e3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 2847 : 	strClientName = strClientName.Left(strClientName.GetLength() - 4);

  000e7	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  000f3	83 e8 04	 sub	 eax, 4
  000f6	50		 push	 eax
  000f7	8d 85 54 fc ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  000fd	50		 push	 eax
  000fe	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  00104	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Left@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
  0010a	89 85 50 fc ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  00110	8b 8d 50 fc ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  00116	89 8d 4c fc ff
	ff		 mov	 DWORD PTR tv172[ebp], ecx
  0011c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00120	8b 95 4c fc ff
	ff		 mov	 edx, DWORD PTR tv172[ebp]
  00126	52		 push	 edx
  00127	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  00133	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00137	8d 8d 54 fc ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 2848 : 
; 2849 : 	IniData.WriteInt(strClientName, TEXT("VisibleTableCount"), m_ModuleInitParameter.GameServiceOption.wTableCount);

  00143	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00146	0f b7 88 96 01
	00 00		 movzx	 ecx, WORD PTR [eax+406]
  0014d	51		 push	 ecx
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IGEEDJJG@VisibleTableCount@
  00153	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0015f	50		 push	 eax
  00160	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00166	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?WriteInt@CWHIniData@@QAE_NPBD0H@Z

; 2850 : 	IniData.WriteInt(strClientName, TEXT("EverySendPageCount"), 1);

  0016c	6a 01		 push	 1
  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GBODAJDE@EverySendPageCount@
  00173	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0017f	50		 push	 eax
  00180	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00186	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?WriteInt@CWHIniData@@QAE_NPBD0H@Z

; 2851 : }

  0018c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00190	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0019c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a3	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  001a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHIniData@@UAE@XZ
  001af	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b9	59		 pop	 ecx
  001ba	5f		 pop	 edi
  001bb	5e		 pop	 esi
  001bc	5b		 pop	 ebx
  001bd	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c0	33 cd		 xor	 ecx, ebp
  001c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveData@CDlgServerWizard@@QAEXXZ$0:
  00000	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHIniData@@UAE@XZ
__unwindfunclet$?SaveData@CDlgServerWizard@@QAEXXZ$1:
  0000c	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _strClientName$[ebp]
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SaveData@CDlgServerWizard@@QAEXXZ$2:
  00018	8d 8d 54 fc ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?SaveData@CDlgServerWizard@@QAEXXZ:
  00024	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00028	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002b	8b 8a 48 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-952]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SaveData@CDlgServerWizard@@QAEXXZ
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SaveData@CDlgServerWizard@@QAEXXZ ENDP			; CDlgServerWizard::SaveData
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ
_TEXT	SEGMENT
_uCustomRuleSize$ = -5156				; size = 4
_i$2 = -5152						; size = 4
_PersonalRule$ = -5148					; size = 161
_ServerInfoManager$ = -4984				; size = 236
_GameServerResult$ = -4748				; size = 2416
_GameServerCreate$ = -2332				; size = 2312
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ PROC	; CDlgServerWizard::OnBnClickedFinish, COMDAT
; _this$ = ecx

; 2668 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 18 16 00 00	 mov	 eax, 5656		; 00001618H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2669 : 	//保存设置
; 2670 : 	ASSERT(m_wActiveIndex>=1);

  00035	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00038	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0003f	83 f9 01	 cmp	 ecx, 1
  00042	7d 19		 jge	 SHORT $LN12@OnBnClicke
  00044	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedFinish@CDlgServerWizard@@QAEXXZ@4JA
  0004a	83 c2 02	 add	 edx, 2
  0004d	52		 push	 edx
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN12@OnBnClicke
  0005c	cc		 int	 3
$LN12@OnBnClicke:

; 2671 : 	if (m_pWizardItem[m_wActiveIndex]->SaveItemData()==false) return;

  0005d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00060	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00067	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006a	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  00071	e8 00 00 00 00	 call	 ?SaveItemData@CDlgServerWizardItem@@AAE_NXZ ; CDlgServerWizardItem::SaveItemData
  00076	0f b6 c0	 movzx	 eax, al
  00079	85 c0		 test	 eax, eax
  0007b	75 05		 jne	 SHORT $LN5@OnBnClicke
  0007d	e9 ef 06 00 00	 jmp	 $LN1@OnBnClicke
$LN5@OnBnClicke:

; 2672 : 
; 2673 : 	//房间信息
; 2674 : 	tagGameServerCreate GameServerCreate;
; 2675 : 	ZeroMemory(&GameServerCreate,sizeof(GameServerCreate));

  00082	68 08 09 00 00	 push	 2312			; 00000908H
  00087	6a 00		 push	 0
  00089	8d 85 e4 f6 ff
	ff		 lea	 eax, DWORD PTR _GameServerCreate$[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 _memset
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2676 : 
; 2677 : 	//参数调整
; 2678 : 	ASSERT(m_pIGameServiceManager!=NULL);

  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	83 b8 00 1c 00
	00 00		 cmp	 DWORD PTR [eax+7168], 0
  000a2	75 19		 jne	 SHORT $LN13@OnBnClicke
  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnBnClickedFinish@CDlgServerWizard@@QAEXXZ@4JA
  000aa	83 c1 0a	 add	 ecx, 10			; 0000000aH
  000ad	51		 push	 ecx
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b8	85 c0		 test	 eax, eax
  000ba	74 01		 je	 SHORT $LN13@OnBnClicke
  000bc	cc		 int	 3
$LN13@OnBnClicke:

; 2679 : 	m_pIGameServiceManager->RectifyParameter(m_ModuleInitParameter.GameServiceOption);

  000bd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	05 50 01 00 00	 add	 eax, 336		; 00000150H
  000c5	50		 push	 eax
  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	8b 91 00 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7168]
  000cf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 12		 mov	 edx, DWORD PTR [edx]
  000d4	8b 88 00 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7168]
  000da	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000dd	ff d0		 call	 eax

; 2680 : 	
; 2681 : 	//索引变量
; 2682 : 	GameServerCreate.wGameID=m_ModuleInitParameter.GameServiceAttrib.wKindID;

  000df	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	66 8b 88 b8 00
	00 00		 mov	 cx, WORD PTR [eax+184]
  000e9	66 89 8d e4 f6
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp], cx

; 2683 : 	GameServerCreate.wServerID=m_ModuleInitParameter.GameServiceOption.wServerID;

  000f0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	66 8b 88 56 01
	00 00		 mov	 cx, WORD PTR [eax+342]
  000fa	66 89 8d e6 f6
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+2], cx

; 2684 : 
; 2685 : 	//挂接属性
; 2686 : 	GameServerCreate.wKindID=m_ModuleInitParameter.GameServiceAttrib.wKindID;

  00101	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00104	66 8b 88 b8 00
	00 00		 mov	 cx, WORD PTR [eax+184]
  0010b	66 89 8d e8 f6
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+4], cx

; 2687 : 	GameServerCreate.wNodeID=m_ModuleInitParameter.GameServiceOption.wNodeID;

  00112	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00115	66 8b 88 52 01
	00 00		 mov	 cx, WORD PTR [eax+338]
  0011c	66 89 8d ea f6
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+6], cx

; 2688 : 	GameServerCreate.wSortID=m_ModuleInitParameter.GameServiceOption.wSortID;

  00123	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00126	66 8b 88 54 01
	00 00		 mov	 cx, WORD PTR [eax+340]
  0012d	66 89 8d ec f6
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+8], cx

; 2689 : 
; 2690 : 	//税收配置
; 2691 : 	GameServerCreate.lCellScore=m_ModuleInitParameter.GameServiceOption.lCellScore;

  00134	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00137	8b 88 58 01 00
	00		 mov	 ecx, DWORD PTR [eax+344]
  0013d	89 8d f0 f6 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+12], ecx

; 2692 : 	GameServerCreate.wRevenueRatio=m_ModuleInitParameter.GameServiceOption.wRevenueRatio;

  00143	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00146	66 8b 88 5c 01
	00 00		 mov	 cx, WORD PTR [eax+348]
  0014d	66 89 8d f4 f6
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+16], cx

; 2693 : 	GameServerCreate.lServiceScore=m_ModuleInitParameter.GameServiceOption.lServiceScore;

  00154	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00157	8b 88 60 01 00
	00		 mov	 ecx, DWORD PTR [eax+352]
  0015d	89 8d fc f6 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+24], ecx
  00163	8b 90 64 01 00
	00		 mov	 edx, DWORD PTR [eax+356]
  00169	89 95 00 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+28], edx

; 2694 : 
; 2695 : 	//限制配置
; 2696 : 	GameServerCreate.lRestrictScore=m_ModuleInitParameter.GameServiceOption.lRestrictScore;

  0016f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00172	8b 88 68 01 00
	00		 mov	 ecx, DWORD PTR [eax+360]
  00178	89 8d 04 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+32], ecx
  0017e	8b 90 6c 01 00
	00		 mov	 edx, DWORD PTR [eax+364]
  00184	89 95 08 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+36], edx

; 2697 : 	GameServerCreate.lMinTableScore=m_ModuleInitParameter.GameServiceOption.lMinTableScore;

  0018a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0018d	8b 88 70 01 00
	00		 mov	 ecx, DWORD PTR [eax+368]
  00193	89 8d 0c f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+40], ecx
  00199	8b 90 74 01 00
	00		 mov	 edx, DWORD PTR [eax+372]
  0019f	89 95 10 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+44], edx

; 2698 : 	GameServerCreate.lMinEnterScore=m_ModuleInitParameter.GameServiceOption.lMinEnterScore;

  001a5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001a8	8b 88 78 01 00
	00		 mov	 ecx, DWORD PTR [eax+376]
  001ae	89 8d 14 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+48], ecx
  001b4	8b 90 7c 01 00
	00		 mov	 edx, DWORD PTR [eax+380]
  001ba	89 95 18 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+52], edx

; 2699 : 	GameServerCreate.lMaxEnterScore=m_ModuleInitParameter.GameServiceOption.lMaxEnterScore;

  001c0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c3	8b 88 80 01 00
	00		 mov	 ecx, DWORD PTR [eax+384]
  001c9	89 8d 1c f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+56], ecx
  001cf	8b 90 84 01 00
	00		 mov	 edx, DWORD PTR [eax+388]
  001d5	89 95 20 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+60], edx

; 2700 : 
; 2701 : 	//会员限制
; 2702 : 	GameServerCreate.cbMinEnterMember=m_ModuleInitParameter.GameServiceOption.cbMinEnterMember;

  001db	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001de	8a 88 88 01 00
	00		 mov	 cl, BYTE PTR [eax+392]
  001e4	88 8d 24 f7 ff
	ff		 mov	 BYTE PTR _GameServerCreate$[ebp+64], cl

; 2703 : 	GameServerCreate.cbMaxEnterMember=m_ModuleInitParameter.GameServiceOption.cbMaxEnterMember;

  001ea	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001ed	8a 88 89 01 00
	00		 mov	 cl, BYTE PTR [eax+393]
  001f3	88 8d 25 f7 ff
	ff		 mov	 BYTE PTR _GameServerCreate$[ebp+65], cl

; 2704 : 
; 2705 : 	//房间配置
; 2706 : 	GameServerCreate.dwServerRule=m_ModuleInitParameter.GameServiceOption.dwServerRule;

  001f9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001fc	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  00202	89 8d 28 f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+68], ecx

; 2707 : 	GameServerCreate.dwAttachUserRight=m_ModuleInitParameter.GameServiceOption.dwAttachUserRight;

  00208	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0020b	8b 88 90 01 00
	00		 mov	 ecx, DWORD PTR [eax+400]
  00211	89 8d 2c f7 ff
	ff		 mov	 DWORD PTR _GameServerCreate$[ebp+72], ecx

; 2708 : 
; 2709 : 	//房间属性
; 2710 : 	GameServerCreate.wMaxPlayer=m_ModuleInitParameter.GameServiceOption.wMaxPlayer;

  00217	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0021a	66 8b 88 94 01
	00 00		 mov	 cx, WORD PTR [eax+404]
  00221	66 89 8d 30 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+76], cx

; 2711 : 	GameServerCreate.wTableCount=m_ModuleInitParameter.GameServiceOption.wTableCount;

  00228	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0022b	66 8b 88 96 01
	00 00		 mov	 cx, WORD PTR [eax+406]
  00232	66 89 8d 32 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+78], cx

; 2712 : 	GameServerCreate.wServerType=m_ModuleInitParameter.GameServiceOption.wServerType;

  00239	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0023c	66 8b 88 9c 01
	00 00		 mov	 cx, WORD PTR [eax+412]
  00243	66 89 8d 38 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+84], cx

; 2713 : 	GameServerCreate.wServerKind=m_ModuleInitParameter.GameServiceOption.wServerKind;

  0024a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0024d	66 8b 88 9a 01
	00 00		 mov	 cx, WORD PTR [eax+410]
  00254	66 89 8d 36 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+82], cx

; 2714 : 	GameServerCreate.wServerPort=m_ModuleInitParameter.GameServiceOption.wServerPort;

  0025b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0025e	66 8b 88 98 01
	00 00		 mov	 cx, WORD PTR [eax+408]
  00265	66 89 8d 34 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+80], cx

; 2715 : 	GameServerCreate.wServerLevel=m_ModuleInitParameter.GameServiceOption.wServerLevel;

  0026c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0026f	66 8b 88 9e 01
	00 00		 mov	 cx, WORD PTR [eax+414]
  00276	66 89 8d 3a f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+86], cx

; 2716 : 	lstrcpyn(GameServerCreate.szServerName,m_ModuleInitParameter.GameServiceOption.szServerName,CountArray(GameServerCreate.szServerName));

  0027d	6a 20		 push	 32			; 00000020H
  0027f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00282	05 a0 01 00 00	 add	 eax, 416		; 000001a0H
  00287	50		 push	 eax
  00288	8d 8d 3c f7 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp+88]
  0028e	51		 push	 ecx
  0028f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2717 : 	lstrcpyn(GameServerCreate.szServerPasswd,m_ModuleInitParameter.GameServiceOption.szServerPasswd,CountArray(GameServerCreate.szServerPasswd));

  00295	6a 21		 push	 33			; 00000021H
  00297	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0029a	05 c0 01 00 00	 add	 eax, 448		; 000001c0H
  0029f	50		 push	 eax
  002a0	8d 8d 5c f7 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp+120]
  002a6	51		 push	 ecx
  002a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2718 : 
; 2719 : 	//分组属性
; 2720 : 	GameServerCreate.cbDistributeRule=m_ModuleInitParameter.GameServiceOption.cbDistributeRule;

  002ad	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002b0	8a 88 e1 01 00
	00		 mov	 cl, BYTE PTR [eax+481]
  002b6	88 8d 7d f7 ff
	ff		 mov	 BYTE PTR _GameServerCreate$[ebp+153], cl

; 2721 : 	GameServerCreate.wMinDistributeUser=m_ModuleInitParameter.GameServiceOption.wMinDistributeUser;

  002bc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002bf	66 8b 88 e2 01
	00 00		 mov	 cx, WORD PTR [eax+482]
  002c6	66 89 8d 7e f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+154], cx

; 2722 : 	GameServerCreate.wDistributeTimeSpace=m_ModuleInitParameter.GameServiceOption.wDistributeTimeSpace;

  002cd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002d0	66 8b 88 e4 01
	00 00		 mov	 cx, WORD PTR [eax+484]
  002d7	66 89 8d 80 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+156], cx

; 2723 : 	GameServerCreate.wDistributeDrawCount=m_ModuleInitParameter.GameServiceOption.wDistributeDrawCount;

  002de	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002e1	66 8b 88 e6 01
	00 00		 mov	 cx, WORD PTR [eax+486]
  002e8	66 89 8d 82 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+158], cx

; 2724 : 	GameServerCreate.wMinPartakeGameUser=m_ModuleInitParameter.GameServiceOption.wMinPartakeGameUser;

  002ef	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002f2	66 8b 88 e8 01
	00 00		 mov	 cx, WORD PTR [eax+488]
  002f9	66 89 8d 84 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+160], cx

; 2725 : 	GameServerCreate.wMaxPartakeGameUser=m_ModuleInitParameter.GameServiceOption.wMaxPartakeGameUser;

  00300	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00303	66 8b 88 ea 01
	00 00		 mov	 cx, WORD PTR [eax+490]
  0030a	66 89 8d 86 f7
	ff ff		 mov	 WORD PTR _GameServerCreate$[ebp+162], cx

; 2726 : 
; 2727 : 	//连接信息
; 2728 : 	lstrcpyn(GameServerCreate.szDataBaseName,m_ModuleInitParameter.GameServiceOption.szDataBaseName,CountArray(GameServerCreate.szDataBaseName));

  00311	6a 20		 push	 32			; 00000020H
  00313	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00316	05 fc 01 00 00	 add	 eax, 508		; 000001fcH
  0031b	50		 push	 eax
  0031c	8d 8d 88 f7 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp+164]
  00322	51		 push	 ecx
  00323	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2729 : 	lstrcpyn(GameServerCreate.szDataBaseAddr,m_ModuleInitParameter.GameServiceOption.szDataBaseAddr,CountArray(GameServerCreate.szDataBaseAddr));

  00329	6a 20		 push	 32			; 00000020H
  0032b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0032e	05 ec 01 00 00	 add	 eax, 492		; 000001ecH
  00333	50		 push	 eax
  00334	8d 8d a8 f7 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp+196]
  0033a	51		 push	 ecx
  0033b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2730 : 
; 2731 : 	//扩展配置
; 2732 : 	CWHService::GetMachineID(GameServerCreate.szServiceMachine);

  00341	8d 85 c8 fb ff
	ff		 lea	 eax, DWORD PTR _GameServerCreate$[ebp+1252]
  00347	50		 push	 eax
  00348	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetMachineID@CWHService@@SA_NQAD@Z
  0034e	83 c4 04	 add	 esp, 4

; 2733 : 	CopyMemory(GameServerCreate.cbCustomRule,m_ModuleInitParameter.GameServiceOption.cbCustomRule,sizeof(GameServerCreate.cbCustomRule));

  00351	68 00 04 00 00	 push	 1024			; 00000400H
  00356	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00359	05 40 02 00 00	 add	 eax, 576		; 00000240H
  0035e	50		 push	 eax
  0035f	8d 8d c8 f7 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp+228]
  00365	51		 push	 ecx
  00366	e8 00 00 00 00	 call	 _memcpy
  0036b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2734 : 	CopyMemory(GameServerCreate.cbPersonalRule, m_ModuleInitParameter.GameServiceOption.cbPersonalRule, sizeof(GameServerCreate.cbPersonalRule));

  0036e	68 00 04 00 00	 push	 1024			; 00000400H
  00373	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00376	05 40 06 00 00	 add	 eax, 1600		; 00000640H
  0037b	50		 push	 eax
  0037c	8d 8d e9 fb ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp+1285]
  00382	51		 push	 ecx
  00383	e8 00 00 00 00	 call	 _memcpy
  00388	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2735 : 
; 2736 : 	//变量定义
; 2737 : 	tagGameServerInfo GameServerResult;
; 2738 : 	CServerInfoManager ServerInfoManager;

  0038b	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  00391	e8 00 00 00 00	 call	 ??0CServerInfoManager@@QAE@XZ ; CServerInfoManager::CServerInfoManager
  00396	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2739 : 	//解析游戏私人房间配置
; 2740 : 	tagPersonalRule  PersonalRule;

  0039d	8d 8d e4 eb ff
	ff		 lea	 ecx, DWORD PTR _PersonalRule$[ebp]
  003a3	e8 00 00 00 00	 call	 ??0tagPersonalRule@@QAE@XZ ; tagPersonalRule::tagPersonalRule

; 2741 : 	CopyMemory(&PersonalRule, m_ModuleInitParameter.GameServiceOption.cbPersonalRule, sizeof(PersonalRule));

  003a8	68 a1 00 00 00	 push	 161			; 000000a1H
  003ad	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003b0	05 40 06 00 00	 add	 eax, 1600		; 00000640H
  003b5	50		 push	 eax
  003b6	8d 8d e4 eb ff
	ff		 lea	 ecx, DWORD PTR _PersonalRule$[ebp]
  003bc	51		 push	 ecx
  003bd	e8 00 00 00 00	 call	 _memcpy
  003c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2742 : 
; 2743 : 	//配置特殊规则
; 2744 : 	if (PersonalRule.cbSpecialRule == 1)

  003c5	0f b6 85 e4 eb
	ff ff		 movzx	 eax, BYTE PTR _PersonalRule$[ebp]
  003cc	83 f8 01	 cmp	 eax, 1
  003cf	75 43		 jne	 SHORT $LN6@OnBnClicke

; 2745 : 	{
; 2746 : 		//底分配置
; 2747 : 		for (int i = 0; i < CELLSCORE_COUNT; i++)

  003d1	c7 85 e0 eb ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  003db	eb 0f		 jmp	 SHORT $LN4@OnBnClicke
$LN2@OnBnClicke:
  003dd	8b 85 e0 eb ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  003e3	83 c0 01	 add	 eax, 1
  003e6	89 85 e0 eb ff
	ff		 mov	 DWORD PTR _i$2[ebp], eax
$LN4@OnBnClicke:
  003ec	83 bd e0 eb ff
	ff 05		 cmp	 DWORD PTR _i$2[ebp], 5
  003f3	7d 1f		 jge	 SHORT $LN6@OnBnClicke

; 2748 : 		{
; 2749 : 			m_ModuleInitParameter.m_pCreateRoomRightAndFee.nCellScore[i] = PersonalRule.nCellScore[i];

  003f5	8b 85 e0 eb ff
	ff		 mov	 eax, DWORD PTR _i$2[ebp]
  003fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003fe	8b 95 e0 eb ff
	ff		 mov	 edx, DWORD PTR _i$2[ebp]
  00404	8b 94 95 71 ec
	ff ff		 mov	 edx, DWORD PTR _PersonalRule$[ebp+edx*4+141]
  0040b	89 94 81 7a 0d
	00 00		 mov	 DWORD PTR [ecx+eax*4+3450], edx

; 2750 : 		}

  00412	eb c9		 jmp	 SHORT $LN2@OnBnClicke
$LN6@OnBnClicke:

; 2751 : 	}
; 2752 : 	//插入房间
; 2753 : 	if (GameServerCreate.wServerID==0)

  00414	0f b7 85 e6 f6
	ff ff		 movzx	 eax, WORD PTR _GameServerCreate$[ebp+2]
  0041b	85 c0		 test	 eax, eax
  0041d	75 7d		 jne	 SHORT $LN7@OnBnClicke

; 2754 : 	{
; 2755 : 		//插入私人房间信息
; 2756 : 		ServerInfoManager.SetPersonalRoomOption(m_ModuleInitParameter.PersonalRoomOption, m_ModuleInitParameter.m_pCreateRoomRightAndFee);

  0041f	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00422	81 c6 79 0d 00
	00		 add	 esi, 3449		; 00000d79H
  00428	83 ec 74	 sub	 esp, 116		; 00000074H
  0042b	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00430	8b fc		 mov	 edi, esp
  00432	f3 a5		 rep movsd
  00434	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00437	81 c6 08 0d 00
	00		 add	 esi, 3336		; 00000d08H
  0043d	83 ec 74	 sub	 esp, 116		; 00000074H
  00440	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00445	8b fc		 mov	 edi, esp
  00447	f3 a5		 rep movsd
  00449	a4		 movsb
  0044a	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  00450	e8 00 00 00 00	 call	 ?SetPersonalRoomOption@CServerInfoManager@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z ; CServerInfoManager::SetPersonalRoomOption

; 2757 : 
; 2758 : 		if (ServerInfoManager.InsertGameServer(&GameServerCreate,GameServerResult)==false) return;

  00455	8d 85 74 ed ff
	ff		 lea	 eax, DWORD PTR _GameServerResult$[ebp]
  0045b	50		 push	 eax
  0045c	8d 8d e4 f6 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp]
  00462	51		 push	 ecx
  00463	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  00469	e8 00 00 00 00	 call	 ?InsertGameServer@CServerInfoManager@@QAE_NPAUtagGameServerCreate@@AAUtagGameServerInfo@@@Z ; CServerInfoManager::InsertGameServer
  0046e	0f b6 d0	 movzx	 edx, al
  00471	85 d2		 test	 edx, edx
  00473	75 17		 jne	 SHORT $LN8@OnBnClicke
  00475	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0047c	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  00482	e8 00 00 00 00	 call	 ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
  00487	e9 e5 02 00 00	 jmp	 $LN1@OnBnClicke
$LN8@OnBnClicke:

; 2759 : 
; 2760 : 		//提示消息
; 2761 : 		CTraceService::TraceString(TEXT("游戏房间创建成功"),TraceLevel_Normal);

  0048c	6a 01		 push	 1
  0048e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HACHHGOC@?S?N?O?$LH?$LH?$LP?$LM?d?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@
  00493	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00499	83 c4 08	 add	 esp, 8
$LN7@OnBnClicke:

; 2762 : 	}
; 2763 : 
; 2764 : 	//修改房间
; 2765 : 	if (GameServerCreate.wServerID!=0)

  0049c	0f b7 85 e6 f6
	ff ff		 movzx	 eax, WORD PTR _GameServerCreate$[ebp+2]
  004a3	85 c0		 test	 eax, eax
  004a5	74 7d		 je	 SHORT $LN9@OnBnClicke

; 2766 : 	{
; 2767 : 
; 2768 : 		//修改私人房间信息
; 2769 : 		ServerInfoManager.SetPersonalRoomOption(m_ModuleInitParameter.PersonalRoomOption, m_ModuleInitParameter.m_pCreateRoomRightAndFee);

  004a7	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  004aa	81 c6 79 0d 00
	00		 add	 esi, 3449		; 00000d79H
  004b0	83 ec 74	 sub	 esp, 116		; 00000074H
  004b3	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  004b8	8b fc		 mov	 edi, esp
  004ba	f3 a5		 rep movsd
  004bc	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  004bf	81 c6 08 0d 00
	00		 add	 esi, 3336		; 00000d08H
  004c5	83 ec 74	 sub	 esp, 116		; 00000074H
  004c8	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  004cd	8b fc		 mov	 edi, esp
  004cf	f3 a5		 rep movsd
  004d1	a4		 movsb
  004d2	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  004d8	e8 00 00 00 00	 call	 ?SetPersonalRoomOption@CServerInfoManager@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z ; CServerInfoManager::SetPersonalRoomOption

; 2770 : 
; 2771 : 		//修改房间
; 2772 : 		if (ServerInfoManager.ModifyGameServer(&GameServerCreate,GameServerResult)==false) return;

  004dd	8d 85 74 ed ff
	ff		 lea	 eax, DWORD PTR _GameServerResult$[ebp]
  004e3	50		 push	 eax
  004e4	8d 8d e4 f6 ff
	ff		 lea	 ecx, DWORD PTR _GameServerCreate$[ebp]
  004ea	51		 push	 ecx
  004eb	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  004f1	e8 00 00 00 00	 call	 ?ModifyGameServer@CServerInfoManager@@QAE_NPAUtagGameServerCreate@@AAUtagGameServerInfo@@@Z ; CServerInfoManager::ModifyGameServer
  004f6	0f b6 d0	 movzx	 edx, al
  004f9	85 d2		 test	 edx, edx
  004fb	75 17		 jne	 SHORT $LN10@OnBnClicke
  004fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00504	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  0050a	e8 00 00 00 00	 call	 ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
  0050f	e9 5d 02 00 00	 jmp	 $LN1@OnBnClicke
$LN10@OnBnClicke:

; 2773 : 
; 2774 : 		//提示消息
; 2775 : 		CTraceService::TraceString(TEXT("游戏房间配置成功"),TraceLevel_Normal);

  00514	6a 01		 push	 1
  00516	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CJFLLFDE@?S?N?O?$LH?$LH?$LP?$LM?d?E?d?V?C?$LD?I?$LJ?$KG@
  0051b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00521	83 c4 08	 add	 esp, 8
$LN9@OnBnClicke:

; 2776 : 	}
; 2777 : 
; 2778 : 	//索引变量
; 2779 : 	m_ModuleInitParameter.GameServiceOption.wServerID=GameServerResult.wServerID;

  00524	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00527	66 8b 8d 76 ed
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+2]
  0052e	66 89 88 56 01
	00 00		 mov	 WORD PTR [eax+342], cx

; 2780 : 
; 2781 : 	//挂接属性
; 2782 : 	m_ModuleInitParameter.GameServiceOption.wKindID=GameServerResult.wKindID;

  00535	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00538	66 8b 8d 78 ed
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+4]
  0053f	66 89 88 50 01
	00 00		 mov	 WORD PTR [eax+336], cx

; 2783 : 	m_ModuleInitParameter.GameServiceOption.wNodeID=GameServerResult.wNodeID;

  00546	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00549	66 8b 8d 7a ed
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+6]
  00550	66 89 88 52 01
	00 00		 mov	 WORD PTR [eax+338], cx

; 2784 : 	m_ModuleInitParameter.GameServiceOption.wSortID=GameServerResult.wSortID;

  00557	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0055a	66 8b 8d 7c ed
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+8]
  00561	66 89 88 54 01
	00 00		 mov	 WORD PTR [eax+340], cx

; 2785 : 
; 2786 : 	//税收配置
; 2787 : 	m_ModuleInitParameter.GameServiceOption.lCellScore=GameServerResult.lCellScore;

  00568	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0056b	8b 8d ec ed ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+120]
  00571	89 88 58 01 00
	00		 mov	 DWORD PTR [eax+344], ecx

; 2788 : 	m_ModuleInitParameter.GameServiceOption.wRevenueRatio=m_ModuleInitParameter.GameServiceOption.wRevenueRatio;

  00577	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0057a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0057d	66 8b 91 5c 01
	00 00		 mov	 dx, WORD PTR [ecx+348]
  00584	66 89 90 5c 01
	00 00		 mov	 WORD PTR [eax+348], dx

; 2789 : 	m_ModuleInitParameter.GameServiceOption.lServiceScore=m_ModuleInitParameter.GameServiceOption.lServiceScore;

  0058b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0058e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00591	8b 91 60 01 00
	00		 mov	 edx, DWORD PTR [ecx+352]
  00597	89 90 60 01 00
	00		 mov	 DWORD PTR [eax+352], edx
  0059d	8b 89 64 01 00
	00		 mov	 ecx, DWORD PTR [ecx+356]
  005a3	89 88 64 01 00
	00		 mov	 DWORD PTR [eax+356], ecx

; 2790 : 
; 2791 : 	//限制配置
; 2792 : 	m_ModuleInitParameter.GameServiceOption.lRestrictScore=GameServerResult.lRestrictScore;

  005a9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005ac	8b 8d fc ed ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+136]
  005b2	89 88 68 01 00
	00		 mov	 DWORD PTR [eax+360], ecx
  005b8	8b 95 00 ee ff
	ff		 mov	 edx, DWORD PTR _GameServerResult$[ebp+140]
  005be	89 90 6c 01 00
	00		 mov	 DWORD PTR [eax+364], edx

; 2793 : 	m_ModuleInitParameter.GameServiceOption.lMinTableScore=GameServerResult.lMinTableScore;

  005c4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005c7	8b 8d 04 ee ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+144]
  005cd	89 88 70 01 00
	00		 mov	 DWORD PTR [eax+368], ecx
  005d3	8b 95 08 ee ff
	ff		 mov	 edx, DWORD PTR _GameServerResult$[ebp+148]
  005d9	89 90 74 01 00
	00		 mov	 DWORD PTR [eax+372], edx

; 2794 : 	m_ModuleInitParameter.GameServiceOption.lMinEnterScore=GameServerResult.lMinEnterScore;

  005df	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005e2	8b 8d 0c ee ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+152]
  005e8	89 88 78 01 00
	00		 mov	 DWORD PTR [eax+376], ecx
  005ee	8b 95 10 ee ff
	ff		 mov	 edx, DWORD PTR _GameServerResult$[ebp+156]
  005f4	89 90 7c 01 00
	00		 mov	 DWORD PTR [eax+380], edx

; 2795 : 	m_ModuleInitParameter.GameServiceOption.lMaxEnterScore=GameServerResult.lMaxEnterScore;

  005fa	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005fd	8b 8d 14 ee ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+160]
  00603	89 88 80 01 00
	00		 mov	 DWORD PTR [eax+384], ecx
  00609	8b 95 18 ee ff
	ff		 mov	 edx, DWORD PTR _GameServerResult$[ebp+164]
  0060f	89 90 84 01 00
	00		 mov	 DWORD PTR [eax+388], edx

; 2796 : 
; 2797 : 	//会员限制
; 2798 : 	m_ModuleInitParameter.GameServiceOption.cbMaxEnterMember=GameServerResult.cbMaxEnterMember;

  00615	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00618	8a 8d 1d ee ff
	ff		 mov	 cl, BYTE PTR _GameServerResult$[ebp+169]
  0061e	88 88 89 01 00
	00		 mov	 BYTE PTR [eax+393], cl

; 2799 : 	m_ModuleInitParameter.GameServiceOption.cbMaxEnterMember=GameServerResult.cbMaxEnterMember;

  00624	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00627	8a 8d 1d ee ff
	ff		 mov	 cl, BYTE PTR _GameServerResult$[ebp+169]
  0062d	88 88 89 01 00
	00		 mov	 BYTE PTR [eax+393], cl

; 2800 : 
; 2801 : 	//房间配置
; 2802 : 	m_ModuleInitParameter.GameServiceOption.dwServerRule=GameServerResult.dwServerRule;

  00633	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00636	8b 8d 20 ee ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+172]
  0063c	89 88 8c 01 00
	00		 mov	 DWORD PTR [eax+396], ecx

; 2803 : 	m_ModuleInitParameter.GameServiceOption.dwAttachUserRight=GameServerResult.dwAttachUserRight;

  00642	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00645	8b 8d 24 ee ff
	ff		 mov	 ecx, DWORD PTR _GameServerResult$[ebp+176]
  0064b	89 88 90 01 00
	00		 mov	 DWORD PTR [eax+400], ecx

; 2804 : 
; 2805 : 	//房间属性
; 2806 : 	m_ModuleInitParameter.GameServiceOption.wMaxPlayer=GameServerResult.wMaxPlayer;

  00651	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00654	66 8b 8d 28 ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+180]
  0065b	66 89 88 94 01
	00 00		 mov	 WORD PTR [eax+404], cx

; 2807 : 	m_ModuleInitParameter.GameServiceOption.wTableCount=GameServerResult.wTableCount;

  00662	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00665	66 8b 8d 2a ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+182]
  0066c	66 89 88 96 01
	00 00		 mov	 WORD PTR [eax+406], cx

; 2808 : 	m_ModuleInitParameter.GameServiceOption.wServerType=GameServerResult.wServerType;

  00673	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00676	66 8b 8d 30 ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+188]
  0067d	66 89 88 9c 01
	00 00		 mov	 WORD PTR [eax+412], cx

; 2809 : 	m_ModuleInitParameter.GameServiceOption.wServerPort=GameServerResult.wServerPort;

  00684	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00687	66 8b 8d 2c ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+184]
  0068e	66 89 88 98 01
	00 00		 mov	 WORD PTR [eax+408], cx

; 2810 : 	m_ModuleInitParameter.GameServiceOption.wServerLevel=GameServerResult.wServerLevel;

  00695	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00698	66 8b 8d 32 ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+190]
  0069f	66 89 88 9e 01
	00 00		 mov	 WORD PTR [eax+414], cx

; 2811 : 	lstrcpyn(m_ModuleInitParameter.GameServiceOption.szServerName,GameServerResult.szServerName,LEN_SERVER);

  006a6	6a 20		 push	 32			; 00000020H
  006a8	8d 85 34 ee ff
	ff		 lea	 eax, DWORD PTR _GameServerResult$[ebp+192]
  006ae	50		 push	 eax
  006af	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006b2	81 c1 a0 01 00
	00		 add	 ecx, 416		; 000001a0H
  006b8	51		 push	 ecx
  006b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2812 : 
; 2813 : 	//分组属性
; 2814 : 	m_ModuleInitParameter.GameServiceOption.cbDistributeRule=GameServerResult.cbDistributeRule;

  006bf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006c2	8a 8d 75 ee ff
	ff		 mov	 cl, BYTE PTR _GameServerResult$[ebp+257]
  006c8	88 88 e1 01 00
	00		 mov	 BYTE PTR [eax+481], cl

; 2815 : 	m_ModuleInitParameter.GameServiceOption.wMinDistributeUser=GameServerResult.wMinDistributeUser;

  006ce	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006d1	66 8b 8d 76 ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+258]
  006d8	66 89 88 e2 01
	00 00		 mov	 WORD PTR [eax+482], cx

; 2816 : 	m_ModuleInitParameter.GameServiceOption.wDistributeTimeSpace=GameServerResult.wDistributeTimeSpace;

  006df	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006e2	66 8b 8d 78 ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+260]
  006e9	66 89 88 e4 01
	00 00		 mov	 WORD PTR [eax+484], cx

; 2817 : 	m_ModuleInitParameter.GameServiceOption.wDistributeDrawCount=GameServerResult.wDistributeDrawCount;

  006f0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  006f3	66 8b 8d 7a ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+262]
  006fa	66 89 88 e6 01
	00 00		 mov	 WORD PTR [eax+486], cx

; 2818 : 	m_ModuleInitParameter.GameServiceOption.wMinPartakeGameUser=GameServerResult.wMinPartakeGameUser;

  00701	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00704	66 8b 8d 7c ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+264]
  0070b	66 89 88 e8 01
	00 00		 mov	 WORD PTR [eax+488], cx

; 2819 : 	m_ModuleInitParameter.GameServiceOption.wMaxPartakeGameUser=GameServerResult.wMaxPartakeGameUser;

  00712	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00715	66 8b 8d 7e ee
	ff ff		 mov	 cx, WORD PTR _GameServerResult$[ebp+266]
  0071c	66 89 88 ea 01
	00 00		 mov	 WORD PTR [eax+490], cx

; 2820 : 
; 2821 : 	//扩展配置
; 2822 : 	UINT uCustomRuleSize=sizeof(m_ModuleInitParameter.GameServiceOption.cbCustomRule);

  00723	c7 85 dc eb ff
	ff 00 04 00 00	 mov	 DWORD PTR _uCustomRuleSize$[ebp], 1024 ; 00000400H

; 2823 : 	CopyMemory(m_ModuleInitParameter.GameServiceOption.cbCustomRule,GameServerResult.cbCustomRule,uCustomRuleSize);

  0072d	8b 85 dc eb ff
	ff		 mov	 eax, DWORD PTR _uCustomRuleSize$[ebp]
  00733	50		 push	 eax
  00734	8d 8d c0 ee ff
	ff		 lea	 ecx, DWORD PTR _GameServerResult$[ebp+332]
  0073a	51		 push	 ecx
  0073b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0073e	81 c2 40 02 00
	00		 add	 edx, 576		; 00000240H
  00744	52		 push	 edx
  00745	e8 00 00 00 00	 call	 _memcpy
  0074a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2824 : 	SaveData();

  0074d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00750	e8 00 00 00 00	 call	 ?SaveData@CDlgServerWizard@@QAEXXZ ; CDlgServerWizard::SaveData

; 2825 : 	//关闭窗口
; 2826 : 	EndDialog(IDOK);

  00755	6a 01		 push	 1
  00757	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0075a	e8 00 00 00 00	 call	 ?EndDialog@CDialog@@QAEXH@Z ; CDialog::EndDialog

; 2827 : 
; 2828 : 	return;

  0075f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00766	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  0076c	e8 00 00 00 00	 call	 ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
$LN1@OnBnClicke:

; 2829 : }

  00771	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00774	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0077b	59		 pop	 ecx
  0077c	5f		 pop	 edi
  0077d	5e		 pop	 esi
  0077e	5b		 pop	 ebx
  0077f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00782	33 cd		 xor	 ecx, ebp
  00784	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00789	8b e5		 mov	 esp, ebp
  0078b	5d		 pop	 ebp
  0078c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ$0:
  00000	8d 8d 88 ec ff
	ff		 lea	 ecx, DWORD PTR _ServerInfoManager$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
__ehhandler$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d8 e9 ff
	ff		 mov	 ecx, DWORD PTR [edx-5672]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ ENDP	; CDlgServerWizard::OnBnClickedFinish
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedNext@CDlgServerWizard@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedNext@CDlgServerWizard@@QAEXXZ PROC		; CDlgServerWizard::OnBnClickedNext, COMDAT
; _this$ = ecx

; 2656 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2657 : 	//效验参数
; 2658 : 	ASSERT((m_wActiveIndex+1)<CountArray(m_pWizardItem));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00016	83 c1 01	 add	 ecx, 1
  00019	83 f9 02	 cmp	 ecx, 2
  0001c	72 19		 jb	 SHORT $LN3@OnBnClicke
  0001e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedNext@CDlgServerWizard@@QAEXXZ@4JA
  00024	83 c2 02	 add	 edx, 2
  00027	52		 push	 edx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN3@OnBnClicke
  00036	cc		 int	 3
$LN3@OnBnClicke:

; 2659 : 
; 2660 : 	//激活页面
; 2661 : 	ActiveWizardItem(m_wActiveIndex+1);

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00041	83 c1 01	 add	 ecx, 1
  00044	51		 push	 ecx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z ; CDlgServerWizard::ActiveWizardItem

; 2662 : 
; 2663 : 	return;
; 2664 : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?OnBnClickedNext@CDlgServerWizard@@QAEXXZ ENDP		; CDlgServerWizard::OnBnClickedNext
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedLast@CDlgServerWizard@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedLast@CDlgServerWizard@@QAEXXZ PROC		; CDlgServerWizard::OnBnClickedLast, COMDAT
; _this$ = ecx

; 2643 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2644 : 	//效验参数
; 2645 : 	ASSERT(m_wActiveIndex>0);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00016	85 c9		 test	 ecx, ecx
  00018	7f 19		 jg	 SHORT $LN3@OnBnClicke
  0001a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedLast@CDlgServerWizard@@QAEXXZ@4JA
  00020	83 c2 02	 add	 edx, 2
  00023	52		 push	 edx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00029	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002e	85 c0		 test	 eax, eax
  00030	74 01		 je	 SHORT $LN3@OnBnClicke
  00032	cc		 int	 3
$LN3@OnBnClicke:

; 2646 : 	ASSERT(m_wActiveIndex<CountArray(m_pWizardItem));

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0003d	83 f9 02	 cmp	 ecx, 2
  00040	72 19		 jb	 SHORT $LN4@OnBnClicke
  00042	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedLast@CDlgServerWizard@@QAEXXZ@4JA
  00048	83 c2 03	 add	 edx, 3
  0004b	52		 push	 edx
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00051	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00056	85 c0		 test	 eax, eax
  00058	74 01		 je	 SHORT $LN4@OnBnClicke
  0005a	cc		 int	 3
$LN4@OnBnClicke:

; 2647 : 
; 2648 : 	//切换页面
; 2649 : 	ActiveWizardItem(m_wActiveIndex-1);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00065	83 e9 01	 sub	 ecx, 1
  00068	51		 push	 ecx
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z ; CDlgServerWizard::ActiveWizardItem

; 2650 : 
; 2651 : 	return;
; 2652 : }

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?OnBnClickedLast@CDlgServerWizard@@QAEXXZ ENDP		; CDlgServerWizard::OnBnClickedLast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z
_TEXT	SEGMENT
tv293 = -236						; size = 4
tv275 = -236						; size = 4
tv264 = -236						; size = 4
_szTitle$ = -168					; size = 128
_pButtonFinish$ = -40					; size = 4
_pButtonNext$ = -36					; size = 4
_pButtonLast$ = -32					; size = 4
_rcItemRect$ = -28					; size = 16
_pItemWizard$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wIndex$ = 8						; size = 2
?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z PROC	; CDlgServerWizard::ActiveWizardItem, COMDAT
; _this$ = ecx

; 2582 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2583 : 	//判断状态
; 2584 : 	if (m_wActiveIndex==wIndex)

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00023	0f b7 55 08	 movzx	 edx, WORD PTR _wIndex$[ebp]
  00027	3b ca		 cmp	 ecx, edx
  00029	75 20		 jne	 SHORT $LN2@ActiveWiza

; 2585 : 	{
; 2586 : 		m_pWizardItem[m_wActiveIndex]->SetFocus();

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00035	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0003f	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 2587 : 		return true;

  00044	b0 01		 mov	 al, 1
  00046	e9 ba 02 00 00	 jmp	 $LN1@ActiveWiza
$LN2@ActiveWiza:

; 2588 : 	}
; 2589 : 
; 2590 : 	//保存旧项
; 2591 : 	CDlgServerWizardItem * pItemWizard=NULL;

  0004b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pItemWizard$[ebp], 0

; 2592 : 	if (m_wActiveIndex<CountArray(m_pWizardItem))

  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0005c	83 f9 02	 cmp	 ecx, 2
  0005f	73 50		 jae	 SHORT $LN3@ActiveWiza

; 2593 : 	{
; 2594 : 		//设置变量
; 2595 : 		pItemWizard=m_pWizardItem[m_wActiveIndex];

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0006b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 84 8a ac 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+172]
  00075	89 45 f4	 mov	 DWORD PTR _pItemWizard$[ebp], eax

; 2596 : 
; 2597 : 		//保存数据
; 2598 : 		if ((wIndex>m_wActiveIndex)&&(m_pWizardItem[m_wActiveIndex]->SaveItemData()==false)) return false;

  00078	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	0f b7 91 a8 00
	00 00		 movzx	 edx, WORD PTR [ecx+168]
  00086	3b c2		 cmp	 eax, edx
  00088	7e 27		 jle	 SHORT $LN3@ActiveWiza
  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00094	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0009e	e8 00 00 00 00	 call	 ?SaveItemData@CDlgServerWizardItem@@AAE_NXZ ; CDlgServerWizardItem::SaveItemData
  000a3	0f b6 c0	 movzx	 eax, al
  000a6	85 c0		 test	 eax, eax
  000a8	75 07		 jne	 SHORT $LN3@ActiveWiza
  000aa	32 c0		 xor	 al, al
  000ac	e9 54 02 00 00	 jmp	 $LN1@ActiveWiza
$LN3@ActiveWiza:

; 2599 : 	}
; 2600 : 
; 2601 : 	//获取位置
; 2602 : 	CRect rcItemRect;

  000b1	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  000b4	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 2603 : 	GetDlgItem(IDC_ITEM_FRAME)->GetWindowRect(rcItemRect);

  000b9	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  000bc	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  000c1	50		 push	 eax
  000c2	68 30 04 00 00	 push	 1072			; 00000430H
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 2604 : 	ScreenToClient(&rcItemRect);

  000d6	8d 45 e4	 lea	 eax, DWORD PTR _rcItemRect$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 2605 : 
; 2606 : 	//设置新项
; 2607 : 	m_pWizardItem[wIndex]->m_pDlgServerWizard=this;

  000e2	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  000e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  000f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	89 82 a8 00 00
	00		 mov	 DWORD PTR [edx+168], eax

; 2608 : 	m_pWizardItem[wIndex]->m_pGameServiceAttrib=&m_ModuleInitParameter.GameServiceAttrib;

  000f9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  00101	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  00105	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00108	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0010f	89 81 ac 00 00
	00		 mov	 DWORD PTR [ecx+172], eax

; 2609 : 	m_pWizardItem[wIndex]->m_pGameServiceOption=&m_ModuleInitParameter.GameServiceOption;

  00115	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00118	05 50 01 00 00	 add	 eax, 336		; 00000150H
  0011d	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  00121	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00124	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0012b	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 2610 : 	m_pWizardItem[wIndex]->m_pPersonalRoomOption=&m_ModuleInitParameter.PersonalRoomOption;

  00131	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00134	05 08 0d 00 00	 add	 eax, 3336		; 00000d08H
  00139	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  0013d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00140	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  00147	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 2611 : 	m_pWizardItem[wIndex]->m_pCreateRoomRightAndFee=&m_ModuleInitParameter.m_pCreateRoomRightAndFee;

  0014d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00150	05 79 0d 00 00	 add	 eax, 3449		; 00000d79H
  00155	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  00159	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0015c	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  00163	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 2612 : 
; 2613 : 	//创建新项
; 2614 : 	m_wActiveIndex=wIndex;

  00169	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	66 8b 4d 08	 mov	 cx, WORD PTR _wIndex$[ebp]
  00170	66 89 88 a8 00
	00 00		 mov	 WORD PTR [eax+168], cx

; 2615 : 	m_pWizardItem[m_wActiveIndex]->ShowWizardItem(rcItemRect,this);

  00177	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	50		 push	 eax
  0017b	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  0017e	51		 push	 ecx
  0017f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00182	0f b7 82 a8 00
	00 00		 movzx	 eax, WORD PTR [edx+168]
  00189	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018c	8b 8c 81 ac 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+172]
  00193	e8 00 00 00 00	 call	 ?ShowWizardItem@CDlgServerWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgServerWizardItem::ShowWizardItem

; 2616 : 
; 2617 : 	//激活新项
; 2618 : 	m_pWizardItem[m_wActiveIndex]->SetFocus();

  00198	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019b	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  001a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001a5	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  001ac	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 2619 : 	if (pItemWizard!=NULL) pItemWizard->ShowWindow(SW_HIDE);

  001b1	83 7d f4 00	 cmp	 DWORD PTR _pItemWizard$[ebp], 0
  001b5	74 0a		 je	 SHORT $LN5@ActiveWiza
  001b7	6a 00		 push	 0
  001b9	8b 4d f4	 mov	 ecx, DWORD PTR _pItemWizard$[ebp]
  001bc	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$LN5@ActiveWiza:

; 2620 : 
; 2621 : 	//界面变量
; 2622 : 	CButton * pButtonLast=(CButton * )GetDlgItem(IDC_LAST);

  001c1	68 29 04 00 00	 push	 1065			; 00000429H
  001c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001ce	89 45 e0	 mov	 DWORD PTR _pButtonLast$[ebp], eax

; 2623 : 	CButton * pButtonNext=(CButton * )GetDlgItem(IDC_NEXT);

  001d1	68 2b 04 00 00	 push	 1067			; 0000042bH
  001d6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001de	89 45 dc	 mov	 DWORD PTR _pButtonNext$[ebp], eax

; 2624 : 	CButton * pButtonFinish=(CButton * )GetDlgItem(IDC_FINISH);

  001e1	68 34 04 00 00	 push	 1076			; 00000434H
  001e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001ee	89 45 d8	 mov	 DWORD PTR _pButtonFinish$[ebp], eax

; 2625 : 
; 2626 : 	//进度界面
; 2627 : 	pButtonNext->EnableWindow(((m_wActiveIndex+1)<CountArray(m_pWizardItem))?TRUE:FALSE);

  001f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f4	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  001fb	83 c1 01	 add	 ecx, 1
  001fe	83 f9 02	 cmp	 ecx, 2
  00201	73 0c		 jae	 SHORT $LN7@ActiveWiza
  00203	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv264[ebp], 1
  0020d	eb 0a		 jmp	 SHORT $LN8@ActiveWiza
$LN7@ActiveWiza:
  0020f	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN8@ActiveWiza:
  00219	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv264[ebp]
  0021f	52		 push	 edx
  00220	8b 4d dc	 mov	 ecx, DWORD PTR _pButtonNext$[ebp]
  00223	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 2628 : 	pButtonFinish->EnableWindow(((m_wActiveIndex+1)==CountArray(m_pWizardItem))?TRUE:FALSE);

  00228	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0022b	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00232	83 c1 01	 add	 ecx, 1
  00235	83 f9 02	 cmp	 ecx, 2
  00238	75 0c		 jne	 SHORT $LN9@ActiveWiza
  0023a	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv275[ebp], 1
  00244	eb 0a		 jmp	 SHORT $LN10@ActiveWiza
$LN9@ActiveWiza:
  00246	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv275[ebp], 0
$LN10@ActiveWiza:
  00250	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv275[ebp]
  00256	52		 push	 edx
  00257	8b 4d d8	 mov	 ecx, DWORD PTR _pButtonFinish$[ebp]
  0025a	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 2629 : 	pButtonLast->EnableWindow(((m_wActiveIndex>1)||((m_ModuleInitParameter.GameServiceOption.wServerID==0)&&(m_wActiveIndex>0)))?TRUE:FALSE);

  0025f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00262	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00269	83 f9 01	 cmp	 ecx, 1
  0026c	7f 28		 jg	 SHORT $LN12@ActiveWiza
  0026e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00271	0f b7 82 56 01
	00 00		 movzx	 eax, WORD PTR [edx+342]
  00278	85 c0		 test	 eax, eax
  0027a	75 0e		 jne	 SHORT $LN11@ActiveWiza
  0027c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0027f	0f b7 91 a8 00
	00 00		 movzx	 edx, WORD PTR [ecx+168]
  00286	85 d2		 test	 edx, edx
  00288	7f 0c		 jg	 SHORT $LN12@ActiveWiza
$LN11@ActiveWiza:
  0028a	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv293[ebp], 0
  00294	eb 0a		 jmp	 SHORT $LN13@ActiveWiza
$LN12@ActiveWiza:
  00296	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv293[ebp], 1
$LN13@ActiveWiza:
  002a0	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv293[ebp]
  002a6	50		 push	 eax
  002a7	8b 4d e0	 mov	 ecx, DWORD PTR _pButtonLast$[ebp]
  002aa	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 2630 : 
; 2631 : 	//构造标题
; 2632 : 	TCHAR szTitle[128]=TEXT("");

  002af	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  002b4	88 85 58 ff ff
	ff		 mov	 BYTE PTR _szTitle$[ebp], al
  002ba	6a 7f		 push	 127			; 0000007fH
  002bc	6a 00		 push	 0
  002be	8d 85 59 ff ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp+1]
  002c4	50		 push	 eax
  002c5	e8 00 00 00 00	 call	 _memset
  002ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2633 : 	_sntprintf_s(szTitle,CountArray(szTitle),TEXT("房间配置向导 --- [ 步骤 %d ]"),m_wActiveIndex+1);

  002cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d0	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  002d7	83 c1 01	 add	 ecx, 1
  002da	51		 push	 ecx
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PPCMMBCC@?$LH?$LP?$LM?d?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@
  002e0	68 80 00 00 00	 push	 128			; 00000080H
  002e5	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _szTitle$[ebp]
  002eb	52		 push	 edx
  002ec	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  002f1	83 c4 10	 add	 esp, 16			; 00000010H

; 2634 : 	
; 2635 : 	//设置标题
; 2636 : 	SetWindowText(szTitle);

  002f4	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  002fa	50		 push	 eax
  002fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002fe	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 2637 : 
; 2638 : 	return true;

  00303	b0 01		 mov	 al, 1
$LN1@ActiveWiza:

; 2639 : }

  00305	5f		 pop	 edi
  00306	5e		 pop	 esi
  00307	5b		 pop	 ebx
  00308	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0030b	33 cd		 xor	 ecx, ebp
  0030d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00312	8b e5		 mov	 esp, ebp
  00314	5d		 pop	 ebp
  00315	c2 04 00	 ret	 4
?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z ENDP	; CDlgServerWizard::ActiveWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SetPersonalRoomParameter@CDlgServerWizard@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PersonalRoomOption$ = 8				; size = 113
_PersonalRoomOptionRightAndFee$ = 124			; size = 116
?SetPersonalRoomParameter@CDlgServerWizard@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z PROC ; CDlgServerWizard::SetPersonalRoomParameter, COMDAT
; _this$ = ecx

; 2575 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2576 : 	m_ModuleInitParameter.PersonalRoomOption = PersonalRoomOption;

  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 08 0d 00
	00		 add	 edi, 3336		; 00000d08H
  00015	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0001a	8d 75 08	 lea	 esi, DWORD PTR _PersonalRoomOption$[ebp]
  0001d	f3 a5		 rep movsd
  0001f	a4		 movsb

; 2577 : 	m_ModuleInitParameter.m_pCreateRoomRightAndFee = PersonalRoomOptionRightAndFee;

  00020	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00023	81 c7 79 0d 00
	00		 add	 edi, 3449		; 00000d79H
  00029	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  0002e	8d 75 7c	 lea	 esi, DWORD PTR _PersonalRoomOptionRightAndFee$[ebp]
  00031	f3 a5		 rep movsd

; 2578 : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 e8 00	 ret	 232			; 000000e8H
?SetPersonalRoomParameter@CDlgServerWizard@@QAEXUtagPersonalRoomOption@@UtagPersonalRoomOptionRightAndFee@@@Z ENDP ; CDlgServerWizard::SetPersonalRoomParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z
_TEXT	SEGMENT
tv186 = -84						; size = 4
tv168 = -84						; size = 4
_wPersonalRoomSize$1 = -16				; size = 2
_wCustomSize$2 = -12					; size = 2
_i$3 = -8						; size = 2
_this$ = -4						; size = 4
_pIGameServiceManager$ = 8				; size = 4
_pGameServiceOption$ = 12				; size = 4
?SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z PROC ; CDlgServerWizard::SetWizardParameter, COMDAT
; _this$ = ecx

; 2507 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2508 : 	//销毁子项
; 2509 : 	if (pGameServiceOption==NULL)

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _pGameServiceOption$[ebp], 0
  00010	75 6a		 jne	 SHORT $LN5@SetWizardP

; 2510 : 	{
; 2511 : 		for (WORD i=1;i<CountArray(m_pWizardItem);i++)

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	66 89 45 f8	 mov	 WORD PTR _i$3[ebp], ax
  0001b	eb 0c		 jmp	 SHORT $LN4@SetWizardP
$LN2@SetWizardP:
  0001d	66 8b 45 f8	 mov	 ax, WORD PTR _i$3[ebp]
  00021	66 83 c0 01	 add	 ax, 1
  00025	66 89 45 f8	 mov	 WORD PTR _i$3[ebp], ax
$LN4@SetWizardP:
  00029	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  0002d	83 f8 02	 cmp	 eax, 2
  00030	73 4a		 jae	 SHORT $LN5@SetWizardP

; 2512 : 		{
; 2513 : 			if ((m_pWizardItem[i]!=NULL)&&(m_pWizardItem[i]->m_hWnd!=NULL))

  00032	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 bc 81 ac 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+172], 0
  00041	74 37		 je	 SHORT $LN6@SetWizardP
  00043	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  00051	83 7a 20 00	 cmp	 DWORD PTR [edx+32], 0
  00055	74 23		 je	 SHORT $LN6@SetWizardP

; 2514 : 			{
; 2515 : 				m_pWizardItem[i]->DestroyWindow();

  00057	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  00065	0f b7 45 f8	 movzx	 eax, WORD PTR _i$3[ebp]
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	8b 12		 mov	 edx, DWORD PTR [edx]
  0006e	8b 8c 81 ac 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+172]
  00075	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  00078	ff d0		 call	 eax
$LN6@SetWizardP:

; 2516 : 			}
; 2517 : 		}

  0007a	eb a1		 jmp	 SHORT $LN2@SetWizardP
$LN5@SetWizardP:

; 2518 : 	}
; 2519 : 
; 2520 : 	//设置变量
; 2521 : 	m_pIGameServiceCustomRule=NULL;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	c7 80 04 1c 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+7172], 0

; 2522 : 	ZeroMemory(&m_ModuleInitParameter,sizeof(m_ModuleInitParameter));

  00089	68 38 0d 00 00	 push	 3384			; 00000d38H
  0008e	6a 00		 push	 0
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 _memset
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2523 : 
; 2524 : 	//获取属性
; 2525 : 	ASSERT(pIGameServiceManager!=NULL);

  000a1	83 7d 08 00	 cmp	 DWORD PTR _pIGameServiceManager$[ebp], 0
  000a5	75 18		 jne	 SHORT $LN13@SetWizardP
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z@4JA
  000ac	83 c0 12	 add	 eax, 18			; 00000012H
  000af	50		 push	 eax
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ba	85 c0		 test	 eax, eax
  000bc	74 01		 je	 SHORT $LN13@SetWizardP
  000be	cc		 int	 3
$LN13@SetWizardP:

; 2526 : 	pIGameServiceManager->GetServiceAttrib(m_ModuleInitParameter.GameServiceAttrib);

  000bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  000c7	50		 push	 eax
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _pIGameServiceManager$[ebp]
  000cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR _pIGameServiceManager$[ebp]
  000d0	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000d3	ff d0		 call	 eax

; 2527 : 
; 2528 : 	//设置接口
; 2529 : 	m_pIGameServiceManager=pIGameServiceManager;

  000d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	8b 4d 08	 mov	 ecx, DWORD PTR _pIGameServiceManager$[ebp]
  000db	89 88 00 1c 00
	00		 mov	 DWORD PTR [eax+7168], ecx

; 2530 : 	m_pIGameServiceCustomRule=QUERY_OBJECT_PTR_INTERFACE(m_pIGameServiceManager,IGameServiceCustomRule);

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	83 b8 00 1c 00
	00 00		 cmp	 DWORD PTR [eax+7168], 0
  000eb	75 09		 jne	 SHORT $LN14@SetWizardP
  000ed	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
  000f4	eb 26		 jmp	 SHORT $LN15@SetWizardP
$LN14@SetWizardP:
  000f6	68 00 01 01 06	 push	 100729088		; 06010100H
  000fb	68 00 00 00 00	 push	 OFFSET ?IID_IGameServiceCustomRule@@3U_GUID@@B
  00100	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	8b 91 00 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7168]
  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 12		 mov	 edx, DWORD PTR [edx]
  0010e	8b 88 00 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7168]
  00114	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00117	ff d0		 call	 eax
  00119	89 45 ac	 mov	 DWORD PTR tv168[ebp], eax
$LN15@SetWizardP:
  0011c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	8b 55 ac	 mov	 edx, DWORD PTR tv168[ebp]
  00122	89 91 04 1c 00
	00		 mov	 DWORD PTR [ecx+7172], edx

; 2531 : 	m_pIGameServicePersonalRule = QUERY_OBJECT_PTR_INTERFACE(m_pIGameServiceManager, IGameServicePersonalRule);

  00128	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012b	83 b8 00 1c 00
	00 00		 cmp	 DWORD PTR [eax+7168], 0
  00132	75 09		 jne	 SHORT $LN16@SetWizardP
  00134	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
  0013b	eb 26		 jmp	 SHORT $LN17@SetWizardP
$LN16@SetWizardP:
  0013d	68 00 01 01 06	 push	 100729088		; 06010100H
  00142	68 00 00 00 00	 push	 OFFSET ?IID_IGameServicePersonalRule@@3U_GUID@@B
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	8b 91 00 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7168]
  00150	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00153	8b 12		 mov	 edx, DWORD PTR [edx]
  00155	8b 88 00 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7168]
  0015b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0015e	ff d0		 call	 eax
  00160	89 45 ac	 mov	 DWORD PTR tv186[ebp], eax
$LN17@SetWizardP:
  00163	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	8b 55 ac	 mov	 edx, DWORD PTR tv186[ebp]
  00169	89 91 08 1c 00
	00		 mov	 DWORD PTR [ecx+7176], edx

; 2532 : 
; 2533 : 	//组件属性
; 2534 : 	if (m_hWnd!=NULL)

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00172	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00176	0f 84 8c 00 00
	00		 je	 $LN7@SetWizardP

; 2535 : 	{
; 2536 : 		SetDlgItemInt(IDC_GAME_ID,m_ModuleInitParameter.GameServiceAttrib.wKindID);

  0017c	6a 01		 push	 1
  0017e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00181	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00188	51		 push	 ecx
  00189	68 3d 23 00 00	 push	 9021			; 0000233dH
  0018e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 2537 : 		SetDlgItemText(IDC_GAME_NAME,m_ModuleInitParameter.GameServiceAttrib.szGameName);

  00196	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00199	05 be 00 00 00	 add	 eax, 190		; 000000beH
  0019e	50		 push	 eax
  0019f	68 00 04 00 00	 push	 1024			; 00000400H
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 2538 : 		SetDlgItemInt(IDC_CHAIR_COUNT,m_ModuleInitParameter.GameServiceAttrib.wChairCount);

  001ac	6a 01		 push	 1
  001ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b1	0f b7 88 ba 00
	00 00		 movzx	 ecx, WORD PTR [eax+186]
  001b8	51		 push	 ecx
  001b9	68 f8 03 00 00	 push	 1016			; 000003f8H
  001be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c1	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 2539 : 		SetDlgItemText(IDC_DATABASE_NAME,m_ModuleInitParameter.GameServiceAttrib.szDataBaseName);

  001c6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c9	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  001ce	50		 push	 eax
  001cf	68 fa 03 00 00	 push	 1018			; 000003faH
  001d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d7	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 2540 : 		SetDlgItemText(IDC_CLIENT_EXE_NAME,m_ModuleInitParameter.GameServiceAttrib.szClientEXEName);

  001dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001df	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  001e4	50		 push	 eax
  001e5	68 ff 03 00 00	 push	 1023			; 000003ffH
  001ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 2541 : 		SetDlgItemText(IDC_SERVICE_DLL_NAME,m_ModuleInitParameter.GameServiceAttrib.szServerDLLName);

  001f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f5	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  001fa	50		 push	 eax
  001fb	68 fd 03 00 00	 push	 1021			; 000003fdH
  00200	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00203	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN7@SetWizardP:

; 2542 : 	}
; 2543 : 
; 2544 : 	//设置规则
; 2545 : 	if (pGameServiceOption==NULL)

  00208	83 7d 0c 00	 cmp	 DWORD PTR _pGameServiceOption$[ebp], 0
  0020c	0f 85 c3 00 00
	00		 jne	 $LN8@SetWizardP

; 2546 : 	{
; 2547 : 		//自定规则
; 2548 : 		if (m_pIGameServiceCustomRule!=NULL)

  00212	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00215	83 b8 04 1c 00
	00 00		 cmp	 DWORD PTR [eax+7172], 0
  0021c	74 31		 je	 SHORT $LN10@SetWizardP

; 2549 : 		{
; 2550 : 			WORD wCustomSize=sizeof(m_ModuleInitParameter.GameServiceOption.cbCustomRule);

  0021e	b8 00 04 00 00	 mov	 eax, 1024		; 00000400H
  00223	66 89 45 f4	 mov	 WORD PTR _wCustomSize$2[ebp], ax

; 2551 : 			m_pIGameServiceCustomRule->DefaultCustomRule(m_ModuleInitParameter.GameServiceOption.cbCustomRule,wCustomSize);

  00227	0f b7 45 f4	 movzx	 eax, WORD PTR _wCustomSize$2[ebp]
  0022b	50		 push	 eax
  0022c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	81 c1 40 02 00
	00		 add	 ecx, 576		; 00000240H
  00235	51		 push	 ecx
  00236	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00239	8b 82 04 1c 00
	00		 mov	 eax, DWORD PTR [edx+7172]
  0023f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00242	8b 10		 mov	 edx, DWORD PTR [eax]
  00244	8b 89 04 1c 00
	00		 mov	 ecx, DWORD PTR [ecx+7172]
  0024a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0024d	ff d0		 call	 eax
$LN10@SetWizardP:

; 2552 : 		}
; 2553 : 
; 2554 : 		//自定规则
; 2555 : 		if (m_pIGameServicePersonalRule != NULL)

  0024f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00252	83 b8 08 1c 00
	00 00		 cmp	 DWORD PTR [eax+7176], 0
  00259	74 31		 je	 SHORT $LN11@SetWizardP

; 2556 : 		{
; 2557 : 			WORD wPersonalRoomSize = sizeof(m_ModuleInitParameter.GameServiceOption.cbPersonalRule);

  0025b	b8 00 04 00 00	 mov	 eax, 1024		; 00000400H
  00260	66 89 45 f0	 mov	 WORD PTR _wPersonalRoomSize$1[ebp], ax

; 2558 : 			m_pIGameServicePersonalRule->DefaultPersonalRule(m_ModuleInitParameter.GameServiceOption.cbPersonalRule, wPersonalRoomSize);

  00264	0f b7 45 f0	 movzx	 eax, WORD PTR _wPersonalRoomSize$1[ebp]
  00268	50		 push	 eax
  00269	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026c	81 c1 40 06 00
	00		 add	 ecx, 1600		; 00000640H
  00272	51		 push	 ecx
  00273	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00276	8b 82 08 1c 00
	00		 mov	 eax, DWORD PTR [edx+7176]
  0027c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027f	8b 10		 mov	 edx, DWORD PTR [eax]
  00281	8b 89 08 1c 00
	00		 mov	 ecx, DWORD PTR [ecx+7176]
  00287	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0028a	ff d0		 call	 eax
$LN11@SetWizardP:

; 2559 : 		}
; 2560 : 		//调整参数
; 2561 : 		ASSERT(m_pIGameServiceManager!=NULL);

  0028c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0028f	83 b8 00 1c 00
	00 00		 cmp	 DWORD PTR [eax+7168], 0
  00296	75 19		 jne	 SHORT $LN18@SetWizardP
  00298	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z@4JA
  0029e	83 c1 36	 add	 ecx, 54			; 00000036H
  002a1	51		 push	 ecx
  002a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  002a7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002ac	85 c0		 test	 eax, eax
  002ae	74 01		 je	 SHORT $LN18@SetWizardP
  002b0	cc		 int	 3
$LN18@SetWizardP:

; 2562 : 		m_pIGameServiceManager->RectifyParameter(m_ModuleInitParameter.GameServiceOption);

  002b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b4	05 50 01 00 00	 add	 eax, 336		; 00000150H
  002b9	50		 push	 eax
  002ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002bd	8b 91 00 1c 00
	00		 mov	 edx, DWORD PTR [ecx+7168]
  002c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c6	8b 12		 mov	 edx, DWORD PTR [edx]
  002c8	8b 88 00 1c 00
	00		 mov	 ecx, DWORD PTR [eax+7168]
  002ce	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  002d1	ff d0		 call	 eax

; 2563 : 	}
; 2564 : 	else

  002d3	eb 1b		 jmp	 SHORT $LN1@SetWizardP
$LN8@SetWizardP:

; 2565 : 	{
; 2566 : 		//拷贝规则
; 2567 : 		CopyMemory(&m_ModuleInitParameter.GameServiceOption,pGameServiceOption,sizeof(tagGameServiceOption));

  002d5	68 f0 08 00 00	 push	 2288			; 000008f0H
  002da	8b 45 0c	 mov	 eax, DWORD PTR _pGameServiceOption$[ebp]
  002dd	50		 push	 eax
  002de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e1	81 c1 50 01 00
	00		 add	 ecx, 336		; 00000150H
  002e7	51		 push	 ecx
  002e8	e8 00 00 00 00	 call	 _memcpy
  002ed	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@SetWizardP:

; 2568 : 	}
; 2569 : 
; 2570 : 	return;
; 2571 : }

  002f0	5f		 pop	 edi
  002f1	5e		 pop	 esi
  002f2	5b		 pop	 ebx
  002f3	8b e5		 mov	 esp, ebp
  002f5	5d		 pop	 ebp
  002f6	c2 08 00	 ret	 8
?SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z ENDP ; CDlgServerWizard::SetWizardParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?CreateGameServer@CDlgServerWizard@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CreateGameServer@CDlgServerWizard@@QAE_NXZ PROC	; CDlgServerWizard::CreateGameServer, COMDAT
; _this$ = ecx

; 2492 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2493 : 	//设置资源
; 2494 : 	AfxSetResourceHandle(GetModuleHandle(MODULE_MANAGER_DLL_NAME));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 2495 : 
; 2496 : 	//配置房间
; 2497 : 	if (DoModal()==IDOK)

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 10		 mov	 edx, DWORD PTR [eax]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	8b 82 7c 01 00
	00		 mov	 eax, DWORD PTR [edx+380]
  0002b	ff d0		 call	 eax
  0002d	83 f8 01	 cmp	 eax, 1
  00030	75 04		 jne	 SHORT $LN2@CreateGame

; 2498 : 	{
; 2499 : 		return true;

  00032	b0 01		 mov	 al, 1
  00034	eb 02		 jmp	 SHORT $LN1@CreateGame
$LN2@CreateGame:

; 2500 : 	}
; 2501 : 
; 2502 : 	return false;

  00036	32 c0		 xor	 al, al
$LN1@CreateGame:

; 2503 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?CreateGameServer@CDlgServerWizard@@QAE_NXZ ENDP	; CDlgServerWizard::CreateGameServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnOK@CDlgServerWizard@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgServerWizard@@UAEXXZ PROC			; CDlgServerWizard::OnOK, COMDAT
; _this$ = ecx

; 2477 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2478 : 	if ((m_wActiveIndex+1)<CountArray(m_pWizardItem))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00016	83 c1 01	 add	 ecx, 1
  00019	83 f9 02	 cmp	 ecx, 2
  0001c	73 0a		 jae	 SHORT $LN2@OnOK

; 2479 : 	{
; 2480 : 		OnBnClickedNext();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?OnBnClickedNext@CDlgServerWizard@@QAEXXZ ; CDlgServerWizard::OnBnClickedNext

; 2481 : 	}
; 2482 : 	else

  00026	eb 08		 jmp	 SHORT $LN1@OnOK
$LN2@OnOK:

; 2483 : 	{
; 2484 : 		OnBnClickedFinish();

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?OnBnClickedFinish@CDlgServerWizard@@QAEXXZ ; CDlgServerWizard::OnBnClickedFinish
$LN1@OnOK:

; 2485 : 	}
; 2486 : 
; 2487 : 	return;
; 2488 : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?OnOK@CDlgServerWizard@@UAEXXZ ENDP			; CDlgServerWizard::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerWizard@@UAEHXZ
_TEXT	SEGMENT
tv76 = -72						; size = 4
_this$ = -4						; size = 4
?OnInitDialog@CDlgServerWizard@@UAEHXZ PROC		; CDlgServerWizard::OnInitDialog, COMDAT
; _this$ = ecx

; 2452 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2453 : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 2454 : 
; 2455 : 	//设置资源
; 2456 : 	AfxSetResourceHandle(GetModuleHandle(NULL));

  00014	6a 00		 push	 0
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 2457 : 
; 2458 : 	//激活向导
; 2459 : 	ActiveWizardItem((m_pIGameServiceManager==NULL)?0:1);

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 b8 00 1c 00
	00 00		 cmp	 DWORD PTR [eax+7168], 0
  0002c	75 09		 jne	 SHORT $LN4@OnInitDial
  0002e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
  00035	eb 07		 jmp	 SHORT $LN5@OnInitDial
$LN4@OnInitDial:
  00037	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
$LN5@OnInitDial:
  0003e	0f b7 4d b8	 movzx	 ecx, WORD PTR tv76[ebp]
  00042	51		 push	 ecx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgServerWizard@@AAE_NG@Z ; CDlgServerWizard::ActiveWizardItem

; 2460 : 
; 2461 : 	//组件属性
; 2462 : 	if (m_pIGameServiceManager!=NULL)

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	83 b8 00 1c 00
	00 00		 cmp	 DWORD PTR [eax+7168], 0
  00055	0f 84 8c 00 00
	00		 je	 $LN2@OnInitDial

; 2463 : 	{
; 2464 : 		SetDlgItemInt(IDC_GAME_ID,m_ModuleInitParameter.GameServiceAttrib.wKindID);

  0005b	6a 01		 push	 1
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00067	51		 push	 ecx
  00068	68 3d 23 00 00	 push	 9021			; 0000233dH
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 2465 : 		SetDlgItemText(IDC_GAME_NAME,m_ModuleInitParameter.GameServiceAttrib.szGameName);

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	05 be 00 00 00	 add	 eax, 190		; 000000beH
  0007d	50		 push	 eax
  0007e	68 00 04 00 00	 push	 1024			; 00000400H
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 2466 : 		SetDlgItemInt(IDC_CHAIR_COUNT,m_ModuleInitParameter.GameServiceAttrib.wChairCount);

  0008b	6a 01		 push	 1
  0008d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00090	0f b7 88 ba 00
	00 00		 movzx	 ecx, WORD PTR [eax+186]
  00097	51		 push	 ecx
  00098	68 f8 03 00 00	 push	 1016			; 000003f8H
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 2467 : 		SetDlgItemText(IDC_DATABASE_NAME,m_ModuleInitParameter.GameServiceAttrib.szDataBaseName);

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  000ad	50		 push	 eax
  000ae	68 fa 03 00 00	 push	 1018			; 000003faH
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 2468 : 		SetDlgItemText(IDC_CLIENT_EXE_NAME,m_ModuleInitParameter.GameServiceAttrib.szClientEXEName);

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000be	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  000c3	50		 push	 eax
  000c4	68 ff 03 00 00	 push	 1023			; 000003ffH
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 2469 : 		SetDlgItemText(IDC_SERVICE_DLL_NAME,m_ModuleInitParameter.GameServiceAttrib.szServerDLLName);

  000d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  000d9	50		 push	 eax
  000da	68 fd 03 00 00	 push	 1021			; 000003fdH
  000df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN2@OnInitDial:

; 2470 : 	}
; 2471 : 
; 2472 : 	return FALSE;

  000e7	33 c0		 xor	 eax, eax

; 2473 : }

  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c3		 ret	 0
?OnInitDialog@CDlgServerWizard@@UAEHXZ ENDP		; CDlgServerWizard::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerWizard@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerWizard@@UAE@XZ PROC			; CDlgServerWizard::~CDlgServerWizard, COMDAT
; _this$ = ecx

; 2447 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizard@@6B@

; 2448 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 50 12 00
	00		 add	 ecx, 4688		; 00001250H
  0001e	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem2@@UAE@XZ ; CDlgServerWizardItem2::~CDlgServerWizardItem2
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 f0 0d 00
	00		 add	 ecx, 3568		; 00000df0H
  0002c	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem1@@UAE@XZ ; CDlgServerWizardItem1::~CDlgServerWizardItem1
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??1CDlgServerWizard@@UAE@XZ ENDP			; CDlgServerWizard::~CDlgServerWizard
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerWizard@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgServerWizard@@QAE@XZ PROC			; CDlgServerWizard::CDlgServerWizard, COMDAT
; _this$ = ecx

; 2429 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgServerWizard@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2428 : CDlgServerWizard::CDlgServerWizard() : CDialog(IDD_SERVER_WIZARD_MAIN)

  0002b	6a 00		 push	 0
  0002d	68 89 00 00 00	 push	 137			; 00000089H
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2429 : {

  00041	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00044	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizard@@6B@
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00053	e8 00 00 00 00	 call	 ??0tagModuleInitParameter@@QAE@XZ
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 f0 0d 00
	00		 add	 ecx, 3568		; 00000df0H
  00061	e8 00 00 00 00	 call	 ??0CDlgServerWizardItem1@@QAE@XZ ; CDlgServerWizardItem1::CDlgServerWizardItem1
  00066	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	81 c1 50 12 00
	00		 add	 ecx, 4688		; 00001250H
  00073	e8 00 00 00 00	 call	 ??0CDlgServerWizardItem2@@QAE@XZ ; CDlgServerWizardItem2::CDlgServerWizardItem2

; 2430 : 	//设置变量
; 2431 : 	m_wActiveIndex=INVALID_WORD;

  00078	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	66 89 81 a8 00
	00 00		 mov	 WORD PTR [ecx+168], ax

; 2432 : 	m_pWizardItem[0]=&m_ServerWizardItem1;

  00087	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	05 f0 0d 00 00	 add	 eax, 3568		; 00000df0H
  0008f	b9 04 00 00 00	 mov	 ecx, 4
  00094	6b d1 00	 imul	 edx, ecx, 0
  00097	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	89 84 11 ac 00
	00 00		 mov	 DWORD PTR [ecx+edx+172], eax

; 2433 : 	m_pWizardItem[1]=&m_ServerWizardItem2;

  000a1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	05 50 12 00 00	 add	 eax, 4688		; 00001250H
  000a9	b9 04 00 00 00	 mov	 ecx, 4
  000ae	c1 e1 00	 shl	 ecx, 0
  000b1	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b4	89 84 0a ac 00
	00 00		 mov	 DWORD PTR [edx+ecx+172], eax

; 2434 : 
; 2435 : 	//接口变量
; 2436 : 	m_pIGameServiceManager=NULL;

  000bb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000be	c7 80 00 1c 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+7168], 0

; 2437 : 	m_pIGameServiceCustomRule=NULL;

  000c8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000cb	c7 80 04 1c 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+7172], 0

; 2438 : 
; 2439 : 	//配置信息
; 2440 : 	ZeroMemory(&m_ModuleInitParameter,sizeof(m_ModuleInitParameter));

  000d5	68 38 0d 00 00	 push	 3384			; 00000d38H
  000da	6a 00		 push	 0
  000dc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000df	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 _memset
  000ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2441 : 
; 2442 : 	return;
; 2443 : }

  000ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00101	59		 pop	 ecx
  00102	5f		 pop	 edi
  00103	5e		 pop	 esi
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgServerWizard@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__unwindfunclet$??0CDlgServerWizard@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 f0 0d 00
	00		 add	 ecx, 3568		; 00000df0H
  00011	e9 00 00 00 00	 jmp	 ??1CDlgServerWizardItem1@@UAE@XZ ; CDlgServerWizardItem1::~CDlgServerWizardItem1
__ehhandler$??0CDlgServerWizard@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgServerWizard@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgServerWizard@@QAE@XZ ENDP			; CDlgServerWizard::CDlgServerWizard
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerWizardItem2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerWizardItem2@@UAEPAXI@Z PROC		; CDlgServerWizardItem2::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerWizardItem2@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerWizardItem2@@UAE@XZ ; CDlgServerWizardItem2::~CDlgServerWizardItem2
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b0 09 00 00	 push	 2480			; 000009b0H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b0 09
	00 00		 imul	 ecx, DWORD PTR [eax-4], 2480
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem2@@UAE@XZ ; CDlgServerWizardItem2::~CDlgServerWizardItem2
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b0 09 00 00	 push	 2480			; 000009b0H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerWizardItem2@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerWizardItem2@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerWizardItem2@@UAEPAXI@Z ENDP		; CDlgServerWizardItem2::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerWizardItem2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerWizardItem2@@UAEPAXI@Z PROC		; CDlgServerWizardItem2::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem2@@UAE@XZ ; CDlgServerWizardItem2::~CDlgServerWizardItem2
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b0 09 00 00	 push	 2480			; 000009b0H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerWizardItem2@@UAEPAXI@Z ENDP		; CDlgServerWizardItem2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerWizardItem2@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerWizardItem2@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizardItem2::GetMessageMap, COMDAT
; _this$ = ecx

; 59   : BEGIN_MESSAGE_MAP(CDlgServerWizardItem2, CDlgServerWizardItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem2::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerWizardItem2@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizardItem2::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizardItem2::GetThisMessageMap, COMDAT

; 59   : BEGIN_MESSAGE_MAP(CDlgServerWizardItem2, CDlgServerWizardItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 60   : 	ON_WM_SETFOCUS()
; 61   : 	ON_NOTIFY(TCN_SELCHANGE, IDC_TAB_CTRL, OnTcnSelchangeTabCtrl)
; 62   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerWizardItem2@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizardItem2::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnTcnSelchangeTabCtrl@CDlgServerWizardItem2@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
tv67 = -72						; size = 4
_this$ = -4						; size = 4
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnTcnSelchangeTabCtrl@CDlgServerWizardItem2@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CDlgServerWizardItem2::OnTcnSelchangeTabCtrl, COMDAT
; _this$ = ecx

; 2410 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2411 : 	//设置页面
; 2412 : 	switch (m_TabCtrl.GetCurSel())

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00015	e8 00 00 00 00	 call	 ?GetCurSel@CTabCtrl@@QBEHXZ ; CTabCtrl::GetCurSel
  0001a	89 45 b8	 mov	 DWORD PTR tv67[ebp], eax
  0001d	83 7d b8 05	 cmp	 DWORD PTR tv67[ebp], 5
  00021	77 50		 ja	 SHORT $LN1@OnTcnSelch
  00023	8b 45 b8	 mov	 eax, DWORD PTR tv67[ebp]
  00026	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@OnTcnSelch[eax*4]
$LN4@OnTcnSelch:

; 2413 : 	{
; 2414 : 	case ITEM_SERVER_OPTION_1:{ ActiveOptionItem(0); break; }

  0002d	6a 00		 push	 0
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
  00037	eb 3a		 jmp	 SHORT $LN1@OnTcnSelch
$LN5@OnTcnSelch:

; 2415 : 	case ITEM_SERVER_OPTION_2:{ ActiveOptionItem(1); break; }

  00039	6a 01		 push	 1
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
  00043	eb 2e		 jmp	 SHORT $LN1@OnTcnSelch
$LN6@OnTcnSelch:

; 2416 : 	case ITEM_SERVER_OPTION_3:{ ActiveOptionItem(2); break; }

  00045	6a 02		 push	 2
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
  0004f	eb 22		 jmp	 SHORT $LN1@OnTcnSelch
$LN7@OnTcnSelch:

; 2417 : 	case ITEM_SERVER_OPTION_5:{ ActiveOptionItem(ITEM_SERVER_OPTION_5); break; }

  00051	6a 03		 push	 3
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
  0005b	eb 16		 jmp	 SHORT $LN1@OnTcnSelch
$LN8@OnTcnSelch:

; 2418 : 	case ITEM_SERVER_OPTION_CUSTOM:{ ActiveOptionItem(ITEM_SERVER_OPTION_CUSTOM ); break; }

  0005d	6a 04		 push	 4
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
  00067	eb 0a		 jmp	 SHORT $LN1@OnTcnSelch
$LN9@OnTcnSelch:

; 2419 : 	case ITEM_SERVER_OPTION_PERONAL:{ ActiveOptionItem(ITEM_SERVER_OPTION_PERONAL); break; }

  00069	6a 05		 push	 5
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem
$LN1@OnTcnSelch:

; 2420 : 	}
; 2421 : 
; 2422 : 	return;
; 2423 : }

  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
$LN11@OnTcnSelch:
  0007c	00 00 00 00	 DD	 $LN4@OnTcnSelch
  00080	00 00 00 00	 DD	 $LN5@OnTcnSelch
  00084	00 00 00 00	 DD	 $LN6@OnTcnSelch
  00088	00 00 00 00	 DD	 $LN7@OnTcnSelch
  0008c	00 00 00 00	 DD	 $LN8@OnTcnSelch
  00090	00 00 00 00	 DD	 $LN9@OnTcnSelch
?OnTcnSelchangeTabCtrl@CDlgServerWizardItem2@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CDlgServerWizardItem2::OnTcnSelchangeTabCtrl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSetFocus@CDlgServerWizardItem2@@IAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pNewWnd$ = 8						; size = 4
?OnSetFocus@CDlgServerWizardItem2@@IAEXPAVCWnd@@@Z PROC	; CDlgServerWizardItem2::OnSetFocus, COMDAT
; _this$ = ecx

; 2396 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2397 : 	__super::OnSetFocus(pNewWnd);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNewWnd$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?OnSetFocus@CWnd@@IAEXPAV1@@Z ; CWnd::OnSetFocus

; 2398 : 
; 2399 : 	//设置焦点
; 2400 : 	if ((m_wActiveIndex!=INVALID_WORD)&&(m_pOptionItem[m_wActiveIndex]->m_hWnd!=NULL))

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  00022	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00028	74 33		 je	 SHORT $LN1@OnSetFocus
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 84 8a c4 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+196]
  0003e	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00042	74 19		 je	 SHORT $LN1@OnSetFocus

; 2401 : 	{
; 2402 : 		m_pOptionItem[m_wActiveIndex]->SetFocus();

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8b 8c 8a c4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+196]
  00058	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$LN1@OnSetFocus:

; 2403 : 	}
; 2404 : 
; 2405 : 	return;
; 2406 : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?OnSetFocus@CDlgServerWizardItem2@@IAEXPAVCWnd@@@Z ENDP	; CDlgServerWizardItem2::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z
_TEXT	SEGMENT
_rcItemRect$ = -28					; size = 16
_pItemOption$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wIndex$ = 8						; size = 2
?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z PROC	; CDlgServerWizardItem2::ActiveOptionItem, COMDAT
; _this$ = ecx

; 2353 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2354 : 	//判断状态
; 2355 : 	if (m_wActiveIndex==wIndex)

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  00020	0f b7 55 08	 movzx	 edx, WORD PTR _wIndex$[ebp]
  00024	3b ca		 cmp	 ecx, edx
  00026	75 20		 jne	 SHORT $LN2@ActiveOpti

; 2356 : 	{
; 2357 : 		m_pOptionItem[m_wActiveIndex]->SetFocus();

  00028	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  00032	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8b 8c 8a c4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+196]
  0003c	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 2358 : 		return true;

  00041	b0 01		 mov	 al, 1
  00043	e9 8f 01 00 00	 jmp	 $LN1@ActiveOpti
$LN2@ActiveOpti:

; 2359 : 	}
; 2360 : 
; 2361 : 	//保存旧项
; 2362 : 	CDlgServerOptionItem * pItemOption=NULL;

  00048	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pItemOption$[ebp], 0

; 2363 : 	if (m_wActiveIndex<m_wItemCount) pItemOption=m_pOptionItem[m_wActiveIndex];

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  00059	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	0f b7 82 c0 00
	00 00		 movzx	 eax, WORD PTR [edx+192]
  00063	3b c8		 cmp	 ecx, eax
  00065	7d 17		 jge	 SHORT $LN3@ActiveOpti
  00067	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  00071	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 84 8a c4 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+196]
  0007b	89 45 f4	 mov	 DWORD PTR _pItemOption$[ebp], eax
$LN3@ActiveOpti:

; 2364 : 
; 2365 : 	//获取位置
; 2366 : 	CRect rcItemRect;

  0007e	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  00081	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 2367 : 	m_TabCtrl.GetWindowRect(&rcItemRect);

  00086	8d 45 e4	 lea	 eax, DWORD PTR _rcItemRect$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00093	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 2368 : 
; 2369 : 	//计算位置
; 2370 : 	m_TabCtrl.ScreenToClient(&rcItemRect);

  00098	8d 45 e4	 lea	 eax, DWORD PTR _rcItemRect$[ebp]
  0009b	50		 push	 eax
  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000a5	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 2371 : 	m_TabCtrl.AdjustRect(FALSE,&rcItemRect);

  000aa	8d 45 e4	 lea	 eax, DWORD PTR _rcItemRect$[ebp]
  000ad	50		 push	 eax
  000ae	6a 00		 push	 0
  000b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000b9	e8 00 00 00 00	 call	 ?AdjustRect@CTabCtrl@@QAEXHPAUtagRECT@@@Z ; CTabCtrl::AdjustRect

; 2372 : 
; 2373 : 	//设置新项
; 2374 : 	m_pOptionItem[wIndex]->m_pDlgServerWizard=m_pDlgServerWizard;

  000be	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  000cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  000d5	89 8a a8 00 00
	00		 mov	 DWORD PTR [edx+168], ecx

; 2375 : 	m_pOptionItem[wIndex]->m_pGameServiceAttrib=m_pGameServiceAttrib;

  000db	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  000df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  000e9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  000f2	89 8a ac 00 00
	00		 mov	 DWORD PTR [edx+172], ecx

; 2376 : 	m_pOptionItem[wIndex]->m_pGameServiceOption=m_pGameServiceOption;

  000f8	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  000fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  00106	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0010f	89 8a b0 00 00
	00		 mov	 DWORD PTR [edx+176], ecx

; 2377 : 	m_pOptionItem[wIndex]->m_pPersonalRoomOption=m_pPersonalRoomOption;

  00115	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  00123	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00126	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0012c	89 8a b4 00 00
	00		 mov	 DWORD PTR [edx+180], ecx

; 2378 : 	m_pOptionItem[wIndex]->m_pCreateRoomRightAndFee=m_pCreateRoomRightAndFee;

  00132	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  00136	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  00140	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00143	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00149	89 8a b8 00 00
	00		 mov	 DWORD PTR [edx+184], ecx

; 2379 : 
; 2380 : 	//创建新项
; 2381 : 	m_wActiveIndex=wIndex;

  0014f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00152	66 8b 4d 08	 mov	 cx, WORD PTR _wIndex$[ebp]
  00156	66 89 88 c2 00
	00 00		 mov	 WORD PTR [eax+194], cx

; 2382 : 	m_pOptionItem[m_wActiveIndex]->ShowOptionItem(rcItemRect,&m_TabCtrl);

  0015d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00160	05 e0 00 00 00	 add	 eax, 224		; 000000e0H
  00165	50		 push	 eax
  00166	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  00169	51		 push	 ecx
  0016a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0016d	0f b7 82 c2 00
	00 00		 movzx	 eax, WORD PTR [edx+194]
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	8b 8c 81 c4 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+196]
  0017e	e8 00 00 00 00	 call	 ?ShowOptionItem@CDlgServerOptionItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgServerOptionItem::ShowOptionItem

; 2383 : 
; 2384 : 	//激活新项
; 2385 : 	m_pOptionItem[m_wActiveIndex]->SetFocus();

  00183	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00186	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  0018d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00190	8b 8c 8a c4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+196]
  00197	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 2386 : 	if (pItemOption!=NULL) pItemOption->ShowWindow(SW_HIDE);

  0019c	83 7d f4 00	 cmp	 DWORD PTR _pItemOption$[ebp], 0
  001a0	74 0a		 je	 SHORT $LN4@ActiveOpti
  001a2	6a 00		 push	 0
  001a4	8b 4d f4	 mov	 ecx, DWORD PTR _pItemOption$[ebp]
  001a7	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$LN4@ActiveOpti:

; 2387 : 
; 2388 : 	//设置选择
; 2389 : 	if (m_TabCtrl.GetCurSel()!=wIndex) m_TabCtrl.SetCurSel(wIndex);

  001ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001af	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  001b5	e8 00 00 00 00	 call	 ?GetCurSel@CTabCtrl@@QBEHXZ ; CTabCtrl::GetCurSel
  001ba	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  001be	3b c1		 cmp	 eax, ecx
  001c0	74 13		 je	 SHORT $LN5@ActiveOpti
  001c2	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  001c6	50		 push	 eax
  001c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ca	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  001d0	e8 00 00 00 00	 call	 ?SetCurSel@CTabCtrl@@QAEHH@Z ; CTabCtrl::SetCurSel
$LN5@ActiveOpti:

; 2390 : 
; 2391 : 	return true;

  001d5	b0 01		 mov	 al, 1
$LN1@ActiveOpti:

; 2392 : }

  001d7	5f		 pop	 edi
  001d8	5e		 pop	 esi
  001d9	5b		 pop	 ebx
  001da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001dd	33 cd		 xor	 ecx, ebp
  001df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e4	8b e5		 mov	 esp, ebp
  001e6	5d		 pop	 ebp
  001e7	c2 04 00	 ret	 4
?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ENDP	; CDlgServerWizardItem2::ActiveOptionItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerWizardItem2@@UAEXHH@Z
_TEXT	SEGMENT
_rcItemRect$1 = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerWizardItem2@@UAEXHH@Z PROC	; CDlgServerWizardItem2::RectifyControl, COMDAT
; _this$ = ecx

; 2326 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2327 : 	//调整选择
; 2328 : 	if (m_TabCtrl.m_hWnd!=NULL)

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 b8 00 01 00
	00 00		 cmp	 DWORD PTR [eax+256], 0
  00020	74 27		 je	 SHORT $LN2@RectifyCon

; 2329 : 	{
; 2330 : 		m_TabCtrl.SetWindowPos(NULL,5,5,nWidth-10,nHeight-5,SWP_NOZORDER|SWP_NOCOPYBITS);

  00022	68 04 01 00 00	 push	 260			; 00000104H
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0002a	83 e8 05	 sub	 eax, 5
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00031	83 e9 0a	 sub	 ecx, 10			; 0000000aH
  00034	51		 push	 ecx
  00035	6a 05		 push	 5
  00037	6a 05		 push	 5
  00039	6a 00		 push	 0
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00044	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos
$LN2@RectifyCon:

; 2331 : 	}
; 2332 : 
; 2333 : 	//调整选择
; 2334 : 	if ((m_TabCtrl.m_hWnd!=NULL)&&(m_wActiveIndex!=INVALID_WORD))

  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 b8 00 01 00
	00 00		 cmp	 DWORD PTR [eax+256], 0
  00053	74 71		 je	 SHORT $LN1@RectifyCon
  00055	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00058	0f b7 88 c2 00
	00 00		 movzx	 ecx, WORD PTR [eax+194]
  0005f	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00065	74 5f		 je	 SHORT $LN1@RectifyCon

; 2335 : 	{
; 2336 : 		//获取位置
; 2337 : 		CRect rcItemRect;

  00067	8d 4d e8	 lea	 ecx, DWORD PTR _rcItemRect$1[ebp]
  0006a	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 2338 : 		m_TabCtrl.GetWindowRect(&rcItemRect);

  0006f	8d 45 e8	 lea	 eax, DWORD PTR _rcItemRect$1[ebp]
  00072	50		 push	 eax
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0007c	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 2339 : 
; 2340 : 		//计算位置
; 2341 : 		m_TabCtrl.ScreenToClient(&rcItemRect);

  00081	8d 45 e8	 lea	 eax, DWORD PTR _rcItemRect$1[ebp]
  00084	50		 push	 eax
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0008e	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 2342 : 		m_TabCtrl.AdjustRect(FALSE,&rcItemRect);

  00093	8d 45 e8	 lea	 eax, DWORD PTR _rcItemRect$1[ebp]
  00096	50		 push	 eax
  00097	6a 00		 push	 0
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000a2	e8 00 00 00 00	 call	 ?AdjustRect@CTabCtrl@@QAEXHPAUtagRECT@@@Z ; CTabCtrl::AdjustRect

; 2343 : 
; 2344 : 		//移动位置
; 2345 : 		m_pOptionItem[m_wActiveIndex]->MoveWindow(&rcItemRect);

  000a7	6a 01		 push	 1
  000a9	8d 45 e8	 lea	 eax, DWORD PTR _rcItemRect$1[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	0f b7 91 c2 00
	00 00		 movzx	 edx, WORD PTR [ecx+194]
  000b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 8c 90 c4 00
	00 00		 mov	 ecx, DWORD PTR [eax+edx*4+196]
  000c1	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$LN1@RectifyCon:

; 2346 : 	}
; 2347 : 
; 2348 : 	return;
; 2349 : }

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 08 00	 ret	 8
?RectifyControl@CDlgServerWizardItem2@@UAEXHH@Z ENDP	; CDlgServerWizardItem2::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerWizardItem2@@UAE_NXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerWizardItem2@@UAE_NXZ PROC	; CDlgServerWizardItem2::SaveInputInfo, COMDAT
; _this$ = ecx

; 2310 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2311 : 	//保存输入
; 2312 : 	for (INT i=0;i<m_wItemCount;i++)

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@SaveInputI
$LN2@SaveInputI:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SaveInputI:
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	0f b7 88 c0 00
	00 00		 movzx	 ecx, WORD PTR [eax+192]
  00028	39 4d f8	 cmp	 DWORD PTR _i$1[ebp], ecx
  0002b	7d 2c		 jge	 SHORT $LN3@SaveInputI

; 2313 : 	{
; 2314 : 		if (m_pOptionItem[i]->SaveItemData()==false)

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 8c 81 c4 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+196]
  0003a	e8 00 00 00 00	 call	 ?SaveItemData@CDlgServerOptionItem@@AAE_NXZ ; CDlgServerOptionItem::SaveItemData
  0003f	0f b6 d0	 movzx	 edx, al
  00042	85 d2		 test	 edx, edx
  00044	75 11		 jne	 SHORT $LN5@SaveInputI

; 2315 : 		{
; 2316 : 			ActiveOptionItem(i);

  00046	0f b7 45 f8	 movzx	 eax, WORD PTR _i$1[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem

; 2317 : 			return false;

  00053	32 c0		 xor	 al, al
  00055	eb 04		 jmp	 SHORT $LN1@SaveInputI
$LN5@SaveInputI:

; 2318 : 		}
; 2319 : 	}

  00057	eb bc		 jmp	 SHORT $LN2@SaveInputI
$LN3@SaveInputI:

; 2320 : 
; 2321 : 	return true;

  00059	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 2322 : }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
?SaveInputInfo@CDlgServerWizardItem2@@UAE_NXZ ENDP	; CDlgServerWizardItem2::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ
_TEXT	SEGMENT
_temp$2 = -368						; size = 352
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ PROC	; CDlgServerWizardItem2::OnInitDialog, COMDAT
; _this$ = ecx

; 2261 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a4 01 00
	00		 sub	 esp, 420		; 000001a4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2262 : 	__super::OnInitDialog();

  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 2263 : 
; 2264 : 	//设置变量
; 2265 : 	m_wItemCount=0;

  00036	33 c0		 xor	 eax, eax
  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2266 : 	m_wActiveIndex=INVALID_WORD;

  00042	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	66 89 81 c2 00
	00 00		 mov	 WORD PTR [ecx+194], ax

; 2267 : 
; 2268 : 	//基本配置
; 2269 : 	m_pOptionItem[m_wItemCount++]=&m_ServerOptionItem1;

  00051	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00054	05 60 01 00 00	 add	 eax, 352		; 00000160H
  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	0f b7 91 c0 00
	00 00		 movzx	 edx, WORD PTR [ecx+192]
  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax
  0006d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00070	66 8b 82 c0 00
	00 00		 mov	 ax, WORD PTR [edx+192]
  00077	66 83 c0 01	 add	 ax, 1
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2270 : 	m_TabCtrl.InsertItem(ITEM_SERVER_OPTION_1,TEXT("基本配置"));

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_08IEBKPAKK@?$LL?y?$LB?$LO?E?d?V?C@
  0008a	6a 00		 push	 0
  0008c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00095	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 2271 : 
; 2272 : 	//房间选项
; 2273 : 	m_pOptionItem[m_wItemCount++]=&m_ServerOptionItem2;

  0009a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	05 c0 02 00 00	 add	 eax, 704		; 000002c0H
  000a2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	0f b7 91 c0 00
	00 00		 movzx	 edx, WORD PTR [ecx+192]
  000ac	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax
  000b6	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b9	66 8b 82 c0 00
	00 00		 mov	 ax, WORD PTR [edx+192]
  000c0	66 83 c0 01	 add	 ax, 1
  000c4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2274 : 	m_TabCtrl.InsertItem(ITEM_SERVER_OPTION_2,TEXT("房间选项"));

  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_08ELGJNJNI@?$LH?$LP?$LM?d?Q?$KB?O?n@
  000d3	6a 01		 push	 1
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000de	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 2275 : 
; 2276 : 	//附加权限
; 2277 : 	m_pOptionItem[m_wItemCount++]=&m_ServerOptionItem3;

  000e3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	05 20 04 00 00	 add	 eax, 1056		; 00000420H
  000eb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	0f b7 91 c0 00
	00 00		 movzx	 edx, WORD PTR [ecx+192]
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax
  000ff	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00102	66 8b 82 c0 00
	00 00		 mov	 ax, WORD PTR [edx+192]
  00109	66 83 c0 01	 add	 ax, 1
  0010d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2278 : 	m_TabCtrl.InsertItem(ITEM_SERVER_OPTION_3,TEXT("分组选项"));

  00117	68 00 00 00 00	 push	 OFFSET ??_C@_08LBOCGJIJ@?$LH?V?W?i?Q?$KB?O?n@
  0011c	6a 02		 push	 2
  0011e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00127	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 2279 : 
; 2280 : 	//私人房配置
; 2281 : 	if(m_ServerOptionItem1.m_bIsHasPersonalRoom)

  0012c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	0f b6 88 1c 02
	00 00		 movzx	 ecx, BYTE PTR [eax+540]
  00136	85 c9		 test	 ecx, ecx
  00138	74 6d		 je	 SHORT $LN2@OnInitDial

; 2282 : 	{
; 2283 : 		m_pOptionItem[m_wItemCount++]=&m_ServerOptionItem5;

  0013a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	05 e8 06 00 00	 add	 eax, 1768		; 000006e8H
  00142	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00145	0f b7 91 c0 00
	00 00		 movzx	 edx, WORD PTR [ecx+192]
  0014c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014f	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax
  00156	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00159	66 8b 82 c0 00
	00 00		 mov	 ax, WORD PTR [edx+192]
  00160	66 83 c0 01	 add	 ax, 1
  00164	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2284 : 		CDlgServerOptionItem5 temp;

  0016e	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR _temp$2[ebp]
  00174	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem5@@QAE@XZ ; CDlgServerOptionItem5::CDlgServerOptionItem5
  00179	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2285 : 		m_TabCtrl.InsertItem(ITEM_SERVER_OPTION_5,TEXT("私人房配置"));

  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FGFOLDNK@?K?$LN?H?K?$LH?$LP?E?d?V?C@
  00185	6a 03		 push	 3
  00187	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0018a	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00190	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 2286 : 	}

  00195	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0019c	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR _temp$2[ebp]
  001a2	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
$LN2@OnInitDial:

; 2287 : 
; 2288 : 	//服务定制
; 2289 : 	if (m_pDlgServerWizard->m_pIGameServiceCustomRule!=NULL)

  001a7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001aa	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  001b0	83 b9 04 1c 00
	00 00		 cmp	 DWORD PTR [ecx+7172], 0
  001b7	74 49		 je	 SHORT $LN3@OnInitDial

; 2290 : 	{
; 2291 : 		m_pOptionItem[m_wItemCount++]=&m_ServerOptionItemCustom;

  001b9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001bc	05 80 05 00 00	 add	 eax, 1408		; 00000580H
  001c1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001c4	0f b7 91 c0 00
	00 00		 movzx	 edx, WORD PTR [ecx+192]
  001cb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ce	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax
  001d5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001d8	66 8b 82 c0 00
	00 00		 mov	 ax, WORD PTR [edx+192]
  001df	66 83 c0 01	 add	 ax, 1
  001e3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2292 : 		m_TabCtrl.InsertItem(ITEM_SERVER_OPTION_CUSTOM,TEXT("服务定制"));

  001ed	68 00 00 00 00	 push	 OFFSET ??_C@_08JOACJLAD@?$LH?$PO?N?q?$LG?$KI?V?F@
  001f2	6a 04		 push	 4
  001f4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001f7	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  001fd	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem
$LN3@OnInitDial:

; 2293 : 	}
; 2294 : 
; 2295 : 	//约战定制
; 2296 : 	if (m_pDlgServerWizard->m_pIGameServicePersonalRule != NULL)

  00202	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  0020b	83 b9 08 1c 00
	00 00		 cmp	 DWORD PTR [ecx+7176], 0
  00212	74 49		 je	 SHORT $LN4@OnInitDial

; 2297 : 	{
; 2298 : 		m_pOptionItem[m_wItemCount++] = &m_ServerOptionItemPersonal;

  00214	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00217	05 48 08 00 00	 add	 eax, 2120		; 00000848H
  0021c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	0f b7 91 c0 00
	00 00		 movzx	 edx, WORD PTR [ecx+192]
  00226	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00229	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax
  00230	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00233	66 8b 82 c0 00
	00 00		 mov	 ax, WORD PTR [edx+192]
  0023a	66 83 c0 01	 add	 ax, 1
  0023e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00241	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2299 : 		m_TabCtrl.InsertItem(ITEM_SERVER_OPTION_PERONAL, TEXT("约战定制"));

  00248	68 00 00 00 00	 push	 OFFSET ??_C@_08INBHOBNB@?T?$LM?U?$LN?$LG?$KI?V?F@
  0024d	6a 05		 push	 5
  0024f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00252	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00258	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem
$LN4@OnInitDial:

; 2300 : 	}
; 2301 : 
; 2302 : 	//激活子项
; 2303 : 	ActiveOptionItem(0);

  0025d	6a 00		 push	 0
  0025f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00262	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgServerWizardItem2@@QAE_NG@Z ; CDlgServerWizardItem2::ActiveOptionItem

; 2304 : 
; 2305 : 	return TRUE;

  00267	b8 01 00 00 00	 mov	 eax, 1

; 2306 : }

  0026c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0026f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00276	59		 pop	 ecx
  00277	5f		 pop	 edi
  00278	5e		 pop	 esi
  00279	5b		 pop	 ebx
  0027a	8b e5		 mov	 esp, ebp
  0027c	5d		 pop	 ebp
  0027d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ$0:
  00000	8d 8d 90 fe ff
	ff		 lea	 ecx, DWORD PTR _temp$2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
__ehhandler$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 4c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-436]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnInitDialog@CDlgServerWizardItem2@@MAEHXZ ENDP	; CDlgServerWizardItem2::OnInitDialog
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?DoDataExchange@CDlgServerWizardItem2@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CDlgServerWizardItem2@@MAEXPAVCDataExchange@@@Z PROC ; CDlgServerWizardItem2::DoDataExchange, COMDAT
; _this$ = ecx

; 2254 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2255 : 	__super::DoDataExchange(pDX);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pDX$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 2256 : 	DDX_Control(pDX, IDC_TAB_CTRL, m_TabCtrl);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	05 e0 00 00 00	 add	 eax, 224		; 000000e0H
  00020	50		 push	 eax
  00021	68 37 23 00 00	 push	 9015			; 00002337H
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pDX$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 2257 : }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?DoDataExchange@CDlgServerWizardItem2@@MAEXPAVCDataExchange@@@Z ENDP ; CDlgServerWizardItem2::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerWizardItem2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerWizardItem2@@UAE@XZ PROC			; CDlgServerWizardItem2::~CDlgServerWizardItem2, COMDAT
; _this$ = ecx

; 2249 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizardItem2@@6B@

; 2250 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 48 08 00
	00		 add	 ecx, 2120		; 00000848H
  0001e	e8 00 00 00 00	 call	 ??1CDlgServerOptionItemPersonal@@UAE@XZ ; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 e8 06 00
	00		 add	 ecx, 1768		; 000006e8H
  0002c	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 80 05 00
	00		 add	 ecx, 1408		; 00000580H
  0003a	e8 00 00 00 00	 call	 ??1CDlgServerOptionItemCustom@@UAE@XZ ; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  00048	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem3@@UAE@XZ ; CDlgServerOptionItem3::~CDlgServerOptionItem3
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	81 c1 c0 02 00
	00		 add	 ecx, 704		; 000002c0H
  00056	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem2@@UAE@XZ ; CDlgServerOptionItem2::~CDlgServerOptionItem2
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	81 c1 60 01 00
	00		 add	 ecx, 352		; 00000160H
  00064	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem1@@UAE@XZ ; CDlgServerOptionItem1::~CDlgServerOptionItem1
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00072	e8 00 00 00 00	 call	 ??1CTabCtrl@@UAE@XZ	; CTabCtrl::~CTabCtrl
  00077	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
??1CDlgServerWizardItem2@@UAE@XZ ENDP			; CDlgServerWizardItem2::~CDlgServerWizardItem2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerWizardItem2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgServerWizardItem2@@QAE@XZ PROC			; CDlgServerWizardItem2::CDlgServerWizardItem2, COMDAT
; _this$ = ecx

; 2238 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgServerWizardItem2@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2237 : CDlgServerWizardItem2::CDlgServerWizardItem2() : CDlgServerWizardItem(IDD_SERVER_WIZARD_2)

  0002b	68 2a 23 00 00	 push	 9002			; 0000232aH
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CDlgServerWizardItem@@IAE@I@Z ; CDlgServerWizardItem::CDlgServerWizardItem
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2238 : {

  0003f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizardItem2@@6B@
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00051	e8 00 00 00 00	 call	 ??0CTabCtrl@@QAE@XZ	; CTabCtrl::CTabCtrl
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 60 01 00
	00		 add	 ecx, 352		; 00000160H
  00063	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem1@@QAE@XZ ; CDlgServerOptionItem1::CDlgServerOptionItem1
  00068	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 c0 02 00
	00		 add	 ecx, 704		; 000002c0H
  00075	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem2@@QAE@XZ ; CDlgServerOptionItem2::CDlgServerOptionItem2
  0007a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  00087	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem3@@QAE@XZ ; CDlgServerOptionItem3::CDlgServerOptionItem3
  0008c	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00090	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	81 c1 80 05 00
	00		 add	 ecx, 1408		; 00000580H
  00099	e8 00 00 00 00	 call	 ??0CDlgServerOptionItemCustom@@QAE@XZ ; CDlgServerOptionItemCustom::CDlgServerOptionItemCustom
  0009e	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000a2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	81 c1 e8 06 00
	00		 add	 ecx, 1768		; 000006e8H
  000ab	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem5@@QAE@XZ ; CDlgServerOptionItem5::CDlgServerOptionItem5
  000b0	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000b4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	81 c1 48 08 00
	00		 add	 ecx, 2120		; 00000848H
  000bd	e8 00 00 00 00	 call	 ??0CDlgServerOptionItemPersonal@@QAE@XZ ; CDlgServerOptionItemPersonal::CDlgServerOptionItemPersonal

; 2239 : 	//设置变量
; 2240 : 	m_wItemCount=0;

  000c2	33 c0		 xor	 eax, eax
  000c4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	66 89 81 c0 00
	00 00		 mov	 WORD PTR [ecx+192], ax

; 2241 : 	m_wActiveIndex=INVALID_WORD;

  000ce	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  000d3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	66 89 81 c2 00
	00 00		 mov	 WORD PTR [ecx+194], ax

; 2242 : 	ZeroMemory(m_pOptionItem,sizeof(m_pOptionItem));

  000dd	6a 18		 push	 24			; 00000018H
  000df	6a 00		 push	 0
  000e1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 _memset
  000ef	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2243 : 
; 2244 : 	return;
; 2245 : }

  000f2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00106	59		 pop	 ecx
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00011	e9 00 00 00 00	 jmp	 ??1CTabCtrl@@UAE@XZ	; CTabCtrl::~CTabCtrl
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 60 01 00
	00		 add	 ecx, 352		; 00000160H
  0001f	e9 00 00 00 00	 jmp	 ??1CDlgServerOptionItem1@@UAE@XZ ; CDlgServerOptionItem1::~CDlgServerOptionItem1
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 c0 02 00
	00		 add	 ecx, 704		; 000002c0H
  0002d	e9 00 00 00 00	 jmp	 ??1CDlgServerOptionItem2@@UAE@XZ ; CDlgServerOptionItem2::~CDlgServerOptionItem2
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$4:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 20 04 00
	00		 add	 ecx, 1056		; 00000420H
  0003b	e9 00 00 00 00	 jmp	 ??1CDlgServerOptionItem3@@UAE@XZ ; CDlgServerOptionItem3::~CDlgServerOptionItem3
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$5:
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 80 05 00
	00		 add	 ecx, 1408		; 00000580H
  00049	e9 00 00 00 00	 jmp	 ??1CDlgServerOptionItemCustom@@UAE@XZ ; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
__unwindfunclet$??0CDlgServerWizardItem2@@QAE@XZ$6:
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	81 c1 e8 06 00
	00		 add	 ecx, 1768		; 000006e8H
  00057	e9 00 00 00 00	 jmp	 ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
__ehhandler$??0CDlgServerWizardItem2@@QAE@XZ:
  0005c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00060	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00063	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00066	33 c8		 xor	 ecx, eax
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgServerWizardItem2@@QAE@XZ
  00072	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgServerWizardItem2@@QAE@XZ ENDP			; CDlgServerWizardItem2::CDlgServerWizardItem2
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerWizardItem1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerWizardItem1@@UAEPAXI@Z PROC		; CDlgServerWizardItem1::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerWizardItem1@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerWizardItem1@@UAE@XZ ; CDlgServerWizardItem1::~CDlgServerWizardItem1
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 60 04 00 00	 push	 1120			; 00000460H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 60 04
	00 00		 imul	 ecx, DWORD PTR [eax-4], 1120
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem1@@UAE@XZ ; CDlgServerWizardItem1::~CDlgServerWizardItem1
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 60 04 00 00	 push	 1120			; 00000460H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerWizardItem1@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerWizardItem1@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerWizardItem1@@UAEPAXI@Z ENDP		; CDlgServerWizardItem1::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerWizardItem1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerWizardItem1@@UAEPAXI@Z PROC		; CDlgServerWizardItem1::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem1@@UAE@XZ ; CDlgServerWizardItem1::~CDlgServerWizardItem1
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 60 04 00 00	 push	 1120			; 00000460H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerWizardItem1@@UAEPAXI@Z ENDP		; CDlgServerWizardItem1::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerWizardItem1@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerWizardItem1@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizardItem1::GetMessageMap, COMDAT
; _this$ = ecx

; 55   : BEGIN_MESSAGE_MAP(CDlgServerWizardItem1, CDlgServerWizardItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem1::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerWizardItem1@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizardItem1::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizardItem1::GetThisMessageMap, COMDAT

; 55   : BEGIN_MESSAGE_MAP(CDlgServerWizardItem1, CDlgServerWizardItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 56   : 	ON_NOTIFY(NM_DBLCLK, IDC_MODULE_LIST, OnNMDblclkModuleList)
; 57   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerWizardItem1@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizardItem1::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnNMDblclkModuleList@CDlgServerWizardItem1@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_pGameModuleInfo$1 = -12				; size = 4
_nListItem$2 = -8					; size = 4
_this$ = -4						; size = 4
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnNMDblclkModuleList@CDlgServerWizardItem1@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CDlgServerWizardItem1::OnNMDblclkModuleList, COMDAT
; _this$ = ecx

; 2214 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2215 : 	//加载配置
; 2216 : 	if (((NMITEMACTIVATE *)pNMHDR)->iItem!=LB_ERR)

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  0000f	83 78 0c ff	 cmp	 DWORD PTR [eax+12], -1
  00013	74 42		 je	 SHORT $LN1@OnNMDblclk

; 2217 : 	{
; 2218 : 		//变量定义
; 2219 : 		INT nListItem=((NMITEMACTIVATE *)pNMHDR)->iItem;

  00015	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  00018	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0001b	89 4d f8	 mov	 DWORD PTR _nListItem$2[ebp], ecx

; 2220 : 		tagGameModuleInfo * pGameModuleInfo=(tagGameModuleInfo *)m_ModuleListControl.GetItemData(nListItem);

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _nListItem$2[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  0002b	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00030	89 45 f4	 mov	 DWORD PTR _pGameModuleInfo$1[ebp], eax

; 2221 : 
; 2222 : 		//投递消息
; 2223 : 		if (pGameModuleInfo->dwNativeVersion!=0L)

  00033	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$1[ebp]
  00036	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0003a	74 1b		 je	 SHORT $LN1@OnNMDblclk

; 2224 : 		{
; 2225 : 			GetParent()->PostMessage(WM_COMMAND,MAKELONG(IDC_NEXT,0),0);

  0003c	6a 00		 push	 0
  0003e	68 2b 04 00 00	 push	 1067			; 0000042bH
  00043	68 11 01 00 00	 push	 273			; 00000111H
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA
$LN1@OnNMDblclk:

; 2226 : 		}
; 2227 : 
; 2228 : 		return;
; 2229 : 	}
; 2230 : 
; 2231 : 	return;
; 2232 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 08 00	 ret	 8
?OnNMDblclkModuleList@CDlgServerWizardItem1@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CDlgServerWizardItem1::OnNMDblclkModuleList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ
_TEXT	SEGMENT
_pGameModuleInfo$1 = -16				; size = 4
_wModuleID$2 = -12					; size = 2
_Position$3 = -8					; size = 4
_this$ = -4						; size = 4
?LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ PROC	; CDlgServerWizardItem1::LoadDBModuleItem, COMDAT
; _this$ = ecx

; 2185 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2186 : 	//加载信息
; 2187 : 	if (m_ModuleInfoManager.LoadGameModuleInfo(m_ModuleInfoBuffer)==true)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 40 01 00 00	 add	 eax, 320		; 00000140H
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 80 02 00
	00		 add	 ecx, 640		; 00000280H
  0001e	e8 00 00 00 00	 call	 ?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z ; CModuleInfoManager::LoadGameModuleInfo
  00023	0f b6 c8	 movzx	 ecx, al
  00026	83 f9 01	 cmp	 ecx, 1
  00029	0f 85 84 00 00
	00		 jne	 $LN4@LoadDBModu

; 2188 : 	{
; 2189 : 		//重置列表
; 2190 : 		m_ModuleListControl.DeleteAllItems();

  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00038	e8 00 00 00 00	 call	 ?DeleteAllItems@CListCtrl@@QAEHXZ ; CListCtrl::DeleteAllItems

; 2191 : 
; 2192 : 		//变量定义
; 2193 : 		POSITION Position=m_ModuleInfoBuffer.m_GameModuleInfoMap.GetStartPosition();

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	81 c1 44 01 00
	00		 add	 ecx, 324		; 00000144H
  00046	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
  0004b	89 45 f8	 mov	 DWORD PTR _Position$3[ebp], eax
$LN2@LoadDBModu:

; 2194 : 
; 2195 : 		//枚举模块
; 2196 : 		while (Position!=NULL)

  0004e	83 7d f8 00	 cmp	 DWORD PTR _Position$3[ebp], 0
  00052	74 5f		 je	 SHORT $LN4@LoadDBModu

; 2197 : 		{
; 2198 : 			//获取对象
; 2199 : 			WORD wModuleID=0L;

  00054	33 c0		 xor	 eax, eax
  00056	66 89 45 f4	 mov	 WORD PTR _wModuleID$2[ebp], ax

; 2200 : 			tagGameModuleInfo * pGameModuleInfo=NULL;

  0005a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$1[ebp], 0

; 2201 : 			m_ModuleInfoBuffer.m_GameModuleInfoMap.GetNextAssoc(Position,wModuleID,pGameModuleInfo);

  00061	8d 45 f0	 lea	 eax, DWORD PTR _pGameModuleInfo$1[ebp]
  00064	50		 push	 eax
  00065	8d 4d f4	 lea	 ecx, DWORD PTR _wModuleID$2[ebp]
  00068	51		 push	 ecx
  00069	8d 55 f8	 lea	 edx, DWORD PTR _Position$3[ebp]
  0006c	52		 push	 edx
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	81 c1 44 01 00
	00		 add	 ecx, 324		; 00000144H
  00076	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc

; 2202 : 
; 2203 : 			//插入列表
; 2204 : 			ASSERT(pGameModuleInfo!=NULL);

  0007b	83 7d f0 00	 cmp	 DWORD PTR _pGameModuleInfo$1[ebp], 0
  0007f	75 18		 jne	 SHORT $LN7@LoadDBModu
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ@4JA
  00086	83 c0 13	 add	 eax, 19			; 00000013H
  00089	50		 push	 eax
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BOABMJKJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00094	85 c0		 test	 eax, eax
  00096	74 01		 je	 SHORT $LN7@LoadDBModu
  00098	cc		 int	 3
$LN7@LoadDBModu:

; 2205 : 			if (pGameModuleInfo!=NULL) m_ModuleListControl.InsertModuleInfo(pGameModuleInfo);

  00099	83 7d f0 00	 cmp	 DWORD PTR _pGameModuleInfo$1[ebp], 0
  0009d	74 12		 je	 SHORT $LN5@LoadDBModu
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _pGameModuleInfo$1[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  000ac	e8 00 00 00 00	 call	 ?InsertModuleInfo@CModuleListControl@@QAE_NPAUtagGameModuleInfo@@@Z ; CModuleListControl::InsertModuleInfo
$LN5@LoadDBModu:

; 2206 : 		}

  000b1	eb 9b		 jmp	 SHORT $LN2@LoadDBModu
$LN4@LoadDBModu:

; 2207 : 	}
; 2208 : 
; 2209 : 	return false;

  000b3	32 c0		 xor	 al, al

; 2210 : }

  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
?LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ ENDP	; CDlgServerWizardItem1::LoadDBModuleItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerWizardItem1@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerWizardItem1@@UAEXHH@Z PROC	; CDlgServerWizardItem1::RectifyControl, COMDAT
; _this$ = ecx

; 2167 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2168 : 	//调整提示
; 2169 : 	if (m_StaticPrompt.m_hWnd!=NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 e0 00 00
	00 00		 cmp	 DWORD PTR [eax+224], 0
  00016	74 22		 je	 SHORT $LN2@RectifyCon

; 2170 : 	{
; 2171 : 		m_StaticPrompt.SetWindowPos(NULL,5,8,nWidth-10,12,SWP_NOZORDER|SWP_NOCOPYBITS);

  00018	68 04 01 00 00	 push	 260			; 00000104H
  0001d	6a 0c		 push	 12			; 0000000cH
  0001f	8b 45 08	 mov	 eax, DWORD PTR _nWidth$[ebp]
  00022	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00025	50		 push	 eax
  00026	6a 08		 push	 8
  00028	6a 05		 push	 5
  0002a	6a 00		 push	 0
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00035	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos
$LN2@RectifyCon:

; 2172 : 	}
; 2173 : 
; 2174 : 	//调整列表
; 2175 : 	if (m_ModuleListControl.m_hWnd!=NULL)

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 b8 98 01 00
	00 00		 cmp	 DWORD PTR [eax+408], 0
  00044	74 27		 je	 SHORT $LN1@RectifyCon

; 2176 : 	{
; 2177 : 		m_ModuleListControl.SetWindowPos(NULL,5,28,nWidth-10,nHeight-28,SWP_NOZORDER|SWP_NOCOPYBITS);

  00046	68 04 01 00 00	 push	 260			; 00000104H
  0004b	8b 45 0c	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0004e	83 e8 1c	 sub	 eax, 28			; 0000001cH
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00055	83 e9 0a	 sub	 ecx, 10			; 0000000aH
  00058	51		 push	 ecx
  00059	6a 1c		 push	 28			; 0000001cH
  0005b	6a 05		 push	 5
  0005d	6a 00		 push	 0
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00068	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos
$LN1@RectifyCon:

; 2178 : 	}
; 2179 : 
; 2180 : 	return;
; 2181 : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
?RectifyControl@CDlgServerWizardItem1@@UAEXHH@Z ENDP	; CDlgServerWizardItem1::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerWizardItem1@@UAE_NXZ
_TEXT	SEGMENT
_szString$1 = -1556					; size = 512
_szString$2 = -1044					; size = 512
_szString$3 = -532					; size = 512
_nListItem$4 = -20					; size = 4
_Position$ = -16					; size = 4
_pGameModuleInfo$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?SaveInputInfo@CDlgServerWizardItem1@@UAE_NXZ PROC	; CDlgServerWizardItem1::SaveInputInfo, COMDAT
; _this$ = ecx

; 2095 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 07 00
	00		 sub	 esp, 1812		; 00000714H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2096 : 	//变量定义
; 2097 : 	tagGameModuleInfo * pGameModuleInfo=NULL;

  00019	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 2098 : 	POSITION Position=m_ModuleListControl.GetFirstSelectedItemPosition();

  00020	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00029	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  0002e	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax

; 2099 : 	
; 2100 : 	//获取选择
; 2101 : 	if (Position!=NULL)

  00031	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00035	74 2a		 je	 SHORT $LN2@SaveInputI

; 2102 : 	{
; 2103 : 		INT nListItem=m_ModuleListControl.GetNextSelectedItem(Position);

  00037	8d 45 f0	 lea	 eax, DWORD PTR _Position$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00044	e8 00 00 00 00	 call	 ?GetNextSelectedItem@CListCtrl@@QBEHAAPAU__POSITION@@@Z ; CListCtrl::GetNextSelectedItem
  00049	89 45 ec	 mov	 DWORD PTR _nListItem$4[ebp], eax

; 2104 : 		pGameModuleInfo=(tagGameModuleInfo *)m_ModuleListControl.GetItemData(nListItem);

  0004c	8b 45 ec	 mov	 eax, DWORD PTR _nListItem$4[ebp]
  0004f	50		 push	 eax
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00059	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  0005e	89 45 f4	 mov	 DWORD PTR _pGameModuleInfo$[ebp], eax
$LN2@SaveInputI:

; 2105 : 	}
; 2106 : 
; 2107 : 	//选择判断
; 2108 : 	if (pGameModuleInfo==NULL)

  00061	83 7d f4 00	 cmp	 DWORD PTR _pGameModuleInfo$[ebp], 0
  00065	75 15		 jne	 SHORT $LN3@SaveInputI

; 2109 : 	{
; 2110 : 		AfxMessageBox(TEXT("请您先从游戏列表中选择游戏组件"),MB_ICONERROR);

  00067	6a 00		 push	 0
  00069	6a 10		 push	 16			; 00000010H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@PJKCGFJH@?G?k?D?z?O?H?$LE?S?S?N?O?$LH?A?P?$LB?m?V?P?Q?$KB?T?q?S?N?O?$LH?W?i?$LM?$PO@
  00070	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 2111 : 		return false;

  00075	32 c0		 xor	 al, al
  00077	e9 cf 01 00 00	 jmp	 $LN1@SaveInputI
$LN3@SaveInputI:

; 2112 : 	}
; 2113 : 
; 2114 : 	//游戏模块
; 2115 : 	m_GameServiceManager.CloseInstance();

  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  00085	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance

; 2116 : 	m_GameServiceManager.SetModuleCreateInfo(pGameModuleInfo->szServerDLLName,GAME_SERVICE_CREATE_NAME);

  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@
  0008f	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00092	83 c0 5d	 add	 eax, 93			; 0000005dH
  00095	50		 push	 eax
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  0009f	e8 00 00 00 00	 call	 ?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo

; 2117 : 
; 2118 : 	//创建判断
; 2119 : 	if (pGameModuleInfo->dwNativeVersion==0L)

  000a4	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  000a7	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000ab	75 58		 jne	 SHORT $LN4@SaveInputI

; 2120 : 	{
; 2121 : 		//构造提示
; 2122 : 		TCHAR szString[512]=TEXT("");

  000ad	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  000b2	88 85 ec fd ff
	ff		 mov	 BYTE PTR _szString$3[ebp], al
  000b8	68 ff 01 00 00	 push	 511			; 000001ffH
  000bd	6a 00		 push	 0
  000bf	8d 85 ed fd ff
	ff		 lea	 eax, DWORD PTR _szString$3[ebp+1]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 _memset
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2123 : 		_sntprintf_s(szString,CountArray(szString),TEXT("[ %s ] 服务组件还没有安装，请先安装服务组件"),pGameModuleInfo->szGameName);

  000ce	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  000d1	83 c0 3d	 add	 eax, 61			; 0000003dH
  000d4	50		 push	 eax
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@PKPMOEPA@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LL?$LJ?C?$LL?S?P?$LA?$LC?W?$LA?$KD?$KM?G?k?O?H@
  000da	68 00 02 00 00	 push	 512			; 00000200H
  000df	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _szString$3[ebp]
  000e5	51		 push	 ecx
  000e6	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  000eb	83 c4 10	 add	 esp, 16			; 00000010H

; 2124 : 
; 2125 : 		//提示消息
; 2126 : 		AfxMessageBox(szString,MB_ICONERROR);

  000ee	6a 00		 push	 0
  000f0	6a 10		 push	 16			; 00000010H
  000f2	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szString$3[ebp]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 2127 : 
; 2128 : 		return false;

  000fe	32 c0		 xor	 al, al
  00100	e9 46 01 00 00	 jmp	 $LN1@SaveInputI
$LN4@SaveInputI:

; 2129 : 	}
; 2130 : 
; 2131 : 	//更新判断
; 2132 : 	if (pGameModuleInfo->dwNativeVersion!=pGameModuleInfo->dwServerVersion)

  00105	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00108	8b 4d f4	 mov	 ecx, DWORD PTR _pGameModuleInfo$[ebp]
  0010b	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0010e	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00111	74 60		 je	 SHORT $LN5@SaveInputI

; 2133 : 	{
; 2134 : 		//构造提示
; 2135 : 		TCHAR szString[512]=TEXT("");

  00113	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00118	88 85 ec fb ff
	ff		 mov	 BYTE PTR _szString$2[ebp], al
  0011e	68 ff 01 00 00	 push	 511			; 000001ffH
  00123	6a 00		 push	 0
  00125	8d 85 ed fb ff
	ff		 lea	 eax, DWORD PTR _szString$2[ebp+1]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 _memset
  00131	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2136 : 		_sntprintf_s(szString,CountArray(szString),TEXT("[ %s ] 服务组件更新了，是否还继续创建房间吗？"),pGameModuleInfo->szGameName);

  00134	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00137	83 c0 3d	 add	 eax, 61			; 0000003dH
  0013a	50		 push	 eax
  0013b	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@FMLCDPAO@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LI?$PM?P?B?A?K?$KD?$KM?J?G?$LH?q?$LL?$LJ?$LM?L@
  00140	68 00 02 00 00	 push	 512			; 00000200H
  00145	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _szString$2[ebp]
  0014b	51		 push	 ecx
  0014c	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  00151	83 c4 10	 add	 esp, 16			; 00000010H

; 2137 : 
; 2138 : 		//提示消息
; 2139 : 		if (AfxMessageBox(szString,MB_ICONWARNING|MB_YESNO|MB_DEFBUTTON2)!=IDYES) return false;

  00154	6a 00		 push	 0
  00156	68 34 01 00 00	 push	 308			; 00000134H
  0015b	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _szString$2[ebp]
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox
  00167	83 f8 06	 cmp	 eax, 6
  0016a	74 07		 je	 SHORT $LN5@SaveInputI
  0016c	32 c0		 xor	 al, al
  0016e	e9 d8 00 00 00	 jmp	 $LN1@SaveInputI
$LN5@SaveInputI:

; 2140 : 	}
; 2141 : 
; 2142 : 	//加载模块
; 2143 : 	if (m_GameServiceManager.CreateInstance()==false)

  00173	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00176	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  0017c	e8 00 00 00 00	 call	 ?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CreateInstance
  00181	0f b6 c0	 movzx	 eax, al
  00184	85 c0		 test	 eax, eax
  00186	75 64		 jne	 SHORT $LN7@SaveInputI

; 2144 : 	{
; 2145 : 		//构造提示
; 2146 : 		TCHAR szString[512]=TEXT("");

  00188	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0018d	88 85 ec f9 ff
	ff		 mov	 BYTE PTR _szString$1[ebp], al
  00193	68 ff 01 00 00	 push	 511			; 000001ffH
  00198	6a 00		 push	 0
  0019a	8d 85 ed f9 ff
	ff		 lea	 eax, DWORD PTR _szString$1[ebp+1]
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 _memset
  001a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2147 : 		_sntprintf_s(szString, CountArray(szString), TEXT("[ %s ] 服务组件加载失败，创建游戏房间失败【%s】"), pGameModuleInfo->szGameName, m_GameServiceManager.GetErrorDescribe());

  001a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  001b2	e8 00 00 00 00	 call	 ?GetErrorDescribe@?$CTempldateHelper@UIGameServiceManager@@@@QBEPBDXZ ; CTempldateHelper<IGameServiceManager>::GetErrorDescribe
  001b7	50		 push	 eax
  001b8	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  001bb	83 c0 3d	 add	 eax, 61			; 0000003dH
  001be	50		 push	 eax
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@PHBCCHJI@?$FL?5?$CFs?5?$FN?5?$LH?$PO?N?q?W?i?$LM?$PO?$LM?S?T?X?J?$KH?$LA?$NM?$KD?$KM?$LE?$LE?$LN?$KI?S?N@
  001c4	68 00 02 00 00	 push	 512			; 00000200H
  001c9	8d 8d ec f9 ff
	ff		 lea	 ecx, DWORD PTR _szString$1[ebp]
  001cf	51		 push	 ecx
  001d0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0CAA@@@YAHAAY0CAA@DIPBDZZ ; _snprintf_s<512>
  001d5	83 c4 14	 add	 esp, 20			; 00000014H

; 2148 : 
; 2149 : 		//提示消息
; 2150 : 		AfxMessageBox(szString,MB_ICONERROR);

  001d8	6a 00		 push	 0
  001da	6a 10		 push	 16			; 00000010H
  001dc	8d 85 ec f9 ff
	ff		 lea	 eax, DWORD PTR _szString$1[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 2151 : 
; 2152 : 		return false;

  001e8	32 c0		 xor	 al, al
  001ea	eb 5f		 jmp	 SHORT $LN1@SaveInputI
$LN7@SaveInputI:

; 2153 : 	}
; 2154 : 
; 2155 : 	//配置模块
; 2156 : 	m_pDlgServerWizard->SetWizardParameter(m_GameServiceManager.GetInterface(),NULL);

  001ec	6a 00		 push	 0
  001ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  001f7	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ; CTempldateHelper<IGameServiceManager>::GetInterface
  001fc	50		 push	 eax
  001fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00200	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  00206	e8 00 00 00 00	 call	 ?SetWizardParameter@CDlgServerWizard@@QAEXPAUIGameServiceManager@@PAUtagGameServiceOption@@@Z ; CDlgServerWizard::SetWizardParameter

; 2157 : 
; 2158 : 	//默认设置
; 2159 : 	lstrcpyn(m_pGameServiceOption->szDataBaseName,pGameModuleInfo->szDataBaseName,CountArray(m_pGameServiceOption->szDataBaseName));

  0020b	6a 20		 push	 32			; 00000020H
  0020d	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00210	83 c0 1d	 add	 eax, 29			; 0000001dH
  00213	50		 push	 eax
  00214	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00217	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0021d	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  00223	52		 push	 edx
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2160 : 	lstrcpyn(m_pGameServiceOption->szDataBaseAddr,pGameModuleInfo->szDataBaseAddr,CountArray(m_pGameServiceOption->szDataBaseAddr));

  0022a	6a 10		 push	 16			; 00000010H
  0022c	8b 45 f4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  0022f	83 c0 0e	 add	 eax, 14			; 0000000eH
  00232	50		 push	 eax
  00233	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00236	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0023c	81 c2 9c 00 00
	00		 add	 edx, 156		; 0000009cH
  00242	52		 push	 edx
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2161 : 
; 2162 : 	return true;

  00249	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 2163 : }

  0024b	5f		 pop	 edi
  0024c	5e		 pop	 esi
  0024d	5b		 pop	 ebx
  0024e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00251	33 cd		 xor	 ecx, ebp
  00253	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00258	8b e5		 mov	 esp, ebp
  0025a	5d		 pop	 ebp
  0025b	c3		 ret	 0
?SaveInputInfo@CDlgServerWizardItem1@@UAE_NXZ ENDP	; CDlgServerWizardItem1::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerWizardItem1@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@CDlgServerWizardItem1@@MAEHXZ PROC	; CDlgServerWizardItem1::OnInitDialog, COMDAT
; _this$ = ecx

; 2084 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2085 : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 2086 : 
; 2087 : 	//加载列表
; 2088 : 	LoadDBModuleItem();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?LoadDBModuleItem@CDlgServerWizardItem1@@IAE_NXZ ; CDlgServerWizardItem1::LoadDBModuleItem

; 2089 : 
; 2090 : 	return TRUE;

  0001c	b8 01 00 00 00	 mov	 eax, 1

; 2091 : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?OnInitDialog@CDlgServerWizardItem1@@MAEHXZ ENDP	; CDlgServerWizardItem1::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?DoDataExchange@CDlgServerWizardItem1@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CDlgServerWizardItem1@@MAEXPAVCDataExchange@@@Z PROC ; CDlgServerWizardItem1::DoDataExchange, COMDAT
; _this$ = ecx

; 2076 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2077 : 	__super::DoDataExchange(pDX);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pDX$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 2078 : 	DDX_Control(pDX, IDC_PROMPT, m_StaticPrompt);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  00020	50		 push	 eax
  00021	68 28 23 00 00	 push	 9000			; 00002328H
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pDX$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 2079 : 	DDX_Control(pDX, IDC_MODULE_LIST, m_ModuleListControl);

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	05 78 01 00 00	 add	 eax, 376		; 00000178H
  00037	50		 push	 eax
  00038	68 ea 03 00 00	 push	 1002			; 000003eaH
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _pDX$[ebp]
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 2080 : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?DoDataExchange@CDlgServerWizardItem1@@MAEXPAVCDataExchange@@@Z ENDP ; CDlgServerWizardItem1::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerWizardItem1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerWizardItem1@@UAE@XZ PROC			; CDlgServerWizardItem1::~CDlgServerWizardItem1, COMDAT
; _this$ = ecx

; 2071 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizardItem1@@6B@

; 2072 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  0001e	e8 00 00 00 00	 call	 ??1CGameServiceManagerHelper@@UAE@XZ
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 80 02 00
	00		 add	 ecx, 640		; 00000280H
  0002c	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  0003a	e8 00 00 00 00	 call	 ??1CModuleListControl@@UAE@XZ ; CModuleListControl::~CModuleListControl
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00048	e8 00 00 00 00	 call	 ??1CModuleInfoBuffer@@UAE@XZ ; CModuleInfoBuffer::~CModuleInfoBuffer
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00056	e8 00 00 00 00	 call	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??1CDlgServerWizardItem1@@UAE@XZ ENDP			; CDlgServerWizardItem1::~CDlgServerWizardItem1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerWizardItem1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgServerWizardItem1@@QAE@XZ PROC			; CDlgServerWizardItem1::CDlgServerWizardItem1, COMDAT
; _this$ = ecx

; 2066 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgServerWizardItem1@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2065 : CDlgServerWizardItem1::CDlgServerWizardItem1() : CDlgServerWizardItem(IDD_SERVER_WIZARD_1)

  0002b	68 96 00 00 00	 push	 150			; 00000096H
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CDlgServerWizardItem@@IAE@I@Z ; CDlgServerWizardItem::CDlgServerWizardItem
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2066 : {

  0003f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizardItem1@@6B@
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00051	e8 00 00 00 00	 call	 ??0CStatic@@QAE@XZ	; CStatic::CStatic
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00063	e8 00 00 00 00	 call	 ??0CModuleInfoBuffer@@QAE@XZ ; CModuleInfoBuffer::CModuleInfoBuffer
  00068	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  00075	e8 00 00 00 00	 call	 ??0CModuleListControl@@QAE@XZ ; CModuleListControl::CModuleListControl
  0007a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 80 02 00
	00		 add	 ecx, 640		; 00000280H
  00087	e8 00 00 00 00	 call	 ??0CModuleInfoManager@@QAE@XZ ; CModuleInfoManager::CModuleInfoManager
  0008c	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00090	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	81 c1 84 02 00
	00		 add	 ecx, 644		; 00000284H
  00099	e8 00 00 00 00	 call	 ??0CGameServiceManagerHelper@@QAE@XZ ; CGameServiceManagerHelper::CGameServiceManagerHelper

; 2067 : }

  0009e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b2	59		 pop	 ecx
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00011	e9 00 00 00 00	 jmp	 ??1CStatic@@UAE@XZ	; CStatic::~CStatic
__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  0001f	e9 00 00 00 00	 jmp	 ??1CModuleInfoBuffer@@UAE@XZ ; CModuleInfoBuffer::~CModuleInfoBuffer
__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 78 01 00
	00		 add	 ecx, 376		; 00000178H
  0002d	e9 00 00 00 00	 jmp	 ??1CModuleListControl@@UAE@XZ ; CModuleListControl::~CModuleListControl
__unwindfunclet$??0CDlgServerWizardItem1@@QAE@XZ$4:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 80 02 00
	00		 add	 ecx, 640		; 00000280H
  0003b	e9 00 00 00 00	 jmp	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
__ehhandler$??0CDlgServerWizardItem1@@QAE@XZ:
  00040	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00044	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00047	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgServerWizardItem1@@QAE@XZ
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgServerWizardItem1@@QAE@XZ ENDP			; CDlgServerWizardItem1::CDlgServerWizardItem1
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerWizardItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerWizardItem@@MAEPAXI@Z PROC		; CDlgServerWizardItem::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerWizardItem@@MAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 c0 00 00 00	 push	 192			; 000000c0H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc c0 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 192
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 c0 00 00 00	 push	 192			; 000000c0H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerWizardItem@@MAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerWizardItem@@MAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerWizardItem@@MAEPAXI@Z ENDP		; CDlgServerWizardItem::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerWizardItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerWizardItem@@MAEPAXI@Z PROC		; CDlgServerWizardItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerWizardItem@@MAE@XZ ; CDlgServerWizardItem::~CDlgServerWizardItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 c0 00 00 00	 push	 192			; 000000c0H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerWizardItem@@MAEPAXI@Z ENDP		; CDlgServerWizardItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerWizardItem@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerWizardItem@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizardItem::GetMessageMap, COMDAT
; _this$ = ecx

; 24   : BEGIN_MESSAGE_MAP(CDlgServerWizardItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerWizardItem::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerWizardItem@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizardItem::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerWizardItem::GetThisMessageMap, COMDAT

; 24   : BEGIN_MESSAGE_MAP(CDlgServerWizardItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 25   : 	ON_WM_SIZE()
; 26   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerWizardItem@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerWizardItem::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSize@CDlgServerWizardItem@@AAEXIHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CDlgServerWizardItem@@AAEXIHH@Z PROC		; CDlgServerWizardItem::OnSize, COMDAT
; _this$ = ecx

; 2053 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2054 : 	__super::OnSize(nType, cx, cy);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 08	 mov	 edx, DWORD PTR _nType$[ebp]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?OnSize@CWnd@@IAEXIHH@Z	; CWnd::OnSize

; 2055 : 
; 2056 : 	//调整控件
; 2057 : 	RectifyControl(cx,cy);

  00020	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 90 98 01 00
	00		 mov	 edx, DWORD PTR [eax+408]
  00036	ff d2		 call	 edx

; 2058 : 
; 2059 : 	return;
; 2060 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 0c 00	 ret	 12			; 0000000cH
?OnSize@CDlgServerWizardItem@@AAEXIHH@Z ENDP		; CDlgServerWizardItem::OnSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?ShowWizardItem@CDlgServerWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rcRect$ = 8						; size = 4
_pParentWnd$ = 12					; size = 4
?ShowWizardItem@CDlgServerWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z PROC ; CDlgServerWizardItem::ShowWizardItem, COMDAT
; _this$ = ecx

; 2012 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2013 : 	//创建窗口
; 2014 : 	if (m_hWnd==NULL) 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	75 68		 jne	 SHORT $LN2@ShowWizard

; 2015 : 	{
; 2016 : 		//设置资源
; 2017 : 		AfxSetResourceHandle(GetModuleHandle(MODULE_MANAGER_DLL_NAME));

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 2018 : 
; 2019 : 		//创建窗口
; 2020 : 		Create(m_lpszTemplateName,pParentWnd);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00033	52		 push	 edx
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 10		 mov	 edx, DWORD PTR [eax]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 82 70 01 00
	00		 mov	 eax, DWORD PTR [edx+368]
  00042	ff d0		 call	 eax

; 2021 : 		SetWindowPos(NULL,rcRect.left,rcRect.top,rcRect.Width(),rcRect.Height(),SWP_NOZORDER|SWP_NOACTIVATE);

  00044	6a 14		 push	 20			; 00000014H
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00049	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00052	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00057	50		 push	 eax
  00058	8b 45 08	 mov	 eax, DWORD PTR _rcRect$[ebp]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	51		 push	 ecx
  0005f	8b 55 08	 mov	 edx, DWORD PTR _rcRect$[ebp]
  00062	8b 02		 mov	 eax, DWORD PTR [edx]
  00064	50		 push	 eax
  00065	6a 00		 push	 0
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 2022 : 
; 2023 : 		//设置资源
; 2024 : 		AfxSetResourceHandle(GetModuleHandle(NULL));

  0006f	6a 00		 push	 0
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle
$LN2@ShowWizard:

; 2025 : 	}
; 2026 : 
; 2027 : 	//显示窗口
; 2028 : 	ShowWindow(SW_SHOW);

  0007d	6a 05		 push	 5
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 2029 : 
; 2030 : 	return true;

  00087	b0 01		 mov	 al, 1

; 2031 : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 08 00	 ret	 8
?ShowWizardItem@CDlgServerWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z ENDP ; CDlgServerWizardItem::ShowWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveItemData@CDlgServerWizardItem@@AAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveItemData@CDlgServerWizardItem@@AAE_NXZ PROC	; CDlgServerWizardItem::SaveItemData, COMDAT
; _this$ = ecx

; 2000 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2001 : 	//保存数据
; 2002 : 	if ((m_hWnd!=NULL)&&(SaveInputInfo()==false))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	74 1b		 je	 SHORT $LN2@SaveItemDa
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 82 94 01 00
	00		 mov	 eax, DWORD PTR [edx+404]
  00023	ff d0		 call	 eax
  00025	0f b6 c8	 movzx	 ecx, al
  00028	85 c9		 test	 ecx, ecx
  0002a	75 04		 jne	 SHORT $LN2@SaveItemDa

; 2003 : 	{
; 2004 : 		return false;

  0002c	32 c0		 xor	 al, al
  0002e	eb 02		 jmp	 SHORT $LN1@SaveItemDa
$LN2@SaveItemDa:

; 2005 : 	}
; 2006 : 
; 2007 : 	return true;

  00030	b0 01		 mov	 al, 1
$LN1@SaveItemDa:

; 2008 : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?SaveItemData@CDlgServerWizardItem@@AAE_NXZ ENDP	; CDlgServerWizardItem::SaveItemData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnCancel@CDlgServerWizardItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnCancel@CDlgServerWizardItem@@MAEXXZ PROC		; CDlgServerWizardItem::OnCancel, COMDAT
; _this$ = ecx

; 2044 : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2045 : 	//投递消息
; 2046 : 	GetParent()->PostMessage(WM_COMMAND,MAKELONG(IDCANCEL,0),0);

  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	68 11 01 00 00	 push	 273			; 00000111H
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 2047 : 
; 2048 : 	return;
; 2049 : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?OnCancel@CDlgServerWizardItem@@MAEXXZ ENDP		; CDlgServerWizardItem::OnCancel
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnOK@CDlgServerWizardItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgServerWizardItem@@MAEXXZ PROC			; CDlgServerWizardItem::OnOK, COMDAT
; _this$ = ecx

; 2035 : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2036 : 	//投递消息
; 2037 : 	GetParent()->PostMessage(WM_COMMAND,MAKELONG(IDOK,0),0);

  0000c	6a 00		 push	 0
  0000e	6a 01		 push	 1
  00010	68 11 01 00 00	 push	 273			; 00000111H
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 2038 : 
; 2039 : 	return;
; 2040 : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?OnOK@CDlgServerWizardItem@@MAEXXZ ENDP			; CDlgServerWizardItem::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerWizardItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerWizardItem@@MAE@XZ PROC			; CDlgServerWizardItem::~CDlgServerWizardItem, COMDAT
; _this$ = ecx

; 1995 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizardItem@@6B@

; 1996 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerWizardItem@@MAE@XZ ENDP			; CDlgServerWizardItem::~CDlgServerWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerWizardItem@@IAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIDTemplate$ = 8					; size = 4
??0CDlgServerWizardItem@@IAE@I@Z PROC			; CDlgServerWizardItem::CDlgServerWizardItem, COMDAT
; _this$ = ecx

; 1983 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1982 : CDlgServerWizardItem::CDlgServerWizardItem(UINT nIDTemplate) : CDialog(nIDTemplate)

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nIDTemplate$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog

; 1983 : {

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerWizardItem@@6B@

; 1984 : 	//设置变量
; 1985 : 	m_pDlgServerWizard=NULL;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0

; 1986 : 	m_pGameServiceAttrib=NULL;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 1987 : 	m_pGameServiceOption=NULL;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+176], 0

; 1988 : 	m_pPersonalRoomOption = NULL;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	c7 80 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+180], 0

; 1989 : 	m_pCreateRoomRightAndFee = NULL;//权限与费用配置

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	c7 80 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+184], 0

; 1990 : 	return;
; 1991 : }

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
??0CDlgServerWizardItem@@IAE@I@Z ENDP			; CDlgServerWizardItem::CDlgServerWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z PROC	; CDlgServerOptionItemPersonal::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItemPersonal@@UAE@XZ ; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 68 01 00 00	 push	 360			; 00000168H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 68 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 360
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItemPersonal@@UAE@XZ ; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 68 01 00 00	 push	 360			; 00000168H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItemPersonal@@UAEPAXI@Z ENDP	; CDlgServerOptionItemPersonal::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItemPersonal@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItemPersonal@@UAEPAXI@Z PROC	; CDlgServerOptionItemPersonal::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItemPersonal@@UAE@XZ ; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 68 01 00 00	 push	 360			; 00000168H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItemPersonal@@UAEPAXI@Z ENDP	; CDlgServerOptionItemPersonal::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItemPersonal@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItemPersonal@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItemPersonal::GetMessageMap, COMDAT
; _this$ = ecx

; 49   : BEGIN_MESSAGE_MAP(CDlgServerOptionItemPersonal, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItemPersonal::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItemPersonal@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItemPersonal::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItemPersonal::GetThisMessageMap, COMDAT

; 49   : BEGIN_MESSAGE_MAP(CDlgServerOptionItemPersonal, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 50   : 	ON_WM_SETFOCUS()
; 51   : 	ON_WM_NCDESTROY()
; 52   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItemPersonal@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItemPersonal::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSetFocus@CDlgServerOptionItemPersonal@@AAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pNewWnd$ = 8						; size = 4
?OnSetFocus@CDlgServerOptionItemPersonal@@AAEXPAVCWnd@@@Z PROC ; CDlgServerOptionItemPersonal::OnSetFocus, COMDAT
; _this$ = ecx

; 1968 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1969 : 	__super::OnSetFocus(pNewWnd);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNewWnd$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?OnSetFocus@CWnd@@IAEXPAV1@@Z ; CWnd::OnSetFocus

; 1970 : 
; 1971 : 	//设置焦点
; 1972 : 	if (m_hPersonalRule != NULL)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00022	74 10		 je	 SHORT $LN1@OnSetFocus

; 1973 : 	{
; 1974 : 		::SetFocus(m_hPersonalRule);

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 88 60 01 00
	00		 mov	 ecx, DWORD PTR [eax+352]
  0002d	51		 push	 ecx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4
$LN1@OnSetFocus:

; 1975 : 	}
; 1976 : 
; 1977 : 	return;
; 1978 : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?OnSetFocus@CDlgServerOptionItemPersonal@@AAEXPAVCWnd@@@Z ENDP ; CDlgServerOptionItemPersonal::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnNcDestroy@CDlgServerOptionItemPersonal@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnNcDestroy@CDlgServerOptionItemPersonal@@AAEXXZ PROC	; CDlgServerOptionItemPersonal::OnNcDestroy, COMDAT
; _this$ = ecx

; 1952 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1953 : 	//关闭窗口
; 1954 : 	if (m_hPersonalRule != NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00016	74 10		 je	 SHORT $LN2@OnNcDestro

; 1955 : 	{
; 1956 : 		::DestroyWindow(m_hPersonalRule);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 88 60 01 00
	00		 mov	 ecx, DWORD PTR [eax+352]
  00021	51		 push	 ecx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
$LN2@OnNcDestro:

; 1957 : 	}
; 1958 : 
; 1959 : 	//设置变量
; 1960 : 	m_hPersonalRule = NULL;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 80 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+352], 0

; 1961 : 	m_pIGameServicePersonalRule = NULL;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 80 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+356], 0

; 1962 : 
; 1963 : 	__super::OnNcDestroy();

  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?OnNcDestroy@CWnd@@IAEXXZ ; CWnd::OnNcDestroy

; 1964 : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?OnNcDestroy@CDlgServerOptionItemPersonal@@AAEXXZ ENDP	; CDlgServerOptionItemPersonal::OnNcDestroy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerOptionItemPersonal@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerOptionItemPersonal@@UAEXHH@Z PROC ; CDlgServerOptionItemPersonal::RectifyControl, COMDAT
; _this$ = ecx

; 1940 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1941 : 	//调整位置
; 1942 : 	if (m_hPersonalRule != NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00016	74 20		 je	 SHORT $LN1@RectifyCon

; 1943 : 	{
; 1944 : 		::SetWindowPos(m_hPersonalRule, NULL, 0, 0, nWidth, nHeight, SWP_NOMOVE | SWP_NOZORDER);

  00018	6a 06		 push	 6
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00021	51		 push	 ecx
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 82 60 01 00
	00		 mov	 eax, DWORD PTR [edx+352]
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
$LN1@RectifyCon:

; 1945 : 	}
; 1946 : 
; 1947 : 	return;
; 1948 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?RectifyControl@CDlgServerOptionItemPersonal@@UAEXHH@Z ENDP ; CDlgServerOptionItemPersonal::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerOptionItemPersonal@@UAE_NXZ
_TEXT	SEGMENT
_bSuccess$1 = -9					; size = 1
_wPersonalSize$2 = -8					; size = 2
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerOptionItemPersonal@@UAE_NXZ PROC ; CDlgServerOptionItemPersonal::SaveInputInfo, COMDAT
; _this$ = ecx

; 1924 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1925 : 	//保存输入
; 1926 : 	if (m_hPersonalRule != NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00016	74 3f		 je	 SHORT $LN2@SaveInputI

; 1927 : 	{
; 1928 : 		//保存设置
; 1929 : 		WORD wPersonalSize = sizeof(m_pGameServiceOption->cbPersonalRule);

  00018	b8 00 04 00 00	 mov	 eax, 1024		; 00000400H
  0001d	66 89 45 f8	 mov	 WORD PTR _wPersonalSize$2[ebp], ax

; 1930 : 		bool bSuccess = m_pIGameServicePersonalRule->SavePersonalRule(m_pGameServiceOption->cbPersonalRule, wPersonalSize);

  00021	0f b7 45 f8	 movzx	 eax, WORD PTR _wPersonalSize$2[ebp]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0002f	81 c2 f0 04 00
	00		 add	 edx, 1264		; 000004f0H
  00035	52		 push	 edx
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 88 64 01 00
	00		 mov	 ecx, DWORD PTR [eax+356]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 01		 mov	 eax, DWORD PTR [ecx]
  00044	8b 8a 64 01 00
	00		 mov	 ecx, DWORD PTR [edx+356]
  0004a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0004d	ff d2		 call	 edx
  0004f	88 45 f7	 mov	 BYTE PTR _bSuccess$1[ebp], al

; 1931 : 
; 1932 : 		return bSuccess;

  00052	8a 45 f7	 mov	 al, BYTE PTR _bSuccess$1[ebp]
  00055	eb 02		 jmp	 SHORT $LN1@SaveInputI
$LN2@SaveInputI:

; 1933 : 	}
; 1934 : 
; 1935 : 	return true;

  00057	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1936 : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?SaveInputInfo@CDlgServerOptionItemPersonal@@UAE_NXZ ENDP ; CDlgServerOptionItemPersonal::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerOptionItemPersonal@@MAEHXZ
_TEXT	SEGMENT
_wPersonalRoomRuleSize$ = -28				; size = 2
_rcClient$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnInitDialog@CDlgServerOptionItemPersonal@@MAEHXZ PROC	; CDlgServerOptionItemPersonal::OnInitDialog, COMDAT
; _this$ = ecx

; 1905 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1906 : 	__super::OnInitDialog();

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1907 : 
; 1908 : 	//获取位置
; 1909 : 	CRect rcClient;

  0001e	8d 4d e8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  00021	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 1910 : 	GetClientRect(&rcClient);

  00026	8d 45 e8	 lea	 eax, DWORD PTR _rcClient$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 1911 : 
; 1912 : 	//设置变量
; 1913 : 	m_pIGameServicePersonalRule = m_pDlgServerWizard->m_pIGameServicePersonalRule;

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 81 08 1c 00
	00		 mov	 eax, DWORD PTR [ecx+7176]
  00044	89 82 64 01 00
	00		 mov	 DWORD PTR [edx+356], eax

; 1914 : 
; 1915 : 	//创建窗口
; 1916 : 	WORD wPersonalRoomRuleSize = sizeof(m_pGameServiceOption->cbPersonalRule);

  0004a	b8 00 04 00 00	 mov	 eax, 1024		; 00000400H
  0004f	66 89 45 e4	 mov	 WORD PTR _wPersonalRoomRuleSize$[ebp], ax

; 1917 : 	m_hPersonalRule = m_pIGameServicePersonalRule->CreatePersonalRule(this, rcClient, m_pGameServiceOption->cbPersonalRule, wPersonalRoomRuleSize);

  00053	0f b7 45 e4	 movzx	 eax, WORD PTR _wPersonalRoomRuleSize$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00061	81 c2 f0 04 00
	00		 add	 edx, 1264		; 000004f0H
  00067	52		 push	 edx
  00068	83 ec 10	 sub	 esp, 16			; 00000010H
  0006b	8b c4		 mov	 eax, esp
  0006d	8b 4d e8	 mov	 ecx, DWORD PTR _rcClient$[ebp]
  00070	89 08		 mov	 DWORD PTR [eax], ecx
  00072	8b 55 ec	 mov	 edx, DWORD PTR _rcClient$[ebp+4]
  00075	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _rcClient$[ebp+8]
  0007b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0007e	8b 55 f4	 mov	 edx, DWORD PTR _rcClient$[ebp+12]
  00081	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00084	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 91 64 01 00
	00		 mov	 edx, DWORD PTR [ecx+356]
  00091	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00094	8b 12		 mov	 edx, DWORD PTR [edx]
  00096	8b 88 64 01 00
	00		 mov	 ecx, DWORD PTR [eax+356]
  0009c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0009f	ff d0		 call	 eax
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	89 81 60 01 00
	00		 mov	 DWORD PTR [ecx+352], eax

; 1918 : 
; 1919 : 	return TRUE;

  000aa	b8 01 00 00 00	 mov	 eax, 1

; 1920 : }

  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b5	33 cd		 xor	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
?OnInitDialog@CDlgServerOptionItemPersonal@@MAEHXZ ENDP	; CDlgServerOptionItemPersonal::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItemPersonal@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItemPersonal@@UAE@XZ PROC		; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal, COMDAT
; _this$ = ecx

; 1900 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItemPersonal@@6B@

; 1901 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerOptionItemPersonal@@UAE@XZ ENDP		; CDlgServerOptionItemPersonal::~CDlgServerOptionItemPersonal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItemPersonal@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgServerOptionItemPersonal@@QAE@XZ PROC		; CDlgServerOptionItemPersonal::CDlgServerOptionItemPersonal, COMDAT
; _this$ = ecx

; 1890 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1889 : CDlgServerOptionItemPersonal::CDlgServerOptionItemPersonal() : CDlgServerOptionItem(IDD_SERVER_OPTION_6)

  0000c	68 3a 23 00 00	 push	 9018			; 0000233aH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem@@IAE@I@Z ; CDlgServerOptionItem::CDlgServerOptionItem

; 1890 : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItemPersonal@@6B@

; 1891 : 	//设置变量
; 1892 : 	m_hPersonalRule = NULL;

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	c7 80 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+352], 0

; 1893 : 	m_pIGameServicePersonalRule = NULL;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 80 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+356], 0

; 1894 : 
; 1895 : 	return;
; 1896 : }

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??0CDlgServerOptionItemPersonal@@QAE@XZ ENDP		; CDlgServerOptionItemPersonal::CDlgServerOptionItemPersonal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItemCustom@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItemCustom@@UAEPAXI@Z PROC		; CDlgServerOptionItemCustom::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItemCustom@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItemCustom@@UAE@XZ ; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 68 01 00 00	 push	 360			; 00000168H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 68 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 360
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItemCustom@@UAE@XZ ; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 68 01 00 00	 push	 360			; 00000168H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItemCustom@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItemCustom@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItemCustom@@UAEPAXI@Z ENDP		; CDlgServerOptionItemCustom::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItemCustom@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItemCustom@@UAEPAXI@Z PROC		; CDlgServerOptionItemCustom::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItemCustom@@UAE@XZ ; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 68 01 00 00	 push	 360			; 00000168H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItemCustom@@UAEPAXI@Z ENDP		; CDlgServerOptionItemCustom::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItemCustom@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItemCustom@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItemCustom::GetMessageMap, COMDAT
; _this$ = ecx

; 44   : BEGIN_MESSAGE_MAP(CDlgServerOptionItemCustom, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItemCustom::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItemCustom@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItemCustom::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItemCustom::GetThisMessageMap, COMDAT

; 44   : BEGIN_MESSAGE_MAP(CDlgServerOptionItemCustom, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	ON_WM_SETFOCUS()
; 46   : 	ON_WM_NCDESTROY()
; 47   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItemCustom@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItemCustom::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSetFocus@CDlgServerOptionItemCustom@@AAEXPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pNewWnd$ = 8						; size = 4
?OnSetFocus@CDlgServerOptionItemCustom@@AAEXPAVCWnd@@@Z PROC ; CDlgServerOptionItemCustom::OnSetFocus, COMDAT
; _this$ = ecx

; 1875 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1876 : 	__super::OnSetFocus(pNewWnd);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNewWnd$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?OnSetFocus@CWnd@@IAEXPAV1@@Z ; CWnd::OnSetFocus

; 1877 : 
; 1878 : 	//设置焦点
; 1879 : 	if (m_hCustomRule!=NULL)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00022	74 10		 je	 SHORT $LN1@OnSetFocus

; 1880 : 	{
; 1881 : 		::SetFocus(m_hCustomRule);

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 88 60 01 00
	00		 mov	 ecx, DWORD PTR [eax+352]
  0002d	51		 push	 ecx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4
$LN1@OnSetFocus:

; 1882 : 	}
; 1883 : 
; 1884 : 	return;
; 1885 : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?OnSetFocus@CDlgServerOptionItemCustom@@AAEXPAVCWnd@@@Z ENDP ; CDlgServerOptionItemCustom::OnSetFocus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnNcDestroy@CDlgServerOptionItemCustom@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnNcDestroy@CDlgServerOptionItemCustom@@AAEXXZ PROC	; CDlgServerOptionItemCustom::OnNcDestroy, COMDAT
; _this$ = ecx

; 1859 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1860 : 	//关闭窗口
; 1861 : 	if (m_hCustomRule!=NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00016	74 10		 je	 SHORT $LN2@OnNcDestro

; 1862 : 	{
; 1863 : 		::DestroyWindow(m_hCustomRule);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 88 60 01 00
	00		 mov	 ecx, DWORD PTR [eax+352]
  00021	51		 push	 ecx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
$LN2@OnNcDestro:

; 1864 : 	}
; 1865 : 
; 1866 : 	//设置变量
; 1867 : 	m_hCustomRule=NULL;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 80 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+352], 0

; 1868 : 	m_pIGameServiceCustomRule=NULL;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 80 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+356], 0

; 1869 : 
; 1870 : 	__super::OnNcDestroy();

  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?OnNcDestroy@CWnd@@IAEXXZ ; CWnd::OnNcDestroy

; 1871 : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?OnNcDestroy@CDlgServerOptionItemCustom@@AAEXXZ ENDP	; CDlgServerOptionItemCustom::OnNcDestroy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerOptionItemCustom@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerOptionItemCustom@@UAEXHH@Z PROC ; CDlgServerOptionItemCustom::RectifyControl, COMDAT
; _this$ = ecx

; 1847 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1848 : 	//调整位置
; 1849 : 	if (m_hCustomRule!=NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00016	74 20		 je	 SHORT $LN1@RectifyCon

; 1850 : 	{
; 1851 : 		::SetWindowPos(m_hCustomRule,NULL,0,0,nWidth,nHeight,SWP_NOMOVE|SWP_NOZORDER);

  00018	6a 06		 push	 6
  0001a	8b 45 0c	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00021	51		 push	 ecx
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 82 60 01 00
	00		 mov	 eax, DWORD PTR [edx+352]
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
$LN1@RectifyCon:

; 1852 : 	}
; 1853 : 
; 1854 : 	return;
; 1855 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?RectifyControl@CDlgServerOptionItemCustom@@UAEXHH@Z ENDP ; CDlgServerOptionItemCustom::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerOptionItemCustom@@UAE_NXZ
_TEXT	SEGMENT
_bSuccess$1 = -9					; size = 1
_wCustonSize$2 = -8					; size = 2
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerOptionItemCustom@@UAE_NXZ PROC	; CDlgServerOptionItemCustom::SaveInputInfo, COMDAT
; _this$ = ecx

; 1831 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1832 : 	//保存输入
; 1833 : 	if (m_hCustomRule!=NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 b8 60 01 00
	00 00		 cmp	 DWORD PTR [eax+352], 0
  00016	74 3f		 je	 SHORT $LN2@SaveInputI

; 1834 : 	{
; 1835 : 		//保存设置
; 1836 : 		WORD wCustonSize=sizeof(m_pGameServiceOption->cbCustomRule);

  00018	b8 00 04 00 00	 mov	 eax, 1024		; 00000400H
  0001d	66 89 45 f8	 mov	 WORD PTR _wCustonSize$2[ebp], ax

; 1837 : 		bool bSuccess=m_pIGameServiceCustomRule->SaveCustomRule(m_pGameServiceOption->cbCustomRule,wCustonSize);

  00021	0f b7 45 f8	 movzx	 eax, WORD PTR _wCustonSize$2[ebp]
  00025	50		 push	 eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0002f	81 c2 f0 00 00
	00		 add	 edx, 240		; 000000f0H
  00035	52		 push	 edx
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 88 64 01 00
	00		 mov	 ecx, DWORD PTR [eax+356]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 01		 mov	 eax, DWORD PTR [ecx]
  00044	8b 8a 64 01 00
	00		 mov	 ecx, DWORD PTR [edx+356]
  0004a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0004d	ff d2		 call	 edx
  0004f	88 45 f7	 mov	 BYTE PTR _bSuccess$1[ebp], al

; 1838 : 
; 1839 : 		return bSuccess;

  00052	8a 45 f7	 mov	 al, BYTE PTR _bSuccess$1[ebp]
  00055	eb 02		 jmp	 SHORT $LN1@SaveInputI
$LN2@SaveInputI:

; 1840 : 	}
; 1841 : 
; 1842 : 	return true;

  00057	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1843 : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?SaveInputInfo@CDlgServerOptionItemCustom@@UAE_NXZ ENDP	; CDlgServerOptionItemCustom::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerOptionItemCustom@@MAEHXZ
_TEXT	SEGMENT
_wCustonSize$ = -28					; size = 2
_rcClient$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnInitDialog@CDlgServerOptionItemCustom@@MAEHXZ PROC	; CDlgServerOptionItemCustom::OnInitDialog, COMDAT
; _this$ = ecx

; 1812 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1813 : 	__super::OnInitDialog();

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1814 : 
; 1815 : 	//获取位置
; 1816 : 	CRect rcClient;

  0001e	8d 4d e8	 lea	 ecx, DWORD PTR _rcClient$[ebp]
  00021	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 1817 : 	GetClientRect(&rcClient);

  00026	8d 45 e8	 lea	 eax, DWORD PTR _rcClient$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 1818 : 
; 1819 : 	//设置变量
; 1820 : 	m_pIGameServiceCustomRule=m_pDlgServerWizard->m_pIGameServiceCustomRule;

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 81 04 1c 00
	00		 mov	 eax, DWORD PTR [ecx+7172]
  00044	89 82 64 01 00
	00		 mov	 DWORD PTR [edx+356], eax

; 1821 : 
; 1822 : 	//创建窗口
; 1823 : 	WORD wCustonSize=sizeof(m_pGameServiceOption->cbCustomRule);

  0004a	b8 00 04 00 00	 mov	 eax, 1024		; 00000400H
  0004f	66 89 45 e4	 mov	 WORD PTR _wCustonSize$[ebp], ax

; 1824 : 	m_hCustomRule=m_pIGameServiceCustomRule->CreateCustomRule(this,rcClient,m_pGameServiceOption->cbCustomRule,wCustonSize);

  00053	0f b7 45 e4	 movzx	 eax, WORD PTR _wCustonSize$[ebp]
  00057	50		 push	 eax
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00061	81 c2 f0 00 00
	00		 add	 edx, 240		; 000000f0H
  00067	52		 push	 edx
  00068	83 ec 10	 sub	 esp, 16			; 00000010H
  0006b	8b c4		 mov	 eax, esp
  0006d	8b 4d e8	 mov	 ecx, DWORD PTR _rcClient$[ebp]
  00070	89 08		 mov	 DWORD PTR [eax], ecx
  00072	8b 55 ec	 mov	 edx, DWORD PTR _rcClient$[ebp+4]
  00075	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _rcClient$[ebp+8]
  0007b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0007e	8b 55 f4	 mov	 edx, DWORD PTR _rcClient$[ebp+12]
  00081	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00084	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 91 64 01 00
	00		 mov	 edx, DWORD PTR [ecx+356]
  00091	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00094	8b 12		 mov	 edx, DWORD PTR [edx]
  00096	8b 88 64 01 00
	00		 mov	 ecx, DWORD PTR [eax+356]
  0009c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0009f	ff d0		 call	 eax
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	89 81 60 01 00
	00		 mov	 DWORD PTR [ecx+352], eax

; 1825 : 
; 1826 : 	return TRUE;

  000aa	b8 01 00 00 00	 mov	 eax, 1

; 1827 : }

  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b5	33 cd		 xor	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
?OnInitDialog@CDlgServerOptionItemCustom@@MAEHXZ ENDP	; CDlgServerOptionItemCustom::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItemCustom@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItemCustom@@UAE@XZ PROC		; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom, COMDAT
; _this$ = ecx

; 1807 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItemCustom@@6B@

; 1808 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerOptionItemCustom@@UAE@XZ ENDP		; CDlgServerOptionItemCustom::~CDlgServerOptionItemCustom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItemCustom@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgServerOptionItemCustom@@QAE@XZ PROC		; CDlgServerOptionItemCustom::CDlgServerOptionItemCustom, COMDAT
; _this$ = ecx

; 1797 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1796 : CDlgServerOptionItemCustom::CDlgServerOptionItemCustom() : CDlgServerOptionItem(IDD_SERVER_OPTION_4)

  0000c	68 2b 23 00 00	 push	 9003			; 0000232bH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem@@IAE@I@Z ; CDlgServerOptionItem::CDlgServerOptionItem

; 1797 : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItemCustom@@6B@

; 1798 : 	//设置变量
; 1799 : 	m_hCustomRule=NULL;

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	c7 80 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+352], 0

; 1800 : 	m_pIGameServiceCustomRule=NULL;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 80 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+356], 0

; 1801 : 
; 1802 : 	return;
; 1803 : }

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??0CDlgServerOptionItemCustom@@QAE@XZ ENDP		; CDlgServerOptionItemCustom::CDlgServerOptionItemCustom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItem5@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItem5@@UAEPAXI@Z PROC		; CDlgServerOptionItem5::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItem5@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 60 01 00 00	 push	 352			; 00000160H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 60 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 352
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 60 01 00 00	 push	 352			; 00000160H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItem5@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItem5@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItem5@@UAEPAXI@Z ENDP		; CDlgServerOptionItem5::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItem5@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItem5@@UAEPAXI@Z PROC		; CDlgServerOptionItem5::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem5@@UAE@XZ ; CDlgServerOptionItem5::~CDlgServerOptionItem5
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 60 01 00 00	 push	 352			; 00000160H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItem5@@UAEPAXI@Z ENDP		; CDlgServerOptionItem5::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?PreTranslateMessage@CDlgServerOptionItem5@@UAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CDlgServerOptionItem5@@UAEHPAUtagMSG@@@Z PROC ; CDlgServerOptionItem5::PreTranslateMessage, COMDAT
; _this$ = ecx

; 2898 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2899 : 	if (pMsg->message == WM_MOUSEMOVE && m_ToolTipCtrl.GetSafeHwnd() != NULL)	m_ToolTipCtrl.RelayEvent(pMsg);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0000f	81 78 04 00 02
	00 00		 cmp	 DWORD PTR [eax+4], 512	; 00000200H
  00016	75 24		 jne	 SHORT $LN2@PreTransla
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00021	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00026	85 c0		 test	 eax, eax
  00028	74 12		 je	 SHORT $LN2@PreTransla
  0002a	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00037	e8 00 00 00 00	 call	 ?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z ; CToolTipCtrl::RelayEvent
$LN2@PreTransla:

; 2900 : 
; 2901 : 	return CDlgServerOptionItem::PreTranslateMessage(pMsg);

  0003c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z ; CDialog::PreTranslateMessage

; 2902 : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?PreTranslateMessage@CDlgServerOptionItem5@@UAEHPAUtagMSG@@@Z ENDP ; CDlgServerOptionItem5::PreTranslateMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z
_TEXT	SEGMENT
$T2 = -993						; size = 1
_i$3 = -864						; size = 4
_szReadKey$ = -860					; size = 50
_cbEnable$ = -805					; size = 1
_IniData$ = -804					; size = 264
_szIniFile$ = -540					; size = 260
_szWorkDir$ = -280					; size = 260
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dwKindID$ = 8						; size = 4
?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z PROC ; CDlgServerOptionItem5::GetPersonalRoomInfo, COMDAT
; _this$ = ecx

; 1570 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 03 00
	00		 sub	 esp, 984		; 000003d8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1571 : 
; 1572 : 	//获取路径
; 1573 : 	TCHAR szWorkDir[MAX_PATH]=TEXT("");

  00031	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00036	88 85 e8 fe ff
	ff		 mov	 BYTE PTR _szWorkDir$[ebp], al
  0003c	68 03 01 00 00	 push	 259			; 00000103H
  00041	6a 00		 push	 0
  00043	8d 85 e9 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp+1]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _memset
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1574 : 	CWHService::GetWorkDirectory(szWorkDir,CountArray(szWorkDir));

  00052	68 04 01 00 00	 push	 260			; 00000104H
  00057	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szWorkDir$[ebp]
  0005d	50		 push	 eax
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetWorkDirectory@CWHService@@SA_NQADG@Z
  00064	83 c4 08	 add	 esp, 8

; 1575 : 
; 1576 : 	//构造路径
; 1577 : 	TCHAR szIniFile[MAX_PATH]=TEXT("");

  00067	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0006c	88 85 e4 fd ff
	ff		 mov	 BYTE PTR _szIniFile$[ebp], al
  00072	68 03 01 00 00	 push	 259			; 00000103H
  00077	6a 00		 push	 0
  00079	8d 85 e5 fd ff
	ff		 lea	 eax, DWORD PTR _szIniFile$[ebp+1]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 _memset
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1578 : 	_sntprintf(szIniFile,CountArray(szIniFile),TEXT("%s\\%d.ini"),szWorkDir, dwKindID);

  00088	8b 45 08	 mov	 eax, DWORD PTR _dwKindID$[ebp]
  0008b	50		 push	 eax
  0008c	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _szWorkDir$[ebp]
  00092	51		 push	 ecx
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_09LOOPACNL@?$CFs?2?$CFd?4ini@
  00098	68 04 01 00 00	 push	 260			; 00000104H
  0009d	8d 95 e4 fd ff
	ff		 lea	 edx, DWORD PTR _szIniFile$[ebp]
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 __snprintf
  000a9	83 c4 14	 add	 esp, 20			; 00000014H

; 1579 : 
; 1580 : 	//读取配置
; 1581 : 	CWHIniData IniData;

  000ac	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHIniData@@QAE@XZ
  000b8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1582 : 	IniData.SetIniFilePath(szIniFile);

  000bf	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szIniFile$[ebp]
  000c5	50		 push	 eax
  000c6	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetIniFilePath@CWHIniData@@QAEXPBD@Z

; 1583 : 
; 1584 : 	//是否允许配置私人房间参数
; 1585 : 	byte cbEnable = IniData.ReadInt(TEXT("Enable"),TEXT("Enabled"),0);

  000d2	6a 00		 push	 0
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_07DOAOMMKG@Enabled@
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_06CKGENIKG@Enable@
  000de	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  000ea	88 85 db fc ff
	ff		 mov	 BYTE PTR _cbEnable$[ebp], al

; 1586 : 
; 1587 : 
; 1588 : 	//获取配置参数
; 1589 : 	//m_pPersonalRoomOption->cbCardOrBean = IniData.ReadInt(TEXT("Option"),TEXT("CardOrBean"),0);
; 1590 : 	//m_pPersonalRoomOption->lFeeCardOrBeanCount = IniData.ReadInt(TEXT("Option"),TEXT("FeeCardOrBeanCount"),0);
; 1591 : 	m_pPersonalRoomOption->cbIsJoinGame = IniData.ReadInt(TEXT("Option"),TEXT("IsJoinGame"),0);

  000f0	6a 00		 push	 0
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HLGININO@IsJoinGame@
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  000fc	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00108	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00111	88 02		 mov	 BYTE PTR [edx], al

; 1592 : 	m_pPersonalRoomOption->cbMinPeople = IniData.ReadInt(TEXT("Option"),TEXT("MinPeople"),0);

  00113	6a 00		 push	 0
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_09BAGGAEBH@MinPeople@
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  0011f	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0012b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00134	88 42 01	 mov	 BYTE PTR [edx+1], al

; 1593 : 	m_pPersonalRoomOption->cbMaxPeople = IniData.ReadInt(TEXT("Option"),TEXT("MaxPeople"),0);

  00137	6a 00		 push	 0
  00139	68 00 00 00 00	 push	 OFFSET ??_C@_09BBGKJOKD@MaxPeople@
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  00143	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0014f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00158	88 42 02	 mov	 BYTE PTR [edx+2], al

; 1594 : 	m_pPersonalRoomOption->lMaxCellScore = IniData.ReadInt(TEXT("Option"),TEXT("MaxCellScore"),0);

  0015b	6a 00		 push	 0
  0015d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CNCFIDBJ@MaxCellScore@
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  00167	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  0016d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00173	33 c9		 xor	 ecx, ecx
  00175	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00178	8b 92 b4 00 00
	00		 mov	 edx, DWORD PTR [edx+180]
  0017e	89 42 03	 mov	 DWORD PTR [edx+3], eax
  00181	89 4a 07	 mov	 DWORD PTR [edx+7], ecx

; 1595 : 	m_pPersonalRoomOption->lPersonalRoomTax = IniData.ReadInt(TEXT("Option"),TEXT("PersonalRoomTax"),0);

  00184	6a 00		 push	 0
  00186	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GCOMLPGF@PersonalRoomTax@
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  00190	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0019c	33 c9		 xor	 ecx, ecx
  0019e	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  001a1	8b 92 b4 00 00
	00		 mov	 edx, DWORD PTR [edx+180]
  001a7	89 42 0b	 mov	 DWORD PTR [edx+11], eax
  001aa	89 4a 0f	 mov	 DWORD PTR [edx+15], ecx

; 1596 : 	m_pPersonalRoomOption->wCanCreateCount = IniData.ReadInt(TEXT("Option"),TEXT("CanCreateCount"),0);

  001ad	6a 00		 push	 0
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LNMJOPEM@CanCreateCount@
  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  001b9	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  001c5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  001ce	66 89 42 53	 mov	 WORD PTR [edx+83], ax

; 1597 : 	m_pPersonalRoomOption->dwPlayTurnCount = IniData.ReadInt(TEXT("Option"),TEXT("PlayTurnCount"),0);

  001d2	6a 00		 push	 0
  001d4	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FDPMPBME@PlayTurnCount@
  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  001de	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  001e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  001ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  001f3	89 42 55	 mov	 DWORD PTR [edx+85], eax

; 1598 : 	m_pPersonalRoomOption->dwPlayTimeLimit = IniData.ReadInt(TEXT("Option"),TEXT("PlayTimeLimit"),0);

  001f6	6a 00		 push	 0
  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FAGABJFM@PlayTimeLimit@
  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  00202	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00208	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0020e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00211	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00217	89 42 59	 mov	 DWORD PTR [edx+89], eax

; 1599 : 	m_pPersonalRoomOption->dwTimeAfterBeginCount = IniData.ReadInt(TEXT("Option"),TEXT("TimeAfterBeginCount"),0);

  0021a	6a 00		 push	 0
  0021c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NHDBBOLF@TimeAfterBeginCount@
  00221	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  00226	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  0022c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00232	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00235	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  0023b	89 42 5d	 mov	 DWORD PTR [edx+93], eax

; 1600 : 	m_pPersonalRoomOption->dwTimeOffLineCount = IniData.ReadInt(TEXT("Option"),TEXT("TimeOffLineCount"),0);

  0023e	6a 00		 push	 0
  00240	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BHHEMCMJ@TimeOffLineCount@
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  0024a	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00250	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00256	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00259	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  0025f	89 42 61	 mov	 DWORD PTR [edx+97], eax

; 1601 : 	m_pPersonalRoomOption->dwTimeNotBeginGame = IniData.ReadInt(TEXT("Option"),TEXT("TimeNotBeginGame"),0);

  00262	6a 00		 push	 0
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EFKEMBID@TimeNotBeginGame@
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  0026e	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0027a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0027d	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00283	89 42 65	 mov	 DWORD PTR [edx+101], eax

; 1602 : 	m_pPersonalRoomOption->dwTimeAfterCreateRoom = IniData.ReadInt(TEXT("Option"),TEXT("TimeAfterCreateRoom"),0);

  00286	6a 00		 push	 0
  00288	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MAFCEFJP@TimeAfterCreateRoom@
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  00292	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00298	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0029e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002a1	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  002a7	89 42 69	 mov	 DWORD PTR [edx+105], eax

; 1603 : 	m_pPersonalRoomOption->wBeginFreeTime  = IniData.ReadInt(TEXT("Option"), TEXT("BeginFreeTime"), 0);

  002aa	6a 00		 push	 0
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DEEAMCAI@BeginFreeTime@
  002b1	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  002b6	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  002bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  002c2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002c5	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  002cb	66 89 42 6d	 mov	 WORD PTR [edx+109], ax

; 1604 : 	m_pPersonalRoomOption->wEndFreeTime  = IniData.ReadInt(TEXT("Option"), TEXT("EndFreeTime"), 0);

  002cf	6a 00		 push	 0
  002d1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OHDGOHJM@EndFreeTime@
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_06CJHLBMGC@Option@
  002db	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  002e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  002e7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ea	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  002f0	66 89 42 6f	 mov	 WORD PTR [edx+111], ax

; 1605 : 	
; 1606 : 	//创建私人房间的权限
; 1607 : 	TCHAR szReadKey[50] = {0};

  002f4	6a 32		 push	 50			; 00000032H
  002f6	6a 00		 push	 0
  002f8	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _szReadKey$[ebp]
  002fe	50		 push	 eax
  002ff	e8 00 00 00 00	 call	 _memset
  00304	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1608 : 	
; 1609 : 	m_pCreateRoomRightAndFee->cbCreateRight=IniData.ReadInt(TEXT("CreateRoomRight"), TEXT("CreateRight"), 0);

  00307	6a 00		 push	 0
  00309	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JGNJEEEJ@CreateRight@
  0030e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MEGPCNND@CreateRoomRight@
  00313	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00319	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0031f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00322	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  00328	88 02		 mov	 BYTE PTR [edx], al

; 1610 : 
; 1611 : 	for (int i = 0; i < FEE_OPTION_COUNT ; i++)

  0032a	c7 85 a0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$3[ebp], 0
  00334	eb 0f		 jmp	 SHORT $LN4@GetPersona
$LN2@GetPersona:
  00336	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  0033c	83 c0 01	 add	 eax, 1
  0033f	89 85 a0 fc ff
	ff		 mov	 DWORD PTR _i$3[ebp], eax
$LN4@GetPersona:
  00345	83 bd a0 fc ff
	ff 05		 cmp	 DWORD PTR _i$3[ebp], 5
  0034c	0f 8d 78 01 00
	00		 jge	 $LN3@GetPersona

; 1612 : 	{
; 1613 : 		wsprintf(szReadKey, TEXT("PlayTurnLimit_%d"), i);

  00352	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  00358	50		 push	 eax
  00359	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NDJBEBBP@PlayTurnLimit_?$CFd@
  0035e	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _szReadKey$[ebp]
  00364	51		 push	 ecx
  00365	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  0036b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1614 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPlayTurnLimit = IniData.ReadInt(TEXT("FeeParameter"), szReadKey, 0);

  0036e	6a 00		 push	 0
  00370	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _szReadKey$[ebp]
  00376	50		 push	 eax
  00377	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPNJNFLH@FeeParameter@
  0037c	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00382	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00388	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0038b	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  00391	6b 8d a0 fc ff
	ff 13		 imul	 ecx, DWORD PTR _i$3[ebp], 19
  00398	89 44 0a 16	 mov	 DWORD PTR [edx+ecx+22], eax

; 1615 : 
; 1616 : 		wsprintf(szReadKey, TEXT("PayFee_%d"), i);

  0039c	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  003a2	50		 push	 eax
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_09NPCPBNFG@PayFee_?$CFd@
  003a8	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _szReadKey$[ebp]
  003ae	51		 push	 ecx
  003af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  003b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1617 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPayFee = IniData.ReadInt(TEXT("FeeParameter"), szReadKey, 0);

  003b8	6a 00		 push	 0
  003ba	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _szReadKey$[ebp]
  003c0	50		 push	 eax
  003c1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPNJNFLH@FeeParameter@
  003c6	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  003cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  003d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003d5	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  003db	6b 8d a0 fc ff
	ff 13		 imul	 ecx, DWORD PTR _i$3[ebp], 19
  003e2	89 44 0a 1e	 mov	 DWORD PTR [edx+ecx+30], eax

; 1618 : 
; 1619 : 		wsprintf(szReadKey, TEXT("AAPayFee_%d"), i);

  003e6	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  003ec	50		 push	 eax
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PLHAIOPP@AAPayFee_?$CFd@
  003f2	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _szReadKey$[ebp]
  003f8	51		 push	 ecx
  003f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  003ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1620 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].wAAPayFee = IniData.ReadInt(TEXT("FeeParameter"), szReadKey, 0);

  00402	6a 00		 push	 0
  00404	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _szReadKey$[ebp]
  0040a	50		 push	 eax
  0040b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPNJNFLH@FeeParameter@
  00410	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00416	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  0041c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0041f	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  00425	6b 8d a0 fc ff
	ff 13		 imul	 ecx, DWORD PTR _i$3[ebp], 19
  0042c	66 89 44 0a 22	 mov	 WORD PTR [edx+ecx+34], ax

; 1621 : 
; 1622 : 		wsprintf(szReadKey, TEXT("IniScore_%d"), i);

  00431	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  00437	50		 push	 eax
  00438	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NFLEKBDJ@IniScore_?$CFd@
  0043d	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _szReadKey$[ebp]
  00443	51		 push	 ecx
  00444	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  0044a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1623 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwIniScore = IniData.ReadInt(TEXT("FeeParameter"), szReadKey, 0);

  0044d	6a 00		 push	 0
  0044f	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _szReadKey$[ebp]
  00455	50		 push	 eax
  00456	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPNJNFLH@FeeParameter@
  0045b	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00461	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  00467	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0046a	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  00470	6b 8d a0 fc ff
	ff 13		 imul	 ecx, DWORD PTR _i$3[ebp], 19
  00477	89 44 0a 24	 mov	 DWORD PTR [edx+ecx+36], eax

; 1624 : 
; 1625 : 		wsprintf(szReadKey, TEXT("GameMode_%d"), i);

  0047b	8b 85 a0 fc ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  00481	50		 push	 eax
  00482	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MCMOAOCB@GameMode_?$CFd@
  00487	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _szReadKey$[ebp]
  0048d	51		 push	 ecx
  0048e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00494	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1626 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].cbGameMode = IniData.ReadInt(TEXT("FeeParameter"), szReadKey, 0);

  00497	6a 00		 push	 0
  00499	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _szReadKey$[ebp]
  0049f	50		 push	 eax
  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPNJNFLH@FeeParameter@
  004a5	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  004ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadInt@CWHIniData@@QAEIPBD0H@Z
  004b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004b4	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  004ba	6b 8d a0 fc ff
	ff 13		 imul	 ecx, DWORD PTR _i$3[ebp], 19
  004c1	88 44 0a 15	 mov	 BYTE PTR [edx+ecx+21], al

; 1627 : 	}

  004c5	e9 6c fe ff ff	 jmp	 $LN2@GetPersona
$LN3@GetPersona:

; 1628 : 	return true;

  004ca	c6 85 1f fc ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  004d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004d8	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  004de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHIniData@@UAE@XZ
  004e4	8a 85 1f fc ff
	ff		 mov	 al, BYTE PTR $T2[ebp]

; 1629 : }

  004ea	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004f4	59		 pop	 ecx
  004f5	5f		 pop	 edi
  004f6	5e		 pop	 esi
  004f7	5b		 pop	 ebx
  004f8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004fb	33 cd		 xor	 ecx, ebp
  004fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00502	8b e5		 mov	 esp, ebp
  00504	5d		 pop	 ebp
  00505	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z$0:
  00000	8d 8d dc fc ff
	ff		 lea	 ecx, DWORD PTR _IniData$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHIniData@@UAE@XZ
__ehhandler$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a 18 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-1000]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z ENDP ; CDlgServerOptionItem5::GetPersonalRoomInfo
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelChangeGameMode5@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
tv77 = -76						; size = 4
_pGameMode$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelChangeGameMode5@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnSelChangeGameMode5, COMDAT
; _this$ = ecx

; 1766 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1767 : 	CComboBox *pGameMode = (CComboBox*)GetDlgItem(IDC_COMBO_SELECT_MODE5);

  0000c	68 75 23 00 00	 push	 9077			; 00002375H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pGameMode$[ebp], eax

; 1768 : 	switch (pGameMode->GetCurSel())

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pGameMode$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00024	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  00027	83 7d b4 03	 cmp	 DWORD PTR tv77[ebp], 3
  0002b	77 58		 ja	 SHORT $LN1@OnSelChang
  0002d	8b 45 b4	 mov	 eax, DWORD PTR tv77[ebp]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnSelChang[eax*4]
$LN4@OnSelChang:

; 1769 : 	{
; 1770 : 	case 0:
; 1771 : 	{
; 1772 : 		SetDlgItemText(IDC_STATIC_SHU5, TEXT("局数5"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_05GOJFIKPH@?$LO?V?J?$PN5@
  0003c	68 7c 23 00 00	 push	 9084			; 0000237cH
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1773 : 		break;

  00049	eb 3a		 jmp	 SHORT $LN1@OnSelChang
$LN5@OnSelChang:

; 1774 : 	}
; 1775 : 	case 1:
; 1776 : 	{
; 1777 : 		SetDlgItemText(IDC_STATIC_SHU5, TEXT("时间5"));

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05IIJHAJMC@?J?$LB?$LM?d5@
  00050	68 7c 23 00 00	 push	 9084			; 0000237cH
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1778 : 		break;

  0005d	eb 26		 jmp	 SHORT $LN1@OnSelChang
$LN6@OnSelChang:

; 1779 : 	}
; 1780 : 	case 2:
; 1781 : 	{
; 1782 : 		SetDlgItemText(IDC_STATIC_SHU5, TEXT("圈数5"));

  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05EKDMIEOE@?H?$KG?J?$PN5@
  00064	68 7c 23 00 00	 push	 9084			; 0000237cH
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1783 : 		break;

  00071	eb 12		 jmp	 SHORT $LN1@OnSelChang
$LN7@OnSelChang:

; 1784 : 	}
; 1785 : 	case 3:
; 1786 : 	{
; 1787 : 		SetDlgItemText(IDC_STATIC_SHU5, TEXT("积分5"));

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_05CFAENEBB@?$LL?$PN?$LH?V5@
  00078	68 7c 23 00 00	 push	 9084			; 0000237cH
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN1@OnSelChang:

; 1788 : 		break;
; 1789 : 	}
; 1790 : 	}
; 1791 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN9@OnSelChang:
  0008c	00 00 00 00	 DD	 $LN4@OnSelChang
  00090	00 00 00 00	 DD	 $LN5@OnSelChang
  00094	00 00 00 00	 DD	 $LN6@OnSelChang
  00098	00 00 00 00	 DD	 $LN7@OnSelChang
?OnSelChangeGameMode5@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnSelChangeGameMode5
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelChangeGameMode4@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
tv77 = -76						; size = 4
_pGameMode$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelChangeGameMode4@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnSelChangeGameMode4, COMDAT
; _this$ = ecx

; 1738 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1739 : 	CComboBox *pGameMode = (CComboBox*)GetDlgItem(IDC_COMBO_SELECT_MODE4);

  0000c	68 74 23 00 00	 push	 9076			; 00002374H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pGameMode$[ebp], eax

; 1740 : 	switch (pGameMode->GetCurSel())

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pGameMode$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00024	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  00027	83 7d b4 03	 cmp	 DWORD PTR tv77[ebp], 3
  0002b	77 58		 ja	 SHORT $LN1@OnSelChang
  0002d	8b 45 b4	 mov	 eax, DWORD PTR tv77[ebp]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnSelChang[eax*4]
$LN4@OnSelChang:

; 1741 : 	{
; 1742 : 	case 0:
; 1743 : 	{
; 1744 : 		SetDlgItemText(IDC_STATIC_SHU4, TEXT("局数4"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_05HHIOLLLG@?$LO?V?J?$PN4@
  0003c	68 7b 23 00 00	 push	 9083			; 0000237bH
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1745 : 		break;

  00049	eb 3a		 jmp	 SHORT $LN1@OnSelChang
$LN5@OnSelChang:

; 1746 : 	}
; 1747 : 	case 1:
; 1748 : 	{
; 1749 : 		SetDlgItemText(IDC_STATIC_SHU4, TEXT("时间4"));

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05JBIMDIID@?J?$LB?$LM?d4@
  00050	68 7b 23 00 00	 push	 9083			; 0000237bH
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1750 : 		break;

  0005d	eb 26		 jmp	 SHORT $LN1@OnSelChang
$LN6@OnSelChang:

; 1751 : 	}
; 1752 : 	case 2:
; 1753 : 	{
; 1754 : 		SetDlgItemText(IDC_STATIC_SHU4, TEXT("圈数4"));

  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05FDCHLFKF@?H?$KG?J?$PN4@
  00064	68 7b 23 00 00	 push	 9083			; 0000237bH
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1755 : 		break;

  00071	eb 12		 jmp	 SHORT $LN1@OnSelChang
$LN7@OnSelChang:

; 1756 : 	}
; 1757 : 	case 3:
; 1758 : 	{
; 1759 : 		SetDlgItemText(IDC_STATIC_SHU4, TEXT("积分4"));

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_05DMBPOFFA@?$LL?$PN?$LH?V4@
  00078	68 7b 23 00 00	 push	 9083			; 0000237bH
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN1@OnSelChang:

; 1760 : 		break;
; 1761 : 	}
; 1762 : 	}
; 1763 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN9@OnSelChang:
  0008c	00 00 00 00	 DD	 $LN4@OnSelChang
  00090	00 00 00 00	 DD	 $LN5@OnSelChang
  00094	00 00 00 00	 DD	 $LN6@OnSelChang
  00098	00 00 00 00	 DD	 $LN7@OnSelChang
?OnSelChangeGameMode4@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnSelChangeGameMode4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelChangeGameMode3@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
tv77 = -76						; size = 4
_pGameMode$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelChangeGameMode3@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnSelChangeGameMode3, COMDAT
; _this$ = ecx

; 1710 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1711 : 	CComboBox *pGameMode = (CComboBox*)GetDlgItem(IDC_COMBO_SELECT_MODE3);

  0000c	68 73 23 00 00	 push	 9075			; 00002373H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pGameMode$[ebp], eax

; 1712 : 	switch (pGameMode->GetCurSel())

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pGameMode$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00024	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  00027	83 7d b4 03	 cmp	 DWORD PTR tv77[ebp], 3
  0002b	77 58		 ja	 SHORT $LN1@OnSelChang
  0002d	8b 45 b4	 mov	 eax, DWORD PTR tv77[ebp]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnSelChang[eax*4]
$LN4@OnSelChang:

; 1713 : 	{
; 1714 : 	case 0:
; 1715 : 	{
; 1716 : 		SetDlgItemText(IDC_STATIC_SHU3, TEXT("局数3"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_05DIMPCNHB@?$LO?V?J?$PN3@
  0003c	68 7a 23 00 00	 push	 9082			; 0000237aH
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1717 : 		break;

  00049	eb 3a		 jmp	 SHORT $LN1@OnSelChang
$LN5@OnSelChang:

; 1718 : 	}
; 1719 : 	case 1:
; 1720 : 	{
; 1721 : 		SetDlgItemText(IDC_STATIC_SHU3, TEXT("时间3"));

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05NOMNKOEE@?J?$LB?$LM?d3@
  00050	68 7a 23 00 00	 push	 9082			; 0000237aH
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1722 : 		break;

  0005d	eb 26		 jmp	 SHORT $LN1@OnSelChang
$LN6@OnSelChang:

; 1723 : 	}
; 1724 : 	case 2:
; 1725 : 	{
; 1726 : 		SetDlgItemText(IDC_STATIC_SHU3, TEXT("圈数3"));

  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGGCDGC@?H?$KG?J?$PN3@
  00064	68 7a 23 00 00	 push	 9082			; 0000237aH
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1727 : 		break;

  00071	eb 12		 jmp	 SHORT $LN1@OnSelChang
$LN7@OnSelChang:

; 1728 : 	}
; 1729 : 	case 3:
; 1730 : 	{
; 1731 : 		SetDlgItemText(IDC_STATIC_SHU3, TEXT("积分3"));

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_05HDFOHDJH@?$LL?$PN?$LH?V3@
  00078	68 7a 23 00 00	 push	 9082			; 0000237aH
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN1@OnSelChang:

; 1732 : 		break;
; 1733 : 	}
; 1734 : 	}
; 1735 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN9@OnSelChang:
  0008c	00 00 00 00	 DD	 $LN4@OnSelChang
  00090	00 00 00 00	 DD	 $LN5@OnSelChang
  00094	00 00 00 00	 DD	 $LN6@OnSelChang
  00098	00 00 00 00	 DD	 $LN7@OnSelChang
?OnSelChangeGameMode3@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnSelChangeGameMode3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelChangeGameMode2@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
tv77 = -76						; size = 4
_pGameMode$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelChangeGameMode2@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnSelChangeGameMode2, COMDAT
; _this$ = ecx

; 1682 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1683 : 	CComboBox *pGameMode = (CComboBox*)GetDlgItem(IDC_COMBO_SELECT_MODE2);

  0000c	68 72 23 00 00	 push	 9074			; 00002372H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pGameMode$[ebp], eax

; 1684 : 	switch (pGameMode->GetCurSel())

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pGameMode$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00024	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  00027	83 7d b4 03	 cmp	 DWORD PTR tv77[ebp], 3
  0002b	77 58		 ja	 SHORT $LN1@OnSelChang
  0002d	8b 45 b4	 mov	 eax, DWORD PTR tv77[ebp]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnSelChang[eax*4]
$LN4@OnSelChang:

; 1685 : 	{
; 1686 : 	case 0:
; 1687 : 	{
; 1688 : 		SetDlgItemText(IDC_STATIC_SHU2, TEXT("局数2"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_05CBNEBMDA@?$LO?V?J?$PN2@
  0003c	68 79 23 00 00	 push	 9081			; 00002379H
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1689 : 		break;

  00049	eb 3a		 jmp	 SHORT $LN1@OnSelChang
$LN5@OnSelChang:

; 1690 : 	}
; 1691 : 	case 1:
; 1692 : 	{
; 1693 : 		SetDlgItemText(IDC_STATIC_SHU2, TEXT("时间2"));

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05MHNGJPAF@?J?$LB?$LM?d2@
  00050	68 79 23 00 00	 push	 9081			; 00002379H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1694 : 		break;

  0005d	eb 26		 jmp	 SHORT $LN1@OnSelChang
$LN6@OnSelChang:

; 1695 : 	}
; 1696 : 	case 2:
; 1697 : 	{
; 1698 : 		SetDlgItemText(IDC_STATIC_SHU2, TEXT("圈数2"));

  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05FHNBCCD@?H?$KG?J?$PN2@
  00064	68 79 23 00 00	 push	 9081			; 00002379H
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1699 : 		break;

  00071	eb 12		 jmp	 SHORT $LN1@OnSelChang
$LN7@OnSelChang:

; 1700 : 	}
; 1701 : 	case 3:
; 1702 : 	{
; 1703 : 		SetDlgItemText(IDC_STATIC_SHU2, TEXT("积分2"));

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_05GKEFECNG@?$LL?$PN?$LH?V2@
  00078	68 79 23 00 00	 push	 9081			; 00002379H
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN1@OnSelChang:

; 1704 : 		break;
; 1705 : 	}
; 1706 : 	}
; 1707 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN9@OnSelChang:
  0008c	00 00 00 00	 DD	 $LN4@OnSelChang
  00090	00 00 00 00	 DD	 $LN5@OnSelChang
  00094	00 00 00 00	 DD	 $LN6@OnSelChang
  00098	00 00 00 00	 DD	 $LN7@OnSelChang
?OnSelChangeGameMode2@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnSelChangeGameMode2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelChangeGameMode1@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
tv77 = -76						; size = 4
_pGameMode$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelChangeGameMode1@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnSelChangeGameMode1, COMDAT
; _this$ = ecx

; 1654 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1655 : 	CComboBox *pGameMode = (CComboBox*)GetDlgItem(IDC_COMBO_SELECT_MODE1);

  0000c	68 71 23 00 00	 push	 9073			; 00002371H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pGameMode$[ebp], eax

; 1656 : 	switch (pGameMode->GetCurSel())

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pGameMode$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00024	89 45 b4	 mov	 DWORD PTR tv77[ebp], eax
  00027	83 7d b4 03	 cmp	 DWORD PTR tv77[ebp], 3
  0002b	77 58		 ja	 SHORT $LN1@OnSelChang
  0002d	8b 45 b4	 mov	 eax, DWORD PTR tv77[ebp]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN9@OnSelChang[eax*4]
$LN4@OnSelChang:

; 1657 : 	{
; 1658 : 		case 0:
; 1659 : 		{
; 1660 : 			SetDlgItemText(IDC_STATIC_SHU1, TEXT("局数1"));

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_05KPJEPPD@?$LO?V?J?$PN1@
  0003c	68 78 23 00 00	 push	 9080			; 00002378H
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1661 : 			break;

  00049	eb 3a		 jmp	 SHORT $LN1@OnSelChang
$LN5@OnSelChang:

; 1662 : 		}
; 1663 : 		case 1:
; 1664 : 		{
; 1665 : 			SetDlgItemText(IDC_STATIC_SHU1, TEXT("时间1"));

  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_05OMPLMMMG@?J?$LB?$LM?d1@
  00050	68 78 23 00 00	 push	 9080			; 00002378H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1666 : 			break;

  0005d	eb 26		 jmp	 SHORT $LN1@OnSelChang
$LN6@OnSelChang:

; 1667 : 		}
; 1668 : 		case 2:
; 1669 : 		{
; 1670 : 			SetDlgItemText(IDC_STATIC_SHU1, TEXT("圈数1"));

  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05COFAEBOA@?H?$KG?J?$PN1@
  00064	68 78 23 00 00	 push	 9080			; 00002378H
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1671 : 			break;

  00071	eb 12		 jmp	 SHORT $LN1@OnSelChang
$LN7@OnSelChang:

; 1672 : 		}
; 1673 : 		case 3:
; 1674 : 		{
; 1675 : 			SetDlgItemText(IDC_STATIC_SHU1, TEXT("积分1"));

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_05EBGIBBBF@?$LL?$PN?$LH?V1@
  00078	68 78 23 00 00	 push	 9080			; 00002378H
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN1@OnSelChang:

; 1676 : 			break;
; 1677 : 		}
; 1678 : 	}	
; 1679 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN9@OnSelChang:
  0008c	00 00 00 00	 DD	 $LN4@OnSelChang
  00090	00 00 00 00	 DD	 $LN5@OnSelChang
  00094	00 00 00 00	 DD	 $LN6@OnSelChang
  00098	00 00 00 00	 DD	 $LN7@OnSelChang
?OnSelChangeGameMode1@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnSelChangeGameMode1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedNotJoinRadio@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
_nMaxRoom$ = -8						; size = 4
_this$ = -4						; size = 4
?OnBnClickedNotJoinRadio@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnBnClickedNotJoinRadio, COMDAT
; _this$ = ecx

; 1646 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1647 : 	((CEdit*)GetDlgItem(IDC_EDIT_MAX_ROOM))->EnableWindow(true);

  0000c	6a 01		 push	 1
  0000e	68 4d 23 00 00	 push	 9037			; 0000234dH
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1648 : 	int nMaxRoom = GetDlgItemInt(IDC_EDIT_MAX_ROOM);

  00022	6a 01		 push	 1
  00024	6a 00		 push	 0
  00026	68 4d 23 00 00	 push	 9037			; 0000234dH
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00033	89 45 f8	 mov	 DWORD PTR _nMaxRoom$[ebp], eax

; 1649 : 	if (nMaxRoom == 0)  SetDlgItemInt(IDC_EDIT_MAX_ROOM, 3);

  00036	83 7d f8 00	 cmp	 DWORD PTR _nMaxRoom$[ebp], 0
  0003a	75 11		 jne	 SHORT $LN1@OnBnClicke
  0003c	6a 01		 push	 1
  0003e	6a 03		 push	 3
  00040	68 4d 23 00 00	 push	 9037			; 0000234dH
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN1@OnBnClicke:

; 1650 : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?OnBnClickedNotJoinRadio@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnBnClickedNotJoinRadio
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedJoinGameRadio@CDlgServerOptionItem5@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedJoinGameRadio@CDlgServerOptionItem5@@QAEXXZ PROC ; CDlgServerOptionItem5::OnBnClickedJoinGameRadio, COMDAT
; _this$ = ecx

; 1639 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1640 : 	((CEdit*)GetDlgItem(IDC_EDIT_MAX_ROOM))->EnableWindow(false);

  0000c	6a 00		 push	 0
  0000e	68 4d 23 00 00	 push	 9037			; 0000234dH
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1641 : 	return;
; 1642 : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?OnBnClickedJoinGameRadio@CDlgServerOptionItem5@@QAEXXZ ENDP ; CDlgServerOptionItem5::OnBnClickedJoinGameRadio
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItem5@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItem5@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem5::GetMessageMap, COMDAT
; _this$ = ecx

; 64   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem5, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem5::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItem5@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem5::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem5::GetThisMessageMap, COMDAT

; 64   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem5, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 65   : 	ON_BN_CLICKED(IDC_RADIO_JOIN_GAME, OnBnClickedJoinGameRadio)
; 66   : 	ON_BN_CLICKED(IDC_RADIO_NOT_JOIN_GAME, OnBnClickedNotJoinRadio)
; 67   : 
; 68   : 	ON_CBN_SELCHANGE(IDC_COMBO_SELECT_MODE1, OnSelChangeGameMode1)
; 69   : 	ON_CBN_SELCHANGE(IDC_COMBO_SELECT_MODE2, OnSelChangeGameMode2)
; 70   : 	ON_CBN_SELCHANGE(IDC_COMBO_SELECT_MODE3, OnSelChangeGameMode3)
; 71   : 	ON_CBN_SELCHANGE(IDC_COMBO_SELECT_MODE4, OnSelChangeGameMode4)
; 72   : 	ON_CBN_SELCHANGE(IDC_COMBO_SELECT_MODE5, OnSelChangeGameMode5)
; 73   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItem5@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem5::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerOptionItem5@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerOptionItem5@@UAEXHH@Z PROC	; CDlgServerOptionItem5::RectifyControl, COMDAT
; _this$ = ecx

; 1633 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1634 : 	return;
; 1635 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgServerOptionItem5@@UAEXHH@Z ENDP	; CDlgServerOptionItem5::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerOptionItem5@@UAE_NXZ
_TEXT	SEGMENT
_pGameMode$1 = -12					; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerOptionItem5@@UAE_NXZ PROC	; CDlgServerOptionItem5::SaveInputInfo, COMDAT
; _this$ = ecx

; 1468 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1469 : 	//属性配置
; 1470 : 	m_pPersonalRoomOption->wCanCreateCount=GetDlgItemInt(IDC_EDIT_MAX_ROOM);

  0000c	6a 01		 push	 1
  0000e	6a 00		 push	 0
  00010	68 4d 23 00 00	 push	 9037			; 0000234dH
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00026	66 89 42 53	 mov	 WORD PTR [edx+83], ax

; 1471 : 	m_pPersonalRoomOption->dwTimeAfterBeginCount=GetDlgItemInt(IDC_EDIT_DISSUME_TIME_AFTER_BEGIN);

  0002a	6a 01		 push	 1
  0002c	6a 00		 push	 0
  0002e	68 4e 23 00 00	 push	 9038			; 0000234eH
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00044	89 42 5d	 mov	 DWORD PTR [edx+93], eax

; 1472 : 	m_pPersonalRoomOption->dwTimeOffLineCount=GetDlgItemInt(IDC_EDIT_DISSUME_TIME_OFFLINE);

  00047	6a 01		 push	 1
  00049	6a 00		 push	 0
  0004b	68 50 23 00 00	 push	 9040			; 00002350H
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  00061	89 42 61	 mov	 DWORD PTR [edx+97], eax

; 1473 : 	m_pPersonalRoomOption->dwTimeNotBeginGame=GetDlgItemInt(IDC_EDIT_DISSUME_TIME_BEFORE_BEGIN);

  00064	6a 01		 push	 1
  00066	6a 00		 push	 0
  00068	68 51 23 00 00	 push	 9041			; 00002351H
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  0007e	89 42 65	 mov	 DWORD PTR [edx+101], eax

; 1474 : 	m_pPersonalRoomOption->dwTimeAfterCreateRoom=GetDlgItemInt(IDC_EDIT_DISSUME_TIME_AFTER_CREATE);

  00081	6a 01		 push	 1
  00083	6a 00		 push	 0
  00085	68 54 23 00 00	 push	 9044			; 00002354H
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  0009b	89 42 69	 mov	 DWORD PTR [edx+105], eax

; 1475 : 	//m_pPersonalRoomOption->lFeeCardOrBeanCount   =   GetDlgItemInt(IDC_EDIT_FEE_BEAN_OR_ROOMCARD);
; 1476 : 	m_pPersonalRoomOption->lPersonalRoomTax = GetDlgItemInt(IDC_PERSONAL_ROOM_TAX);

  0009e	6a 01		 push	 1
  000a0	6a 00		 push	 0
  000a2	68 41 23 00 00	 push	 9025			; 00002341H
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000af	33 c9		 xor	 ecx, ecx
  000b1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b4	8b 92 b4 00 00
	00		 mov	 edx, DWORD PTR [edx+180]
  000ba	89 42 0b	 mov	 DWORD PTR [edx+11], eax
  000bd	89 4a 0f	 mov	 DWORD PTR [edx+15], ecx

; 1477 : 	m_pPersonalRoomOption->wBeginFreeTime = GetDlgItemInt(IDC_EDIT_BEGIN_FREE_TIME);

  000c0	6a 01		 push	 1
  000c2	6a 00		 push	 0
  000c4	68 6e 23 00 00	 push	 9070			; 0000236eH
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  000da	66 89 42 6d	 mov	 WORD PTR [edx+109], ax

; 1478 : 	m_pPersonalRoomOption->wEndFreeTime = GetDlgItemInt(IDC_EDIT_END_FREE_TIME);

  000de	6a 01		 push	 1
  000e0	6a 00		 push	 0
  000e2	68 6f 23 00 00	 push	 9071			; 0000236fH
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 91 b4 00 00
	00		 mov	 edx, DWORD PTR [ecx+180]
  000f8	66 89 42 6f	 mov	 WORD PTR [edx+111], ax

; 1479 : 
; 1480 : 	//0 表示 消耗游戏豆  1 表示 消耗房卡	
; 1481 : 	/*if (((CButton *)GetDlgItem(IDC_RADIO_COST_BEAN))->GetCheck()==BST_CHECKED)
; 1482 : 	{
; 1483 : 		m_pPersonalRoomOption->cbCardOrBean=0;
; 1484 : 	}
; 1485 : 	else
; 1486 : 	{
; 1487 : 		m_pPersonalRoomOption->cbCardOrBean=1;
; 1488 : 	}
; 1489 : 
; 1490 : 	if (((CButton *)GetDlgItem(IDC_RADIO_COST_ROOM_CARD))->GetCheck()==BST_CHECKED)
; 1491 : 	{
; 1492 : 		m_pPersonalRoomOption->cbCardOrBean=1;
; 1493 : 	}
; 1494 : 	else
; 1495 : 	{
; 1496 : 		m_pPersonalRoomOption->cbCardOrBean=0;
; 1497 : 	}*/
; 1498 : 
; 1499 : 	// 0 表示不参与游戏  1 标识参与游戏
; 1500 : 	if (((CButton *)GetDlgItem(IDC_RADIO_JOIN_GAME))->GetCheck()==BST_CHECKED)

  000fc	68 40 23 00 00	 push	 9024			; 00002340H
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00109	8b c8		 mov	 ecx, eax
  0010b	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00110	83 f8 01	 cmp	 eax, 1
  00113	75 0e		 jne	 SHORT $LN5@SaveInputI

; 1501 : 	{
; 1502 : 		m_pPersonalRoomOption->cbIsJoinGame = 1;

  00115	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00118	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0011e	c6 01 01	 mov	 BYTE PTR [ecx], 1

; 1503 : 	}
; 1504 : 	else

  00121	eb 0c		 jmp	 SHORT $LN6@SaveInputI
$LN5@SaveInputI:

; 1505 : 	{
; 1506 : 		m_pPersonalRoomOption->cbIsJoinGame = 0;

  00123	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00126	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0012c	c6 01 00	 mov	 BYTE PTR [ecx], 0
$LN6@SaveInputI:

; 1507 : 	}
; 1508 : 
; 1509 : 	if (((CButton *)GetDlgItem(IDC_RADIO_NOT_JOIN_GAME))->GetCheck()==BST_CHECKED)

  0012f	68 45 23 00 00	 push	 9029			; 00002345H
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0013c	8b c8		 mov	 ecx, eax
  0013e	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00143	83 f8 01	 cmp	 eax, 1
  00146	75 0e		 jne	 SHORT $LN7@SaveInputI

; 1510 : 	{
; 1511 : 		m_pPersonalRoomOption->cbIsJoinGame = 0;

  00148	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00151	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 1512 : 	}
; 1513 : 	else

  00154	eb 0c		 jmp	 SHORT $LN8@SaveInputI
$LN7@SaveInputI:

; 1514 : 	{
; 1515 : 		m_pPersonalRoomOption->cbIsJoinGame = 1;

  00156	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00159	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0015f	c6 01 01	 mov	 BYTE PTR [ecx], 1
$LN8@SaveInputI:

; 1516 : 	}
; 1517 : 	
; 1518 : 	//权限判断
; 1519 : 	if(	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_0))->GetCheck()==BST_CHECKED)

  00162	68 53 23 00 00	 push	 9043			; 00002353H
  00167	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0016f	8b c8		 mov	 ecx, eax
  00171	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00176	83 f8 01	 cmp	 eax, 1
  00179	75 0c		 jne	 SHORT $LN9@SaveInputI

; 1520 : 	{
; 1521 : 		m_pCreateRoomRightAndFee->cbCreateRight = 0;

  0017b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017e	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00184	c6 01 00	 mov	 BYTE PTR [ecx], 0
$LN9@SaveInputI:

; 1522 : 	}
; 1523 : 
; 1524 : 	//权限判断
; 1525 : 	if(	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_1))->GetCheck()==BST_CHECKED)

  00187	68 55 23 00 00	 push	 9045			; 00002355H
  0018c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00194	8b c8		 mov	 ecx, eax
  00196	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0019b	83 f8 01	 cmp	 eax, 1
  0019e	75 0c		 jne	 SHORT $LN10@SaveInputI

; 1526 : 	{
; 1527 : 		m_pCreateRoomRightAndFee->cbCreateRight = 1;

  001a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  001a9	c6 01 01	 mov	 BYTE PTR [ecx], 1
$LN10@SaveInputI:

; 1528 : 	}
; 1529 : 
; 1530 : 	//权限判断
; 1531 : 	if(	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_2))->GetCheck()==BST_CHECKED)

  001ac	68 56 23 00 00	 push	 9046			; 00002356H
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001b9	8b c8		 mov	 ecx, eax
  001bb	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  001c0	83 f8 01	 cmp	 eax, 1
  001c3	75 0c		 jne	 SHORT $LN11@SaveInputI

; 1532 : 	{
; 1533 : 		m_pCreateRoomRightAndFee->cbCreateRight = 2;

  001c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  001ce	c6 01 02	 mov	 BYTE PTR [ecx], 2
$LN11@SaveInputI:

; 1534 : 	}
; 1535 : 
; 1536 : 	//权限判断
; 1537 : 	if(	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_3))->GetCheck()==BST_CHECKED)

  001d1	68 57 23 00 00	 push	 9047			; 00002357H
  001d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001de	8b c8		 mov	 ecx, eax
  001e0	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  001e5	83 f8 01	 cmp	 eax, 1
  001e8	75 0c		 jne	 SHORT $LN12@SaveInputI

; 1538 : 	{
; 1539 : 		m_pCreateRoomRightAndFee->cbCreateRight = 3;

  001ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ed	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  001f3	c6 01 03	 mov	 BYTE PTR [ecx], 3
$LN12@SaveInputI:

; 1540 : 	}
; 1541 : 
; 1542 : 	//权限判断
; 1543 : 	if(	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_4))->GetCheck()==BST_CHECKED)

  001f6	68 58 23 00 00	 push	 9048			; 00002358H
  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00203	8b c8		 mov	 ecx, eax
  00205	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0020a	83 f8 01	 cmp	 eax, 1
  0020d	75 0c		 jne	 SHORT $LN13@SaveInputI

; 1544 : 	{
; 1545 : 		m_pCreateRoomRightAndFee->cbCreateRight = 4;

  0020f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00212	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00218	c6 01 04	 mov	 BYTE PTR [ecx], 4
$LN13@SaveInputI:

; 1546 : 	}
; 1547 : 
; 1548 : 	//权限判断
; 1549 : 	if(	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_5))->GetCheck()==BST_CHECKED)

  0021b	68 59 23 00 00	 push	 9049			; 00002359H
  00220	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00223	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00228	8b c8		 mov	 ecx, eax
  0022a	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0022f	83 f8 01	 cmp	 eax, 1
  00232	75 0c		 jne	 SHORT $LN14@SaveInputI

; 1550 : 	{
; 1551 : 		m_pCreateRoomRightAndFee->cbCreateRight = 5;

  00234	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00237	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  0023d	c6 01 05	 mov	 BYTE PTR [ecx], 5
$LN14@SaveInputI:

; 1552 : 	}
; 1553 : 
; 1554 : 	//房间费用配置
; 1555 : 	for (int i = 0; i < FEE_OPTION_COUNT; i++)

  00240	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00247	eb 09		 jmp	 SHORT $LN4@SaveInputI
$LN2@SaveInputI:
  00249	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0024c	83 c0 01	 add	 eax, 1
  0024f	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@SaveInputI:
  00252	83 7d f8 05	 cmp	 DWORD PTR _i$2[ebp], 5
  00256	0f 8d ce 00 00
	00		 jge	 $LN3@SaveInputI

; 1556 : 	{
; 1557 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPlayTurnLimit = GetDlgItemInt(IDC_EDIT_TURN_NUM + i * 3);

  0025c	6a 01		 push	 1
  0025e	6a 00		 push	 0
  00260	6b 45 f8 03	 imul	 eax, DWORD PTR _i$2[ebp], 3
  00264	05 5a 23 00 00	 add	 eax, 9050		; 0000235aH
  00269	50		 push	 eax
  0026a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00272	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00275	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  0027b	6b 4d f8 13	 imul	 ecx, DWORD PTR _i$2[ebp], 19
  0027f	89 44 0a 16	 mov	 DWORD PTR [edx+ecx+22], eax

; 1558 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPayFee = GetDlgItemInt(IDC_EDIT_CREATE_FEE + i * 3);

  00283	6a 01		 push	 1
  00285	6a 00		 push	 0
  00287	6b 45 f8 03	 imul	 eax, DWORD PTR _i$2[ebp], 3
  0028b	05 5b 23 00 00	 add	 eax, 9051		; 0000235bH
  00290	50		 push	 eax
  00291	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00294	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00299	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029c	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  002a2	6b 4d f8 13	 imul	 ecx, DWORD PTR _i$2[ebp], 19
  002a6	89 44 0a 1e	 mov	 DWORD PTR [edx+ecx+30], eax

; 1559 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].wAAPayFee = GetDlgItemInt(IDC_EDIT_CREATE_AA_FEE6 + i);

  002aa	6a 01		 push	 1
  002ac	6a 00		 push	 0
  002ae	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  002b1	05 69 23 00 00	 add	 eax, 9065		; 00002369H
  002b6	50		 push	 eax
  002b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ba	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  002bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c2	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  002c8	6b 4d f8 13	 imul	 ecx, DWORD PTR _i$2[ebp], 19
  002cc	66 89 44 0a 22	 mov	 WORD PTR [edx+ecx+34], ax

; 1560 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwIniScore = GetDlgItemInt(IDC_EDIT_ROOM_INISCORE + i * 3);

  002d1	6a 01		 push	 1
  002d3	6a 00		 push	 0
  002d5	6b 45 f8 03	 imul	 eax, DWORD PTR _i$2[ebp], 3
  002d9	05 5c 23 00 00	 add	 eax, 9052		; 0000235cH
  002de	50		 push	 eax
  002df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e2	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  002e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ea	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  002f0	6b 4d f8 13	 imul	 ecx, DWORD PTR _i$2[ebp], 19
  002f4	89 44 0a 24	 mov	 DWORD PTR [edx+ecx+36], eax

; 1561 : 		
; 1562 : 		CComboBox * pGameMode = (CComboBox *)GetDlgItem(IDC_COMBO_SELECT_MODE1 + i);

  002f8	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  002fb	05 71 23 00 00	 add	 eax, 9073		; 00002371H
  00300	50		 push	 eax
  00301	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00304	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00309	89 45 f4	 mov	 DWORD PTR _pGameMode$1[ebp], eax

; 1563 : 		m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].cbGameMode = pGameMode->GetCurSel();

  0030c	8b 4d f4	 mov	 ecx, DWORD PTR _pGameMode$1[ebp]
  0030f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00314	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  0031d	6b 4d f8 13	 imul	 ecx, DWORD PTR _i$2[ebp], 19
  00321	88 44 0a 15	 mov	 BYTE PTR [edx+ecx+21], al

; 1564 : 	}

  00325	e9 1f ff ff ff	 jmp	 $LN2@SaveInputI
$LN3@SaveInputI:

; 1565 : 
; 1566 : 	return true;

  0032a	b0 01		 mov	 al, 1

; 1567 : }

  0032c	5f		 pop	 edi
  0032d	5e		 pop	 esi
  0032e	5b		 pop	 ebx
  0032f	8b e5		 mov	 esp, ebp
  00331	5d		 pop	 ebp
  00332	c3		 ret	 0
?SaveInputInfo@CDlgServerOptionItem5@@UAE_NXZ ENDP	; CDlgServerOptionItem5::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerOptionItem5@@MAEHXZ
_TEXT	SEGMENT
tv719 = -124						; size = 4
tv484 = -124						; size = 4
tv340 = -124						; size = 4
_iData$1 = -56						; size = 4
_j$2 = -52						; size = 4
_iCurSelect$3 = -48					; size = 4
_cbGameMode$4 = -41					; size = 1
_pGameMode$5 = -40					; size = 4
_i$6 = -36						; size = 4
_pGameMode$7 = -32					; size = 4
_i$8 = -28						; size = 4
_pszGameMode$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnInitDialog@CDlgServerOptionItem5@@MAEHXZ PROC	; CDlgServerOptionItem5::OnInitDialog, COMDAT
; _this$ = ecx

; 1270 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1271 : 	__super::OnInitDialog();

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1272 : 	
; 1273 : 	GetPersonalRoomInfo(m_pGameServiceAttrib->wKindID);

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00027	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0002a	52		 push	 edx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetPersonalRoomInfo@CDlgServerOptionItem5@@QAE_NK@Z ; CDlgServerOptionItem5::GetPersonalRoomInfo

; 1274 : 
; 1275 : 	if (m_pPersonalRoomOption->wCanCreateCount==0)	SetDlgItemInt(IDC_EDIT_MAX_ROOM, 3);

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0003c	0f b7 51 53	 movzx	 edx, WORD PTR [ecx+83]
  00040	85 d2		 test	 edx, edx
  00042	75 13		 jne	 SHORT $LN15@OnInitDial
  00044	6a 01		 push	 1
  00046	6a 03		 push	 3
  00048	68 4d 23 00 00	 push	 9037			; 0000234dH
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
  00055	eb 1d		 jmp	 SHORT $LN16@OnInitDial
$LN15@OnInitDial:

; 1276 : 	else SetDlgItemInt(IDC_EDIT_MAX_ROOM, m_pPersonalRoomOption->wCanCreateCount);

  00057	6a 01		 push	 1
  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00062	0f b7 51 53	 movzx	 edx, WORD PTR [ecx+83]
  00066	52		 push	 edx
  00067	68 4d 23 00 00	 push	 9037			; 0000234dH
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN16@OnInitDial:

; 1277 : 	if (m_pPersonalRoomOption->dwTimeAfterBeginCount > 0)

  00074	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0007d	83 79 5d 00	 cmp	 DWORD PTR [ecx+93], 0
  00081	76 1e		 jbe	 SHORT $LN17@OnInitDial

; 1278 : 	{
; 1279 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_AFTER_BEGIN, m_pPersonalRoomOption->dwTimeAfterBeginCount);

  00083	6a 01		 push	 1
  00085	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00088	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0008e	8b 51 5d	 mov	 edx, DWORD PTR [ecx+93]
  00091	52		 push	 edx
  00092	68 4e 23 00 00	 push	 9038			; 0000234eH
  00097	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1280 : 	}
; 1281 : 	else

  0009f	eb 11		 jmp	 SHORT $LN18@OnInitDial
$LN17@OnInitDial:

; 1282 : 	{
; 1283 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_AFTER_BEGIN, 120);

  000a1	6a 01		 push	 1
  000a3	6a 78		 push	 120			; 00000078H
  000a5	68 4e 23 00 00	 push	 9038			; 0000234eH
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN18@OnInitDial:

; 1284 : 	}
; 1285 : 	
; 1286 : 	if (m_pPersonalRoomOption->dwTimeOffLineCount > 0)

  000b2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  000bb	83 79 61 00	 cmp	 DWORD PTR [ecx+97], 0
  000bf	76 1e		 jbe	 SHORT $LN19@OnInitDial

; 1287 : 	{
; 1288 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_OFFLINE, m_pPersonalRoomOption->dwTimeOffLineCount);

  000c1	6a 01		 push	 1
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  000cc	8b 51 61	 mov	 edx, DWORD PTR [ecx+97]
  000cf	52		 push	 edx
  000d0	68 50 23 00 00	 push	 9040			; 00002350H
  000d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1289 : 	}
; 1290 : 	else

  000dd	eb 11		 jmp	 SHORT $LN20@OnInitDial
$LN19@OnInitDial:

; 1291 : 	{
; 1292 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_OFFLINE, 120);

  000df	6a 01		 push	 1
  000e1	6a 78		 push	 120			; 00000078H
  000e3	68 50 23 00 00	 push	 9040			; 00002350H
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN20@OnInitDial:

; 1293 : 	}
; 1294 : 
; 1295 : 	if (m_pPersonalRoomOption->dwTimeNotBeginGame > 0)

  000f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  000f9	83 79 65 00	 cmp	 DWORD PTR [ecx+101], 0
  000fd	76 1e		 jbe	 SHORT $LN21@OnInitDial

; 1296 : 	{
; 1297 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_BEFORE_BEGIN, m_pPersonalRoomOption->dwTimeNotBeginGame);

  000ff	6a 01		 push	 1
  00101	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0010a	8b 51 65	 mov	 edx, DWORD PTR [ecx+101]
  0010d	52		 push	 edx
  0010e	68 51 23 00 00	 push	 9041			; 00002351H
  00113	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1298 : 	}
; 1299 : 	else

  0011b	eb 11		 jmp	 SHORT $LN22@OnInitDial
$LN21@OnInitDial:

; 1300 : 	{
; 1301 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_BEFORE_BEGIN, 120);

  0011d	6a 01		 push	 1
  0011f	6a 78		 push	 120			; 00000078H
  00121	68 51 23 00 00	 push	 9041			; 00002351H
  00126	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN22@OnInitDial:

; 1302 : 	}
; 1303 : 
; 1304 : 	if (m_pPersonalRoomOption->dwTimeAfterCreateRoom > 0)

  0012e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00131	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00137	83 79 69 00	 cmp	 DWORD PTR [ecx+105], 0
  0013b	76 1e		 jbe	 SHORT $LN23@OnInitDial

; 1305 : 	{
; 1306 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_AFTER_CREATE, m_pPersonalRoomOption->dwTimeAfterCreateRoom);

  0013d	6a 01		 push	 1
  0013f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00148	8b 51 69	 mov	 edx, DWORD PTR [ecx+105]
  0014b	52		 push	 edx
  0014c	68 54 23 00 00	 push	 9044			; 00002354H
  00151	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1307 : 	}
; 1308 : 	else

  00159	eb 11		 jmp	 SHORT $LN24@OnInitDial
$LN23@OnInitDial:

; 1309 : 	{
; 1310 : 		SetDlgItemInt(IDC_EDIT_DISSUME_TIME_AFTER_CREATE, 120);

  0015b	6a 01		 push	 1
  0015d	6a 78		 push	 120			; 00000078H
  0015f	68 54 23 00 00	 push	 9044			; 00002354H
  00164	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN24@OnInitDial:

; 1311 : 	}
; 1312 : 	SetDlgItemInt(IDC_EDIT_BEGIN_FREE_TIME, m_pPersonalRoomOption->wBeginFreeTime);

  0016c	6a 01		 push	 1
  0016e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00171	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00177	0f b7 51 6d	 movzx	 edx, WORD PTR [ecx+109]
  0017b	52		 push	 edx
  0017c	68 6e 23 00 00	 push	 9070			; 0000236eH
  00181	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00184	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1313 : 	SetDlgItemInt(IDC_EDIT_END_FREE_TIME, m_pPersonalRoomOption->wEndFreeTime);

  00189	6a 01		 push	 1
  0018b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018e	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00194	0f b7 51 6f	 movzx	 edx, WORD PTR [ecx+111]
  00198	52		 push	 edx
  00199	68 6f 23 00 00	 push	 9071			; 0000236fH
  0019e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1314 : 	
; 1315 : 	((CButton *)GetDlgItem(IDC_RADIO_COST_ROOM_CARD))->SetCheck(true);

  001a6	6a 01		 push	 1
  001a8	68 49 23 00 00	 push	 9033			; 00002349H
  001ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001b5	8b c8		 mov	 ecx, eax
  001b7	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1316 : 
; 1317 : 	((CButton *)GetDlgItem(IDC_RADIO_JOIN_GAME))->SetCheck(m_pPersonalRoomOption->cbIsJoinGame);

  001bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001bf	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  001c5	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  001c8	52		 push	 edx
  001c9	68 40 23 00 00	 push	 9024			; 00002340H
  001ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d1	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001d6	8b c8		 mov	 ecx, eax
  001d8	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1318 : 	((CButton *)GetDlgItem(IDC_RADIO_NOT_JOIN_GAME))->SetCheck(!m_pPersonalRoomOption->cbIsJoinGame);

  001dd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e0	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  001e6	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  001e9	85 d2		 test	 edx, edx
  001eb	75 09		 jne	 SHORT $LN44@OnInitDial
  001ed	c7 45 84 01 00
	00 00		 mov	 DWORD PTR tv340[ebp], 1
  001f4	eb 07		 jmp	 SHORT $LN45@OnInitDial
$LN44@OnInitDial:
  001f6	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv340[ebp], 0
$LN45@OnInitDial:
  001fd	8b 45 84	 mov	 eax, DWORD PTR tv340[ebp]
  00200	50		 push	 eax
  00201	68 45 23 00 00	 push	 9029			; 00002345H
  00206	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00209	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0020e	8b c8		 mov	 ecx, eax
  00210	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1319 : 	SetDlgItemInt(IDC_PERSONAL_ROOM_TAX, static_cast<DWORD>(m_pPersonalRoomOption->lPersonalRoomTax));

  00215	6a 01		 push	 1
  00217	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0021a	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00220	8b 51 0b	 mov	 edx, DWORD PTR [ecx+11]
  00223	52		 push	 edx
  00224	68 41 23 00 00	 push	 9025			; 00002341H
  00229	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1320 : 	if(m_pPersonalRoomOption->cbIsJoinGame)

  00231	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00234	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0023a	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0023d	85 d2		 test	 edx, edx
  0023f	74 18		 je	 SHORT $LN25@OnInitDial

; 1321 : 	{
; 1322 : 		((CEdit*)GetDlgItem(IDC_EDIT_MAX_ROOM))->EnableWindow(false);

  00241	6a 00		 push	 0
  00243	68 4d 23 00 00	 push	 9037			; 0000234dH
  00248	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0024b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00250	8b c8		 mov	 ecx, eax
  00252	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1323 : 	}
; 1324 : 	else

  00257	eb 16		 jmp	 SHORT $LN26@OnInitDial
$LN25@OnInitDial:

; 1325 : 	{
; 1326 : 		((CEdit*)GetDlgItem(IDC_EDIT_MAX_ROOM))->EnableWindow(true);

  00259	6a 01		 push	 1
  0025b	68 4d 23 00 00	 push	 9037			; 0000234dH
  00260	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00263	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00268	8b c8		 mov	 ecx, eax
  0026a	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN26@OnInitDial:

; 1327 : 	}
; 1328 : 	//SetDlgItemInt(IDC_EDIT_FEE_BEAN_OR_ROOMCARD, static_cast<DWORD>(m_pPersonalRoomOption->lFeeCardOrBeanCount));
; 1329 : 	
; 1330 : 	//创建房间等级
; 1331 : 	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_0))->SetCheck(false);

  0026f	6a 00		 push	 0
  00271	68 53 23 00 00	 push	 9043			; 00002353H
  00276	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0027e	8b c8		 mov	 ecx, eax
  00280	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1332 : 	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_1))->SetCheck(false);

  00285	6a 00		 push	 0
  00287	68 55 23 00 00	 push	 9045			; 00002355H
  0028c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0028f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00294	8b c8		 mov	 ecx, eax
  00296	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1333 : 	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_2))->SetCheck(false);

  0029b	6a 00		 push	 0
  0029d	68 56 23 00 00	 push	 9046			; 00002356H
  002a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002aa	8b c8		 mov	 ecx, eax
  002ac	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1334 : 	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_3))->SetCheck(false);

  002b1	6a 00		 push	 0
  002b3	68 57 23 00 00	 push	 9047			; 00002357H
  002b8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002bb	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002c0	8b c8		 mov	 ecx, eax
  002c2	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1335 : 	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_4))->SetCheck(false);

  002c7	6a 00		 push	 0
  002c9	68 58 23 00 00	 push	 9048			; 00002358H
  002ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002d1	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002d6	8b c8		 mov	 ecx, eax
  002d8	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1336 : 	((CButton *)GetDlgItem(IDC_RADIO_LEVEL_5))->SetCheck(false);

  002dd	6a 00		 push	 0
  002df	68 59 23 00 00	 push	 9049			; 00002359H
  002e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e7	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002ec	8b c8		 mov	 ecx, eax
  002ee	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1337 : 	switch (m_pCreateRoomRightAndFee->cbCreateRight)

  002f3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002f6	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  002fc	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  002ff	89 55 84	 mov	 DWORD PTR tv484[ebp], edx
  00302	83 7d 84 05	 cmp	 DWORD PTR tv484[ebp], 5
  00306	0f 87 98 00 00
	00		 ja	 $LN2@OnInitDial
  0030c	8b 45 84	 mov	 eax, DWORD PTR tv484[ebp]
  0030f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN46@OnInitDial[eax*4]
$LN27@OnInitDial:

; 1338 : 	{
; 1339 : 	case 0:
; 1340 : 		{
; 1341 : 			((CButton *)GetDlgItem(IDC_RADIO_LEVEL_0))->SetCheck(TRUE);

  00316	6a 01		 push	 1
  00318	68 53 23 00 00	 push	 9043			; 00002353H
  0031d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00320	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00325	8b c8		 mov	 ecx, eax
  00327	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1342 : 			break;

  0032c	eb 76		 jmp	 SHORT $LN2@OnInitDial
$LN28@OnInitDial:

; 1343 : 		}
; 1344 : 	case 1:
; 1345 : 		{
; 1346 : 			((CButton *)GetDlgItem(IDC_RADIO_LEVEL_1))->SetCheck(TRUE);

  0032e	6a 01		 push	 1
  00330	68 55 23 00 00	 push	 9045			; 00002355H
  00335	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00338	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0033d	8b c8		 mov	 ecx, eax
  0033f	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1347 : 			break;

  00344	eb 5e		 jmp	 SHORT $LN2@OnInitDial
$LN29@OnInitDial:

; 1348 : 		}
; 1349 : 	case 2:
; 1350 : 		{
; 1351 : 			((CButton *)GetDlgItem(IDC_RADIO_LEVEL_2))->SetCheck(TRUE);

  00346	6a 01		 push	 1
  00348	68 56 23 00 00	 push	 9046			; 00002356H
  0034d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00350	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00355	8b c8		 mov	 ecx, eax
  00357	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1352 : 			break;

  0035c	eb 46		 jmp	 SHORT $LN2@OnInitDial
$LN30@OnInitDial:

; 1353 : 		}
; 1354 : 	case 3:
; 1355 : 		{
; 1356 : 			((CButton *)GetDlgItem(IDC_RADIO_LEVEL_3))->SetCheck(TRUE);

  0035e	6a 01		 push	 1
  00360	68 57 23 00 00	 push	 9047			; 00002357H
  00365	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00368	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0036d	8b c8		 mov	 ecx, eax
  0036f	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1357 : 			break;

  00374	eb 2e		 jmp	 SHORT $LN2@OnInitDial
$LN31@OnInitDial:

; 1358 : 		}
; 1359 : 	case 4:
; 1360 : 		{
; 1361 : 			((CButton *)GetDlgItem(IDC_RADIO_LEVEL_4))->SetCheck(TRUE);

  00376	6a 01		 push	 1
  00378	68 58 23 00 00	 push	 9048			; 00002358H
  0037d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00380	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00385	8b c8		 mov	 ecx, eax
  00387	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1362 : 			break;

  0038c	eb 16		 jmp	 SHORT $LN2@OnInitDial
$LN32@OnInitDial:

; 1363 : 		}
; 1364 : 	case 5:
; 1365 : 		{
; 1366 : 			((CButton *)GetDlgItem(IDC_RADIO_LEVEL_5))->SetCheck(TRUE);

  0038e	6a 01		 push	 1
  00390	68 59 23 00 00	 push	 9049			; 00002359H
  00395	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00398	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0039d	8b c8		 mov	 ecx, eax
  0039f	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN2@OnInitDial:

; 1367 : 			break;
; 1368 : 		}
; 1369 : 	}
; 1370 : 	
; 1371 : 	LPCTSTR pszGameMode[4] = {TEXT("局数模式"), TEXT("时间模式"), TEXT("圈数模式"), TEXT("积分模式")};

  003a4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pszGameMode$[ebp], OFFSET ??_C@_08BGFLHOFE@?$LO?V?J?$PN?D?$KD?J?$LN@
  003ab	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pszGameMode$[ebp+4], OFFSET ??_C@_08MKFLPDGN@?J?$LB?$LM?d?D?$KD?J?$LN@
  003b2	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pszGameMode$[ebp+8], OFFSET ??_C@_08DJLCFFJL@?H?$KG?J?$PN?D?$KD?J?$LN@
  003b9	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pszGameMode$[ebp+12], OFFSET ??_C@_08BIAEABAF@?$LL?$PN?$LH?V?D?$KD?J?$LN@

; 1372 : 	for (int i = 0; i < FEE_OPTION_COUNT; i++)

  003c0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$8[ebp], 0
  003c7	eb 09		 jmp	 SHORT $LN6@OnInitDial
$LN4@OnInitDial:
  003c9	8b 45 e4	 mov	 eax, DWORD PTR _i$8[ebp]
  003cc	83 c0 01	 add	 eax, 1
  003cf	89 45 e4	 mov	 DWORD PTR _i$8[ebp], eax
$LN6@OnInitDial:
  003d2	83 7d e4 05	 cmp	 DWORD PTR _i$8[ebp], 5
  003d6	7d 7c		 jge	 SHORT $LN5@OnInitDial

; 1373 : 	{
; 1374 : 		CComboBox * pGameMode = (CComboBox *)GetDlgItem(IDC_COMBO_SELECT_MODE1 + i);

  003d8	8b 45 e4	 mov	 eax, DWORD PTR _i$8[ebp]
  003db	05 71 23 00 00	 add	 eax, 9073		; 00002371H
  003e0	50		 push	 eax
  003e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003e4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  003e9	89 45 e0	 mov	 DWORD PTR _pGameMode$7[ebp], eax

; 1375 : 		if (m_pGameServiceAttrib->wKindID == KIND_QIAN_AN_MAJIANG)

  003ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003ef	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  003f5	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  003f8	81 fa bc 02 00
	00		 cmp	 edx, 700		; 000002bcH
  003fe	75 23		 jne	 SHORT $LN33@OnInitDial

; 1376 : 		{
; 1377 : 		//	for (int j = 0; j < CountArray(pszGameMode); j++)	{
; 1378 : 		//		pGameMode->SetItemData(pGameMode->InsertString(j, pszGameMode[j]), j);
; 1379 : 		//	}			
; 1380 : 			pGameMode->SetItemData(pGameMode->InsertString(0, pszGameMode[2]), 2);

  00400	6a 02		 push	 2
  00402	b8 04 00 00 00	 mov	 eax, 4
  00407	d1 e0		 shl	 eax, 1
  00409	8b 4c 05 e8	 mov	 ecx, DWORD PTR _pszGameMode$[ebp+eax]
  0040d	51		 push	 ecx
  0040e	6a 00		 push	 0
  00410	8b 4d e0	 mov	 ecx, DWORD PTR _pGameMode$7[ebp]
  00413	e8 00 00 00 00	 call	 ?InsertString@CComboBox@@QAEHHPBD@Z ; CComboBox::InsertString
  00418	50		 push	 eax
  00419	8b 4d e0	 mov	 ecx, DWORD PTR _pGameMode$7[ebp]
  0041c	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 1381 : 		}
; 1382 : 		else

  00421	eb 22		 jmp	 SHORT $LN34@OnInitDial
$LN33@OnInitDial:

; 1383 : 		{
; 1384 : 			pGameMode->SetItemData(pGameMode->InsertString(0, pszGameMode[0]), 0);

  00423	6a 00		 push	 0
  00425	b8 04 00 00 00	 mov	 eax, 4
  0042a	6b c8 00	 imul	 ecx, eax, 0
  0042d	8b 54 0d e8	 mov	 edx, DWORD PTR _pszGameMode$[ebp+ecx]
  00431	52		 push	 edx
  00432	6a 00		 push	 0
  00434	8b 4d e0	 mov	 ecx, DWORD PTR _pGameMode$7[ebp]
  00437	e8 00 00 00 00	 call	 ?InsertString@CComboBox@@QAEHHPBD@Z ; CComboBox::InsertString
  0043c	50		 push	 eax
  0043d	8b 4d e0	 mov	 ecx, DWORD PTR _pGameMode$7[ebp]
  00440	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData
$LN34@OnInitDial:

; 1385 : 		}		
; 1386 : 		pGameMode->SetCurSel(0);

  00445	6a 00		 push	 0
  00447	8b 4d e0	 mov	 ecx, DWORD PTR _pGameMode$7[ebp]
  0044a	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 1387 : 	}

  0044f	e9 75 ff ff ff	 jmp	 $LN4@OnInitDial
$LN5@OnInitDial:

; 1388 : 
; 1389 : 	//房间费用配置
; 1390 : 	for (int i = 0; i < FEE_OPTION_COUNT; i++)

  00454	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  0045b	eb 09		 jmp	 SHORT $LN9@OnInitDial
$LN7@OnInitDial:
  0045d	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  00460	83 c0 01	 add	 eax, 1
  00463	89 45 dc	 mov	 DWORD PTR _i$6[ebp], eax
$LN9@OnInitDial:
  00466	83 7d dc 05	 cmp	 DWORD PTR _i$6[ebp], 5
  0046a	0f 8d 6e 02 00
	00		 jge	 $LN8@OnInitDial

; 1391 : 	{
; 1392 : 		SetDlgItemInt(IDC_EDIT_TURN_NUM + i * 3, m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPlayTurnLimit);

  00470	6a 01		 push	 1
  00472	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00475	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  0047b	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  0047f	8b 44 11 16	 mov	 eax, DWORD PTR [ecx+edx+22]
  00483	50		 push	 eax
  00484	6b 4d dc 03	 imul	 ecx, DWORD PTR _i$6[ebp], 3
  00488	81 c1 5a 23 00
	00		 add	 ecx, 9050		; 0000235aH
  0048e	51		 push	 ecx
  0048f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00492	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1393 : 		SetDlgItemInt(IDC_EDIT_CREATE_FEE + i * 3, m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPayFee);

  00497	6a 01		 push	 1
  00499	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0049c	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  004a2	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  004a6	8b 44 11 1e	 mov	 eax, DWORD PTR [ecx+edx+30]
  004aa	50		 push	 eax
  004ab	6b 4d dc 03	 imul	 ecx, DWORD PTR _i$6[ebp], 3
  004af	81 c1 5b 23 00
	00		 add	 ecx, 9051		; 0000235bH
  004b5	51		 push	 ecx
  004b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004b9	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1394 : 		SetDlgItemInt(IDC_EDIT_CREATE_AA_FEE6 + i, m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].wAAPayFee);

  004be	6a 01		 push	 1
  004c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004c3	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  004c9	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  004cd	0f b7 44 11 22	 movzx	 eax, WORD PTR [ecx+edx+34]
  004d2	50		 push	 eax
  004d3	8b 4d dc	 mov	 ecx, DWORD PTR _i$6[ebp]
  004d6	81 c1 69 23 00
	00		 add	 ecx, 9065		; 00002369H
  004dc	51		 push	 ecx
  004dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e0	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1395 : 		SetDlgItemInt(IDC_EDIT_ROOM_INISCORE + i * 3, m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwIniScore);

  004e5	6a 01		 push	 1
  004e7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004ea	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  004f0	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  004f4	8b 44 11 24	 mov	 eax, DWORD PTR [ecx+edx+36]
  004f8	50		 push	 eax
  004f9	6b 4d dc 03	 imul	 ecx, DWORD PTR _i$6[ebp], 3
  004fd	81 c1 5c 23 00
	00		 add	 ecx, 9052		; 0000235cH
  00503	51		 push	 ecx
  00504	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00507	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1396 : 		
; 1397 : 		CComboBox * pGameMode = (CComboBox *)GetDlgItem(IDC_COMBO_SELECT_MODE1+i);

  0050c	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  0050f	05 71 23 00 00	 add	 eax, 9073		; 00002371H
  00514	50		 push	 eax
  00515	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00518	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0051d	89 45 d8	 mov	 DWORD PTR _pGameMode$5[ebp], eax

; 1398 : 		BYTE cbGameMode = m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].cbGameMode;

  00520	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00523	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00529	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  0052d	8a 44 11 15	 mov	 al, BYTE PTR [ecx+edx+21]
  00531	88 45 d7	 mov	 BYTE PTR _cbGameMode$4[ebp], al

; 1399 : 		
; 1400 : 		int iCurSelect = 0;

  00534	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _iCurSelect$3[ebp], 0

; 1401 : 		for (int j = 0; j < pGameMode->GetCount(); j++)

  0053b	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _j$2[ebp], 0
  00542	eb 09		 jmp	 SHORT $LN12@OnInitDial
$LN10@OnInitDial:
  00544	8b 45 cc	 mov	 eax, DWORD PTR _j$2[ebp]
  00547	83 c0 01	 add	 eax, 1
  0054a	89 45 cc	 mov	 DWORD PTR _j$2[ebp], eax
$LN12@OnInitDial:
  0054d	8b 4d d8	 mov	 ecx, DWORD PTR _pGameMode$5[ebp]
  00550	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  00555	39 45 cc	 cmp	 DWORD PTR _j$2[ebp], eax
  00558	7d 22		 jge	 SHORT $LN11@OnInitDial

; 1402 : 		{
; 1403 : 			int iData = pGameMode->GetItemData(j);

  0055a	8b 45 cc	 mov	 eax, DWORD PTR _j$2[ebp]
  0055d	50		 push	 eax
  0055e	8b 4d d8	 mov	 ecx, DWORD PTR _pGameMode$5[ebp]
  00561	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00566	89 45 c8	 mov	 DWORD PTR _iData$1[ebp], eax

; 1404 : 			if (iData == cbGameMode)

  00569	0f b6 45 d7	 movzx	 eax, BYTE PTR _cbGameMode$4[ebp]
  0056d	39 45 c8	 cmp	 DWORD PTR _iData$1[ebp], eax
  00570	75 08		 jne	 SHORT $LN35@OnInitDial

; 1405 : 			{
; 1406 : 				iCurSelect = j;

  00572	8b 45 cc	 mov	 eax, DWORD PTR _j$2[ebp]
  00575	89 45 d0	 mov	 DWORD PTR _iCurSelect$3[ebp], eax

; 1407 : 				break;

  00578	eb 02		 jmp	 SHORT $LN11@OnInitDial
$LN35@OnInitDial:

; 1408 : 			}
; 1409 : 		}	

  0057a	eb c8		 jmp	 SHORT $LN10@OnInitDial
$LN11@OnInitDial:

; 1410 : 		pGameMode->SetCurSel(iCurSelect);

  0057c	8b 45 d0	 mov	 eax, DWORD PTR _iCurSelect$3[ebp]
  0057f	50		 push	 eax
  00580	8b 4d d8	 mov	 ecx, DWORD PTR _pGameMode$5[ebp]
  00583	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 1411 : 
; 1412 : 		switch (pGameMode->GetItemData(iCurSelect))

  00588	8b 45 d0	 mov	 eax, DWORD PTR _iCurSelect$3[ebp]
  0058b	50		 push	 eax
  0058c	8b 4d d8	 mov	 ecx, DWORD PTR _pGameMode$5[ebp]
  0058f	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00594	89 45 84	 mov	 DWORD PTR tv719[ebp], eax
  00597	83 7d 84 03	 cmp	 DWORD PTR tv719[ebp], 3
  0059b	77 68		 ja	 SHORT $LN13@OnInitDial
  0059d	8b 4d 84	 mov	 ecx, DWORD PTR tv719[ebp]
  005a0	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN47@OnInitDial[ecx*4]
$LN36@OnInitDial:

; 1413 : 		{
; 1414 : 		case 0:
; 1415 : 		{
; 1416 : 			SetDlgItemText(IDC_STATIC_SHU1 + i, TEXT("局数"));

  005a7	68 00 00 00 00	 push	 OFFSET ??_C@_04KIDPNELE@?$LO?V?J?$PN@
  005ac	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  005af	05 78 23 00 00	 add	 eax, 9080		; 00002378H
  005b4	50		 push	 eax
  005b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b8	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1417 : 			break;

  005bd	eb 46		 jmp	 SHORT $LN13@OnInitDial
$LN37@OnInitDial:

; 1418 : 		}
; 1419 : 		case 1:
; 1420 : 		{
; 1421 : 			SetDlgItemText(IDC_STATIC_SHU1 + i, TEXT("时间"));

  005bf	68 00 00 00 00	 push	 OFFSET ??_C@_04MJOAOAPL@?J?$LB?$LM?d@
  005c4	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  005c7	05 78 23 00 00	 add	 eax, 9080		; 00002378H
  005cc	50		 push	 eax
  005cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005d0	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1422 : 			break;

  005d5	eb 2e		 jmp	 SHORT $LN13@OnInitDial
$LN38@OnInitDial:

; 1423 : 		}
; 1424 : 		case 2:
; 1425 : 		{
; 1426 : 			SetDlgItemText(IDC_STATIC_SHU1 + i, TEXT("圈数"));

  005d7	68 00 00 00 00	 push	 OFFSET ??_C@_04LFJCGBEH@?H?$KG?J?$PN@
  005dc	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  005df	05 78 23 00 00	 add	 eax, 9080		; 00002378H
  005e4	50		 push	 eax
  005e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e8	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1427 : 			break;

  005ed	eb 16		 jmp	 SHORT $LN13@OnInitDial
$LN39@OnInitDial:

; 1428 : 		}
; 1429 : 		case 3:
; 1430 : 		{
; 1431 : 			SetDlgItemText(IDC_STATIC_SHU1 + i, TEXT("积分"));

  005ef	68 00 00 00 00	 push	 OFFSET ??_C@_04DNLFHFJB@?$LL?$PN?$LH?V@
  005f4	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  005f7	05 78 23 00 00	 add	 eax, 9080		; 00002378H
  005fc	50		 push	 eax
  005fd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00600	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN13@OnInitDial:

; 1432 : 			break;
; 1433 : 		}
; 1434 : 		}	
; 1435 : 		
; 1436 : 		if (i == 0)

  00605	83 7d dc 00	 cmp	 DWORD PTR _i$6[ebp], 0
  00609	0f 85 ca 00 00
	00		 jne	 $LN40@OnInitDial

; 1437 : 		{
; 1438 : 			if (m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPlayTurnLimit == 0 || m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwIniScore == 0 
; 1439 : 				|| m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].wAAPayFee == 0 || m_pCreateRoomRightAndFee->stCreateRoomPayFee[i].dwPayFee == 0)

  0060f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00612	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00618	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  0061c	83 7c 11 16 00	 cmp	 DWORD PTR [ecx+edx+22], 0
  00621	74 3e		 je	 SHORT $LN42@OnInitDial
  00623	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00626	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  0062c	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  00630	83 7c 11 24 00	 cmp	 DWORD PTR [ecx+edx+36], 0
  00635	74 2a		 je	 SHORT $LN42@OnInitDial
  00637	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0063a	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00640	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  00644	0f b7 44 11 22	 movzx	 eax, WORD PTR [ecx+edx+34]
  00649	85 c0		 test	 eax, eax
  0064b	74 14		 je	 SHORT $LN42@OnInitDial
  0064d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00650	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00656	6b 55 dc 13	 imul	 edx, DWORD PTR _i$6[ebp], 19
  0065a	83 7c 11 1e 00	 cmp	 DWORD PTR [ecx+edx+30], 0
  0065f	75 78		 jne	 SHORT $LN40@OnInitDial
$LN42@OnInitDial:

; 1440 : 			{
; 1441 : 				SetDlgItemInt(IDC_EDIT_TURN_NUM + i * 3, 5*(i+1));

  00661	6a 01		 push	 1
  00663	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  00666	83 c0 01	 add	 eax, 1
  00669	6b c8 05	 imul	 ecx, eax, 5
  0066c	51		 push	 ecx
  0066d	6b 55 dc 03	 imul	 edx, DWORD PTR _i$6[ebp], 3
  00671	81 c2 5a 23 00
	00		 add	 edx, 9050		; 0000235aH
  00677	52		 push	 edx
  00678	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0067b	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1442 : 				SetDlgItemInt(IDC_EDIT_CREATE_FEE + i * 3, i+1);

  00680	6a 01		 push	 1
  00682	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  00685	83 c0 01	 add	 eax, 1
  00688	50		 push	 eax
  00689	6b 4d dc 03	 imul	 ecx, DWORD PTR _i$6[ebp], 3
  0068d	81 c1 5b 23 00
	00		 add	 ecx, 9051		; 0000235bH
  00693	51		 push	 ecx
  00694	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00697	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1443 : 				SetDlgItemInt(IDC_EDIT_CREATE_AA_FEE6+i, i+1);

  0069c	6a 01		 push	 1
  0069e	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  006a1	83 c0 01	 add	 eax, 1
  006a4	50		 push	 eax
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR _i$6[ebp]
  006a8	81 c1 69 23 00
	00		 add	 ecx, 9065		; 00002369H
  006ae	51		 push	 ecx
  006af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006b2	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1444 : 				SetDlgItemInt(IDC_EDIT_ROOM_INISCORE + i * 3, 1000 * (i + 1));

  006b7	6a 01		 push	 1
  006b9	8b 45 dc	 mov	 eax, DWORD PTR _i$6[ebp]
  006bc	83 c0 01	 add	 eax, 1
  006bf	69 c8 e8 03 00
	00		 imul	 ecx, eax, 1000
  006c5	51		 push	 ecx
  006c6	6b 55 dc 03	 imul	 edx, DWORD PTR _i$6[ebp], 3
  006ca	81 c2 5c 23 00
	00		 add	 edx, 9052		; 0000235cH
  006d0	52		 push	 edx
  006d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006d4	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN40@OnInitDial:

; 1445 : 			}
; 1446 : 		}
; 1447 : 	}

  006d9	e9 7f fd ff ff	 jmp	 $LN7@OnInitDial
$LN8@OnInitDial:

; 1448 : 
; 1449 : 	m_ToolTipCtrl.Create(this);

  006de	6a 00		 push	 0
  006e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006e3	50		 push	 eax
  006e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006e7	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  006ed	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006f0	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  006f6	8b 90 6c 01 00
	00		 mov	 edx, DWORD PTR [eax+364]
  006fc	ff d2		 call	 edx

; 1450 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_RADIO_JOIN_GAME), _T("房主创建房间后强制进入房间"));

  006fe	6a 00		 push	 0
  00700	6a 00		 push	 0
  00702	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@LFMLNCPB@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LK?s?G?$LP?V?F?$LN?x?H?k?$LH?$LP?$LM?d@
  00707	68 40 23 00 00	 push	 9024			; 00002340H
  0070c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0070f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00714	50		 push	 eax
  00715	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00718	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0071e	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1451 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_COMBO_SELECT_MODE1), _T("创建房间以局数模式进行"));		

  00723	6a 00		 push	 0
  00725	6a 00		 push	 0
  00727	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EBCHOPCM@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LO?V?J?$PN?D?$KD?J?$LN?$LN?x?P?P@
  0072c	68 71 23 00 00	 push	 9073			; 00002371H
  00731	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00734	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00739	50		 push	 eax
  0073a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0073d	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00743	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1452 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_COMBO_SELECT_MODE2), _T("创建房间以时间模式进行"));

  00748	6a 00		 push	 0
  0074a	6a 00		 push	 0
  0074c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KKIMEOCL@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?J?$LB?$LM?d?D?$KD?J?$LN?$LN?x?P?P@
  00751	68 72 23 00 00	 push	 9074			; 00002372H
  00756	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00759	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0075e	50		 push	 eax
  0075f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00762	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00768	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1453 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_COMBO_SELECT_MODE3), _T("创建房间以圈数模式进行"));

  0076d	6a 00		 push	 0
  0076f	6a 00		 push	 0
  00771	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HPHMMNIB@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?H?$KG?J?$PN?D?$KD?J?$LN?$LN?x?P?P@
  00776	68 73 23 00 00	 push	 9075			; 00002373H
  0077b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0077e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00783	50		 push	 eax
  00784	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00787	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0078d	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1454 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_COMBO_SELECT_MODE4), _T("创建房间以积分上限模式进行"));

  00792	6a 00		 push	 0
  00794	6a 00		 push	 0
  00796	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PHEPAGLP@?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?R?T?$LL?$PN?$LH?V?I?O?O?$NO?D?$KD?J?$LN?$LN?x?P?P@
  0079b	68 74 23 00 00	 push	 9076			; 00002374H
  007a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a3	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  007a8	50		 push	 eax
  007a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ac	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  007b2	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1455 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_RADIO_NOT_JOIN_GAME), _T("房主创建房间可以不进入"));

  007b7	6a 00		 push	 0
  007b9	6a 00		 push	 0
  007bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OJIPJDBF@?$LH?$LP?V?w?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LP?I?R?T?$LC?$LL?$LN?x?H?k@
  007c0	68 45 23 00 00	 push	 9029			; 00002345H
  007c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007c8	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  007cd	50		 push	 eax
  007ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  007d7	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1456 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_EDIT_MAX_ROOM), _T("房主可以创建最大数量，为0表示不限制"));

  007dc	6a 00		 push	 0
  007de	6a 00		 push	 0
  007e0	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@BAIHJHEF@?$LH?$LP?V?w?$LP?I?R?T?$LE?$LE?$LN?$KI?W?n?$LE?s?J?$PN?A?$LP?$KD?$KM?N?$KK0?$LB?m?J?$LO?$LC?$LL@
  007e5	68 4d 23 00 00	 push	 9037			; 0000234dH
  007ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ed	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  007f2	50		 push	 eax
  007f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007f6	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  007fc	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1457 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_PERSONAL_ROOM_TAX), _T("私人房独立的税收，和通用税收共同计算"));

  00801	6a 00		 push	 0
  00803	6a 00		 push	 0
  00805	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NPDJBIPG@?K?$LN?H?K?$LH?$LP?$LG?$MA?A?$KC?$LF?D?K?$LA?J?U?$KD?$KM?$LK?M?M?$KI?S?C?K?$LA?J?U?$LJ?$LC?M@
  0080a	68 41 23 00 00	 push	 9025			; 00002341H
  0080f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00812	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00817	50		 push	 eax
  00818	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0081b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00821	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1458 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_EDIT_BEGIN_FREE_TIME), _T("免费时间内，创建房间不消耗钻石"));

  00826	6a 00		 push	 0
  00828	6a 00		 push	 0
  0082a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@HHFBKMPP@?C?b?$LH?Q?J?$LB?$LM?d?D?Z?$KD?$KM?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?$LL?O?$PL?$LK?D?W?j?J?$KP@
  0082f	68 6e 23 00 00	 push	 9070			; 0000236eH
  00834	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00837	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0083c	50		 push	 eax
  0083d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00840	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00846	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1459 : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_EDIT_END_FREE_TIME), _T("免费时间内，创建房间不消耗钻石"));

  0084b	6a 00		 push	 0
  0084d	6a 00		 push	 0
  0084f	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@HHFBKMPP@?C?b?$LH?Q?J?$LB?$LM?d?D?Z?$KD?$KM?$LE?$LE?$LN?$KI?$LH?$LP?$LM?d?$LC?$LL?O?$PL?$LK?D?W?j?J?$KP@
  00854	68 6f 23 00 00	 push	 9071			; 0000236fH
  00859	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0085c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00861	50		 push	 eax
  00862	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00865	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0086b	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 1460 : 	m_ToolTipCtrl.SetMaxTipWidth(300);

  00870	68 2c 01 00 00	 push	 300			; 0000012cH
  00875	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00878	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0087e	e8 00 00 00 00	 call	 ?SetMaxTipWidth@CToolTipCtrl@@QAEHH@Z ; CToolTipCtrl::SetMaxTipWidth

; 1461 : 	m_ToolTipCtrl.Activate(TRUE);

  00883	6a 01		 push	 1
  00885	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00888	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0088e	e8 00 00 00 00	 call	 ?Activate@CToolTipCtrl@@QAEXH@Z ; CToolTipCtrl::Activate

; 1462 : 	
; 1463 : 	return TRUE;

  00893	b8 01 00 00 00	 mov	 eax, 1

; 1464 : }

  00898	5f		 pop	 edi
  00899	5e		 pop	 esi
  0089a	5b		 pop	 ebx
  0089b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0089e	33 cd		 xor	 ecx, ebp
  008a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  008a5	8b e5		 mov	 esp, ebp
  008a7	5d		 pop	 ebp
  008a8	c3		 ret	 0
  008a9	0f 1f 00	 npad	 3
$LN46@OnInitDial:
  008ac	00 00 00 00	 DD	 $LN27@OnInitDial
  008b0	00 00 00 00	 DD	 $LN28@OnInitDial
  008b4	00 00 00 00	 DD	 $LN29@OnInitDial
  008b8	00 00 00 00	 DD	 $LN30@OnInitDial
  008bc	00 00 00 00	 DD	 $LN31@OnInitDial
  008c0	00 00 00 00	 DD	 $LN32@OnInitDial
$LN47@OnInitDial:
  008c4	00 00 00 00	 DD	 $LN36@OnInitDial
  008c8	00 00 00 00	 DD	 $LN37@OnInitDial
  008cc	00 00 00 00	 DD	 $LN38@OnInitDial
  008d0	00 00 00 00	 DD	 $LN39@OnInitDial
?OnInitDialog@CDlgServerOptionItem5@@MAEHXZ ENDP	; CDlgServerOptionItem5::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItem5@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItem5@@UAE@XZ PROC			; CDlgServerOptionItem5::~CDlgServerOptionItem5, COMDAT
; _this$ = ecx

; 1265 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem5@@6B@

; 1266 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerOptionItem5@@UAE@XZ ENDP			; CDlgServerOptionItem5::~CDlgServerOptionItem5
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItem5@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgServerOptionItem5@@QAE@XZ PROC			; CDlgServerOptionItem5::CDlgServerOptionItem5, COMDAT
; _this$ = ecx

; 1260 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1259 : CDlgServerOptionItem5::CDlgServerOptionItem5() : CDlgServerOptionItem(IDD_SERVER_OPTION_5)

  0000c	68 2d 23 00 00	 push	 9005			; 0000232dH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem@@IAE@I@Z ; CDlgServerOptionItem::CDlgServerOptionItem

; 1260 : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem5@@6B@

; 1261 : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgServerOptionItem5@@QAE@XZ ENDP			; CDlgServerOptionItem5::CDlgServerOptionItem5
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItem3@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItem3@@UAEPAXI@Z PROC		; CDlgServerOptionItem3::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItem3@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItem3@@UAE@XZ ; CDlgServerOptionItem3::~CDlgServerOptionItem3
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 60 01 00 00	 push	 352			; 00000160H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 60 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 352
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem3@@UAE@XZ ; CDlgServerOptionItem3::~CDlgServerOptionItem3
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 60 01 00 00	 push	 352			; 00000160H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItem3@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItem3@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItem3@@UAEPAXI@Z ENDP		; CDlgServerOptionItem3::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItem3@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItem3@@UAEPAXI@Z PROC		; CDlgServerOptionItem3::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem3@@UAE@XZ ; CDlgServerOptionItem3::~CDlgServerOptionItem3
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 60 01 00 00	 push	 352			; 00000160H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItem3@@UAEPAXI@Z ENDP		; CDlgServerOptionItem3::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?PreTranslateMessage@CDlgServerOptionItem3@@MAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CDlgServerOptionItem3@@MAEHPAUtagMSG@@@Z PROC ; CDlgServerOptionItem3::PreTranslateMessage, COMDAT
; _this$ = ecx

; 2890 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2891 : 	if (pMsg->message == WM_MOUSEMOVE && m_ToolTipCtrl.GetSafeHwnd() != NULL)	m_ToolTipCtrl.RelayEvent(pMsg);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0000f	81 78 04 00 02
	00 00		 cmp	 DWORD PTR [eax+4], 512	; 00000200H
  00016	75 24		 jne	 SHORT $LN2@PreTransla
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00021	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00026	85 c0		 test	 eax, eax
  00028	74 12		 je	 SHORT $LN2@PreTransla
  0002a	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00037	e8 00 00 00 00	 call	 ?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z ; CToolTipCtrl::RelayEvent
$LN2@PreTransla:

; 2892 : 
; 2893 : 	return CDlgServerOptionItem::PreTranslateMessage(pMsg);

  0003c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z ; CDialog::PreTranslateMessage

; 2894 : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?PreTranslateMessage@CDlgServerOptionItem3@@MAEHPAUtagMSG@@@Z ENDP ; CDlgServerOptionItem3::PreTranslateMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItem3@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItem3@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem3::GetMessageMap, COMDAT
; _this$ = ecx

; 41   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem3, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem3::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItem3@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem3::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem3::GetThisMessageMap, COMDAT

; 41   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem3, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 42   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItem3@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem3::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerOptionItem3@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerOptionItem3@@UAEXHH@Z PROC	; CDlgServerOptionItem3::RectifyControl, COMDAT
; _this$ = ecx

; 1252 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1253 : 	return;
; 1254 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgServerOptionItem3@@UAEXHH@Z ENDP	; CDlgServerOptionItem3::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerOptionItem3@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerOptionItem3@@UAE_NXZ PROC	; CDlgServerOptionItem3::SaveInputInfo, COMDAT
; _this$ = ecx

; 1209 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1210 : 	//属性配置
; 1211 : 	m_pGameServiceOption->wMinDistributeUser=GetDlgItemInt(IDC_MIN_DISTRIBUTE_USER);

  0000c	6a 01		 push	 1
  0000e	6a 00		 push	 0
  00010	68 41 23 00 00	 push	 9025			; 00002341H
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00026	66 89 82 92 00
	00 00		 mov	 WORD PTR [edx+146], ax

; 1212 : 	m_pGameServiceOption->wDistributeTimeSpace=GetDlgItemInt(IDC_DISTRIBUTE_TIME_SPACE);

  0002d	6a 01		 push	 1
  0002f	6a 00		 push	 0
  00031	68 43 23 00 00	 push	 9027			; 00002343H
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00047	66 89 82 94 00
	00 00		 mov	 WORD PTR [edx+148], ax

; 1213 : 	m_pGameServiceOption->wDistributeDrawCount=GetDlgItemInt(IDC_DISTRIBUTE_DRAW_COUNT);

  0004e	6a 01		 push	 1
  00050	6a 00		 push	 0
  00052	68 44 23 00 00	 push	 9028			; 00002344H
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00068	66 89 82 96 00
	00 00		 mov	 WORD PTR [edx+150], ax

; 1214 : 	m_pGameServiceOption->wMinPartakeGameUser=GetDlgItemInt(IDC_DISTRIBUTE_START_MIN_USER);

  0006f	6a 01		 push	 1
  00071	6a 00		 push	 0
  00073	68 46 23 00 00	 push	 9030			; 00002346H
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00089	66 89 82 98 00
	00 00		 mov	 WORD PTR [edx+152], ax

; 1215 : 	m_pGameServiceOption->wMaxPartakeGameUser=GetDlgItemInt(IDC_DISTRIBUTE_START_MAX_USER);

  00090	6a 01		 push	 1
  00092	6a 00		 push	 0
  00094	68 47 23 00 00	 push	 9031			; 00002347H
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  000aa	66 89 82 9a 00
	00 00		 mov	 WORD PTR [edx+154], ax

; 1216 : 
; 1217 : 	//允许分组
; 1218 : 	if (((CButton *)GetDlgItem(IDC_DISTRIBUTE_ALLOW))->GetCheck()==BST_CHECKED)

  000b1	68 3e 23 00 00	 push	 9022			; 0000233eH
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  000c5	83 f8 01	 cmp	 eax, 1
  000c8	75 24		 jne	 SHORT $LN2@SaveInputI

; 1219 : 	{
; 1220 : 		m_pGameServiceOption->cbDistributeRule|=DISTRIBUTE_ALLOW;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000d3	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  000da	83 ca 01	 or	 edx, 1
  000dd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000e6	88 91 91 00 00
	00		 mov	 BYTE PTR [ecx+145], dl

; 1221 : 	}
; 1222 : 	else

  000ec	eb 22		 jmp	 SHORT $LN3@SaveInputI
$LN2@SaveInputI:

; 1223 : 	{
; 1224 : 		m_pGameServiceOption->cbDistributeRule&=~DISTRIBUTE_ALLOW;

  000ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f7	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  000fe	83 e2 fe	 and	 edx, -2			; fffffffeH
  00101	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0010a	88 91 91 00 00
	00		 mov	 BYTE PTR [ecx+145], dl
$LN3@SaveInputI:

; 1225 : 	}
; 1226 : 
; 1227 : 	//同桌选项
; 1228 : 	if (((CButton *)GetDlgItem(IDC_DISTRIBUTE_LAST_TABLE))->GetCheck()==BST_CHECKED)

  00110	68 3f 23 00 00	 push	 9023			; 0000233fH
  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0011d	8b c8		 mov	 ecx, eax
  0011f	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00124	83 f8 01	 cmp	 eax, 1
  00127	75 24		 jne	 SHORT $LN4@SaveInputI

; 1229 : 	{
; 1230 : 		m_pGameServiceOption->cbDistributeRule|=DISTRIBUTE_LAST_TABLE;

  00129	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00132	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  00139	83 ca 02	 or	 edx, 2
  0013c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0013f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00145	88 91 91 00 00
	00		 mov	 BYTE PTR [ecx+145], dl

; 1231 : 	}
; 1232 : 	else

  0014b	eb 22		 jmp	 SHORT $LN5@SaveInputI
$LN4@SaveInputI:

; 1233 : 	{
; 1234 : 		m_pGameServiceOption->cbDistributeRule&=~DISTRIBUTE_LAST_TABLE;

  0014d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00150	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00156	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  0015d	83 e2 fd	 and	 edx, -3			; fffffffdH
  00160	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00163	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00169	88 91 91 00 00
	00		 mov	 BYTE PTR [ecx+145], dl
$LN5@SaveInputI:

; 1235 : 	}
; 1236 : 
; 1237 : 	//地址选项
; 1238 : 	if (((CButton *)GetDlgItem(IDC_DISTRIBUTE_SAME_ADDRESS))->GetCheck()==BST_CHECKED)

  0016f	68 45 23 00 00	 push	 9029			; 00002345H
  00174	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0017c	8b c8		 mov	 ecx, eax
  0017e	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00183	83 f8 01	 cmp	 eax, 1
  00186	75 24		 jne	 SHORT $LN6@SaveInputI

; 1239 : 	{
; 1240 : 		m_pGameServiceOption->cbDistributeRule|=DISTRIBUTE_SAME_ADDRESS;

  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00191	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  00198	83 ca 04	 or	 edx, 4
  0019b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0019e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001a4	88 91 91 00 00
	00		 mov	 BYTE PTR [ecx+145], dl

; 1241 : 	}
; 1242 : 	else

  001aa	eb 22		 jmp	 SHORT $LN7@SaveInputI
$LN6@SaveInputI:

; 1243 : 	{
; 1244 : 		m_pGameServiceOption->cbDistributeRule&=~DISTRIBUTE_SAME_ADDRESS;

  001ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001af	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001b5	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  001bc	83 e2 fb	 and	 edx, -5			; fffffffbH
  001bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c2	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001c8	88 91 91 00 00
	00		 mov	 BYTE PTR [ecx+145], dl
$LN7@SaveInputI:

; 1245 : 	}
; 1246 : 
; 1247 : 	return true;

  001ce	b0 01		 mov	 al, 1

; 1248 : }

  001d0	5f		 pop	 edi
  001d1	5e		 pop	 esi
  001d2	5b		 pop	 ebx
  001d3	8b e5		 mov	 esp, ebp
  001d5	5d		 pop	 ebp
  001d6	c3		 ret	 0
?SaveInputInfo@CDlgServerOptionItem3@@UAE_NXZ ENDP	; CDlgServerOptionItem3::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerOptionItem3@@MAEHXZ
_TEXT	SEGMENT
tv295 = -76						; size = 4
tv279 = -76						; size = 4
tv268 = -76						; size = 4
tv252 = -76						; size = 4
tv241 = -76						; size = 4
tv225 = -76						; size = 4
_bDistributeSameAddress$ = -7				; size = 1
_bDistributeLastTable$ = -6				; size = 1
_bDistributeAllow$ = -5					; size = 1
_this$ = -4						; size = 4
?OnInitDialog@CDlgServerOptionItem3@@MAEHXZ PROC	; CDlgServerOptionItem3::OnInitDialog, COMDAT
; _this$ = ecx

; 1159 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1160 : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1161 : 
; 1162 : 	//最少人数
; 1163 : 	if (m_pGameServiceOption->wMinDistributeUser!=0)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0001d	0f b7 91 92 00
	00 00		 movzx	 edx, WORD PTR [ecx+146]
  00024	85 d2		 test	 edx, edx
  00026	74 20		 je	 SHORT $LN2@OnInitDial

; 1164 : 	{
; 1165 : 		SetDlgItemInt(IDC_MIN_DISTRIBUTE_USER,m_pGameServiceOption->wMinDistributeUser);

  00028	6a 01		 push	 1
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00033	0f b7 91 92 00
	00 00		 movzx	 edx, WORD PTR [ecx+146]
  0003a	52		 push	 edx
  0003b	68 41 23 00 00	 push	 9025			; 00002341H
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN2@OnInitDial:

; 1166 : 	}
; 1167 : 
; 1168 : 	//分组间隔
; 1169 : 	if (m_pGameServiceOption->wDistributeTimeSpace!=0)

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00051	0f b7 91 94 00
	00 00		 movzx	 edx, WORD PTR [ecx+148]
  00058	85 d2		 test	 edx, edx
  0005a	74 20		 je	 SHORT $LN3@OnInitDial

; 1170 : 	{
; 1171 : 		SetDlgItemInt(IDC_DISTRIBUTE_TIME_SPACE,m_pGameServiceOption->wDistributeTimeSpace);

  0005c	6a 01		 push	 1
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00067	0f b7 91 94 00
	00 00		 movzx	 edx, WORD PTR [ecx+148]
  0006e	52		 push	 edx
  0006f	68 43 23 00 00	 push	 9027			; 00002343H
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN3@OnInitDial:

; 1172 : 	}
; 1173 : 
; 1174 : 	//分组局数
; 1175 : 	if (m_pGameServiceOption->wDistributeDrawCount!=0)

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00085	0f b7 91 96 00
	00 00		 movzx	 edx, WORD PTR [ecx+150]
  0008c	85 d2		 test	 edx, edx
  0008e	74 20		 je	 SHORT $LN4@OnInitDial

; 1176 : 	{
; 1177 : 		SetDlgItemInt(IDC_DISTRIBUTE_DRAW_COUNT,m_pGameServiceOption->wDistributeDrawCount);

  00090	6a 01		 push	 1
  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0009b	0f b7 91 96 00
	00 00		 movzx	 edx, WORD PTR [ecx+150]
  000a2	52		 push	 edx
  000a3	68 44 23 00 00	 push	 9028			; 00002344H
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN4@OnInitDial:

; 1178 : 	}
; 1179 : 
; 1180 : 	//最少人数
; 1181 : 	if (m_pGameServiceOption->wMinPartakeGameUser!=0)

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b9	0f b7 91 98 00
	00 00		 movzx	 edx, WORD PTR [ecx+152]
  000c0	85 d2		 test	 edx, edx
  000c2	74 20		 je	 SHORT $LN5@OnInitDial

; 1182 : 	{
; 1183 : 		SetDlgItemInt(IDC_DISTRIBUTE_START_MIN_USER,m_pGameServiceOption->wMinPartakeGameUser);

  000c4	6a 01		 push	 1
  000c6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c9	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000cf	0f b7 91 98 00
	00 00		 movzx	 edx, WORD PTR [ecx+152]
  000d6	52		 push	 edx
  000d7	68 46 23 00 00	 push	 9030			; 00002346H
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN5@OnInitDial:

; 1184 : 	}
; 1185 : 
; 1186 : 	//最大人数
; 1187 : 	if (m_pGameServiceOption->wMaxPartakeGameUser!=0)

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000ed	0f b7 91 9a 00
	00 00		 movzx	 edx, WORD PTR [ecx+154]
  000f4	85 d2		 test	 edx, edx
  000f6	74 20		 je	 SHORT $LN6@OnInitDial

; 1188 : 	{
; 1189 : 		SetDlgItemInt(IDC_DISTRIBUTE_START_MAX_USER,m_pGameServiceOption->wMaxPartakeGameUser);

  000f8	6a 01		 push	 1
  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00103	0f b7 91 9a 00
	00 00		 movzx	 edx, WORD PTR [ecx+154]
  0010a	52		 push	 edx
  0010b	68 47 23 00 00	 push	 9031			; 00002347H
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN6@OnInitDial:

; 1190 : 	}
; 1191 : 
; 1192 : 	//允许分组
; 1193 : 	bool bDistributeAllow=((m_pGameServiceOption->cbDistributeRule&DISTRIBUTE_ALLOW)!=0);

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00121	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  00128	83 e2 01	 and	 edx, 1
  0012b	74 09		 je	 SHORT $LN8@OnInitDial
  0012d	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv225[ebp], 1
  00134	eb 07		 jmp	 SHORT $LN9@OnInitDial
$LN8@OnInitDial:
  00136	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv225[ebp], 0
$LN9@OnInitDial:
  0013d	8a 45 b4	 mov	 al, BYTE PTR tv225[ebp]
  00140	88 45 fb	 mov	 BYTE PTR _bDistributeAllow$[ebp], al

; 1194 : 	((CButton *)GetDlgItem(IDC_DISTRIBUTE_ALLOW))->SetCheck((bDistributeAllow==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00143	0f b6 45 fb	 movzx	 eax, BYTE PTR _bDistributeAllow$[ebp]
  00147	83 f8 01	 cmp	 eax, 1
  0014a	75 09		 jne	 SHORT $LN10@OnInitDial
  0014c	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv241[ebp], 1
  00153	eb 07		 jmp	 SHORT $LN11@OnInitDial
$LN10@OnInitDial:
  00155	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv241[ebp], 0
$LN11@OnInitDial:
  0015c	8b 4d b4	 mov	 ecx, DWORD PTR tv241[ebp]
  0015f	51		 push	 ecx
  00160	68 3e 23 00 00	 push	 9022			; 0000233eH
  00165	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00168	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0016d	8b c8		 mov	 ecx, eax
  0016f	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1195 : 
; 1196 : 	//同桌选项
; 1197 : 	bool bDistributeLastTable=((m_pGameServiceOption->cbDistributeRule&DISTRIBUTE_LAST_TABLE)!=0);

  00174	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00177	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0017d	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  00184	83 e2 02	 and	 edx, 2
  00187	74 09		 je	 SHORT $LN12@OnInitDial
  00189	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv252[ebp], 1
  00190	eb 07		 jmp	 SHORT $LN13@OnInitDial
$LN12@OnInitDial:
  00192	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv252[ebp], 0
$LN13@OnInitDial:
  00199	8a 45 b4	 mov	 al, BYTE PTR tv252[ebp]
  0019c	88 45 fa	 mov	 BYTE PTR _bDistributeLastTable$[ebp], al

; 1198 : 	((CButton *)GetDlgItem(IDC_DISTRIBUTE_LAST_TABLE))->SetCheck((bDistributeLastTable==TRUE)?BST_CHECKED:BST_UNCHECKED);

  0019f	0f b6 45 fa	 movzx	 eax, BYTE PTR _bDistributeLastTable$[ebp]
  001a3	83 f8 01	 cmp	 eax, 1
  001a6	75 09		 jne	 SHORT $LN14@OnInitDial
  001a8	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv268[ebp], 1
  001af	eb 07		 jmp	 SHORT $LN15@OnInitDial
$LN14@OnInitDial:
  001b1	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv268[ebp], 0
$LN15@OnInitDial:
  001b8	8b 4d b4	 mov	 ecx, DWORD PTR tv268[ebp]
  001bb	51		 push	 ecx
  001bc	68 3f 23 00 00	 push	 9023			; 0000233fH
  001c1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001c9	8b c8		 mov	 ecx, eax
  001cb	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1199 : 
; 1200 : 	//地址选项
; 1201 : 	bool bDistributeSameAddress=((m_pGameServiceOption->cbDistributeRule&DISTRIBUTE_SAME_ADDRESS)!=0);

  001d0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001d9	0f b6 91 91 00
	00 00		 movzx	 edx, BYTE PTR [ecx+145]
  001e0	83 e2 04	 and	 edx, 4
  001e3	74 09		 je	 SHORT $LN16@OnInitDial
  001e5	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv279[ebp], 1
  001ec	eb 07		 jmp	 SHORT $LN17@OnInitDial
$LN16@OnInitDial:
  001ee	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv279[ebp], 0
$LN17@OnInitDial:
  001f5	8a 45 b4	 mov	 al, BYTE PTR tv279[ebp]
  001f8	88 45 f9	 mov	 BYTE PTR _bDistributeSameAddress$[ebp], al

; 1202 : 	((CButton *)GetDlgItem(IDC_DISTRIBUTE_SAME_ADDRESS))->SetCheck((bDistributeSameAddress==TRUE)?BST_CHECKED:BST_UNCHECKED);

  001fb	0f b6 45 f9	 movzx	 eax, BYTE PTR _bDistributeSameAddress$[ebp]
  001ff	83 f8 01	 cmp	 eax, 1
  00202	75 09		 jne	 SHORT $LN18@OnInitDial
  00204	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv295[ebp], 1
  0020b	eb 07		 jmp	 SHORT $LN19@OnInitDial
$LN18@OnInitDial:
  0020d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv295[ebp], 0
$LN19@OnInitDial:
  00214	8b 4d b4	 mov	 ecx, DWORD PTR tv295[ebp]
  00217	51		 push	 ecx
  00218	68 45 23 00 00	 push	 9029			; 00002345H
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00225	8b c8		 mov	 ecx, eax
  00227	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1203 : 
; 1204 : 	return TRUE;

  0022c	b8 01 00 00 00	 mov	 eax, 1

; 1205 : }

  00231	5f		 pop	 edi
  00232	5e		 pop	 esi
  00233	5b		 pop	 ebx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c3		 ret	 0
?OnInitDialog@CDlgServerOptionItem3@@MAEHXZ ENDP	; CDlgServerOptionItem3::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItem3@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItem3@@UAE@XZ PROC			; CDlgServerOptionItem3::~CDlgServerOptionItem3, COMDAT
; _this$ = ecx

; 1154 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem3@@6B@

; 1155 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerOptionItem3@@UAE@XZ ENDP			; CDlgServerOptionItem3::~CDlgServerOptionItem3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItem3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgServerOptionItem3@@QAE@XZ PROC			; CDlgServerOptionItem3::CDlgServerOptionItem3, COMDAT
; _this$ = ecx

; 1149 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1148 : CDlgServerOptionItem3::CDlgServerOptionItem3() : CDlgServerOptionItem(IDD_SERVER_OPTION_3)

  0000c	68 97 00 00 00	 push	 151			; 00000097H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem@@IAE@I@Z ; CDlgServerOptionItem::CDlgServerOptionItem

; 1149 : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem3@@6B@

; 1150 : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgServerOptionItem3@@QAE@XZ ENDP			; CDlgServerOptionItem3::CDlgServerOptionItem3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItem2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItem2@@UAEPAXI@Z PROC		; CDlgServerOptionItem2::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItem2@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItem2@@UAE@XZ ; CDlgServerOptionItem2::~CDlgServerOptionItem2
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 60 01 00 00	 push	 352			; 00000160H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 60 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 352
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem2@@UAE@XZ ; CDlgServerOptionItem2::~CDlgServerOptionItem2
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 60 01 00 00	 push	 352			; 00000160H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItem2@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItem2@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItem2@@UAEPAXI@Z ENDP		; CDlgServerOptionItem2::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItem2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItem2@@UAEPAXI@Z PROC		; CDlgServerOptionItem2::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem2@@UAE@XZ ; CDlgServerOptionItem2::~CDlgServerOptionItem2
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 60 01 00 00	 push	 352			; 00000160H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItem2@@UAEPAXI@Z ENDP		; CDlgServerOptionItem2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?PreTranslateMessage@CDlgServerOptionItem2@@UAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CDlgServerOptionItem2@@UAEHPAUtagMSG@@@Z PROC ; CDlgServerOptionItem2::PreTranslateMessage, COMDAT
; _this$ = ecx

; 2882 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2883 : 	if (pMsg->message == WM_MOUSEMOVE && m_ToolTipCtrl.GetSafeHwnd() != NULL)	m_ToolTipCtrl.RelayEvent(pMsg);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0000f	81 78 04 00 02
	00 00		 cmp	 DWORD PTR [eax+4], 512	; 00000200H
  00016	75 24		 jne	 SHORT $LN2@PreTransla
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00021	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00026	85 c0		 test	 eax, eax
  00028	74 12		 je	 SHORT $LN2@PreTransla
  0002a	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00037	e8 00 00 00 00	 call	 ?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z ; CToolTipCtrl::RelayEvent
$LN2@PreTransla:

; 2884 : 
; 2885 : 	return CDlgServerOptionItem::PreTranslateMessage(pMsg);

  0003c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z ; CDialog::PreTranslateMessage

; 2886 : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?PreTranslateMessage@CDlgServerOptionItem2@@UAEHPAUtagMSG@@@Z ENDP ; CDlgServerOptionItem2::PreTranslateMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItem2@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItem2@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem2::GetMessageMap, COMDAT
; _this$ = ecx

; 38   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem2, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem2::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItem2@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem2::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem2::GetThisMessageMap, COMDAT

; 38   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem2, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 39   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItem2@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem2::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?InitCtrlWindow@CDlgServerOptionItem2@@IAEXXZ
_TEXT	SEGMENT
tv228 = -112						; size = 4
tv210 = -112						; size = 4
tv192 = -112						; size = 4
_i$1 = -44						; size = 4
_pszMember$ = -40					; size = 24
_pMaxMember$ = -16					; size = 4
_pMinMember$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?InitCtrlWindow@CDlgServerOptionItem2@@IAEXXZ PROC	; CDlgServerOptionItem2::InitCtrlWindow, COMDAT
; _this$ = ecx

; 1119 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1120 : 	//条件限制
; 1121 : 	((CEdit *)GetDlgItem(IDC_MIN_ENTER_SCORE))->LimitText(18);

  00016	6a 12		 push	 18			; 00000012H
  00018	68 03 04 00 00	 push	 1027			; 00000403H
  0001d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00025	8b c8		 mov	 ecx, eax
  00027	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1122 : 	((CEdit *)GetDlgItem(IDC_MAX_ENTER_SCORE))->LimitText(18);

  0002c	6a 12		 push	 18			; 00000012H
  0002e	68 04 04 00 00	 push	 1028			; 00000404H
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1123 : 	((CEdit *)GetDlgItem(IDC_MIN_TABLE_SCORE))->LimitText(18);

  00042	6a 12		 push	 18			; 00000012H
  00044	68 05 04 00 00	 push	 1029			; 00000405H
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1124 : 
; 1125 : 	//会员配置
; 1126 : 	CComboBox * pMinMember=(CComboBox *)GetDlgItem(IDC_MIN_ENTER_MEMBER);

  00058	68 f1 03 00 00	 push	 1009			; 000003f1H
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00065	89 45 f4	 mov	 DWORD PTR _pMinMember$[ebp], eax

; 1127 : 	CComboBox * pMaxMember=(CComboBox *)GetDlgItem(IDC_MAX_ENTER_MEMBER);

  00068	68 f2 03 00 00	 push	 1010			; 000003f2H
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00075	89 45 f0	 mov	 DWORD PTR _pMaxMember$[ebp], eax

; 1128 : 	LPCTSTR pszMember[]={TEXT("所有用户"),TEXT("VIP1"),TEXT("VIP2"),TEXT("VIP3"),TEXT("VIP4"),TEXT("VIP5")};

  00078	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pszMember$[ebp], OFFSET ??_C@_08MJLFADOM@?K?y?S?P?S?C?$LL?$KH@
  0007f	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pszMember$[ebp+4], OFFSET ??_C@_04MCHDAMDM@VIP1@
  00086	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pszMember$[ebp+8], OFFSET ??_C@_04OJFOFPPP@VIP2@
  0008d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pszMember$[ebp+12], OFFSET ??_C@_04PAEFGOLO@VIP3@
  00094	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pszMember$[ebp+16], OFFSET ??_C@_04LPAEPIHJ@VIP4@
  0009b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pszMember$[ebp+20], OFFSET ??_C@_04KGBPMJDI@VIP5@

; 1129 : 
; 1130 : 	//会员信息
; 1131 : 	for (INT i=0;i<CountArray(pszMember);i++)

  000a2	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  000a9	eb 09		 jmp	 SHORT $LN4@InitCtrlWi
$LN2@InitCtrlWi:
  000ab	8b 45 d4	 mov	 eax, DWORD PTR _i$1[ebp]
  000ae	83 c0 01	 add	 eax, 1
  000b1	89 45 d4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@InitCtrlWi:
  000b4	83 7d d4 06	 cmp	 DWORD PTR _i$1[ebp], 6
  000b8	73 3c		 jae	 SHORT $LN3@InitCtrlWi

; 1132 : 	{
; 1133 : 		pMinMember->SetItemData(pMinMember->AddString(pszMember[i]),i);

  000ba	8b 45 d4	 mov	 eax, DWORD PTR _i$1[ebp]
  000bd	50		 push	 eax
  000be	8b 4d d4	 mov	 ecx, DWORD PTR _i$1[ebp]
  000c1	8b 54 8d d8	 mov	 edx, DWORD PTR _pszMember$[ebp+ecx*4]
  000c5	52		 push	 edx
  000c6	8b 4d f4	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  000c9	e8 00 00 00 00	 call	 ?AddString@CComboBox@@QAEHPBD@Z ; CComboBox::AddString
  000ce	50		 push	 eax
  000cf	8b 4d f4	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  000d2	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 1134 : 		pMaxMember->SetItemData(pMaxMember->AddString(pszMember[i]),i);

  000d7	8b 45 d4	 mov	 eax, DWORD PTR _i$1[ebp]
  000da	50		 push	 eax
  000db	8b 4d d4	 mov	 ecx, DWORD PTR _i$1[ebp]
  000de	8b 54 8d d8	 mov	 edx, DWORD PTR _pszMember$[ebp+ecx*4]
  000e2	52		 push	 edx
  000e3	8b 4d f0	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  000e6	e8 00 00 00 00	 call	 ?AddString@CComboBox@@QAEHPBD@Z ; CComboBox::AddString
  000eb	50		 push	 eax
  000ec	8b 4d f0	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  000ef	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 1135 : 	}

  000f4	eb b5		 jmp	 SHORT $LN2@InitCtrlWi
$LN3@InitCtrlWi:

; 1136 : 
; 1137 : 	//控件禁用
; 1138 : 	GetDlgItem(IDC_ALLOW_DYNAMIC_JOIN)->EnableWindow((m_pGameServiceAttrib->cbDynamicJoin==TRUE)?TRUE:FALSE);

  000f6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f9	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  000ff	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  00103	83 fa 01	 cmp	 edx, 1
  00106	75 09		 jne	 SHORT $LN6@InitCtrlWi
  00108	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv192[ebp], 1
  0010f	eb 07		 jmp	 SHORT $LN7@InitCtrlWi
$LN6@InitCtrlWi:
  00111	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN7@InitCtrlWi:
  00118	8b 45 90	 mov	 eax, DWORD PTR tv192[ebp]
  0011b	50		 push	 eax
  0011c	68 2f 23 00 00	 push	 9007			; 0000232fH
  00121	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00129	8b c8		 mov	 ecx, eax
  0012b	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1139 : 	GetDlgItem(IDC_ALLOW_ANDROID_ATTEND)->EnableWindow((m_pGameServiceAttrib->cbAndroidUser==TRUE)?TRUE:FALSE);

  00130	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00133	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00139	0f b6 51 26	 movzx	 edx, BYTE PTR [ecx+38]
  0013d	83 fa 01	 cmp	 edx, 1
  00140	75 09		 jne	 SHORT $LN8@InitCtrlWi
  00142	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv210[ebp], 1
  00149	eb 07		 jmp	 SHORT $LN9@InitCtrlWi
$LN8@InitCtrlWi:
  0014b	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN9@InitCtrlWi:
  00152	8b 45 90	 mov	 eax, DWORD PTR tv210[ebp]
  00155	50		 push	 eax
  00156	68 34 23 00 00	 push	 9012			; 00002334H
  0015b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00163	8b c8		 mov	 ecx, eax
  00165	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1140 : 	GetDlgItem(IDC_ALLOW_OFFLINE_TRUSTEE)->EnableWindow((m_pGameServiceAttrib->cbOffLineTrustee==TRUE)?TRUE:FALSE);

  0016a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016d	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00173	0f b6 51 28	 movzx	 edx, BYTE PTR [ecx+40]
  00177	83 fa 01	 cmp	 edx, 1
  0017a	75 09		 jne	 SHORT $LN10@InitCtrlWi
  0017c	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv228[ebp], 1
  00183	eb 07		 jmp	 SHORT $LN11@InitCtrlWi
$LN10@InitCtrlWi:
  00185	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv228[ebp], 0
$LN11@InitCtrlWi:
  0018c	8b 45 90	 mov	 eax, DWORD PTR tv228[ebp]
  0018f	50		 push	 eax
  00190	68 32 23 00 00	 push	 9010			; 00002332H
  00195	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0019d	8b c8		 mov	 ecx, eax
  0019f	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1141 : 
; 1142 : 	return;
; 1143 : }

  001a4	5f		 pop	 edi
  001a5	5e		 pop	 esi
  001a6	5b		 pop	 ebx
  001a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001aa	33 cd		 xor	 ecx, ebp
  001ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b1	8b e5		 mov	 esp, ebp
  001b3	5d		 pop	 ebp
  001b4	c3		 ret	 0
?InitCtrlWindow@CDlgServerOptionItem2@@IAEXXZ ENDP	; CDlgServerOptionItem2::InitCtrlWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerOptionItem2@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerOptionItem2@@UAEXHH@Z PROC	; CDlgServerOptionItem2::RectifyControl, COMDAT
; _this$ = ecx

; 1113 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1114 : 	return;
; 1115 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgServerOptionItem2@@UAEXHH@Z ENDP	; CDlgServerOptionItem2::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerOptionItem2@@UAE_NXZ
_TEXT	SEGMENT
tv890 = -184						; size = 4
tv889 = -180						; size = 4
tv881 = -180						; size = 4
tv801 = -177						; size = 1
tv770 = -177						; size = 1
tv739 = -177						; size = 1
tv708 = -177						; size = 1
tv685 = -177						; size = 1
tv662 = -177						; size = 1
tv639 = -177						; size = 1
tv616 = -177						; size = 1
tv593 = -177						; size = 1
tv570 = -177						; size = 1
tv547 = -177						; size = 1
tv524 = -177						; size = 1
tv501 = -177						; size = 1
tv478 = -177						; size = 1
tv455 = -177						; size = 1
tv432 = -177						; size = 1
tv409 = -177						; size = 1
tv386 = -177						; size = 1
tv363 = -177						; size = 1
tv340 = -177						; size = 1
tv317 = -177						; size = 1
tv294 = -177						; size = 1
tv271 = -177						; size = 1
_pAllowOffLineTrustee$1 = -112				; size = 4
_pAllowAndroidUser$2 = -108				; size = 4
_pAllowDynamicJoin$3 = -104				; size = 4
_pAllowAndroidSimulate$ = -100				; size = 4
_pForfendSaveInGame$ = -96				; size = 4
_pForfendSaveInRoom$ = -92				; size = 4
_pAvertCheatMode$ = -88					; size = 4
_pDynamicCellScore$ = -84				; size = 4
_pPlayBack$ = -80					; size = 4
_pSuportPC$ = -76					; size = 4
_pSuportMobile$ = -72					; size = 4
_pImmediateWriteScore$ = -68				; size = 4
_pRecordGameTrack$ = -64				; size = 4
_pRecordGameScore$ = -60				; size = 4
_pForfendLockTable$ = -56				; size = 4
_pForfendGameRule$ = -52				; size = 4
_pForfendGameLookon$ = -48				; size = 4
_pForfendGameEnter$ = -44				; size = 4
_pForfendRoomEnter$ = -40				; size = 4
_pForfendWisperOnGame$ = -36				; size = 4
_pForfendWisperChat$ = -32				; size = 4
_pForfendRoomChat$ = -28				; size = 4
_pForfendGameChat$ = -24				; size = 4
_nCurSelect$4 = -20					; size = 4
_nCurSelect$5 = -16					; size = 4
_pMaxMember$ = -12					; size = 4
_pMinMember$ = -8					; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerOptionItem2@@UAE_NXZ PROC	; CDlgServerOptionItem2::SaveInputInfo, COMDAT
; _this$ = ecx

; 967  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 968  : 	//变量定义
; 969  : 	CComboBox * pMinMember=(CComboBox *)GetDlgItem(IDC_MIN_ENTER_MEMBER);

  0000f	68 f1 03 00 00	 push	 1009			; 000003f1H
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001c	89 45 f8	 mov	 DWORD PTR _pMinMember$[ebp], eax

; 970  : 	CComboBox * pMaxMember=(CComboBox *)GetDlgItem(IDC_MAX_ENTER_MEMBER);

  0001f	68 f2 03 00 00	 push	 1010			; 000003f2H
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0002c	89 45 f4	 mov	 DWORD PTR _pMaxMember$[ebp], eax

; 971  : 
; 972  : 	//积分限制
; 973  : 	m_pGameServiceOption->cbMinEnterMember=0;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00038	c6 41 38 00	 mov	 BYTE PTR [ecx+56], 0

; 974  : 	m_pGameServiceOption->cbMaxEnterMember=0;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00045	c6 41 39 00	 mov	 BYTE PTR [ecx+57], 0

; 975  : 	m_pGameServiceOption->lMinEnterScore=GetDlgItemInt(IDC_MIN_ENTER_SCORE);

  00049	6a 01		 push	 1
  0004b	6a 00		 push	 0
  0004d	68 03 04 00 00	 push	 1027			; 00000403H
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0005a	33 c9		 xor	 ecx, ecx
  0005c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  00065	89 42 28	 mov	 DWORD PTR [edx+40], eax
  00068	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx

; 976  : 	m_pGameServiceOption->lMaxEnterScore=GetDlgItemInt(IDC_MAX_ENTER_SCORE);

  0006b	6a 01		 push	 1
  0006d	6a 00		 push	 0
  0006f	68 04 04 00 00	 push	 1028			; 00000404H
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0007c	33 c9		 xor	 ecx, ecx
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  00087	89 42 30	 mov	 DWORD PTR [edx+48], eax
  0008a	89 4a 34	 mov	 DWORD PTR [edx+52], ecx

; 977  : 	m_pGameServiceOption->lMinTableScore=GetDlgItemInt(IDC_MIN_TABLE_SCORE);

  0008d	6a 01		 push	 1
  0008f	6a 00		 push	 0
  00091	68 05 04 00 00	 push	 1029			; 00000405H
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0009e	33 c9		 xor	 ecx, ecx
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  000a9	89 42 20	 mov	 DWORD PTR [edx+32], eax
  000ac	89 4a 24	 mov	 DWORD PTR [edx+36], ecx

; 978  : 
; 979  : 	//会员限制
; 980  : 	if (pMinMember->GetCurSel()!=LB_ERR)

  000af	8b 4d f8	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  000b2	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000b7	83 f8 ff	 cmp	 eax, -1
  000ba	74 23		 je	 SHORT $LN2@SaveInputI

; 981  : 	{
; 982  : 		INT nCurSelect=pMinMember->GetCurSel();

  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  000bf	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000c4	89 45 f0	 mov	 DWORD PTR _nCurSelect$5[ebp], eax

; 983  : 		m_pGameServiceOption->cbMinEnterMember=(BYTE)pMinMember->GetItemData(nCurSelect);

  000c7	8b 45 f0	 mov	 eax, DWORD PTR _nCurSelect$5[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d f8	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  000ce	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  000dc	88 42 38	 mov	 BYTE PTR [edx+56], al
$LN2@SaveInputI:

; 984  : 	}
; 985  : 
; 986  : 	//最高会员
; 987  : 	if (pMaxMember->GetCurSel()!=LB_ERR)

  000df	8b 4d f4	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  000e2	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000e7	83 f8 ff	 cmp	 eax, -1
  000ea	74 23		 je	 SHORT $LN3@SaveInputI

; 988  : 	{
; 989  : 		INT nCurSelect=pMaxMember->GetCurSel();

  000ec	8b 4d f4	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  000ef	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000f4	89 45 ec	 mov	 DWORD PTR _nCurSelect$4[ebp], eax

; 990  : 		m_pGameServiceOption->cbMaxEnterMember=(BYTE)pMaxMember->GetItemData(nCurSelect);

  000f7	8b 45 ec	 mov	 eax, DWORD PTR _nCurSelect$4[ebp]
  000fa	50		 push	 eax
  000fb	8b 4d f4	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  000fe	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0010c	88 42 39	 mov	 BYTE PTR [edx+57], al
$LN3@SaveInputI:

; 991  : 	}
; 992  : 
; 993  : 	//参数效验
; 994  : 	if ((m_pGameServiceOption->lMaxEnterScore!=0L)&&(m_pGameServiceOption->lMaxEnterScore<m_pGameServiceOption->lMinEnterScore))

  0010f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00112	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00118	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv881[ebp], ecx
  0011e	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv881[ebp]
  00124	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv881[ebp]
  0012a	8b 4a 30	 mov	 ecx, DWORD PTR [edx+48]
  0012d	0b 48 34	 or	 ecx, DWORD PTR [eax+52]
  00130	74 5d		 je	 SHORT $LN4@SaveInputI
  00132	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00135	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0013b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0013e	8b 82 b0 00 00
	00		 mov	 eax, DWORD PTR [edx+176]
  00144	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv889[ebp], ecx
  0014a	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv890[ebp], eax
  00150	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv889[ebp]
  00156	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv890[ebp]
  0015c	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  0015f	3b 42 2c	 cmp	 eax, DWORD PTR [edx+44]
  00162	7f 2b		 jg	 SHORT $LN4@SaveInputI
  00164	7c 14		 jl	 SHORT $LN56@SaveInputI
  00166	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv889[ebp]
  0016c	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv890[ebp]
  00172	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00175	3b 42 28	 cmp	 eax, DWORD PTR [edx+40]
  00178	73 15		 jae	 SHORT $LN4@SaveInputI
$LN56@SaveInputI:

; 995  : 	{
; 996  : 		AfxMessageBox(TEXT("进入房间最低成绩比最高成绩还高，将会造成任何玩家都不能进入"),MB_ICONERROR);

  0017a	6a 00		 push	 0
  0017c	6a 10		 push	 16			; 00000010H
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@MGOIAGMH@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LD?I?$LM?$KI?$LB?H?W?n?$LI?$NP?$LD?I?$LM?$KI?$LL?$LJ?$LI?$NP?$KD@
  00183	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 997  : 		return false;

  00188	32 c0		 xor	 al, al
  0018a	e9 22 07 00 00	 jmp	 $LN1@SaveInputI
$LN4@SaveInputI:

; 998  : 	}
; 999  : 
; 1000 : 	//参数效验
; 1001 : 	if ((m_pGameServiceOption->cbMaxEnterMember!=0L)&&(m_pGameServiceOption->cbMaxEnterMember<m_pGameServiceOption->cbMinEnterMember))

  0018f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00192	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00198	0f b6 51 39	 movzx	 edx, BYTE PTR [ecx+57]
  0019c	85 d2		 test	 edx, edx
  0019e	74 33		 je	 SHORT $LN5@SaveInputI
  001a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001a9	0f b6 51 39	 movzx	 edx, BYTE PTR [ecx+57]
  001ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001b0	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001b6	0f b6 41 38	 movzx	 eax, BYTE PTR [ecx+56]
  001ba	3b d0		 cmp	 edx, eax
  001bc	7d 15		 jge	 SHORT $LN5@SaveInputI

; 1002 : 	{
; 1003 : 		AfxMessageBox(TEXT("进入房间最低会员级别比最高会员级别还高，将会造成任何玩家都不能进入"),MB_ICONERROR);

  001be	6a 00		 push	 0
  001c0	6a 10		 push	 16			; 00000010H
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@CLCMPDHD@?$LN?x?H?k?$LH?$LP?$LM?d?W?n?$LF?M?$LL?a?T?$LB?$LM?$LG?$LB?p?$LB?H?W?n?$LI?$NP?$LL?a?T?$LB?$LM@
  001c7	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1004 : 		return false;

  001cc	32 c0		 xor	 al, al
  001ce	e9 de 06 00 00	 jmp	 $LN1@SaveInputI
$LN5@SaveInputI:

; 1005 : 	}
; 1006 : 
; 1007 : 	//禁止公聊
; 1008 : 	CButton * pForfendGameChat=(CButton *)GetDlgItem(IDC_FORFEND_GAME_CHAT);

  001d3	68 2e 23 00 00	 push	 9006			; 0000232eH
  001d8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001e0	89 45 e8	 mov	 DWORD PTR _pForfendGameChat$[ebp], eax

; 1009 : 	CServerRule::SetForfendGameChat(m_pGameServiceOption->dwServerRule,(pForfendGameChat->GetCheck()==BST_CHECKED));

  001e3	8b 4d e8	 mov	 ecx, DWORD PTR _pForfendGameChat$[ebp]
  001e6	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  001eb	83 f8 01	 cmp	 eax, 1
  001ee	75 09		 jne	 SHORT $LN10@SaveInputI
  001f0	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv271[ebp], 1
  001f7	eb 07		 jmp	 SHORT $LN11@SaveInputI
$LN10@SaveInputI:
  001f9	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv271[ebp], 0
$LN11@SaveInputI:
  00200	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv271[ebp]
  00207	50		 push	 eax
  00208	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020b	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00211	83 c2 3c	 add	 edx, 60			; 0000003cH
  00214	52		 push	 edx
  00215	e8 00 00 00 00	 call	 ?SetForfendGameChat@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameChat
  0021a	83 c4 08	 add	 esp, 8

; 1010 : 
; 1011 : 	//禁止公聊
; 1012 : 	CButton * pForfendRoomChat=(CButton *)GetDlgItem(IDC_FORFEND_ROOM_CHAT);

  0021d	68 2c 23 00 00	 push	 9004			; 0000232cH
  00222	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00225	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0022a	89 45 e4	 mov	 DWORD PTR _pForfendRoomChat$[ebp], eax

; 1013 : 	CServerRule::SetForfendRoomChat(m_pGameServiceOption->dwServerRule,(pForfendRoomChat->GetCheck()==BST_CHECKED));

  0022d	8b 4d e4	 mov	 ecx, DWORD PTR _pForfendRoomChat$[ebp]
  00230	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00235	83 f8 01	 cmp	 eax, 1
  00238	75 09		 jne	 SHORT $LN12@SaveInputI
  0023a	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv294[ebp], 1
  00241	eb 07		 jmp	 SHORT $LN13@SaveInputI
$LN12@SaveInputI:
  00243	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv294[ebp], 0
$LN13@SaveInputI:
  0024a	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv294[ebp]
  00251	50		 push	 eax
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00255	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0025b	83 c2 3c	 add	 edx, 60			; 0000003cH
  0025e	52		 push	 edx
  0025f	e8 00 00 00 00	 call	 ?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendRoomChat
  00264	83 c4 08	 add	 esp, 8

; 1014 : 
; 1015 : 	//禁止私聊
; 1016 : 	CButton * pForfendWisperChat=(CButton *)GetDlgItem(IDC_FORFEND_WISPER_CHAT);

  00267	68 2d 23 00 00	 push	 9005			; 0000232dH
  0026c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00274	89 45 e0	 mov	 DWORD PTR _pForfendWisperChat$[ebp], eax

; 1017 : 	CServerRule::SetForfendWisperChat(m_pGameServiceOption->dwServerRule,(pForfendWisperChat->GetCheck()==BST_CHECKED));

  00277	8b 4d e0	 mov	 ecx, DWORD PTR _pForfendWisperChat$[ebp]
  0027a	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0027f	83 f8 01	 cmp	 eax, 1
  00282	75 09		 jne	 SHORT $LN14@SaveInputI
  00284	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv317[ebp], 1
  0028b	eb 07		 jmp	 SHORT $LN15@SaveInputI
$LN14@SaveInputI:
  0028d	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv317[ebp], 0
$LN15@SaveInputI:
  00294	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv317[ebp]
  0029b	50		 push	 eax
  0029c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029f	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  002a5	83 c2 3c	 add	 edx, 60			; 0000003cH
  002a8	52		 push	 edx
  002a9	e8 00 00 00 00	 call	 ?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendWisperChat
  002ae	83 c4 08	 add	 esp, 8

; 1018 : 
; 1019 : 	//禁止私聊
; 1020 : 	CButton * pForfendWisperOnGame=(CButton *)GetDlgItem(IDC_FORFEND_WISPER_ON_GAME);

  002b1	68 36 23 00 00	 push	 9014			; 00002336H
  002b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002be	89 45 dc	 mov	 DWORD PTR _pForfendWisperOnGame$[ebp], eax

; 1021 : 	CServerRule::SetForfendWisperOnGame(m_pGameServiceOption->dwServerRule,(pForfendWisperOnGame->GetCheck()==BST_CHECKED));

  002c1	8b 4d dc	 mov	 ecx, DWORD PTR _pForfendWisperOnGame$[ebp]
  002c4	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  002c9	83 f8 01	 cmp	 eax, 1
  002cc	75 09		 jne	 SHORT $LN16@SaveInputI
  002ce	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv340[ebp], 1
  002d5	eb 07		 jmp	 SHORT $LN17@SaveInputI
$LN16@SaveInputI:
  002d7	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv340[ebp], 0
$LN17@SaveInputI:
  002de	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv340[ebp]
  002e5	50		 push	 eax
  002e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e9	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  002ef	83 c2 3c	 add	 edx, 60			; 0000003cH
  002f2	52		 push	 edx
  002f3	e8 00 00 00 00	 call	 ?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendWisperOnGame
  002f8	83 c4 08	 add	 esp, 8

; 1022 : 
; 1023 : 	//禁止进入
; 1024 : 	CButton * pForfendRoomEnter=(CButton *)GetDlgItem(IDC_FORFEND_ROOM_ENTER);

  002fb	68 35 23 00 00	 push	 9013			; 00002335H
  00300	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00303	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00308	89 45 d8	 mov	 DWORD PTR _pForfendRoomEnter$[ebp], eax

; 1025 : 	CServerRule::SetForfendRoomEnter(m_pGameServiceOption->dwServerRule,(pForfendRoomEnter->GetCheck()==BST_CHECKED));

  0030b	8b 4d d8	 mov	 ecx, DWORD PTR _pForfendRoomEnter$[ebp]
  0030e	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00313	83 f8 01	 cmp	 eax, 1
  00316	75 09		 jne	 SHORT $LN18@SaveInputI
  00318	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv363[ebp], 1
  0031f	eb 07		 jmp	 SHORT $LN19@SaveInputI
$LN18@SaveInputI:
  00321	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv363[ebp], 0
$LN19@SaveInputI:
  00328	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv363[ebp]
  0032f	50		 push	 eax
  00330	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00333	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00339	83 c2 3c	 add	 edx, 60			; 0000003cH
  0033c	52		 push	 edx
  0033d	e8 00 00 00 00	 call	 ?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendRoomEnter
  00342	83 c4 08	 add	 esp, 8

; 1026 : 
; 1027 : 	//禁止进入
; 1028 : 	CButton * pForfendGameEnter=(CButton *)GetDlgItem(IDC_FORFEND_GAME_ENTER);

  00345	68 31 23 00 00	 push	 9009			; 00002331H
  0034a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0034d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00352	89 45 d4	 mov	 DWORD PTR _pForfendGameEnter$[ebp], eax

; 1029 : 	CServerRule::SetForfendGameEnter(m_pGameServiceOption->dwServerRule,(pForfendGameEnter->GetCheck()==BST_CHECKED));

  00355	8b 4d d4	 mov	 ecx, DWORD PTR _pForfendGameEnter$[ebp]
  00358	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0035d	83 f8 01	 cmp	 eax, 1
  00360	75 09		 jne	 SHORT $LN20@SaveInputI
  00362	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv386[ebp], 1
  00369	eb 07		 jmp	 SHORT $LN21@SaveInputI
$LN20@SaveInputI:
  0036b	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv386[ebp], 0
$LN21@SaveInputI:
  00372	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv386[ebp]
  00379	50		 push	 eax
  0037a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0037d	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00383	83 c2 3c	 add	 edx, 60			; 0000003cH
  00386	52		 push	 edx
  00387	e8 00 00 00 00	 call	 ?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameEnter
  0038c	83 c4 08	 add	 esp, 8

; 1030 : 
; 1031 : 	//禁止旁观
; 1032 : 	CButton * pForfendGameLookon=(CButton *)GetDlgItem(IDC_FORFEND_GAME_LOOKON);

  0038f	68 30 23 00 00	 push	 9008			; 00002330H
  00394	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00397	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0039c	89 45 d0	 mov	 DWORD PTR _pForfendGameLookon$[ebp], eax

; 1033 : 	CServerRule::SetForfendGameLookon(m_pGameServiceOption->dwServerRule,(pForfendGameLookon->GetCheck()==BST_CHECKED));

  0039f	8b 4d d0	 mov	 ecx, DWORD PTR _pForfendGameLookon$[ebp]
  003a2	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  003a7	83 f8 01	 cmp	 eax, 1
  003aa	75 09		 jne	 SHORT $LN22@SaveInputI
  003ac	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv409[ebp], 1
  003b3	eb 07		 jmp	 SHORT $LN23@SaveInputI
$LN22@SaveInputI:
  003b5	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv409[ebp], 0
$LN23@SaveInputI:
  003bc	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv409[ebp]
  003c3	50		 push	 eax
  003c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c7	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  003cd	83 c2 3c	 add	 edx, 60			; 0000003cH
  003d0	52		 push	 edx
  003d1	e8 00 00 00 00	 call	 ?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameLookon
  003d6	83 c4 08	 add	 esp, 8

; 1034 : 
; 1035 : 	//禁止规则
; 1036 : 	CButton * pForfendGameRule=(CButton *)GetDlgItem(IDC_FORFEND_GAME_RULE);

  003d9	68 37 23 00 00	 push	 9015			; 00002337H
  003de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003e1	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  003e6	89 45 cc	 mov	 DWORD PTR _pForfendGameRule$[ebp], eax

; 1037 : 	CServerRule::SetForfendGameRule(m_pGameServiceOption->dwServerRule,(pForfendGameRule->GetCheck()==BST_CHECKED));

  003e9	8b 4d cc	 mov	 ecx, DWORD PTR _pForfendGameRule$[ebp]
  003ec	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  003f1	83 f8 01	 cmp	 eax, 1
  003f4	75 09		 jne	 SHORT $LN24@SaveInputI
  003f6	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv432[ebp], 1
  003fd	eb 07		 jmp	 SHORT $LN25@SaveInputI
$LN24@SaveInputI:
  003ff	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv432[ebp], 0
$LN25@SaveInputI:
  00406	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv432[ebp]
  0040d	50		 push	 eax
  0040e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00411	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00417	83 c2 3c	 add	 edx, 60			; 0000003cH
  0041a	52		 push	 edx
  0041b	e8 00 00 00 00	 call	 ?SetForfendGameRule@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameRule
  00420	83 c4 08	 add	 esp, 8

; 1038 : 
; 1039 : 	//禁止锁桌
; 1040 : 	CButton * pForfendLockTable=(CButton *)GetDlgItem(IDC_FORFEND_LOCK_TABLE);

  00423	68 38 23 00 00	 push	 9016			; 00002338H
  00428	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0042b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00430	89 45 c8	 mov	 DWORD PTR _pForfendLockTable$[ebp], eax

; 1041 : 	CServerRule::SetForfendLockTable(m_pGameServiceOption->dwServerRule,(pForfendLockTable->GetCheck()==BST_CHECKED));

  00433	8b 4d c8	 mov	 ecx, DWORD PTR _pForfendLockTable$[ebp]
  00436	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0043b	83 f8 01	 cmp	 eax, 1
  0043e	75 09		 jne	 SHORT $LN26@SaveInputI
  00440	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv455[ebp], 1
  00447	eb 07		 jmp	 SHORT $LN27@SaveInputI
$LN26@SaveInputI:
  00449	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv455[ebp], 0
$LN27@SaveInputI:
  00450	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv455[ebp]
  00457	50		 push	 eax
  00458	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0045b	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00461	83 c2 3c	 add	 edx, 60			; 0000003cH
  00464	52		 push	 edx
  00465	e8 00 00 00 00	 call	 ?SetForfendLockTable@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendLockTable
  0046a	83 c4 08	 add	 esp, 8

; 1042 : 
; 1043 : 	//记录积分
; 1044 : 	CButton * pRecordGameScore=(CButton *)GetDlgItem(IDC_RECORD_GAME_SCORE);

  0046d	68 2a 23 00 00	 push	 9002			; 0000232aH
  00472	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00475	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0047a	89 45 c4	 mov	 DWORD PTR _pRecordGameScore$[ebp], eax

; 1045 : 	CServerRule::SetRecordGameScore(m_pGameServiceOption->dwServerRule,(pRecordGameScore->GetCheck()==BST_CHECKED));

  0047d	8b 4d c4	 mov	 ecx, DWORD PTR _pRecordGameScore$[ebp]
  00480	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00485	83 f8 01	 cmp	 eax, 1
  00488	75 09		 jne	 SHORT $LN28@SaveInputI
  0048a	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv478[ebp], 1
  00491	eb 07		 jmp	 SHORT $LN29@SaveInputI
$LN28@SaveInputI:
  00493	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv478[ebp], 0
$LN29@SaveInputI:
  0049a	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv478[ebp]
  004a1	50		 push	 eax
  004a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004a5	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  004ab	83 c2 3c	 add	 edx, 60			; 0000003cH
  004ae	52		 push	 edx
  004af	e8 00 00 00 00	 call	 ?SetRecordGameScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetRecordGameScore
  004b4	83 c4 08	 add	 esp, 8

; 1046 : 
; 1047 : 	//记录过程
; 1048 : 	CButton * pRecordGameTrack=(CButton *)GetDlgItem(IDC_RECORD_GAME_TRACK);

  004b7	68 2b 23 00 00	 push	 9003			; 0000232bH
  004bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004bf	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  004c4	89 45 c0	 mov	 DWORD PTR _pRecordGameTrack$[ebp], eax

; 1049 : 	CServerRule::SetRecordGameTrack(m_pGameServiceOption->dwServerRule,(pRecordGameTrack->GetCheck()==BST_CHECKED));

  004c7	8b 4d c0	 mov	 ecx, DWORD PTR _pRecordGameTrack$[ebp]
  004ca	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  004cf	83 f8 01	 cmp	 eax, 1
  004d2	75 09		 jne	 SHORT $LN30@SaveInputI
  004d4	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv501[ebp], 1
  004db	eb 07		 jmp	 SHORT $LN31@SaveInputI
$LN30@SaveInputI:
  004dd	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv501[ebp], 0
$LN31@SaveInputI:
  004e4	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv501[ebp]
  004eb	50		 push	 eax
  004ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ef	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  004f5	83 c2 3c	 add	 edx, 60			; 0000003cH
  004f8	52		 push	 edx
  004f9	e8 00 00 00 00	 call	 ?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z ; CServerRule::SetRecordGameTrack
  004fe	83 c4 08	 add	 esp, 8

; 1050 : 
; 1051 : 	//即时写分
; 1052 : 	CButton * pImmediateWriteScore=(CButton *)GetDlgItem(IDC_IMMEDIATE_WRITE_SCORE);

  00501	68 29 23 00 00	 push	 9001			; 00002329H
  00506	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00509	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0050e	89 45 bc	 mov	 DWORD PTR _pImmediateWriteScore$[ebp], eax

; 1053 : 	CServerRule::SetImmediateWriteScore(m_pGameServiceOption->dwServerRule,(pImmediateWriteScore->GetCheck()==BST_CHECKED));

  00511	8b 4d bc	 mov	 ecx, DWORD PTR _pImmediateWriteScore$[ebp]
  00514	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00519	83 f8 01	 cmp	 eax, 1
  0051c	75 09		 jne	 SHORT $LN32@SaveInputI
  0051e	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv524[ebp], 1
  00525	eb 07		 jmp	 SHORT $LN33@SaveInputI
$LN32@SaveInputI:
  00527	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv524[ebp], 0
$LN33@SaveInputI:
  0052e	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv524[ebp]
  00535	50		 push	 eax
  00536	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00539	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0053f	83 c2 3c	 add	 edx, 60			; 0000003cH
  00542	52		 push	 edx
  00543	e8 00 00 00 00	 call	 ?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetImmediateWriteScore
  00548	83 c4 08	 add	 esp, 8

; 1054 : 
; 1055 : 	//手机支持
; 1056 : 	CButton* pSuportMobile = (CButton*)GetDlgItem(IDC_SERVER_SUPORT_MOBILE);

  0054b	68 42 23 00 00	 push	 9026			; 00002342H
  00550	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00553	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00558	89 45 b8	 mov	 DWORD PTR _pSuportMobile$[ebp], eax

; 1057 : 	CServerRule::SetSuportMobile(m_pGameServiceOption->dwServerRule, (pSuportMobile->GetCheck()==BST_CHECKED));

  0055b	8b 4d b8	 mov	 ecx, DWORD PTR _pSuportMobile$[ebp]
  0055e	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00563	83 f8 01	 cmp	 eax, 1
  00566	75 09		 jne	 SHORT $LN34@SaveInputI
  00568	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv547[ebp], 1
  0056f	eb 07		 jmp	 SHORT $LN35@SaveInputI
$LN34@SaveInputI:
  00571	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv547[ebp], 0
$LN35@SaveInputI:
  00578	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv547[ebp]
  0057f	50		 push	 eax
  00580	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00583	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00589	83 c2 3c	 add	 edx, 60			; 0000003cH
  0058c	52		 push	 edx
  0058d	e8 00 00 00 00	 call	 ?SetSuportMobile@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportMobile
  00592	83 c4 08	 add	 esp, 8

; 1058 : 
; 1059 : 	//pc支持
; 1060 : 	CButton* pSuportPC = (CButton*)GetDlgItem(IDC_SERVER_SUPORT_PC);

  00595	68 43 23 00 00	 push	 9027			; 00002343H
  0059a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0059d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  005a2	89 45 b4	 mov	 DWORD PTR _pSuportPC$[ebp], eax

; 1061 : 	CServerRule::SetSuportPC(m_pGameServiceOption->dwServerRule, (pSuportPC->GetCheck()==BST_CHECKED));

  005a5	8b 4d b4	 mov	 ecx, DWORD PTR _pSuportPC$[ebp]
  005a8	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  005ad	83 f8 01	 cmp	 eax, 1
  005b0	75 09		 jne	 SHORT $LN36@SaveInputI
  005b2	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv570[ebp], 1
  005b9	eb 07		 jmp	 SHORT $LN37@SaveInputI
$LN36@SaveInputI:
  005bb	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv570[ebp], 0
$LN37@SaveInputI:
  005c2	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv570[ebp]
  005c9	50		 push	 eax
  005ca	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005cd	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  005d3	83 c2 3c	 add	 edx, 60			; 0000003cH
  005d6	52		 push	 edx
  005d7	e8 00 00 00 00	 call	 ?SetSuportPC@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportPC
  005dc	83 c4 08	 add	 esp, 8

; 1062 : 
; 1063 : 	//支持回放
; 1064 : 	CButton* pPlayBack = (CButton*)GetDlgItem(IDC_SERVER_SUPORT_VIDEO);

  005df	68 44 23 00 00	 push	 9028			; 00002344H
  005e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e7	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  005ec	89 45 b0	 mov	 DWORD PTR _pPlayBack$[ebp], eax

; 1065 : 	CServerRule::SetSuportPlayBack(m_pGameServiceOption->dwServerRule, (pPlayBack->GetCheck()==BST_CHECKED));

  005ef	8b 4d b0	 mov	 ecx, DWORD PTR _pPlayBack$[ebp]
  005f2	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  005f7	83 f8 01	 cmp	 eax, 1
  005fa	75 09		 jne	 SHORT $LN38@SaveInputI
  005fc	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv593[ebp], 1
  00603	eb 07		 jmp	 SHORT $LN39@SaveInputI
$LN38@SaveInputI:
  00605	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv593[ebp], 0
$LN39@SaveInputI:
  0060c	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv593[ebp]
  00613	50		 push	 eax
  00614	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00617	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0061d	83 c2 3c	 add	 edx, 60			; 0000003cH
  00620	52		 push	 edx
  00621	e8 00 00 00 00	 call	 ?SetSuportPlayBack@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportPlayBack
  00626	83 c4 08	 add	 esp, 8

; 1066 : 
; 1067 : 	//动态底分
; 1068 : 	CButton * pDynamicCellScore=(CButton *)GetDlgItem(IDC_DYNAMIC_CELL_SCORE);

  00629	68 3d 23 00 00	 push	 9021			; 0000233dH
  0062e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00631	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00636	89 45 ac	 mov	 DWORD PTR _pDynamicCellScore$[ebp], eax

; 1069 : 	CServerRule::SetDynamicCellScore(m_pGameServiceOption->dwServerRule,(pDynamicCellScore->GetCheck()==BST_CHECKED));

  00639	8b 4d ac	 mov	 ecx, DWORD PTR _pDynamicCellScore$[ebp]
  0063c	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00641	83 f8 01	 cmp	 eax, 1
  00644	75 09		 jne	 SHORT $LN40@SaveInputI
  00646	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv616[ebp], 1
  0064d	eb 07		 jmp	 SHORT $LN41@SaveInputI
$LN40@SaveInputI:
  0064f	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv616[ebp], 0
$LN41@SaveInputI:
  00656	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv616[ebp]
  0065d	50		 push	 eax
  0065e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00661	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00667	83 c2 3c	 add	 edx, 60			; 0000003cH
  0066a	52		 push	 edx
  0066b	e8 00 00 00 00	 call	 ?SetDynamicCellScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetDynamicCellScore
  00670	83 c4 08	 add	 esp, 8

; 1070 : 
; 1071 : 	//隐藏信息
; 1072 : 	CButton * pAvertCheatMode=(CButton *)GetDlgItem(IDC_ALLOW_AVERT_CHEAT_MODE);

  00673	68 33 23 00 00	 push	 9011			; 00002333H
  00678	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0067b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00680	89 45 a8	 mov	 DWORD PTR _pAvertCheatMode$[ebp], eax

; 1073 : 	CServerRule::SetAllowAvertCheatMode(m_pGameServiceOption->dwServerRule,(pAvertCheatMode->GetCheck()==BST_CHECKED));

  00683	8b 4d a8	 mov	 ecx, DWORD PTR _pAvertCheatMode$[ebp]
  00686	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0068b	83 f8 01	 cmp	 eax, 1
  0068e	75 09		 jne	 SHORT $LN42@SaveInputI
  00690	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv639[ebp], 1
  00697	eb 07		 jmp	 SHORT $LN43@SaveInputI
$LN42@SaveInputI:
  00699	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv639[ebp], 0
$LN43@SaveInputI:
  006a0	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv639[ebp]
  006a7	50		 push	 eax
  006a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006ab	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  006b1	83 c2 3c	 add	 edx, 60			; 0000003cH
  006b4	52		 push	 edx
  006b5	e8 00 00 00 00	 call	 ?SetAllowAvertCheatMode@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowAvertCheatMode
  006ba	83 c4 08	 add	 esp, 8

; 1074 : 
; 1075 : 	//禁止存钱
; 1076 : 	CButton * pForfendSaveInRoom=(CButton *)GetDlgItem(IDC_FORFEND_SAVE_IN_ROOM);

  006bd	68 3a 23 00 00	 push	 9018			; 0000233aH
  006c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006c5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  006ca	89 45 a4	 mov	 DWORD PTR _pForfendSaveInRoom$[ebp], eax

; 1077 : 	CServerRule::SetForfendSaveInRoom(m_pGameServiceOption->dwServerRule,(pForfendSaveInRoom->GetCheck()==BST_CHECKED));

  006cd	8b 4d a4	 mov	 ecx, DWORD PTR _pForfendSaveInRoom$[ebp]
  006d0	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  006d5	83 f8 01	 cmp	 eax, 1
  006d8	75 09		 jne	 SHORT $LN44@SaveInputI
  006da	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv662[ebp], 1
  006e1	eb 07		 jmp	 SHORT $LN45@SaveInputI
$LN44@SaveInputI:
  006e3	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv662[ebp], 0
$LN45@SaveInputI:
  006ea	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv662[ebp]
  006f1	50		 push	 eax
  006f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f5	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  006fb	83 c2 3c	 add	 edx, 60			; 0000003cH
  006fe	52		 push	 edx
  006ff	e8 00 00 00 00	 call	 ?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendSaveInRoom
  00704	83 c4 08	 add	 esp, 8

; 1078 : 
; 1079 : 	//禁止存钱
; 1080 : 	CButton * pForfendSaveInGame=(CButton *)GetDlgItem(IDC_FORFEND_SAVE_IN_GAME);

  00707	68 39 23 00 00	 push	 9017			; 00002339H
  0070c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0070f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00714	89 45 a0	 mov	 DWORD PTR _pForfendSaveInGame$[ebp], eax

; 1081 : 	CServerRule::SetForfendSaveInGame(m_pGameServiceOption->dwServerRule,(pForfendSaveInGame->GetCheck()==BST_CHECKED));

  00717	8b 4d a0	 mov	 ecx, DWORD PTR _pForfendSaveInGame$[ebp]
  0071a	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0071f	83 f8 01	 cmp	 eax, 1
  00722	75 09		 jne	 SHORT $LN46@SaveInputI
  00724	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv685[ebp], 1
  0072b	eb 07		 jmp	 SHORT $LN47@SaveInputI
$LN46@SaveInputI:
  0072d	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv685[ebp], 0
$LN47@SaveInputI:
  00734	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv685[ebp]
  0073b	50		 push	 eax
  0073c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0073f	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00745	83 c2 3c	 add	 edx, 60			; 0000003cH
  00748	52		 push	 edx
  00749	e8 00 00 00 00	 call	 ?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendSaveInGame
  0074e	83 c4 08	 add	 esp, 8

; 1082 : 
; 1083 : 	//允许占位
; 1084 : 	CButton * pAllowAndroidSimulate=(CButton *)GetDlgItem(IDC_ALLOW_ANDROID_SIMULATE);

  00751	68 3b 23 00 00	 push	 9019			; 0000233bH
  00756	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00759	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0075e	89 45 9c	 mov	 DWORD PTR _pAllowAndroidSimulate$[ebp], eax

; 1085 : 	CServerRule::SetAllowAndroidSimulate(m_pGameServiceOption->dwServerRule,(pAllowAndroidSimulate->GetCheck()==BST_CHECKED));

  00761	8b 4d 9c	 mov	 ecx, DWORD PTR _pAllowAndroidSimulate$[ebp]
  00764	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00769	83 f8 01	 cmp	 eax, 1
  0076c	75 09		 jne	 SHORT $LN48@SaveInputI
  0076e	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv708[ebp], 1
  00775	eb 07		 jmp	 SHORT $LN49@SaveInputI
$LN48@SaveInputI:
  00777	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv708[ebp], 0
$LN49@SaveInputI:
  0077e	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv708[ebp]
  00785	50		 push	 eax
  00786	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00789	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0078f	83 c2 3c	 add	 edx, 60			; 0000003cH
  00792	52		 push	 edx
  00793	e8 00 00 00 00	 call	 ?SetAllowAndroidSimulate@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowAndroidSimulate
  00798	83 c4 08	 add	 esp, 8

; 1086 : 
; 1087 : 	//动态加入
; 1088 : 	if (m_pGameServiceAttrib->cbDynamicJoin==TRUE)

  0079b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0079e	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  007a4	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  007a8	83 fa 01	 cmp	 edx, 1
  007ab	75 4a		 jne	 SHORT $LN6@SaveInputI

; 1089 : 	{
; 1090 : 		CButton * pAllowDynamicJoin=(CButton *)GetDlgItem(IDC_ALLOW_DYNAMIC_JOIN);

  007ad	68 2f 23 00 00	 push	 9007			; 0000232fH
  007b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007b5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  007ba	89 45 98	 mov	 DWORD PTR _pAllowDynamicJoin$3[ebp], eax

; 1091 : 		CServerRule::SetAllowDynamicJoin(m_pGameServiceOption->dwServerRule,(pAllowDynamicJoin->GetCheck()==BST_CHECKED));

  007bd	8b 4d 98	 mov	 ecx, DWORD PTR _pAllowDynamicJoin$3[ebp]
  007c0	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  007c5	83 f8 01	 cmp	 eax, 1
  007c8	75 09		 jne	 SHORT $LN50@SaveInputI
  007ca	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv739[ebp], 1
  007d1	eb 07		 jmp	 SHORT $LN51@SaveInputI
$LN50@SaveInputI:
  007d3	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv739[ebp], 0
$LN51@SaveInputI:
  007da	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv739[ebp]
  007e1	50		 push	 eax
  007e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007e5	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  007eb	83 c2 3c	 add	 edx, 60			; 0000003cH
  007ee	52		 push	 edx
  007ef	e8 00 00 00 00	 call	 ?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowDynamicJoin
  007f4	83 c4 08	 add	 esp, 8
$LN6@SaveInputI:

; 1092 : 	}
; 1093 : 
; 1094 : 	//允许陪玩
; 1095 : 	if (m_pGameServiceAttrib->cbAndroidUser==TRUE)

  007f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007fa	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00800	0f b6 51 26	 movzx	 edx, BYTE PTR [ecx+38]
  00804	83 fa 01	 cmp	 edx, 1
  00807	75 4a		 jne	 SHORT $LN7@SaveInputI

; 1096 : 	{
; 1097 : 		CButton * pAllowAndroidUser=(CButton *)GetDlgItem(IDC_ALLOW_ANDROID_ATTEND);

  00809	68 34 23 00 00	 push	 9012			; 00002334H
  0080e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00811	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00816	89 45 94	 mov	 DWORD PTR _pAllowAndroidUser$2[ebp], eax

; 1098 : 		CServerRule::SetAllowAndroidAttend(m_pGameServiceOption->dwServerRule,(pAllowAndroidUser->GetCheck()==BST_CHECKED));

  00819	8b 4d 94	 mov	 ecx, DWORD PTR _pAllowAndroidUser$2[ebp]
  0081c	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00821	83 f8 01	 cmp	 eax, 1
  00824	75 09		 jne	 SHORT $LN52@SaveInputI
  00826	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv770[ebp], 1
  0082d	eb 07		 jmp	 SHORT $LN53@SaveInputI
$LN52@SaveInputI:
  0082f	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv770[ebp], 0
$LN53@SaveInputI:
  00836	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv770[ebp]
  0083d	50		 push	 eax
  0083e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00841	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00847	83 c2 3c	 add	 edx, 60			; 0000003cH
  0084a	52		 push	 edx
  0084b	e8 00 00 00 00	 call	 ?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowAndroidAttend
  00850	83 c4 08	 add	 esp, 8
$LN7@SaveInputI:

; 1099 : 	}
; 1100 : 
; 1101 : 	//断线代打
; 1102 : 	if (m_pGameServiceAttrib->cbOffLineTrustee==TRUE)

  00853	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00856	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0085c	0f b6 51 28	 movzx	 edx, BYTE PTR [ecx+40]
  00860	83 fa 01	 cmp	 edx, 1
  00863	75 4a		 jne	 SHORT $LN8@SaveInputI

; 1103 : 	{
; 1104 : 		CButton * pAllowOffLineTrustee=(CButton *)GetDlgItem(IDC_ALLOW_OFFLINE_TRUSTEE);

  00865	68 32 23 00 00	 push	 9010			; 00002332H
  0086a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0086d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00872	89 45 90	 mov	 DWORD PTR _pAllowOffLineTrustee$1[ebp], eax

; 1105 : 		CServerRule::SetAllowOffLineTrustee(m_pGameServiceOption->dwServerRule,(pAllowOffLineTrustee->GetCheck()==BST_CHECKED));

  00875	8b 4d 90	 mov	 ecx, DWORD PTR _pAllowOffLineTrustee$1[ebp]
  00878	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  0087d	83 f8 01	 cmp	 eax, 1
  00880	75 09		 jne	 SHORT $LN54@SaveInputI
  00882	c6 85 4f ff ff
	ff 01		 mov	 BYTE PTR tv801[ebp], 1
  00889	eb 07		 jmp	 SHORT $LN55@SaveInputI
$LN54@SaveInputI:
  0088b	c6 85 4f ff ff
	ff 00		 mov	 BYTE PTR tv801[ebp], 0
$LN55@SaveInputI:
  00892	0f b6 85 4f ff
	ff ff		 movzx	 eax, BYTE PTR tv801[ebp]
  00899	50		 push	 eax
  0089a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0089d	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  008a3	83 c2 3c	 add	 edx, 60			; 0000003cH
  008a6	52		 push	 edx
  008a7	e8 00 00 00 00	 call	 ?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z ; CServerRule::SetAllowOffLineTrustee
  008ac	83 c4 08	 add	 esp, 8
$LN8@SaveInputI:

; 1106 : 	}
; 1107 : 
; 1108 : 	return true;

  008af	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1109 : }

  008b1	5f		 pop	 edi
  008b2	5e		 pop	 esi
  008b3	5b		 pop	 ebx
  008b4	8b e5		 mov	 esp, ebp
  008b6	5d		 pop	 ebp
  008b7	c3		 ret	 0
?SaveInputInfo@CDlgServerOptionItem2@@UAE_NXZ ENDP	; CDlgServerOptionItem2::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerOptionItem2@@MAEHXZ
_TEXT	SEGMENT
tv1208 = -112						; size = 4
tv1200 = -112						; size = 4
tv1192 = -112						; size = 4
tv1011 = -112						; size = 4
tv979 = -112						; size = 4
tv947 = -112						; size = 4
tv817 = -112						; size = 4
tv793 = -112						; size = 4
tv769 = -112						; size = 4
tv745 = -112						; size = 4
tv721 = -112						; size = 4
tv697 = -112						; size = 4
tv673 = -112						; size = 4
tv649 = -112						; size = 4
tv625 = -112						; size = 4
tv568 = -112						; size = 4
tv544 = -112						; size = 4
tv520 = -112						; size = 4
tv455 = -112						; size = 4
tv390 = -112						; size = 4
tv366 = -112						; size = 4
tv342 = -112						; size = 4
tv318 = -112						; size = 4
tv294 = -112						; size = 4
tv270 = -112						; size = 4
tv246 = -112						; size = 4
_bAllowOffLineTrustee$1 = -43				; size = 1
_bAllowAndroidAttend$2 = -42				; size = 1
_bAllowDynamicJoin$3 = -41				; size = 1
_bPlayBack$ = -40					; size = 1
_bSuportPC$ = -39					; size = 1
_bSuportMobile$ = -38					; size = 1
_bAllowAndroidSimulate$ = -37				; size = 1
_bForfendSaveInGame$ = -36				; size = 1
_bForfendSaveInRoom$ = -35				; size = 1
_bAllowAvertCheatMode$ = -34				; size = 1
_bDynamicCellScore$ = -33				; size = 1
_bImmediateWriteScore$ = -32				; size = 1
_bRecordGameTrack$ = -31				; size = 1
_bRecordGameScore$ = -30				; size = 1
_bForfendLockTable$ = -29				; size = 1
_bForfendGameRule$ = -28				; size = 1
_bForfendGameLookon$ = -27				; size = 1
_bForfendGameEnter$ = -26				; size = 1
_bForfendRoomEnter$ = -25				; size = 1
_bForfendWisperOnGame$ = -24				; size = 1
_bForfendWisperChat$ = -23				; size = 1
_bForfendRoomChat$ = -22				; size = 1
_bForfendGameChat$ = -21				; size = 1
_i$4 = -20						; size = 4
_i$5 = -16						; size = 4
_pMaxMember$ = -12					; size = 4
_pMinMember$ = -8					; size = 4
_this$ = -4						; size = 4
?OnInitDialog@CDlgServerOptionItem2@@MAEHXZ PROC	; CDlgServerOptionItem2::OnInitDialog, COMDAT
; _this$ = ecx

; 778  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 779  : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 780  : 
; 781  : 	//构造控件
; 782  : 	InitCtrlWindow();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?InitCtrlWindow@CDlgServerOptionItem2@@IAEXXZ ; CDlgServerOptionItem2::InitCtrlWindow

; 783  : 
; 784  : 	//变量定义
; 785  : 	CComboBox * pMinMember=(CComboBox *)GetDlgItem(IDC_MIN_ENTER_MEMBER);

  0001c	68 f1 03 00 00	 push	 1009			; 000003f1H
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00029	89 45 f8	 mov	 DWORD PTR _pMinMember$[ebp], eax

; 786  : 	CComboBox * pMaxMember=(CComboBox *)GetDlgItem(IDC_MAX_ENTER_MEMBER);

  0002c	68 f2 03 00 00	 push	 1010			; 000003f2H
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00039	89 45 f4	 mov	 DWORD PTR _pMaxMember$[ebp], eax

; 787  : 
; 788  : 	//房间配置
; 789  : 	if (m_pGameServiceOption->lMinEnterScore!=0) SetDlgItemInt(IDC_MIN_ENTER_SCORE,(LONG)m_pGameServiceOption->lMinEnterScore);

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00045	89 4d 90	 mov	 DWORD PTR tv1192[ebp], ecx
  00048	8b 55 90	 mov	 edx, DWORD PTR tv1192[ebp]
  0004b	8b 45 90	 mov	 eax, DWORD PTR tv1192[ebp]
  0004e	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  00051	0b 48 2c	 or	 ecx, DWORD PTR [eax+44]
  00054	74 1c		 je	 SHORT $LN8@OnInitDial
  00056	6a 01		 push	 1
  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00061	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00064	52		 push	 edx
  00065	68 03 04 00 00	 push	 1027			; 00000403H
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN8@OnInitDial:

; 790  : 	if (m_pGameServiceOption->lMaxEnterScore!=0) SetDlgItemInt(IDC_MAX_ENTER_SCORE,(LONG)m_pGameServiceOption->lMaxEnterScore);

  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0007b	89 4d 90	 mov	 DWORD PTR tv1200[ebp], ecx
  0007e	8b 55 90	 mov	 edx, DWORD PTR tv1200[ebp]
  00081	8b 45 90	 mov	 eax, DWORD PTR tv1200[ebp]
  00084	8b 4a 30	 mov	 ecx, DWORD PTR [edx+48]
  00087	0b 48 34	 or	 ecx, DWORD PTR [eax+52]
  0008a	74 1c		 je	 SHORT $LN9@OnInitDial
  0008c	6a 01		 push	 1
  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00097	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0009a	52		 push	 edx
  0009b	68 04 04 00 00	 push	 1028			; 00000404H
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN9@OnInitDial:

; 791  : 	if (m_pGameServiceOption->lMinTableScore!=0) SetDlgItemInt(IDC_MIN_TABLE_SCORE,(LONG)m_pGameServiceOption->lMinTableScore);

  000a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b1	89 4d 90	 mov	 DWORD PTR tv1208[ebp], ecx
  000b4	8b 55 90	 mov	 edx, DWORD PTR tv1208[ebp]
  000b7	8b 45 90	 mov	 eax, DWORD PTR tv1208[ebp]
  000ba	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  000bd	0b 48 24	 or	 ecx, DWORD PTR [eax+36]
  000c0	74 1c		 je	 SHORT $LN10@OnInitDial
  000c2	6a 01		 push	 1
  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000cd	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  000d0	52		 push	 edx
  000d1	68 05 04 00 00	 push	 1029			; 00000405H
  000d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN10@OnInitDial:

; 792  : 
; 793  : 	//会员限制
; 794  : 	//if (m_pGameServiceOption->cbMaxEnterMember!=0)
; 795  : 	{
; 796  : 		//最低会员
; 797  : 		for (INT i=0;i<pMinMember->GetCount();i++)

  000de	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  000e5	eb 09		 jmp	 SHORT $LN4@OnInitDial
$LN2@OnInitDial:
  000e7	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  000ea	83 c0 01	 add	 eax, 1
  000ed	89 45 f0	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@OnInitDial:
  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  000f3	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  000f8	39 45 f0	 cmp	 DWORD PTR _i$5[ebp], eax
  000fb	7d 2d		 jge	 SHORT $LN3@OnInitDial

; 798  : 		{
; 799  : 			if (pMinMember->GetItemData(i)==m_pGameServiceOption->cbMinEnterMember)

  000fd	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  00100	50		 push	 eax
  00101	8b 4d f8	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  00104	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00112	0f b6 4a 38	 movzx	 ecx, BYTE PTR [edx+56]
  00116	3b c1		 cmp	 eax, ecx
  00118	75 0e		 jne	 SHORT $LN11@OnInitDial

; 800  : 			{
; 801  : 				pMinMember->SetCurSel(i);

  0011a	8b 45 f0	 mov	 eax, DWORD PTR _i$5[ebp]
  0011d	50		 push	 eax
  0011e	8b 4d f8	 mov	 ecx, DWORD PTR _pMinMember$[ebp]
  00121	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 802  : 				break;

  00126	eb 02		 jmp	 SHORT $LN3@OnInitDial
$LN11@OnInitDial:

; 803  : 			}
; 804  : 		}

  00128	eb bd		 jmp	 SHORT $LN2@OnInitDial
$LN3@OnInitDial:

; 805  : 
; 806  : 		//最高会员
; 807  : 		for (INT i=0;i<pMaxMember->GetCount();i++)

  0012a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00131	eb 09		 jmp	 SHORT $LN7@OnInitDial
$LN5@OnInitDial:
  00133	8b 45 ec	 mov	 eax, DWORD PTR _i$4[ebp]
  00136	83 c0 01	 add	 eax, 1
  00139	89 45 ec	 mov	 DWORD PTR _i$4[ebp], eax
$LN7@OnInitDial:
  0013c	8b 4d f4	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  0013f	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  00144	39 45 ec	 cmp	 DWORD PTR _i$4[ebp], eax
  00147	7d 2d		 jge	 SHORT $LN6@OnInitDial

; 808  : 		{
; 809  : 			if (pMaxMember->GetItemData(i)==m_pGameServiceOption->cbMaxEnterMember)

  00149	8b 45 ec	 mov	 eax, DWORD PTR _i$4[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d f4	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  00150	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00155	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00158	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  0015e	0f b6 4a 39	 movzx	 ecx, BYTE PTR [edx+57]
  00162	3b c1		 cmp	 eax, ecx
  00164	75 0e		 jne	 SHORT $LN12@OnInitDial

; 810  : 			{
; 811  : 				pMaxMember->SetCurSel(i);

  00166	8b 45 ec	 mov	 eax, DWORD PTR _i$4[ebp]
  00169	50		 push	 eax
  0016a	8b 4d f4	 mov	 ecx, DWORD PTR _pMaxMember$[ebp]
  0016d	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 812  : 				break;

  00172	eb 02		 jmp	 SHORT $LN6@OnInitDial
$LN12@OnInitDial:

; 813  : 			}
; 814  : 		}

  00174	eb bd		 jmp	 SHORT $LN5@OnInitDial
$LN6@OnInitDial:

; 815  : 	}
; 816  : 
; 817  : 	//禁止公聊
; 818  : 	bool bForfendGameChat=CServerRule::IsForfendGameChat(m_pGameServiceOption->dwServerRule);

  00176	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00179	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0017f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 ?IsForfendGameChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameChat
  00188	83 c4 04	 add	 esp, 4
  0018b	88 45 eb	 mov	 BYTE PTR _bForfendGameChat$[ebp], al

; 819  : 	((CButton *)GetDlgItem(IDC_FORFEND_GAME_CHAT))->SetCheck((bForfendGameChat==TRUE)?BST_CHECKED:BST_UNCHECKED);

  0018e	0f b6 45 eb	 movzx	 eax, BYTE PTR _bForfendGameChat$[ebp]
  00192	83 f8 01	 cmp	 eax, 1
  00195	75 09		 jne	 SHORT $LN26@OnInitDial
  00197	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv246[ebp], 1
  0019e	eb 07		 jmp	 SHORT $LN27@OnInitDial
$LN26@OnInitDial:
  001a0	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv246[ebp], 0
$LN27@OnInitDial:
  001a7	8b 4d 90	 mov	 ecx, DWORD PTR tv246[ebp]
  001aa	51		 push	 ecx
  001ab	68 2e 23 00 00	 push	 9006			; 0000232eH
  001b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b3	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001b8	8b c8		 mov	 ecx, eax
  001ba	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 820  : 
; 821  : 	//禁止公聊
; 822  : 	bool bForfendRoomChat=CServerRule::IsForfendRoomChat(m_pGameServiceOption->dwServerRule);

  001bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c2	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001c8	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?IsForfendRoomChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomChat
  001d1	83 c4 04	 add	 esp, 4
  001d4	88 45 ea	 mov	 BYTE PTR _bForfendRoomChat$[ebp], al

; 823  : 	((CButton *)GetDlgItem(IDC_FORFEND_ROOM_CHAT))->SetCheck((bForfendRoomChat==TRUE)?BST_CHECKED:BST_UNCHECKED);

  001d7	0f b6 45 ea	 movzx	 eax, BYTE PTR _bForfendRoomChat$[ebp]
  001db	83 f8 01	 cmp	 eax, 1
  001de	75 09		 jne	 SHORT $LN28@OnInitDial
  001e0	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv270[ebp], 1
  001e7	eb 07		 jmp	 SHORT $LN29@OnInitDial
$LN28@OnInitDial:
  001e9	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv270[ebp], 0
$LN29@OnInitDial:
  001f0	8b 4d 90	 mov	 ecx, DWORD PTR tv270[ebp]
  001f3	51		 push	 ecx
  001f4	68 2c 23 00 00	 push	 9004			; 0000232cH
  001f9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fc	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00201	8b c8		 mov	 ecx, eax
  00203	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 824  : 
; 825  : 	//禁止私聊
; 826  : 	bool bForfendWisperChat=CServerRule::IsForfendWisperChat(m_pGameServiceOption->dwServerRule);

  00208	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00211	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00214	52		 push	 edx
  00215	e8 00 00 00 00	 call	 ?IsForfendWisperChat@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperChat
  0021a	83 c4 04	 add	 esp, 4
  0021d	88 45 e9	 mov	 BYTE PTR _bForfendWisperChat$[ebp], al

; 827  : 	((CButton *)GetDlgItem(IDC_FORFEND_WISPER_CHAT))->SetCheck((bForfendWisperChat==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00220	0f b6 45 e9	 movzx	 eax, BYTE PTR _bForfendWisperChat$[ebp]
  00224	83 f8 01	 cmp	 eax, 1
  00227	75 09		 jne	 SHORT $LN30@OnInitDial
  00229	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv294[ebp], 1
  00230	eb 07		 jmp	 SHORT $LN31@OnInitDial
$LN30@OnInitDial:
  00232	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv294[ebp], 0
$LN31@OnInitDial:
  00239	8b 4d 90	 mov	 ecx, DWORD PTR tv294[ebp]
  0023c	51		 push	 ecx
  0023d	68 2d 23 00 00	 push	 9005			; 0000232dH
  00242	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00245	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0024a	8b c8		 mov	 ecx, eax
  0024c	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 828  : 
; 829  : 	//禁止私聊
; 830  : 	bool bForfendWisperOnGame=CServerRule::IsForfendWisperOnGame(m_pGameServiceOption->dwServerRule);

  00251	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00254	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0025a	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0025d	52		 push	 edx
  0025e	e8 00 00 00 00	 call	 ?IsForfendWisperOnGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendWisperOnGame
  00263	83 c4 04	 add	 esp, 4
  00266	88 45 e8	 mov	 BYTE PTR _bForfendWisperOnGame$[ebp], al

; 831  : 	((CButton *)GetDlgItem(IDC_FORFEND_WISPER_ON_GAME))->SetCheck((bForfendWisperOnGame==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00269	0f b6 45 e8	 movzx	 eax, BYTE PTR _bForfendWisperOnGame$[ebp]
  0026d	83 f8 01	 cmp	 eax, 1
  00270	75 09		 jne	 SHORT $LN32@OnInitDial
  00272	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv318[ebp], 1
  00279	eb 07		 jmp	 SHORT $LN33@OnInitDial
$LN32@OnInitDial:
  0027b	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv318[ebp], 0
$LN33@OnInitDial:
  00282	8b 4d 90	 mov	 ecx, DWORD PTR tv318[ebp]
  00285	51		 push	 ecx
  00286	68 36 23 00 00	 push	 9014			; 00002336H
  0028b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0028e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00293	8b c8		 mov	 ecx, eax
  00295	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 832  : 
; 833  : 	//禁止进入
; 834  : 	bool bForfendRoomEnter=CServerRule::IsForfendRoomEnter(m_pGameServiceOption->dwServerRule);

  0029a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0029d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002a3	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002a6	52		 push	 edx
  002a7	e8 00 00 00 00	 call	 ?IsForfendRoomEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendRoomEnter
  002ac	83 c4 04	 add	 esp, 4
  002af	88 45 e7	 mov	 BYTE PTR _bForfendRoomEnter$[ebp], al

; 835  : 	((CButton *)GetDlgItem(IDC_FORFEND_ROOM_ENTER))->SetCheck((bForfendRoomEnter==TRUE)?BST_CHECKED:BST_UNCHECKED);

  002b2	0f b6 45 e7	 movzx	 eax, BYTE PTR _bForfendRoomEnter$[ebp]
  002b6	83 f8 01	 cmp	 eax, 1
  002b9	75 09		 jne	 SHORT $LN34@OnInitDial
  002bb	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv342[ebp], 1
  002c2	eb 07		 jmp	 SHORT $LN35@OnInitDial
$LN34@OnInitDial:
  002c4	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv342[ebp], 0
$LN35@OnInitDial:
  002cb	8b 4d 90	 mov	 ecx, DWORD PTR tv342[ebp]
  002ce	51		 push	 ecx
  002cf	68 35 23 00 00	 push	 9013			; 00002335H
  002d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d7	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002dc	8b c8		 mov	 ecx, eax
  002de	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 836  : 
; 837  : 	//禁止进入
; 838  : 	bool bForfendGameEnter=CServerRule::IsForfendGameEnter(m_pGameServiceOption->dwServerRule);

  002e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e6	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002ec	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  002ef	52		 push	 edx
  002f0	e8 00 00 00 00	 call	 ?IsForfendGameEnter@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameEnter
  002f5	83 c4 04	 add	 esp, 4
  002f8	88 45 e6	 mov	 BYTE PTR _bForfendGameEnter$[ebp], al

; 839  : 	((CButton *)GetDlgItem(IDC_FORFEND_GAME_ENTER))->SetCheck((bForfendGameEnter==TRUE)?BST_CHECKED:BST_UNCHECKED);

  002fb	0f b6 45 e6	 movzx	 eax, BYTE PTR _bForfendGameEnter$[ebp]
  002ff	83 f8 01	 cmp	 eax, 1
  00302	75 09		 jne	 SHORT $LN36@OnInitDial
  00304	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv366[ebp], 1
  0030b	eb 07		 jmp	 SHORT $LN37@OnInitDial
$LN36@OnInitDial:
  0030d	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv366[ebp], 0
$LN37@OnInitDial:
  00314	8b 4d 90	 mov	 ecx, DWORD PTR tv366[ebp]
  00317	51		 push	 ecx
  00318	68 31 23 00 00	 push	 9009			; 00002331H
  0031d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00320	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00325	8b c8		 mov	 ecx, eax
  00327	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 840  : 
; 841  : 	//禁止旁观
; 842  : 	bool bForfendGameLookon=CServerRule::IsForfendGameLookon(m_pGameServiceOption->dwServerRule);

  0032c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0032f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00335	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00338	52		 push	 edx
  00339	e8 00 00 00 00	 call	 ?IsForfendGameLookon@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameLookon
  0033e	83 c4 04	 add	 esp, 4
  00341	88 45 e5	 mov	 BYTE PTR _bForfendGameLookon$[ebp], al

; 843  : 	((CButton *)GetDlgItem(IDC_FORFEND_GAME_LOOKON))->SetCheck((bForfendGameLookon==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00344	0f b6 45 e5	 movzx	 eax, BYTE PTR _bForfendGameLookon$[ebp]
  00348	83 f8 01	 cmp	 eax, 1
  0034b	75 09		 jne	 SHORT $LN38@OnInitDial
  0034d	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv390[ebp], 1
  00354	eb 07		 jmp	 SHORT $LN39@OnInitDial
$LN38@OnInitDial:
  00356	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv390[ebp], 0
$LN39@OnInitDial:
  0035d	8b 4d 90	 mov	 ecx, DWORD PTR tv390[ebp]
  00360	51		 push	 ecx
  00361	68 30 23 00 00	 push	 9008			; 00002330H
  00366	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00369	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0036e	8b c8		 mov	 ecx, eax
  00370	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 844  : 
; 845  : 	//禁止规则
; 846  : 	if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR) CServerRule::SetForfendGameRule(m_pGameServiceOption->dwServerRule, true);

  00375	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00378	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0037e	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00382	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00388	7c 17		 jl	 SHORT $LN13@OnInitDial
  0038a	6a 01		 push	 1
  0038c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0038f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00395	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00398	51		 push	 ecx
  00399	e8 00 00 00 00	 call	 ?SetForfendGameRule@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendGameRule
  0039e	83 c4 08	 add	 esp, 8
$LN13@OnInitDial:

; 847  : 	if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR) ((CButton *)GetDlgItem(IDC_FORFEND_GAME_RULE))->EnableWindow(FALSE);

  003a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003a4	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  003aa	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  003ae	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  003b4	7c 16		 jl	 SHORT $LN14@OnInitDial
  003b6	6a 00		 push	 0
  003b8	68 37 23 00 00	 push	 9015			; 00002337H
  003bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  003c5	8b c8		 mov	 ecx, eax
  003c7	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN14@OnInitDial:

; 848  : 	bool bForfendGameRule=CServerRule::IsForfendGameRule(m_pGameServiceOption->dwServerRule);

  003cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003cf	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  003d5	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  003d8	52		 push	 edx
  003d9	e8 00 00 00 00	 call	 ?IsForfendGameRule@CServerRule@@SA_NK@Z ; CServerRule::IsForfendGameRule
  003de	83 c4 04	 add	 esp, 4
  003e1	88 45 e4	 mov	 BYTE PTR _bForfendGameRule$[ebp], al

; 849  : 	((CButton *)GetDlgItem(IDC_FORFEND_GAME_RULE))->SetCheck((bForfendGameRule==TRUE)?BST_CHECKED:BST_UNCHECKED);

  003e4	0f b6 45 e4	 movzx	 eax, BYTE PTR _bForfendGameRule$[ebp]
  003e8	83 f8 01	 cmp	 eax, 1
  003eb	75 09		 jne	 SHORT $LN40@OnInitDial
  003ed	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv455[ebp], 1
  003f4	eb 07		 jmp	 SHORT $LN41@OnInitDial
$LN40@OnInitDial:
  003f6	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv455[ebp], 0
$LN41@OnInitDial:
  003fd	8b 4d 90	 mov	 ecx, DWORD PTR tv455[ebp]
  00400	51		 push	 ecx
  00401	68 37 23 00 00	 push	 9015			; 00002337H
  00406	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00409	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0040e	8b c8		 mov	 ecx, eax
  00410	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 850  : 
; 851  : 	//禁止锁桌
; 852  : 	if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR) CServerRule::SetForfendLockTable(m_pGameServiceOption->dwServerRule, true);

  00415	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00418	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0041e	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00422	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00428	7c 17		 jl	 SHORT $LN15@OnInitDial
  0042a	6a 01		 push	 1
  0042c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0042f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00435	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00438	51		 push	 ecx
  00439	e8 00 00 00 00	 call	 ?SetForfendLockTable@CServerRule@@SAXAAK_N@Z ; CServerRule::SetForfendLockTable
  0043e	83 c4 08	 add	 esp, 8
$LN15@OnInitDial:

; 853  : 	if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR) ((CButton *)GetDlgItem(IDC_FORFEND_LOCK_TABLE))->EnableWindow(FALSE);

  00441	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00444	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0044a	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  0044e	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00454	7c 16		 jl	 SHORT $LN16@OnInitDial
  00456	6a 00		 push	 0
  00458	68 38 23 00 00	 push	 9016			; 00002338H
  0045d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00460	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00465	8b c8		 mov	 ecx, eax
  00467	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN16@OnInitDial:

; 854  : 	bool bForfendLockTable=CServerRule::IsForfendLockTable(m_pGameServiceOption->dwServerRule);

  0046c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0046f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00475	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00478	52		 push	 edx
  00479	e8 00 00 00 00	 call	 ?IsForfendLockTable@CServerRule@@SA_NK@Z ; CServerRule::IsForfendLockTable
  0047e	83 c4 04	 add	 esp, 4
  00481	88 45 e3	 mov	 BYTE PTR _bForfendLockTable$[ebp], al

; 855  : 	((CButton *)GetDlgItem(IDC_FORFEND_LOCK_TABLE))->SetCheck((bForfendLockTable==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00484	0f b6 45 e3	 movzx	 eax, BYTE PTR _bForfendLockTable$[ebp]
  00488	83 f8 01	 cmp	 eax, 1
  0048b	75 09		 jne	 SHORT $LN42@OnInitDial
  0048d	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv520[ebp], 1
  00494	eb 07		 jmp	 SHORT $LN43@OnInitDial
$LN42@OnInitDial:
  00496	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv520[ebp], 0
$LN43@OnInitDial:
  0049d	8b 4d 90	 mov	 ecx, DWORD PTR tv520[ebp]
  004a0	51		 push	 ecx
  004a1	68 38 23 00 00	 push	 9016			; 00002338H
  004a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004a9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  004ae	8b c8		 mov	 ecx, eax
  004b0	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 856  : 
; 857  : 	//记录积分
; 858  : 	bool bRecordGameScore=CServerRule::IsRecordGameScore(m_pGameServiceOption->dwServerRule);

  004b5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004b8	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  004be	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  004c1	52		 push	 edx
  004c2	e8 00 00 00 00	 call	 ?IsRecordGameScore@CServerRule@@SA_NK@Z ; CServerRule::IsRecordGameScore
  004c7	83 c4 04	 add	 esp, 4
  004ca	88 45 e2	 mov	 BYTE PTR _bRecordGameScore$[ebp], al

; 859  : 	((CButton *)GetDlgItem(IDC_RECORD_GAME_SCORE))->SetCheck((bRecordGameScore==TRUE)?BST_CHECKED:BST_UNCHECKED);

  004cd	0f b6 45 e2	 movzx	 eax, BYTE PTR _bRecordGameScore$[ebp]
  004d1	83 f8 01	 cmp	 eax, 1
  004d4	75 09		 jne	 SHORT $LN44@OnInitDial
  004d6	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv544[ebp], 1
  004dd	eb 07		 jmp	 SHORT $LN45@OnInitDial
$LN44@OnInitDial:
  004df	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv544[ebp], 0
$LN45@OnInitDial:
  004e6	8b 4d 90	 mov	 ecx, DWORD PTR tv544[ebp]
  004e9	51		 push	 ecx
  004ea	68 2a 23 00 00	 push	 9002			; 0000232aH
  004ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004f2	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  004f7	8b c8		 mov	 ecx, eax
  004f9	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 860  : 
; 861  : 	//记录过程
; 862  : 	bool bRecordGameTrack=CServerRule::IsRecordGameTrack(m_pGameServiceOption->dwServerRule);

  004fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00501	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00507	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0050a	52		 push	 edx
  0050b	e8 00 00 00 00	 call	 ?IsRecordGameTrack@CServerRule@@SA_NK@Z ; CServerRule::IsRecordGameTrack
  00510	83 c4 04	 add	 esp, 4
  00513	88 45 e1	 mov	 BYTE PTR _bRecordGameTrack$[ebp], al

; 863  : 	((CButton *)GetDlgItem(IDC_RECORD_GAME_TRACK))->SetCheck((bRecordGameTrack==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00516	0f b6 45 e1	 movzx	 eax, BYTE PTR _bRecordGameTrack$[ebp]
  0051a	83 f8 01	 cmp	 eax, 1
  0051d	75 09		 jne	 SHORT $LN46@OnInitDial
  0051f	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv568[ebp], 1
  00526	eb 07		 jmp	 SHORT $LN47@OnInitDial
$LN46@OnInitDial:
  00528	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv568[ebp], 0
$LN47@OnInitDial:
  0052f	8b 4d 90	 mov	 ecx, DWORD PTR tv568[ebp]
  00532	51		 push	 ecx
  00533	68 2b 23 00 00	 push	 9003			; 0000232bH
  00538	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0053b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00540	8b c8		 mov	 ecx, eax
  00542	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 864  : 	/*((CButton *)GetDlgItem(IDC_RECORD_GAME_TRACK))->SetCheck(BST_UNCHECKED);
; 865  : 	((CButton *)GetDlgItem(IDC_RECORD_GAME_TRACK))->EnableWindow(FALSE);*/
; 866  : 
; 867  : 	//所有财富游戏，每局即时写分，记录每局成绩，默认为直接勾选灰色状态
; 868  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_GOLD || GAME_GENRE_PERSONAL == m_pGameServiceOption->wServerType)

  00547	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0054a	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00550	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00554	83 fa 01	 cmp	 edx, 1
  00557	74 12		 je	 SHORT $LN18@OnInitDial
  00559	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0055c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00562	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00566	83 fa 10	 cmp	 edx, 16			; 00000010H
  00569	75 2d		 jne	 SHORT $LN17@OnInitDial
$LN18@OnInitDial:

; 869  : 	{
; 870  : 		CServerRule::SetImmediateWriteScore(m_pGameServiceOption->dwServerRule,true);

  0056b	6a 01		 push	 1
  0056d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00570	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00576	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetImmediateWriteScore
  0057f	83 c4 08	 add	 esp, 8

; 871  : 		GetDlgItem(IDC_IMMEDIATE_WRITE_SCORE)->EnableWindow(FALSE);

  00582	6a 00		 push	 0
  00584	68 29 23 00 00	 push	 9001			; 00002329H
  00589	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0058c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00591	8b c8		 mov	 ecx, eax
  00593	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN17@OnInitDial:

; 872  : 	}
; 873  : 
; 874  : 	//即时写分
; 875  : 	bool bImmediateWriteScore=CServerRule::IsImmediateWriteScore(m_pGameServiceOption->dwServerRule);

  00598	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0059b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  005a1	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  005a4	52		 push	 edx
  005a5	e8 00 00 00 00	 call	 ?IsImmediateWriteScore@CServerRule@@SA_NK@Z ; CServerRule::IsImmediateWriteScore
  005aa	83 c4 04	 add	 esp, 4
  005ad	88 45 e0	 mov	 BYTE PTR _bImmediateWriteScore$[ebp], al

; 876  : 	((CButton *)GetDlgItem(IDC_IMMEDIATE_WRITE_SCORE))->SetCheck((bImmediateWriteScore==TRUE)?BST_CHECKED:BST_UNCHECKED);

  005b0	0f b6 45 e0	 movzx	 eax, BYTE PTR _bImmediateWriteScore$[ebp]
  005b4	83 f8 01	 cmp	 eax, 1
  005b7	75 09		 jne	 SHORT $LN48@OnInitDial
  005b9	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv625[ebp], 1
  005c0	eb 07		 jmp	 SHORT $LN49@OnInitDial
$LN48@OnInitDial:
  005c2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv625[ebp], 0
$LN49@OnInitDial:
  005c9	8b 4d 90	 mov	 ecx, DWORD PTR tv625[ebp]
  005cc	51		 push	 ecx
  005cd	68 29 23 00 00	 push	 9001			; 00002329H
  005d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005d5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  005da	8b c8		 mov	 ecx, eax
  005dc	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 877  : 	
; 878  : 	//动态底分
; 879  : 	bool bDynamicCellScore=CServerRule::IsDynamicCellScore(m_pGameServiceOption->dwServerRule);

  005e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005e4	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  005ea	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  005ed	52		 push	 edx
  005ee	e8 00 00 00 00	 call	 ?IsDynamicCellScore@CServerRule@@SA_NK@Z ; CServerRule::IsDynamicCellScore
  005f3	83 c4 04	 add	 esp, 4
  005f6	88 45 df	 mov	 BYTE PTR _bDynamicCellScore$[ebp], al

; 880  : 	((CButton *)GetDlgItem(IDC_DYNAMIC_CELL_SCORE))->SetCheck((bDynamicCellScore==TRUE)?BST_CHECKED:BST_UNCHECKED);

  005f9	0f b6 45 df	 movzx	 eax, BYTE PTR _bDynamicCellScore$[ebp]
  005fd	83 f8 01	 cmp	 eax, 1
  00600	75 09		 jne	 SHORT $LN50@OnInitDial
  00602	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv649[ebp], 1
  00609	eb 07		 jmp	 SHORT $LN51@OnInitDial
$LN50@OnInitDial:
  0060b	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv649[ebp], 0
$LN51@OnInitDial:
  00612	8b 4d 90	 mov	 ecx, DWORD PTR tv649[ebp]
  00615	51		 push	 ecx
  00616	68 3d 23 00 00	 push	 9021			; 0000233dH
  0061b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00623	8b c8		 mov	 ecx, eax
  00625	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 881  : 	/*((CButton *)GetDlgItem(IDC_DYNAMIC_CELL_SCORE))->SetCheck(BST_UNCHECKED);
; 882  : 	((CButton *)GetDlgItem(IDC_DYNAMIC_CELL_SCORE))->EnableWindow(FALSE);*/
; 883  : 
; 884  : 	//隐藏信息
; 885  : 	bool bAllowAvertCheatMode=CServerRule::IsAllowAvertCheatMode(m_pGameServiceOption->dwServerRule);

  0062a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0062d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00633	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00636	52		 push	 edx
  00637	e8 00 00 00 00	 call	 ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAvertCheatMode
  0063c	83 c4 04	 add	 esp, 4
  0063f	88 45 de	 mov	 BYTE PTR _bAllowAvertCheatMode$[ebp], al

; 886  : 	((CButton *)GetDlgItem(IDC_ALLOW_AVERT_CHEAT_MODE))->SetCheck((bAllowAvertCheatMode==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00642	0f b6 45 de	 movzx	 eax, BYTE PTR _bAllowAvertCheatMode$[ebp]
  00646	83 f8 01	 cmp	 eax, 1
  00649	75 09		 jne	 SHORT $LN52@OnInitDial
  0064b	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv673[ebp], 1
  00652	eb 07		 jmp	 SHORT $LN53@OnInitDial
$LN52@OnInitDial:
  00654	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv673[ebp], 0
$LN53@OnInitDial:
  0065b	8b 4d 90	 mov	 ecx, DWORD PTR tv673[ebp]
  0065e	51		 push	 ecx
  0065f	68 33 23 00 00	 push	 9011			; 00002333H
  00664	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00667	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0066c	8b c8		 mov	 ecx, eax
  0066e	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 887  : 
; 888  : 	//禁止存钱
; 889  : 	bool bForfendSaveInRoom=CServerRule::IsForfendSaveInRoom(m_pGameServiceOption->dwServerRule);

  00673	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00676	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0067c	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0067f	52		 push	 edx
  00680	e8 00 00 00 00	 call	 ?IsForfendSaveInRoom@CServerRule@@SA_NK@Z ; CServerRule::IsForfendSaveInRoom
  00685	83 c4 04	 add	 esp, 4
  00688	88 45 dd	 mov	 BYTE PTR _bForfendSaveInRoom$[ebp], al

; 890  : 	((CButton *)GetDlgItem(IDC_FORFEND_SAVE_IN_ROOM))->SetCheck((bForfendSaveInRoom==TRUE)?BST_CHECKED:BST_UNCHECKED);

  0068b	0f b6 45 dd	 movzx	 eax, BYTE PTR _bForfendSaveInRoom$[ebp]
  0068f	83 f8 01	 cmp	 eax, 1
  00692	75 09		 jne	 SHORT $LN54@OnInitDial
  00694	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv697[ebp], 1
  0069b	eb 07		 jmp	 SHORT $LN55@OnInitDial
$LN54@OnInitDial:
  0069d	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv697[ebp], 0
$LN55@OnInitDial:
  006a4	8b 4d 90	 mov	 ecx, DWORD PTR tv697[ebp]
  006a7	51		 push	 ecx
  006a8	68 3a 23 00 00	 push	 9018			; 0000233aH
  006ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006b0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  006b5	8b c8		 mov	 ecx, eax
  006b7	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 891  : 
; 892  : 	//禁止存钱
; 893  : 	bool bForfendSaveInGame=CServerRule::IsForfendSaveInGame(m_pGameServiceOption->dwServerRule);

  006bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006bf	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  006c5	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  006c8	52		 push	 edx
  006c9	e8 00 00 00 00	 call	 ?IsForfendSaveInGame@CServerRule@@SA_NK@Z ; CServerRule::IsForfendSaveInGame
  006ce	83 c4 04	 add	 esp, 4
  006d1	88 45 dc	 mov	 BYTE PTR _bForfendSaveInGame$[ebp], al

; 894  : 	((CButton *)GetDlgItem(IDC_FORFEND_SAVE_IN_GAME))->SetCheck((bForfendSaveInGame==TRUE)?BST_CHECKED:BST_UNCHECKED);

  006d4	0f b6 45 dc	 movzx	 eax, BYTE PTR _bForfendSaveInGame$[ebp]
  006d8	83 f8 01	 cmp	 eax, 1
  006db	75 09		 jne	 SHORT $LN56@OnInitDial
  006dd	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv721[ebp], 1
  006e4	eb 07		 jmp	 SHORT $LN57@OnInitDial
$LN56@OnInitDial:
  006e6	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv721[ebp], 0
$LN57@OnInitDial:
  006ed	8b 4d 90	 mov	 ecx, DWORD PTR tv721[ebp]
  006f0	51		 push	 ecx
  006f1	68 39 23 00 00	 push	 9017			; 00002339H
  006f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006f9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  006fe	8b c8		 mov	 ecx, eax
  00700	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 895  : 
; 896  : 	//允许占位
; 897  : 	bool bAllowAndroidSimulate=CServerRule::IsAllowAndroidSimulate(m_pGameServiceOption->dwServerRule);

  00705	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00708	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0070e	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00711	52		 push	 edx
  00712	e8 00 00 00 00	 call	 ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidSimulate
  00717	83 c4 04	 add	 esp, 4
  0071a	88 45 db	 mov	 BYTE PTR _bAllowAndroidSimulate$[ebp], al

; 898  : 	((CButton *)GetDlgItem(IDC_ALLOW_ANDROID_SIMULATE))->SetCheck((bAllowAndroidSimulate==TRUE)?BST_CHECKED:BST_UNCHECKED);

  0071d	0f b6 45 db	 movzx	 eax, BYTE PTR _bAllowAndroidSimulate$[ebp]
  00721	83 f8 01	 cmp	 eax, 1
  00724	75 09		 jne	 SHORT $LN58@OnInitDial
  00726	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv745[ebp], 1
  0072d	eb 07		 jmp	 SHORT $LN59@OnInitDial
$LN58@OnInitDial:
  0072f	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv745[ebp], 0
$LN59@OnInitDial:
  00736	8b 4d 90	 mov	 ecx, DWORD PTR tv745[ebp]
  00739	51		 push	 ecx
  0073a	68 3b 23 00 00	 push	 9019			; 0000233bH
  0073f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00742	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00747	8b c8		 mov	 ecx, eax
  00749	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 899  : 
; 900  : 	//手机支持
; 901  : 	bool bSuportMobile = CServerRule::IsSuportMobile(m_pGameServiceOption->dwServerRule);

  0074e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00751	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00757	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0075a	52		 push	 edx
  0075b	e8 00 00 00 00	 call	 ?IsSuportMobile@CServerRule@@SA_NK@Z ; CServerRule::IsSuportMobile
  00760	83 c4 04	 add	 esp, 4
  00763	88 45 da	 mov	 BYTE PTR _bSuportMobile$[ebp], al

; 902  : 	((CButton*)GetDlgItem(IDC_SERVER_SUPORT_MOBILE))->SetCheck((bSuportMobile == TRUE) ? BST_CHECKED : BST_UNCHECKED);

  00766	0f b6 45 da	 movzx	 eax, BYTE PTR _bSuportMobile$[ebp]
  0076a	83 f8 01	 cmp	 eax, 1
  0076d	75 09		 jne	 SHORT $LN60@OnInitDial
  0076f	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv769[ebp], 1
  00776	eb 07		 jmp	 SHORT $LN61@OnInitDial
$LN60@OnInitDial:
  00778	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv769[ebp], 0
$LN61@OnInitDial:
  0077f	8b 4d 90	 mov	 ecx, DWORD PTR tv769[ebp]
  00782	51		 push	 ecx
  00783	68 42 23 00 00	 push	 9026			; 00002342H
  00788	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0078b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00790	8b c8		 mov	 ecx, eax
  00792	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 903  : 
; 904  : 	//pc支持
; 905  : 	bool bSuportPC = CServerRule::IsSuportPC(m_pGameServiceOption->dwServerRule);

  00797	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0079a	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  007a0	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  007a3	52		 push	 edx
  007a4	e8 00 00 00 00	 call	 ?IsSuportPC@CServerRule@@SA_NK@Z ; CServerRule::IsSuportPC
  007a9	83 c4 04	 add	 esp, 4
  007ac	88 45 d9	 mov	 BYTE PTR _bSuportPC$[ebp], al

; 906  : 	((CButton*)GetDlgItem(IDC_SERVER_SUPORT_PC))->SetCheck((bSuportPC == TRUE) ? BST_CHECKED : BST_UNCHECKED);

  007af	0f b6 45 d9	 movzx	 eax, BYTE PTR _bSuportPC$[ebp]
  007b3	83 f8 01	 cmp	 eax, 1
  007b6	75 09		 jne	 SHORT $LN62@OnInitDial
  007b8	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv793[ebp], 1
  007bf	eb 07		 jmp	 SHORT $LN63@OnInitDial
$LN62@OnInitDial:
  007c1	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv793[ebp], 0
$LN63@OnInitDial:
  007c8	8b 4d 90	 mov	 ecx, DWORD PTR tv793[ebp]
  007cb	51		 push	 ecx
  007cc	68 43 23 00 00	 push	 9027			; 00002343H
  007d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007d4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  007d9	8b c8		 mov	 ecx, eax
  007db	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 907  : 	
; 908  : 	//支持回放
; 909  : 	bool bPlayBack = CServerRule::IsSuportPlayBack(m_pGameServiceOption->dwServerRule);

  007e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  007e3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  007e9	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  007ec	52		 push	 edx
  007ed	e8 00 00 00 00	 call	 ?IsSuportPlayBack@CServerRule@@SA_NK@Z ; CServerRule::IsSuportPlayBack
  007f2	83 c4 04	 add	 esp, 4
  007f5	88 45 d8	 mov	 BYTE PTR _bPlayBack$[ebp], al

; 910  : 	((CButton*)GetDlgItem(IDC_SERVER_SUPORT_VIDEO))->SetCheck((bPlayBack==TRUE)?BST_CHECKED:BST_UNCHECKED);

  007f8	0f b6 45 d8	 movzx	 eax, BYTE PTR _bPlayBack$[ebp]
  007fc	83 f8 01	 cmp	 eax, 1
  007ff	75 09		 jne	 SHORT $LN64@OnInitDial
  00801	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv817[ebp], 1
  00808	eb 07		 jmp	 SHORT $LN65@OnInitDial
$LN64@OnInitDial:
  0080a	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv817[ebp], 0
$LN65@OnInitDial:
  00811	8b 4d 90	 mov	 ecx, DWORD PTR tv817[ebp]
  00814	51		 push	 ecx
  00815	68 44 23 00 00	 push	 9028			; 00002344H
  0081a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0081d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00822	8b c8		 mov	 ecx, eax
  00824	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 911  : 
; 912  : 	//如果是约战房 不允许支持pc
; 913  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00829	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0082c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00832	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00836	83 fa 10	 cmp	 edx, 16			; 00000010H
  00839	75 5a		 jne	 SHORT $LN19@OnInitDial

; 914  : 	{
; 915  : 		((CButton*)GetDlgItem(IDC_SERVER_SUPORT_PC))->SetCheck(false);

  0083b	6a 00		 push	 0
  0083d	68 43 23 00 00	 push	 9027			; 00002343H
  00842	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00845	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0084a	8b c8		 mov	 ecx, eax
  0084c	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 916  : 		((CButton*)GetDlgItem(IDC_SERVER_SUPORT_PC))->EnableWindow(false);

  00851	6a 00		 push	 0
  00853	68 43 23 00 00	 push	 9027			; 00002343H
  00858	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0085b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00860	8b c8		 mov	 ecx, eax
  00862	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 917  : 		((CButton*)GetDlgItem(IDC_SERVER_SUPORT_MOBILE))->SetCheck(true);

  00867	6a 01		 push	 1
  00869	68 42 23 00 00	 push	 9026			; 00002342H
  0086e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00871	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00876	8b c8		 mov	 ecx, eax
  00878	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 918  : 		((CButton*)GetDlgItem(IDC_SERVER_SUPORT_MOBILE))->EnableWindow(false);

  0087d	6a 00		 push	 0
  0087f	68 42 23 00 00	 push	 9026			; 00002342H
  00884	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00887	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0088c	8b c8		 mov	 ecx, eax
  0088e	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 919  : 	}
; 920  : 	else

  00893	eb 3c		 jmp	 SHORT $LN20@OnInitDial
$LN19@OnInitDial:

; 921  : 	{
; 922  : 		//非约战房，如果支持pc和支持收机都没勾选，则默认为都勾选
; 923  : 		if(!bSuportMobile && !bSuportPC)

  00895	0f b6 45 da	 movzx	 eax, BYTE PTR _bSuportMobile$[ebp]
  00899	85 c0		 test	 eax, eax
  0089b	75 34		 jne	 SHORT $LN20@OnInitDial
  0089d	0f b6 45 d9	 movzx	 eax, BYTE PTR _bSuportPC$[ebp]
  008a1	85 c0		 test	 eax, eax
  008a3	75 2c		 jne	 SHORT $LN20@OnInitDial

; 924  : 		{
; 925  : 			((CButton*)GetDlgItem(IDC_SERVER_SUPORT_PC))->SetCheck(true);

  008a5	6a 01		 push	 1
  008a7	68 43 23 00 00	 push	 9027			; 00002343H
  008ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008af	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  008b4	8b c8		 mov	 ecx, eax
  008b6	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 926  : 			((CButton*)GetDlgItem(IDC_SERVER_SUPORT_MOBILE))->SetCheck(true);

  008bb	6a 01		 push	 1
  008bd	68 42 23 00 00	 push	 9026			; 00002342H
  008c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008c5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  008ca	8b c8		 mov	 ecx, eax
  008cc	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN20@OnInitDial:

; 927  : 		}
; 928  : 	}
; 929  : 
; 930  : 	//动态加入
; 931  : 	if (m_pGameServiceAttrib->cbDynamicJoin==TRUE)

  008d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008d4	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  008da	0f b6 51 27	 movzx	 edx, BYTE PTR [ecx+39]
  008de	83 fa 01	 cmp	 edx, 1
  008e1	75 49		 jne	 SHORT $LN22@OnInitDial

; 932  : 	{
; 933  : 		bool bAllowDynamicJoin=CServerRule::IsAllowDynamicJoin(m_pGameServiceOption->dwServerRule);

  008e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  008e6	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  008ec	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  008ef	52		 push	 edx
  008f0	e8 00 00 00 00	 call	 ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ; CServerRule::IsAllowDynamicJoin
  008f5	83 c4 04	 add	 esp, 4
  008f8	88 45 d7	 mov	 BYTE PTR _bAllowDynamicJoin$3[ebp], al

; 934  : 		((CButton *)GetDlgItem(IDC_ALLOW_DYNAMIC_JOIN))->SetCheck((bAllowDynamicJoin==TRUE)?BST_CHECKED:BST_UNCHECKED);

  008fb	0f b6 45 d7	 movzx	 eax, BYTE PTR _bAllowDynamicJoin$3[ebp]
  008ff	83 f8 01	 cmp	 eax, 1
  00902	75 09		 jne	 SHORT $LN66@OnInitDial
  00904	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv947[ebp], 1
  0090b	eb 07		 jmp	 SHORT $LN67@OnInitDial
$LN66@OnInitDial:
  0090d	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv947[ebp], 0
$LN67@OnInitDial:
  00914	8b 4d 90	 mov	 ecx, DWORD PTR tv947[ebp]
  00917	51		 push	 ecx
  00918	68 2f 23 00 00	 push	 9007			; 0000232fH
  0091d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00920	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00925	8b c8		 mov	 ecx, eax
  00927	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN22@OnInitDial:

; 935  : 	}
; 936  : 
; 937  : 	//允许机器
; 938  : 	if (m_pGameServiceAttrib->cbAndroidUser==TRUE)

  0092c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0092f	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00935	0f b6 51 26	 movzx	 edx, BYTE PTR [ecx+38]
  00939	83 fa 01	 cmp	 edx, 1
  0093c	75 49		 jne	 SHORT $LN23@OnInitDial

; 939  : 	{
; 940  : 		bool bAllowAndroidAttend=CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule);

  0093e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00941	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00947	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0094a	52		 push	 edx
  0094b	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  00950	83 c4 04	 add	 esp, 4
  00953	88 45 d6	 mov	 BYTE PTR _bAllowAndroidAttend$2[ebp], al

; 941  : 		((CButton *)GetDlgItem(IDC_ALLOW_ANDROID_ATTEND))->SetCheck((bAllowAndroidAttend==TRUE)?BST_CHECKED:BST_UNCHECKED);

  00956	0f b6 45 d6	 movzx	 eax, BYTE PTR _bAllowAndroidAttend$2[ebp]
  0095a	83 f8 01	 cmp	 eax, 1
  0095d	75 09		 jne	 SHORT $LN68@OnInitDial
  0095f	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv979[ebp], 1
  00966	eb 07		 jmp	 SHORT $LN69@OnInitDial
$LN68@OnInitDial:
  00968	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv979[ebp], 0
$LN69@OnInitDial:
  0096f	8b 4d 90	 mov	 ecx, DWORD PTR tv979[ebp]
  00972	51		 push	 ecx
  00973	68 34 23 00 00	 push	 9012			; 00002334H
  00978	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0097b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00980	8b c8		 mov	 ecx, eax
  00982	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN23@OnInitDial:

; 942  : 	}
; 943  : 
; 944  : 	//断线代打
; 945  : 	if (m_pGameServiceAttrib->cbOffLineTrustee==TRUE)

  00987	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0098a	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00990	0f b6 51 28	 movzx	 edx, BYTE PTR [ecx+40]
  00994	83 fa 01	 cmp	 edx, 1
  00997	75 49		 jne	 SHORT $LN24@OnInitDial

; 946  : 	{
; 947  : 		bool bAllowOffLineTrustee=CServerRule::IsAllowOffLineTrustee(m_pGameServiceOption->dwServerRule);

  00999	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0099c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  009a2	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  009a5	52		 push	 edx
  009a6	e8 00 00 00 00	 call	 ?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z ; CServerRule::IsAllowOffLineTrustee
  009ab	83 c4 04	 add	 esp, 4
  009ae	88 45 d5	 mov	 BYTE PTR _bAllowOffLineTrustee$1[ebp], al

; 948  : 		((CButton *)GetDlgItem(IDC_ALLOW_OFFLINE_TRUSTEE))->SetCheck((bAllowOffLineTrustee==TRUE)?BST_CHECKED:BST_UNCHECKED);

  009b1	0f b6 45 d5	 movzx	 eax, BYTE PTR _bAllowOffLineTrustee$1[ebp]
  009b5	83 f8 01	 cmp	 eax, 1
  009b8	75 09		 jne	 SHORT $LN70@OnInitDial
  009ba	c7 45 90 01 00
	00 00		 mov	 DWORD PTR tv1011[ebp], 1
  009c1	eb 07		 jmp	 SHORT $LN71@OnInitDial
$LN70@OnInitDial:
  009c3	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv1011[ebp], 0
$LN71@OnInitDial:
  009ca	8b 4d 90	 mov	 ecx, DWORD PTR tv1011[ebp]
  009cd	51		 push	 ecx
  009ce	68 32 23 00 00	 push	 9010			; 00002332H
  009d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d6	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  009db	8b c8		 mov	 ecx, eax
  009dd	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN24@OnInitDial:

; 949  : 	}
; 950  : 	//((CButton *)GetDlgItem(IDC_ALLOW_OFFLINE_TRUSTEE))->SetCheck(BST_UNCHECKED);
; 951  : 	//((CButton *)GetDlgItem(IDC_ALLOW_OFFLINE_TRUSTEE))->EnableWindow(FALSE);
; 952  : 	m_ToolTipCtrl.Create(this);

  009e2	6a 00		 push	 0
  009e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009e7	50		 push	 eax
  009e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009eb	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  009f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009f4	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  009fa	8b 90 6c 01 00
	00		 mov	 edx, DWORD PTR [eax+364]
  00a00	ff d2		 call	 edx

; 953  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_FORFEND_GAME_RULE), _T("用户设置的房间规则无效"));

  00a02	6a 00		 push	 0
  00a04	6a 00		 push	 0
  00a06	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LELEGCLA@?S?C?$LL?$KH?I?h?V?C?$LF?D?$LH?$LP?$LM?d?$LJ?f?T?r?N?$NO?P?$KH@
  00a0b	68 37 23 00 00	 push	 9015			; 00002337H
  00a10	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a13	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a18	50		 push	 eax
  00a19	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a1c	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a22	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 954  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_FORFEND_LOCK_TABLE), _T("用户无法设置桌子密码"));

  00a27	6a 00		 push	 0
  00a29	6a 00		 push	 0
  00a2b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@GFGGEHBF@?S?C?$LL?$KH?N?$NO?$LH?$KI?I?h?V?C?W?$MA?W?S?C?$NM?B?k@
  00a30	68 38 23 00 00	 push	 9016			; 00002338H
  00a35	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a38	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a3d	50		 push	 eax
  00a3e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a41	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a47	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 955  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_ALLOW_DYNAMIC_JOIN), _T("没勾选的话 坐下只能在空闲状态，勾选没有限制，推荐勾选"));

  00a4c	6a 00		 push	 0
  00a4e	6a 00		 push	 0
  00a50	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@KOBIODKO@?C?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?5?W?x?O?B?V?$LL?D?$NM?T?Z?$LP?U?O?P?W?$LE?L?$KM?$KD?$KM@
  00a55	68 2f 23 00 00	 push	 9007			; 0000232fH
  00a5a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a5d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a62	50		 push	 eax
  00a63	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a66	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a6c	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 956  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_ALLOW_AVERT_CHEAT_MODE), _T("防作弊模式开关,防作弊模式下，用户不能自主选桌，等待系统分配"));

  00a71	6a 00		 push	 0
  00a73	6a 00		 push	 0
  00a75	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@NKGOLKOC@?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?$LP?$KK?$LJ?X?0?$LH?$MA?W?w?$LB?W?D?$KD?J?$LN?O?B?$KD?$KM?S?C@
  00a7a	68 33 23 00 00	 push	 9011			; 00002333H
  00a7f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a82	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a87	50		 push	 eax
  00a88	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a8b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a91	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 957  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_SUPORT_MOBILE), _T("不勾选的话，手机端不会显示游戏"));

  00a96	6a 00		 push	 0
  00a98	6a 00		 push	 0
  00a9a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@DCCNMAEM@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KM?J?V?$LL?z?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@
  00a9f	68 42 23 00 00	 push	 9026			; 00002342H
  00aa4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa7	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00aac	50		 push	 eax
  00aad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab0	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00ab6	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 958  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_SUPORT_PC), _T("不勾选的话，PC端不会显示游戏"));

  00abb	6a 00		 push	 0
  00abd	6a 00		 push	 0
  00abf	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HKKGDCEG@?$LC?$LL?$LJ?$LE?Q?$KB?$LF?D?$LL?$LA?$KD?$KMPC?$LG?K?$LC?$LL?$LL?a?O?T?J?$LO?S?N?O?$LH@
  00ac4	68 43 23 00 00	 push	 9027			; 00002343H
  00ac9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00acc	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00ad1	50		 push	 eax
  00ad2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad5	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00adb	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 959  : 
; 960  : 	m_ToolTipCtrl.SetMaxTipWidth(300);

  00ae0	68 2c 01 00 00	 push	 300			; 0000012cH
  00ae5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae8	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00aee	e8 00 00 00 00	 call	 ?SetMaxTipWidth@CToolTipCtrl@@QAEHH@Z ; CToolTipCtrl::SetMaxTipWidth

; 961  : 	m_ToolTipCtrl.Activate(TRUE);

  00af3	6a 01		 push	 1
  00af5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00af8	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00afe	e8 00 00 00 00	 call	 ?Activate@CToolTipCtrl@@QAEXH@Z ; CToolTipCtrl::Activate

; 962  : 	return TRUE;

  00b03	b8 01 00 00 00	 mov	 eax, 1

; 963  : }

  00b08	5f		 pop	 edi
  00b09	5e		 pop	 esi
  00b0a	5b		 pop	 ebx
  00b0b	8b e5		 mov	 esp, ebp
  00b0d	5d		 pop	 ebp
  00b0e	c3		 ret	 0
?OnInitDialog@CDlgServerOptionItem2@@MAEHXZ ENDP	; CDlgServerOptionItem2::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItem2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItem2@@UAE@XZ PROC			; CDlgServerOptionItem2::~CDlgServerOptionItem2, COMDAT
; _this$ = ecx

; 773  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem2@@6B@

; 774  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerOptionItem2@@UAE@XZ ENDP			; CDlgServerOptionItem2::~CDlgServerOptionItem2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItem2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgServerOptionItem2@@QAE@XZ PROC			; CDlgServerOptionItem2::CDlgServerOptionItem2, COMDAT
; _this$ = ecx

; 768  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 767  : CDlgServerOptionItem2::CDlgServerOptionItem2() : CDlgServerOptionItem(IDD_SERVER_OPTION_2)

  0000c	68 29 23 00 00	 push	 9001			; 00002329H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem@@IAE@I@Z ; CDlgServerOptionItem::CDlgServerOptionItem

; 768  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem2@@6B@

; 769  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgServerOptionItem2@@QAE@XZ ENDP			; CDlgServerOptionItem2::CDlgServerOptionItem2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItem1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItem1@@UAEPAXI@Z PROC		; CDlgServerOptionItem1::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItem1@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItem1@@UAE@XZ ; CDlgServerOptionItem1::~CDlgServerOptionItem1
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 60 01 00 00	 push	 352			; 00000160H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 60 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 352
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem1@@UAE@XZ ; CDlgServerOptionItem1::~CDlgServerOptionItem1
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 60 01 00 00	 push	 352			; 00000160H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItem1@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItem1@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItem1@@UAEPAXI@Z ENDP		; CDlgServerOptionItem1::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItem1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItem1@@UAEPAXI@Z PROC		; CDlgServerOptionItem1::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem1@@UAE@XZ ; CDlgServerOptionItem1::~CDlgServerOptionItem1
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 60 01 00 00	 push	 352			; 00000160H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItem1@@UAEPAXI@Z ENDP		; CDlgServerOptionItem1::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?PreTranslateMessage@CDlgServerOptionItem1@@UAEHPAUtagMSG@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMsg$ = 8						; size = 4
?PreTranslateMessage@CDlgServerOptionItem1@@UAEHPAUtagMSG@@@Z PROC ; CDlgServerOptionItem1::PreTranslateMessage, COMDAT
; _this$ = ecx

; 2874 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2875 : 	if (pMsg->message == WM_MOUSEMOVE && m_ToolTipCtrl.GetSafeHwnd() != NULL)	m_ToolTipCtrl.RelayEvent(pMsg);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0000f	81 78 04 00 02
	00 00		 cmp	 DWORD PTR [eax+4], 512	; 00000200H
  00016	75 24		 jne	 SHORT $LN2@PreTransla
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00021	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00026	85 c0		 test	 eax, eax
  00028	74 12		 je	 SHORT $LN2@PreTransla
  0002a	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00037	e8 00 00 00 00	 call	 ?RelayEvent@CToolTipCtrl@@QAEXPAUtagMSG@@@Z ; CToolTipCtrl::RelayEvent
$LN2@PreTransla:

; 2876 : 
; 2877 : 	return CDlgServerOptionItem::PreTranslateMessage(pMsg);

  0003c	8b 45 08	 mov	 eax, DWORD PTR _pMsg$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z ; CDialog::PreTranslateMessage

; 2878 : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?PreTranslateMessage@CDlgServerOptionItem1@@UAEHPAUtagMSG@@@Z ENDP ; CDlgServerOptionItem1::PreTranslateMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedServiceRadio@CDlgServerOptionItem1@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedServiceRadio@CDlgServerOptionItem1@@QAEXXZ PROC ; CDlgServerOptionItem1::OnBnClickedServiceRadio, COMDAT
; _this$ = ecx

; 2864 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2865 : 	//
; 2866 : 	GetDlgItem(IDC_STATIC_REVENUE_SERVICE)->SetWindowText(TEXT("服务费数："));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IBIEHAJI@?$LH?$PO?N?q?$LH?Q?J?$PN?$KD?$LK@
  00011	68 3e 23 00 00	 push	 9022			; 0000233eH
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 2867 : 	((CEdit *)GetDlgItem(IDC_SERVICE_REVENUE))->SetWindowText(TEXT(""));

  00025	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0002a	68 04 04 00 00	 push	 1028			; 00000404H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00037	8b c8		 mov	 ecx, eax
  00039	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 2868 : 	((CEdit *)GetDlgItem(IDC_SERVICE_REVENUE))->LimitText(9);

  0003e	6a 09		 push	 9
  00040	68 04 04 00 00	 push	 1028			; 00000404H
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 2869 : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?OnBnClickedServiceRadio@CDlgServerOptionItem1@@QAEXXZ ENDP ; CDlgServerOptionItem1::OnBnClickedServiceRadio
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnBnClickedRevenueRadio@CDlgServerOptionItem1@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedRevenueRadio@CDlgServerOptionItem1@@QAEXXZ PROC ; CDlgServerOptionItem1::OnBnClickedRevenueRadio, COMDAT
; _this$ = ecx

; 2856 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2857 : 	//
; 2858 : 	GetDlgItem(IDC_STATIC_REVENUE_SERVICE)->SetWindowText(TEXT("税收比例："));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NIKGMENH@?K?$LA?J?U?$LB?H?$MA?$PN?$KD?$LK@
  00011	68 3e 23 00 00	 push	 9022			; 0000233eH
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001e	8b c8		 mov	 ecx, eax
  00020	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 2859 : 	((CEdit *)GetDlgItem(IDC_SERVICE_REVENUE))->SetWindowText(TEXT(""));

  00025	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0002a	68 04 04 00 00	 push	 1028			; 00000404H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00037	8b c8		 mov	 ecx, eax
  00039	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 2860 : 	((CEdit *)GetDlgItem(IDC_SERVICE_REVENUE))->LimitText(3);

  0003e	6a 03		 push	 3
  00040	68 04 04 00 00	 push	 1028			; 00000404H
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 2861 : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?OnBnClickedRevenueRadio@CDlgServerOptionItem1@@QAEXXZ ENDP ; CDlgServerOptionItem1::OnBnClickedRevenueRadio
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItem1@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItem1@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem1::GetMessageMap, COMDAT
; _this$ = ecx

; 30   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem1, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem1::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItem1@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem1::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem1::GetThisMessageMap, COMDAT

; 30   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem1, CDlgServerOptionItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 31   : 	ON_CBN_SELCHANGE(IDC_SERVER_TYPE, OnSelchangeServerType)
; 32   : 	ON_CBN_SELCHANGE(IDC_SERVER_KIND, OnSelchangeServerKind)
; 33   : 	ON_CBN_SELCHANGE(IDC_PESONAL_SQL_TYPE, OnSelchangePersonalSqlType)
; 34   : 	ON_BN_CLICKED(IDC_REVENUE_RADIO, OnBnClickedRevenueRadio)
; 35   : 	ON_BN_CLICKED(IDC_SERVICE_RADIO, OnBnClickedServiceRadio)
; 36   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItem1@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem1::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelchangePersonalSqlType@CDlgServerOptionItem1@@IAEXXZ
_TEXT	SEGMENT
tv91 = -84						; size = 4
_nCurSelIndex$ = -16					; size = 4
_pServerType$ = -12					; size = 4
_pPersonalSqlType$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelchangePersonalSqlType@CDlgServerOptionItem1@@IAEXXZ PROC ; CDlgServerOptionItem1::OnSelchangePersonalSqlType, COMDAT
; _this$ = ecx

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 728  : 	//变量定义
; 729  : 	CComboBox * pPersonalSqlType=(CComboBox *)GetDlgItem(IDC_PESONAL_SQL_TYPE);

  0000c	68 fb 03 00 00	 push	 1019			; 000003fbH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pPersonalSqlType$[ebp], eax

; 730  : 	CComboBox * pServerType = (CComboBox *)GetDlgItem(IDC_SERVER_TYPE);

  0001c	68 f0 03 00 00	 push	 1008			; 000003f0H
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00029	89 45 f4	 mov	 DWORD PTR _pServerType$[ebp], eax

; 731  : 
; 732  : 	//数据调整
; 733  : 	int nCurSelIndex = pPersonalSqlType->GetCurSel();

  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _pPersonalSqlType$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00034	89 45 f0	 mov	 DWORD PTR _nCurSelIndex$[ebp], eax

; 734  : 	switch (pPersonalSqlType->GetItemData(nCurSelIndex))

  00037	8b 45 f0	 mov	 eax, DWORD PTR _nCurSelIndex$[ebp]
  0003a	50		 push	 eax
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _pPersonalSqlType$[ebp]
  0003e	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00043	89 45 ac	 mov	 DWORD PTR tv91[ebp], eax
  00046	83 7d ac 00	 cmp	 DWORD PTR tv91[ebp], 0
  0004a	74 0b		 je	 SHORT $LN4@OnSelchang
  0004c	83 7d ac 01	 cmp	 DWORD PTR tv91[ebp], 1
  00050	74 64		 je	 SHORT $LN6@OnSelchang
  00052	e9 bb 00 00 00	 jmp	 $LN1@OnSelchang
$LN4@OnSelchang:

; 735  : 	{
; 736  : 	case 0:	//金币库
; 737  : 		{
; 738  : 			SetDlgItemText(IDC_DATABASE_NAME,szTreasureDB);

  00057	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  0005c	68 fa 03 00 00	 push	 1018			; 000003faH
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 739  : 			if (pServerType->GetCurSel() == 1)

  00069	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  0006c	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00071	83 f8 01	 cmp	 eax, 1
  00074	75 12		 jne	 SHORT $LN5@OnSelchang

; 740  : 			{
; 741  : 				pServerType->SetCurSel(0);

  00076	6a 00		 push	 0
  00078	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  0007b	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 742  : 				pServerType->SetFocus();

  00080	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  00083	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$LN5@OnSelchang:

; 743  : 			}
; 744  : 			((CEdit*)GetDlgItem(IDC_SET_COUNT))->EnableWindow(TRUE);

  00088	6a 01		 push	 1
  0008a	68 fc 03 00 00	 push	 1020			; 000003fcH
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 745  : 			((CEdit*)GetDlgItem(IDC_GAME_INFOMATION))->EnableWindow(TRUE);

  0009e	6a 01		 push	 1
  000a0	68 fd 03 00 00	 push	 1021			; 000003fdH
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 746  : 			break;

  000b4	eb 5c		 jmp	 SHORT $LN1@OnSelchang
$LN6@OnSelchang:

; 747  : 		}
; 748  : 	case 1:	//积分库
; 749  : 		{
; 750  : 			SetDlgItemText(IDC_DATABASE_NAME,szGameScoreDB);

  000b6	68 00 00 00 00	 push	 OFFSET ?szGameScoreDB@@3QBDB
  000bb	68 fa 03 00 00	 push	 1018			; 000003faH
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 751  : 			if (pServerType->GetCurSel() == 0)

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  000cb	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000d0	85 c0		 test	 eax, eax
  000d2	75 12		 jne	 SHORT $LN7@OnSelchang

; 752  : 			{
; 753  : 				pServerType->SetCurSel(1);

  000d4	6a 01		 push	 1
  000d6	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  000d9	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 754  : 				pServerType->SetFocus();

  000de	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  000e1	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$LN7@OnSelchang:

; 755  : 			}
; 756  : 			((CEdit*)GetDlgItem(IDC_SET_COUNT))->EnableWindow(FALSE);

  000e6	6a 00		 push	 0
  000e8	68 fc 03 00 00	 push	 1020			; 000003fcH
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000f5	8b c8		 mov	 ecx, eax
  000f7	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 757  : 			((CEdit*)GetDlgItem(IDC_GAME_INFOMATION))->EnableWindow(FALSE);

  000fc	6a 00		 push	 0
  000fe	68 fd 03 00 00	 push	 1021			; 000003fdH
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0010b	8b c8		 mov	 ecx, eax
  0010d	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN1@OnSelchang:

; 758  : 			break;
; 759  : 		}
; 760  : 	}
; 761  : 
; 762  : 	return;
; 763  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
?OnSelchangePersonalSqlType@CDlgServerOptionItem1@@IAEXXZ ENDP ; CDlgServerOptionItem1::OnSelchangePersonalSqlType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelchangeServerKind@CDlgServerOptionItem1@@IAEXXZ
_TEXT	SEGMENT
tv80 = -80						; size = 4
_nCurSelIndex$ = -12					; size = 4
_pServerKind$ = -8					; size = 4
_this$ = -4						; size = 4
?OnSelchangeServerKind@CDlgServerOptionItem1@@IAEXXZ PROC ; CDlgServerOptionItem1::OnSelchangeServerKind, COMDAT
; _this$ = ecx

; 702  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 703  : 	//变量定义
; 704  : 	CComboBox * pServerKind=(CComboBox *)GetDlgItem(IDC_SERVER_KIND);

  0000c	68 f1 03 00 00	 push	 1009			; 000003f1H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pServerKind$[ebp], eax

; 705  : 
; 706  : 	//数据调整
; 707  : 	int nCurSelIndex = pServerKind->GetCurSel();

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00024	89 45 f4	 mov	 DWORD PTR _nCurSelIndex$[ebp], eax

; 708  : 	switch (pServerKind->GetItemData(nCurSelIndex))

  00027	8b 45 f4	 mov	 eax, DWORD PTR _nCurSelIndex$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00033	89 45 b0	 mov	 DWORD PTR tv80[ebp], eax
  00036	83 7d b0 01	 cmp	 DWORD PTR tv80[ebp], 1
  0003a	74 08		 je	 SHORT $LN4@OnSelchang
  0003c	83 7d b0 02	 cmp	 DWORD PTR tv80[ebp], 2
  00040	74 1a		 je	 SHORT $LN5@OnSelchang
  00042	eb 2e		 jmp	 SHORT $LN1@OnSelchang
$LN4@OnSelchang:

; 709  : 	{
; 710  : 	case SERVER_GENRE_NORMAL:	//普通房间
; 711  : 		{
; 712  : 			GetDlgItem(IDC_SERVER_PASSWD)->EnableWindow(false);

  00044	6a 00		 push	 0
  00046	68 f7 03 00 00	 push	 1015			; 000003f7H
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 713  : 			break;

  0005a	eb 16		 jmp	 SHORT $LN1@OnSelchang
$LN5@OnSelchang:

; 714  : 		}
; 715  : 	case SERVER_GENRE_PASSWD:	//密码类型
; 716  : 		{
; 717  : 			GetDlgItem(IDC_SERVER_PASSWD)->EnableWindow(true);

  0005c	6a 01		 push	 1
  0005e	68 f7 03 00 00	 push	 1015			; 000003f7H
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN1@OnSelchang:

; 718  : 			break;
; 719  : 		}
; 720  : 	}
; 721  : 
; 722  : 	return;
; 723  : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?OnSelchangeServerKind@CDlgServerOptionItem1@@IAEXXZ ENDP ; CDlgServerOptionItem1::OnSelchangeServerKind
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSelchangeServerType@CDlgServerOptionItem1@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnSelchangeServerType@CDlgServerOptionItem1@@IAEXXZ PROC ; CDlgServerOptionItem1::OnSelchangeServerType, COMDAT
; _this$ = ecx

; 693  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 694  : 	//更新数据
; 695  : 	UpdateDataBaseName();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?UpdateDataBaseName@CDlgServerOptionItem1@@IAEXXZ ; CDlgServerOptionItem1::UpdateDataBaseName

; 696  : 
; 697  : 	return;
; 698  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?OnSelchangeServerType@CDlgServerOptionItem1@@IAEXXZ ENDP ; CDlgServerOptionItem1::OnSelchangeServerType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?UpdateDataBaseName@CDlgServerOptionItem1@@IAEXXZ
_TEXT	SEGMENT
tv93 = -116						; size = 4
_szDataBase$1 = -48					; size = 32
_pPersonalSqlType$ = -16				; size = 4
_pServerType$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?UpdateDataBaseName@CDlgServerOptionItem1@@IAEXXZ PROC	; CDlgServerOptionItem1::UpdateDataBaseName, COMDAT
; _this$ = ecx

; 632  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 633  : 	//变量定义
; 634  : 	CComboBox * pServerType=(CComboBox *)GetDlgItem(IDC_SERVER_TYPE);

  00016	68 f0 03 00 00	 push	 1008			; 000003f0H
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00023	89 45 f4	 mov	 DWORD PTR _pServerType$[ebp], eax

; 635  : 
; 636  : 	//是否私人房数据类型
; 637  : 	CComboBox * pPersonalSqlType=(CComboBox *)GetDlgItem(IDC_PESONAL_SQL_TYPE);

  00026	68 fb 03 00 00	 push	 1019			; 000003fbH
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00033	89 45 f0	 mov	 DWORD PTR _pPersonalSqlType$[ebp], eax

; 638  : 
; 639  : 	//数据调整
; 640  : 	switch ((WORD)pServerType->GetItemData(pServerType->GetCurSel()))

  00036	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  00039	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0003e	50		 push	 eax
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00047	0f b7 c0	 movzx	 eax, ax
  0004a	89 45 8c	 mov	 DWORD PTR tv93[ebp], eax
  0004d	8b 4d 8c	 mov	 ecx, DWORD PTR tv93[ebp]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d 8c	 mov	 DWORD PTR tv93[ebp], ecx
  00056	83 7d 8c 0f	 cmp	 DWORD PTR tv93[ebp], 15	; 0000000fH
  0005a	0f 87 ec 00 00
	00		 ja	 $LN9@UpdateData
  00060	8b 55 8c	 mov	 edx, DWORD PTR tv93[ebp]
  00063	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN13@UpdateData[edx]
  0006a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@UpdateData[eax*4]
$LN4@UpdateData:

; 641  : 	{
; 642  : 	case GAME_GENRE_GOLD:	//财富类型
; 643  : 		{
; 644  : 			pPersonalSqlType->SetCurSel(0);

  00071	6a 00		 push	 0
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _pPersonalSqlType$[ebp]
  00076	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 645  : 			SetDlgItemText(IDC_DATABASE_NAME,szTreasureDB);

  0007b	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00080	68 fa 03 00 00	 push	 1018			; 000003faH
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 646  : 			((CEdit*)GetDlgItem(IDC_SET_COUNT))->EnableWindow(TRUE);

  0008d	6a 01		 push	 1
  0008f	68 fc 03 00 00	 push	 1020			; 000003fcH
  00094	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 647  : 			((CEdit*)GetDlgItem(IDC_GAME_INFOMATION))->EnableWindow(TRUE);

  000a3	6a 01		 push	 1
  000a5	68 fd 03 00 00	 push	 1021			; 000003fdH
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 648  : 
; 649  : 			break;

  000b9	e9 19 01 00 00	 jmp	 $LN1@UpdateData
$LN5@UpdateData:

; 650  : 		}
; 651  : 	case GAME_GENRE_SCORE:	//点值类型
; 652  : 		{
; 653  : 			SetDlgItemText(IDC_DATABASE_NAME,m_pGameServiceAttrib->szDataBaseName);

  000be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  000c7	83 c1 34	 add	 ecx, 52			; 00000034H
  000ca	51		 push	 ecx
  000cb	68 fa 03 00 00	 push	 1018			; 000003faH
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 654  : 			break;

  000d8	e9 fa 00 00 00	 jmp	 $LN1@UpdateData
$LN6@UpdateData:

; 655  : 		}
; 656  : 	case GAME_GENRE_MATCH:	//比赛类型
; 657  : 		{
; 658  : 			SetDlgItemText(IDC_DATABASE_NAME,szGameMatchDB);

  000dd	68 00 00 00 00	 push	 OFFSET ?szGameMatchDB@@3QBDB
  000e2	68 fa 03 00 00	 push	 1018			; 000003faH
  000e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 659  : 			break;

  000ef	e9 e3 00 00 00	 jmp	 $LN1@UpdateData
$LN7@UpdateData:

; 660  : 		}
; 661  : 	case GAME_GENRE_PERSONAL://约战类型
; 662  : 		{
; 663  : 			if(pPersonalSqlType)

  000f4	83 7d f0 00	 cmp	 DWORD PTR _pPersonalSqlType$[ebp], 0
  000f8	74 52		 je	 SHORT $LN9@UpdateData

; 664  : 			{
; 665  : 				pPersonalSqlType->EnableWindow(TRUE);

  000fa	6a 01		 push	 1
  000fc	8b 4d f0	 mov	 ecx, DWORD PTR _pPersonalSqlType$[ebp]
  000ff	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 666  : 				pPersonalSqlType->SetCurSel(1);

  00104	6a 01		 push	 1
  00106	8b 4d f0	 mov	 ecx, DWORD PTR _pPersonalSqlType$[ebp]
  00109	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 667  : 				SetDlgItemText(IDC_DATABASE_NAME, szGameScoreDB);

  0010e	68 00 00 00 00	 push	 OFFSET ?szGameScoreDB@@3QBDB
  00113	68 fa 03 00 00	 push	 1018			; 000003faH
  00118	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011b	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 668  : 
; 669  : 				((CEdit*)GetDlgItem(IDC_SET_COUNT))->EnableWindow(FALSE);

  00120	6a 00		 push	 0
  00122	68 fc 03 00 00	 push	 1020			; 000003fcH
  00127	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 670  : 				((CEdit*)GetDlgItem(IDC_GAME_INFOMATION))->EnableWindow(FALSE);

  00136	6a 00		 push	 0
  00138	68 fd 03 00 00	 push	 1021			; 000003fdH
  0013d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00145	8b c8		 mov	 ecx, eax
  00147	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN9@UpdateData:

; 671  : 
; 672  : 			}
; 673  : 		}
; 674  : 	default:
; 675  : 		{
; 676  : 			//获取名字
; 677  : 			TCHAR szDataBase[32]=TEXT("");

  0014c	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00151	88 45 d0	 mov	 BYTE PTR _szDataBase$1[ebp], al
  00154	33 c0		 xor	 eax, eax
  00156	89 45 d1	 mov	 DWORD PTR _szDataBase$1[ebp+1], eax
  00159	89 45 d5	 mov	 DWORD PTR _szDataBase$1[ebp+5], eax
  0015c	89 45 d9	 mov	 DWORD PTR _szDataBase$1[ebp+9], eax
  0015f	89 45 dd	 mov	 DWORD PTR _szDataBase$1[ebp+13], eax
  00162	89 45 e1	 mov	 DWORD PTR _szDataBase$1[ebp+17], eax
  00165	89 45 e5	 mov	 DWORD PTR _szDataBase$1[ebp+21], eax
  00168	89 45 e9	 mov	 DWORD PTR _szDataBase$1[ebp+25], eax
  0016b	66 89 45 ed	 mov	 WORD PTR _szDataBase$1[ebp+29], ax
  0016f	88 45 ef	 mov	 BYTE PTR _szDataBase$1[ebp+31], al

; 678  : 			GetDlgItemText(IDC_DATABASE_NAME,szDataBase,CountArray(szDataBase));

  00172	6a 20		 push	 32			; 00000020H
  00174	8d 45 d0	 lea	 eax, DWORD PTR _szDataBase$1[ebp]
  00177	50		 push	 eax
  00178	68 fa 03 00 00	 push	 1018			; 000003faH
  0017d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 679  : 
; 680  : 			//名字判断
; 681  : 			if (lstrcmpi(szDataBase,szTreasureDB)==0) SetDlgItemText(IDC_DATABASE_NAME,TEXT(""));

  00185	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  0018a	8d 45 d0	 lea	 eax, DWORD PTR _szDataBase$1[ebp]
  0018d	50		 push	 eax
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiA@8
  00194	85 c0		 test	 eax, eax
  00196	75 12		 jne	 SHORT $LN10@UpdateData
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0019d	68 fa 03 00 00	 push	 1018			; 000003faH
  001a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a5	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN10@UpdateData:

; 682  : 			if (lstrcmpi(szDataBase,m_pGameServiceAttrib->szDataBaseName)==0) SetDlgItemText(IDC_DATABASE_NAME,TEXT(""));

  001aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ad	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  001b3	83 c1 34	 add	 ecx, 52			; 00000034H
  001b6	51		 push	 ecx
  001b7	8d 55 d0	 lea	 edx, DWORD PTR _szDataBase$1[ebp]
  001ba	52		 push	 edx
  001bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiA@8
  001c1	85 c0		 test	 eax, eax
  001c3	75 12		 jne	 SHORT $LN1@UpdateData
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  001ca	68 fa 03 00 00	 push	 1018			; 000003faH
  001cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d2	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN1@UpdateData:

; 683  : 
; 684  : 			break;
; 685  : 		}
; 686  : 	}
; 687  : 
; 688  : 	return;
; 689  : }

  001d7	5f		 pop	 edi
  001d8	5e		 pop	 esi
  001d9	5b		 pop	 ebx
  001da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001dd	33 cd		 xor	 ecx, ebp
  001df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e4	8b e5		 mov	 esp, ebp
  001e6	5d		 pop	 ebp
  001e7	c3		 ret	 0
$LN14@UpdateData:
  001e8	00 00 00 00	 DD	 $LN4@UpdateData
  001ec	00 00 00 00	 DD	 $LN5@UpdateData
  001f0	00 00 00 00	 DD	 $LN6@UpdateData
  001f4	00 00 00 00	 DD	 $LN7@UpdateData
  001f8	00 00 00 00	 DD	 $LN9@UpdateData
$LN13@UpdateData:
  001fc	00		 DB	 0
  001fd	01		 DB	 1
  001fe	04		 DB	 4
  001ff	02		 DB	 2
  00200	04		 DB	 4
  00201	04		 DB	 4
  00202	04		 DB	 4
  00203	04		 DB	 4
  00204	04		 DB	 4
  00205	04		 DB	 4
  00206	04		 DB	 4
  00207	04		 DB	 4
  00208	04		 DB	 4
  00209	04		 DB	 4
  0020a	04		 DB	 4
  0020b	03		 DB	 3
?UpdateDataBaseName@CDlgServerOptionItem1@@IAEXXZ ENDP	; CDlgServerOptionItem1::UpdateDataBaseName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?InitCtrlWindow@CDlgServerOptionItem1@@IAEXXZ
_TEXT	SEGMENT
_i$1 = -60						; size = 4
_pszPersonalSqlType$ = -56				; size = 8
_i$2 = -48						; size = 4
_pszServerKind$ = -44					; size = 8
_wServerKind$ = -36					; size = 4
_i$3 = -32						; size = 4
_i$4 = -28						; size = 4
_nServerTypeSel$ = -24					; size = 4
_pszServerType$ = -20					; size = 8
_wServerType$ = -12					; size = 4
_pComboBox$ = -8					; size = 4
_this$ = -4						; size = 4
?InitCtrlWindow@CDlgServerOptionItem1@@IAEXXZ PROC	; CDlgServerOptionItem1::InitCtrlWindow, COMDAT
; _this$ = ecx

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 543  : 	//列表配置
; 544  : 	((CEdit *)GetDlgItem(IDC_KIND_ID))->LimitText(5);

  0000c	6a 05		 push	 5
  0000e	68 fe 03 00 00	 push	 1022			; 000003feH
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 545  : 	((CEdit *)GetDlgItem(IDC_NODE_ID))->LimitText(5);

  00022	6a 05		 push	 5
  00024	68 ef 03 00 00	 push	 1007			; 000003efH
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 546  : 	((CEdit *)GetDlgItem(IDC_SORT_ID))->LimitText(5);

  00038	6a 05		 push	 5
  0003a	68 f5 03 00 00	 push	 1013			; 000003f5H
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00047	8b c8		 mov	 ecx, eax
  00049	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 547  : 
; 548  : 	//属性配置
; 549  : 	((CEdit *)GetDlgItem(IDC_MAX_PLAYER))->LimitText(3);

  0004e	6a 03		 push	 3
  00050	68 f3 03 00 00	 push	 1011			; 000003f3H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0005d	8b c8		 mov	 ecx, eax
  0005f	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 550  : 	((CEdit *)GetDlgItem(IDC_CELL_SCORE))->LimitText(6);

  00064	6a 06		 push	 6
  00066	68 f6 03 00 00	 push	 1014			; 000003f6H
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 551  : 	((CEdit *)GetDlgItem(IDC_SERVICE_REVENUE))->LimitText(3);

  0007a	6a 03		 push	 3
  0007c	68 04 04 00 00	 push	 1028			; 00000404H
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 552  : 	((CButton*)GetDlgItem(IDC_REVENUE_RADIO))->SetCheck(BST_CHECKED);

  00090	6a 01		 push	 1
  00092	68 03 04 00 00	 push	 1027			; 00000403H
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 553  : 
; 554  : 	//常规配置
; 555  : 	((CEdit *)GetDlgItem(IDC_TABLE_COUNT))->LimitText(3);

  000a6	6a 03		 push	 3
  000a8	68 f2 03 00 00	 push	 1010			; 000003f2H
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 556  : 	((CEdit *)GetDlgItem(IDC_SERVER_PORT))->LimitText(5);

  000bc	6a 05		 push	 5
  000be	68 f4 03 00 00	 push	 1012			; 000003f4H
  000c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 557  : 	((CEdit *)GetDlgItem(IDC_SERVER_NAME))->LimitText(31);

  000d2	6a 1f		 push	 31			; 0000001fH
  000d4	68 e9 03 00 00	 push	 1001			; 000003e9H
  000d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000e1	8b c8		 mov	 ecx, eax
  000e3	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 558  : 	((CEdit *)GetDlgItem(IDC_DATABASE_NAME))->LimitText(31);

  000e8	6a 1f		 push	 31			; 0000001fH
  000ea	68 fa 03 00 00	 push	 1018			; 000003faH
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000f7	8b c8		 mov	 ecx, eax
  000f9	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 559  : 	((CEdit *)GetDlgItem(IDC_SERVER_LEVEL))->LimitText(4);

  000fe	6a 04		 push	 4
  00100	68 f8 03 00 00	 push	 1016			; 000003f8H
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0010d	8b c8		 mov	 ecx, eax
  0010f	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 560  : 
; 561  : 	//设置属性
; 562  : 	((CEdit *)GetDlgItem(IDC_SET_COUNT))->LimitText(3);

  00114	6a 03		 push	 3
  00116	68 fc 03 00 00	 push	 1020			; 000003fcH
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00123	8b c8		 mov	 ecx, eax
  00125	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 563  : 	((CEdit *)GetDlgItem(IDC_GAME_INFOMATION))->LimitText(11);

  0012a	6a 0b		 push	 11			; 0000000bH
  0012c	68 fd 03 00 00	 push	 1021			; 000003fdH
  00131	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00139	8b c8		 mov	 ecx, eax
  0013b	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 564  : 
; 565  : 	//变量定义
; 566  : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_SERVER_TYPE);

  00140	68 f0 03 00 00	 push	 1008			; 000003f0H
  00145	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0014d	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 567  : 
; 568  : 	WORD wServerType[2] = { GAME_GENRE_GOLD, GAME_GENRE_PERSONAL };// , GAME_GENRE_SCORE, GAME_GENRE_MATCH, GAME_GENRE_EDUCATE};

  00150	b8 01 00 00 00	 mov	 eax, 1
  00155	66 89 45 f4	 mov	 WORD PTR _wServerType$[ebp], ax
  00159	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0015e	66 89 45 f6	 mov	 WORD PTR _wServerType$[ebp+2], ax

; 569  : 	LPCTSTR pszServerType[2] = { TEXT("财富类型"), TEXT("约战类型") };//, TEXT("点值类型"), TEXT("比赛类型"), TEXT("练习类型") };

  00162	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pszServerType$[ebp], OFFSET ??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@
  00169	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pszServerType$[ebp+4], OFFSET ??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@

; 570  : 
; 571  : 	int nServerTypeSel = 0;

  00170	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _nServerTypeSel$[ebp], 0

; 572  : 	//如果是约战房
; 573  : 	if (m_bIsHasPersonalRoom)

  00177	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017a	0f b6 88 bc 00
	00 00		 movzx	 ecx, BYTE PTR [eax+188]
  00181	85 c9		 test	 ecx, ecx
  00183	74 6d		 je	 SHORT $LN14@InitCtrlWi

; 574  : 	{
; 575  : 		//构造类型
; 576  : 		for (INT i=0;i<CountArray(wServerType);i++)

  00185	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  0018c	eb 09		 jmp	 SHORT $LN4@InitCtrlWi
$LN2@InitCtrlWi:
  0018e	8b 45 e4	 mov	 eax, DWORD PTR _i$4[ebp]
  00191	83 c0 01	 add	 eax, 1
  00194	89 45 e4	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@InitCtrlWi:
  00197	83 7d e4 02	 cmp	 DWORD PTR _i$4[ebp], 2
  0019b	73 3f		 jae	 SHORT $LN3@InitCtrlWi

; 577  : 		{
; 578  : 			if ((m_pGameServiceAttrib->wSupporType&wServerType[i])==0) continue;

  0019d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a0	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  001a6	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  001aa	8b 45 e4	 mov	 eax, DWORD PTR _i$4[ebp]
  001ad	0f b7 4c 45 f4	 movzx	 ecx, WORD PTR _wServerType$[ebp+eax*2]
  001b2	23 d1		 and	 edx, ecx
  001b4	75 02		 jne	 SHORT $LN16@InitCtrlWi
  001b6	eb d6		 jmp	 SHORT $LN2@InitCtrlWi
$LN16@InitCtrlWi:

; 579  : 			pComboBox->SetItemData(pComboBox->AddString(pszServerType[i]),wServerType[i]);

  001b8	8b 45 e4	 mov	 eax, DWORD PTR _i$4[ebp]
  001bb	0f b7 4c 45 f4	 movzx	 ecx, WORD PTR _wServerType$[ebp+eax*2]
  001c0	51		 push	 ecx
  001c1	8b 55 e4	 mov	 edx, DWORD PTR _i$4[ebp]
  001c4	8b 44 95 ec	 mov	 eax, DWORD PTR _pszServerType$[ebp+edx*4]
  001c8	50		 push	 eax
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  001cc	e8 00 00 00 00	 call	 ?AddString@CComboBox@@QAEHPBD@Z ; CComboBox::AddString
  001d1	50		 push	 eax
  001d2	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  001d5	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 580  : 		}

  001da	eb b2		 jmp	 SHORT $LN2@InitCtrlWi
$LN3@InitCtrlWi:

; 581  : 		pComboBox->SetCurSel(pComboBox->GetCount()-1);

  001dc	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  001df	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  001e4	83 e8 01	 sub	 eax, 1
  001e7	50		 push	 eax
  001e8	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  001eb	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 582  : 	}
; 583  : 	else

  001f0	eb 61		 jmp	 SHORT $LN15@InitCtrlWi
$LN14@InitCtrlWi:

; 584  : 	{
; 585  : 		//构造类型
; 586  : 		for (INT i=0;i<CountArray(wServerType) - 1;i++)

  001f2	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  001f9	eb 09		 jmp	 SHORT $LN7@InitCtrlWi
$LN5@InitCtrlWi:
  001fb	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  001fe	83 c0 01	 add	 eax, 1
  00201	89 45 e0	 mov	 DWORD PTR _i$3[ebp], eax
$LN7@InitCtrlWi:
  00204	83 7d e0 01	 cmp	 DWORD PTR _i$3[ebp], 1
  00208	73 3f		 jae	 SHORT $LN6@InitCtrlWi

; 587  : 		{
; 588  : 			if ((m_pGameServiceAttrib->wSupporType&wServerType[i])==0) continue;

  0020a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020d	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00213	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00217	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  0021a	0f b7 4c 45 f4	 movzx	 ecx, WORD PTR _wServerType$[ebp+eax*2]
  0021f	23 d1		 and	 edx, ecx
  00221	75 02		 jne	 SHORT $LN17@InitCtrlWi
  00223	eb d6		 jmp	 SHORT $LN5@InitCtrlWi
$LN17@InitCtrlWi:

; 589  : 			pComboBox->SetItemData(pComboBox->AddString(pszServerType[i]),wServerType[i]);

  00225	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  00228	0f b7 4c 45 f4	 movzx	 ecx, WORD PTR _wServerType$[ebp+eax*2]
  0022d	51		 push	 ecx
  0022e	8b 55 e0	 mov	 edx, DWORD PTR _i$3[ebp]
  00231	8b 44 95 ec	 mov	 eax, DWORD PTR _pszServerType$[ebp+edx*4]
  00235	50		 push	 eax
  00236	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00239	e8 00 00 00 00	 call	 ?AddString@CComboBox@@QAEHPBD@Z ; CComboBox::AddString
  0023e	50		 push	 eax
  0023f	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00242	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 590  : 		}

  00247	eb b2		 jmp	 SHORT $LN5@InitCtrlWi
$LN6@InitCtrlWi:

; 591  : 		pComboBox->SetCurSel(0);

  00249	6a 00		 push	 0
  0024b	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0024e	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN15@InitCtrlWi:

; 592  : 	}
; 593  : 	nServerTypeSel = pComboBox->GetCount()-1;

  00253	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00256	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  0025b	83 e8 01	 sub	 eax, 1
  0025e	89 45 e8	 mov	 DWORD PTR _nServerTypeSel$[ebp], eax

; 594  : 
; 595  : 	//变量定义
; 596  : 	pComboBox=(CComboBox *)GetDlgItem(IDC_SERVER_KIND);

  00261	68 f1 03 00 00	 push	 1009			; 000003f1H
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0026e	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 597  : 	WORD wServerKind[2]={SERVER_GENRE_NORMAL,SERVER_GENRE_PASSWD};

  00271	b8 01 00 00 00	 mov	 eax, 1
  00276	66 89 45 dc	 mov	 WORD PTR _wServerKind$[ebp], ax
  0027a	b8 02 00 00 00	 mov	 eax, 2
  0027f	66 89 45 de	 mov	 WORD PTR _wServerKind$[ebp+2], ax

; 598  : 	LPCTSTR pszServerKind[2]={TEXT("普通房间"),TEXT("密码房间")};

  00283	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pszServerKind$[ebp], OFFSET ??_C@_08NFPDDPHH@?F?U?M?$KI?$LH?$LP?$LM?d@
  0028a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pszServerKind$[ebp+4], OFFSET ??_C@_08PPKPGJDI@?C?$NM?B?k?$LH?$LP?$LM?d@

; 599  : 
; 600  : 	//构造类型
; 601  : 	for (INT i=0;i<CountArray(wServerKind);i++)

  00291	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00298	eb 09		 jmp	 SHORT $LN10@InitCtrlWi
$LN8@InitCtrlWi:
  0029a	8b 45 d0	 mov	 eax, DWORD PTR _i$2[ebp]
  0029d	83 c0 01	 add	 eax, 1
  002a0	89 45 d0	 mov	 DWORD PTR _i$2[ebp], eax
$LN10@InitCtrlWi:
  002a3	83 7d d0 02	 cmp	 DWORD PTR _i$2[ebp], 2
  002a7	73 28		 jae	 SHORT $LN9@InitCtrlWi

; 602  : 	{
; 603  : 		pComboBox->SetItemData(pComboBox->InsertString(i,pszServerKind[i]),wServerKind[i]);

  002a9	8b 45 d0	 mov	 eax, DWORD PTR _i$2[ebp]
  002ac	0f b7 4c 45 dc	 movzx	 ecx, WORD PTR _wServerKind$[ebp+eax*2]
  002b1	51		 push	 ecx
  002b2	8b 55 d0	 mov	 edx, DWORD PTR _i$2[ebp]
  002b5	8b 44 95 d4	 mov	 eax, DWORD PTR _pszServerKind$[ebp+edx*4]
  002b9	50		 push	 eax
  002ba	8b 4d d0	 mov	 ecx, DWORD PTR _i$2[ebp]
  002bd	51		 push	 ecx
  002be	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002c1	e8 00 00 00 00	 call	 ?InsertString@CComboBox@@QAEHHPBD@Z ; CComboBox::InsertString
  002c6	50		 push	 eax
  002c7	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002ca	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 604  : 	}

  002cf	eb c9		 jmp	 SHORT $LN8@InitCtrlWi
$LN9@InitCtrlWi:

; 605  : 	if(pComboBox->GetCurSel()==LB_ERR) pComboBox->SetCurSel(0);

  002d1	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002d4	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  002d9	83 f8 ff	 cmp	 eax, -1
  002dc	75 0a		 jne	 SHORT $LN18@InitCtrlWi
  002de	6a 00		 push	 0
  002e0	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002e3	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN18@InitCtrlWi:

; 606  : 
; 607  : 	////约战房数据库类型
; 608  : 	pComboBox=(CComboBox *)GetDlgItem(IDC_PESONAL_SQL_TYPE);

  002e8	68 fb 03 00 00	 push	 1019			; 000003fbH
  002ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002f5	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 609  : 	
; 610  : 	LPCTSTR pszPersonalSqlType[2]={TEXT("金币库"),TEXT("积分库")};

  002f8	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pszPersonalSqlType$[ebp], OFFSET ??_C@_06DFBDGPAN@?$LN?p?$LB?R?$LP?b@
  002ff	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _pszPersonalSqlType$[ebp+4], OFFSET ??_C@_06OKHPCLBO@?$LL?$PN?$LH?V?$LP?b@

; 611  : 
; 612  : 	if (!m_bIsHasPersonalRoom)

  00306	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00309	0f b6 88 bc 00
	00 00		 movzx	 ecx, BYTE PTR [eax+188]
  00310	85 c9		 test	 ecx, ecx
  00312	75 14		 jne	 SHORT $LN19@InitCtrlWi

; 613  : 	{
; 614  : 		SetDlgItemText(IDC_STATIC_SQL_OPTION, TEXT("数据库选项："));

  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LLCONOIB@?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@
  00319	68 42 23 00 00	 push	 9026			; 00002342H
  0031e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00321	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 615  : 	}
; 616  : 	else

  00326	eb 19		 jmp	 SHORT $LN20@InitCtrlWi
$LN19@InitCtrlWi:

; 617  : 	{
; 618  : 		((CStatic *)GetDlgItem(IDC_STATIC_SQL_OPTION))->SetWindowText(TEXT("约战类型数据库选项："));

  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MLEAOAEA@?T?$LM?U?$LN?$MA?$OA?P?M?J?$PN?$LO?$NN?$LP?b?Q?$KB?O?n?$KD?$LK@
  0032d	68 42 23 00 00	 push	 9026			; 00002342H
  00332	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00335	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0033a	8b c8		 mov	 ecx, eax
  0033c	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$LN20@InitCtrlWi:

; 619  : 	}
; 620  : 
; 621  : 	////构造类型
; 622  : 	for (INT i=0; i<2; i++)

  00341	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00348	eb 09		 jmp	 SHORT $LN13@InitCtrlWi
$LN11@InitCtrlWi:
  0034a	8b 45 c4	 mov	 eax, DWORD PTR _i$1[ebp]
  0034d	83 c0 01	 add	 eax, 1
  00350	89 45 c4	 mov	 DWORD PTR _i$1[ebp], eax
$LN13@InitCtrlWi:
  00353	83 7d c4 02	 cmp	 DWORD PTR _i$1[ebp], 2
  00357	7d 23		 jge	 SHORT $LN12@InitCtrlWi

; 623  : 	{
; 624  : 		pComboBox->SetItemData(pComboBox->InsertString(i, pszPersonalSqlType[i]),i);

  00359	8b 45 c4	 mov	 eax, DWORD PTR _i$1[ebp]
  0035c	50		 push	 eax
  0035d	8b 4d c4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00360	8b 54 8d c8	 mov	 edx, DWORD PTR _pszPersonalSqlType$[ebp+ecx*4]
  00364	52		 push	 edx
  00365	8b 45 c4	 mov	 eax, DWORD PTR _i$1[ebp]
  00368	50		 push	 eax
  00369	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0036c	e8 00 00 00 00	 call	 ?InsertString@CComboBox@@QAEHHPBD@Z ; CComboBox::InsertString
  00371	50		 push	 eax
  00372	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00375	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 625  : 	}

  0037a	eb ce		 jmp	 SHORT $LN11@InitCtrlWi
$LN12@InitCtrlWi:

; 626  : 	pComboBox->SetCurSel(nServerTypeSel);

  0037c	8b 45 e8	 mov	 eax, DWORD PTR _nServerTypeSel$[ebp]
  0037f	50		 push	 eax
  00380	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00383	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 627  : 	return;
; 628  : }

  00388	5f		 pop	 edi
  00389	5e		 pop	 esi
  0038a	5b		 pop	 ebx
  0038b	8b e5		 mov	 esp, ebp
  0038d	5d		 pop	 ebp
  0038e	c3		 ret	 0
?InitCtrlWindow@CDlgServerOptionItem1@@IAEXXZ ENDP	; CDlgServerOptionItem1::InitCtrlWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?RectifyControl@CDlgServerOptionItem1@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgServerOptionItem1@@UAEXHH@Z PROC	; CDlgServerOptionItem1::RectifyControl, COMDAT
; _this$ = ecx

; 536  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 537  : 	return;
; 538  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgServerOptionItem1@@UAEXHH@Z ENDP	; CDlgServerOptionItem1::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgServerOptionItem1@@UAE_NXZ
_TEXT	SEGMENT
_dwDataBaseAddr$ = -20					; size = 4
_pIPAddressCtrl$ = -16					; size = 4
_pServerKind$ = -12					; size = 4
_pServerType$ = -8					; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgServerOptionItem1@@UAE_NXZ PROC	; CDlgServerOptionItem1::SaveInputInfo, COMDAT
; _this$ = ecx

; 420  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 421  : 	//变量定义
; 422  : 	CComboBox * pServerType=(CComboBox *)GetDlgItem(IDC_SERVER_TYPE);

  0000c	68 f0 03 00 00	 push	 1008			; 000003f0H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pServerType$[ebp], eax

; 423  : 	
; 424  : 	CComboBox * pServerKind=(CComboBox *)GetDlgItem(IDC_SERVER_KIND);

  0001c	68 f1 03 00 00	 push	 1009			; 000003f1H
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00029	89 45 f4	 mov	 DWORD PTR _pServerKind$[ebp], eax

; 425  : 	CIPAddressCtrl * pIPAddressCtrl=(CIPAddressCtrl *)GetDlgItem(IDC_DATABASE_ADDR);

  0002c	68 f9 03 00 00	 push	 1017			; 000003f9H
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00039	89 45 f0	 mov	 DWORD PTR _pIPAddressCtrl$[ebp], eax

; 426  : 
; 427  : 	//挂接属性
; 428  : 	m_pGameServiceOption->wKindID=GetDlgItemInt(IDC_KIND_ID);

  0003c	6a 01		 push	 1
  0003e	6a 00		 push	 0
  00040	68 fe 03 00 00	 push	 1022			; 000003feH
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00056	66 89 02	 mov	 WORD PTR [edx], ax

; 429  : 	m_pGameServiceOption->wNodeID=GetDlgItemInt(IDC_NODE_ID);

  00059	6a 01		 push	 1
  0005b	6a 00		 push	 0
  0005d	68 ef 03 00 00	 push	 1007			; 000003efH
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00073	66 89 42 02	 mov	 WORD PTR [edx+2], ax

; 430  : 	m_pGameServiceOption->wSortID=GetDlgItemInt(IDC_SORT_ID);

  00077	6a 01		 push	 1
  00079	6a 00		 push	 0
  0007b	68 f5 03 00 00	 push	 1013			; 000003f5H
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00091	66 89 42 04	 mov	 WORD PTR [edx+4], ax

; 431  : 
; 432  : 	//属性配置
; 433  : 	m_pGameServiceOption->wMaxPlayer=GetDlgItemInt(IDC_MAX_PLAYER);

  00095	6a 01		 push	 1
  00097	6a 00		 push	 0
  00099	68 f3 03 00 00	 push	 1011			; 000003f3H
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  000af	66 89 42 44	 mov	 WORD PTR [edx+68], ax

; 434  : 	m_pGameServiceOption->lCellScore=GetDlgItemInt(IDC_CELL_SCORE);

  000b3	6a 01		 push	 1
  000b5	6a 00		 push	 0
  000b7	68 f6 03 00 00	 push	 1014			; 000003f6H
  000bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  000cd	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 435  : 	m_pGameServiceOption->wServerLevel=GetDlgItemInt(IDC_SERVER_LEVEL);

  000d0	6a 01		 push	 1
  000d2	6a 00		 push	 0
  000d4	68 f8 03 00 00	 push	 1016			; 000003f8H
  000d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  000ea	66 89 42 4e	 mov	 WORD PTR [edx+78], ax

; 436  : 	
; 437  : 	//配置属性
; 438  : 	m_pGameServiceOption->dwSetPlayerCount = GetDlgItemInt(IDC_SET_COUNT);

  000ee	6a 01		 push	 1
  000f0	6a 00		 push	 0
  000f2	68 fc 03 00 00	 push	 1020			; 000003fcH
  000f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00108	89 82 cc 00 00
	00		 mov	 DWORD PTR [edx+204], eax

; 439  : 	GetDlgItemText(IDC_GAME_INFOMATION, m_pGameServiceOption->szGameInfomation, CountArray(m_pGameServiceOption->szGameInfomation));

  0010e	6a 20		 push	 32			; 00000020H
  00110	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00119	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0011f	51		 push	 ecx
  00120	68 fd 03 00 00	 push	 1021			; 000003fdH
  00125	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 440  : 
; 441  : 	
; 442  : 	m_pGameServiceOption->lRestrictScore=GetDlgItemInt(IDC_RESTRICT_SCORE);

  0012d	6a 01		 push	 1
  0012f	6a 00		 push	 0
  00131	68 02 04 00 00	 push	 1026			; 00000402H
  00136	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0013e	33 c9		 xor	 ecx, ecx
  00140	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00143	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  00149	89 42 18	 mov	 DWORD PTR [edx+24], eax
  0014c	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 443  : 	if(((CButton*)GetDlgItem(IDC_REVENUE_RADIO))->GetCheck()==BST_CHECKED)

  0014f	68 03 04 00 00	 push	 1027			; 00000403H
  00154	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0015c	8b c8		 mov	 ecx, eax
  0015e	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00163	83 f8 01	 cmp	 eax, 1
  00166	75 37		 jne	 SHORT $LN2@SaveInputI

; 444  : 	{
; 445  : 		m_pGameServiceOption->wRevenueRatio=GetDlgItemInt(IDC_SERVICE_REVENUE);

  00168	6a 01		 push	 1
  0016a	6a 00		 push	 0
  0016c	68 04 04 00 00	 push	 1028			; 00000404H
  00171	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00182	66 89 42 0c	 mov	 WORD PTR [edx+12], ax

; 446  : 		m_pGameServiceOption->lServiceScore=0L;

  00186	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00189	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0018f	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00196	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 447  : 	}
; 448  : 	else

  0019d	eb 31		 jmp	 SHORT $LN3@SaveInputI
$LN2@SaveInputI:

; 449  : 	{
; 450  : 		m_pGameServiceOption->lServiceScore=GetDlgItemInt(IDC_SERVICE_REVENUE);

  0019f	6a 01		 push	 1
  001a1	6a 00		 push	 0
  001a3	68 04 04 00 00	 push	 1028			; 00000404H
  001a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ab	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  001b0	33 c9		 xor	 ecx, ecx
  001b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001b5	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  001bb	89 42 10	 mov	 DWORD PTR [edx+16], eax
  001be	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 451  : 		m_pGameServiceOption->wRevenueRatio=0L;

  001c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c4	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001ca	33 d2		 xor	 edx, edx
  001cc	66 89 51 0c	 mov	 WORD PTR [ecx+12], dx
$LN3@SaveInputI:

; 452  : 	}
; 453  : 
; 454  : 	//选择控件
; 455  : 	m_pGameServiceOption->wServerType=(WORD)pServerType->GetItemData(pServerType->GetCurSel());

  001d0	8b 4d f8	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  001d3	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  001d8	50		 push	 eax
  001d9	8b 4d f8	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  001dc	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  001e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e4	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  001ea	66 89 42 4c	 mov	 WORD PTR [edx+76], ax

; 456  : 	m_pGameServiceOption->wServerKind=(WORD)pServerKind->GetItemData(pServerKind->GetCurSel());

  001ee	8b 4d f4	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  001f1	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  001f6	50		 push	 eax
  001f7	8b 4d f4	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  001fa	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  001ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00202	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00208	66 89 42 4a	 mov	 WORD PTR [edx+74], ax

; 457  : 
; 458  : 	//房间属性
; 459  : 	m_pGameServiceOption->wTableCount=GetDlgItemInt(IDC_TABLE_COUNT);

  0020c	6a 01		 push	 1
  0020e	6a 00		 push	 0
  00210	68 f2 03 00 00	 push	 1010			; 000003f2H
  00215	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00218	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00226	66 89 42 46	 mov	 WORD PTR [edx+70], ax

; 460  : 	m_pGameServiceOption->wServerPort=GetDlgItemInt(IDC_SERVER_PORT);

  0022a	6a 01		 push	 1
  0022c	6a 00		 push	 0
  0022e	68 f4 03 00 00	 push	 1012			; 000003f4H
  00233	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00236	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0023b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0023e	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00244	66 89 42 48	 mov	 WORD PTR [edx+72], ax

; 461  : 	GetDlgItemText(IDC_SERVER_NAME,m_pGameServiceOption->szServerName,CountArray(m_pGameServiceOption->szServerName));

  00248	6a 20		 push	 32			; 00000020H
  0024a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0024d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00253	83 c1 50	 add	 ecx, 80			; 00000050H
  00256	51		 push	 ecx
  00257	68 e9 03 00 00	 push	 1001			; 000003e9H
  0025c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025f	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 462  : 	GetDlgItemText(IDC_DATABASE_NAME,m_pGameServiceOption->szDataBaseName,CountArray(m_pGameServiceOption->szDataBaseName));

  00264	6a 20		 push	 32			; 00000020H
  00266	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00269	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0026f	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00275	51		 push	 ecx
  00276	68 fa 03 00 00	 push	 1018			; 000003faH
  0027b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027e	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 463  : 	GetDlgItemText(IDC_SERVER_PASSWD,m_pGameServiceOption->szServerPasswd,CountArray(m_pGameServiceOption->szServerPasswd));

  00283	6a 21		 push	 33			; 00000021H
  00285	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00288	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0028e	83 c1 70	 add	 ecx, 112		; 00000070H
  00291	51		 push	 ecx
  00292	68 f7 03 00 00	 push	 1015			; 000003f7H
  00297	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029a	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 464  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_GOLD)

  0029f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002a2	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002a8	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  002ac	83 fa 01	 cmp	 edx, 1
  002af	75 1b		 jne	 SHORT $LN4@SaveInputI

; 465  : 	{
; 466  : 		lstrcpy(m_pGameServiceOption->szDataBaseName,szTreasureDB);

  002b1	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  002b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b9	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002bf	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  002c5	51		 push	 ecx
  002c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyA@8
$LN4@SaveInputI:

; 467  : 
; 468  : 	}
; 469  : 	//连接地址
; 470  : 	DWORD dwDataBaseAddr=INADDR_NONE;

  002cc	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _dwDataBaseAddr$[ebp], -1

; 471  : 	pIPAddressCtrl->GetAddress(dwDataBaseAddr);

  002d3	8d 45 ec	 lea	 eax, DWORD PTR _dwDataBaseAddr$[ebp]
  002d6	50		 push	 eax
  002d7	8b 4d f0	 mov	 ecx, DWORD PTR _pIPAddressCtrl$[ebp]
  002da	e8 00 00 00 00	 call	 ?GetAddress@CIPAddressCtrl@@QBEHAAK@Z ; CIPAddressCtrl::GetAddress

; 472  : 	_sntprintf_s(m_pGameServiceOption->szDataBaseAddr,CountArray(m_pGameServiceOption->szDataBaseAddr),TEXT("%d.%d.%d.%d"),

  002df	0f b6 45 ec	 movzx	 eax, BYTE PTR _dwDataBaseAddr$[ebp]
  002e3	50		 push	 eax
  002e4	0f b6 4d ed	 movzx	 ecx, BYTE PTR _dwDataBaseAddr$[ebp+1]
  002e8	51		 push	 ecx
  002e9	0f b6 55 ee	 movzx	 edx, BYTE PTR _dwDataBaseAddr$[ebp+2]
  002ed	52		 push	 edx
  002ee	0f b6 45 ef	 movzx	 eax, BYTE PTR _dwDataBaseAddr$[ebp+3]
  002f2	50		 push	 eax
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@
  002f8	6a 10		 push	 16			; 00000010H
  002fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fd	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00303	81 c2 9c 00 00
	00		 add	 edx, 156		; 0000009cH
  00309	52		 push	 edx
  0030a	e8 00 00 00 00	 call	 ??$_snprintf_s@$0BA@@@YAHAAY0BA@DIPBDZZ ; _snprintf_s<16>
  0030f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 473  : 		*(((BYTE *)&dwDataBaseAddr)+3),*(((BYTE *)&dwDataBaseAddr)+2),*(((BYTE *)&dwDataBaseAddr)+1),*((BYTE *)&dwDataBaseAddr));
; 474  : 
; 475  : 	//房间名字
; 476  : 	if (m_pGameServiceOption->szServerName[0]==0)

  00312	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00315	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0031b	ba 01 00 00 00	 mov	 edx, 1
  00320	6b c2 00	 imul	 eax, edx, 0
  00323	0f be 4c 01 50	 movsx	 ecx, BYTE PTR [ecx+eax+80]
  00328	85 c9		 test	 ecx, ecx
  0032a	75 15		 jne	 SHORT $LN5@SaveInputI

; 477  : 	{
; 478  : 		AfxMessageBox(TEXT("游戏房间名字不能为空，请输入游戏房间名字"),MB_ICONERROR);

  0032c	6a 00		 push	 0
  0032e	6a 10		 push	 16			; 00000010H
  00330	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@CKGBPABI@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?W?V?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@
  00335	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 479  : 		return false;

  0033a	32 c0		 xor	 al, al
  0033c	e9 7e 01 00 00	 jmp	 $LN1@SaveInputI
$LN5@SaveInputI:

; 480  : 	}
; 481  : 
; 482  : 	//类别判断
; 483  : 	if((m_pGameServiceOption->wServerKind&SERVER_GENRE_PASSWD)!=0 && (m_pGameServiceOption->szServerPasswd[0]==0))

  00341	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00344	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0034a	0f b7 51 4a	 movzx	 edx, WORD PTR [ecx+74]
  0034e	83 e2 02	 and	 edx, 2
  00351	74 2f		 je	 SHORT $LN6@SaveInputI
  00353	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00356	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0035c	ba 01 00 00 00	 mov	 edx, 1
  00361	6b c2 00	 imul	 eax, edx, 0
  00364	0f be 4c 01 70	 movsx	 ecx, BYTE PTR [ecx+eax+112]
  00369	85 c9		 test	 ecx, ecx
  0036b	75 15		 jne	 SHORT $LN6@SaveInputI

; 484  : 	{
; 485  : 		AfxMessageBox(TEXT("游戏房间密码不能为空，请输入游戏房间密码"),MB_ICONERROR);

  0036d	6a 00		 push	 0
  0036f	6a 10		 push	 16			; 00000010H
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@FKABHCFH@?S?N?O?$LH?$LH?$LP?$LM?d?C?$NM?B?k?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@
  00376	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 486  : 		return false;

  0037b	32 c0		 xor	 al, al
  0037d	e9 3d 01 00 00	 jmp	 $LN1@SaveInputI
$LN6@SaveInputI:

; 487  : 	}
; 488  : 
; 489  : 	//类型判断
; 490  : 	if (m_pGameServiceOption->wServerType==0)

  00382	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00385	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0038b	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  0038f	85 d2		 test	 edx, edx
  00391	75 15		 jne	 SHORT $LN7@SaveInputI

; 491  : 	{
; 492  : 		AfxMessageBox(TEXT("游戏房间类型不能为空，请重新选择游戏房间类型"),MB_ICONERROR);

  00393	6a 00		 push	 0
  00395	6a 10		 push	 16			; 00000010H
  00397	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@HOBLABLI@?S?N?O?$LH?$LH?$LP?$LM?d?$MA?$OA?P?M?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T@
  0039c	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 493  : 		return false;

  003a1	32 c0		 xor	 al, al
  003a3	e9 17 01 00 00	 jmp	 $LN1@SaveInputI
$LN7@SaveInputI:

; 494  : 	}
; 495  : 
; 496  : 	//数据库名
; 497  : 	if (m_pGameServiceOption->szDataBaseName[0]==0)

  003a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003ab	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  003b1	ba 01 00 00 00	 mov	 edx, 1
  003b6	6b c2 00	 imul	 eax, edx, 0
  003b9	0f be 8c 01 ac
	00 00 00	 movsx	 ecx, BYTE PTR [ecx+eax+172]
  003c1	85 c9		 test	 ecx, ecx
  003c3	75 15		 jne	 SHORT $LN8@SaveInputI

; 498  : 	{
; 499  : 		AfxMessageBox(TEXT("游戏数据库名不能为空，请输入游戏数据库名"),MB_ICONERROR);

  003c5	6a 00		 push	 0
  003c7	6a 10		 push	 16			; 00000010H
  003c9	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DDNPCCLO@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?C?$PL?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?J?d?H?k?S?N?O@
  003ce	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 500  : 		return false;

  003d3	32 c0		 xor	 al, al
  003d5	e9 e5 00 00 00	 jmp	 $LN1@SaveInputI
$LN8@SaveInputI:

; 501  : 	}
; 502  : 
; 503  : 	//连接地址
; 504  : 	if (INVALID_IP_ADDRESS(dwDataBaseAddr))

  003da	83 7d ec 00	 cmp	 DWORD PTR _dwDataBaseAddr$[ebp], 0
  003de	74 06		 je	 SHORT $LN10@SaveInputI
  003e0	83 7d ec ff	 cmp	 DWORD PTR _dwDataBaseAddr$[ebp], -1
  003e4	75 15		 jne	 SHORT $LN9@SaveInputI
$LN10@SaveInputI:

; 505  : 	{
; 506  : 		AfxMessageBox(TEXT("游戏数据库地址格式不正确，请重新输入游戏数据库地址"),MB_ICONERROR);

  003e6	6a 00		 push	 0
  003e8	6a 10		 push	 16			; 00000010H
  003ea	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@DBPPFMOI@?S?N?O?$LH?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH?$LI?q?J?$LN?$LC?$LL?U?$PN?H?$LH?$KD?$KM?G?k?V?X?P@
  003ef	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 507  : 		return false;

  003f4	32 c0		 xor	 al, al
  003f6	e9 c4 00 00 00	 jmp	 $LN1@SaveInputI
$LN9@SaveInputI:

; 508  : 	}
; 509  : 
; 510  : 	//桌子数目
; 511  : 	if ((m_pGameServiceOption->wTableCount==0)||(m_pGameServiceOption->wTableCount>MAX_TABLE))

  003fb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003fe	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00404	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00408	85 d2		 test	 edx, edx
  0040a	74 15		 je	 SHORT $LN12@SaveInputI
  0040c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0040f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00415	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00419	81 fa 00 02 00
	00		 cmp	 edx, 512		; 00000200H
  0041f	7e 15		 jle	 SHORT $LN11@SaveInputI
$LN12@SaveInputI:

; 512  : 	{
; 513  : 		AfxMessageBox(TEXT("游戏桌子数目无效，请重新输入游戏桌子数目，有效数值范围为 1 - 512"),MB_ICONERROR);

  00421	6a 00		 push	 0
  00423	6a 10		 push	 16			; 00000010H
  00425	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@PKKMHEMF@?S?N?O?$LH?W?$MA?W?S?J?$PN?D?$LP?N?$NO?P?$KH?$KD?$KM?G?k?V?X?P?B?J?d?H?k?S?N?O@
  0042a	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 514  : 		return false;

  0042f	32 c0		 xor	 al, al
  00431	e9 89 00 00 00	 jmp	 $LN1@SaveInputI
$LN11@SaveInputI:

; 515  : 	}
; 516  : 
; 517  : 	//如果是约战房 默认勾选即时写分，支持pc
; 518  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  00436	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00439	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0043f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00443	83 fa 10	 cmp	 edx, 16			; 00000010H
  00446	75 47		 jne	 SHORT $LN13@SaveInputI

; 519  : 	{
; 520  : 		CServerRule::SetImmediateWriteScore(m_pGameServiceOption->dwServerRule,(TRUE));

  00448	6a 01		 push	 1
  0044a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0044d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00453	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00456	51		 push	 ecx
  00457	e8 00 00 00 00	 call	 ?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z ; CServerRule::SetImmediateWriteScore
  0045c	83 c4 08	 add	 esp, 8

; 521  : 		CServerRule::SetSuportMobile(m_pGameServiceOption->dwServerRule, (TRUE));

  0045f	6a 01		 push	 1
  00461	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00464	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0046a	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0046d	51		 push	 ecx
  0046e	e8 00 00 00 00	 call	 ?SetSuportMobile@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportMobile
  00473	83 c4 08	 add	 esp, 8

; 522  : 		CServerRule::SetSuportPC(m_pGameServiceOption->dwServerRule, (FALSE));

  00476	6a 00		 push	 0
  00478	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0047b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00481	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00484	51		 push	 ecx
  00485	e8 00 00 00 00	 call	 ?SetSuportPC@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportPC
  0048a	83 c4 08	 add	 esp, 8

; 523  : 	}	
; 524  : 	else

  0048d	eb 2e		 jmp	 SHORT $LN14@SaveInputI
$LN13@SaveInputI:

; 525  : 	{
; 526  : 		//默认支持pc 和 手游，如果是约战房（又叫做私人房）则不支持pc（在保存时会改变）
; 527  : 		CServerRule::SetSuportMobile(m_pGameServiceOption->dwServerRule, (TRUE));

  0048f	6a 01		 push	 1
  00491	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00494	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0049a	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0049d	51		 push	 ecx
  0049e	e8 00 00 00 00	 call	 ?SetSuportMobile@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportMobile
  004a3	83 c4 08	 add	 esp, 8

; 528  : 		CServerRule::SetSuportPC(m_pGameServiceOption->dwServerRule, (TRUE));

  004a6	6a 01		 push	 1
  004a8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004ab	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  004b1	83 c1 3c	 add	 ecx, 60			; 0000003cH
  004b4	51		 push	 ecx
  004b5	e8 00 00 00 00	 call	 ?SetSuportPC@CServerRule@@SAXAAK_N@Z ; CServerRule::SetSuportPC
  004ba	83 c4 08	 add	 esp, 8
$LN14@SaveInputI:

; 529  : 	}
; 530  : 
; 531  : 	return true;

  004bd	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 532  : }

  004bf	5f		 pop	 edi
  004c0	5e		 pop	 esi
  004c1	5b		 pop	 ebx
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c3		 ret	 0
?SaveInputInfo@CDlgServerOptionItem1@@UAE_NXZ ENDP	; CDlgServerOptionItem1::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnInitDialog@CDlgServerOptionItem1@@MAEHXZ
_TEXT	SEGMENT
tv1380 = -160						; size = 4
tv1368 = -160						; size = 4
tv1261 = -160						; size = 4
tv913 = -160						; size = 4
tv783 = -160						; size = 4
tv771 = -160						; size = 4
$T1 = -156						; size = 4
_nCurSel$2 = -88					; size = 4
_pComboBox$ = -84					; size = 4
_i$3 = -80						; size = 4
_bDefaultDataBase$4 = -74				; size = 1
_bGoldDataBase$5 = -73					; size = 1
_wServerType$6 = -72					; size = 2
_szDataBase$7 = -68					; size = 32
_wAttribKindID$ = -36					; size = 2
_wGameKindID$ = -32					; size = 2
_i$8 = -28						; size = 4
_i$9 = -24						; size = 4
_dwDataBaseAddr$10 = -20				; size = 4
_pServerKind$ = -16					; size = 4
_pServerType$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnInitDialog@CDlgServerOptionItem1@@MAEHXZ PROC	; CDlgServerOptionItem1::OnInitDialog, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 	__super::OnInitDialog();

  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 198  : 
; 199  : 	//构造控件
; 200  : 	InitCtrlWindow();

  00021	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?InitCtrlWindow@CDlgServerOptionItem1@@IAEXXZ ; CDlgServerOptionItem1::InitCtrlWindow

; 201  : 
; 202  : 	//变量定义
; 203  : 	CComboBox * pServerType=(CComboBox *)GetDlgItem(IDC_SERVER_TYPE);

  00029	68 f0 03 00 00	 push	 1008			; 000003f0H
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00036	89 45 f4	 mov	 DWORD PTR _pServerType$[ebp], eax

; 204  : 	
; 205  : 	CComboBox * pServerKind=(CComboBox *)GetDlgItem(IDC_SERVER_KIND);

  00039	68 f1 03 00 00	 push	 1009			; 000003f1H
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00046	89 45 f0	 mov	 DWORD PTR _pServerKind$[ebp], eax

; 206  : 
; 207  : 	//房间名字
; 208  : 	if (m_pGameServiceOption->szServerName[0]==0)

  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00052	ba 01 00 00 00	 mov	 edx, 1
  00057	6b c2 00	 imul	 eax, edx, 0
  0005a	0f be 4c 01 50	 movsx	 ecx, BYTE PTR [ecx+eax+80]
  0005f	85 c9		 test	 ecx, ecx
  00061	75 1c		 jne	 SHORT $LN11@OnInitDial

; 209  : 	{
; 210  : 		SetDlgItemText(IDC_SERVER_NAME,m_pGameServiceAttrib->szGameName);

  00063	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0006c	83 c1 06	 add	 ecx, 6
  0006f	51		 push	 ecx
  00070	68 e9 03 00 00	 push	 1001			; 000003e9H
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
  0007d	eb 1a		 jmp	 SHORT $LN12@OnInitDial
$LN11@OnInitDial:

; 211  : 	}
; 212  : 	else SetDlgItemText(IDC_SERVER_NAME,m_pGameServiceOption->szServerName);

  0007f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00088	83 c1 50	 add	 ecx, 80			; 00000050H
  0008b	51		 push	 ecx
  0008c	68 e9 03 00 00	 push	 1001			; 000003e9H
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN12@OnInitDial:

; 213  : 
; 214  : 	//桌子数目
; 215  : 	if (m_pGameServiceOption->wTableCount!=0)

  00099	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000a2	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  000a6	85 d2		 test	 edx, edx
  000a8	74 7c		 je	 SHORT $LN13@OnInitDial

; 216  : 	{
; 217  : 		SetDlgItemInt(IDC_TABLE_COUNT,m_pGameServiceOption->wTableCount);

  000aa	6a 01		 push	 1
  000ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b5	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  000b9	52		 push	 edx
  000ba	68 f2 03 00 00	 push	 1010			; 000003f2H
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 218  : 		if (m_pGameServiceOption->wMaxPlayer != 0) SetDlgItemInt(IDC_MAX_PLAYER, m_pGameServiceOption->wMaxPlayer);

  000c7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000d0	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  000d4	85 d2		 test	 edx, edx
  000d6	74 1f		 je	 SHORT $LN15@OnInitDial
  000d8	6a 01		 push	 1
  000da	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000e3	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  000e7	52		 push	 edx
  000e8	68 f3 03 00 00	 push	 1011			; 000003f3H
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
  000f5	eb 2d		 jmp	 SHORT $LN16@OnInitDial
$LN15@OnInitDial:

; 219  : 		else SetDlgItemInt(IDC_MAX_PLAYER, m_pGameServiceOption->wTableCount*m_pGameServiceAttrib->wChairCount);

  000f7	6a 01		 push	 1
  000f9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00102	0f b7 51 46	 movzx	 edx, WORD PTR [ecx+70]
  00106	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0010f	0f b7 41 02	 movzx	 eax, WORD PTR [ecx+2]
  00113	0f af d0	 imul	 edx, eax
  00116	52		 push	 edx
  00117	68 f3 03 00 00	 push	 1011			; 000003f3H
  0011c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN16@OnInitDial:
  00124	eb 6d		 jmp	 SHORT $LN14@OnInitDial
$LN13@OnInitDial:

; 220  : 	}
; 221  : 	else if (m_pGameServiceAttrib->wChairCount >= MAX_CHAIR)

  00126	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00129	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0012f	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00133	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00139	7c 27		 jl	 SHORT $LN17@OnInitDial

; 222  : 	{
; 223  : 		SetDlgItemInt(IDC_TABLE_COUNT,1);

  0013b	6a 01		 push	 1
  0013d	6a 01		 push	 1
  0013f	68 f2 03 00 00	 push	 1010			; 000003f2H
  00144	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 224  : 		SetDlgItemInt(IDC_MAX_PLAYER, MAX_CHAIR);

  0014c	6a 01		 push	 1
  0014e	68 c8 00 00 00	 push	 200			; 000000c8H
  00153	68 f3 03 00 00	 push	 1011			; 000003f3H
  00158	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015b	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 225  : 	}
; 226  : 	else 

  00160	eb 31		 jmp	 SHORT $LN14@OnInitDial
$LN17@OnInitDial:

; 227  : 	{
; 228  : 		SetDlgItemInt(IDC_TABLE_COUNT,60);

  00162	6a 01		 push	 1
  00164	6a 3c		 push	 60			; 0000003cH
  00166	68 f2 03 00 00	 push	 1010			; 000003f2H
  0016b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0016e	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 229  : 		SetDlgItemInt(IDC_MAX_PLAYER, m_pGameServiceAttrib->wChairCount*60);

  00173	6a 01		 push	 1
  00175	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00178	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0017e	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00182	6b c2 3c	 imul	 eax, edx, 60
  00185	50		 push	 eax
  00186	68 f3 03 00 00	 push	 1011			; 000003f3H
  0018b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN14@OnInitDial:

; 230  : 	}
; 231  : 
; 232  : 	//房间等级
; 233  : 	if (m_pGameServiceOption->wServerLevel>0)

  00193	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0019c	0f b7 51 4e	 movzx	 edx, WORD PTR [ecx+78]
  001a0	85 d2		 test	 edx, edx
  001a2	7e 1f		 jle	 SHORT $LN19@OnInitDial

; 234  : 	{
; 235  : 		SetDlgItemInt(IDC_SERVER_LEVEL,m_pGameServiceOption->wServerLevel);

  001a4	6a 01		 push	 1
  001a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a9	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001af	0f b7 51 4e	 movzx	 edx, WORD PTR [ecx+78]
  001b3	52		 push	 edx
  001b4	68 f8 03 00 00	 push	 1016			; 000003f8H
  001b9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 236  : 	}
; 237  : 	else

  001c1	eb 11		 jmp	 SHORT $LN20@OnInitDial
$LN19@OnInitDial:

; 238  : 	{
; 239  : 		SetDlgItemInt(IDC_SERVER_LEVEL, 2);

  001c3	6a 01		 push	 1
  001c5	6a 02		 push	 2
  001c7	68 f8 03 00 00	 push	 1016			; 000003f8H
  001cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cf	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN20@OnInitDial:

; 240  : 	}
; 241  : 
; 242  : 	//服务端口
; 243  : 	if (m_pGameServiceOption->wServerPort!=0)

  001d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d7	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001dd	0f b7 51 48	 movzx	 edx, WORD PTR [ecx+72]
  001e1	85 d2		 test	 edx, edx
  001e3	74 1d		 je	 SHORT $LN21@OnInitDial

; 244  : 	{
; 245  : 		SetDlgItemInt(IDC_SERVER_PORT,m_pGameServiceOption->wServerPort);

  001e5	6a 01		 push	 1
  001e7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ea	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001f0	0f b7 51 48	 movzx	 edx, WORD PTR [ecx+72]
  001f4	52		 push	 edx
  001f5	68 f4 03 00 00	 push	 1012			; 000003f4H
  001fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fd	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN21@OnInitDial:

; 246  : 	}
; 247  : 
; 248  : 	//数据库名	
; 249  : 	//SetDlgItemText(IDC_DATABASE_NAME, szGameScoreDB);
; 250  : 	if (m_pGameServiceOption->szDataBaseName[0]!=0)

  00202	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0020b	ba 01 00 00 00	 mov	 edx, 1
  00210	6b c2 00	 imul	 eax, edx, 0
  00213	0f be 8c 01 ac
	00 00 00	 movsx	 ecx, BYTE PTR [ecx+eax+172]
  0021b	85 c9		 test	 ecx, ecx
  0021d	74 1f		 je	 SHORT $LN22@OnInitDial

; 251  : 	{
; 252  : 		SetDlgItemText(IDC_DATABASE_NAME,m_pGameServiceOption->szDataBaseName);

  0021f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00222	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00228	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0022e	51		 push	 ecx
  0022f	68 fa 03 00 00	 push	 1018			; 000003faH
  00234	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00237	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 253  : 	}
; 254  : 	else {

  0023c	eb 1a		 jmp	 SHORT $LN23@OnInitDial
$LN22@OnInitDial:

; 255  : 		SetDlgItemText(IDC_DATABASE_NAME, m_pGameServiceAttrib->szDataBaseName);

  0023e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00241	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00247	83 c1 34	 add	 ecx, 52			; 00000034H
  0024a	51		 push	 ecx
  0024b	68 fa 03 00 00	 push	 1018			; 000003faH
  00250	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00253	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN23@OnInitDial:

; 256  : 	}
; 257  : 		
; 258  : 
; 259  : 	//连接地址
; 260  : 	if (m_pGameServiceOption->szDataBaseAddr[0]!=0)

  00258	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0025b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00261	ba 01 00 00 00	 mov	 edx, 1
  00266	6b c2 00	 imul	 eax, edx, 0
  00269	0f be 8c 01 9c
	00 00 00	 movsx	 ecx, BYTE PTR [ecx+eax+156]
  00271	85 c9		 test	 ecx, ecx
  00273	74 60		 je	 SHORT $LN24@OnInitDial

; 261  : 	{
; 262  : 		DWORD dwDataBaseAddr=inet_addr(CT2CA(m_pGameServiceOption->szDataBaseAddr));

  00275	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00278	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0027e	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  00284	51		 push	 ecx
  00285	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0028b	e8 00 00 00 00	 call	 ??0?$CA2CAEX@$0IA@@ATL@@QAE@PBD@Z ; ATL::CA2CAEX<128>::CA2CAEX<128>
  00290	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv1261[ebp], eax
  00296	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv1261[ebp]
  0029c	e8 00 00 00 00	 call	 ??B?$CA2CAEX@$0IA@@ATL@@QBEPBDXZ ; ATL::CA2CAEX<128>::operator char const *
  002a1	50		 push	 eax
  002a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__inet_addr@4
  002a8	89 45 ec	 mov	 DWORD PTR _dwDataBaseAddr$10[ebp], eax
  002ab	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  002b1	e8 00 00 00 00	 call	 ??1?$CA2CAEX@$0IA@@ATL@@QAE@XZ ; ATL::CA2CAEX<128>::~CA2CAEX<128>

; 263  : 		((CIPAddressCtrl *)GetDlgItem(IDC_DATABASE_ADDR))->SetAddress(htonl(dwDataBaseAddr));

  002b6	8b 45 ec	 mov	 eax, DWORD PTR _dwDataBaseAddr$10[ebp]
  002b9	50		 push	 eax
  002ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__htonl@4
  002c0	50		 push	 eax
  002c1	68 f9 03 00 00	 push	 1017			; 000003f9H
  002c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002ce	8b c8		 mov	 ecx, eax
  002d0	e8 00 00 00 00	 call	 ?SetAddress@CIPAddressCtrl@@QAEXK@Z ; CIPAddressCtrl::SetAddress
$LN24@OnInitDial:

; 264  : 	}
; 265  : 
; 266  : 	//游戏类型
; 267  : 	for (INT i=0;i<pServerType->GetCount();i++)

  002d5	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  002dc	eb 09		 jmp	 SHORT $LN4@OnInitDial
$LN2@OnInitDial:
  002de	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  002e1	83 c0 01	 add	 eax, 1
  002e4	89 45 e8	 mov	 DWORD PTR _i$9[ebp], eax
$LN4@OnInitDial:
  002e7	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  002ea	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  002ef	39 45 e8	 cmp	 DWORD PTR _i$9[ebp], eax
  002f2	7d 2b		 jge	 SHORT $LN3@OnInitDial

; 268  : 	{
; 269  : 		if (pServerType->GetItemData(i)==m_pGameServiceOption->wServerType)

  002f4	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  002f7	50		 push	 eax
  002f8	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  002fb	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00300	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00303	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00309	0f b7 4a 4c	 movzx	 ecx, WORD PTR [edx+76]
  0030d	3b c1		 cmp	 eax, ecx
  0030f	75 0c		 jne	 SHORT $LN25@OnInitDial

; 270  : 		{
; 271  : 			pServerType->SetCurSel(i);

  00311	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  00314	50		 push	 eax
  00315	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  00318	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN25@OnInitDial:

; 272  : 		}
; 273  : 	}

  0031d	eb bf		 jmp	 SHORT $LN2@OnInitDial
$LN3@OnInitDial:

; 274  : 
; 275  : 	//房间密码
; 276  : 	if (m_pGameServiceOption->wServerKind&SERVER_GENRE_PASSWD)

  0031f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00322	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00328	0f b7 51 4a	 movzx	 edx, WORD PTR [ecx+74]
  0032c	83 e2 02	 and	 edx, 2
  0032f	74 32		 je	 SHORT $LN26@OnInitDial

; 277  : 	{
; 278  : 		GetDlgItem(IDC_SERVER_PASSWD)->EnableWindow(true);

  00331	6a 01		 push	 1
  00333	68 f7 03 00 00	 push	 1015			; 000003f7H
  00338	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0033b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00340	8b c8		 mov	 ecx, eax
  00342	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 279  : 		SetDlgItemText(IDC_SERVER_PASSWD,m_pGameServiceOption->szServerPasswd);

  00347	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0034a	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00350	83 c1 70	 add	 ecx, 112		; 00000070H
  00353	51		 push	 ecx
  00354	68 f7 03 00 00	 push	 1015			; 000003f7H
  00359	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 280  : 	}
; 281  : 	else

  00361	eb 28		 jmp	 SHORT $LN27@OnInitDial
$LN26@OnInitDial:

; 282  : 	{
; 283  : 		GetDlgItem(IDC_SERVER_PASSWD)->EnableWindow(false);

  00363	6a 00		 push	 0
  00365	68 f7 03 00 00	 push	 1015			; 000003f7H
  0036a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0036d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00372	8b c8		 mov	 ecx, eax
  00374	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 284  : 		SetDlgItemText(IDC_SERVER_PASSWD,TEXT(""));

  00379	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0037e	68 f7 03 00 00	 push	 1015			; 000003f7H
  00383	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00386	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN27@OnInitDial:

; 285  : 	}
; 286  : 
; 287  : 	//房间类型
; 288  : 	for (INT i=0;i<pServerKind->GetCount();i++)

  0038b	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$8[ebp], 0
  00392	eb 09		 jmp	 SHORT $LN7@OnInitDial
$LN5@OnInitDial:
  00394	8b 45 e4	 mov	 eax, DWORD PTR _i$8[ebp]
  00397	83 c0 01	 add	 eax, 1
  0039a	89 45 e4	 mov	 DWORD PTR _i$8[ebp], eax
$LN7@OnInitDial:
  0039d	8b 4d f0	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  003a0	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  003a5	39 45 e4	 cmp	 DWORD PTR _i$8[ebp], eax
  003a8	7d 2b		 jge	 SHORT $LN6@OnInitDial

; 289  : 	{
; 290  : 		if (pServerKind->GetItemData(i)==m_pGameServiceOption->wServerKind)

  003aa	8b 45 e4	 mov	 eax, DWORD PTR _i$8[ebp]
  003ad	50		 push	 eax
  003ae	8b 4d f0	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  003b1	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  003b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003b9	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  003bf	0f b7 4a 4a	 movzx	 ecx, WORD PTR [edx+74]
  003c3	3b c1		 cmp	 eax, ecx
  003c5	75 0c		 jne	 SHORT $LN28@OnInitDial

; 291  : 		{
; 292  : 			pServerKind->SetCurSel(i);

  003c7	8b 45 e4	 mov	 eax, DWORD PTR _i$8[ebp]
  003ca	50		 push	 eax
  003cb	8b 4d f0	 mov	 ecx, DWORD PTR _pServerKind$[ebp]
  003ce	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN28@OnInitDial:

; 293  : 		}
; 294  : 	}

  003d3	eb bf		 jmp	 SHORT $LN5@OnInitDial
$LN6@OnInitDial:

; 295  : 
; 296  : 	//房间配置
; 297  : 	if (m_pGameServiceOption->lCellScore!=0) SetDlgItemInt(IDC_CELL_SCORE,(LONG)m_pGameServiceOption->lCellScore);

  003d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003d8	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  003de	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  003e2	74 1c		 je	 SHORT $LN29@OnInitDial
  003e4	6a 01		 push	 1
  003e6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003e9	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  003ef	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003f2	52		 push	 edx
  003f3	68 f6 03 00 00	 push	 1014			; 000003f6H
  003f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003fb	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN29@OnInitDial:

; 298  : 	if (m_pGameServiceOption->wMaxPlayer!=0) SetDlgItemInt(IDC_MAX_PLAYER,(LONG)m_pGameServiceOption->wMaxPlayer);

  00400	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00403	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00409	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  0040d	85 d2		 test	 edx, edx
  0040f	74 1d		 je	 SHORT $LN30@OnInitDial
  00411	6a 01		 push	 1
  00413	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00416	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0041c	0f b7 51 44	 movzx	 edx, WORD PTR [ecx+68]
  00420	52		 push	 edx
  00421	68 f3 03 00 00	 push	 1011			; 000003f3H
  00426	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00429	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN30@OnInitDial:

; 299  : 	if (m_pGameServiceOption->lRestrictScore!=0) SetDlgItemInt(IDC_RESTRICT_SCORE,(LONG)m_pGameServiceOption->lRestrictScore);

  0042e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00431	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00437	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv1368[ebp], ecx
  0043d	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv1368[ebp]
  00443	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1368[ebp]
  00449	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0044c	0b 48 1c	 or	 ecx, DWORD PTR [eax+28]
  0044f	74 1c		 je	 SHORT $LN31@OnInitDial
  00451	6a 01		 push	 1
  00453	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00456	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0045c	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0045f	52		 push	 edx
  00460	68 02 04 00 00	 push	 1026			; 00000402H
  00465	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00468	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN31@OnInitDial:

; 300  : 	if (m_pGameServiceOption->wRevenueRatio!=0)

  0046d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00470	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00476	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  0047a	85 d2		 test	 edx, edx
  0047c	74 53		 je	 SHORT $LN32@OnInitDial

; 301  : 	{
; 302  : 		OnBnClickedRevenueRadio();

  0047e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00481	e8 00 00 00 00	 call	 ?OnBnClickedRevenueRadio@CDlgServerOptionItem1@@QAEXXZ ; CDlgServerOptionItem1::OnBnClickedRevenueRadio

; 303  : 		SetDlgItemInt(IDC_SERVICE_REVENUE,(LONG)m_pGameServiceOption->wRevenueRatio);

  00486	6a 01		 push	 1
  00488	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0048b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00491	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  00495	52		 push	 edx
  00496	68 04 04 00 00	 push	 1028			; 00000404H
  0049b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0049e	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 304  : 		((CButton*)GetDlgItem(IDC_REVENUE_RADIO))->SetCheck(BST_CHECKED);

  004a3	6a 01		 push	 1
  004a5	68 03 04 00 00	 push	 1027			; 00000403H
  004aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ad	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  004b2	8b c8		 mov	 ecx, eax
  004b4	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 305  : 		((CButton*)GetDlgItem(IDC_SERVICE_RADIO))->SetCheck(BST_UNCHECKED);

  004b9	6a 00		 push	 0
  004bb	68 40 23 00 00	 push	 9024			; 00002340H
  004c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004c3	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  004c8	8b c8		 mov	 ecx, eax
  004ca	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
  004cf	eb 73		 jmp	 SHORT $LN33@OnInitDial
$LN32@OnInitDial:

; 306  : 		
; 307  : 	}
; 308  : 	else if(m_pGameServiceOption->lServiceScore != 0)

  004d1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  004d4	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  004da	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv1380[ebp], ecx
  004e0	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv1380[ebp]
  004e6	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv1380[ebp]
  004ec	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  004ef	0b 48 14	 or	 ecx, DWORD PTR [eax+20]
  004f2	74 50		 je	 SHORT $LN33@OnInitDial

; 309  : 	{
; 310  : 		OnBnClickedServiceRadio();

  004f4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f7	e8 00 00 00 00	 call	 ?OnBnClickedServiceRadio@CDlgServerOptionItem1@@QAEXXZ ; CDlgServerOptionItem1::OnBnClickedServiceRadio

; 311  : 		SetDlgItemInt(IDC_SERVICE_REVENUE,(LONG)m_pGameServiceOption->lServiceScore);

  004fc	6a 01		 push	 1
  004fe	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00501	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00507	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0050a	52		 push	 edx
  0050b	68 04 04 00 00	 push	 1028			; 00000404H
  00510	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00513	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 312  : 		((CButton*)GetDlgItem(IDC_SERVICE_RADIO))->SetCheck(BST_CHECKED);

  00518	6a 01		 push	 1
  0051a	68 40 23 00 00	 push	 9024			; 00002340H
  0051f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00522	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00527	8b c8		 mov	 ecx, eax
  00529	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 313  : 		((CButton*)GetDlgItem(IDC_REVENUE_RADIO))->SetCheck(BST_UNCHECKED);

  0052e	6a 00		 push	 0
  00530	68 03 04 00 00	 push	 1027			; 00000403H
  00535	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00538	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0053d	8b c8		 mov	 ecx, eax
  0053f	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN33@OnInitDial:

; 314  : 	}
; 315  : 
; 316  : 	//百人游戏无底分配置
; 317  : 	if(m_pGameServiceAttrib->wChairCount >= MAX_CHAIR)

  00544	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00547	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0054d	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00551	81 fa c8 00 00
	00		 cmp	 edx, 200		; 000000c8H
  00557	7c 16		 jl	 SHORT $LN35@OnInitDial

; 318  : 	{
; 319  : 		GetDlgItem(IDC_CELL_SCORE)->EnableWindow(FALSE);

  00559	6a 00		 push	 0
  0055b	68 f6 03 00 00	 push	 1014			; 000003f6H
  00560	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00563	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00568	8b c8		 mov	 ecx, eax
  0056a	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN35@OnInitDial:

; 320  : 	}
; 321  : 
; 322  : 	//挂接配置
; 323  : 	WORD wGameKindID=m_pGameServiceOption->wKindID;

  0056f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00572	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00578	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0057b	66 89 55 e0	 mov	 WORD PTR _wGameKindID$[ebp], dx

; 324  : 	WORD wAttribKindID=m_pGameServiceAttrib->wKindID;

  0057f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00582	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00588	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0058b	66 89 55 dc	 mov	 WORD PTR _wAttribKindID$[ebp], dx

; 325  : 	if (m_pGameServiceOption->wNodeID!=0) SetDlgItemInt(IDC_NODE_ID,m_pGameServiceOption->wNodeID);

  0058f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00592	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00598	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  0059c	85 d2		 test	 edx, edx
  0059e	74 1d		 je	 SHORT $LN36@OnInitDial
  005a0	6a 01		 push	 1
  005a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005a5	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  005ab	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  005af	52		 push	 edx
  005b0	68 ef 03 00 00	 push	 1007			; 000003efH
  005b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b8	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN36@OnInitDial:

; 326  : 	if (m_pGameServiceOption->wSortID!=0) SetDlgItemInt(IDC_SORT_ID,m_pGameServiceOption->wSortID);

  005bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005c0	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  005c6	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  005ca	85 d2		 test	 edx, edx
  005cc	74 1d		 je	 SHORT $LN37@OnInitDial
  005ce	6a 01		 push	 1
  005d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005d3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  005d9	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  005dd	52		 push	 edx
  005de	68 f5 03 00 00	 push	 1013			; 000003f5H
  005e3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e6	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN37@OnInitDial:

; 327  : 	if ((wGameKindID!=0)&&(wGameKindID!=wAttribKindID))	SetDlgItemInt(IDC_KIND_ID,m_pGameServiceOption->wKindID);

  005eb	0f b7 45 e0	 movzx	 eax, WORD PTR _wGameKindID$[ebp]
  005ef	85 c0		 test	 eax, eax
  005f1	74 28		 je	 SHORT $LN38@OnInitDial
  005f3	0f b7 45 e0	 movzx	 eax, WORD PTR _wGameKindID$[ebp]
  005f7	0f b7 4d dc	 movzx	 ecx, WORD PTR _wAttribKindID$[ebp]
  005fb	3b c1		 cmp	 eax, ecx
  005fd	74 1c		 je	 SHORT $LN38@OnInitDial
  005ff	6a 01		 push	 1
  00601	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00604	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0060a	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0060d	52		 push	 edx
  0060e	68 fe 03 00 00	 push	 1022			; 000003feH
  00613	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00616	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN38@OnInitDial:

; 328  : 
; 329  : 	//默认选择
; 330  : 	if (pServerType->GetCurSel()==LB_ERR)

  0061b	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  0061e	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00623	83 f8 ff	 cmp	 eax, -1
  00626	0f 85 3f 01 00
	00		 jne	 $LN39@OnInitDial

; 331  : 	{
; 332  : 		//获取名字
; 333  : 		TCHAR szDataBase[32]=TEXT("");

  0062c	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00631	88 45 bc	 mov	 BYTE PTR _szDataBase$7[ebp], al
  00634	33 c0		 xor	 eax, eax
  00636	89 45 bd	 mov	 DWORD PTR _szDataBase$7[ebp+1], eax
  00639	89 45 c1	 mov	 DWORD PTR _szDataBase$7[ebp+5], eax
  0063c	89 45 c5	 mov	 DWORD PTR _szDataBase$7[ebp+9], eax
  0063f	89 45 c9	 mov	 DWORD PTR _szDataBase$7[ebp+13], eax
  00642	89 45 cd	 mov	 DWORD PTR _szDataBase$7[ebp+17], eax
  00645	89 45 d1	 mov	 DWORD PTR _szDataBase$7[ebp+21], eax
  00648	89 45 d5	 mov	 DWORD PTR _szDataBase$7[ebp+25], eax
  0064b	66 89 45 d9	 mov	 WORD PTR _szDataBase$7[ebp+29], ax
  0064f	88 45 db	 mov	 BYTE PTR _szDataBase$7[ebp+31], al

; 334  : 		GetDlgItemText(IDC_DATABASE_NAME,szDataBase,CountArray(szDataBase));

  00652	6a 20		 push	 32			; 00000020H
  00654	8d 45 bc	 lea	 eax, DWORD PTR _szDataBase$7[ebp]
  00657	50		 push	 eax
  00658	68 fa 03 00 00	 push	 1018			; 000003faH
  0065d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00660	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 335  : 
; 336  : 		//变量定义
; 337  : 		WORD wServerType=0;

  00665	33 c0		 xor	 eax, eax
  00667	66 89 45 b8	 mov	 WORD PTR _wServerType$6[ebp], ax

; 338  : 		bool bGoldDataBase=(lstrcmpi(szDataBase,szTreasureDB)==0);

  0066b	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00670	8d 45 bc	 lea	 eax, DWORD PTR _szDataBase$7[ebp]
  00673	50		 push	 eax
  00674	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiA@8
  0067a	85 c0		 test	 eax, eax
  0067c	75 0c		 jne	 SHORT $LN53@OnInitDial
  0067e	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv771[ebp], 1
  00688	eb 0a		 jmp	 SHORT $LN54@OnInitDial
$LN53@OnInitDial:
  0068a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv771[ebp], 0
$LN54@OnInitDial:
  00694	8a 8d 60 ff ff
	ff		 mov	 cl, BYTE PTR tv771[ebp]
  0069a	88 4d b7	 mov	 BYTE PTR _bGoldDataBase$5[ebp], cl

; 339  : 		bool bDefaultDataBase=(lstrcmpi(szDataBase,m_pGameServiceAttrib->szDataBaseName)==0);

  0069d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006a0	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  006a6	83 c1 34	 add	 ecx, 52			; 00000034H
  006a9	51		 push	 ecx
  006aa	8d 55 bc	 lea	 edx, DWORD PTR _szDataBase$7[ebp]
  006ad	52		 push	 edx
  006ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpiA@8
  006b4	85 c0		 test	 eax, eax
  006b6	75 0c		 jne	 SHORT $LN55@OnInitDial
  006b8	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv783[ebp], 1
  006c2	eb 0a		 jmp	 SHORT $LN56@OnInitDial
$LN55@OnInitDial:
  006c4	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv783[ebp], 0
$LN56@OnInitDial:
  006ce	8a 85 60 ff ff
	ff		 mov	 al, BYTE PTR tv783[ebp]
  006d4	88 45 b6	 mov	 BYTE PTR _bDefaultDataBase$4[ebp], al

; 340  : 
; 341  : 		//类型定义
; 342  : 		if ((wServerType==0)&&(bGoldDataBase==true)) wServerType=GAME_GENRE_GOLD;

  006d7	0f b7 45 b8	 movzx	 eax, WORD PTR _wServerType$6[ebp]
  006db	85 c0		 test	 eax, eax
  006dd	75 12		 jne	 SHORT $LN40@OnInitDial
  006df	0f b6 45 b7	 movzx	 eax, BYTE PTR _bGoldDataBase$5[ebp]
  006e3	83 f8 01	 cmp	 eax, 1
  006e6	75 09		 jne	 SHORT $LN40@OnInitDial
  006e8	b8 01 00 00 00	 mov	 eax, 1
  006ed	66 89 45 b8	 mov	 WORD PTR _wServerType$6[ebp], ax
$LN40@OnInitDial:

; 343  : 		if ((wServerType==0)&&(bGoldDataBase==false)&&(bDefaultDataBase==true)) wServerType=GAME_GENRE_SCORE;

  006f1	0f b7 45 b8	 movzx	 eax, WORD PTR _wServerType$6[ebp]
  006f5	85 c0		 test	 eax, eax
  006f7	75 1a		 jne	 SHORT $LN41@OnInitDial
  006f9	0f b6 45 b7	 movzx	 eax, BYTE PTR _bGoldDataBase$5[ebp]
  006fd	85 c0		 test	 eax, eax
  006ff	75 12		 jne	 SHORT $LN41@OnInitDial
  00701	0f b6 45 b6	 movzx	 eax, BYTE PTR _bDefaultDataBase$4[ebp]
  00705	83 f8 01	 cmp	 eax, 1
  00708	75 09		 jne	 SHORT $LN41@OnInitDial
  0070a	b8 02 00 00 00	 mov	 eax, 2
  0070f	66 89 45 b8	 mov	 WORD PTR _wServerType$6[ebp], ax
$LN41@OnInitDial:

; 344  : 
; 345  : 		//分析类型
; 346  : 		if ((m_pGameServiceAttrib->wSupporType&wServerType)!=0L)

  00713	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00716	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0071c	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00720	0f b7 45 b8	 movzx	 eax, WORD PTR _wServerType$6[ebp]
  00724	23 d0		 and	 edx, eax
  00726	74 43		 je	 SHORT $LN39@OnInitDial

; 347  : 		{
; 348  : 			for (INT i=0;i<pServerType->GetCount();i++)

  00728	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  0072f	eb 09		 jmp	 SHORT $LN10@OnInitDial
$LN8@OnInitDial:
  00731	8b 45 b0	 mov	 eax, DWORD PTR _i$3[ebp]
  00734	83 c0 01	 add	 eax, 1
  00737	89 45 b0	 mov	 DWORD PTR _i$3[ebp], eax
$LN10@OnInitDial:
  0073a	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  0073d	e8 00 00 00 00	 call	 ?GetCount@CComboBox@@QBEHXZ ; CComboBox::GetCount
  00742	39 45 b0	 cmp	 DWORD PTR _i$3[ebp], eax
  00745	7d 24		 jge	 SHORT $LN39@OnInitDial

; 349  : 			{
; 350  : 				if (pServerType->GetItemData(i)==wServerType)

  00747	8b 45 b0	 mov	 eax, DWORD PTR _i$3[ebp]
  0074a	50		 push	 eax
  0074b	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  0074e	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00753	0f b7 4d b8	 movzx	 ecx, WORD PTR _wServerType$6[ebp]
  00757	3b c1		 cmp	 eax, ecx
  00759	75 0e		 jne	 SHORT $LN43@OnInitDial

; 351  : 				{
; 352  : 					pServerType->SetCurSel(i);

  0075b	8b 45 b0	 mov	 eax, DWORD PTR _i$3[ebp]
  0075e	50		 push	 eax
  0075f	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  00762	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 353  : 					break;

  00767	eb 02		 jmp	 SHORT $LN39@OnInitDial
$LN43@OnInitDial:

; 354  : 				}
; 355  : 			}

  00769	eb c6		 jmp	 SHORT $LN8@OnInitDial
$LN39@OnInitDial:

; 356  : 		}
; 357  : 	}
; 358  : 
; 359  : 	//约战房数据库类型
; 360  : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_PESONAL_SQL_TYPE);

  0076b	68 fb 03 00 00	 push	 1019			; 000003fbH
  00770	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00773	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00778	89 45 ac	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 361  : 
; 362  : 	if (m_pGameServiceOption->wServerType == GAME_GENRE_PERSONAL)

  0077b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0077e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00784	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00788	83 fa 10	 cmp	 edx, 16			; 00000010H
  0078b	0f 85 85 00 00
	00		 jne	 $LN44@OnInitDial

; 363  : 	{
; 364  : 		//游戏类型
; 365  : 		if ((lstrcmp(m_pGameServiceOption->szDataBaseName, szTreasureDB) == 0))

  00791	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00796	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00799	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0079f	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  007a5	51		 push	 ecx
  007a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  007ac	85 c0		 test	 eax, eax
  007ae	75 0c		 jne	 SHORT $LN46@OnInitDial

; 366  : 		{
; 367  : 			pComboBox->SetCurSel(0);

  007b0	6a 00		 push	 0
  007b2	8b 4d ac	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  007b5	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
  007ba	eb 29		 jmp	 SHORT $LN47@OnInitDial
$LN46@OnInitDial:

; 368  : 		}
; 369  : 		else if ((lstrcmp(m_pGameServiceOption->szDataBaseName, szGameScoreDB) == 0))

  007bc	68 00 00 00 00	 push	 OFFSET ?szGameScoreDB@@3QBDB
  007c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007c4	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  007ca	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  007d0	51		 push	 ecx
  007d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  007d7	85 c0		 test	 eax, eax
  007d9	75 0a		 jne	 SHORT $LN47@OnInitDial

; 370  : 		{
; 371  : 			pComboBox->SetCurSel(1);

  007db	6a 01		 push	 1
  007dd	8b 4d ac	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  007e0	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN47@OnInitDial:

; 372  : 		}
; 373  : 
; 374  : 		((CEdit*)GetDlgItem(IDC_SET_COUNT))->EnableWindow(FALSE);

  007e5	6a 00		 push	 0
  007e7	68 fc 03 00 00	 push	 1020			; 000003fcH
  007ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ef	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  007f4	8b c8		 mov	 ecx, eax
  007f6	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 375  : 		((CEdit*)GetDlgItem(IDC_GAME_INFOMATION))->EnableWindow(FALSE);

  007fb	6a 00		 push	 0
  007fd	68 fd 03 00 00	 push	 1021			; 000003fdH
  00802	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00805	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0080a	8b c8		 mov	 ecx, eax
  0080c	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
  00811	e9 c9 00 00 00	 jmp	 $LN45@OnInitDial
$LN44@OnInitDial:

; 376  : 
; 377  : 	}
; 378  : 	else if (m_pGameServiceOption->wServerType == 0)

  00816	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00819	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0081f	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00823	85 d2		 test	 edx, edx
  00825	75 4e		 jne	 SHORT $LN49@OnInitDial

; 379  : 	{
; 380  : 		int nCurSel = pServerType->GetCurSel();

  00827	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  0082a	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0082f	89 45 a8	 mov	 DWORD PTR _nCurSel$2[ebp], eax

; 381  : 		pComboBox->SetCurSel(pServerType->GetCurSel());

  00832	8b 4d f4	 mov	 ecx, DWORD PTR _pServerType$[ebp]
  00835	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0083a	50		 push	 eax
  0083b	8b 4d ac	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0083e	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 382  : 		SetDlgItemText(IDC_DATABASE_NAME, nCurSel==0?szTreasureDB:szGameScoreDB);

  00843	83 7d a8 00	 cmp	 DWORD PTR _nCurSel$2[ebp], 0
  00847	75 0c		 jne	 SHORT $LN57@OnInitDial
  00849	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv913[ebp], OFFSET ?szTreasureDB@@3QBDB
  00853	eb 0a		 jmp	 SHORT $LN58@OnInitDial
$LN57@OnInitDial:
  00855	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv913[ebp], OFFSET ?szGameScoreDB@@3QBDB
$LN58@OnInitDial:
  0085f	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv913[ebp]
  00865	50		 push	 eax
  00866	68 fa 03 00 00	 push	 1018			; 000003faH
  0086b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0086e	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 383  : 	}
; 384  : 	else

  00873	eb 6a		 jmp	 SHORT $LN45@OnInitDial
$LN49@OnInitDial:

; 385  : 	{
; 386  : 		pComboBox->SetCurSel(0);

  00875	6a 00		 push	 0
  00877	8b 4d ac	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0087a	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel

; 387  : 		SetDlgItemText(IDC_DATABASE_NAME, szTreasureDB);

  0087f	68 00 00 00 00	 push	 OFFSET ?szTreasureDB@@3QBDB
  00884	68 fa 03 00 00	 push	 1018			; 000003faH
  00889	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0088c	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 388  : 
; 389  : 		if (m_pGameServiceOption->dwSetPlayerCount!=0)SetDlgItemInt(IDC_SET_COUNT, m_pGameServiceOption->dwSetPlayerCount);

  00891	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00894	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0089a	83 b9 cc 00 00
	00 00		 cmp	 DWORD PTR [ecx+204], 0
  008a1	74 1f		 je	 SHORT $LN51@OnInitDial
  008a3	6a 01		 push	 1
  008a5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008a8	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  008ae	8b 91 cc 00 00
	00		 mov	 edx, DWORD PTR [ecx+204]
  008b4	52		 push	 edx
  008b5	68 fc 03 00 00	 push	 1020			; 000003fcH
  008ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008bd	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN51@OnInitDial:

; 390  : 		SetDlgItemText(IDC_GAME_INFOMATION, m_pGameServiceOption->szGameInfomation);

  008c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008c5	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  008cb	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  008d1	51		 push	 ecx
  008d2	68 fd 03 00 00	 push	 1021			; 000003fdH
  008d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008da	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA
$LN45@OnInitDial:

; 391  : 	}
; 392  : 	m_ToolTipCtrl.Create(this);

  008df	6a 00		 push	 0
  008e1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008e4	50		 push	 eax
  008e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008e8	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  008ee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  008f1	8b 82 c0 00 00
	00		 mov	 eax, DWORD PTR [edx+192]
  008f7	8b 90 6c 01 00
	00		 mov	 edx, DWORD PTR [eax+364]
  008fd	ff d2		 call	 edx

; 393  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_NAME), _T("游戏房间名，最大长度31"));

  008ff	6a 00		 push	 0
  00901	6a 00		 push	 0
  00903	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@HNIGNBJA@?S?N?O?$LH?$LH?$LP?$LM?d?C?$PL?$KD?$KM?W?n?$LE?s?$LD?$KE?$LG?H31@
  00908	68 e9 03 00 00	 push	 1001			; 000003e9H
  0090d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00910	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00915	50		 push	 eax
  00916	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00919	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0091f	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 394  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_LEVEL), _T("游戏等级 ，最大9999"));

  00924	6a 00		 push	 0
  00926	6a 00		 push	 0
  00928	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BMFELJAK@?S?N?O?$LH?$LF?H?$LM?$LG?5?$KD?$KM?W?n?$LE?s9999@
  0092d	68 f8 03 00 00	 push	 1016			; 000003f8H
  00932	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00935	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0093a	50		 push	 eax
  0093b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0093e	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00944	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 395  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_KIND), _T("可设置为普通房和密码房"));

  00949	6a 00		 push	 0
  0094b	6a 00		 push	 0
  0094d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@PNJOEPMK@?$LP?I?I?h?V?C?N?$KK?F?U?M?$KI?$LH?$LP?$LK?M?C?$NM?B?k?$LH?$LP@
  00952	68 f1 03 00 00	 push	 1009			; 000003f1H
  00957	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0095a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0095f	50		 push	 eax
  00960	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00963	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00969	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 396  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_PASSWD), _T("房间类型设置为密码房才可用，最大32位"));

  0096e	6a 00		 push	 0
  00970	6a 00		 push	 0
  00972	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@GFGAHLND@?$LH?$LP?$LM?d?$MA?$OA?P?M?I?h?V?C?N?$KK?C?$NM?B?k?$LH?$LP?$LC?E?$LP?I?S?C?$KD?$KM?W?n?$LE@
  00977	68 f7 03 00 00	 push	 1015			; 000003f7H
  0097c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0097f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00984	50		 push	 eax
  00985	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00988	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0098e	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 397  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_TYPE), _T("游戏类型"));

  00993	6a 00		 push	 0
  00995	6a 00		 push	 0
  00997	68 00 00 00 00	 push	 OFFSET ??_C@_08KKHNDKNH@?S?N?O?$LH?$MA?$OA?P?M@
  0099c	68 f0 03 00 00	 push	 1008			; 000003f0H
  009a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009a4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  009a9	50		 push	 eax
  009aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009ad	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  009b3	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 398  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVER_PORT), _T("游戏服务端口，可以为空，不能和其他端口冲突"));

  009b8	6a 00		 push	 0
  009ba	6a 00		 push	 0
  009bc	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@COOGMDKL@?S?N?O?$LH?$LH?$PO?N?q?$LG?K?$LP?Z?$KD?$KM?$LP?I?R?T?N?$KK?$LP?U?$KD?$KM?$LC?$LL?D?$NM?$LK?M?F@
  009c1	68 f4 03 00 00	 push	 1012			; 000003f4H
  009c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009c9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  009ce	50		 push	 eax
  009cf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009d2	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  009d8	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 399  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_PESONAL_SQL_TYPE), _T("约战数据库配置，只有游戏类型选择为约战类型，才会生效"));

  009dd	6a 00		 push	 0
  009df	6a 00		 push	 0
  009e1	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@HHOOMJCF@?T?$LM?U?$LN?J?$PN?$LO?$NN?$LP?b?E?d?V?C?$KD?$KM?V?$LL?S?P?S?N?O?$LH?$MA?$OA?P?M?Q?$KB?T@
  009e6	68 fb 03 00 00	 push	 1019			; 000003fbH
  009eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009ee	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  009f3	50		 push	 eax
  009f4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009f7	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  009fd	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 400  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_DATABASE_NAME), _T("选择游戏类型后会自动填写，不推荐修改"));

  00a02	6a 00		 push	 0
  00a04	6a 00		 push	 0
  00a06	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JMFBPOKD@?Q?$KB?T?q?S?N?O?$LH?$MA?$OA?P?M?$LK?s?$LL?a?W?T?$LG?$KP?L?n?P?$LE?$KD?$KM?$LC?$LL?M?F?$LM@
  00a0b	68 fa 03 00 00	 push	 1018			; 000003faH
  00a10	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a13	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a18	50		 push	 eax
  00a19	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a1c	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a22	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 401  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_DATABASE_ADDR), _T("选择游戏类型后会自动填写，不推荐修改"));

  00a27	6a 00		 push	 0
  00a29	6a 00		 push	 0
  00a2b	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JMFBPOKD@?Q?$KB?T?q?S?N?O?$LH?$MA?$OA?P?M?$LK?s?$LL?a?W?T?$LG?$KP?L?n?P?$LE?$KD?$KM?$LC?$LL?M?F?$LM@
  00a30	68 f9 03 00 00	 push	 1017			; 000003f9H
  00a35	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a38	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a3d	50		 push	 eax
  00a3e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a41	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a47	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 402  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_TABLE_COUNT), _T("设置房间桌子数，百人游戏强制默认为1"));

  00a4c	6a 00		 push	 0
  00a4e	6a 00		 push	 0
  00a50	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@IJDFCHCA@?I?h?V?C?$LH?$LP?$LM?d?W?$MA?W?S?J?$PN?$KD?$KM?$LA?Y?H?K?S?N?O?$LH?G?$LP?V?F?D?$KM?H@
  00a55	68 f2 03 00 00	 push	 1010			; 000003f2H
  00a5a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a5d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a62	50		 push	 eax
  00a63	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a66	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a6c	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 403  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_MAX_PLAYER), _T("设置房间可以容纳多少人 ，不填默认为桌子数乘以单桌最大人数"));

  00a71	6a 00		 push	 0
  00a73	6a 00		 push	 0
  00a75	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@CDOLDLNP@?I?h?V?C?$LH?$LP?$LM?d?$LP?I?R?T?H?$NN?D?I?$LG?$OA?I?Y?H?K?5?$KD?$KM?$LC?$LL?L?n?D?$KM@
  00a7a	68 f3 03 00 00	 push	 1011			; 000003f3H
  00a7f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a82	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00a87	50		 push	 eax
  00a88	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a8b	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00a91	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 404  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SET_COUNT), _T("设置房间虚拟人数，客户端显示人数为真实人数加上虚拟人数"));

  00a96	6a 00		 push	 0
  00a98	6a 00		 push	 0
  00a9a	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@FEFBIDED@?I?h?V?C?$LH?$LP?$LM?d?P?i?D?b?H?K?J?$PN?$KD?$KM?$LP?M?$LL?$KH?$LG?K?O?T?J?$LO?H?K?J@
  00a9f	68 fc 03 00 00	 push	 1020			; 000003fcH
  00aa4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa7	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00aac	50		 push	 eax
  00aad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab0	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00ab6	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 405  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_GAME_INFOMATION), _T("游戏房间的特色玩法"));

  00abb	6a 00		 push	 0
  00abd	6a 00		 push	 0
  00abf	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JFMMMIGM@?S?N?O?$LH?$LH?$LP?$LM?d?$LF?D?L?X?I?$KL?M?f?$LH?$KI@
  00ac4	68 fd 03 00 00	 push	 1021			; 000003fdH
  00ac9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00acc	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00ad1	50		 push	 eax
  00ad2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad5	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00adb	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 406  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_CELL_SCORE), _T("设置游戏底分，如果为房卡模式并配置了游戏底分，则该项失效"));

  00ae0	6a 00		 push	 0
  00ae2	6a 00		 push	 0
  00ae4	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@JONKEAKJ@?I?h?V?C?S?N?O?$LH?$LF?W?$LH?V?$KD?$KM?H?g?$LJ?$PL?N?$KK?$LH?$LP?$LP?$KI?D?$KD?J?$LN?$LC?$KC?E@
  00ae9	68 f6 03 00 00	 push	 1014			; 000003f6H
  00aee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00af1	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00af6	50		 push	 eax
  00af7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00afa	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00b00	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 407  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_RESTRICT_SCORE), _T("设置单局游戏最大输赢，部分游戏无效"));

  00b05	6a 00		 push	 0
  00b07	6a 00		 push	 0
  00b09	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@CMIHPLLM@?I?h?V?C?$LF?$KF?$LO?V?S?N?O?$LH?W?n?$LE?s?J?d?S?$KO?$KD?$KM?$LC?$LP?$LH?V?S?N?O?$LH?N@
  00b0e	68 02 04 00 00	 push	 1026			; 00000402H
  00b13	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b16	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00b1b	50		 push	 eax
  00b1c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b1f	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00b25	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 408  : 	m_ToolTipCtrl.AddTool(GetDlgItem(IDC_SERVICE_REVENUE), _T("设置游戏税收或者服务费，服务器部分游戏无效，推荐使用税收，税收为千分比，服务费为实际值"));

  00b2a	6a 00		 push	 0
  00b2c	6a 00		 push	 0
  00b2e	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@NDFAJCCE@?I?h?V?C?S?N?O?$LH?K?$LA?J?U?$LL?r?U?$NP?$LH?$PO?N?q?$LH?Q?$KD?$KM?$LH?$PO?N?q?F?w?$LC@
  00b33	68 04 04 00 00	 push	 1028			; 00000404H
  00b38	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b3b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00b40	50		 push	 eax
  00b41	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b44	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00b4a	e8 00 00 00 00	 call	 ?AddTool@CToolTipCtrl@@QAEHPAVCWnd@@PBDPBUtagRECT@@I@Z ; CToolTipCtrl::AddTool

; 409  : 
; 410  : 
; 411  : 
; 412  : 
; 413  : 	m_ToolTipCtrl.SetMaxTipWidth(300);

  00b4f	68 2c 01 00 00	 push	 300			; 0000012cH
  00b54	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b57	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00b5d	e8 00 00 00 00	 call	 ?SetMaxTipWidth@CToolTipCtrl@@QAEHH@Z ; CToolTipCtrl::SetMaxTipWidth

; 414  : 	m_ToolTipCtrl.Activate(TRUE);

  00b62	6a 01		 push	 1
  00b64	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b67	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00b6d	e8 00 00 00 00	 call	 ?Activate@CToolTipCtrl@@QAEXH@Z ; CToolTipCtrl::Activate

; 415  : 	return TRUE;

  00b72	b8 01 00 00 00	 mov	 eax, 1

; 416  : }

  00b77	5f		 pop	 edi
  00b78	5e		 pop	 esi
  00b79	5b		 pop	 ebx
  00b7a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b7d	33 cd		 xor	 ecx, ebp
  00b7f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b84	8b e5		 mov	 esp, ebp
  00b86	5d		 pop	 ebp
  00b87	c3		 ret	 0
?OnInitDialog@CDlgServerOptionItem1@@MAEHXZ ENDP	; CDlgServerOptionItem1::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItem1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItem1@@UAE@XZ PROC			; CDlgServerOptionItem1::~CDlgServerOptionItem1, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem1@@6B@

; 192  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgServerOptionItem1@@UAE@XZ ENDP			; CDlgServerOptionItem1::~CDlgServerOptionItem1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItem1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgServerOptionItem1@@QAE@XZ PROC			; CDlgServerOptionItem1::CDlgServerOptionItem1, COMDAT
; _this$ = ecx

; 186  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 185  : CDlgServerOptionItem1::CDlgServerOptionItem1() : CDlgServerOptionItem(IDD_SERVER_OPTION_1)

  0000c	68 94 00 00 00	 push	 148			; 00000094H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgServerOptionItem@@IAE@I@Z ; CDlgServerOptionItem::CDlgServerOptionItem

; 186  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem1@@6B@

; 187  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgServerOptionItem1@@QAE@XZ ENDP			; CDlgServerOptionItem1::CDlgServerOptionItem1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerOptionItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerOptionItem@@MAEPAXI@Z PROC		; CDlgServerOptionItem::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerOptionItem@@MAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 60 01 00 00	 push	 352			; 00000160H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 60 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 352
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 60 01 00 00	 push	 352			; 00000160H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerOptionItem@@MAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerOptionItem@@MAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerOptionItem@@MAEPAXI@Z ENDP		; CDlgServerOptionItem::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerOptionItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerOptionItem@@MAEPAXI@Z PROC		; CDlgServerOptionItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerOptionItem@@MAE@XZ ; CDlgServerOptionItem::~CDlgServerOptionItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 60 01 00 00	 push	 352			; 00000160H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerOptionItem@@MAEPAXI@Z ENDP		; CDlgServerOptionItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetMessageMap@CDlgServerOptionItem@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerOptionItem@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem::GetMessageMap, COMDAT
; _this$ = ecx

; 20   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerOptionItem::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerOptionItem@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerOptionItem::GetThisMessageMap, COMDAT

; 20   : BEGIN_MESSAGE_MAP(CDlgServerOptionItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 21   : 	ON_WM_SIZE()
; 22   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerOptionItem@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerOptionItem::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnSize@CDlgServerOptionItem@@AAEXIHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CDlgServerOptionItem@@AAEXIHH@Z PROC		; CDlgServerOptionItem::OnSize, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 174  : 	__super::OnSize(nType, cx, cy);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 08	 mov	 edx, DWORD PTR _nType$[ebp]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?OnSize@CWnd@@IAEXIHH@Z	; CWnd::OnSize

; 175  : 
; 176  : 	//调整控件
; 177  : 	RectifyControl(cx,cy);

  00020	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 90 98 01 00
	00		 mov	 edx, DWORD PTR [eax+408]
  00036	ff d2		 call	 edx

; 178  : 
; 179  : 	return;
; 180  : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 0c 00	 ret	 12			; 0000000cH
?OnSize@CDlgServerOptionItem@@AAEXIHH@Z ENDP		; CDlgServerOptionItem::OnSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?ShowOptionItem@CDlgServerOptionItem@@AAE_NABVCRect@@PAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rcRect$ = 8						; size = 4
_pParentWnd$ = 12					; size = 4
?ShowOptionItem@CDlgServerOptionItem@@AAE_NABVCRect@@PAVCWnd@@@Z PROC ; CDlgServerOptionItem::ShowOptionItem, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : 	//创建窗口
; 134  : 	if (m_hWnd==NULL) 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	75 68		 jne	 SHORT $LN2@ShowOption

; 135  : 	{
; 136  : 		//设置资源
; 137  : 		AfxSetResourceHandle(GetModuleHandle(MODULE_MANAGER_DLL_NAME));

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 138  : 
; 139  : 		//创建窗口
; 140  : 		Create(m_lpszTemplateName,pParentWnd);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00033	52		 push	 edx
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 10		 mov	 edx, DWORD PTR [eax]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 82 70 01 00
	00		 mov	 eax, DWORD PTR [edx+368]
  00042	ff d0		 call	 eax

; 141  : 		SetWindowPos(NULL,rcRect.left,rcRect.top,rcRect.Width(),rcRect.Height(),SWP_NOZORDER|SWP_NOACTIVATE);

  00044	6a 14		 push	 20			; 00000014H
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00049	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00052	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00057	50		 push	 eax
  00058	8b 45 08	 mov	 eax, DWORD PTR _rcRect$[ebp]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	51		 push	 ecx
  0005f	8b 55 08	 mov	 edx, DWORD PTR _rcRect$[ebp]
  00062	8b 02		 mov	 eax, DWORD PTR [edx]
  00064	50		 push	 eax
  00065	6a 00		 push	 0
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 142  : 
; 143  : 		//设置资源
; 144  : 		AfxSetResourceHandle(GetModuleHandle(NULL));

  0006f	6a 00		 push	 0
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle
$LN2@ShowOption:

; 145  : 	}
; 146  : 
; 147  : 	//显示窗口
; 148  : 	ShowWindow(SW_SHOW);

  0007d	6a 05		 push	 5
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 149  : 
; 150  : 	return true;

  00087	b0 01		 mov	 al, 1

; 151  : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 08 00	 ret	 8
?ShowOptionItem@CDlgServerOptionItem@@AAE_NABVCRect@@PAVCWnd@@@Z ENDP ; CDlgServerOptionItem::ShowOptionItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?SaveItemData@CDlgServerOptionItem@@AAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveItemData@CDlgServerOptionItem@@AAE_NXZ PROC	; CDlgServerOptionItem::SaveItemData, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 	//保存数据
; 122  : 	if ((m_hWnd!=NULL)&&(SaveInputInfo()==false))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	74 1b		 je	 SHORT $LN2@SaveItemDa
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 82 94 01 00
	00		 mov	 eax, DWORD PTR [edx+404]
  00023	ff d0		 call	 eax
  00025	0f b6 c8	 movzx	 ecx, al
  00028	85 c9		 test	 ecx, ecx
  0002a	75 04		 jne	 SHORT $LN2@SaveItemDa

; 123  : 	{
; 124  : 		return false;

  0002c	32 c0		 xor	 al, al
  0002e	eb 02		 jmp	 SHORT $LN1@SaveItemDa
$LN2@SaveItemDa:

; 125  : 	}
; 126  : 
; 127  : 	return true;

  00030	b0 01		 mov	 al, 1
$LN1@SaveItemDa:

; 128  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?SaveItemData@CDlgServerOptionItem@@AAE_NXZ ENDP	; CDlgServerOptionItem::SaveItemData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnCancel@CDlgServerOptionItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnCancel@CDlgServerOptionItem@@MAEXXZ PROC		; CDlgServerOptionItem::OnCancel, COMDAT
; _this$ = ecx

; 164  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 165  : 	//投递消息
; 166  : 	m_pDlgServerWizard->PostMessage(WM_COMMAND,MAKELONG(IDCANCEL,0),0);

  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	68 11 01 00 00	 push	 273			; 00000111H
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  0001e	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 167  : 
; 168  : 	return;
; 169  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?OnCancel@CDlgServerOptionItem@@MAEXXZ ENDP		; CDlgServerOptionItem::OnCancel
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?OnOK@CDlgServerOptionItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgServerOptionItem@@MAEXXZ PROC			; CDlgServerOptionItem::OnOK, COMDAT
; _this$ = ecx

; 155  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 156  : 	//投递消息
; 157  : 	m_pDlgServerWizard->PostMessage(WM_COMMAND,MAKELONG(IDOK,0),0);

  0000c	6a 00		 push	 0
  0000e	6a 01		 push	 1
  00010	68 11 01 00 00	 push	 273			; 00000111H
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  0001e	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 158  : 
; 159  : 	return;
; 160  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?OnOK@CDlgServerOptionItem@@MAEXXZ ENDP			; CDlgServerOptionItem::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??1CDlgServerOptionItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerOptionItem@@MAE@XZ PROC			; CDlgServerOptionItem::~CDlgServerOptionItem, COMDAT
; _this$ = ecx

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem@@6B@

; 116  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0001e	e8 00 00 00 00	 call	 ??1CToolTipCtrl@@UAE@XZ	; CToolTipCtrl::~CToolTipCtrl
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??1CDlgServerOptionItem@@MAE@XZ ENDP			; CDlgServerOptionItem::~CDlgServerOptionItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ??0CDlgServerOptionItem@@IAE@I@Z
_TEXT	SEGMENT
_hInstLibrary$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nIDTemplate$ = 8					; size = 4
??0CDlgServerOptionItem@@IAE@I@Z PROC			; CDlgServerOptionItem::CDlgServerOptionItem, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgServerOptionItem@@IAE@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 85   : CDlgServerOptionItem::CDlgServerOptionItem(UINT nIDTemplate) : CDialog(nIDTemplate)

  0002b	6a 00		 push	 0
  0002d	8b 45 08	 mov	 eax, DWORD PTR _nIDTemplate$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog
  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 86   : {

  00040	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00043	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerOptionItem@@6B@
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  00052	e8 00 00 00 00	 call	 ??0CToolTipCtrl@@QAE@XZ	; CToolTipCtrl::CToolTipCtrl

; 87   : 	//设置变量
; 88   : 	m_pDlgServerWizard=NULL;

  00057	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0

; 89   : 	m_pGameServiceAttrib=NULL;

  00064	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00067	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 90   : 	m_pGameServiceOption=NULL;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+176], 0

; 91   : 	m_pPersonalRoomOption = NULL;

  0007e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 80 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+180], 0

; 92   : 	m_pCreateRoomRightAndFee = NULL;

  0008b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 80 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+184], 0

; 93   : 	m_bIsHasPersonalRoom = false;

  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	c6 80 bc 00 00
	00 00		 mov	 BYTE PTR [eax+188], 0

; 94   : 
; 95   : 	HINSTANCE hInstLibrary = NULL;

  000a2	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _hInstLibrary$[ebp], 0

; 96   : #ifdef _DEBUG
; 97   : 	hInstLibrary = LoadLibrary(TEXT("PersonalRoomService.dll"));

  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@PDGLEKAG@PersonalRoomService?4dll@
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  000b4	89 45 ec	 mov	 DWORD PTR _hInstLibrary$[ebp], eax

; 98   : #else
; 99   : 	hInstLibrary = LoadLibrary(TEXT("PersonalRoomService.dll"));
; 100  : #endif
; 101  : 	if (hInstLibrary == NULL)

  000b7	83 7d ec 00	 cmp	 DWORD PTR _hInstLibrary$[ebp], 0
  000bb	75 0c		 jne	 SHORT $LN2@CDlgServer

; 102  : 	{
; 103  : 		FreeLibrary(hInstLibrary); 

  000bd	8b 45 ec	 mov	 eax, DWORD PTR _hInstLibrary$[ebp]
  000c0	50		 push	 eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4

; 104  : 	}
; 105  : 	else

  000c7	eb 0a		 jmp	 SHORT $LN1@CDlgServer
$LN2@CDlgServer:

; 106  : 	{
; 107  : 		m_bIsHasPersonalRoom = true;

  000c9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	c6 80 bc 00 00
	00 01		 mov	 BYTE PTR [eax+188], 1
$LN1@CDlgServer:

; 108  : 	}
; 109  : 
; 110  : 	return;
; 111  : }

  000d3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000da	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e7	59		 pop	 ecx
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgServerOptionItem@@IAE@I@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__ehhandler$??0CDlgServerOptionItem@@IAE@I@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgServerOptionItem@@IAE@I@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgServerOptionItem@@IAE@I@Z ENDP			; CDlgServerOptionItem::CDlgServerOptionItem
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECServerInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECServerInfoManager@@UAEPAXI@Z PROC			; CServerInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECServerInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 ec 00 00 00	 push	 236			; 000000ecH
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc ec 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 236
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 11		 je	 SHORT $LN4@vector
  0008a	68 ec 00 00 00	 push	 236			; 000000ecH
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00098	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECServerInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECServerInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECServerInfoManager@@UAEPAXI@Z ENDP			; CServerInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCServerInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCServerInfoManager@@UAEPAXI@Z PROC			; CServerInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CServerInfoManager@@UAE@XZ ; CServerInfoManager::~CServerInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 ec 00 00 00	 push	 236			; 000000ecH
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCServerInfoManager@@UAEPAXI@Z ENDP			; CServerInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CServerInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CServerInfoManager@@QAEAAV0@ABV0@@Z PROC		; CServerInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0000f	83 c6 04	 add	 esi, 4
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	83 c7 04	 add	 edi, 4
  00018	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0001d	f3 a5		 rep movsd
  0001f	a4		 movsb
  00020	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00023	83 c6 75	 add	 esi, 117		; 00000075H
  00026	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00029	83 c7 75	 add	 edi, 117		; 00000075H
  0002c	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  00031	f3 a5		 rep movsd
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??4CServerInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CServerInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CServerInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CServerInfoManager@@QAE@ABV0@@Z PROC			; CServerInfoManager::CServerInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerInfoManager@@6B@
  00015	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00018	83 c6 04	 add	 esi, 4
  0001b	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0001e	83 c7 04	 add	 edi, 4
  00021	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00026	f3 a5		 rep movsd
  00028	a4		 movsb
  00029	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002c	83 c6 75	 add	 esi, 117		; 00000075H
  0002f	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00032	83 c7 75	 add	 edi, 117		; 00000075H
  00035	b9 1d 00 00 00	 mov	 ecx, 29			; 0000001dH
  0003a	f3 a5		 rep movsd
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0CServerInfoManager@@QAE@ABV0@@Z ENDP			; CServerInfoManager::CServerInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchOptionBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchOptionBuffer@@UAEPAXI@Z PROC			; CMatchOptionBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchOptionBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchOptionBuffer@@UAE@XZ ; CMatchOptionBuffer::~CMatchOptionBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CMatchOptionBuffer@@UAE@XZ ; CMatchOptionBuffer::~CMatchOptionBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchOptionBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchOptionBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchOptionBuffer@@UAEPAXI@Z ENDP			; CMatchOptionBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchOptionBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchOptionBuffer@@UAEPAXI@Z PROC			; CMatchOptionBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchOptionBuffer@@UAE@XZ ; CMatchOptionBuffer::~CMatchOptionBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchOptionBuffer@@UAEPAXI@Z ENDP			; CMatchOptionBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchOptionBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchOptionBuffer@@QAEAAV0@ABV0@@Z PROC		; CMatchOptionBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CMatchOptionBuffer@@QAEAAV0@ABV0@@Z ENDP		; CMatchOptionBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchOptionBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchOptionBuffer@@QAE@ABV0@@Z PROC			; CMatchOptionBuffer::CMatchOptionBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchOptionBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CMatchOptionBuffer@@QAE@ABV0@@Z ENDP			; CMatchOptionBuffer::CMatchOptionBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleInfoManager@@UAEPAXI@Z PROC			; CModuleInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 44		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 04		 push	 4
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1d		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00058	8d 14 8d 04 00
	00 00		 lea	 edx, DWORD PTR [ecx*4+4]
  0005f	52		 push	 edx
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 e8 04	 sub	 eax, 4
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 e8 04	 sub	 eax, 4
  00075	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 0e		 je	 SHORT $LN4@vector
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN4@vector:
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleInfoManager@@UAEPAXI@Z ENDP			; CModuleInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleInfoManager@@UAEPAXI@Z PROC			; CModuleInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCModuleInfoManager@@UAEPAXI@Z ENDP			; CModuleInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleInfoManager@@QAEAAV0@ABV0@@Z PROC		; CModuleInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4CModuleInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CModuleInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleInfoManager@@QAE@ABV0@@Z PROC			; CModuleInfoManager::CModuleInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoManager@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CModuleInfoManager@@QAE@ABV0@@Z ENDP			; CModuleInfoManager::CModuleInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0tagModuleInitParameter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagModuleInitParameter@@QAE@XZ PROC			; tagModuleInitParameter::tagModuleInitParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 c1 0c 00
	00		 add	 ecx, 3265		; 00000cc1H
  00015	e8 00 00 00 00	 call	 ??0tagPersonalRoomOptionRightAndFee@@QAE@XZ
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??0tagModuleInitParameter@@QAE@XZ ENDP			; tagModuleInitParameter::tagModuleInitParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGameServiceManagerHelper@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGameServiceManagerHelper@@UAEPAXI@Z PROC		; CGameServiceManagerHelper::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGameServiceManagerHelper@@UAE@XZ
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCGameServiceManagerHelper@@UAEPAXI@Z ENDP		; CGameServiceManagerHelper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1CGameServiceManagerHelper@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGameServiceManagerHelper@@UAE@XZ PROC		; CGameServiceManagerHelper::~CGameServiceManagerHelper, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CGameServiceManagerHelper@@UAE@XZ ENDP		; CGameServiceManagerHelper::~CGameServiceManagerHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\gameservicehead.h
;	COMDAT ??0CGameServiceManagerHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameServiceManagerHelper@@QAE@XZ PROC		; CGameServiceManagerHelper::CGameServiceManagerHelper, COMDAT
; _this$ = ecx

; 1702 : DECLARE_MODULE_DYNAMIC(GameServiceManager)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 01 01 06	 push	 100729088		; 06010100H
  00011	68 00 00 00 00	 push	 OFFSET ?IID_IGameServiceManager@@3U_GUID@@B
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGameServiceManagerHelper@@6B@
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??0CGameServiceManagerHelper@@QAE@XZ ENDP		; CGameServiceManagerHelper::CGameServiceManagerHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z PROC ; CTempldateHelper<IGameServiceManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z ENDP ; CTempldateHelper<IGameServiceManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ PROC ; CTempldateHelper<IGameServiceManager>::GetInterface, COMDAT
; _this$ = ecx

; 316  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	return m_pIModeluInterface; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]

; 318  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ENDP ; CTempldateHelper<IGameServiceManager>::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetErrorDescribe@?$CTempldateHelper@UIGameServiceManager@@@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetErrorDescribe@?$CTempldateHelper@UIGameServiceManager@@@@QBEPBDXZ PROC ; CTempldateHelper<IGameServiceManager>::GetErrorDescribe, COMDAT
; _this$ = ecx

; 302  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 303  : 	return m_szDescribe; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 58 01 00 00	 add	 eax, 344		; 00000158H

; 304  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetErrorDescribe@?$CTempldateHelper@UIGameServiceManager@@@@QBEPBDXZ ENDP ; CTempldateHelper<IGameServiceManager>::GetErrorDescribe
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszModuleDllName$ = 8					; size = 4
_pszCreateProc$ = 12					; size = 4
?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z PROC ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo, COMDAT
; _this$ = ecx

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 289  : 	//设置信息
; 290  : 	lstrcpynA(m_szCreateProc,pszCreateProc,CountArray(m_szCreateProc));

  0000c	6a 40		 push	 64			; 00000040H
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pszCreateProc$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00018	51		 push	 ecx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 291  : 	lstrcpyn(m_szModuleDllName,pszModuleDllName,CountArray(m_szModuleDllName));

  0001f	68 04 01 00 00	 push	 260			; 00000104H
  00024	8b 45 08	 mov	 eax, DWORD PTR _pszModuleDllName$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 4c	 add	 ecx, 76			; 0000004cH
  0002e	51		 push	 ecx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 292  : 
; 293  : 	return;
; 294  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z ENDP ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
_TEXT	SEGMENT
tv173 = -100						; size = 4
tv172 = -100						; size = 4
tv171 = -100						; size = 4
tv170 = -100						; size = 4
$T2 = -94						; size = 1
$T3 = -93						; size = 1
_pszError$4 = -28					; size = 4
_CreateProc$5 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ PROC ; CTempldateHelper<IGameServiceManager>::CreateInstance, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	//释放组件
; 214  : 	CloseInstance();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance

; 215  : 
; 216  : 	//创建组件
; 217  : 	try

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 218  : 	{
; 219  : 		//效验参数
; 220  : 		ASSERT(m_szCreateProc[0]!=0);

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	6b c8 00	 imul	 ecx, eax, 0
  00046	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00049	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  0004e	85 c0		 test	 eax, eax
  00050	75 19		 jne	 SHORT $LN7@CreateInst
  00052	68 dc 00 00 00	 push	 220			; 000000dcH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00061	89 45 9c	 mov	 DWORD PTR tv170[ebp], eax
  00064	83 7d 9c 00	 cmp	 DWORD PTR tv170[ebp], 0
  00068	74 01		 je	 SHORT $LN7@CreateInst
  0006a	cc		 int	 3
$LN7@CreateInst:

; 221  : 		ASSERT(m_szModuleDllName[0]!=0);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	0f be 44 0a 4c	 movsx	 eax, BYTE PTR [edx+ecx+76]
  0007b	85 c0		 test	 eax, eax
  0007d	75 19		 jne	 SHORT $LN8@CreateInst
  0007f	68 dd 00 00 00	 push	 221			; 000000ddH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	89 45 9c	 mov	 DWORD PTR tv171[ebp], eax
  00091	83 7d 9c 00	 cmp	 DWORD PTR tv171[ebp], 0
  00095	74 01		 je	 SHORT $LN8@CreateInst
  00097	cc		 int	 3
$LN8@CreateInst:

; 222  : 
; 223  : 		//加载模块
; 224  : 		m_hDllInstance=AfxLoadLibrary(m_szModuleDllName);

  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	83 c0 4c	 add	 eax, 76			; 0000004cH
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z ; AfxLoadLibrary
  000a4	89 45 9c	 mov	 DWORD PTR tv172[ebp], eax
  000a7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 55 9c	 mov	 edx, DWORD PTR tv172[ebp]
  000ad	89 91 50 01 00
	00		 mov	 DWORD PTR [ecx+336], edx

; 225  : 		if (m_hDllInstance==NULL) 

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  000bd	75 2a		 jne	 SHORT $LN3@CreateInst

; 226  : 		{
; 227  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("“%s”模块加载失败"),m_szModuleDllName);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	83 c0 4c	 add	 eax, 76			; 0000004cH
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
  000cb	68 80 00 00 00	 push	 128			; 00000080H
  000d0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 228  : 			return false;

  000e2	32 c0		 xor	 al, al
  000e4	e9 34 01 00 00	 jmp	 $LN1@CreateInst
$LN3@CreateInst:

; 229  : 		}
; 230  : 
; 231  : 		//寻找函数
; 232  : 		ModuleCreateProc * CreateProc=(ModuleCreateProc *)GetProcAddress(m_hDllInstance,m_szCreateProc);

  000e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	83 c0 0c	 add	 eax, 12			; 0000000cH
  000ef	50		 push	 eax
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  000f9	52		 push	 edx
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00100	89 45 e8	 mov	 DWORD PTR _CreateProc$5[ebp], eax

; 233  : 		if (CreateProc==NULL) 

  00103	83 7d e8 00	 cmp	 DWORD PTR _CreateProc$5[ebp], 0
  00107	75 31		 jne	 SHORT $LN4@CreateInst

; 234  : 		{		
; 235  : 			_sntprintf_s(m_szDescribe, CountArray(m_szDescribe), TEXT("找不到组件创建函数“%s”:%d"), m_szCreateProc, GetLastError());

  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0010f	50		 push	 eax
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	83 c0 0c	 add	 eax, 12			; 0000000cH
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
  0011c	68 80 00 00 00	 push	 128			; 00000080H
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00130	83 c4 14	 add	 esp, 20			; 00000014H

; 236  : 			return false;

  00133	32 c0		 xor	 al, al
  00135	e9 e3 00 00 00	 jmp	 $LN1@CreateInst
$LN4@CreateInst:

; 237  : 		}
; 238  : 
; 239  : 		//创建组件
; 240  : 		m_pIModeluInterface=(IModeluInterface *)CreateProc(m_Guid,m_dwVersion);

  0013a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00140	51		 push	 ecx
  00141	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00144	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00147	50		 push	 eax
  00148	ff 55 e8	 call	 DWORD PTR _CreateProc$5[ebp]
  0014b	83 c4 08	 add	 esp, 8
  0014e	89 45 9c	 mov	 DWORD PTR tv173[ebp], eax
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 55 9c	 mov	 edx, DWORD PTR tv173[ebp]
  00157	89 91 54 01 00
	00		 mov	 DWORD PTR [ecx+340], edx

; 241  : 		if (m_pIModeluInterface==NULL) 

  0015d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00160	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00167	75 2a		 jne	 SHORT $LN5@CreateInst

; 242  : 		{
; 243  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("调用函数“%s”生成对象失败"),m_szCreateProc);

  00169	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
  00175	68 80 00 00 00	 push	 128			; 00000080H
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00189	83 c4 10	 add	 esp, 16			; 00000010H

; 244  : 			return false;

  0018c	32 c0		 xor	 al, al
  0018e	e9 8a 00 00 00	 jmp	 $LN1@CreateInst
$LN5@CreateInst:

; 245  : 		}
; 246  : 	}

  00193	eb 63		 jmp	 SHORT $LN9@CreateInst
__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$0:

; 247  : 	catch (LPCTSTR pszError)
; 248  : 	{
; 249  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("由于“%s”，组件创建失败"),pszError);

  00195	8b 45 e4	 mov	 eax, DWORD PTR _pszError$4[ebp]
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  0019e	68 80 00 00 00	 push	 128			; 00000080H
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001ac	51		 push	 ecx
  001ad	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001b2	83 c4 10	 add	 esp, 16			; 00000010H

; 250  : 		return false;

  001b5	c6 45 a3 00	 mov	 BYTE PTR $T3[ebp], 0
  001b9	b8 00 00 00 00	 mov	 eax, $LN13@CreateInst
  001be	c3		 ret	 0

; 251  : 	}

  001bf	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001c4	c3		 ret	 0
__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$1:

; 252  : 	catch (...)	
; 253  : 	{ 
; 254  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("组件创建函数“%s”产生未知异常错误，组件创建失败"),m_szCreateProc);

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  001cb	50		 push	 eax
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
  001d1	68 80 00 00 00	 push	 128			; 00000080H
  001d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001df	51		 push	 ecx
  001e0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001e5	83 c4 10	 add	 esp, 16			; 00000010H

; 255  : 		return false;

  001e8	c6 45 a2 00	 mov	 BYTE PTR $T2[ebp], 0
  001ec	b8 00 00 00 00	 mov	 eax, $LN15@CreateInst
  001f1	c3		 ret	 0

; 256  : 	}

  001f2	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001f7	c3		 ret	 0
$LN9@CreateInst:
  001f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ff	eb 0c		 jmp	 SHORT $LN14@CreateInst
$LN15@CreateInst:
  00201	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 255  : 		return false;

  00208	8a 45 a2	 mov	 al, BYTE PTR $T2[ebp]
  0020b	eb 10		 jmp	 SHORT $LN1@CreateInst
$LN14@CreateInst:
  0020d	eb 0c		 jmp	 SHORT $LN12@CreateInst
$LN13@CreateInst:
  0020f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 250  : 		return false;

  00216	8a 45 a3	 mov	 al, BYTE PTR $T3[ebp]
  00219	eb 02		 jmp	 SHORT $LN1@CreateInst
$LN12@CreateInst:

; 257  : 
; 258  : 	return true;

  0021b	b0 01		 mov	 al, 1
$LN1@CreateInst:

; 259  : }

  0021d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00220	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00227	59		 pop	 ecx
  00228	5f		 pop	 edi
  00229	5e		 pop	 esi
  0022a	5b		 pop	 ebx
  0022b	8b e5		 mov	 esp, ebp
  0022d	5d		 pop	 ebp
  0022e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ENDP ; CTempldateHelper<IGameServiceManager>::CreateInstance
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ PROC ; CTempldateHelper<IGameServiceManager>::CloseInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//设置变量
; 266  : 	m_szDescribe[0]=0;

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 267  : 
; 268  : 	//销毁对象
; 269  : 	if (m_pIModeluInterface!=NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00029	74 25		 je	 SHORT $LN2@CloseInsta

; 270  : 	{
; 271  : 		m_pIModeluInterface->Release();

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 8a 54 01 00
	00		 mov	 ecx, DWORD PTR [edx+340]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	ff d2		 call	 edx

; 272  : 		m_pIModeluInterface=NULL;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0
$LN2@CloseInsta:

; 273  : 	}
; 274  : 
; 275  : 	//释放 DLL
; 276  : 	if (m_hDllInstance!=NULL)

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  0005a	74 1c		 je	 SHORT $LN3@CloseInsta

; 277  : 	{
; 278  : 		AfxFreeLibrary(m_hDllInstance);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z ; AfxFreeLibrary

; 279  : 		m_hDllInstance=NULL;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0
$LN3@CloseInsta:

; 280  : 	}
; 281  : 
; 282  : 	return true;

  00078	b0 01		 mov	 al, 1

; 283  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ENDP ; CTempldateHelper<IGameServiceManager>::CloseInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ PROC ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@

; 206  : 	CloseInstance();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance

; 207  : }

  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00046	59		 pop	 ecx
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ENDP ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwVersion$ = 12					; size = 4
??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z PROC ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>, COMDAT
; _this$ = ecx

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@

; 168  : CTempldateHelper<IModeluInterface>::CTempldateHelper(REFGUID Guid, DWORD dwVersion) : m_dwVersion(dwVersion), m_Guid(Guid)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _dwVersion$[ebp]
  00024	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 170  : 	//辅助变量
; 171  : 	m_szDescribe[0]=0;

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 172  : 
; 173  : 	//内核信息
; 174  : 	m_hDllInstance=NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0

; 175  : 	m_pIModeluInterface=NULL;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 176  : 
; 177  : 	//组件属性
; 178  : 	ZeroMemory(m_szCreateProc,sizeof(m_szCreateProc));

  00054	6a 40		 push	 64			; 00000040H
  00056	6a 00		 push	 0
  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _memset
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH

; 179  : 	ZeroMemory(m_szModuleDllName,sizeof(m_szModuleDllName));

  00067	68 04 01 00 00	 push	 260			; 00000104H
  0006c	6a 00		 push	 0
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	83 c0 4c	 add	 eax, 76			; 0000004cH
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 180  : 
; 181  : 	return;
; 182  : }

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z ENDP ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetSuportPlayBack@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetSuportPlayBack@CServerRule@@SAXAAK_N@Z PROC		; CServerRule::SetSuportPlayBack, COMDAT

; 187  : 	static VOID SetSuportPlayBack(DWORD& dwServerRule, bool bEnable) {  (bEnable==true)?dwServerRule|=SR_SUPORT_PLAY_BACK:dwServerRule&=~SR_SUPORT_PLAY_BACK; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetSuportP
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 00
	04		 or	 edx, 67108864		; 04000000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetSuportP
$LN3@SetSuportP:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff ff
	fb		 and	 ecx, -67108865		; fbffffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetSuportP:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetSuportPlayBack@CServerRule@@SAXAAK_N@Z ENDP		; CServerRule::SetSuportPlayBack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetSuportPC@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetSuportPC@CServerRule@@SAXAAK_N@Z PROC		; CServerRule::SetSuportPC, COMDAT

; 185  : 	static VOID SetSuportPC(DWORD& dwServerRule, bool bEnable) {  (bEnable==true)?dwServerRule|=SR_SUPORT_TYPE_PC:dwServerRule&=~SR_SUPORT_TYPE_PC; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetSuportP
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 00
	01		 or	 edx, 16777216		; 01000000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetSuportP
$LN3@SetSuportP:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff ff
	fe		 and	 ecx, -16777217		; feffffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetSuportP:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetSuportPC@CServerRule@@SAXAAK_N@Z ENDP		; CServerRule::SetSuportPC
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetSuportMobile@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetSuportMobile@CServerRule@@SAXAAK_N@Z PROC		; CServerRule::SetSuportMobile, COMDAT

; 183  : 	static VOID SetSuportMobile(DWORD& dwServerRule, bool bEnable) {  (bEnable==true)?dwServerRule|=SR_SUPORT_TYPE_MOBILE:dwServerRule&=~SR_SUPORT_TYPE_MOBILE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetSuportM
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 00
	02		 or	 edx, 33554432		; 02000000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetSuportM
$LN3@SetSuportM:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff ff
	fd		 and	 ecx, -33554433		; fdffffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetSuportM:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetSuportMobile@CServerRule@@SAXAAK_N@Z ENDP		; CServerRule::SetSuportMobile
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsSuportPlayBack@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsSuportPlayBack@CServerRule@@SA_NK@Z PROC		; CServerRule::IsSuportPlayBack, COMDAT

; 181  : 	static bool IsSuportPlayBack(DWORD dwServerRule) { return (dwServerRule&SR_SUPORT_PLAY_BACK)!=0; }	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 00 04	 and	 eax, 67108864		; 04000000H
  00011	74 09		 je	 SHORT $LN3@IsSuportPl
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsSuportPl
$LN3@IsSuportPl:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsSuportPl:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsSuportPlayBack@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsSuportPlayBack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsSuportPC@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsSuportPC@CServerRule@@SA_NK@Z PROC			; CServerRule::IsSuportPC, COMDAT

; 179  : 	static bool IsSuportPC(DWORD dwServerRule) { return (dwServerRule&SR_SUPORT_TYPE_PC)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 00 01	 and	 eax, 16777216		; 01000000H
  00011	74 09		 je	 SHORT $LN3@IsSuportPC
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsSuportPC
$LN3@IsSuportPC:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsSuportPC:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsSuportPC@CServerRule@@SA_NK@Z ENDP			; CServerRule::IsSuportPC
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsSuportMobile@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsSuportMobile@CServerRule@@SA_NK@Z PROC		; CServerRule::IsSuportMobile, COMDAT

; 177  : 	static bool IsSuportMobile(DWORD dwServerRule) { return (dwServerRule&SR_SUPORT_TYPE_MOBILE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 00 02	 and	 eax, 33554432		; 02000000H
  00011	74 09		 je	 SHORT $LN3@IsSuportMo
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsSuportMo
$LN3@IsSuportMo:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsSuportMo:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsSuportMobile@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsSuportMobile
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowAndroidSimulate@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowAndroidSimulate@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowAndroidSimulate, COMDAT

; 172  : 	static VOID SetAllowAndroidSimulate(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_ANDROID_SIMULATE:dwServerRule&=~SR_ALLOW_ANDROID_SIMULATE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetAllowAn
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 80
	00		 or	 edx, 8388608		; 00800000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetAllowAn
$LN3@SetAllowAn:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff 7f
	ff		 and	 ecx, -8388609		; ff7fffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowAn:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetAllowAndroidSimulate@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowAndroidSimulate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowAndroidAttend, COMDAT

; 170  : 	static VOID SetAllowAndroidAttend(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_ANDROID_ATTEND:dwServerRule&=~SR_ALLOW_ANDROID_ATTEND; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetAllowAn
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 40
	00		 or	 edx, 4194304		; 00400000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetAllowAn
$LN3@SetAllowAn:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff bf
	ff		 and	 ecx, -4194305		; ffbfffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowAn:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetAllowAndroidAttend@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowAndroidAttend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendLockTable@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendLockTable@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendLockTable, COMDAT

; 168  : 	static VOID SetForfendLockTable(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_LOCK_TABLE:dwServerRule&=~SR_FORFEND_LOCK_TABLE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 20
	00		 or	 edx, 2097152		; 00200000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff df
	ff		 and	 ecx, -2097153		; ffdfffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendLockTable@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendLockTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameRule@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameRule@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameRule, COMDAT

; 166  : 	static VOID SetForfendGameRule(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_RULE:dwServerRule&=~SR_FORFEND_GAME_RULE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 10
	00		 or	 edx, 1048576		; 00100000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff ef
	ff		 and	 ecx, -1048577		; ffefffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendGameRule@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendSaveInGame, COMDAT

; 161  : 	static VOID SetForfendSaveInGame(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_SAVE_IN_GAME:dwServerRule&=~SR_FORFEND_SAVE_IN_GAME; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 08
	00		 or	 edx, 524288		; 00080000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff f7
	ff		 and	 ecx, -524289		; fff7ffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendSaveInGame@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendSaveInGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendSaveInRoom, COMDAT

; 159  : 	static VOID SetForfendSaveInRoom(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_SAVE_IN_ROOM:dwServerRule&=~SR_FORFEND_SAVE_IN_ROOM; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 00 04
	00		 or	 edx, 262144		; 00040000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ff fb
	ff		 and	 ecx, -262145		; fffbffffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendSaveInRoom@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendSaveInRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameLookon, COMDAT

; 150  : 	static VOID SetForfendGameLookon(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_LOOKON:dwServerRule&=~SR_FORFEND_GAME_LOOKON; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 40 00
	00		 or	 edx, 16384		; 00004000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff bf ff
	ff		 and	 ecx, -16385		; ffffbfffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendGameLookon@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameLookon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameEnter, COMDAT

; 148  : 	static VOID SetForfendGameEnter(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_ENTER:dwServerRule&=~SR_FORFEND_GAME_ENTER; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff df ff
	ff		 and	 ecx, -8193		; ffffdfffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendGameEnter@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendRoomEnter, COMDAT

; 146  : 	static VOID SetForfendRoomEnter(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_ROOM_ENTER:dwServerRule&=~SR_FORFEND_ROOM_ENTER; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 10 00
	00		 or	 edx, 4096		; 00001000H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff ef ff
	ff		 and	 ecx, -4097		; ffffefffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetForfendRoomEnter@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendRoomEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetImmediateWriteScore, COMDAT

; 141  : 	static VOID SetImmediateWriteScore(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_IMMEDIATE_WRITE_SCORE:dwServerRule&=~SR_IMMEDIATE_WRITE_SCORE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetImmedia
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 08 00
	00		 or	 edx, 2048		; 00000800H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetImmedia
$LN3@SetImmedia:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff f7 ff
	ff		 and	 ecx, -2049		; fffff7ffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetImmedia:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetImmediateWriteScore@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetImmediateWriteScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetDynamicCellScore@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetDynamicCellScore@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetDynamicCellScore, COMDAT

; 139  : 	static VOID SetDynamicCellScore(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_DYNAMIC_CELL_SCORE:dwServerRule&=~SR_DYNAMIC_CELL_SCORE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetDynamic
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 04 00
	00		 or	 edx, 1024		; 00000400H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetDynamic
$LN3@SetDynamic:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff fb ff
	ff		 and	 ecx, -1025		; fffffbffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetDynamic:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetDynamicCellScore@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetDynamicCellScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetRecordGameTrack, COMDAT

; 137  : 	static VOID SetRecordGameTrack(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_RECORD_GAME_TRACK:dwServerRule&=~SR_RECORD_GAME_TRACK; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetRecordG
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 02 00
	00		 or	 edx, 512		; 00000200H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetRecordG
$LN3@SetRecordG:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff fd ff
	ff		 and	 ecx, -513		; fffffdffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetRecordG:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetRecordGameTrack@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetRecordGameTrack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetRecordGameScore@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetRecordGameScore@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetRecordGameScore, COMDAT

; 135  : 	static VOID SetRecordGameScore(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_RECORD_GAME_SCORE:dwServerRule&=~SR_RECORD_GAME_SCORE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 1a		 jne	 SHORT $LN3@SetRecordG
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	81 ca 00 01 00
	00		 or	 edx, 256		; 00000100H
  0001d	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00020	89 10		 mov	 DWORD PTR [eax], edx
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  0002a	eb 18		 jmp	 SHORT $LN1@SetRecordG
$LN3@SetRecordG:
  0002c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	81 e1 ff fe ff
	ff		 and	 ecx, -257		; fffffeffH
  00037	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  0003a	89 0a		 mov	 DWORD PTR [edx], ecx
  0003c	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetRecordG:
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?SetRecordGameScore@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetRecordGameScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowAvertCheatMode@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowAvertCheatMode@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowAvertCheatMode, COMDAT

; 130  : 	static VOID SetAllowAvertCheatMode(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_AVERT_CHEAT_MODE:dwServerRule&=~SR_ALLOW_AVERT_CHEAT_MODE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetAllowAv
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 40	 or	 edx, 64			; 00000040H
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetAllowAv
$LN3@SetAllowAv:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 bf	 and	 ecx, -65		; ffffffbfH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowAv:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetAllowAvertCheatMode@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowAvertCheatMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowOffLineTrustee, COMDAT

; 128  : 	static VOID SetAllowOffLineTrustee(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_OFFLINE_TRUSTEE:dwServerRule&=~SR_ALLOW_OFFLINE_TRUSTEE; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetAllowOf
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 20	 or	 edx, 32			; 00000020H
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetAllowOf
$LN3@SetAllowOf:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 df	 and	 ecx, -33		; ffffffdfH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowOf:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetAllowOffLineTrustee@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowOffLineTrustee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetAllowDynamicJoin, COMDAT

; 126  : 	static VOID SetAllowDynamicJoin(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_ALLOW_DYNAMIC_JOIN:dwServerRule&=~SR_ALLOW_DYNAMIC_JOIN; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetAllowDy
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 10	 or	 edx, 16			; 00000010H
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetAllowDy
$LN3@SetAllowDy:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 ef	 and	 ecx, -17		; ffffffefH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetAllowDy:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetAllowDynamicJoin@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetAllowDynamicJoin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendWisperOnGame, COMDAT

; 121  : 	static VOID SetForfendWisperOnGame(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_WISPER_ON_GAME:dwServerRule&=~SR_FORFEND_WISPER_ON_GAME; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 08	 or	 edx, 8
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 f7	 and	 ecx, -9			; fffffff7H
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendWisperOnGame@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendWisperOnGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendWisperChat, COMDAT

; 119  : 	static VOID SetForfendWisperChat(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_WISPER_CHAT:dwServerRule&=~SR_FORFEND_WISPER_CHAT; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 04	 or	 edx, 4
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 fb	 and	 ecx, -5			; fffffffbH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendWisperChat@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendWisperChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendRoomChat, COMDAT

; 117  : 	static VOID SetForfendRoomChat(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_ROOM_CHAT:dwServerRule&=~SR_FORFEND_ROOM_CHAT; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 02	 or	 edx, 2
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 fd	 and	 ecx, -3			; fffffffdH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendRoomChat@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?SetForfendGameChat@CServerRule@@SAXAAK_N@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
_bEnable$ = 12						; size = 1
?SetForfendGameChat@CServerRule@@SAXAAK_N@Z PROC	; CServerRule::SetForfendGameChat, COMDAT

; 115  : 	static VOID SetForfendGameChat(DWORD & dwServerRule, bool bEnable) { (bEnable==true)?dwServerRule|=SR_FORFEND_GAME_CHAT:dwServerRule&=~SR_FORFEND_GAME_CHAT; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnable$[ebp]
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 17		 jne	 SHORT $LN3@SetForfend
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	83 ca 01	 or	 edx, 1
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _dwServerRule$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	89 55 bc	 mov	 DWORD PTR tv68[ebp], edx
  00027	eb 15		 jmp	 SHORT $LN1@SetForfend
$LN3@SetForfend:
  00029	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00031	8b 55 08	 mov	 edx, DWORD PTR _dwServerRule$[ebp]
  00034	89 0a		 mov	 DWORD PTR [edx], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN1@SetForfend:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetForfendGameChat@CServerRule@@SAXAAK_N@Z ENDP	; CServerRule::SetForfendGameChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAndroidSimulate, COMDAT

; 110  : 	static bool IsAllowAndroidSimulate(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_SIMULATE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 80 00	 and	 eax, 8388608		; 00800000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAndroidSimulate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowAndroidAttend, COMDAT

; 108  : 	static bool IsAllowAndroidAttend(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_ATTEND)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 40 00	 and	 eax, 4194304		; 00400000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowAndroidAttend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendLockTable@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendLockTable@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendLockTable, COMDAT

; 106  : 	static bool IsForfendLockTable(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_LOCK_TABLE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 20 00	 and	 eax, 2097152		; 00200000H
  00011	74 09		 je	 SHORT $LN3@IsForfendL
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendL
$LN3@IsForfendL:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendL:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendLockTable@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendLockTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameRule@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameRule@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameRule, COMDAT

; 104  : 	static bool IsForfendGameRule(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_RULE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 10 00	 and	 eax, 1048576		; 00100000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameRule@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendSaveInGame@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendSaveInGame@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendSaveInGame, COMDAT

; 99   : 	static bool IsForfendSaveInGame(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_SAVE_IN_GAME)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 08 00	 and	 eax, 524288		; 00080000H
  00011	74 09		 je	 SHORT $LN3@IsForfendS
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendS
$LN3@IsForfendS:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendS:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendSaveInGame@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendSaveInGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendSaveInRoom@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendSaveInRoom@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendSaveInRoom, COMDAT

; 97   : 	static bool IsForfendSaveInRoom(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_SAVE_IN_ROOM)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 04 00	 and	 eax, 262144		; 00040000H
  00011	74 09		 je	 SHORT $LN3@IsForfendS
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendS
$LN3@IsForfendS:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendS:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendSaveInRoom@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendSaveInRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameLookon@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameLookon@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameLookon, COMDAT

; 88   : 	static bool IsForfendGameLookon(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_LOOKON)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameLookon@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameLookon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameEnter@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameEnter@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameEnter, COMDAT

; 86   : 	static bool IsForfendGameEnter(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_ENTER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  00011	74 09		 je	 SHORT $LN3@IsForfendG
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendGameEnter@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendRoomEnter@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendRoomEnter@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendRoomEnter, COMDAT

; 84   : 	static bool IsForfendRoomEnter(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_ROOM_ENTER)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00011	74 09		 je	 SHORT $LN3@IsForfendR
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsForfendR
$LN3@IsForfendR:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendR:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsForfendRoomEnter@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendRoomEnter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsImmediateWriteScore@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsImmediateWriteScore@CServerRule@@SA_NK@Z PROC	; CServerRule::IsImmediateWriteScore, COMDAT

; 79   : 	static bool IsImmediateWriteScore(DWORD dwServerRule) { return (dwServerRule&SR_IMMEDIATE_WRITE_SCORE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  00011	74 09		 je	 SHORT $LN3@IsImmediat
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsImmediat
$LN3@IsImmediat:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsImmediat:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsImmediateWriteScore@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsImmediateWriteScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsDynamicCellScore@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsDynamicCellScore@CServerRule@@SA_NK@Z PROC		; CServerRule::IsDynamicCellScore, COMDAT

; 77   : 	static bool IsDynamicCellScore(DWORD dwServerRule) { return (dwServerRule&SR_DYNAMIC_CELL_SCORE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00011	74 09		 je	 SHORT $LN3@IsDynamicC
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsDynamicC
$LN3@IsDynamicC:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsDynamicC:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsDynamicCellScore@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsDynamicCellScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsRecordGameTrack@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsRecordGameTrack@CServerRule@@SA_NK@Z PROC		; CServerRule::IsRecordGameTrack, COMDAT

; 75   : 	static bool IsRecordGameTrack(DWORD dwServerRule) { return (dwServerRule&SR_RECORD_GAME_TRACK)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00011	74 09		 je	 SHORT $LN3@IsRecordGa
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsRecordGa
$LN3@IsRecordGa:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsRecordGa:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsRecordGameTrack@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsRecordGameTrack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsRecordGameScore@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsRecordGameScore@CServerRule@@SA_NK@Z PROC		; CServerRule::IsRecordGameScore, COMDAT

; 73   : 	static bool IsRecordGameScore(DWORD dwServerRule) { return (dwServerRule&SR_RECORD_GAME_SCORE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00011	74 09		 je	 SHORT $LN3@IsRecordGa
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsRecordGa
$LN3@IsRecordGa:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsRecordGa:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsRecordGameScore@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsRecordGameScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAvertCheatMode, COMDAT

; 68   : 	static bool IsAllowAvertCheatMode(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_AVERT_CHEAT_MODE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 40	 and	 eax, 64			; 00000040H
  0000f	74 09		 je	 SHORT $LN3@IsAllowAve
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowAve
$LN3@IsAllowAve:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAve:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowAvertCheatMode@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAvertCheatMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowOffLineTrustee, COMDAT

; 66   : 	static bool IsAllowOffLineTrustee(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_OFFLINE_TRUSTEE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 20	 and	 eax, 32			; 00000020H
  0000f	74 09		 je	 SHORT $LN3@IsAllowOff
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowOff
$LN3@IsAllowOff:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowOff:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowOffLineTrustee@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowOffLineTrustee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowDynamicJoin@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowDynamicJoin@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowDynamicJoin, COMDAT

; 64   : 	static bool IsAllowDynamicJoin(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_DYNAMIC_JOIN)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 10	 and	 eax, 16			; 00000010H
  0000f	74 09		 je	 SHORT $LN3@IsAllowDyn
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsAllowDyn
$LN3@IsAllowDyn:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowDyn:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsAllowDynamicJoin@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowDynamicJoin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendWisperOnGame@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendWisperOnGame@CServerRule@@SA_NK@Z PROC	; CServerRule::IsForfendWisperOnGame, COMDAT

; 59   : 	static bool IsForfendWisperOnGame(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_WISPER_ON_GAME)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 08	 and	 eax, 8
  0000f	74 09		 je	 SHORT $LN3@IsForfendW
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendW
$LN3@IsForfendW:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendW:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendWisperOnGame@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsForfendWisperOnGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendWisperChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendWisperChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendWisperChat, COMDAT

; 57   : 	static bool IsForfendWisperChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_WISPER_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 04	 and	 eax, 4
  0000f	74 09		 je	 SHORT $LN3@IsForfendW
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendW
$LN3@IsForfendW:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendW:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendWisperChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendWisperChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendRoomChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendRoomChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendRoomChat, COMDAT

; 55   : 	static bool IsForfendRoomChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_ROOM_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 02	 and	 eax, 2
  0000f	74 09		 je	 SHORT $LN3@IsForfendR
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendR
$LN3@IsForfendR:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendR:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendRoomChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendRoomChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsForfendGameChat@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsForfendGameChat@CServerRule@@SA_NK@Z PROC		; CServerRule::IsForfendGameChat, COMDAT

; 53   : 	static bool IsForfendGameChat(DWORD dwServerRule) { return (dwServerRule&SR_FORFEND_GAME_CHAT)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	83 e0 01	 and	 eax, 1
  0000f	74 09		 je	 SHORT $LN3@IsForfendG
  00011	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00018	eb 07		 jmp	 SHORT $LN4@IsForfendG
$LN3@IsForfendG:
  0001a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsForfendG:
  00021	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?IsForfendGameChat@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsForfendGameChat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagPersonalRule@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalRule@@QAE@XZ PROC				; tagPersonalRule::tagPersonalRule, COMDAT
; _this$ = ecx

; 1200 : 	tagPersonalRule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1197 : 	byte	cbSpecialRule;																					//是否有特殊规则

  0000c	68 00 00 00 00	 push	 OFFSET ??0tagPersonalGeneralRule@@QAE@XZ ; tagPersonalGeneralRule::tagPersonalGeneralRule
  00011	6a 05		 push	 5
  00013	6a 1c		 push	 28			; 0000001cH
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z

; 1201 : 	{
; 1202 : 		memset(nCellScore, 0, sizeof(nCellScore));

  00021	6a 14		 push	 20			; 00000014H
  00023	6a 00		 push	 0
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	05 8d 00 00 00	 add	 eax, 141		; 0000008dH
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _memset
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1203 : 	}

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0tagPersonalRule@@QAE@XZ ENDP				; tagPersonalRule::tagPersonalRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagPersonalGeneralRule@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalGeneralRule@@QAE@XZ PROC			; tagPersonalGeneralRule::tagPersonalGeneralRule, COMDAT
; _this$ = ecx

; 1187 : 	tagPersonalGeneralRule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1188 : 	{
; 1189 : 		memset(this, 0, sizeof(tagPersonalGeneralRule));

  0000c	6a 1c		 push	 28			; 0000001cH
  0000e	6a 00		 push	 0
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1190 : 	}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0tagPersonalGeneralRule@@QAE@XZ ENDP			; tagPersonalGeneralRule::tagPersonalGeneralRule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0tagPersonalRoomOptionRightAndFee@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalRoomOptionRightAndFee@@QAE@XZ PROC	; tagPersonalRoomOptionRightAndFee::tagPersonalRoomOptionRightAndFee, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0CreateRoomPayFee@@QAE@XZ ; CreateRoomPayFee::CreateRoomPayFee
  00011	6a 05		 push	 5
  00013	6a 13		 push	 19			; 00000013H
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 c0 15	 add	 eax, 21			; 00000015H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0tagPersonalRoomOptionRightAndFee@@QAE@XZ ENDP	; tagPersonalRoomOptionRightAndFee::tagPersonalRoomOptionRightAndFee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0CreateRoomPayFee@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CreateRoomPayFee@@QAE@XZ PROC			; CreateRoomPayFee::CreateRoomPayFee, COMDAT
; _this$ = ecx

; 1056 : 	CreateRoomPayFee()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1057 : 	{
; 1058 : 		cbGameMode		= 0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1059 : 		dwPlayTurnLimit = 0;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 40 01 00 00
	00 00		 mov	 DWORD PTR [eax+1], 0

; 1060 : 		dwPlayTimeLimit = 0;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 40 05 00 00
	00 00		 mov	 DWORD PTR [eax+5], 0

; 1061 : 		dwPayFee		= 0;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 40 09 00 00
	00 00		 mov	 DWORD PTR [eax+9], 0

; 1062 : 		wAAPayFee		= 0;

  00030	33 c0		 xor	 eax, eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	66 89 41 0d	 mov	 WORD PTR [ecx+13], ax

; 1063 : 		dwIniScore		= 0;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c7 40 0f 00 00
	00 00		 mov	 DWORD PTR [eax+15], 0

; 1064 : 	}

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
??0CreateRoomPayFee@@QAE@XZ ENDP			; CreateRoomPayFee::CreateRoomPayFee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCRect@@QAEPAUtagRECT@@XZ PROC			; CRect::operator tagRECT *, COMDAT
; _this$ = ecx

; 627  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 	return this;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 629  : }

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Height@CRect@@QBEHXZ PROC				; CRect::Height, COMDAT
; _this$ = ecx

; 580  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 581  : 	return bottom - top;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00015	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]

; 582  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Width@CRect@@QBEHXZ PROC				; CRect::Width, COMDAT
; _this$ = ecx

; 575  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 576  : 	return right - left;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00015	2b 01		 sub	 eax, DWORD PTR [ecx]

; 577  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRect@@QAE@XZ PROC					; CRect::CRect, COMDAT
; _this$ = ecx

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 528  : 	left = 0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 529  : 	top = 0;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 530  : 	right = 0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 531  : 	bottom = 0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 532  : }

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBNHGHMI@atlTraceString@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 00 02 00	 push	 131072			; 00020000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 __vsnprintf
  00024	83 c4 10	 add	 esp, 16			; 00000010H
  00027	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1975 :         __crt_va_end(_ArgList);

  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1976 :         return _Result;

  00031	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1977 :     }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT

; 1409 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1410 :         #pragma warning(push)
; 1411 :         #pragma warning(disable: 4996) // Deprecation
; 1412 :         return _vsnprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1413 :         #pragma warning(pop)
; 1414 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?__global_array_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_array_delete@@YAXPAXI@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_array_delete@@YAXPAXI@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?__global_array_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_array_delete@@YAXPAX@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_array_delete@@YAXPAX@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?__global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_delete@@YAXPAXI@Z PROC			; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_delete@@YAXPAXI@Z ENDP			; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?__global_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_delete@@YAXPAX@Z PROC				; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_delete@@YAXPAX@Z ENDP				; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgserverwizard.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
