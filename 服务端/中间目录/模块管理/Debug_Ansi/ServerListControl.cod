; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\模块管理\ServerListControl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAX@Z			; __global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAXI@Z			; __global_delete
PUBLIC	?__global_array_delete@@YAXPAX@Z		; __global_array_delete
PUBLIC	?__global_array_delete@@YAXPAXI@Z		; __global_array_delete
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	_wmemcpy
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0CServerListControl@@QAE@XZ			; CServerListControl::CServerListControl
PUBLIC	??1CServerListControl@@UAE@XZ			; CServerListControl::~CServerListControl
PUBLIC	?InitListControl@CServerListControl@@UAEXXZ	; CServerListControl::InitListControl
PUBLIC	?SortListItemData@CServerListControl@@UAEHJJG@Z	; CServerListControl::SortListItemData
PUBLIC	?GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z ; CServerListControl::GetListItemColor
PUBLIC	?InsertServerInfo@CServerListControl@@QAE_NPAUtagGameServerInfo@@@Z ; CServerListControl::InsertServerInfo
PUBLIC	?GetInsertIndex@CServerListControl@@AAEGPAUtagGameServerInfo@@@Z ; CServerListControl::GetInsertIndex
PUBLIC	?GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z ; CServerListControl::GetDescribeString
PUBLIC	??_GCServerListControl@@UAEPAXI@Z		; CServerListControl::`scalar deleting destructor'
PUBLIC	??_ECServerListControl@@UAEPAXI@Z		; CServerListControl::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7CServerListControl@@6B@			; CServerListControl::`vftable'
PUBLIC	??_C@_08PAFDLMMP@?$LH?$LP?$LM?d?C?$PL?W?V@	; `string'
PUBLIC	??_C@_08JPBPGOPI@?D?$KD?$LP?i?C?$PL?W?V@	; `string'
PUBLIC	??_C@_08JMJCMLJO@?$LH?$LP?$LM?d?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08MLKKGBDH@?W?$MA?W?S?J?$PN?D?$LP@	; `string'
PUBLIC	??_C@_08BNNJACIK@?$LM?$OA?L?$PN?$LG?K?$LP?Z@	; `string'
PUBLIC	??_C@_08OKOHGEBO@?$LH?$LP?$LM?d?$LB?j?J?$LG@	; `string'
PUBLIC	??_C@_08JOJGFJAH@?$MA?$OA?P?M?$LB?j?J?$LG@	; `string'
PUBLIC	??_C@_08GPFPDFDE@?$LN?Z?$LF?c?$LB?j?J?$LG@	; `string'
PUBLIC	??_C@_08JALLMFAC@?E?E?P?r?$LB?j?J?$LG@		; `string'
PUBLIC	??_C@_08ENLFOAJ@?J?$PN?$LO?$NN?$LP?b?C?$PL@	; `string'
PUBLIC	??_C@_0L@LLIEKHCD@?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH@ ; `string'
PUBLIC	??_C@_08IELLENBN@?$LH?$PO?N?q?F?w?C?$PL@	; `string'
PUBLIC	??_C@_08BDIJAICL@?$LP?M?$LL?$KH?$LG?K?C?$PL@	; `string'
PUBLIC	?__LINE__Var@?0??GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z@4JA ; `CServerListControl::GetListItemColor'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@MJCBAFBE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08FKKLAPEG@?$LL?$PN?$LH?V?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08LOLPFOFD@?$LB?H?H?$PM?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08CFIOOEMK@?Q?$LF?A?$LH?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_08IHGMNKPB@?N?$LE?V?$KK?$MA?$OA?P?M@	; `string'
PUBLIC	??_C@_01JOAMLHOP@?9@				; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_R4CServerListControl@@6B@			; CServerListControl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServerListControl@@@8			; CServerListControl `RTTI Type Descriptor'
PUBLIC	??_R3CServerListControl@@8			; CServerListControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServerListControl@@8			; CServerListControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServerListControl@@8		; CServerListControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CListControl@@8			; CListControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCListControl@@@8			; CListControl `RTTI Type Descriptor'
PUBLIC	??_R3CListControl@@8				; CListControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CListControl@@8				; CListControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CListCtrl@@8			; CListCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCListCtrl@@@8				; CListCtrl `RTTI Type Descriptor'
PUBLIC	??_R3CListCtrl@@8				; CListCtrl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CListCtrl@@8				; CListCtrl::`RTTI Base Class Array'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__lstrcmpA@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp___itoa:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?AssertValid@CWnd@@UBEXXZ:PROC			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:PROC	; CWnd::Dump
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ:PROC ; CListCtrl::GetRuntimeClass
EXTRN	?GetItemCount@CListCtrl@@QBEHXZ:PROC		; CListCtrl::GetItemCount
EXTRN	?SetItem@CListCtrl@@QAEHHHIPBDHIIJ@Z:PROC	; CListCtrl::SetItem
EXTRN	?GetItemData@CListCtrl@@QBEKH@Z:PROC		; CListCtrl::GetItemData
EXTRN	?FindItem@CListCtrl@@QBEHPAUtagLVFINDINFOA@@H@Z:PROC ; CListCtrl::FindItem
EXTRN	?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z:PROC	; CListCtrl::InsertColumn
EXTRN	?InsertItem@CListCtrl@@QAEHIHPBDIIHJ@Z:PROC	; CListCtrl::InsertItem
EXTRN	?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z:PROC	; CListCtrl::OnChildNotify
EXTRN	?GetItemCount@CHeaderCtrl@@QBEHXZ:PROC		; CHeaderCtrl::GetItemCount
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	??0CListControl@@QAE@XZ:PROC			; CListControl::CListControl
EXTRN	??1CListControl@@UAE@XZ:PROC			; CListControl::~CListControl
EXTRN	?PreSubclassWindow@CListControl@@UAEXXZ:PROC	; CListControl::PreSubclassWindow
EXTRN	?DrawItem@CListControl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:PROC ; CListControl::DrawItem
EXTRN	?GetMessageMap@CListControl@@MBEPBUAFX_MSGMAP@@XZ:PROC ; CListControl::GetMessageMap
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA DB 080H DUP (?) ; `CServerListControl::GetDescribeString'::`2'::szDescribe
_BSS	ENDS
;	COMDAT ??_R2CListCtrl@@8
rdata$r	SEGMENT
??_R2CListCtrl@@8 DD FLAT:??_R1A@?0A@EA@CListCtrl@@8	; CListCtrl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CListCtrl@@8
rdata$r	SEGMENT
??_R3CListCtrl@@8 DD 00H				; CListCtrl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CListCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCListCtrl@@@8
data$r	SEGMENT
??_R0?AVCListCtrl@@@8 DD FLAT:??_7type_info@@6B@	; CListCtrl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCListCtrl@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CListCtrl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CListCtrl@@8 DD FLAT:??_R0?AVCListCtrl@@@8 ; CListCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CListCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R2CListControl@@8
rdata$r	SEGMENT
??_R2CListControl@@8 DD FLAT:??_R1A@?0A@EA@CListControl@@8 ; CListControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CListCtrl@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CListControl@@8
rdata$r	SEGMENT
??_R3CListControl@@8 DD 00H				; CListControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CListControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCListControl@@@8
data$r	SEGMENT
??_R0?AVCListControl@@@8 DD FLAT:??_7type_info@@6B@	; CListControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCListControl@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CListControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CListControl@@8 DD FLAT:??_R0?AVCListControl@@@8 ; CListControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CListControl@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CServerListControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServerListControl@@8 DD FLAT:??_R0?AVCServerListControl@@@8 ; CServerListControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServerListControl@@8
rdata$r	ENDS
;	COMDAT ??_R2CServerListControl@@8
rdata$r	SEGMENT
??_R2CServerListControl@@8 DD FLAT:??_R1A@?0A@EA@CServerListControl@@8 ; CServerListControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CListControl@@8
	DD	FLAT:??_R1A@?0A@EA@CListCtrl@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CServerListControl@@8
rdata$r	SEGMENT
??_R3CServerListControl@@8 DD 00H			; CServerListControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CServerListControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServerListControl@@@8
data$r	SEGMENT
??_R0?AVCServerListControl@@@8 DD FLAT:??_7type_info@@6B@ ; CServerListControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServerListControl@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServerListControl@@6B@
rdata$r	SEGMENT
??_R4CServerListControl@@6B@ DD 00H			; CServerListControl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServerListControl@@@8
	DD	FLAT:??_R3CServerListControl@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08IHGMNKPB@?N?$LE?V?$KK?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08IHGMNKPB@?N?$LE?V?$KK?$MA?$OA?P?M@ DB 0ceH, 0b4H, 0d6H, 0aaH, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@ DB 0d4H, 0bcH, 0d5H, 0bdH, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08CFIOOEMK@?Q?$LF?A?$LH?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08CFIOOEMK@?Q?$LF?A?$LH?$MA?$OA?P?M@ DB 0d1H, 0b5H, 0c1H, 0b7H, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOLPFOFD@?$LB?H?H?$PM?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08LOLPFOFD@?$LB?H?H?$PM?$MA?$OA?P?M@ DB 0b1H, 0c8H, 0c8H, 0fcH, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FKKLAPEG@?$LL?$PN?$LH?V?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08FKKLAPEG@?$LL?$PN?$LH?V?$MA?$OA?P?M@ DB 0bbH, 0fdH, 0b7H, 0d6H, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@ DB 0b2H, 0c6H, 0b8H, 0bbH, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@MJCBAFBE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EO@MJCBAFBE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0a3H, 0bfH, 0e9H, 0b9H, 0dcH, 0c0H, 0edH, '\s'
	DB	'erverlistcontrol.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z@4JA DD 07aH ; `CServerListControl::GetListItemColor'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08BDIJAICL@?$LP?M?$LL?$KH?$LG?K?C?$PL@
CONST	SEGMENT
??_C@_08BDIJAICL@?$LP?M?$LL?$KH?$LG?K?C?$PL@ DB 0bfH, 0cdH, 0bbH, 0a7H, 0b6H
	DB	0cbH, 0c3H, 0fbH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08IELLENBN@?$LH?$PO?N?q?F?w?C?$PL@
CONST	SEGMENT
??_C@_08IELLENBN@?$LH?$PO?N?q?F?w?C?$PL@ DB 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H
	DB	0c3H, 0fbH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLIEKHCD@?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH@
CONST	SEGMENT
??_C@_0L@LLIEKHCD@?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH@ DB 0caH, 0fdH, 0beH, 0ddH
	DB	0bfH, 0e2H, 0b5H, 0d8H, 0d6H, 0b7H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ENLFOAJ@?J?$PN?$LO?$NN?$LP?b?C?$PL@
CONST	SEGMENT
??_C@_08ENLFOAJ@?J?$PN?$LO?$NN?$LP?b?C?$PL@ DB 0caH, 0fdH, 0beH, 0ddH, 0bfH
	DB	0e2H, 0c3H, 0fbH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JALLMFAC@?E?E?P?r?$LB?j?J?$LG@
CONST	SEGMENT
??_C@_08JALLMFAC@?E?E?P?r?$LB?j?J?$LG@ DB 0c5H, 0c5H, 0d0H, 0f2H, 0b1H, 0eaH
	DB	0caH, 0b6H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08GPFPDFDE@?$LN?Z?$LF?c?$LB?j?J?$LG@
CONST	SEGMENT
??_C@_08GPFPDFDE@?$LN?Z?$LF?c?$LB?j?J?$LG@ DB 0bdH, 0daH, 0b5H, 0e3H, 0b1H
	DB	0eaH, 0caH, 0b6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOJGFJAH@?$MA?$OA?P?M?$LB?j?J?$LG@
CONST	SEGMENT
??_C@_08JOJGFJAH@?$MA?$OA?P?M?$LB?j?J?$LG@ DB 0c0H, 0e0H, 0d0H, 0cdH, 0b1H
	DB	0eaH, 0caH, 0b6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKOHGEBO@?$LH?$LP?$LM?d?$LB?j?J?$LG@
CONST	SEGMENT
??_C@_08OKOHGEBO@?$LH?$LP?$LM?d?$LB?j?J?$LG@ DB 0b7H, 0bfH, 0bcH, 0e4H, 0b1H
	DB	0eaH, 0caH, 0b6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNNJACIK@?$LM?$OA?L?$PN?$LG?K?$LP?Z@
CONST	SEGMENT
??_C@_08BNNJACIK@?$LM?$OA?L?$PN?$LG?K?$LP?Z@ DB 0bcH, 0e0H, 0ccH, 0fdH, 0b6H
	DB	0cbH, 0bfH, 0daH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLKKGBDH@?W?$MA?W?S?J?$PN?D?$LP@
CONST	SEGMENT
??_C@_08MLKKGBDH@?W?$MA?W?S?J?$PN?D?$LP@ DB 0d7H, 0c0H, 0d7H, 0d3H, 0caH, 0fdH
	DB	0c4H, 0bfH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08JMJCMLJO@?$LH?$LP?$LM?d?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_08JMJCMLJO@?$LH?$LP?$LM?d?$MA?$OA?P?M@ DB 0b7H, 0bfH, 0bcH, 0e4H, 0c0H
	DB	0e0H, 0d0H, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JPBPGOPI@?D?$KD?$LP?i?C?$PL?W?V@
CONST	SEGMENT
??_C@_08JPBPGOPI@?D?$KD?$LP?i?C?$PL?W?V@ DB 0c4H, 0a3H, 0bfH, 0e9H, 0c3H, 0fbH
	DB	0d7H, 0d6H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08PAFDLMMP@?$LH?$LP?$LM?d?C?$PL?W?V@
CONST	SEGMENT
??_C@_08PAFDLMMP@?$LH?$LP?$LM?d?C?$PL?W?V@ DB 0b7H, 0bfH, 0bcH, 0e4H, 0c3H
	DB	0fbH, 0d7H, 0d6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CServerListControl@@6B@
CONST	SEGMENT
??_7CServerListControl@@6B@ DD FLAT:??_R4CServerListControl@@6B@ ; CServerListControl::`vftable'
	DD	FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECServerListControl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CListControl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CListControl@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?DrawItem@CListControl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?InitListControl@CServerListControl@@UAEXXZ
	DD	FLAT:?SortListItemData@CServerListControl@@UAEHJJG@Z
	DD	FLAT:?GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$r	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$r	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECServerListControl@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECServerListControl@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECServerListControl@@UAEPAXI@Z PROC			; CServerListControl::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECServerListControl@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CServerListControl@@UAE@XZ ; CServerListControl::~CServerListControl
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 08 01 00 00	 push	 264			; 00000108H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 08 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 264
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CServerListControl@@UAE@XZ ; CServerListControl::~CServerListControl
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 08 01 00 00	 push	 264			; 00000108H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECServerListControl@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECServerListControl@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECServerListControl@@UAEPAXI@Z ENDP			; CServerListControl::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCServerListControl@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCServerListControl@@UAEPAXI@Z PROC			; CServerListControl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CServerListControl@@UAE@XZ ; CServerListControl::~CServerListControl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 08 01 00 00	 push	 264			; 00000108H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCServerListControl@@UAEPAXI@Z ENDP			; CServerListControl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z
_TEXT	SEGMENT
tv65 = -80						; size = 4
tv163 = -78						; size = 2
_wGameID$1 = -12					; size = 2
_wKindID$2 = -8						; size = 2
_this$ = -4						; size = 4
_pGameServerInfo$ = 8					; size = 4
_wColumnIndex$ = 12					; size = 2
?GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z PROC ; CServerListControl::GetDescribeString, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	//变量定义
; 234  : 	static TCHAR szDescribe[128]=TEXT("");
; 235  : 
; 236  : 	//构造字符
; 237  : 	switch (wColumnIndex)

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wColumnIndex$[ebp]
  00010	89 45 b0	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b0 0c	 cmp	 DWORD PTR tv65[ebp], 12	; 0000000cH
  00017	0f 87 25 02 00
	00		 ja	 $LN2@GetDescrib
  0001d	8b 4d b0	 mov	 ecx, DWORD PTR tv65[ebp]
  00020	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN26@GetDescrib[ecx*4]
$LN4@GetDescrib:

; 238  : 	{
; 239  : 	case 0:		//房间名字
; 240  : 		{
; 241  : 			return pGameServerInfo->szServerName;

  00027	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0002a	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  0002f	e9 10 02 00 00	 jmp	 $LN1@GetDescrib
$LN5@GetDescrib:

; 242  : 		}
; 243  : 	case 1:		//游戏名字
; 244  : 		{
; 245  : 			return pGameServerInfo->szGameName;

  00034	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00037	83 c0 18	 add	 eax, 24			; 00000018H
  0003a	e9 05 02 00 00	 jmp	 $LN1@GetDescrib
$LN6@GetDescrib:

; 246  : 		}
; 247  : 	case 2:		//房间类型
; 248  : 		{
; 249  : 			//财富类型
; 250  : 			if (pGameServerInfo->wServerType&GAME_GENRE_GOLD)

  0003f	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00042	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  00049	83 e1 01	 and	 ecx, 1
  0004c	74 1f		 je	 SHORT $LN7@GetDescrib

; 251  : 			{
; 252  : 				lstrcpyn(szDescribe,TEXT("财富类型"),CountArray(szDescribe));

  0004e	68 80 00 00 00	 push	 128			; 00000080H
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_08GMINJKFL@?$LC?F?$LI?$LL?$MA?$OA?P?M@
  00058	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 253  : 				return szDescribe;

  00063	b8 00 00 00 00	 mov	 eax, OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  00068	e9 d7 01 00 00	 jmp	 $LN1@GetDescrib
$LN7@GetDescrib:

; 254  : 			}
; 255  : 
; 256  : 			//积分类型
; 257  : 			if (pGameServerInfo->wServerType&GAME_GENRE_SCORE)

  0006d	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00070	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  00077	83 e1 02	 and	 ecx, 2
  0007a	74 1f		 je	 SHORT $LN8@GetDescrib

; 258  : 			{
; 259  : 				lstrcpyn(szDescribe,TEXT("积分类型"),CountArray(szDescribe));

  0007c	68 80 00 00 00	 push	 128			; 00000080H
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_08FKKLAPEG@?$LL?$PN?$LH?V?$MA?$OA?P?M@
  00086	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 260  : 				return szDescribe;

  00091	b8 00 00 00 00	 mov	 eax, OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  00096	e9 a9 01 00 00	 jmp	 $LN1@GetDescrib
$LN8@GetDescrib:

; 261  : 			}
; 262  : 
; 263  : 			//比赛类型
; 264  : 			if (pGameServerInfo->wServerType&GAME_GENRE_MATCH)

  0009b	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0009e	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  000a5	83 e1 04	 and	 ecx, 4
  000a8	74 1f		 je	 SHORT $LN9@GetDescrib

; 265  : 			{
; 266  : 				lstrcpyn(szDescribe,TEXT("比赛类型"),CountArray(szDescribe));

  000aa	68 80 00 00 00	 push	 128			; 00000080H
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_08LOLPFOFD@?$LB?H?H?$PM?$MA?$OA?P?M@
  000b4	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 267  : 				return szDescribe;

  000bf	b8 00 00 00 00	 mov	 eax, OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  000c4	e9 7b 01 00 00	 jmp	 $LN1@GetDescrib
$LN9@GetDescrib:

; 268  : 			}
; 269  : 
; 270  : 			//训练类型
; 271  : 			if (pGameServerInfo->wServerType&GAME_GENRE_EDUCATE)

  000c9	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  000cc	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  000d3	83 e1 08	 and	 ecx, 8
  000d6	74 1f		 je	 SHORT $LN10@GetDescrib

; 272  : 			{
; 273  : 				lstrcpyn(szDescribe,TEXT("训练类型"),CountArray(szDescribe));

  000d8	68 80 00 00 00	 push	 128			; 00000080H
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_08CFIOOEMK@?Q?$LF?A?$LH?$MA?$OA?P?M@
  000e2	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 274  : 				return szDescribe;

  000ed	b8 00 00 00 00	 mov	 eax, OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  000f2	e9 4d 01 00 00	 jmp	 $LN1@GetDescrib
$LN10@GetDescrib:

; 275  : 			}
; 276  : 
; 277  : 			//约战类型
; 278  : 			if (pGameServerInfo->wServerType&GAME_GENRE_PERSONAL)

  000f7	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  000fa	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  00101	83 e1 10	 and	 ecx, 16			; 00000010H
  00104	74 1f		 je	 SHORT $LN11@GetDescrib

; 279  : 			{
; 280  : 				lstrcpyn(szDescribe,TEXT("约战类型"),CountArray(szDescribe));

  00106	68 80 00 00 00	 push	 128			; 00000080H
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_08ECFMCBBF@?T?$LM?U?$LN?$MA?$OA?P?M@
  00110	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 281  : 				return szDescribe;

  0011b	b8 00 00 00 00	 mov	 eax, OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  00120	e9 1f 01 00 00	 jmp	 $LN1@GetDescrib
$LN11@GetDescrib:

; 282  : 			}
; 283  : 
; 284  : 			return TEXT("未知类型");

  00125	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08IHGMNKPB@?N?$LE?V?$KK?$MA?$OA?P?M@
  0012a	e9 15 01 00 00	 jmp	 $LN1@GetDescrib
$LN12@GetDescrib:

; 285  : 		}
; 286  : 	case 3:		//桌子数目
; 287  : 		{
; 288  : 			return _itot(pGameServerInfo->wTableCount,szDescribe,10);

  0012f	6a 0a		 push	 10			; 0000000aH
  00131	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  00136	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00139	0f b7 88 b6 00
	00 00		 movzx	 ecx, WORD PTR [eax+182]
  00140	51		 push	 ecx
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___itoa
  00147	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014a	e9 f5 00 00 00	 jmp	 $LN1@GetDescrib
$LN13@GetDescrib:

; 289  : 		}
; 290  : 	case 4:		//监听端口
; 291  : 		{
; 292  : 			if (pGameServerInfo->wServerPort==0) return TEXT("-");

  0014f	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00152	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00159	85 c9		 test	 ecx, ecx
  0015b	75 0a		 jne	 SHORT $LN14@GetDescrib
  0015d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_01JOAMLHOP@?9@
  00162	e9 dd 00 00 00	 jmp	 $LN1@GetDescrib
$LN14@GetDescrib:

; 293  : 			return _itot(pGameServerInfo->wServerPort,szDescribe,10);

  00167	6a 0a		 push	 10			; 0000000aH
  00169	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  0016e	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00171	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  00178	51		 push	 ecx
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___itoa
  0017f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00182	e9 bd 00 00 00	 jmp	 $LN1@GetDescrib
$LN15@GetDescrib:

; 294  : 		}
; 295  : 	case 5:		//房间标识
; 296  : 		{
; 297  : 			return _itot(pGameServerInfo->wServerID,szDescribe,10);

  00187	6a 0a		 push	 10			; 0000000aH
  00189	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  0018e	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00191	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00195	51		 push	 ecx
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___itoa
  0019c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019f	e9 a0 00 00 00	 jmp	 $LN1@GetDescrib
$LN16@GetDescrib:

; 298  : 		}
; 299  : 	case 6:		//类型标识
; 300  : 		{
; 301  : 			WORD wKindID=pGameServerInfo->wKindID;

  001a4	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  001a7	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  001ab	66 89 4d f8	 mov	 WORD PTR _wKindID$2[ebp], cx

; 302  : 			WORD wGameID=pGameServerInfo->wGameID;

  001af	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  001b2	66 8b 08	 mov	 cx, WORD PTR [eax]
  001b5	66 89 4d f4	 mov	 WORD PTR _wGameID$1[ebp], cx

; 303  : 			return _itot((wKindID==0)?wGameID:wKindID,szDescribe,10);

  001b9	0f b7 45 f8	 movzx	 eax, WORD PTR _wKindID$2[ebp]
  001bd	85 c0		 test	 eax, eax
  001bf	75 0a		 jne	 SHORT $LN24@GetDescrib
  001c1	66 8b 4d f4	 mov	 cx, WORD PTR _wGameID$1[ebp]
  001c5	66 89 4d b2	 mov	 WORD PTR tv163[ebp], cx
  001c9	eb 08		 jmp	 SHORT $LN25@GetDescrib
$LN24@GetDescrib:
  001cb	66 8b 55 f8	 mov	 dx, WORD PTR _wKindID$2[ebp]
  001cf	66 89 55 b2	 mov	 WORD PTR tv163[ebp], dx
$LN25@GetDescrib:
  001d3	6a 0a		 push	 10			; 0000000aH
  001d5	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  001da	0f b7 45 b2	 movzx	 eax, WORD PTR tv163[ebp]
  001de	50		 push	 eax
  001df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___itoa
  001e5	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e8	eb 5a		 jmp	 SHORT $LN1@GetDescrib
$LN17@GetDescrib:

; 304  : 		}
; 305  : 	case 7:		//节点标识
; 306  : 		{
; 307  : 			return _itot(pGameServerInfo->wNodeID,szDescribe,10);

  001ea	6a 0a		 push	 10			; 0000000aH
  001ec	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  001f1	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  001f4	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  001f8	51		 push	 ecx
  001f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___itoa
  001ff	83 c4 0c	 add	 esp, 12			; 0000000cH
  00202	eb 40		 jmp	 SHORT $LN1@GetDescrib
$LN18@GetDescrib:

; 308  : 		}
; 309  : 	case 8:		//排序标识
; 310  : 		{
; 311  : 			return _itot(pGameServerInfo->wSortID,szDescribe,10);

  00204	6a 0a		 push	 10			; 0000000aH
  00206	68 00 00 00 00	 push	 OFFSET ?szDescribe@?1??GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z@4PADA
  0020b	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0020e	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00212	51		 push	 ecx
  00213	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___itoa
  00219	83 c4 0c	 add	 esp, 12			; 0000000cH
  0021c	eb 26		 jmp	 SHORT $LN1@GetDescrib
$LN19@GetDescrib:

; 312  : 		}
; 313  : 	case 9:		//数据库名
; 314  : 		{
; 315  : 			return pGameServerInfo->szDataBaseName;

  0021e	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00221	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00226	eb 1c		 jmp	 SHORT $LN1@GetDescrib
$LN20@GetDescrib:

; 316  : 		}
; 317  : 	case 10:	//数据库地址
; 318  : 		{
; 319  : 			return pGameServerInfo->szDataBaseAddr;

  00228	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0022b	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  00230	eb 12		 jmp	 SHORT $LN1@GetDescrib
$LN21@GetDescrib:

; 320  : 		}
; 321  : 	case 11:	//服务器名
; 322  : 		{
; 323  : 			return pGameServerInfo->szServerDLLName;

  00232	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00235	83 c0 38	 add	 eax, 56			; 00000038H
  00238	eb 0a		 jmp	 SHORT $LN1@GetDescrib
$LN22@GetDescrib:

; 324  : 		}
; 325  : 	case 12:	//客户端名
; 326  : 		{
; 327  : 			return pGameServerInfo->szClientEXEName;

  0023a	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0023d	83 c0 58	 add	 eax, 88			; 00000058H
  00240	eb 02		 jmp	 SHORT $LN1@GetDescrib
$LN2@GetDescrib:

; 328  : 		}
; 329  : 	}
; 330  : 
; 331  : 	return NULL;

  00242	33 c0		 xor	 eax, eax
$LN1@GetDescrib:

; 332  : }

  00244	5f		 pop	 edi
  00245	5e		 pop	 esi
  00246	5b		 pop	 ebx
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c2 08 00	 ret	 8
  0024d	0f 1f 00	 npad	 3
$LN26@GetDescrib:
  00250	00 00 00 00	 DD	 $LN4@GetDescrib
  00254	00 00 00 00	 DD	 $LN5@GetDescrib
  00258	00 00 00 00	 DD	 $LN6@GetDescrib
  0025c	00 00 00 00	 DD	 $LN12@GetDescrib
  00260	00 00 00 00	 DD	 $LN13@GetDescrib
  00264	00 00 00 00	 DD	 $LN15@GetDescrib
  00268	00 00 00 00	 DD	 $LN16@GetDescrib
  0026c	00 00 00 00	 DD	 $LN17@GetDescrib
  00270	00 00 00 00	 DD	 $LN18@GetDescrib
  00274	00 00 00 00	 DD	 $LN19@GetDescrib
  00278	00 00 00 00	 DD	 $LN20@GetDescrib
  0027c	00 00 00 00	 DD	 $LN21@GetDescrib
  00280	00 00 00 00	 DD	 $LN22@GetDescrib
?GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z ENDP ; CServerListControl::GetDescribeString
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?GetInsertIndex@CServerListControl@@AAEGPAUtagGameServerInfo@@@Z
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_pGameServerTemp$ = -12					; size = 4
_nItemCount$ = -8					; size = 4
_this$ = -4						; size = 4
_pGameServerInfo$ = 8					; size = 4
?GetInsertIndex@CServerListControl@@AAEGPAUtagGameServerInfo@@@Z PROC ; CServerListControl::GetInsertIndex, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 198  : 	//变量定义
; 199  : 	INT nItemCount=GetItemCount();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  00014	89 45 f8	 mov	 DWORD PTR _nItemCount$[ebp], eax

; 200  : 	tagGameServerInfo * pGameServerTemp=NULL;

  00017	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameServerTemp$[ebp], 0

; 201  : 
; 202  : 	//获取位置
; 203  : 	for (INT i=0;i<nItemCount;i++)

  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@GetInsertI
$LN2@GetInsertI:
  00027	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f0	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@GetInsertI:
  00030	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  00033	3b 45 f8	 cmp	 eax, DWORD PTR _nItemCount$[ebp]
  00036	7d 66		 jge	 SHORT $LN3@GetInsertI

; 204  : 	{
; 205  : 		//获取数据
; 206  : 		pGameServerTemp=(tagGameServerInfo *)GetItemData(i);

  00038	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00044	89 45 f4	 mov	 DWORD PTR _pGameServerTemp$[ebp], eax

; 207  : 
; 208  : 		//安装判断
; 209  : 		if ((pGameServerInfo->dwNativeVersion==0)&&(pGameServerTemp->dwNativeVersion!=0))

  00047	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0004a	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0004e	75 0b		 jne	 SHORT $LN5@GetInsertI
  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerTemp$[ebp]
  00053	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00057	74 02		 je	 SHORT $LN5@GetInsertI

; 210  : 		{
; 211  : 			continue;

  00059	eb cc		 jmp	 SHORT $LN2@GetInsertI
$LN5@GetInsertI:

; 212  : 		}
; 213  : 		
; 214  : 		//游戏名字
; 215  : 		if (lstrcmp(pGameServerInfo->szGameName,pGameServerTemp->szGameName)<0)

  0005b	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerTemp$[ebp]
  0005e	83 c0 18	 add	 eax, 24			; 00000018H
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _pGameServerInfo$[ebp]
  00065	83 c1 18	 add	 ecx, 24			; 00000018H
  00068	51		 push	 ecx
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  0006f	85 c0		 test	 eax, eax
  00071	7d 06		 jge	 SHORT $LN6@GetInsertI

; 216  : 		{
; 217  : 			return i;

  00073	66 8b 45 f0	 mov	 ax, WORD PTR _i$1[ebp]
  00077	eb 29		 jmp	 SHORT $LN1@GetInsertI
$LN6@GetInsertI:

; 218  : 		}
; 219  : 
; 220  : 		//房间名字
; 221  : 		if (lstrcmp(pGameServerInfo->szServerName,pGameServerTemp->szServerName)<0)

  00079	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerTemp$[ebp]
  0007c	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  00081	50		 push	 eax
  00082	8b 4d 08	 mov	 ecx, DWORD PTR _pGameServerInfo$[ebp]
  00085	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  0008b	51		 push	 ecx
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00092	85 c0		 test	 eax, eax
  00094	7d 06		 jge	 SHORT $LN7@GetInsertI

; 222  : 		{
; 223  : 			return i;

  00096	66 8b 45 f0	 mov	 ax, WORD PTR _i$1[ebp]
  0009a	eb 06		 jmp	 SHORT $LN1@GetInsertI
$LN7@GetInsertI:

; 224  : 		}
; 225  : 	}

  0009c	eb 89		 jmp	 SHORT $LN2@GetInsertI
$LN3@GetInsertI:

; 226  : 
; 227  : 	return nItemCount;

  0009e	66 8b 45 f8	 mov	 ax, WORD PTR _nItemCount$[ebp]
$LN1@GetInsertI:

; 228  : }

  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
?GetInsertIndex@CServerListControl@@AAEGPAUtagGameServerInfo@@@Z ENDP ; CServerListControl::GetInsertIndex
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?InsertServerInfo@CServerListControl@@QAE_NPAUtagGameServerInfo@@@Z
_TEXT	SEGMENT
_pszDescribe$1 = -44					; size = 4
_nIndex$2 = -40						; size = 4
_i$3 = -36						; size = 2
_nInsertItem$ = -32					; size = 4
_FindInfo$ = -28					; size = 24
_this$ = -4						; size = 4
_pGameServerInfo$ = 8					; size = 4
?InsertServerInfo@CServerListControl@@QAE_NPAUtagGameServerInfo@@@Z PROC ; CServerListControl::InsertServerInfo, COMDAT
; _this$ = ecx

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 	//变量定义
; 164  : 	LVFINDINFO FindInfo;
; 165  : 	ZeroMemory(&FindInfo,sizeof(FindInfo));

  0000c	6a 18		 push	 24			; 00000018H
  0000e	6a 00		 push	 0
  00010	8d 45 e4	 lea	 eax, DWORD PTR _FindInfo$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 166  : 
; 167  : 	//设置变量
; 168  : 	FindInfo.flags=LVFI_PARAM;

  0001c	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR _FindInfo$[ebp], 1

; 169  : 	FindInfo.lParam=(LPARAM)pGameServerInfo;

  00023	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR _FindInfo$[ebp+8], eax

; 170  : 
; 171  : 	//存在判断
; 172  : 	INT nInsertItem=FindItem(&FindInfo);

  00029	6a ff		 push	 -1
  0002b	8d 45 e4	 lea	 eax, DWORD PTR _FindInfo$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FindItem@CListCtrl@@QBEHPAUtagLVFINDINFOA@@H@Z ; CListCtrl::FindItem
  00037	89 45 e0	 mov	 DWORD PTR _nInsertItem$[ebp], eax

; 173  : 	if (nInsertItem!=LB_ERR) return true;

  0003a	83 7d e0 ff	 cmp	 DWORD PTR _nInsertItem$[ebp], -1
  0003e	74 07		 je	 SHORT $LN5@InsertServ
  00040	b0 01		 mov	 al, 1
  00042	e9 b1 00 00 00	 jmp	 $LN1@InsertServ
$LN5@InsertServ:

; 174  : 
; 175  : 	//插入列表
; 176  : 	for (WORD i=0;i<m_ListHeaderCtrl.GetItemCount();i++)

  00047	33 c0		 xor	 eax, eax
  00049	66 89 45 dc	 mov	 WORD PTR _i$3[ebp], ax
  0004d	eb 0c		 jmp	 SHORT $LN4@InsertServ
$LN2@InsertServ:
  0004f	66 8b 45 dc	 mov	 ax, WORD PTR _i$3[ebp]
  00053	66 83 c0 01	 add	 ax, 1
  00057	66 89 45 dc	 mov	 WORD PTR _i$3[ebp], ax
$LN4@InsertServ:
  0005b	0f b7 75 dc	 movzx	 esi, WORD PTR _i$3[ebp]
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00068	e8 00 00 00 00	 call	 ?GetItemCount@CHeaderCtrl@@QBEHXZ ; CHeaderCtrl::GetItemCount
  0006d	3b f0		 cmp	 esi, eax
  0006f	0f 8d 81 00 00
	00		 jge	 $LN3@InsertServ

; 177  : 	{
; 178  : 		if (i==0)

  00075	0f b7 45 dc	 movzx	 eax, WORD PTR _i$3[ebp]
  00079	85 c0		 test	 eax, eax
  0007b	75 47		 jne	 SHORT $LN6@InsertServ

; 179  : 		{
; 180  : 			//插入首项
; 181  : 			INT nIndex=GetInsertIndex(pGameServerInfo);

  0007d	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00080	50		 push	 eax
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?GetInsertIndex@CServerListControl@@AAEGPAUtagGameServerInfo@@@Z ; CServerListControl::GetInsertIndex
  00089	0f b7 c8	 movzx	 ecx, ax
  0008c	89 4d d8	 mov	 DWORD PTR _nIndex$2[ebp], ecx

; 182  : 			LPCTSTR pszDescribe=GetDescribeString(pGameServerInfo,i);

  0008f	0f b7 45 dc	 movzx	 eax, WORD PTR _i$3[ebp]
  00093	50		 push	 eax
  00094	8b 4d 08	 mov	 ecx, DWORD PTR _pGameServerInfo$[ebp]
  00097	51		 push	 ecx
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z ; CServerListControl::GetDescribeString
  000a0	89 45 d4	 mov	 DWORD PTR _pszDescribe$1[ebp], eax

; 183  : 			nInsertItem=InsertItem(LVIF_TEXT|LVIF_PARAM,nIndex,pszDescribe,0,0,0,(LPARAM)pGameServerInfo);

  000a3	8b 45 08	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  000a6	50		 push	 eax
  000a7	6a 00		 push	 0
  000a9	6a 00		 push	 0
  000ab	6a 00		 push	 0
  000ad	8b 4d d4	 mov	 ecx, DWORD PTR _pszDescribe$1[ebp]
  000b0	51		 push	 ecx
  000b1	8b 55 d8	 mov	 edx, DWORD PTR _nIndex$2[ebp]
  000b4	52		 push	 edx
  000b5	6a 05		 push	 5
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?InsertItem@CListCtrl@@QAEHIHPBDIIHJ@Z ; CListCtrl::InsertItem
  000bf	89 45 e0	 mov	 DWORD PTR _nInsertItem$[ebp], eax

; 184  : 		}
; 185  : 		else

  000c2	eb 2d		 jmp	 SHORT $LN7@InsertServ
$LN6@InsertServ:

; 186  : 		{
; 187  : 			//字符子项
; 188  : 			SetItem(nInsertItem,i,LVIF_TEXT,GetDescribeString(pGameServerInfo,i),0,0,0,0);

  000c4	6a 00		 push	 0
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	0f b7 45 dc	 movzx	 eax, WORD PTR _i$3[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _pGameServerInfo$[ebp]
  000d4	51		 push	 ecx
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?GetDescribeString@CServerListControl@@AAEPBDPAUtagGameServerInfo@@G@Z ; CServerListControl::GetDescribeString
  000dd	50		 push	 eax
  000de	6a 01		 push	 1
  000e0	0f b7 55 dc	 movzx	 edx, WORD PTR _i$3[ebp]
  000e4	52		 push	 edx
  000e5	8b 45 e0	 mov	 eax, DWORD PTR _nInsertItem$[ebp]
  000e8	50		 push	 eax
  000e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?SetItem@CListCtrl@@QAEHHHIPBDHIIJ@Z ; CListCtrl::SetItem
$LN7@InsertServ:

; 189  : 		}
; 190  : 	}

  000f1	e9 59 ff ff ff	 jmp	 $LN2@InsertServ
$LN3@InsertServ:

; 191  : 
; 192  : 	return true;

  000f6	b0 01		 mov	 al, 1
$LN1@InsertServ:

; 193  : }

  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
?InsertServerInfo@CServerListControl@@QAE_NPAUtagGameServerInfo@@@Z ENDP ; CServerListControl::InsertServerInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
tv92 = -76						; size = 4
tv85 = -76						; size = 4
tv77 = -76						; size = 4
_pGameServerInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_lItemParam$ = 8					; size = 4
_uItemStatus$ = 12					; size = 4
_ListItemColor$ = 16					; size = 4
?GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z PROC ; CServerListControl::GetListItemColor, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 123  : 	//变量定义
; 124  : 	ASSERT(lItemParam!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _lItemParam$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@GetListIte
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MJCBAFBE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN6@GetListIte
  00029	cc		 int	 3
$LN6@GetListIte:

; 125  : 	tagGameServerInfo * pGameServerInfo=(tagGameServerInfo *)lItemParam;

  0002a	8b 45 08	 mov	 eax, DWORD PTR _lItemParam$[ebp]
  0002d	89 45 f8	 mov	 DWORD PTR _pGameServerInfo$[ebp], eax

; 126  : 
; 127  : 	//没有安装
; 128  : 	if (pGameServerInfo->dwNativeVersion==0L)

  00030	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  00033	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00037	75 2f		 jne	 SHORT $LN2@GetListIte

; 129  : 	{
; 130  : 		//设置颜色
; 131  : 		ListItemColor.rcTextColor=RGB(125,125,125);

  00039	8b 45 10	 mov	 eax, DWORD PTR _ListItemColor$[ebp]
  0003c	c7 00 7d 7d 7d
	00		 mov	 DWORD PTR [eax], 8224125 ; 007d7d7dH

; 132  : 		ListItemColor.rcBackColor=(uItemStatus&ODS_SELECTED)?RGB(50,50,50):CR_NORMAL_BK;

  00042	8b 45 0c	 mov	 eax, DWORD PTR _uItemStatus$[ebp]
  00045	83 e0 01	 and	 eax, 1
  00048	74 09		 je	 SHORT $LN7@GetListIte
  0004a	c7 45 b4 32 32
	32 00		 mov	 DWORD PTR tv77[ebp], 3289650 ; 00323232H
  00051	eb 07		 jmp	 SHORT $LN8@GetListIte
$LN7@GetListIte:
  00053	c7 45 b4 ff ff
	ff 00		 mov	 DWORD PTR tv77[ebp], 16777215 ; 00ffffffH
$LN8@GetListIte:
  0005a	8b 4d 10	 mov	 ecx, DWORD PTR _ListItemColor$[ebp]
  0005d	8b 55 b4	 mov	 edx, DWORD PTR tv77[ebp]
  00060	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 133  : 
; 134  : 		return;

  00063	e9 89 00 00 00	 jmp	 $LN1@GetListIte
$LN2@GetListIte:

; 135  : 	}
; 136  : 
; 137  : 	//存在更新
; 138  : 	if (pGameServerInfo->dwNativeVersion!=pGameServerInfo->dwServerVersion)

  00068	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo$[ebp]
  0006e	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00071	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  00074	74 2c		 je	 SHORT $LN3@GetListIte

; 139  : 	{
; 140  : 		//设置颜色
; 141  : 		ListItemColor.rcTextColor=RGB(128,0,0);

  00076	8b 45 10	 mov	 eax, DWORD PTR _ListItemColor$[ebp]
  00079	c7 00 80 00 00
	00		 mov	 DWORD PTR [eax], 128	; 00000080H

; 142  : 		ListItemColor.rcBackColor=(uItemStatus&ODS_SELECTED)?RGB(230,230,0):CR_NORMAL_BK;

  0007f	8b 45 0c	 mov	 eax, DWORD PTR _uItemStatus$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 09		 je	 SHORT $LN9@GetListIte
  00087	c7 45 b4 e6 e6
	00 00		 mov	 DWORD PTR tv85[ebp], 59110 ; 0000e6e6H
  0008e	eb 07		 jmp	 SHORT $LN10@GetListIte
$LN9@GetListIte:
  00090	c7 45 b4 ff ff
	ff 00		 mov	 DWORD PTR tv85[ebp], 16777215 ; 00ffffffH
$LN10@GetListIte:
  00097	8b 4d 10	 mov	 ecx, DWORD PTR _ListItemColor$[ebp]
  0009a	8b 55 b4	 mov	 edx, DWORD PTR tv85[ebp]
  0009d	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 143  : 
; 144  : 		return;

  000a0	eb 4f		 jmp	 SHORT $LN1@GetListIte
$LN3@GetListIte:

; 145  : 	}
; 146  : 
; 147  : 	//版本一致
; 148  : 	if (pGameServerInfo->dwNativeVersion==pGameServerInfo->dwServerVersion)

  000a2	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo$[ebp]
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo$[ebp]
  000a8	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  000ab	3b 51 10	 cmp	 edx, DWORD PTR [ecx+16]
  000ae	75 41		 jne	 SHORT $LN1@GetListIte

; 149  : 	{
; 150  : 		//设置颜色
; 151  : 		ListItemColor.rcBackColor=(uItemStatus&ODS_SELECTED)?RGB(0,0,128):CR_NORMAL_BK;

  000b0	8b 45 0c	 mov	 eax, DWORD PTR _uItemStatus$[ebp]
  000b3	83 e0 01	 and	 eax, 1
  000b6	74 09		 je	 SHORT $LN11@GetListIte
  000b8	c7 45 b4 00 00
	80 00		 mov	 DWORD PTR tv92[ebp], 8388608 ; 00800000H
  000bf	eb 07		 jmp	 SHORT $LN12@GetListIte
$LN11@GetListIte:
  000c1	c7 45 b4 ff ff
	ff 00		 mov	 DWORD PTR tv92[ebp], 16777215 ; 00ffffffH
$LN12@GetListIte:
  000c8	8b 4d 10	 mov	 ecx, DWORD PTR _ListItemColor$[ebp]
  000cb	8b 55 b4	 mov	 edx, DWORD PTR tv92[ebp]
  000ce	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 152  : 		ListItemColor.rcTextColor=(uItemStatus&ODS_SELECTED)?RGB(255,255,255):RGB(0,0,0);

  000d1	8b 45 0c	 mov	 eax, DWORD PTR _uItemStatus$[ebp]
  000d4	83 e0 01	 and	 eax, 1
  000d7	74 09		 je	 SHORT $LN13@GetListIte
  000d9	c7 45 b4 ff ff
	ff 00		 mov	 DWORD PTR tv128[ebp], 16777215 ; 00ffffffH
  000e0	eb 07		 jmp	 SHORT $LN14@GetListIte
$LN13@GetListIte:
  000e2	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN14@GetListIte:
  000e9	8b 4d 10	 mov	 ecx, DWORD PTR _ListItemColor$[ebp]
  000ec	8b 55 b4	 mov	 edx, DWORD PTR tv128[ebp]
  000ef	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@GetListIte:

; 153  : 
; 154  : 		return;
; 155  : 	}
; 156  : 
; 157  : 	return;
; 158  : }

  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 0c 00	 ret	 12			; 0000000cH
?GetListItemColor@CServerListControl@@UAEXJIAAUtagListItemColor@@@Z ENDP ; CServerListControl::GetListItemColor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?SortListItemData@CServerListControl@@UAEHJJG@Z
_TEXT	SEGMENT
tv169 = -92						; size = 4
tv163 = -92						; size = 4
tv157 = -92						; size = 4
tv145 = -92						; size = 4
tv139 = -92						; size = 4
tv133 = -92						; size = 4
tv95 = -92						; size = 4
tv79 = -92						; size = 4
tv77 = -92						; size = 4
tv70 = -92						; size = 4
tv66 = -92						; size = 4
_wKindID2$1 = -24					; size = 2
_wKindID1$2 = -20					; size = 2
_bInstall2$ = -14					; size = 1
_bInstall1$ = -13					; size = 1
_pGameServerInfo2$ = -12				; size = 4
_pGameServerInfo1$ = -8					; size = 4
_this$ = -4						; size = 4
_lParam1$ = 8						; size = 4
_lParam2$ = 12						; size = 4
_wColumnIndex$ = 16					; size = 2
?SortListItemData@CServerListControl@@UAEHJJG@Z PROC	; CServerListControl::SortListItemData, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 	//变量定义
; 44   : 	tagGameServerInfo * pGameServerInfo1=(tagGameServerInfo *)lParam1;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _lParam1$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pGameServerInfo1$[ebp], eax

; 45   : 	tagGameServerInfo * pGameServerInfo2=(tagGameServerInfo *)lParam2;

  00012	8b 45 0c	 mov	 eax, DWORD PTR _lParam2$[ebp]
  00015	89 45 f4	 mov	 DWORD PTR _pGameServerInfo2$[ebp], eax

; 46   : 
; 47   : 	//安装排序
; 48   : 	bool bInstall1=(pGameServerInfo1->dwNativeVersion!=0L);

  00018	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  0001b	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0001f	74 09		 je	 SHORT $LN21@SortListIt
  00021	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN22@SortListIt
$LN21@SortListIt:
  0002a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN22@SortListIt:
  00031	8a 4d a4	 mov	 cl, BYTE PTR tv66[ebp]
  00034	88 4d f3	 mov	 BYTE PTR _bInstall1$[ebp], cl

; 49   : 	bool bInstall2=(pGameServerInfo2->dwNativeVersion!=0L);

  00037	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  0003a	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0003e	74 09		 je	 SHORT $LN23@SortListIt
  00040	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv70[ebp], 1
  00047	eb 07		 jmp	 SHORT $LN24@SortListIt
$LN23@SortListIt:
  00049	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN24@SortListIt:
  00050	8a 4d a4	 mov	 cl, BYTE PTR tv70[ebp]
  00053	88 4d f2	 mov	 BYTE PTR _bInstall2$[ebp], cl

; 50   : 	if (bInstall1!=bInstall2) return (bInstall1==true)?1:-1;

  00056	0f b6 45 f3	 movzx	 eax, BYTE PTR _bInstall1$[ebp]
  0005a	0f b6 4d f2	 movzx	 ecx, BYTE PTR _bInstall2$[ebp]
  0005e	3b c1		 cmp	 eax, ecx
  00060	74 21		 je	 SHORT $LN4@SortListIt
  00062	0f b6 45 f3	 movzx	 eax, BYTE PTR _bInstall1$[ebp]
  00066	83 f8 01	 cmp	 eax, 1
  00069	75 09		 jne	 SHORT $LN25@SortListIt
  0006b	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  00072	eb 07		 jmp	 SHORT $LN26@SortListIt
$LN25@SortListIt:
  00074	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv77[ebp], -1
$LN26@SortListIt:
  0007b	8b 45 a4	 mov	 eax, DWORD PTR tv77[ebp]
  0007e	e9 1f 02 00 00	 jmp	 $LN1@SortListIt
$LN4@SortListIt:

; 51   : 
; 52   : 	//子项排序
; 53   : 	switch (wColumnIndex)

  00083	0f b7 45 10	 movzx	 eax, WORD PTR _wColumnIndex$[ebp]
  00087	89 45 a4	 mov	 DWORD PTR tv79[ebp], eax
  0008a	83 7d a4 0c	 cmp	 DWORD PTR tv79[ebp], 12	; 0000000cH
  0008e	0f 87 0c 02 00
	00		 ja	 $LN2@SortListIt
  00094	8b 4d a4	 mov	 ecx, DWORD PTR tv79[ebp]
  00097	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN41@SortListIt[ecx*4]
$LN5@SortListIt:

; 54   : 	{
; 55   : 	case 0:		//房间名字
; 56   : 		{
; 57   : 			return lstrcmp(pGameServerInfo1->szServerName,pGameServerInfo2->szServerName);

  0009e	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  000a1	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  000a6	50		 push	 eax
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo1$[ebp]
  000aa	81 c1 c0 00 00
	00		 add	 ecx, 192		; 000000c0H
  000b0	51		 push	 ecx
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  000b7	e9 e6 01 00 00	 jmp	 $LN1@SortListIt
$LN6@SortListIt:

; 58   : 		}
; 59   : 	case 1:		//游戏名字
; 60   : 		{
; 61   : 			return lstrcmp(pGameServerInfo1->szGameName,pGameServerInfo2->szGameName);

  000bc	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  000bf	83 c0 18	 add	 eax, 24			; 00000018H
  000c2	50		 push	 eax
  000c3	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo1$[ebp]
  000c6	83 c1 18	 add	 ecx, 24			; 00000018H
  000c9	51		 push	 ecx
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  000d0	e9 cd 01 00 00	 jmp	 $LN1@SortListIt
$LN7@SortListIt:

; 62   : 		}
; 63   : 	case 2:		//房间类型
; 64   : 		{
; 65   : 			return (pGameServerInfo1->wServerType>pGameServerInfo2->wServerType)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  000d5	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  000d8	0f b7 88 bc 00
	00 00		 movzx	 ecx, WORD PTR [eax+188]
  000df	8b 55 f4	 mov	 edx, DWORD PTR _pGameServerInfo2$[ebp]
  000e2	0f b7 82 bc 00
	00 00		 movzx	 eax, WORD PTR [edx+188]
  000e9	3b c8		 cmp	 ecx, eax
  000eb	7e 09		 jle	 SHORT $LN27@SortListIt
  000ed	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv95[ebp], 1
  000f4	eb 07		 jmp	 SHORT $LN28@SortListIt
$LN27@SortListIt:
  000f6	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv95[ebp], -1
$LN28@SortListIt:
  000fd	8b 45 a4	 mov	 eax, DWORD PTR tv95[ebp]
  00100	e9 9d 01 00 00	 jmp	 $LN1@SortListIt
$LN8@SortListIt:

; 66   : 		}
; 67   : 	case 3:		//桌子数目
; 68   : 		{
; 69   : 			return (pGameServerInfo1->wTableCount>pGameServerInfo2->wTableCount)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  00105	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  00108	0f b7 88 b6 00
	00 00		 movzx	 ecx, WORD PTR [eax+182]
  0010f	8b 55 f4	 mov	 edx, DWORD PTR _pGameServerInfo2$[ebp]
  00112	0f b7 82 b6 00
	00 00		 movzx	 eax, WORD PTR [edx+182]
  00119	3b c8		 cmp	 ecx, eax
  0011b	7e 09		 jle	 SHORT $LN29@SortListIt
  0011d	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  00124	eb 07		 jmp	 SHORT $LN30@SortListIt
$LN29@SortListIt:
  00126	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv133[ebp], -1
$LN30@SortListIt:
  0012d	8b 45 a4	 mov	 eax, DWORD PTR tv133[ebp]
  00130	e9 6d 01 00 00	 jmp	 $LN1@SortListIt
$LN9@SortListIt:

; 70   : 		}
; 71   : 	case 4:		//监听端口
; 72   : 		{
; 73   : 			return (pGameServerInfo1->wServerPort>pGameServerInfo2->wServerPort)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  00135	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  00138	0f b7 88 b8 00
	00 00		 movzx	 ecx, WORD PTR [eax+184]
  0013f	8b 55 f4	 mov	 edx, DWORD PTR _pGameServerInfo2$[ebp]
  00142	0f b7 82 b8 00
	00 00		 movzx	 eax, WORD PTR [edx+184]
  00149	3b c8		 cmp	 ecx, eax
  0014b	7e 09		 jle	 SHORT $LN31@SortListIt
  0014d	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  00154	eb 07		 jmp	 SHORT $LN32@SortListIt
$LN31@SortListIt:
  00156	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv139[ebp], -1
$LN32@SortListIt:
  0015d	8b 45 a4	 mov	 eax, DWORD PTR tv139[ebp]
  00160	e9 3d 01 00 00	 jmp	 $LN1@SortListIt
$LN10@SortListIt:

; 74   : 		}
; 75   : 	case 5:		//房间标识
; 76   : 		{
; 77   : 			return (pGameServerInfo1->wServerID>pGameServerInfo2->wServerID)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  00165	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  00168	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0016c	8b 55 f4	 mov	 edx, DWORD PTR _pGameServerInfo2$[ebp]
  0016f	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00173	3b c8		 cmp	 ecx, eax
  00175	7e 09		 jle	 SHORT $LN33@SortListIt
  00177	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv145[ebp], 1
  0017e	eb 07		 jmp	 SHORT $LN34@SortListIt
$LN33@SortListIt:
  00180	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv145[ebp], -1
$LN34@SortListIt:
  00187	8b 45 a4	 mov	 eax, DWORD PTR tv145[ebp]
  0018a	e9 13 01 00 00	 jmp	 $LN1@SortListIt
$LN11@SortListIt:

; 78   : 		}
; 79   : 	case 6:		//类型标识
; 80   : 		{
; 81   : 			//房间标识
; 82   : 			WORD wKindID1=pGameServerInfo1->wKindID;

  0018f	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  00192	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  00196	66 89 4d ec	 mov	 WORD PTR _wKindID1$2[ebp], cx

; 83   : 			if (wKindID1==0) wKindID1=pGameServerInfo1->wGameID;

  0019a	0f b7 45 ec	 movzx	 eax, WORD PTR _wKindID1$2[ebp]
  0019e	85 c0		 test	 eax, eax
  001a0	75 0a		 jne	 SHORT $LN12@SortListIt
  001a2	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  001a5	66 8b 08	 mov	 cx, WORD PTR [eax]
  001a8	66 89 4d ec	 mov	 WORD PTR _wKindID1$2[ebp], cx
$LN12@SortListIt:

; 84   : 
; 85   : 			//房间标识
; 86   : 			WORD wKindID2=pGameServerInfo2->wKindID;

  001ac	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  001af	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  001b3	66 89 4d e8	 mov	 WORD PTR _wKindID2$1[ebp], cx

; 87   : 			if (wKindID2==0) wKindID2=pGameServerInfo2->wGameID;

  001b7	0f b7 45 e8	 movzx	 eax, WORD PTR _wKindID2$1[ebp]
  001bb	85 c0		 test	 eax, eax
  001bd	75 0a		 jne	 SHORT $LN13@SortListIt
  001bf	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  001c2	66 8b 08	 mov	 cx, WORD PTR [eax]
  001c5	66 89 4d e8	 mov	 WORD PTR _wKindID2$1[ebp], cx
$LN13@SortListIt:

; 88   : 
; 89   : 			return (wKindID1>wKindID2)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  001c9	0f b7 45 ec	 movzx	 eax, WORD PTR _wKindID1$2[ebp]
  001cd	0f b7 4d e8	 movzx	 ecx, WORD PTR _wKindID2$1[ebp]
  001d1	3b c1		 cmp	 eax, ecx
  001d3	7e 09		 jle	 SHORT $LN35@SortListIt
  001d5	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv157[ebp], 1
  001dc	eb 07		 jmp	 SHORT $LN36@SortListIt
$LN35@SortListIt:
  001de	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv157[ebp], -1
$LN36@SortListIt:
  001e5	8b 45 a4	 mov	 eax, DWORD PTR tv157[ebp]
  001e8	e9 b5 00 00 00	 jmp	 $LN1@SortListIt
$LN14@SortListIt:

; 90   : 		}
; 91   : 	case 7:		//节点标识
; 92   : 		{
; 93   : 			return (pGameServerInfo1->wNodeID>pGameServerInfo2->wNodeID)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  001ed	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  001f0	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  001f4	8b 55 f4	 mov	 edx, DWORD PTR _pGameServerInfo2$[ebp]
  001f7	0f b7 42 06	 movzx	 eax, WORD PTR [edx+6]
  001fb	3b c8		 cmp	 ecx, eax
  001fd	7e 09		 jle	 SHORT $LN37@SortListIt
  001ff	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv163[ebp], 1
  00206	eb 07		 jmp	 SHORT $LN38@SortListIt
$LN37@SortListIt:
  00208	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv163[ebp], -1
$LN38@SortListIt:
  0020f	8b 45 a4	 mov	 eax, DWORD PTR tv163[ebp]
  00212	e9 8b 00 00 00	 jmp	 $LN1@SortListIt
$LN15@SortListIt:

; 94   : 		}
; 95   : 	case 8:		//排序标识
; 96   : 		{
; 97   : 			return (pGameServerInfo1->wSortID>pGameServerInfo2->wSortID)?SORT_POSITION_AFTER:SORT_POSITION_FRONT;

  00217	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerInfo1$[ebp]
  0021a	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0021e	8b 55 f4	 mov	 edx, DWORD PTR _pGameServerInfo2$[ebp]
  00221	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00225	3b c8		 cmp	 ecx, eax
  00227	7e 09		 jle	 SHORT $LN39@SortListIt
  00229	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv169[ebp], 1
  00230	eb 07		 jmp	 SHORT $LN40@SortListIt
$LN39@SortListIt:
  00232	c7 45 a4 ff ff
	ff ff		 mov	 DWORD PTR tv169[ebp], -1
$LN40@SortListIt:
  00239	8b 45 a4	 mov	 eax, DWORD PTR tv169[ebp]
  0023c	eb 64		 jmp	 SHORT $LN1@SortListIt
$LN16@SortListIt:

; 98   : 		}
; 99   : 	case 9:		//数据库名
; 100  : 		{
; 101  : 			return lstrcmp(pGameServerInfo1->szDataBaseName,pGameServerInfo2->szDataBaseName);

  0023e	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  00241	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00246	50		 push	 eax
  00247	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo1$[ebp]
  0024a	81 c1 0c 01 00
	00		 add	 ecx, 268		; 0000010cH
  00250	51		 push	 ecx
  00251	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00257	eb 49		 jmp	 SHORT $LN1@SortListIt
$LN17@SortListIt:

; 102  : 		}
; 103  : 	case 10:	//数据库地址
; 104  : 		{
; 105  : 			return lstrcmp(pGameServerInfo1->szDataBaseAddr,pGameServerInfo2->szDataBaseAddr);

  00259	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  0025c	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  00261	50		 push	 eax
  00262	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo1$[ebp]
  00265	81 c1 2c 01 00
	00		 add	 ecx, 300		; 0000012cH
  0026b	51		 push	 ecx
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00272	eb 2e		 jmp	 SHORT $LN1@SortListIt
$LN18@SortListIt:

; 106  : 		}
; 107  : 	case 11:	//服务器名
; 108  : 		{
; 109  : 			return lstrcmp(pGameServerInfo1->szServerDLLName,pGameServerInfo2->szServerDLLName);

  00274	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  00277	83 c0 38	 add	 eax, 56			; 00000038H
  0027a	50		 push	 eax
  0027b	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo1$[ebp]
  0027e	83 c1 38	 add	 ecx, 56			; 00000038H
  00281	51		 push	 ecx
  00282	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  00288	eb 18		 jmp	 SHORT $LN1@SortListIt
$LN19@SortListIt:

; 110  : 		}
; 111  : 	case 12:	//客户端名
; 112  : 		{
; 113  : 			return lstrcmp(pGameServerInfo1->szClientEXEName,pGameServerInfo2->szClientEXEName);

  0028a	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerInfo2$[ebp]
  0028d	83 c0 58	 add	 eax, 88			; 00000058H
  00290	50		 push	 eax
  00291	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerInfo1$[ebp]
  00294	83 c1 58	 add	 ecx, 88			; 00000058H
  00297	51		 push	 ecx
  00298	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcmpA@8
  0029e	eb 02		 jmp	 SHORT $LN1@SortListIt
$LN2@SortListIt:

; 114  : 		}
; 115  : 	}
; 116  : 
; 117  : 	return 0;

  002a0	33 c0		 xor	 eax, eax
$LN1@SortListIt:

; 118  : }

  002a2	5f		 pop	 edi
  002a3	5e		 pop	 esi
  002a4	5b		 pop	 ebx
  002a5	8b e5		 mov	 esp, ebp
  002a7	5d		 pop	 ebp
  002a8	c2 0c 00	 ret	 12			; 0000000cH
  002ab	90		 npad	 1
$LN41@SortListIt:
  002ac	00 00 00 00	 DD	 $LN5@SortListIt
  002b0	00 00 00 00	 DD	 $LN6@SortListIt
  002b4	00 00 00 00	 DD	 $LN7@SortListIt
  002b8	00 00 00 00	 DD	 $LN8@SortListIt
  002bc	00 00 00 00	 DD	 $LN9@SortListIt
  002c0	00 00 00 00	 DD	 $LN10@SortListIt
  002c4	00 00 00 00	 DD	 $LN11@SortListIt
  002c8	00 00 00 00	 DD	 $LN14@SortListIt
  002cc	00 00 00 00	 DD	 $LN15@SortListIt
  002d0	00 00 00 00	 DD	 $LN16@SortListIt
  002d4	00 00 00 00	 DD	 $LN17@SortListIt
  002d8	00 00 00 00	 DD	 $LN18@SortListIt
  002dc	00 00 00 00	 DD	 $LN19@SortListIt
?SortListItemData@CServerListControl@@UAEHJJG@Z ENDP	; CServerListControl::SortListItemData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?InitListControl@CServerListControl@@UAEXXZ
_TEXT	SEGMENT
tv251 = -76						; size = 4
tv239 = -76						; size = 4
tv227 = -76						; size = 4
tv215 = -76						; size = 4
tv203 = -76						; size = 4
tv191 = -76						; size = 4
tv179 = -76						; size = 4
tv167 = -76						; size = 4
tv155 = -76						; size = 4
tv143 = -76						; size = 4
tv131 = -76						; size = 4
tv87 = -76						; size = 4
tv75 = -76						; size = 4
_nColIndex$ = -8					; size = 4
_this$ = -4						; size = 4
?InitListControl@CServerListControl@@UAEXXZ PROC	; CServerListControl::InitListControl, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	//变量定义
; 20   : 	INT nColIndex=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nColIndex$[ebp], 0

; 21   : 
; 22   : 	//配置列表
; 23   : 	InsertColumn(nColIndex++,TEXT("房间名字"),LVCFMT_LEFT,90);

  00013	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  00016	89 45 b4	 mov	 DWORD PTR tv75[ebp], eax
  00019	6a ff		 push	 -1
  0001b	6a 5a		 push	 90			; 0000005aH
  0001d	6a 00		 push	 0
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_08PAFDLMMP@?$LH?$LP?$LM?d?C?$PL?W?V@
  00024	8b 4d b4	 mov	 ecx, DWORD PTR tv75[ebp]
  00027	51		 push	 ecx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  00030	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  00033	83 c2 01	 add	 edx, 1
  00036	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 24   : 	InsertColumn(nColIndex++,TEXT("模块名字"),LVCFMT_CENTER,80);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  0003c	89 45 b4	 mov	 DWORD PTR tv87[ebp], eax
  0003f	6a ff		 push	 -1
  00041	6a 50		 push	 80			; 00000050H
  00043	6a 02		 push	 2
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_08JPBPGOPI@?D?$KD?$LP?i?C?$PL?W?V@
  0004a	8b 4d b4	 mov	 ecx, DWORD PTR tv87[ebp]
  0004d	51		 push	 ecx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  00056	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  00059	83 c2 01	 add	 edx, 1
  0005c	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 25   : 	InsertColumn(nColIndex++,TEXT("房间类型"),LVCFMT_CENTER,60);

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  00062	89 45 b4	 mov	 DWORD PTR tv131[ebp], eax
  00065	6a ff		 push	 -1
  00067	6a 3c		 push	 60			; 0000003cH
  00069	6a 02		 push	 2
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_08JMJCMLJO@?$LH?$LP?$LM?d?$MA?$OA?P?M@
  00070	8b 4d b4	 mov	 ecx, DWORD PTR tv131[ebp]
  00073	51		 push	 ecx
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  0007c	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  0007f	83 c2 01	 add	 edx, 1
  00082	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 26   : 	InsertColumn(nColIndex++,TEXT("桌子数目"),LVCFMT_CENTER,60);

  00085	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  00088	89 45 b4	 mov	 DWORD PTR tv143[ebp], eax
  0008b	6a ff		 push	 -1
  0008d	6a 3c		 push	 60			; 0000003cH
  0008f	6a 02		 push	 2
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_08MLKKGBDH@?W?$MA?W?S?J?$PN?D?$LP@
  00096	8b 4d b4	 mov	 ecx, DWORD PTR tv143[ebp]
  00099	51		 push	 ecx
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  000a2	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  000a5	83 c2 01	 add	 edx, 1
  000a8	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 27   : 	InsertColumn(nColIndex++,TEXT("监听端口"),LVCFMT_CENTER,60);

  000ab	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  000ae	89 45 b4	 mov	 DWORD PTR tv155[ebp], eax
  000b1	6a ff		 push	 -1
  000b3	6a 3c		 push	 60			; 0000003cH
  000b5	6a 02		 push	 2
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_08BNNJACIK@?$LM?$OA?L?$PN?$LG?K?$LP?Z@
  000bc	8b 4d b4	 mov	 ecx, DWORD PTR tv155[ebp]
  000bf	51		 push	 ecx
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  000c8	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  000cb	83 c2 01	 add	 edx, 1
  000ce	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 28   : 	InsertColumn(nColIndex++,TEXT("房间标识"),LVCFMT_CENTER,60);

  000d1	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  000d4	89 45 b4	 mov	 DWORD PTR tv167[ebp], eax
  000d7	6a ff		 push	 -1
  000d9	6a 3c		 push	 60			; 0000003cH
  000db	6a 02		 push	 2
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_08OKOHGEBO@?$LH?$LP?$LM?d?$LB?j?J?$LG@
  000e2	8b 4d b4	 mov	 ecx, DWORD PTR tv167[ebp]
  000e5	51		 push	 ecx
  000e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  000ee	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  000f1	83 c2 01	 add	 edx, 1
  000f4	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 29   : 	InsertColumn(nColIndex++,TEXT("类型标识"),LVCFMT_CENTER,60);

  000f7	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  000fa	89 45 b4	 mov	 DWORD PTR tv179[ebp], eax
  000fd	6a ff		 push	 -1
  000ff	6a 3c		 push	 60			; 0000003cH
  00101	6a 02		 push	 2
  00103	68 00 00 00 00	 push	 OFFSET ??_C@_08JOJGFJAH@?$MA?$OA?P?M?$LB?j?J?$LG@
  00108	8b 4d b4	 mov	 ecx, DWORD PTR tv179[ebp]
  0010b	51		 push	 ecx
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  00114	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  00117	83 c2 01	 add	 edx, 1
  0011a	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 30   : 	InsertColumn(nColIndex++,TEXT("节点标识"),LVCFMT_CENTER,60);

  0011d	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  00120	89 45 b4	 mov	 DWORD PTR tv191[ebp], eax
  00123	6a ff		 push	 -1
  00125	6a 3c		 push	 60			; 0000003cH
  00127	6a 02		 push	 2
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_08GPFPDFDE@?$LN?Z?$LF?c?$LB?j?J?$LG@
  0012e	8b 4d b4	 mov	 ecx, DWORD PTR tv191[ebp]
  00131	51		 push	 ecx
  00132	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  0013a	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  0013d	83 c2 01	 add	 edx, 1
  00140	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 31   : 	InsertColumn(nColIndex++,TEXT("排序标识"),LVCFMT_CENTER,60);

  00143	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  00146	89 45 b4	 mov	 DWORD PTR tv203[ebp], eax
  00149	6a ff		 push	 -1
  0014b	6a 3c		 push	 60			; 0000003cH
  0014d	6a 02		 push	 2
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_08JALLMFAC@?E?E?P?r?$LB?j?J?$LG@
  00154	8b 4d b4	 mov	 ecx, DWORD PTR tv203[ebp]
  00157	51		 push	 ecx
  00158	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015b	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  00160	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  00163	83 c2 01	 add	 edx, 1
  00166	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 32   : 	InsertColumn(nColIndex++,TEXT("数据库名"),LVCFMT_LEFT,100);

  00169	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  0016c	89 45 b4	 mov	 DWORD PTR tv215[ebp], eax
  0016f	6a ff		 push	 -1
  00171	6a 64		 push	 100			; 00000064H
  00173	6a 00		 push	 0
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_08ENLFOAJ@?J?$PN?$LO?$NN?$LP?b?C?$PL@
  0017a	8b 4d b4	 mov	 ecx, DWORD PTR tv215[ebp]
  0017d	51		 push	 ecx
  0017e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00181	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  00186	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  00189	83 c2 01	 add	 edx, 1
  0018c	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 33   : 	InsertColumn(nColIndex++,TEXT("数据库地址"),LVCFMT_LEFT,100);

  0018f	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  00192	89 45 b4	 mov	 DWORD PTR tv227[ebp], eax
  00195	6a ff		 push	 -1
  00197	6a 64		 push	 100			; 00000064H
  00199	6a 00		 push	 0
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LLIEKHCD@?J?$PN?$LO?$NN?$LP?b?$LF?X?V?$LH@
  001a0	8b 4d b4	 mov	 ecx, DWORD PTR tv227[ebp]
  001a3	51		 push	 ecx
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a7	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  001ac	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  001af	83 c2 01	 add	 edx, 1
  001b2	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 34   : 	InsertColumn(nColIndex++,TEXT("服务器名"),LVCFMT_LEFT,140);

  001b5	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  001b8	89 45 b4	 mov	 DWORD PTR tv239[ebp], eax
  001bb	6a ff		 push	 -1
  001bd	68 8c 00 00 00	 push	 140			; 0000008cH
  001c2	6a 00		 push	 0
  001c4	68 00 00 00 00	 push	 OFFSET ??_C@_08IELLENBN@?$LH?$PO?N?q?F?w?C?$PL@
  001c9	8b 4d b4	 mov	 ecx, DWORD PTR tv239[ebp]
  001cc	51		 push	 ecx
  001cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  001d5	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  001d8	83 c2 01	 add	 edx, 1
  001db	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 35   : 	InsertColumn(nColIndex++,TEXT("客户端名"),LVCFMT_LEFT,120);

  001de	8b 45 f8	 mov	 eax, DWORD PTR _nColIndex$[ebp]
  001e1	89 45 b4	 mov	 DWORD PTR tv251[ebp], eax
  001e4	6a ff		 push	 -1
  001e6	6a 78		 push	 120			; 00000078H
  001e8	6a 00		 push	 0
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_08BDIJAICL@?$LP?M?$LL?$KH?$LG?K?C?$PL@
  001ef	8b 4d b4	 mov	 ecx, DWORD PTR tv251[ebp]
  001f2	51		 push	 ecx
  001f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f6	e8 00 00 00 00	 call	 ?InsertColumn@CListCtrl@@QAEHHPBDHHH@Z ; CListCtrl::InsertColumn
  001fb	8b 55 f8	 mov	 edx, DWORD PTR _nColIndex$[ebp]
  001fe	83 c2 01	 add	 edx, 1
  00201	89 55 f8	 mov	 DWORD PTR _nColIndex$[ebp], edx

; 36   : 
; 37   : 	return;
; 38   : }

  00204	5f		 pop	 edi
  00205	5e		 pop	 esi
  00206	5b		 pop	 ebx
  00207	8b e5		 mov	 esp, ebp
  00209	5d		 pop	 ebp
  0020a	c3		 ret	 0
?InitListControl@CServerListControl@@UAEXXZ ENDP	; CServerListControl::InitListControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ??1CServerListControl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CServerListControl@@UAE@XZ PROC			; CServerListControl::~CServerListControl, COMDAT
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerListControl@@6B@

; 14   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CListControl@@UAE@XZ	; CListControl::~CListControl
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CServerListControl@@UAE@XZ ENDP			; CServerListControl::~CServerListControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ??0CServerListControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CServerListControl@@QAE@XZ PROC			; CServerListControl::CServerListControl, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CListControl@@QAE@XZ	; CListControl::CListControl
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerListControl@@6B@

; 9    : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CServerListControl@@QAE@XZ ENDP			; CServerListControl::CServerListControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?__global_array_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_array_delete@@YAXPAXI@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_array_delete@@YAXPAXI@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?__global_array_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_array_delete@@YAXPAX@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_array_delete@@YAXPAX@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?__global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_delete@@YAXPAXI@Z PROC			; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_delete@@YAXPAXI@Z ENDP			; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?__global_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_delete@@YAXPAX@Z PROC				; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_delete@@YAXPAX@Z ENDP				; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\serverlistcontrol.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
