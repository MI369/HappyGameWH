; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\模块管理\DlgMatchWizard.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?OnSize@CDlgMatchItem@@AAEXIHH@Z		; CDlgMatchItem::OnSize
PUBLIC	?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchItem::GetThisMessageMap
PUBLIC	?OnCbnSelchangeComboFromMatch@CDlgMatchSignup1@@IAEXXZ ; CDlgMatchSignup1::OnCbnSelchangeComboFromMatch
PUBLIC	?OnBnClickedAddReward@CDlgMatchReward@@QAEXXZ	; CDlgMatchReward::OnBnClickedAddReward
PUBLIC	?OnBnClickedModifyReward@CDlgMatchReward@@QAEXXZ ; CDlgMatchReward::OnBnClickedModifyReward
PUBLIC	?OnBnClickedDeleteReward@CDlgMatchReward@@QAEXXZ ; CDlgMatchReward::OnBnClickedDeleteReward
PUBLIC	?OnLvnItemchangedListReward@CDlgMatchReward@@IAEXPAUtagNMHDR@@PAJ@Z ; CDlgMatchReward::OnLvnItemchangedListReward
PUBLIC	?OnSize@CDlgMatchWizardItem@@AAEXIHH@Z		; CDlgMatchWizardItem::OnSize
PUBLIC	?GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchWizardItem::GetThisMessageMap
PUBLIC	?OnCbnSelchangeComboMatchType@CDlgMatchWizardStep1@@IAEXXZ ; CDlgMatchWizardStep1::OnCbnSelchangeComboMatchType
PUBLIC	?OnTcnSelchangeMatchOption@CDlgMatchWizardStep1@@IAEXPAUtagNMHDR@@PAJ@Z ; CDlgMatchWizardStep1::OnTcnSelchangeMatchOption
PUBLIC	?OnBnClickedLast@CDlgMatchWizard@@QAEXXZ	; CDlgMatchWizard::OnBnClickedLast
PUBLIC	?OnBnClickedNext@CDlgMatchWizard@@QAEXXZ	; CDlgMatchWizard::OnBnClickedNext
PUBLIC	?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ	; CDlgMatchWizard::OnBnClickedFinish
EXTRN	?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ:PROC ; CDialog::GetThisMessageMap
CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
?_messageEntries@?1??GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 05H ; `CDlgMatchItem::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	01aH
	DD	FLAT:?OnSize@CDlgMatchItem@@AAEXIHH@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgMatchItem::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 05H ; `CDlgMatchWizardItem::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	01aH
	DD	FLAT:?OnSize@CDlgMatchWizardItem@@AAEXIHH@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgMatchWizardItem::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgMatchSignup1::GetThisMessageMap'::`2'::_messageEntries
	DD	01H
	DD	02364H
	DD	02364H
	DD	03aH
	DD	FLAT:?OnCbnSelchangeComboFromMatch@CDlgMatchSignup1@@IAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgMatchSignup1::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgMatchReward::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	02354H
	DD	02354H
	DD	03aH
	DD	FLAT:?OnBnClickedAddReward@CDlgMatchReward@@QAEXXZ
	DD	0111H
	DD	00H
	DD	0236bH
	DD	0236bH
	DD	03aH
	DD	FLAT:?OnBnClickedModifyReward@CDlgMatchReward@@QAEXXZ
	DD	0111H
	DD	00H
	DD	0236cH
	DD	0236cH
	DD	03aH
	DD	FLAT:?OnBnClickedDeleteReward@CDlgMatchReward@@QAEXXZ
	DD	04eH
	DD	0ff9bH
	DD	02353H
	DD	02353H
	DD	03eH
	DD	FLAT:?OnLvnItemchangedListReward@CDlgMatchReward@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgMatchReward::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgMatchWizardStep1::GetThisMessageMap'::`2'::_messageEntries
	DD	01H
	DD	0234bH
	DD	0234bH
	DD	03aH
	DD	FLAT:?OnCbnSelchangeComboMatchType@CDlgMatchWizardStep1@@IAEXXZ
	DD	04eH
	DD	0fdd9H
	DD	02362H
	DD	02362H
	DD	03eH
	DD	FLAT:?OnTcnSelchangeMatchOption@CDlgMatchWizardStep1@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ ; `CDlgMatchWizardStep1::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@?1??GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgMatchWizard::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	0429H
	DD	0429H
	DD	03aH
	DD	FLAT:?OnBnClickedLast@CDlgMatchWizard@@QAEXXZ
	DD	0111H
	DD	00H
	DD	042bH
	DD	042bH
	DD	03aH
	DD	FLAT:?OnBnClickedNext@CDlgMatchWizard@@QAEXXZ
	DD	0111H
	DD	00H
	DD	0434H
	DD	0434H
	DD	03aH
	DD	FLAT:?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgMatchWizard::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAX@Z			; __global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAXI@Z			; __global_delete
PUBLIC	?__global_array_delete@@YAXPAX@Z		; __global_array_delete
PUBLIC	?__global_array_delete@@YAXPAXI@Z		; __global_array_delete
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	__vscprintf_l
PUBLIC	__vscprintf
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	??$AtlMultiply@I@ATL@@YAJPAIII@Z		; ATL::AtlMultiply<unsigned int>
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPAXI@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	_wmemcpy
PUBLIC	??0CTimeSpan@ATL@@QAE@XZ			; ATL::CTimeSpan::CTimeSpan
PUBLIC	??0CTimeSpan@ATL@@QAE@_J@Z			; ATL::CTimeSpan::CTimeSpan
PUBLIC	?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ		; ATL::CTimeSpan::GetTimeSpan
PUBLIC	??0CTime@ATL@@QAE@XZ				; ATL::CTime::CTime
PUBLIC	??0CTime@ATL@@QAE@HHHHHHH@Z			; ATL::CTime::CTime
PUBLIC	??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z		; ATL::CTime::operator-
PUBLIC	?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z	; ATL::CTime::GetLocalTm
PUBLIC	?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime
PUBLIC	?GetYear@CTime@ATL@@QBEHXZ			; ATL::CTime::GetYear
PUBLIC	?GetMonth@CTime@ATL@@QBEHXZ			; ATL::CTime::GetMonth
PUBLIC	?GetDay@CTime@ATL@@QBEHXZ			; ATL::CTime::GetDay
PUBLIC	?GetHour@CTime@ATL@@QBEHXZ			; ATL::CTime::GetHour
PUBLIC	?GetMinute@CTime@ATL@@QBEHXZ			; ATL::CTime::GetMinute
PUBLIC	?GetSecond@CTime@ATL@@QBEHXZ			; ATL::CTime::GetSecond
PUBLIC	??0CSize@@QAE@HH@Z				; CSize::CSize
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?DeflateRect@CRect@@QAEXHHHH@Z			; CRect::DeflateRect
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
PUBLIC	?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt
PUBLIC	??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
PUBLIC	??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
PUBLIC	??0CMatchInfoBuffer@@QAE@ABV0@@Z		; CMatchInfoBuffer::CMatchInfoBuffer
PUBLIC	??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z		; CMatchInfoBuffer::operator=
PUBLIC	??_GCMatchInfoBuffer@@UAEPAXI@Z			; CMatchInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECMatchInfoBuffer@@UAEPAXI@Z			; CMatchInfoBuffer::`vector deleting destructor'
PUBLIC	??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
PUBLIC	?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt
PUBLIC	??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
PUBLIC	??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor'
PUBLIC	??0CRewardInfoBuffer@@QAE@ABV0@@Z		; CRewardInfoBuffer::CRewardInfoBuffer
PUBLIC	??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z		; CRewardInfoBuffer::operator=
PUBLIC	??_GCRewardInfoBuffer@@UAEPAXI@Z		; CRewardInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECRewardInfoBuffer@@UAEPAXI@Z		; CRewardInfoBuffer::`vector deleting destructor'
PUBLIC	??0CMatchInfoManager@@QAE@ABV0@@Z		; CMatchInfoManager::CMatchInfoManager
PUBLIC	??4CMatchInfoManager@@QAEAAV0@ABV0@@Z		; CMatchInfoManager::operator=
PUBLIC	??_GCMatchInfoManager@@UAEPAXI@Z		; CMatchInfoManager::`scalar deleting destructor'
PUBLIC	??_ECMatchInfoManager@@UAEPAXI@Z		; CMatchInfoManager::`vector deleting destructor'
PUBLIC	??0CDlgMatchItem@@IAE@I@Z			; CDlgMatchItem::CDlgMatchItem
PUBLIC	??1CDlgMatchItem@@MAE@XZ			; CDlgMatchItem::~CDlgMatchItem
PUBLIC	?OnOK@CDlgMatchItem@@MAEXXZ			; CDlgMatchItem::OnOK
PUBLIC	?OnCancel@CDlgMatchItem@@MAEXXZ			; CDlgMatchItem::OnCancel
PUBLIC	?SetMatchInfoBuffer@CDlgMatchItem@@IAEXPAVCMatchInfoBuffer@@@Z ; CDlgMatchItem::SetMatchInfoBuffer
PUBLIC	?SetRewardInfoBuffer@CDlgMatchItem@@IAEXPAVCRewardInfoBuffer@@@Z ; CDlgMatchItem::SetRewardInfoBuffer
PUBLIC	?SetGameMatchOption@CDlgMatchItem@@IAEXPAUtagGameMatchOption@@@Z ; CDlgMatchItem::SetGameMatchOption
PUBLIC	?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ ; CDlgMatchItem::GetGameMatchOption
PUBLIC	?ShowMatchItem@CDlgMatchItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgMatchItem::ShowMatchItem
PUBLIC	?CreateMatchItem@CDlgMatchItem@@AAEXABVCRect@@PAVCWnd@@@Z ; CDlgMatchItem::CreateMatchItem
PUBLIC	?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z	; CDlgMatchItem::OnEventMatchTypeChanged
PUBLIC	?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ ; CDlgMatchItem::GetMessageMap
PUBLIC	??_GCDlgMatchItem@@MAEPAXI@Z			; CDlgMatchItem::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchItem@@MAEPAXI@Z			; CDlgMatchItem::`vector deleting destructor'
PUBLIC	??0CDlgMatchSignup1@@QAE@XZ			; CDlgMatchSignup1::CDlgMatchSignup1
PUBLIC	??1CDlgMatchSignup1@@UAE@XZ			; CDlgMatchSignup1::~CDlgMatchSignup1
PUBLIC	?OnInitDialog@CDlgMatchSignup1@@MAEHXZ		; CDlgMatchSignup1::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchSignup1@@MAE_NXZ	; CDlgMatchSignup1::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchSignup1@@MAEXHH@Z	; CDlgMatchSignup1::RectifyControl
PUBLIC	?OnEventMatchTypeChanged@CDlgMatchSignup1@@UAEXE@Z ; CDlgMatchSignup1::OnEventMatchTypeChanged
PUBLIC	?GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchSignup1::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgMatchSignup1@@MBEPBUAFX_MSGMAP@@XZ ; CDlgMatchSignup1::GetMessageMap
PUBLIC	??_GCDlgMatchSignup1@@UAEPAXI@Z			; CDlgMatchSignup1::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchSignup1@@UAEPAXI@Z			; CDlgMatchSignup1::`vector deleting destructor'
PUBLIC	??0CDlgMatchSignup2@@QAE@XZ			; CDlgMatchSignup2::CDlgMatchSignup2
PUBLIC	??1CDlgMatchSignup2@@UAE@XZ			; CDlgMatchSignup2::~CDlgMatchSignup2
PUBLIC	?OnInitDialog@CDlgMatchSignup2@@MAEHXZ		; CDlgMatchSignup2::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchSignup2@@MAE_NXZ	; CDlgMatchSignup2::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchSignup2@@MAEXHH@Z	; CDlgMatchSignup2::RectifyControl
PUBLIC	??_GCDlgMatchSignup2@@UAEPAXI@Z			; CDlgMatchSignup2::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchSignup2@@UAEPAXI@Z			; CDlgMatchSignup2::`vector deleting destructor'
PUBLIC	??0CDlgMatchDistribute@@QAE@XZ			; CDlgMatchDistribute::CDlgMatchDistribute
PUBLIC	??1CDlgMatchDistribute@@UAE@XZ			; CDlgMatchDistribute::~CDlgMatchDistribute
PUBLIC	?OnInitDialog@CDlgMatchDistribute@@MAEHXZ	; CDlgMatchDistribute::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchDistribute@@MAE_NXZ	; CDlgMatchDistribute::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchDistribute@@MAEXHH@Z	; CDlgMatchDistribute::RectifyControl
PUBLIC	??_GCDlgMatchDistribute@@UAEPAXI@Z		; CDlgMatchDistribute::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchDistribute@@UAEPAXI@Z		; CDlgMatchDistribute::`vector deleting destructor'
PUBLIC	??0CDlgMatchRankingMode@@QAE@XZ			; CDlgMatchRankingMode::CDlgMatchRankingMode
PUBLIC	??1CDlgMatchRankingMode@@UAE@XZ			; CDlgMatchRankingMode::~CDlgMatchRankingMode
PUBLIC	?OnInitDialog@CDlgMatchRankingMode@@MAEHXZ	; CDlgMatchRankingMode::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchRankingMode@@MAE_NXZ	; CDlgMatchRankingMode::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchRankingMode@@MAEXHH@Z	; CDlgMatchRankingMode::RectifyControl
PUBLIC	?OnEventMatchTypeChanged@CDlgMatchRankingMode@@UAEXE@Z ; CDlgMatchRankingMode::OnEventMatchTypeChanged
PUBLIC	??_GCDlgMatchRankingMode@@UAEPAXI@Z		; CDlgMatchRankingMode::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchRankingMode@@UAEPAXI@Z		; CDlgMatchRankingMode::`vector deleting destructor'
PUBLIC	??0CDlgMatchReward@@QAE@XZ			; CDlgMatchReward::CDlgMatchReward
PUBLIC	??1CDlgMatchReward@@UAE@XZ			; CDlgMatchReward::~CDlgMatchReward
PUBLIC	?OnInitDialog@CDlgMatchReward@@MAEHXZ		; CDlgMatchReward::OnInitDialog
PUBLIC	?DoDataExchange@CDlgMatchReward@@MAEXPAVCDataExchange@@@Z ; CDlgMatchReward::DoDataExchange
PUBLIC	?SaveInputInfo@CDlgMatchReward@@MAE_NXZ		; CDlgMatchReward::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchReward@@MAEXHH@Z	; CDlgMatchReward::RectifyControl
PUBLIC	?SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z ; CDlgMatchReward::SetMatchRewardOption
PUBLIC	?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z ; CDlgMatchReward::GetMatchRewardOption
PUBLIC	?GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchReward::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgMatchReward@@MBEPBUAFX_MSGMAP@@XZ ; CDlgMatchReward::GetMessageMap
PUBLIC	??_GCDlgMatchReward@@UAEPAXI@Z			; CDlgMatchReward::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchReward@@UAEPAXI@Z			; CDlgMatchReward::`vector deleting destructor'
PUBLIC	??0CDlgMatchLockTime@@QAE@XZ			; CDlgMatchLockTime::CDlgMatchLockTime
PUBLIC	??1CDlgMatchLockTime@@UAE@XZ			; CDlgMatchLockTime::~CDlgMatchLockTime
PUBLIC	?OnInitDialog@CDlgMatchLockTime@@MAEHXZ		; CDlgMatchLockTime::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchLockTime@@MAE_NXZ	; CDlgMatchLockTime::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchLockTime@@MAEXHH@Z	; CDlgMatchLockTime::RectifyControl
PUBLIC	??_GCDlgMatchLockTime@@UAEPAXI@Z		; CDlgMatchLockTime::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchLockTime@@UAEPAXI@Z		; CDlgMatchLockTime::`vector deleting destructor'
PUBLIC	??0CDlgMatchImmediate@@QAE@XZ			; CDlgMatchImmediate::CDlgMatchImmediate
PUBLIC	??1CDlgMatchImmediate@@UAE@XZ			; CDlgMatchImmediate::~CDlgMatchImmediate
PUBLIC	?OnInitDialog@CDlgMatchImmediate@@MAEHXZ	; CDlgMatchImmediate::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchImmediate@@MAE_NXZ	; CDlgMatchImmediate::SaveInputInfo
PUBLIC	?RectifyControl@CDlgMatchImmediate@@MAEXHH@Z	; CDlgMatchImmediate::RectifyControl
PUBLIC	??_GCDlgMatchImmediate@@UAEPAXI@Z		; CDlgMatchImmediate::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchImmediate@@UAEPAXI@Z		; CDlgMatchImmediate::`vector deleting destructor'
PUBLIC	??0CDlgMatchWizardItem@@IAE@I@Z			; CDlgMatchWizardItem::CDlgMatchWizardItem
PUBLIC	??1CDlgMatchWizardItem@@MAE@XZ			; CDlgMatchWizardItem::~CDlgMatchWizardItem
PUBLIC	?OnOK@CDlgMatchWizardItem@@MAEXXZ		; CDlgMatchWizardItem::OnOK
PUBLIC	?OnCancel@CDlgMatchWizardItem@@MAEXXZ		; CDlgMatchWizardItem::OnCancel
PUBLIC	?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ	; CDlgMatchWizardItem::SaveItemData
PUBLIC	?ShowWizardItem@CDlgMatchWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgMatchWizardItem::ShowWizardItem
PUBLIC	?GetMessageMap@CDlgMatchWizardItem@@MBEPBUAFX_MSGMAP@@XZ ; CDlgMatchWizardItem::GetMessageMap
PUBLIC	??_GCDlgMatchWizardItem@@MAEPAXI@Z		; CDlgMatchWizardItem::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchWizardItem@@MAEPAXI@Z		; CDlgMatchWizardItem::`vector deleting destructor'
PUBLIC	??0CDlgMatchWizardStep1@@QAE@XZ			; CDlgMatchWizardStep1::CDlgMatchWizardStep1
PUBLIC	??1CDlgMatchWizardStep1@@UAE@XZ			; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
PUBLIC	?DoDataExchange@CDlgMatchWizardStep1@@MAEXPAVCDataExchange@@@Z ; CDlgMatchWizardStep1::DoDataExchange
PUBLIC	?OnInitDialog@CDlgMatchWizardStep1@@MAEHXZ	; CDlgMatchWizardStep1::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchWizardStep1@@UAE_NXZ	; CDlgMatchWizardStep1::SaveInputInfo
PUBLIC	?OnMatchItemActive@CDlgMatchWizardStep1@@UAEXXZ	; CDlgMatchWizardStep1::OnMatchItemActive
PUBLIC	?RectifyControl@CDlgMatchWizardStep1@@UAEXHH@Z	; CDlgMatchWizardStep1::RectifyControl
PUBLIC	?InitBaseOption@CDlgMatchWizardStep1@@IAEXXZ	; CDlgMatchWizardStep1::InitBaseOption
PUBLIC	?SaveBaseOption@CDlgMatchWizardStep1@@IAE_NXZ	; CDlgMatchWizardStep1::SaveBaseOption
PUBLIC	?ActiveOptionItem@CDlgMatchWizardStep1@@IAEXE@Z	; CDlgMatchWizardStep1::ActiveOptionItem
PUBLIC	?GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchWizardStep1::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgMatchWizardStep1@@MBEPBUAFX_MSGMAP@@XZ ; CDlgMatchWizardStep1::GetMessageMap
PUBLIC	??_GCDlgMatchWizardStep1@@UAEPAXI@Z		; CDlgMatchWizardStep1::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchWizardStep1@@UAEPAXI@Z		; CDlgMatchWizardStep1::`vector deleting destructor'
PUBLIC	??0CDlgMatchWizardStep2@@QAE@XZ			; CDlgMatchWizardStep2::CDlgMatchWizardStep2
PUBLIC	??1CDlgMatchWizardStep2@@UAE@XZ			; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
PUBLIC	?DoDataExchange@CDlgMatchWizardStep2@@MAEXPAVCDataExchange@@@Z ; CDlgMatchWizardStep2::DoDataExchange
PUBLIC	?OnInitDialog@CDlgMatchWizardStep2@@MAEHXZ	; CDlgMatchWizardStep2::OnInitDialog
PUBLIC	?SaveInputInfo@CDlgMatchWizardStep2@@UAE_NXZ	; CDlgMatchWizardStep2::SaveInputInfo
PUBLIC	?OnMatchItemActive@CDlgMatchWizardStep2@@UAEXXZ	; CDlgMatchWizardStep2::OnMatchItemActive
PUBLIC	?RectifyControl@CDlgMatchWizardStep2@@UAEXHH@Z	; CDlgMatchWizardStep2::RectifyControl
PUBLIC	??_GCDlgMatchWizardStep2@@UAEPAXI@Z		; CDlgMatchWizardStep2::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchWizardStep2@@UAEPAXI@Z		; CDlgMatchWizardStep2::`vector deleting destructor'
PUBLIC	??0CDlgMatchWizard@@QAE@XZ			; CDlgMatchWizard::CDlgMatchWizard
PUBLIC	??1CDlgMatchWizard@@UAE@XZ			; CDlgMatchWizard::~CDlgMatchWizard
PUBLIC	?OnInitDialog@CDlgMatchWizard@@UAEHXZ		; CDlgMatchWizard::OnInitDialog
PUBLIC	?OnOK@CDlgMatchWizard@@UAEXXZ			; CDlgMatchWizard::OnOK
PUBLIC	?SetGameKindID@CDlgMatchWizard@@QAEXG@Z		; CDlgMatchWizard::SetGameKindID
PUBLIC	?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ; CDlgMatchWizard::GetGameMatchOption
PUBLIC	?SetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ; CDlgMatchWizard::SetGameMatchOption
PUBLIC	?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z	; CDlgMatchWizard::ActiveWizardItem
PUBLIC	?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z ; CDlgMatchWizard::TransferMatchReward
PUBLIC	?GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchWizard::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgMatchWizard@@MBEPBUAFX_MSGMAP@@XZ ; CDlgMatchWizard::GetMessageMap
PUBLIC	??_GCDlgMatchWizard@@UAEPAXI@Z			; CDlgMatchWizard::`scalar deleting destructor'
PUBLIC	??_ECDlgMatchWizard@@UAEPAXI@Z			; CDlgMatchWizard::`vector deleting destructor'
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ		; _snprintf_s<64>
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrowImpl'::`1'::__LINE__Var
PUBLIC	??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ ; `string'
PUBLIC	?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA	; `ATL::CTime::CTime'::`1'::__LINE__Var
PUBLIC	??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BK@NHHHCKNA@?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1@ ; `string'
PUBLIC	?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA ; `ATL::CTime::GetLocalTm'::`1'::__LINE__Var
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDialog@@8			; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R3CDialog@@8					; CDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialog@@8					; CDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
PUBLIC	??_7CMatchInfoBuffer@@6B@			; CMatchInfoBuffer::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vftable'
PUBLIC	??_7CRewardInfoBuffer@@6B@			; CRewardInfoBuffer::`vftable'
PUBLIC	??_7CMatchInfoManager@@6B@			; CMatchInfoManager::`vftable'
PUBLIC	??_7CDlgMatchItem@@6B@				; CDlgMatchItem::`vftable'
PUBLIC	??_7CDlgMatchSignup1@@6B@			; CDlgMatchSignup1::`vftable'
PUBLIC	??_7CDlgMatchSignup2@@6B@			; CDlgMatchSignup2::`vftable'
PUBLIC	??_7CDlgMatchDistribute@@6B@			; CDlgMatchDistribute::`vftable'
PUBLIC	??_7CDlgMatchRankingMode@@6B@			; CDlgMatchRankingMode::`vftable'
PUBLIC	??_7CDlgMatchReward@@6B@			; CDlgMatchReward::`vftable'
PUBLIC	??_7CDlgMatchLockTime@@6B@			; CDlgMatchLockTime::`vftable'
PUBLIC	??_7CDlgMatchImmediate@@6B@			; CDlgMatchImmediate::`vftable'
PUBLIC	??_7CDlgMatchWizardItem@@6B@			; CDlgMatchWizardItem::`vftable'
PUBLIC	??_7CDlgMatchWizardStep1@@6B@			; CDlgMatchWizardStep1::`vftable'
PUBLIC	??_7CDlgMatchWizardStep2@@6B@			; CDlgMatchWizardStep2::`vftable'
PUBLIC	??_7CDlgMatchWizard@@6B@			; CDlgMatchWizard::`vftable'
PUBLIC	??_C@_0BC@LFCAOGLK@ModuleManager?4dll@		; `string'
PUBLIC	??_C@_0BP@BGMCEKFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T?q?$KD?$KB@ ; `string'
PUBLIC	??_C@_0EJ@IJMPOAAP@?D?z?$LJ?$LE?Q?$KB?A?K?$LC?N?$LM?S?L?X?$LG?$KI?$LB?H?H?$PM?W?w?N?$KK?$LB?$KI?C?$PL?$LH?$LN?J@ ; `string'
PUBLIC	??_C@_0DP@FFLEHDAN@?D?z?Q?$KB?T?q?A?K?$LM?$LE?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@ ; `string'
PUBLIC	??_C@_0DN@MMLGHCLB@?D?z?Q?$KB?T?q?A?K?$LG?$KI?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@ ; `string'
PUBLIC	??_C@_0DB@GIIJOMAB@?$LM?$LE?J?$LB?H?$PM?$LC?$LL?D?$NM?Q?$KB?T?q?$LB?H?H?$PM?$LN?p?$LB?R?W?w?N?$KK?$LB?$KI?C?$PL?$LH@ ; `string'
PUBLIC	??_C@_0CB@NFBJEILB@?M?$LD?$LM?F?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?I?h?V?C?$KD@ ; `string'
PUBLIC	??_C@_0CF@JAINKKBO@?D?z?J?d?H?k?$LF?D?$LB?H?H?$PM?C?$PL?$LE?N?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ ; `string'
PUBLIC	?__LINE__Var@?0??SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z@4JA ; `CDlgMatchReward::SetMatchRewardOption'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0DG@KCCJLHM@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?R?Q?$LE?f?T?Z?0?H?g?R?$KK?P?$NO@ ; `string'
PUBLIC	??_C@_0DG@CBDLPBKG@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?$LC?$LL?$LE?f?T?Z?0?H?g?R?$KK?L?m@ ; `string'
PUBLIC	??_C@_08KONJAKGH@?$LD?$KD?$LJ?f?$LP?$KK?H?$PM@	; `string'
PUBLIC	??_C@_08JJILHLAM@?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@	; `string'
PUBLIC	??_C@_0CB@IBGJJLPI@?$LP?$KK?H?$PM?H?K?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CH@OLBIFNIB@?$LB?$KI?C?$PL?H?K?J?$PN?$LC?$LL?D?$NM?I?Y?S?Z?$LP?$KK?H?$PM?H?K?J?$PN?$KD?$KM?G?k?V?X?P@ ; `string'
PUBLIC	??_C@_0CB@GLEENOFN@?$LD?u?J?$LM?$LH?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CB@CNOBBOMH@?S?P?P?$KH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CB@NBDOAMNH@?W?n?$LE?s?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CF@BMJDJCHE@?$LB?H?H?$PM?$LN?a?J?x?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ ; `string'
PUBLIC	??_C@_0CF@JHFPJNIO@?$LB?H?H?$PM?$LN?a?J?x?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ ; `string'
PUBLIC	??_C@_0CF@DLMEACLJ@?$LB?$KI?C?$PL?$LN?X?V?$LJ?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ ; `string'
PUBLIC	??_C@_0CF@LAAIANED@?$LB?$KI?C?$PL?$LN?X?V?$LJ?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ ; `string'
PUBLIC	??_C@_0CB@PEECONKK@?S?N?O?$LH?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CB@JCEBBJJ@?$LD?u?J?$LM?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_0CB@FLPJDOOI@?S?N?O?$LH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ ; `string'
PUBLIC	??_C@_08DNENCOFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN@	; `string'
PUBLIC	??_C@_08GGMHIHHC@?$LB?$KI?C?$PL?L?u?$LM?$PO@	; `string'
PUBLIC	??_C@_08NLOMAJOJ@?E?E?C?$PL?$LH?$LN?J?$LN@	; `string'
PUBLIC	??_C@_08POFGBLDO@?$LE?i?W?$MA?E?d?V?C@		; `string'
PUBLIC	??_C@_08JOGGGCJG@?$LN?$LB?$MA?x?E?d?V?C@	; `string'
PUBLIC	??_C@_0L@PPGJNCEH@?$LG?$KI?J?$LB?H?$PM?$MA?$OA?P?M@ ; `string'
PUBLIC	??_C@_0L@CAFEOLKF@?$LM?$LE?J?$LB?H?$PM?$MA?$OA?P?M@ ; `string'
PUBLIC	??_C@_0BP@GNGDJPLC@?$LB?H?H?$PM?C?$PL?$LD?F?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BN@PENPJMLD@?$LB?H?H?$PM?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@ ; `string'
PUBLIC	??_C@_06EKDNBKMI@?$CFI64d?$HM@			; `string'
PUBLIC	??_C@_03IFADCKOJ@?$CFd?$HM@			; `string'
PUBLIC	?__LINE__Var@?0??OnBnClickedLast@CDlgMatchWizard@@QAEXXZ@4JA ; `CDlgMatchWizard::OnBnClickedLast'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnBnClickedNext@CDlgMatchWizard@@QAEXXZ@4JA ; `CDlgMatchWizard::OnBnClickedNext'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ@4JA ; `CDlgMatchWizard::OnBnClickedFinish'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@HLFOHCBE@?H?$KL?L?l24?P?$KB?J?$LB?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@ ; `string'
PUBLIC	??_C@_0CA@LFIMABND@?$CF4d?9?$CF02d?9?$CF02d?5?9?9?5?$CF04d?9?$CF02d?9?$CF02d@ ; `string'
PUBLIC	??_C@_0BB@PKJCCBCJ@?S?N?O?$LH?$LB?H?H?$PM?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@ ; `string'
PUBLIC	??_C@_0BB@KDOOOCPP@?S?N?O?$LH?$LB?H?H?$PM?E?d?V?C?$LD?I?$LJ?$KG@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchInfoBuffer@@6B@			; CMatchInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchInfoBuffer@@@8			; CMatchInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CMatchInfoBuffer@@8			; CMatchInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchInfoBuffer@@8			; CMatchInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchInfoBuffer@@8		; CMatchInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRewardInfoBuffer@@6B@			; CRewardInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRewardInfoBuffer@@@8			; CRewardInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CRewardInfoBuffer@@8			; CRewardInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRewardInfoBuffer@@8			; CRewardInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRewardInfoBuffer@@8		; CRewardInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchInfoManager@@6B@			; CMatchInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchInfoManager@@@8			; CMatchInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CMatchInfoManager@@8			; CMatchInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchInfoManager@@8			; CMatchInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchInfoManager@@8		; CMatchInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchItem@@6B@				; CDlgMatchItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchItem@@@8			; CDlgMatchItem `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchItem@@8				; CDlgMatchItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchItem@@8				; CDlgMatchItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchItem@@8			; CDlgMatchItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchWizard@@6B@			; CDlgMatchWizard::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchWizard@@@8			; CDlgMatchWizard `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchWizard@@8				; CDlgMatchWizard::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchWizard@@8				; CDlgMatchWizard::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchWizard@@8		; CDlgMatchWizard::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchWizardStep1@@6B@			; CDlgMatchWizardStep1::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchWizardStep1@@@8		; CDlgMatchWizardStep1 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchWizardStep1@@8			; CDlgMatchWizardStep1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchWizardStep1@@8			; CDlgMatchWizardStep1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchWizardStep1@@8		; CDlgMatchWizardStep1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDlgMatchWizardItem@@8		; CDlgMatchWizardItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDlgMatchWizardItem@@@8			; CDlgMatchWizardItem `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchWizardItem@@8			; CDlgMatchWizardItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchWizardItem@@8			; CDlgMatchWizardItem::`RTTI Base Class Array'
PUBLIC	??_R4CDlgMatchWizardStep2@@6B@			; CDlgMatchWizardStep2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchWizardStep2@@@8		; CDlgMatchWizardStep2 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchWizardStep2@@8			; CDlgMatchWizardStep2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchWizardStep2@@8			; CDlgMatchWizardStep2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchWizardStep2@@8		; CDlgMatchWizardStep2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchSignup1@@6B@			; CDlgMatchSignup1::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchSignup1@@@8			; CDlgMatchSignup1 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchSignup1@@8			; CDlgMatchSignup1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchSignup1@@8			; CDlgMatchSignup1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchSignup1@@8		; CDlgMatchSignup1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchSignup2@@6B@			; CDlgMatchSignup2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchSignup2@@@8			; CDlgMatchSignup2 `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchSignup2@@8			; CDlgMatchSignup2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchSignup2@@8			; CDlgMatchSignup2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchSignup2@@8		; CDlgMatchSignup2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchDistribute@@6B@			; CDlgMatchDistribute::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchDistribute@@@8			; CDlgMatchDistribute `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchDistribute@@8			; CDlgMatchDistribute::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchDistribute@@8			; CDlgMatchDistribute::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchDistribute@@8		; CDlgMatchDistribute::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchRankingMode@@6B@			; CDlgMatchRankingMode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchRankingMode@@@8		; CDlgMatchRankingMode `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchRankingMode@@8			; CDlgMatchRankingMode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchRankingMode@@8			; CDlgMatchRankingMode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchRankingMode@@8		; CDlgMatchRankingMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchReward@@6B@			; CDlgMatchReward::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchReward@@@8			; CDlgMatchReward `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchReward@@8				; CDlgMatchReward::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchReward@@8				; CDlgMatchReward::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchReward@@8		; CDlgMatchReward::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchLockTime@@6B@			; CDlgMatchLockTime::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchLockTime@@@8			; CDlgMatchLockTime `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchLockTime@@8			; CDlgMatchLockTime::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchLockTime@@8			; CDlgMatchLockTime::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchLockTime@@8		; CDlgMatchLockTime::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchImmediate@@6B@			; CDlgMatchImmediate::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgMatchImmediate@@@8			; CDlgMatchImmediate `RTTI Type Descriptor'
PUBLIC	??_R3CDlgMatchImmediate@@8			; CDlgMatchImmediate::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgMatchImmediate@@8			; CDlgMatchImmediate::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgMatchImmediate@@8		; CDlgMatchImmediate::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgMatchWizardItem@@6B@			; CDlgMatchWizardItem::`RTTI Complete Object Locator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___localtime64_s:PROC
EXTRN	__imp___mktime64:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowOleException@@YGXJ@Z:PROC		; AfxThrowOleException
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXABV12@@Z:PROC
EXTRN	__imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z:PROC ; DDX_Control
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:PROC		; CWnd::GetDlgItem
EXTRN	?PostMessageA@CWnd@@QAEHIIJ@Z:PROC		; CWnd::PostMessageA
EXTRN	?SetWindowTextA@CWnd@@QAEXPBD@Z:PROC		; CWnd::SetWindowTextA
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:PROC	; CWnd::SetWindowPos
EXTRN	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetWindowRect
EXTRN	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetClientRect
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::ScreenToClient
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:PROC			; CWnd::ShowWindow
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:PROC		; CWnd::EnableWindow
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:PROC			; CWnd::SetFocus
EXTRN	?CheckRadioButton@CWnd@@QAEXHHH@Z:PROC		; CWnd::CheckRadioButton
EXTRN	?GetCheckedRadioButton@CWnd@@QBEHHH@Z:PROC	; CWnd::GetCheckedRadioButton
EXTRN	?GetDlgItemInt@CWnd@@QBEIHPAHH@Z:PROC		; CWnd::GetDlgItemInt
EXTRN	?GetDlgItemTextA@CWnd@@QBEHHPADH@Z:PROC		; CWnd::GetDlgItemTextA
EXTRN	?IsDlgButtonChecked@CWnd@@QBEIH@Z:PROC		; CWnd::IsDlgButtonChecked
EXTRN	?SetDlgItemInt@CWnd@@QAEXHIH@Z:PROC		; CWnd::SetDlgItemInt
EXTRN	?SetDlgItemTextA@CWnd@@QAEXHPBD@Z:PROC		; CWnd::SetDlgItemTextA
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?GetParent@CWnd@@QBEPAV1@XZ:PROC		; CWnd::GetParent
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnSize@CWnd@@IAEXIHH@Z:PROC			; CWnd::OnSize
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:PROC ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:PROC	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:PROC		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:PROC ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:PROC ; CDialog::CreateIndirect
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:PROC		; CDialog::CDialog
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	?EndDialog@CDialog@@QAEXH@Z:PROC		; CDialog::EndDialog
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:PROC		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:PROC	; CDialog::OnSetFont
EXTRN	?OnCancel@CDialog@@MAEXXZ:PROC			; CDialog::OnCancel
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	?AssertValid@CDialog@@UBEXXZ:PROC		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:PROC	; CDialog::Dump
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:PROC ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:PROC		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CDialog::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CDialog::GetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:PROC		; CDialog::PreInitDialog
EXTRN	?GetCheck@CButton@@QBEHXZ:PROC			; CButton::GetCheck
EXTRN	?SetCheck@CButton@@QAEXH@Z:PROC			; CButton::SetCheck
EXTRN	?GetCurSel@CComboBox@@QBEHXZ:PROC		; CComboBox::GetCurSel
EXTRN	?SetCurSel@CComboBox@@QAEHH@Z:PROC		; CComboBox::SetCurSel
EXTRN	?GetItemData@CComboBox@@QBEKH@Z:PROC		; CComboBox::GetItemData
EXTRN	?SetItemData@CComboBox@@QAEHHK@Z:PROC		; CComboBox::SetItemData
EXTRN	?GetItemDataPtr@CComboBox@@QBEPAXH@Z:PROC	; CComboBox::GetItemDataPtr
EXTRN	?SetItemDataPtr@CComboBox@@QAEHHPAX@Z:PROC	; CComboBox::SetItemDataPtr
EXTRN	?AddString@CComboBox@@QAEHPBD@Z:PROC		; CComboBox::AddString
EXTRN	?InsertString@CComboBox@@QAEHHPBD@Z:PROC	; CComboBox::InsertString
EXTRN	?LimitText@CEdit@@QAEXH@Z:PROC			; CEdit::LimitText
EXTRN	?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z:PROC ; AfxSetResourceHandle
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z:PROC ; CDateTimeCtrl::GetTime
EXTRN	?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z:PROC ; CDateTimeCtrl::SetTime
EXTRN	?GetTime@CDateTimeCtrl@@QBEKPAU_SYSTEMTIME@@@Z:PROC ; CDateTimeCtrl::GetTime
EXTRN	?GetItemData@CListCtrl@@QBEKH@Z:PROC		; CListCtrl::GetItemData
EXTRN	?GetCurSel@CTabCtrl@@QBEHXZ:PROC		; CTabCtrl::GetCurSel
EXTRN	?SetItemSize@CTabCtrl@@QAE?AVCSize@@V2@@Z:PROC	; CTabCtrl::SetItemSize
EXTRN	?InsertItem@CTabCtrl@@QAEJHPBD@Z:PROC		; CTabCtrl::InsertItem
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?GetMachineID@CWHService@@SA_NQAD@Z:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vector deleting destructor'
EXTRN	??0CMatchInfoBuffer@@QAE@XZ:PROC		; CMatchInfoBuffer::CMatchInfoBuffer
EXTRN	??1CMatchInfoBuffer@@UAE@XZ:PROC		; CMatchInfoBuffer::~CMatchInfoBuffer
EXTRN	?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z:PROC ; CMatchInfoBuffer::SearchMatchOption
EXTRN	??_E?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vector deleting destructor'
EXTRN	??0CRewardInfoBuffer@@QAE@XZ:PROC		; CRewardInfoBuffer::CRewardInfoBuffer
EXTRN	??1CRewardInfoBuffer@@UAE@XZ:PROC		; CRewardInfoBuffer::~CRewardInfoBuffer
EXTRN	?ResetMatchRewardInfo@CRewardInfoBuffer@@QAE_NXZ:PROC ; CRewardInfoBuffer::ResetMatchRewardInfo
EXTRN	?DeleteMatchRewardInfo@CRewardInfoBuffer@@QAE_NG@Z:PROC ; CRewardInfoBuffer::DeleteMatchRewardInfo
EXTRN	?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z:PROC ; CRewardInfoBuffer::InsertMatchRewardInfo
EXTRN	?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ:PROC ; CRewardInfoBuffer::GetMatchRewardCount
EXTRN	?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z:PROC ; CRewardInfoBuffer::SearchMatchReward
EXTRN	??0CMatchInfoManager@@QAE@XZ:PROC		; CMatchInfoManager::CMatchInfoManager
EXTRN	??1CMatchInfoManager@@UAE@XZ:PROC		; CMatchInfoManager::~CMatchInfoManager
EXTRN	?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z:PROC ; CMatchInfoManager::LoadGameMatchReward
EXTRN	?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z:PROC ; CMatchInfoManager::LoadGameMatchOption
EXTRN	?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z:PROC ; CMatchInfoManager::InsertGameMatchOption
EXTRN	?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z:PROC ; CMatchInfoManager::ModifyGameMatchOption
EXTRN	??0CRewardListControl@@QAE@XZ:PROC		; CRewardListControl::CRewardListControl
EXTRN	??1CRewardListControl@@UAE@XZ:PROC		; CRewardListControl::~CRewardListControl
EXTRN	?InsertMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z:PROC ; CRewardListControl::InsertMatchReward
EXTRN	?UpdateMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z:PROC ; CRewardListControl::UpdateMatchReward
EXTRN	?DeleteMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z:PROC ; CRewardListControl::DeleteMatchReward
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R4CDlgMatchWizardItem@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchWizardItem@@6B@ DD 00H			; CDlgMatchWizardItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchWizardItem@@@8
	DD	FLAT:??_R3CDlgMatchWizardItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchImmediate@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchImmediate@@8 DD FLAT:??_R0?AVCDlgMatchImmediate@@@8 ; CDlgMatchImmediate::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchImmediate@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchImmediate@@8
rdata$r	SEGMENT
??_R2CDlgMatchImmediate@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchImmediate@@8 ; CDlgMatchImmediate::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchImmediate@@8
rdata$r	SEGMENT
??_R3CDlgMatchImmediate@@8 DD 00H			; CDlgMatchImmediate::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchImmediate@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchImmediate@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchImmediate@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchImmediate `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchImmediate@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchImmediate@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchImmediate@@6B@ DD 00H			; CDlgMatchImmediate::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchImmediate@@@8
	DD	FLAT:??_R3CDlgMatchImmediate@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchLockTime@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchLockTime@@8 DD FLAT:??_R0?AVCDlgMatchLockTime@@@8 ; CDlgMatchLockTime::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchLockTime@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchLockTime@@8
rdata$r	SEGMENT
??_R2CDlgMatchLockTime@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchLockTime@@8 ; CDlgMatchLockTime::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchLockTime@@8
rdata$r	SEGMENT
??_R3CDlgMatchLockTime@@8 DD 00H			; CDlgMatchLockTime::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchLockTime@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchLockTime@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchLockTime@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchLockTime `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchLockTime@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchLockTime@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchLockTime@@6B@ DD 00H			; CDlgMatchLockTime::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchLockTime@@@8
	DD	FLAT:??_R3CDlgMatchLockTime@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchReward@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchReward@@8 DD FLAT:??_R0?AVCDlgMatchReward@@@8 ; CDlgMatchReward::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchReward@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchReward@@8
rdata$r	SEGMENT
??_R2CDlgMatchReward@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchReward@@8 ; CDlgMatchReward::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchReward@@8
rdata$r	SEGMENT
??_R3CDlgMatchReward@@8 DD 00H				; CDlgMatchReward::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchReward@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchReward@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchReward@@@8 DD FLAT:??_7type_info@@6B@	; CDlgMatchReward `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchReward@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchReward@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchReward@@6B@ DD 00H			; CDlgMatchReward::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchReward@@@8
	DD	FLAT:??_R3CDlgMatchReward@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchRankingMode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchRankingMode@@8 DD FLAT:??_R0?AVCDlgMatchRankingMode@@@8 ; CDlgMatchRankingMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchRankingMode@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchRankingMode@@8
rdata$r	SEGMENT
??_R2CDlgMatchRankingMode@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchRankingMode@@8 ; CDlgMatchRankingMode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchRankingMode@@8
rdata$r	SEGMENT
??_R3CDlgMatchRankingMode@@8 DD 00H			; CDlgMatchRankingMode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchRankingMode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchRankingMode@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchRankingMode@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchRankingMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchRankingMode@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchRankingMode@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchRankingMode@@6B@ DD 00H			; CDlgMatchRankingMode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchRankingMode@@@8
	DD	FLAT:??_R3CDlgMatchRankingMode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchDistribute@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchDistribute@@8 DD FLAT:??_R0?AVCDlgMatchDistribute@@@8 ; CDlgMatchDistribute::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchDistribute@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchDistribute@@8
rdata$r	SEGMENT
??_R2CDlgMatchDistribute@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchDistribute@@8 ; CDlgMatchDistribute::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchDistribute@@8
rdata$r	SEGMENT
??_R3CDlgMatchDistribute@@8 DD 00H			; CDlgMatchDistribute::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchDistribute@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchDistribute@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchDistribute@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchDistribute `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchDistribute@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchDistribute@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchDistribute@@6B@ DD 00H			; CDlgMatchDistribute::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchDistribute@@@8
	DD	FLAT:??_R3CDlgMatchDistribute@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchSignup2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchSignup2@@8 DD FLAT:??_R0?AVCDlgMatchSignup2@@@8 ; CDlgMatchSignup2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchSignup2@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchSignup2@@8
rdata$r	SEGMENT
??_R2CDlgMatchSignup2@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchSignup2@@8 ; CDlgMatchSignup2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchSignup2@@8
rdata$r	SEGMENT
??_R3CDlgMatchSignup2@@8 DD 00H				; CDlgMatchSignup2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchSignup2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchSignup2@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchSignup2@@@8 DD FLAT:??_7type_info@@6B@	; CDlgMatchSignup2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchSignup2@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchSignup2@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchSignup2@@6B@ DD 00H			; CDlgMatchSignup2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchSignup2@@@8
	DD	FLAT:??_R3CDlgMatchSignup2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchSignup1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchSignup1@@8 DD FLAT:??_R0?AVCDlgMatchSignup1@@@8 ; CDlgMatchSignup1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchSignup1@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchSignup1@@8
rdata$r	SEGMENT
??_R2CDlgMatchSignup1@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchSignup1@@8 ; CDlgMatchSignup1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchSignup1@@8
rdata$r	SEGMENT
??_R3CDlgMatchSignup1@@8 DD 00H				; CDlgMatchSignup1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchSignup1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchSignup1@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchSignup1@@@8 DD FLAT:??_7type_info@@6B@	; CDlgMatchSignup1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchSignup1@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchSignup1@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchSignup1@@6B@ DD 00H			; CDlgMatchSignup1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchSignup1@@@8
	DD	FLAT:??_R3CDlgMatchSignup1@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchWizardStep2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchWizardStep2@@8 DD FLAT:??_R0?AVCDlgMatchWizardStep2@@@8 ; CDlgMatchWizardStep2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchWizardStep2@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchWizardStep2@@8
rdata$r	SEGMENT
??_R2CDlgMatchWizardStep2@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchWizardStep2@@8 ; CDlgMatchWizardStep2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchWizardItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchWizardStep2@@8
rdata$r	SEGMENT
??_R3CDlgMatchWizardStep2@@8 DD 00H			; CDlgMatchWizardStep2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchWizardStep2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchWizardStep2@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchWizardStep2@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchWizardStep2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchWizardStep2@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchWizardStep2@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchWizardStep2@@6B@ DD 00H			; CDlgMatchWizardStep2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchWizardStep2@@@8
	DD	FLAT:??_R3CDlgMatchWizardStep2@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchWizardItem@@8
rdata$r	SEGMENT
??_R2CDlgMatchWizardItem@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchWizardItem@@8 ; CDlgMatchWizardItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchWizardItem@@8
rdata$r	SEGMENT
??_R3CDlgMatchWizardItem@@8 DD 00H			; CDlgMatchWizardItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgMatchWizardItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchWizardItem@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchWizardItem@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchWizardItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchWizardItem@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchWizardItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchWizardItem@@8 DD FLAT:??_R0?AVCDlgMatchWizardItem@@@8 ; CDlgMatchWizardItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchWizardItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchWizardStep1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchWizardStep1@@8 DD FLAT:??_R0?AVCDlgMatchWizardStep1@@@8 ; CDlgMatchWizardStep1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchWizardStep1@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchWizardStep1@@8
rdata$r	SEGMENT
??_R2CDlgMatchWizardStep1@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchWizardStep1@@8 ; CDlgMatchWizardStep1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDlgMatchWizardItem@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchWizardStep1@@8
rdata$r	SEGMENT
??_R3CDlgMatchWizardStep1@@8 DD 00H			; CDlgMatchWizardStep1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CDlgMatchWizardStep1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchWizardStep1@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchWizardStep1@@@8 DD FLAT:??_7type_info@@6B@ ; CDlgMatchWizardStep1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchWizardStep1@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchWizardStep1@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchWizardStep1@@6B@ DD 00H			; CDlgMatchWizardStep1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchWizardStep1@@@8
	DD	FLAT:??_R3CDlgMatchWizardStep1@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchWizard@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchWizard@@8 DD FLAT:??_R0?AVCDlgMatchWizard@@@8 ; CDlgMatchWizard::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchWizard@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchWizard@@8
rdata$r	SEGMENT
??_R2CDlgMatchWizard@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchWizard@@8 ; CDlgMatchWizard::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchWizard@@8
rdata$r	SEGMENT
??_R3CDlgMatchWizard@@8 DD 00H				; CDlgMatchWizard::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgMatchWizard@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchWizard@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchWizard@@@8 DD FLAT:??_7type_info@@6B@	; CDlgMatchWizard `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchWizard@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchWizard@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchWizard@@6B@ DD 00H			; CDlgMatchWizard::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchWizard@@@8
	DD	FLAT:??_R3CDlgMatchWizard@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgMatchItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgMatchItem@@8 DD FLAT:??_R0?AVCDlgMatchItem@@@8 ; CDlgMatchItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgMatchItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgMatchItem@@8
rdata$r	SEGMENT
??_R2CDlgMatchItem@@8 DD FLAT:??_R1A@?0A@EA@CDlgMatchItem@@8 ; CDlgMatchItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgMatchItem@@8
rdata$r	SEGMENT
??_R3CDlgMatchItem@@8 DD 00H				; CDlgMatchItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgMatchItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgMatchItem@@@8
data$r	SEGMENT
??_R0?AVCDlgMatchItem@@@8 DD FLAT:??_7type_info@@6B@	; CDlgMatchItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgMatchItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgMatchItem@@6B@
rdata$r	SEGMENT
??_R4CDlgMatchItem@@6B@ DD 00H				; CDlgMatchItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgMatchItem@@@8
	DD	FLAT:??_R3CDlgMatchItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchInfoManager@@8 DD FLAT:??_R0?AVCMatchInfoManager@@@8 ; CMatchInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchInfoManager@@8
rdata$r	SEGMENT
??_R2CMatchInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CMatchInfoManager@@8 ; CMatchInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchInfoManager@@8
rdata$r	SEGMENT
??_R3CMatchInfoManager@@8 DD 00H			; CMatchInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchInfoManager@@@8
data$r	SEGMENT
??_R0?AVCMatchInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CMatchInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchInfoManager@@6B@
rdata$r	SEGMENT
??_R4CMatchInfoManager@@6B@ DD 00H			; CMatchInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchInfoManager@@@8
	DD	FLAT:??_R3CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRewardInfoBuffer@@8 DD FLAT:??_R0?AVCRewardInfoBuffer@@@8 ; CRewardInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R2CRewardInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CRewardInfoBuffer@@8 ; CRewardInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R3CRewardInfoBuffer@@8 DD 00H			; CRewardInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRewardInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCRewardInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@ ; CRewardInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRewardInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRewardInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CRewardInfoBuffer@@6B@ DD 00H			; CRewardInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRewardInfoBuffer@@@8
	DD	FLAT:??_R3CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchInfoBuffer@@8 DD FLAT:??_R0?AVCMatchInfoBuffer@@@8 ; CMatchInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R2CMatchInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CMatchInfoBuffer@@8 ; CMatchInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R3CMatchInfoBuffer@@8 DD 00H				; CMatchInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCMatchInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@	; CMatchInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CMatchInfoBuffer@@6B@ DD 00H			; CMatchInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchInfoBuffer@@@8
	DD	FLAT:??_R3CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD 00H ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KDOOOCPP@?S?N?O?$LH?$LB?H?H?$PM?E?d?V?C?$LD?I?$LJ?$KG@
CONST	SEGMENT
??_C@_0BB@KDOOOCPP@?S?N?O?$LH?$LB?H?H?$PM?E?d?V?C?$LD?I?$LJ?$KG@ DB 0d3H, 0ceH
	DB	0cfH, 0b7H, 0b1H, 0c8H, 0c8H, 0fcH, 0c5H, 0e4H, 0d6H, 0c3H, 0b3H
	DB	0c9H, 0b9H, 0a6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PKJCCBCJ@?S?N?O?$LH?$LB?H?H?$PM?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@
CONST	SEGMENT
??_C@_0BB@PKJCCBCJ@?S?N?O?$LH?$LB?H?H?$PM?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b1H, 0c8H, 0c8H, 0fcH, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0b3H, 0c9H, 0b9H, 0a6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LFIMABND@?$CF4d?9?$CF02d?9?$CF02d?5?9?9?5?$CF04d?9?$CF02d?9?$CF02d@
CONST	SEGMENT
??_C@_0CA@LFIMABND@?$CF4d?9?$CF02d?9?$CF02d?5?9?9?5?$CF04d?9?$CF02d?9?$CF02d@ DB '%'
	DB	'4d-%02d-%02d -- %04d-%02d-%02d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HLFOHCBE@?H?$KL?L?l24?P?$KB?J?$LB?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@
CONST	SEGMENT
??_C@_0BD@HLFOHCBE@?H?$KL?L?l24?P?$KB?J?$LB?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@ DB 0c8H
	DB	0abH, 0ccH, 0ecH, '24', 0d0H, 0a1H, 0caH, 0b1H, 0d1H, 0adH, 0bbH
	DB	0b7H, 0bfH, 0aaH, 0c8H, 0fcH, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ@4JA DD 0806H ; `CDlgMatchWizard::OnBnClickedFinish'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedNext@CDlgMatchWizard@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedNext@CDlgMatchWizard@@QAEXXZ@4JA DD 07faH ; `CDlgMatchWizard::OnBnClickedNext'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedLast@CDlgMatchWizard@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedLast@CDlgMatchWizard@@QAEXXZ@4JA DD 07edH ; `CDlgMatchWizard::OnBnClickedLast'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03IFADCKOJ@?$CFd?$HM@
CONST	SEGMENT
??_C@_03IFADCKOJ@?$CFd?$HM@ DB '%d|', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EKDNBKMI@?$CFI64d?$HM@
CONST	SEGMENT
??_C@_06EKDNBKMI@?$CFI64d?$HM@ DB '%I64d|', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PENPJMLD@?$LB?H?H?$PM?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@
CONST	SEGMENT
??_C@_0BN@PENPJMLD@?$LB?H?H?$PM?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@ DB 0b1H
	DB	0c8H, 0c8H, 0fcH, 0c5H, 0e4H, 0d6H, 0c3H, 0cfH, 0f2H, 0b5H, 0bcH
	DB	' --- [ ', 0b2H, 0bdH, 0d6H, 0e8H, ' %d ]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GNGDJPLC@?$LB?H?H?$PM?C?$PL?$LD?F?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD?$KB@
CONST	SEGMENT
??_C@_0BP@GNGDJPLC@?$LB?H?H?$PM?C?$PL?$LD?F?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD?$KB@ DB 0b1H
	DB	0c8H, 0c8H, 0fcH, 0c3H, 0fbH, 0b3H, 0c6H, 0b2H, 0bbH, 0c4H, 0dcH
	DB	0ceH, 0aaH, 0bfH, 0d5H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H
	DB	0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CAFEOLKF@?$LM?$LE?J?$LB?H?$PM?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_0L@CAFEOLKF@?$LM?$LE?J?$LB?H?$PM?$MA?$OA?P?M@ DB 0bcH, 0b4H, 0caH, 0b1H
	DB	0c8H, 0fcH, 0c0H, 0e0H, 0d0H, 0cdH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PPGJNCEH@?$LG?$KI?J?$LB?H?$PM?$MA?$OA?P?M@
CONST	SEGMENT
??_C@_0L@PPGJNCEH@?$LG?$KI?J?$LB?H?$PM?$MA?$OA?P?M@ DB 0b6H, 0a8H, 0caH, 0b1H
	DB	0c8H, 0fcH, 0c0H, 0e0H, 0d0H, 0cdH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOGGGCJG@?$LN?$LB?$MA?x?E?d?V?C@
CONST	SEGMENT
??_C@_08JOGGGCJG@?$LN?$LB?$MA?x?E?d?V?C@ DB 0bdH, 0b1H, 0c0H, 0f8H, 0c5H, 0e4H
	DB	0d6H, 0c3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08POFGBLDO@?$LE?i?W?$MA?E?d?V?C@
CONST	SEGMENT
??_C@_08POFGBLDO@?$LE?i?W?$MA?E?d?V?C@ DB 0b4H, 0e9H, 0d7H, 0c0H, 0c5H, 0e4H
	DB	0d6H, 0c3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLOMAJOJ@?E?E?C?$PL?$LH?$LN?J?$LN@
CONST	SEGMENT
??_C@_08NLOMAJOJ@?E?E?C?$PL?$LH?$LN?J?$LN@ DB 0c5H, 0c5H, 0c3H, 0fbH, 0b7H
	DB	0bdH, 0caH, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GGMHIHHC@?$LB?$KI?C?$PL?L?u?$LM?$PO@
CONST	SEGMENT
??_C@_08GGMHIHHC@?$LB?$KI?C?$PL?L?u?$LM?$PO@ DB 0b1H, 0a8H, 0c3H, 0fbH, 0ccH
	DB	0f5H, 0bcH, 0feH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08DNENCOFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN@
CONST	SEGMENT
??_C@_08DNENCOFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN@ DB 0b1H, 0a8H, 0c3H, 0fbH, 0b7H
	DB	0bdH, 0caH, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FLPJDOOI@?S?N?O?$LH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@FLPJDOOI@?S?N?O?$LH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0beH, 0d6H, 0caH, 0fdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JCEBBJJ@?$LD?u?J?$LM?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@JCEBBJJ@?$LD?u?J?$LM?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0b3H
	DB	0f5H, 0caH, 0bcH, 0b5H, 0d7H, 0b7H, 0d6H, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PEECONKK@?S?N?O?$LH?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@PEECONKK@?S?N?O?$LH?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0d3H
	DB	0ceH, 0cfH, 0b7H, 0b5H, 0d7H, 0b7H, 0d6H, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LAAIANED@?$LB?$KI?C?$PL?$LN?X?V?$LJ?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
CONST	SEGMENT
??_C@_0CF@LAAIANED@?$LB?$KI?C?$PL?$LN?X?V?$LJ?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ DB 0b1H
	DB	0a8H, 0c3H, 0fbH, 0bdH, 0d8H, 0d6H, 0b9H, 0caH, 0b1H, 0bcH, 0e4H
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H
	DB	0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DLMEACLJ@?$LB?$KI?C?$PL?$LN?X?V?$LJ?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
CONST	SEGMENT
??_C@_0CF@DLMEACLJ@?$LB?$KI?C?$PL?$LN?X?V?$LJ?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ DB 0b1H
	DB	0a8H, 0c3H, 0fbH, 0bdH, 0d8H, 0d6H, 0b9H, 0c8H, 0d5H, 0c6H, 0daH
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H
	DB	0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JHFPJNIO@?$LB?H?H?$PM?$LN?a?J?x?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
CONST	SEGMENT
??_C@_0CF@JHFPJNIO@?$LB?H?H?$PM?$LN?a?J?x?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ DB 0b1H
	DB	0c8H, 0c8H, 0fcH, 0bdH, 0e1H, 0caH, 0f8H, 0caH, 0b1H, 0bcH, 0e4H
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H
	DB	0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BMJDJCHE@?$LB?H?H?$PM?$LN?a?J?x?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
CONST	SEGMENT
??_C@_0CF@BMJDJCHE@?$LB?H?H?$PM?$LN?a?J?x?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ DB 0b1H
	DB	0c8H, 0c8H, 0fcH, 0bdH, 0e1H, 0caH, 0f8H, 0c8H, 0d5H, 0c6H, 0daH
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H
	DB	0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NBDOAMNH@?W?n?$LE?s?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@NBDOAMNH@?W?n?$LE?s?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0d7H
	DB	0eeH, 0b4H, 0f3H, 0beH, 0d6H, 0caH, 0fdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CNOBBOMH@?S?P?P?$KH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@CNOBBOMH@?S?P?P?$KH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0d3H
	DB	0d0H, 0d0H, 0a7H, 0beH, 0d6H, 0caH, 0fdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GLEENOFN@?$LD?u?J?$LM?$LH?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@GLEENOFN@?$LD?u?J?$LM?$LH?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0b3H
	DB	0f5H, 0caH, 0bcH, 0b7H, 0d6H, 0caH, 0fdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OLBIFNIB@?$LB?$KI?C?$PL?H?K?J?$PN?$LC?$LL?D?$NM?I?Y?S?Z?$LP?$KK?H?$PM?H?K?J?$PN?$KD?$KM?G?k?V?X?P@
CONST	SEGMENT
??_C@_0CH@OLBIFNIB@?$LB?$KI?C?$PL?H?K?J?$PN?$LC?$LL?D?$NM?I?Y?S?Z?$LP?$KK?H?$PM?H?K?J?$PN?$KD?$KM?G?k?V?X?P@ DB 0b1H
	DB	0a8H, 0c3H, 0fbH, 0c8H, 0cbH, 0caH, 0fdH, 0b2H, 0bbH, 0c4H, 0dcH
	DB	0c9H, 0d9H, 0d3H, 0daH, 0bfH, 0aaH, 0c8H, 0fcH, 0c8H, 0cbH, 0caH
	DB	0fdH, 0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H
	DB	0c8H, 0ebH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IBGJJLPI@?$LP?$KK?H?$PM?H?K?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
CONST	SEGMENT
??_C@_0CB@IBGJJLPI@?$LP?$KK?H?$PM?H?K?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@ DB 0bfH
	DB	0aaH, 0c8H, 0fcH, 0c8H, 0cbH, 0caH, 0fdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JJILHLAM@?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@
CONST	SEGMENT
??_C@_08JJILHLAM@?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@ DB 0d1H, 0adH, 0bbH, 0b7H, 0bfH
	DB	0aaH, 0c8H, 0fcH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08KONJAKGH@?$LD?$KD?$LJ?f?$LP?$KK?H?$PM@
CONST	SEGMENT
??_C@_08KONJAKGH@?$LD?$KD?$LJ?f?$LP?$KK?H?$PM@ DB 0b3H, 0a3H, 0b9H, 0e6H, 0bfH
	DB	0aaH, 0c8H, 0fcH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CBDLPBKG@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?$LC?$LL?$LE?f?T?Z?0?H?g?R?$KK?L?m@
CONST	SEGMENT
??_C@_0DG@CBDLPBKG@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?$LC?$LL?$LE?f?T?Z?0?H?g?R?$KK?L?m@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b8H, 0c3H, 0c3H, 0fbH, 0b4H, 0ceH
	DB	0b5H, 0c4H, 0bdH, 0b1H, 0c0H, 0f8H, 0b2H, 0bbH, 0b4H, 0e6H, 0d4H
	DB	0daH, ',', 0c8H, 0e7H, 0d2H, 0aaH, 0ccH, 0edH, 0bcH, 0d3H, 0c7H
	DB	0ebH, 0b5H, 0e3H, 0bbH, 0f7H, 0ccH, 0edH, 0bcH, 0d3H, 0bdH, 0b1H
	DB	0c0H, 0f8H, 0b0H, 0b4H, 0c5H, 0a5H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KCCJLHM@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?R?Q?$LE?f?T?Z?0?H?g?R?$KK?P?$NO@
CONST	SEGMENT
??_C@_0DG@KCCJLHM@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?R?Q?$LE?f?T?Z?0?H?g?R?$KK?P?$NO@ DB 0b1H
	DB	0a7H, 0c7H, 0b8H, 0a3H, 0acH, 0b8H, 0c3H, 0c3H, 0fbH, 0b4H, 0ceH
	DB	0b5H, 0c4H, 0bdH, 0b1H, 0c0H, 0f8H, 0d2H, 0d1H, 0b4H, 0e6H, 0d4H
	DB	0daH, ',', 0c8H, 0e7H, 0d2H, 0aaH, 0d0H, 0deH, 0b8H, 0c4H, 0c7H
	DB	0ebH, 0b5H, 0e3H, 0bbH, 0f7H, 0d0H, 0deH, 0b8H, 0c4H, 0bdH, 0b1H
	DB	0c0H, 0f8H, 0b0H, 0b4H, 0c5H, 0a5H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0a3H, 0bfH, 0e9H, 0b9H, 0dcH, 0c0H, 0edH, '\d'
	DB	'lgmatchwizard.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z@4JA DD 030aH ; `CDlgMatchReward::SetMatchRewardOption'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@JAINKKBO@?D?z?J?d?H?k?$LF?D?$LB?H?H?$PM?C?$PL?$LE?N?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
CONST	SEGMENT
??_C@_0CF@JAINKKBO@?D?z?J?d?H?k?$LF?D?$LB?H?H?$PM?C?$PL?$LE?N?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@ DB 0c4H
	DB	0faH, 0caH, 0e4H, 0c8H, 0ebH, 0b5H, 0c4H, 0b1H, 0c8H, 0c8H, 0fcH
	DB	0c3H, 0fbH, 0b4H, 0ceH, 0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H
	DB	0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0caH, 0e4H, 0c8H, 0ebH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NFBJEILB@?M?$LD?$LM?F?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?I?h?V?C?$KD@
CONST	SEGMENT
??_C@_0CB@NFBJEILB@?M?$LD?$LM?F?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?I?h?V?C?$KD@ DB 0cdH
	DB	0b3H, 0bcH, 0c6H, 0beH, 0d6H, 0caH, 0fdH, 0c9H, 0e8H, 0d6H, 0c3H
	DB	0b2H, 0bbH, 0baH, 0cfH, 0b7H, 0a8H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H
	DB	0d8H, 0d0H, 0c2H, 0c9H, 0e8H, 0d6H, 0c3H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GIIJOMAB@?$LM?$LE?J?$LB?H?$PM?$LC?$LL?D?$NM?Q?$KB?T?q?$LB?H?H?$PM?$LN?p?$LB?R?W?w?N?$KK?$LB?$KI?C?$PL?$LH@
CONST	SEGMENT
??_C@_0DB@GIIJOMAB@?$LM?$LE?J?$LB?H?$PM?$LC?$LL?D?$NM?Q?$KB?T?q?$LB?H?H?$PM?$LN?p?$LB?R?W?w?N?$KK?$LB?$KI?C?$PL?$LH@ DB 0bcH
	DB	0b4H, 0caH, 0b1H, 0c8H, 0fcH, 0b2H, 0bbH, 0c4H, 0dcH, 0d1H, 0a1H
	DB	0d4H, 0f1H, 0b1H, 0c8H, 0c8H, 0fcH, 0bdH, 0f0H, 0b1H, 0d2H, 0d7H
	DB	0f7H, 0ceH, 0aaH, 0b1H, 0a8H, 0c3H, 0fbH, 0b7H, 0bdH, 0caH, 0bdH
	DB	0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H, 0c2H, 0d1H, 0a1H, 0d4H
	DB	0f1H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MMLGHCLB@?D?z?Q?$KB?T?q?A?K?$LG?$KI?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@
CONST	SEGMENT
??_C@_0DN@MMLGHCLB@?D?z?Q?$KB?T?q?A?K?$LG?$KI?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@ DB 0c4H
	DB	0faH, 0d1H, 0a1H, 0d4H, 0f1H, 0c1H, 0cbH, 0b6H, 0a8H, 0caH, 0b1H
	DB	0c8H, 0fcH, 0d7H, 0f7H, 0ceH, 0aaH, 0b1H, 0c8H, 0c8H, 0fcH, 0d3H
	DB	0c3H, 0bbH, 0a7H, 0b5H, 0c4H, 0c0H, 0b4H, 0d4H, 0b4H, 0a3H, 0acH
	DB	0c9H, 0b8H, 0d1H, 0a1H, 0b7H, 0bdH, 0caH, 0bdH, 0b1H, 0d8H, 0d0H
	DB	0ebH, 0ceH, 0aaH, 0b1H, 0c8H, 0c8H, 0fcH, 0d7H, 0dcH, 0c5H, 0c5H
	DB	0c3H, 0fbH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@FFLEHDAN@?D?z?Q?$KB?T?q?A?K?$LM?$LE?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@
CONST	SEGMENT
??_C@_0DP@FFLEHDAN@?D?z?Q?$KB?T?q?A?K?$LM?$LE?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@ DB 0c4H
	DB	0faH, 0d1H, 0a1H, 0d4H, 0f1H, 0c1H, 0cbH, 0bcH, 0b4H, 0caH, 0b1H
	DB	0c8H, 0fcH, 0d7H, 0f7H, 0ceH, 0aaH, 0b1H, 0c8H, 0c8H, 0fcH, 0d3H
	DB	0c3H, 0bbH, 0a7H, 0b5H, 0c4H, 0c0H, 0b4H, 0d4H, 0b4H, 0a3H, 0acH
	DB	0c9H, 0b8H, 0d1H, 0a1H, 0b7H, 0bdH, 0caH, 0bdH, 0b1H, 0d8H, 0d0H
	DB	0ebH, 0ceH, 0aaH, 0b5H, 0a5H, 0c2H, 0d6H, 0b1H, 0c8H, 0c8H, 0fcH
	DB	0c5H, 0c5H, 0c3H, 0fbH, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@IJMPOAAP@?D?z?$LJ?$LE?Q?$KB?A?K?$LC?N?$LM?S?L?X?$LG?$KI?$LB?H?H?$PM?W?w?N?$KK?$LB?$KI?C?$PL?$LH?$LN?J@
CONST	SEGMENT
??_C@_0EJ@IJMPOAAP@?D?z?$LJ?$LE?Q?$KB?A?K?$LC?N?$LM?S?L?X?$LG?$KI?$LB?H?H?$PM?W?w?N?$KK?$LB?$KI?C?$PL?$LH?$LN?J@ DB 0c4H
	DB	0faH, 0b9H, 0b4H, 0d1H, 0a1H, 0c1H, 0cbH, 0b2H, 0ceH, 0bcH, 0d3H
	DB	0ccH, 0d8H, 0b6H, 0a8H, 0b1H, 0c8H, 0c8H, 0fcH, 0d7H, 0f7H, 0ceH
	DB	0aaH, 0b1H, 0a8H, 0c3H, 0fbH, 0b7H, 0bdH, 0caH, 0bdH, 0a3H, 0acH
	DB	0b1H, 0d8H, 0d0H, 0ebH, 0d1H, 0a1H, 0d4H, 0f1H, 0d2H, 0bbH, 0b3H
	DB	0a1H, 0c8H, 0fcH, 0caH, 0c2H, 0c0H, 0b4H, 0c8H, 0b7H, 0b6H, 0a8H
	DB	0b1H, 0c8H, 0c8H, 0fcH, 0d3H, 0c3H, 0bbH, 0a7H, 0b5H, 0c4H, 0c0H
	DB	0b4H, 0d4H, 0b4H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BGMCEKFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T?q?$KD?$KB@
CONST	SEGMENT
??_C@_0BP@BGMCEKFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T?q?$KD?$KB@ DB 0b1H
	DB	0a8H, 0c3H, 0fbH, 0b7H, 0bdH, 0caH, 0bdH, 0b2H, 0bbH, 0c4H, 0dcH
	DB	0ceH, 0aaH, 0bfH, 0d5H, 0a3H, 0acH, 0c7H, 0ebH, 0d6H, 0d8H, 0d0H
	DB	0c2H, 0d1H, 0a1H, 0d4H, 0f1H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
CONST	SEGMENT
??_C@_0BC@LFCAOGLK@ModuleManager?4dll@ DB 'ModuleManager.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDlgMatchWizard@@6B@
CONST	SEGMENT
??_7CDlgMatchWizard@@6B@ DD FLAT:??_R4CDlgMatchWizard@@6B@ ; CDlgMatchWizard::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchWizard@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchWizard@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchWizard@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchWizard@@UAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CDlgMatchWizardStep2@@6B@
CONST	SEGMENT
??_7CDlgMatchWizardStep2@@6B@ DD FLAT:??_R4CDlgMatchWizardStep2@@6B@ ; CDlgMatchWizardStep2::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchWizardStep2@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchWizardItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CDlgMatchWizardStep2@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchWizardStep2@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchWizardItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchWizardItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchWizardStep2@@UAE_NXZ
	DD	FLAT:?OnMatchItemActive@CDlgMatchWizardStep2@@UAEXXZ
	DD	FLAT:?RectifyControl@CDlgMatchWizardStep2@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchWizardStep1@@6B@
CONST	SEGMENT
??_7CDlgMatchWizardStep1@@6B@ DD FLAT:??_R4CDlgMatchWizardStep1@@6B@ ; CDlgMatchWizardStep1::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchWizardStep1@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchWizardStep1@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CDlgMatchWizardStep1@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchWizardStep1@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchWizardItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchWizardItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchWizardStep1@@UAE_NXZ
	DD	FLAT:?OnMatchItemActive@CDlgMatchWizardStep1@@UAEXXZ
	DD	FLAT:?RectifyControl@CDlgMatchWizardStep1@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchWizardItem@@6B@
CONST	SEGMENT
??_7CDlgMatchWizardItem@@6B@ DD FLAT:??_R4CDlgMatchWizardItem@@6B@ ; CDlgMatchWizardItem::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchWizardItem@@MAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchWizardItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchWizardItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchWizardItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CDlgMatchImmediate@@6B@
CONST	SEGMENT
??_7CDlgMatchImmediate@@6B@ DD FLAT:??_R4CDlgMatchImmediate@@6B@ ; CDlgMatchImmediate::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchImmediate@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchImmediate@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchImmediate@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchImmediate@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchLockTime@@6B@
CONST	SEGMENT
??_7CDlgMatchLockTime@@6B@ DD FLAT:??_R4CDlgMatchLockTime@@6B@ ; CDlgMatchLockTime::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchLockTime@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchLockTime@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchLockTime@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchLockTime@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchReward@@6B@
CONST	SEGMENT
??_7CDlgMatchReward@@6B@ DD FLAT:??_R4CDlgMatchReward@@6B@ ; CDlgMatchReward::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchReward@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchReward@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CDlgMatchReward@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchReward@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchReward@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchReward@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchRankingMode@@6B@
CONST	SEGMENT
??_7CDlgMatchRankingMode@@6B@ DD FLAT:??_R4CDlgMatchRankingMode@@6B@ ; CDlgMatchRankingMode::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchRankingMode@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchRankingMode@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchRankingMode@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchRankingMode@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchRankingMode@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchDistribute@@6B@
CONST	SEGMENT
??_7CDlgMatchDistribute@@6B@ DD FLAT:??_R4CDlgMatchDistribute@@6B@ ; CDlgMatchDistribute::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchDistribute@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchDistribute@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchDistribute@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchDistribute@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchSignup2@@6B@
CONST	SEGMENT
??_7CDlgMatchSignup2@@6B@ DD FLAT:??_R4CDlgMatchSignup2@@6B@ ; CDlgMatchSignup2::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchSignup2@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchSignup2@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchSignup2@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchSignup2@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchSignup1@@6B@
CONST	SEGMENT
??_7CDlgMatchSignup1@@6B@ DD FLAT:??_R4CDlgMatchSignup1@@6B@ ; CDlgMatchSignup1::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchSignup1@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchSignup1@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgMatchSignup1@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:?SaveInputInfo@CDlgMatchSignup1@@MAE_NXZ
	DD	FLAT:?RectifyControl@CDlgMatchSignup1@@MAEXHH@Z
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchSignup1@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CDlgMatchItem@@6B@
CONST	SEGMENT
??_7CDlgMatchItem@@6B@ DD FLAT:??_R4CDlgMatchItem@@6B@	; CDlgMatchItem::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgMatchItem@@MAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDialog@@UAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?OnCancel@CDlgMatchItem@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
CONST	ENDS
;	COMDAT ??_7CMatchInfoManager@@6B@
CONST	SEGMENT
??_7CMatchInfoManager@@6B@ DD FLAT:??_R4CMatchInfoManager@@6B@ ; CMatchInfoManager::`vftable'
	DD	FLAT:??_ECMatchInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRewardInfoBuffer@@6B@
CONST	SEGMENT
??_7CRewardInfoBuffer@@6B@ DD FLAT:??_R4CRewardInfoBuffer@@6B@ ; CRewardInfoBuffer::`vftable'
	DD	FLAT:??_ECRewardInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CMatchInfoBuffer@@6B@
CONST	SEGMENT
??_7CMatchInfoBuffer@@6B@ DD FLAT:??_R4CMatchInfoBuffer@@6B@ ; CMatchInfoBuffer::`vftable'
	DD	FLAT:??_ECMatchInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$r	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$r	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CDialog@@8
rdata$r	SEGMENT
??_R2CDialog@@8 DD FLAT:??_R1A@?0A@EA@CDialog@@8	; CDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialog@@8
rdata$r	SEGMENT
??_R3CDialog@@8 DD 00H					; CDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
data$r	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA DD 025fH ; `ATL::CTime::GetLocalTm'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@NHHHCKNA@?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1@
CONST	SEGMENT
??_C@_1BK@NHHHCKNA@?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1@ DB 'm'
	DB	00H, '_', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA DD 01adH ; `ATL::CTime::CTime'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@ DB 'AtlThrow: hr = 0x'
	DB	'%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\atlexcept.h', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA DD 041H	; `ATL::AtlThrowImpl'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchWizard@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$3
__ehfuncinfo$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z$0
__ehfuncinfo$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnInitDialog@CDlgMatchWizard@@UAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnInitDialog@CDlgMatchWizard@@UAEHXZ$0
__ehfuncinfo$?OnInitDialog@CDlgMatchWizard@@UAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnInitDialog@CDlgMatchWizard@@UAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CDlgMatchWizard@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CDlgMatchWizard@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CDlgMatchWizard@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchWizardStep2@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDlgMatchWizardStep2@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep2@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep2@@QAE@XZ$1
__ehfuncinfo$??0CDlgMatchWizardStep2@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDlgMatchWizardStep2@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchWizardStep1@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CDlgMatchWizardStep1@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CDlgMatchWizardStep1@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CDlgMatchWizardStep1@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchWizardItem@@MAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchImmediate@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchLockTime@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchReward@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDlgMatchReward@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgMatchReward@@QAE@XZ$0
__ehfuncinfo$??0CDlgMatchReward@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDlgMatchReward@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchRankingMode@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchDistribute@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchSignup2@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchSignup1@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgMatchItem@@MAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECRewardInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0
__ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1
__ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ PROC		; _snprintf_s<64>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	6a 40		 push	 64			; 00000040H
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vsnprintf_s
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ ENDP		; _snprintf_s<64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchWizard@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchWizard@@UAEPAXI@Z PROC			; CDlgMatchWizard::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchWizard@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 88 0b 00 00	 push	 2952			; 00000b88H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 88 0b
	00 00		 imul	 ecx, DWORD PTR [eax-4], 2952
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 88 0b 00 00	 push	 2952			; 00000b88H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchWizard@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchWizard@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchWizard@@UAEPAXI@Z ENDP			; CDlgMatchWizard::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchWizard@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchWizard@@UAEPAXI@Z PROC			; CDlgMatchWizard::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 88 0b 00 00	 push	 2952			; 00000b88H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchWizard@@UAEPAXI@Z ENDP			; CDlgMatchWizard::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMessageMap@CDlgMatchWizard@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgMatchWizard@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchWizard::GetMessageMap, COMDAT
; _this$ = ecx

; 41   : BEGIN_MESSAGE_MAP(CDlgMatchWizard, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchWizard::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgMatchWizard@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchWizard::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchWizard::GetThisMessageMap, COMDAT

; 41   : BEGIN_MESSAGE_MAP(CDlgMatchWizard, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 42   : 	ON_BN_CLICKED(IDC_LAST, OnBnClickedLast)
; 43   : 	ON_BN_CLICKED(IDC_NEXT, OnBnClickedNext)
; 44   : 	ON_BN_CLICKED(IDC_FINISH, OnBnClickedFinish)
; 45   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgMatchWizard@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchWizard::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ
_TEXT	SEGMENT
_MatchInfoManager$ = -3028				; size = 4
_GameMatchResult$ = -3024				; size = 712
_pLockTimeMatch$2 = -2312				; size = 4
_strRewardExperience$ = -2308				; size = 4
_strRewardIngot$ = -2304				; size = 4
_strRewardGold$ = -2300					; size = 4
_CreateMatchInfo$ = -2296				; size = 2272
_i$3 = -24						; size = 2
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ PROC		; CDlgMatchWizard::OnBnClickedFinish, COMDAT
; _this$ = ecx

; 2054 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 48 0d 00
	00		 sub	 esp, 3400		; 00000d48H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2055 : 	//保存设置
; 2056 : 	ASSERT(m_wActiveIndex>=1);

  00031	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00034	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0003b	83 f9 01	 cmp	 ecx, 1
  0003e	7d 19		 jge	 SHORT $LN14@OnBnClicke
  00040	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ@4JA
  00046	83 c2 02	 add	 edx, 2
  00049	52		 push	 edx
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN14@OnBnClicke
  00058	cc		 int	 3
$LN14@OnBnClicke:

; 2057 : 	if (m_pWizardItem[m_wActiveIndex]->SaveItemData()==false) return;

  00059	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00063	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0006d	e8 00 00 00 00	 call	 ?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ ; CDlgMatchWizardItem::SaveItemData
  00072	0f b6 c0	 movzx	 eax, al
  00075	85 c0		 test	 eax, eax
  00077	75 05		 jne	 SHORT $LN5@OnBnClicke
  00079	e9 4e 05 00 00	 jmp	 $LN1@OnBnClicke
$LN5@OnBnClicke:

; 2058 : 
; 2059 : 	//保存子项
; 2060 : 	for (WORD i=0;i<CountArray(m_pWizardItem);i++)

  0007e	33 c0		 xor	 eax, eax
  00080	66 89 45 e8	 mov	 WORD PTR _i$3[ebp], ax
  00084	eb 0c		 jmp	 SHORT $LN4@OnBnClicke
$LN2@OnBnClicke:
  00086	66 8b 45 e8	 mov	 ax, WORD PTR _i$3[ebp]
  0008a	66 83 c0 01	 add	 ax, 1
  0008e	66 89 45 e8	 mov	 WORD PTR _i$3[ebp], ax
$LN4@OnBnClicke:
  00092	0f b7 45 e8	 movzx	 eax, WORD PTR _i$3[ebp]
  00096	83 f8 02	 cmp	 eax, 2
  00099	73 3f		 jae	 SHORT $LN3@OnBnClicke

; 2061 : 	{
; 2062 : 		if ((m_pWizardItem[i]!=NULL)&&(m_pWizardItem[i]->SaveItemData()==false))

  0009b	0f b7 45 e8	 movzx	 eax, WORD PTR _i$3[ebp]
  0009f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	83 bc 81 ac 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+172], 0
  000aa	74 2c		 je	 SHORT $LN6@OnBnClicke
  000ac	0f b7 45 e8	 movzx	 eax, WORD PTR _i$3[ebp]
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 8c 81 ac 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+172]
  000ba	e8 00 00 00 00	 call	 ?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ ; CDlgMatchWizardItem::SaveItemData
  000bf	0f b6 d0	 movzx	 edx, al
  000c2	85 d2		 test	 edx, edx
  000c4	75 12		 jne	 SHORT $LN6@OnBnClicke

; 2063 : 		{
; 2064 : 			ActiveWizardItem(i);

  000c6	0f b7 45 e8	 movzx	 eax, WORD PTR _i$3[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z ; CDlgMatchWizard::ActiveWizardItem

; 2065 : 			return;

  000d3	e9 f4 04 00 00	 jmp	 $LN1@OnBnClicke
$LN6@OnBnClicke:

; 2066 : 		}
; 2067 : 	}

  000d8	eb ac		 jmp	 SHORT $LN2@OnBnClicke
$LN3@OnBnClicke:

; 2068 : 
; 2069 : 	//房间信息
; 2070 : 	tagCreateMatchInfo CreateMatchInfo;
; 2071 : 	ZeroMemory(&CreateMatchInfo,sizeof(CreateMatchInfo));

  000da	68 e0 08 00 00	 push	 2272			; 000008e0H
  000df	6a 00		 push	 0
  000e1	8d 85 08 f7 ff
	ff		 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 _memset
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2072 : 
; 2073 : 	//基础信息
; 2074 : 	CreateMatchInfo.wKindID=m_wKindID;

  000f0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	66 8b 88 b4 00
	00 00		 mov	 cx, WORD PTR [eax+180]
  000fa	66 89 8d 08 f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp], cx

; 2075 : 	CreateMatchInfo.dwMatchID=m_GameMatchOption.dwMatchID;

  00101	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  0010a	89 8d 0c f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+4], ecx

; 2076 : 	CreateMatchInfo.lMatchNo=m_GameMatchOption.lMatchNo;	

  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 88 18 01 00
	00		 mov	 ecx, DWORD PTR [eax+280]
  00119	89 8d 10 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+8], ecx
  0011f	8b 90 1c 01 00
	00		 mov	 edx, DWORD PTR [eax+284]
  00125	89 95 14 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+12], edx

; 2077 : 	CreateMatchInfo.cbMatchType=m_GameMatchOption.cbMatchType;	

  0012b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8a 88 21 01 00
	00		 mov	 cl, BYTE PTR [eax+289]
  00134	88 8d 18 f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+16], cl

; 2078 : 
; 2079 : 	//报名信息
; 2080 : 	CreateMatchInfo.cbFeeType=m_GameMatchOption.cbFeeType;	

  0013a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8a 88 42 01 00
	00		 mov	 cl, BYTE PTR [eax+322]
  00143	88 8d 79 f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+113], cl

; 2081 : 	CreateMatchInfo.lSignupFee=m_GameMatchOption.lSignupFee;

  00149	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	8b 88 48 01 00
	00		 mov	 ecx, DWORD PTR [eax+328]
  00152	89 8d 80 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+120], ecx
  00158	8b 90 4c 01 00
	00		 mov	 edx, DWORD PTR [eax+332]
  0015e	89 95 84 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+124], edx

; 2082 : 	CreateMatchInfo.cbDeductArea=m_GameMatchOption.cbDeductArea;

  00164	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00167	8a 88 43 01 00
	00		 mov	 cl, BYTE PTR [eax+323]
  0016d	88 8d 7a f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+114], cl

; 2083 : 	CreateMatchInfo.cbSignupMode=m_GameMatchOption.cbSignupMode;	

  00173	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00176	8a 88 50 01 00
	00		 mov	 cl, BYTE PTR [eax+336]
  0017c	88 8d 88 f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+128], cl

; 2084 : 	CreateMatchInfo.cbJoinCondition=m_GameMatchOption.cbJoinCondition;	

  00182	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00185	8a 88 51 01 00
	00		 mov	 cl, BYTE PTR [eax+337]
  0018b	88 8d 89 f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+129], cl

; 2085 : 	CreateMatchInfo.cbMemberOrder=m_GameMatchOption.cbMemberOrder;	

  00191	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00194	8a 88 52 01 00
	00		 mov	 cl, BYTE PTR [eax+338]
  0019a	88 8d 8a f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+130], cl

; 2086 : 	CreateMatchInfo.dwExperience=m_GameMatchOption.dwExperience;	

  001a0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  001a9	89 8d 8c f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+132], ecx

; 2087 : 	CreateMatchInfo.dwFromMatchID=m_GameMatchOption.dwFromMatchID;	

  001af	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 88 58 01 00
	00		 mov	 ecx, DWORD PTR [eax+344]
  001b8	89 8d 90 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+136], ecx

; 2088 : 	CreateMatchInfo.cbFilterType=m_GameMatchOption.cbFilterType;

  001be	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c1	8a 88 5c 01 00
	00		 mov	 cl, BYTE PTR [eax+348]
  001c7	88 8d 94 f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+140], cl

; 2089 : 	CreateMatchInfo.wMaxRankID=m_GameMatchOption.wMaxRankID;	

  001cd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001d0	66 8b 88 5e 01
	00 00		 mov	 cx, WORD PTR [eax+350]
  001d7	66 89 8d 96 f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp+142], cx

; 2090 : 	CreateMatchInfo.MatchEndDate=m_GameMatchOption.MatchEndDate;

  001de	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001e1	05 60 01 00 00	 add	 eax, 352		; 00000160H
  001e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e8	89 8d 98 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+144], ecx
  001ee	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001f1	89 95 9c f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+148], edx
  001f7	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001fa	89 8d a0 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+152], ecx
  00200	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00203	89 95 a4 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+156], edx

; 2091 : 	CreateMatchInfo.MatchStartDate=m_GameMatchOption.MatchStartDate;

  00209	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0020c	05 70 01 00 00	 add	 eax, 368		; 00000170H
  00211	8b 08		 mov	 ecx, DWORD PTR [eax]
  00213	89 8d a8 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+160], ecx
  00219	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021c	89 95 ac f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+164], edx
  00222	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00225	89 8d b0 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+168], ecx
  0022b	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0022e	89 95 b4 f7 ff
	ff		 mov	 DWORD PTR _CreateMatchInfo$[ebp+172], edx

; 2092 : 
; 2093 : 	//排名方式
; 2094 : 	CreateMatchInfo.cbRankingMode=m_GameMatchOption.cbRankingMode;

  00234	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00237	8a 88 80 01 00
	00		 mov	 cl, BYTE PTR [eax+384]
  0023d	88 8d b8 f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+176], cl

; 2095 : 	CreateMatchInfo.wCountInnings=m_GameMatchOption.wCountInnings;

  00243	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00246	66 8b 88 82 01
	00 00		 mov	 cx, WORD PTR [eax+386]
  0024d	66 89 8d ba f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp+178], cx

; 2096 : 	CreateMatchInfo.cbFilterGradesMode=m_GameMatchOption.cbFilterGradesMode;

  00254	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00257	8a 88 84 01 00
	00		 mov	 cl, BYTE PTR [eax+388]
  0025d	88 8d bc f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+180], cl

; 2097 : 
; 2098 : 	//拷贝信息
; 2099 : 	lstrcpyn(CreateMatchInfo.szMatchName,m_GameMatchOption.szMatchName,CountArray(CreateMatchInfo.szMatchName));

  00263	6a 20		 push	 32			; 00000020H
  00265	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00268	05 22 01 00 00	 add	 eax, 290		; 00000122H
  0026d	50		 push	 eax
  0026e	8d 8d 19 f7 ff
	ff		 lea	 ecx, DWORD PTR _CreateMatchInfo$[ebp+17]
  00274	51		 push	 ecx
  00275	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2100 : 
; 2101 : 	//分组配置
; 2102 : 	CreateMatchInfo.cbDistributeRule=m_GameMatchOption.cbDistributeRule;

  0027b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0027e	8a 88 85 01 00
	00		 mov	 cl, BYTE PTR [eax+389]
  00284	88 8d bd f7 ff
	ff		 mov	 BYTE PTR _CreateMatchInfo$[ebp+181], cl

; 2103 : 	CreateMatchInfo.wMinDistributeUser=m_GameMatchOption.wMinDistributeUser;

  0028a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0028d	66 8b 88 86 01
	00 00		 mov	 cx, WORD PTR [eax+390]
  00294	66 89 8d be f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp+182], cx

; 2104 : 	CreateMatchInfo.wDistributeTimeSpace=m_GameMatchOption.wDistributeTimeSpace;

  0029b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0029e	66 8b 88 88 01
	00 00		 mov	 cx, WORD PTR [eax+392]
  002a5	66 89 8d c0 f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp+184], cx

; 2105 : 	CreateMatchInfo.wMinPartakeGameUser=m_GameMatchOption.wMinPartakeGameUser;

  002ac	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002af	66 8b 88 8a 01
	00 00		 mov	 cx, WORD PTR [eax+394]
  002b6	66 89 8d c2 f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp+186], cx

; 2106 : 	CreateMatchInfo.wMaxPartakeGameUser=m_GameMatchOption.wMaxPartakeGameUser;

  002bd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002c0	66 8b 88 8c 01
	00 00		 mov	 cx, WORD PTR [eax+396]
  002c7	66 89 8d c4 f7
	ff ff		 mov	 WORD PTR _CreateMatchInfo$[ebp+188], cx

; 2107 : 
; 2108 : 	//转换奖励
; 2109 : 	CString strRewardGold,strRewardIngot,strRewardExperience;

  002ce	8d 8d 04 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardGold$[ebp]
  002d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002da	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002e1	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  002e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002ed	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002f1	8d 8d fc f6 ff
	ff		 lea	 ecx, DWORD PTR _strRewardExperience$[ebp]
  002f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002fd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 2110 : 	TransferMatchReward(strRewardGold,strRewardIngot,strRewardExperience);

  00301	8d 85 fc f6 ff
	ff		 lea	 eax, DWORD PTR _strRewardExperience$[ebp]
  00307	50		 push	 eax
  00308	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  0030e	51		 push	 ecx
  0030f	8d 95 04 f7 ff
	ff		 lea	 edx, DWORD PTR _strRewardGold$[ebp]
  00315	52		 push	 edx
  00316	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00319	e8 00 00 00 00	 call	 ?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z ; CDlgMatchWizard::TransferMatchReward

; 2111 : 
; 2112 : 	//比赛奖励
; 2113 : 	lstrcpyn(CreateMatchInfo.szRewardGold,strRewardGold,CountArray(CreateMatchInfo.szRewardGold));

  0031e	68 00 02 00 00	 push	 512			; 00000200H
  00323	8d 8d 04 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardGold$[ebp]
  00329	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0032f	50		 push	 eax
  00330	8d 85 c6 f7 ff
	ff		 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp+190]
  00336	50		 push	 eax
  00337	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2114 : 	lstrcpyn(CreateMatchInfo.szRewardIngot,strRewardIngot,CountArray(CreateMatchInfo.szRewardIngot));

  0033d	68 00 02 00 00	 push	 512			; 00000200H
  00342	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  00348	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0034e	50		 push	 eax
  0034f	8d 85 c6 f9 ff
	ff		 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp+702]
  00355	50		 push	 eax
  00356	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2115 : 	lstrcpyn(CreateMatchInfo.szRewardExperience,strRewardExperience,CountArray(CreateMatchInfo.szRewardExperience));

  0035c	68 00 02 00 00	 push	 512			; 00000200H
  00361	8d 8d fc f6 ff
	ff		 lea	 ecx, DWORD PTR _strRewardExperience$[ebp]
  00367	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0036d	50		 push	 eax
  0036e	8d 85 c6 fb ff
	ff		 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp+1214]
  00374	50		 push	 eax
  00375	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 2116 : 
; 2117 : 	//扩展配置
; 2118 : 	CWHService::GetMachineID(CreateMatchInfo.szServiceMachine);

  0037b	8d 45 c6	 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp+2238]
  0037e	50		 push	 eax
  0037f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetMachineID@CWHService@@SA_NQAD@Z
  00385	83 c4 04	 add	 esp, 4

; 2119 : 	CopyMemory(&CreateMatchInfo.cbMatchRule,&m_GameMatchOption.cbMatchRule,sizeof(CreateMatchInfo.cbMatchRule));

  00388	68 00 02 00 00	 push	 512			; 00000200H
  0038d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00390	05 8e 01 00 00	 add	 eax, 398		; 0000018eH
  00395	50		 push	 eax
  00396	8d 8d c6 fd ff
	ff		 lea	 ecx, DWORD PTR _CreateMatchInfo$[ebp+1726]
  0039c	51		 push	 ecx
  0039d	e8 00 00 00 00	 call	 _memcpy
  003a2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2120 : 
; 2121 : 	//比赛时间
; 2122 : 	if (CreateMatchInfo.cbMatchType==MATCH_TYPE_IMMEDIATE)

  003a5	0f b6 85 18 f7
	ff ff		 movzx	 eax, BYTE PTR _CreateMatchInfo$[ebp+16]
  003ac	83 f8 01	 cmp	 eax, 1
  003af	75 14		 jne	 SHORT $LN7@OnBnClicke

; 2123 : 	{
; 2124 : 		lstrcpyn(CreateMatchInfo.szMatchDate,TEXT("全天24小时循环开赛"),CountArray(CreateMatchInfo.szMatchDate));

  003b1	6a 40		 push	 64			; 00000040H
  003b3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HLFOHCBE@?H?$KL?L?l24?P?$KB?J?$LB?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@
  003b8	8d 85 39 f7 ff
	ff		 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp+49]
  003be	50		 push	 eax
  003bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN7@OnBnClicke:

; 2125 : 	}
; 2126 : 
; 2127 : 	//比赛时间
; 2128 : 	if (CreateMatchInfo.cbMatchType==MATCH_TYPE_LOCKTIME)

  003c5	0f b6 85 18 f7
	ff ff		 movzx	 eax, BYTE PTR _CreateMatchInfo$[ebp+16]
  003cc	85 c0		 test	 eax, eax
  003ce	75 66		 jne	 SHORT $LN8@OnBnClicke

; 2129 : 	{
; 2130 : 		tagLockTimeMatch * pLockTimeMatch=(tagLockTimeMatch *)m_GameMatchOption.cbMatchRule;

  003d0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003d3	05 8e 01 00 00	 add	 eax, 398		; 0000018eH
  003d8	89 85 f8 f6 ff
	ff		 mov	 DWORD PTR _pLockTimeMatch$2[ebp], eax

; 2131 : 		_sntprintf_s(CreateMatchInfo.szMatchDate,CountArray(CreateMatchInfo.szMatchDate),TEXT("%4d-%02d-%02d -- %04d-%02d-%02d"),pLockTimeMatch->MatchStartTime.wYear,pLockTimeMatch->MatchStartTime.wMonth,pLockTimeMatch->MatchStartTime.wDay,pLockTimeMatch->MatchEndTime.wYear,pLockTimeMatch->MatchEndTime.wMonth,pLockTimeMatch->MatchEndTime.wDay);

  003de	8b 85 f8 f6 ff
	ff		 mov	 eax, DWORD PTR _pLockTimeMatch$2[ebp]
  003e4	0f b7 48 1a	 movzx	 ecx, WORD PTR [eax+26]
  003e8	51		 push	 ecx
  003e9	8b 95 f8 f6 ff
	ff		 mov	 edx, DWORD PTR _pLockTimeMatch$2[ebp]
  003ef	0f b7 42 16	 movzx	 eax, WORD PTR [edx+22]
  003f3	50		 push	 eax
  003f4	8b 8d f8 f6 ff
	ff		 mov	 ecx, DWORD PTR _pLockTimeMatch$2[ebp]
  003fa	0f b7 51 14	 movzx	 edx, WORD PTR [ecx+20]
  003fe	52		 push	 edx
  003ff	8b 85 f8 f6 ff
	ff		 mov	 eax, DWORD PTR _pLockTimeMatch$2[ebp]
  00405	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00409	51		 push	 ecx
  0040a	8b 95 f8 f6 ff
	ff		 mov	 edx, DWORD PTR _pLockTimeMatch$2[ebp]
  00410	0f b7 42 06	 movzx	 eax, WORD PTR [edx+6]
  00414	50		 push	 eax
  00415	8b 8d f8 f6 ff
	ff		 mov	 ecx, DWORD PTR _pLockTimeMatch$2[ebp]
  0041b	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0041f	52		 push	 edx
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LFIMABND@?$CF4d?9?$CF02d?9?$CF02d?5?9?9?5?$CF04d?9?$CF02d?9?$CF02d@
  00425	6a 40		 push	 64			; 00000040H
  00427	8d 85 39 f7 ff
	ff		 lea	 eax, DWORD PTR _CreateMatchInfo$[ebp+49]
  0042d	50		 push	 eax
  0042e	e8 00 00 00 00	 call	 ??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ ; _snprintf_s<64>
  00433	83 c4 24	 add	 esp, 36			; 00000024H
$LN8@OnBnClicke:

; 2132 : 	}
; 2133 : 
; 2134 : 	//变量定义
; 2135 : 	tagGameMatchOption GameMatchResult;
; 2136 : 	CMatchInfoManager MatchInfoManager;

  00436	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  0043c	e8 00 00 00 00	 call	 ??0CMatchInfoManager@@QAE@XZ ; CMatchInfoManager::CMatchInfoManager
  00441	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 2137 : 	
; 2138 : 	//插入比赛
; 2139 : 	if (CreateMatchInfo.dwMatchID==0)

  00445	83 bd 0c f7 ff
	ff 00		 cmp	 DWORD PTR _CreateMatchInfo$[ebp+4], 0
  0044c	75 77		 jne	 SHORT $LN9@OnBnClicke

; 2140 : 	{
; 2141 : 		if (MatchInfoManager.InsertGameMatchOption(&CreateMatchInfo,GameMatchResult)==false) return;

  0044e	8d 85 30 f4 ff
	ff		 lea	 eax, DWORD PTR _GameMatchResult$[ebp]
  00454	50		 push	 eax
  00455	8d 8d 08 f7 ff
	ff		 lea	 ecx, DWORD PTR _CreateMatchInfo$[ebp]
  0045b	51		 push	 ecx
  0045c	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00462	e8 00 00 00 00	 call	 ?InsertGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::InsertGameMatchOption
  00467	0f b6 d0	 movzx	 edx, al
  0046a	85 d2		 test	 edx, edx
  0046c	75 47		 jne	 SHORT $LN10@OnBnClicke
  0046e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00472	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00478	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  0047d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00481	8d 8d fc f6 ff
	ff		 lea	 ecx, DWORD PTR _strRewardExperience$[ebp]
  00487	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0048d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00491	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  00497	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0049d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004a4	8d 8d 04 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardGold$[ebp]
  004aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  004b0	e9 17 01 00 00	 jmp	 $LN1@OnBnClicke
$LN10@OnBnClicke:

; 2142 : 
; 2143 : 		//提示消息
; 2144 : 		CTraceService::TraceString(TEXT("游戏比赛创建成功"),TraceLevel_Normal);

  004b5	6a 01		 push	 1
  004b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PKJCCBCJ@?S?N?O?$LH?$LB?H?H?$PM?$LE?$LE?$LN?$KI?$LD?I?$LJ?$KG@
  004bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  004c2	83 c4 08	 add	 esp, 8
$LN9@OnBnClicke:

; 2145 : 	}
; 2146 : 
; 2147 : 	//修改比赛
; 2148 : 	if (CreateMatchInfo.dwMatchID!=0)

  004c5	83 bd 0c f7 ff
	ff 00		 cmp	 DWORD PTR _CreateMatchInfo$[ebp+4], 0
  004cc	74 77		 je	 SHORT $LN11@OnBnClicke

; 2149 : 	{
; 2150 : 		//修改房间
; 2151 : 		if (MatchInfoManager.ModifyGameMatchOption(&CreateMatchInfo,GameMatchResult)==false) return;

  004ce	8d 85 30 f4 ff
	ff		 lea	 eax, DWORD PTR _GameMatchResult$[ebp]
  004d4	50		 push	 eax
  004d5	8d 8d 08 f7 ff
	ff		 lea	 ecx, DWORD PTR _CreateMatchInfo$[ebp]
  004db	51		 push	 ecx
  004dc	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  004e2	e8 00 00 00 00	 call	 ?ModifyGameMatchOption@CMatchInfoManager@@QAE_NPAUtagCreateMatchInfo@@AAUtagGameMatchOption@@@Z ; CMatchInfoManager::ModifyGameMatchOption
  004e7	0f b6 d0	 movzx	 edx, al
  004ea	85 d2		 test	 edx, edx
  004ec	75 47		 jne	 SHORT $LN12@OnBnClicke
  004ee	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  004f2	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  004f8	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  004fd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00501	8d 8d fc f6 ff
	ff		 lea	 ecx, DWORD PTR _strRewardExperience$[ebp]
  00507	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0050d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00511	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  00517	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0051d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00524	8d 8d 04 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardGold$[ebp]
  0052a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00530	e9 97 00 00 00	 jmp	 $LN1@OnBnClicke
$LN12@OnBnClicke:

; 2152 : 
; 2153 : 		//提示消息
; 2154 : 		CTraceService::TraceString(TEXT("游戏比赛配置成功"),TraceLevel_Normal);

  00535	6a 01		 push	 1
  00537	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KDOOOCPP@?S?N?O?$LH?$LB?H?H?$PM?E?d?V?C?$LD?I?$LJ?$KG@
  0053c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00542	83 c4 08	 add	 esp, 8
$LN11@OnBnClicke:

; 2155 : 	}
; 2156 : 
; 2157 : 	//设置标识
; 2158 : 	m_GameMatchOption.dwMatchID=GameMatchResult.dwMatchID;

  00545	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00548	8b 8d 30 f4 ff
	ff		 mov	 ecx, DWORD PTR _GameMatchResult$[ebp]
  0054e	89 88 10 01 00
	00		 mov	 DWORD PTR [eax+272], ecx

; 2159 : 
; 2160 : 	//比赛奖励
; 2161 : 	m_GameMatchOption.wRewardCount=GameMatchResult.wRewardCount;

  00554	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00557	66 8b 8d ae f6
	ff ff		 mov	 cx, WORD PTR _GameMatchResult$[ebp+638]
  0055e	66 89 88 8e 03
	00 00		 mov	 WORD PTR [eax+910], cx

; 2162 : 	CopyMemory(m_GameMatchOption.MatchRewardInfo,GameMatchResult.MatchRewardInfo,sizeof(m_GameMatchOption.MatchRewardInfo));

  00565	6a 42		 push	 66			; 00000042H
  00567	8d 85 b0 f6 ff
	ff		 lea	 eax, DWORD PTR _GameMatchResult$[ebp+640]
  0056d	50		 push	 eax
  0056e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00571	81 c1 90 03 00
	00		 add	 ecx, 912		; 00000390H
  00577	51		 push	 ecx
  00578	e8 00 00 00 00	 call	 _memcpy
  0057d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2163 : 
; 2164 : 	//关闭窗口
; 2165 : 	EndDialog(IDOK);

  00580	6a 01		 push	 1
  00582	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00585	e8 00 00 00 00	 call	 ?EndDialog@CDialog@@QAEXH@Z ; CDialog::EndDialog

; 2166 : 
; 2167 : 	return;

  0058a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0058e	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00594	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00599	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0059d	8d 8d fc f6 ff
	ff		 lea	 ecx, DWORD PTR _strRewardExperience$[ebp]
  005a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  005a9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  005ad	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  005b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  005b9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005c0	8d 8d 04 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardGold$[ebp]
  005c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN1@OnBnClicke:

; 2168 : }

  005cc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005cf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  005d6	59		 pop	 ecx
  005d7	5f		 pop	 edi
  005d8	5e		 pop	 esi
  005d9	5b		 pop	 ebx
  005da	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005dd	33 cd		 xor	 ecx, ebp
  005df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005e4	8b e5		 mov	 esp, ebp
  005e6	5d		 pop	 ebp
  005e7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$0:
  00000	8d 8d 04 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardGold$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$1:
  0000c	8d 8d 00 f7 ff
	ff		 lea	 ecx, DWORD PTR _strRewardIngot$[ebp]
  00012	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$2:
  00018	8d 8d fc f6 ff
	ff		 lea	 ecx, DWORD PTR _strRewardExperience$[ebp]
  0001e	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ$3:
  00024	8d 8d 2c f4 ff
	ff		 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  0002a	e9 00 00 00 00	 jmp	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
__ehhandler$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ:
  0002f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00033	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00036	8b 8a a8 f2 ff
	ff		 mov	 ecx, DWORD PTR [edx-3416]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00046	33 c8		 xor	 ecx, eax
  00048	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ
  00052	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ ENDP		; CDlgMatchWizard::OnBnClickedFinish
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnBnClickedNext@CDlgMatchWizard@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedNext@CDlgMatchWizard@@QAEXXZ PROC		; CDlgMatchWizard::OnBnClickedNext, COMDAT
; _this$ = ecx

; 2042 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2043 : 	//效验参数
; 2044 : 	ASSERT((m_wActiveIndex+1)<CountArray(m_pWizardItem));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00016	83 c1 01	 add	 ecx, 1
  00019	83 f9 02	 cmp	 ecx, 2
  0001c	72 19		 jb	 SHORT $LN3@OnBnClicke
  0001e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedNext@CDlgMatchWizard@@QAEXXZ@4JA
  00024	83 c2 02	 add	 edx, 2
  00027	52		 push	 edx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0002d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00032	85 c0		 test	 eax, eax
  00034	74 01		 je	 SHORT $LN3@OnBnClicke
  00036	cc		 int	 3
$LN3@OnBnClicke:

; 2045 : 
; 2046 : 	//激活页面
; 2047 : 	ActiveWizardItem(m_wActiveIndex+1);

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00041	83 c1 01	 add	 ecx, 1
  00044	51		 push	 ecx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z ; CDlgMatchWizard::ActiveWizardItem

; 2048 : 
; 2049 : 	return;
; 2050 : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?OnBnClickedNext@CDlgMatchWizard@@QAEXXZ ENDP		; CDlgMatchWizard::OnBnClickedNext
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnBnClickedLast@CDlgMatchWizard@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBnClickedLast@CDlgMatchWizard@@QAEXXZ PROC		; CDlgMatchWizard::OnBnClickedLast, COMDAT
; _this$ = ecx

; 2029 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2030 : 	//效验参数
; 2031 : 	ASSERT(m_wActiveIndex>0);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00016	85 c9		 test	 ecx, ecx
  00018	7f 19		 jg	 SHORT $LN3@OnBnClicke
  0001a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedLast@CDlgMatchWizard@@QAEXXZ@4JA
  00020	83 c2 02	 add	 edx, 2
  00023	52		 push	 edx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00029	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002e	85 c0		 test	 eax, eax
  00030	74 01		 je	 SHORT $LN3@OnBnClicke
  00032	cc		 int	 3
$LN3@OnBnClicke:

; 2032 : 	ASSERT(m_wActiveIndex<CountArray(m_pWizardItem));

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0003d	83 f9 02	 cmp	 ecx, 2
  00040	72 19		 jb	 SHORT $LN4@OnBnClicke
  00042	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnBnClickedLast@CDlgMatchWizard@@QAEXXZ@4JA
  00048	83 c2 03	 add	 edx, 3
  0004b	52		 push	 edx
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00051	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00056	85 c0		 test	 eax, eax
  00058	74 01		 je	 SHORT $LN4@OnBnClicke
  0005a	cc		 int	 3
$LN4@OnBnClicke:

; 2033 : 
; 2034 : 	//切换页面
; 2035 : 	ActiveWizardItem(m_wActiveIndex-1);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00065	83 e9 01	 sub	 ecx, 1
  00068	51		 push	 ecx
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z ; CDlgMatchWizard::ActiveWizardItem

; 2036 : 
; 2037 : 	return;
; 2038 : }

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?OnBnClickedLast@CDlgMatchWizard@@QAEXXZ ENDP		; CDlgMatchWizard::OnBnClickedLast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z
_TEXT	SEGMENT
_wRandID$2 = -28					; size = 2
_pMatchRewardInfo$ = -24				; size = 4
_strRewardItem$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strRewardGold$ = 8					; size = 4
_strRewardIngot$ = 12					; size = 4
_szRewardExperience$ = 16				; size = 4
?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z PROC ; CDlgMatchWizard::TransferMatchReward, COMDAT
; _this$ = ecx

; 1997 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1998 : 	//设置参数
; 1999 : 	strRewardGold.Empty();

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _strRewardGold$[ebp]
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ

; 2000 : 	strRewardIngot.Empty();

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _strRewardIngot$[ebp]
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ

; 2001 : 	szRewardExperience.Empty();

  0003d	8b 4d 10	 mov	 ecx, DWORD PTR _szRewardExperience$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Empty@?$CSimpleStringT@D$00@ATL@@QAEXXZ

; 2002 : 
; 2003 : 	//变量定义
; 2004 : 	CString strRewardItem;

  00046	8d 4d ec	 lea	 ecx, DWORD PTR _strRewardItem$[ebp]
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2005 : 	tagMatchRewardInfo * pMatchRewardInfo=NULL;

  00056	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$[ebp], 0

; 2006 : 
; 2007 : 	//转换奖励
; 2008 : 	for (WORD wRandID=1; wRandID<=m_RewardInfoBuffer.GetMatchRewardCount(); wRandID++)

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	66 89 45 e4	 mov	 WORD PTR _wRandID$2[ebp], ax
  00066	eb 0c		 jmp	 SHORT $LN4@TransferMa
$LN2@TransferMa:
  00068	66 8b 45 e4	 mov	 ax, WORD PTR _wRandID$2[ebp]
  0006c	66 83 c0 01	 add	 ax, 1
  00070	66 89 45 e4	 mov	 WORD PTR _wRandID$2[ebp], ax
$LN4@TransferMa:
  00074	0f b7 75 e4	 movzx	 esi, WORD PTR _wRandID$2[ebp]
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  00081	e8 00 00 00 00	 call	 ?GetMatchRewardCount@CRewardInfoBuffer@@QAEKXZ ; CRewardInfoBuffer::GetMatchRewardCount
  00086	3b f0		 cmp	 esi, eax
  00088	0f 87 95 00 00
	00		 ja	 $LN3@TransferMa

; 2009 : 	{
; 2010 : 		//奖励信息
; 2011 : 		pMatchRewardInfo=m_RewardInfoBuffer.SearchMatchReward(wRandID);

  0008e	0f b7 45 e4	 movzx	 eax, WORD PTR _wRandID$2[ebp]
  00092	50		 push	 eax
  00093	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  0009c	e8 00 00 00 00	 call	 ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
  000a1	89 45 e8	 mov	 DWORD PTR _pMatchRewardInfo$[ebp], eax

; 2012 : 
; 2013 : 		//金币奖励
; 2014 : 		strRewardItem.Format(TEXT("%I64d|"),pMatchRewardInfo->lRewardGold);

  000a4	8b 45 e8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  000a7	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  000aa	51		 push	 ecx
  000ab	8b 50 02	 mov	 edx, DWORD PTR [eax+2]
  000ae	52		 push	 edx
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_06EKDNBKMI@?$CFI64d?$HM@
  000b4	8d 45 ec	 lea	 eax, DWORD PTR _strRewardItem$[ebp]
  000b7	50		 push	 eax
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000be	83 c4 10	 add	 esp, 16			; 00000010H

; 2015 : 		strRewardGold.Append(strRewardItem);

  000c1	8d 45 ec	 lea	 eax, DWORD PTR _strRewardItem$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _strRewardGold$[ebp]
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXABV12@@Z

; 2016 : 
; 2017 : 		//元宝奖励
; 2018 : 		strRewardItem.Format(TEXT("%I64d|"),pMatchRewardInfo->lRewardIngot);

  000ce	8b 45 e8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  000d1	8b 48 0e	 mov	 ecx, DWORD PTR [eax+14]
  000d4	51		 push	 ecx
  000d5	8b 50 0a	 mov	 edx, DWORD PTR [eax+10]
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_06EKDNBKMI@?$CFI64d?$HM@
  000de	8d 45 ec	 lea	 eax, DWORD PTR _strRewardItem$[ebp]
  000e1	50		 push	 eax
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000e8	83 c4 10	 add	 esp, 16			; 00000010H

; 2019 : 		strRewardIngot.Append(strRewardItem);

  000eb	8d 45 ec	 lea	 eax, DWORD PTR _strRewardItem$[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d 0c	 mov	 ecx, DWORD PTR _strRewardIngot$[ebp]
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXABV12@@Z

; 2020 : 
; 2021 : 		//经验奖励
; 2022 : 		strRewardItem.Format(TEXT("%d|"),pMatchRewardInfo->dwRewardExperience);

  000f8	8b 45 e8	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  000fb	8b 48 12	 mov	 ecx, DWORD PTR [eax+18]
  000fe	51		 push	 ecx
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_03IFADCKOJ@?$CFd?$HM@
  00104	8d 55 ec	 lea	 edx, DWORD PTR _strRewardItem$[ebp]
  00107	52		 push	 edx
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  0010e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2023 : 		szRewardExperience.Append(strRewardItem);

  00111	8d 45 ec	 lea	 eax, DWORD PTR _strRewardItem$[ebp]
  00114	50		 push	 eax
  00115	8b 4d 10	 mov	 ecx, DWORD PTR _szRewardExperience$[ebp]
  00118	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Append@?$CSimpleStringT@D$00@ATL@@QAEXABV12@@Z

; 2024 : 	}

  0011e	e9 45 ff ff ff	 jmp	 $LN2@TransferMa
$LN3@TransferMa:

; 2025 : }

  00123	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0012a	8d 4d ec	 lea	 ecx, DWORD PTR _strRewardItem$[ebp]
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00133	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00136	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013d	59		 pop	 ecx
  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _strRewardItem$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?TransferMatchReward@CDlgMatchWizard@@AAEXAAV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@00@Z ENDP ; CDlgMatchWizard::TransferMatchReward
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z
_TEXT	SEGMENT
tv274 = -236						; size = 4
tv264 = -236						; size = 4
tv253 = -236						; size = 4
_szTitle$ = -168					; size = 128
_pButtonFinish$ = -40					; size = 4
_pButtonNext$ = -36					; size = 4
_pButtonLast$ = -32					; size = 4
_rcItemRect$ = -28					; size = 16
_pItemWizard$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wIndex$ = 8						; size = 2
?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z PROC	; CDlgMatchWizard::ActiveWizardItem, COMDAT
; _this$ = ecx

; 1937 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1938 : 	//判断状态
; 1939 : 	if (m_wActiveIndex==wIndex)

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00023	0f b7 55 08	 movzx	 edx, WORD PTR _wIndex$[ebp]
  00027	3b ca		 cmp	 ecx, edx
  00029	75 20		 jne	 SHORT $LN2@ActiveWiza

; 1940 : 	{
; 1941 : 		m_pWizardItem[m_wActiveIndex]->SetFocus();

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00035	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0003f	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1942 : 		return true;

  00044	b0 01		 mov	 al, 1
  00046	e9 7d 02 00 00	 jmp	 $LN1@ActiveWiza
$LN2@ActiveWiza:

; 1943 : 	}
; 1944 : 
; 1945 : 	//保存旧项
; 1946 : 	CDlgMatchWizardItem * pItemWizard=NULL;

  0004b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pItemWizard$[ebp], 0

; 1947 : 	if (m_wActiveIndex<CountArray(m_pWizardItem))

  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0005c	83 f9 02	 cmp	 ecx, 2
  0005f	73 50		 jae	 SHORT $LN3@ActiveWiza

; 1948 : 	{
; 1949 : 		//设置变量
; 1950 : 		pItemWizard=m_pWizardItem[m_wActiveIndex];

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0006b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 84 8a ac 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+172]
  00075	89 45 f4	 mov	 DWORD PTR _pItemWizard$[ebp], eax

; 1951 : 
; 1952 : 		//保存数据
; 1953 : 		if ((wIndex>m_wActiveIndex)&&(m_pWizardItem[m_wActiveIndex]->SaveItemData()==false)) return false;

  00078	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	0f b7 91 a8 00
	00 00		 movzx	 edx, WORD PTR [ecx+168]
  00086	3b c2		 cmp	 eax, edx
  00088	7e 27		 jle	 SHORT $LN3@ActiveWiza
  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00094	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0009e	e8 00 00 00 00	 call	 ?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ ; CDlgMatchWizardItem::SaveItemData
  000a3	0f b6 c0	 movzx	 eax, al
  000a6	85 c0		 test	 eax, eax
  000a8	75 07		 jne	 SHORT $LN3@ActiveWiza
  000aa	32 c0		 xor	 al, al
  000ac	e9 17 02 00 00	 jmp	 $LN1@ActiveWiza
$LN3@ActiveWiza:

; 1954 : 	}
; 1955 : 
; 1956 : 	//获取位置
; 1957 : 	CRect rcItemRect;

  000b1	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  000b4	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 1958 : 	GetDlgItem(IDC_MATCH_FRAME)->GetWindowRect(rcItemRect);

  000b9	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  000bc	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  000c1	50		 push	 eax
  000c2	68 6c 23 00 00	 push	 9068			; 0000236cH
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 1959 : 	ScreenToClient(&rcItemRect);

  000d6	8d 45 e4	 lea	 eax, DWORD PTR _rcItemRect$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 1960 : 
; 1961 : 	//设置新项
; 1962 : 	m_pWizardItem[wIndex]->m_pDlgMatchWizard=this;

  000e2	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  000e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  000f0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	89 82 ac 00 00
	00		 mov	 DWORD PTR [edx+172], eax

; 1963 : 	m_pWizardItem[wIndex]->m_pGameMatchOption=&m_GameMatchOption;

  000f9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	05 10 01 00 00	 add	 eax, 272		; 00000110H
  00101	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  00105	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00108	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0010f	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 1964 : 	m_pWizardItem[wIndex]->m_pMatchInfoBuffer=&m_MatchInfoBuffer;

  00115	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00118	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0011d	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  00121	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00124	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  0012b	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 1965 : 	m_pWizardItem[wIndex]->m_pRewardInfoBuffer=&m_RewardInfoBuffer;

  00131	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00134	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  00139	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIndex$[ebp]
  0013d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00140	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  00147	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1966 : 
; 1967 : 	//创建新项
; 1968 : 	m_wActiveIndex=wIndex;

  0014d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00150	66 8b 4d 08	 mov	 cx, WORD PTR _wIndex$[ebp]
  00154	66 89 88 a8 00
	00 00		 mov	 WORD PTR [eax+168], cx

; 1969 : 	m_pWizardItem[m_wActiveIndex]->ShowWizardItem(rcItemRect,this);

  0015b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	50		 push	 eax
  0015f	8d 4d e4	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  00162	51		 push	 ecx
  00163	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00166	0f b7 82 a8 00
	00 00		 movzx	 eax, WORD PTR [edx+168]
  0016d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00170	8b 8c 81 ac 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+172]
  00177	e8 00 00 00 00	 call	 ?ShowWizardItem@CDlgMatchWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgMatchWizardItem::ShowWizardItem

; 1970 : 
; 1971 : 	//激活新项
; 1972 : 	m_pWizardItem[m_wActiveIndex]->SetFocus();

  0017c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00186	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00189	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  00190	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1973 : 	if (pItemWizard!=NULL) pItemWizard->ShowWindow(SW_HIDE);

  00195	83 7d f4 00	 cmp	 DWORD PTR _pItemWizard$[ebp], 0
  00199	74 0a		 je	 SHORT $LN5@ActiveWiza
  0019b	6a 00		 push	 0
  0019d	8b 4d f4	 mov	 ecx, DWORD PTR _pItemWizard$[ebp]
  001a0	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$LN5@ActiveWiza:

; 1974 : 
; 1975 : 	//界面变量
; 1976 : 	CButton * pButtonLast=(CButton * )GetDlgItem(IDC_LAST);

  001a5	68 29 04 00 00	 push	 1065			; 00000429H
  001aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001b2	89 45 e0	 mov	 DWORD PTR _pButtonLast$[ebp], eax

; 1977 : 	CButton * pButtonNext=(CButton * )GetDlgItem(IDC_NEXT);

  001b5	68 2b 04 00 00	 push	 1067			; 0000042bH
  001ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001c2	89 45 dc	 mov	 DWORD PTR _pButtonNext$[ebp], eax

; 1978 : 	CButton * pButtonFinish=(CButton * )GetDlgItem(IDC_FINISH);

  001c5	68 34 04 00 00	 push	 1076			; 00000434H
  001ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001d2	89 45 d8	 mov	 DWORD PTR _pButtonFinish$[ebp], eax

; 1979 : 
; 1980 : 	//进度界面
; 1981 : 	pButtonFinish->EnableWindow((m_wActiveIndex>0)?TRUE:FALSE);

  001d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d8	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  001df	85 c9		 test	 ecx, ecx
  001e1	7e 0c		 jle	 SHORT $LN7@ActiveWiza
  001e3	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv253[ebp], 1
  001ed	eb 0a		 jmp	 SHORT $LN8@ActiveWiza
$LN7@ActiveWiza:
  001ef	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv253[ebp], 0
$LN8@ActiveWiza:
  001f9	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv253[ebp]
  001ff	52		 push	 edx
  00200	8b 4d d8	 mov	 ecx, DWORD PTR _pButtonFinish$[ebp]
  00203	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1982 : 	pButtonNext->EnableWindow(((m_wActiveIndex+1)<CountArray(m_pWizardItem))?TRUE:FALSE);

  00208	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0020b	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00212	83 c1 01	 add	 ecx, 1
  00215	83 f9 02	 cmp	 ecx, 2
  00218	73 0c		 jae	 SHORT $LN9@ActiveWiza
  0021a	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv264[ebp], 1
  00224	eb 0a		 jmp	 SHORT $LN10@ActiveWiza
$LN9@ActiveWiza:
  00226	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv264[ebp], 0
$LN10@ActiveWiza:
  00230	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv264[ebp]
  00236	52		 push	 edx
  00237	8b 4d dc	 mov	 ecx, DWORD PTR _pButtonNext$[ebp]
  0023a	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1983 : 	pButtonLast->EnableWindow((m_wActiveIndex>0)?TRUE:FALSE);

  0023f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00242	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00249	85 c9		 test	 ecx, ecx
  0024b	7e 0c		 jle	 SHORT $LN11@ActiveWiza
  0024d	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv274[ebp], 1
  00257	eb 0a		 jmp	 SHORT $LN12@ActiveWiza
$LN11@ActiveWiza:
  00259	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv274[ebp], 0
$LN12@ActiveWiza:
  00263	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR tv274[ebp]
  00269	52		 push	 edx
  0026a	8b 4d e0	 mov	 ecx, DWORD PTR _pButtonLast$[ebp]
  0026d	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 1984 : 
; 1985 : 	//构造标题
; 1986 : 	TCHAR szTitle[128]=TEXT("");

  00272	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00277	88 85 58 ff ff
	ff		 mov	 BYTE PTR _szTitle$[ebp], al
  0027d	6a 7f		 push	 127			; 0000007fH
  0027f	6a 00		 push	 0
  00281	8d 85 59 ff ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp+1]
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 _memset
  0028d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1987 : 	_sntprintf_s(szTitle,CountArray(szTitle),TEXT("比赛配置向导 --- [ 步骤 %d ]"),m_wActiveIndex+1);

  00290	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00293	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  0029a	83 c1 01	 add	 ecx, 1
  0029d	51		 push	 ecx
  0029e	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PENPJMLD@?$LB?H?H?$PM?E?d?V?C?O?r?$LF?$LM?5?9?9?9?5?$FL?5?$LC?$LN?V?h?5?$CFd?5?$FN@
  002a3	68 80 00 00 00	 push	 128			; 00000080H
  002a8	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _szTitle$[ebp]
  002ae	52		 push	 edx
  002af	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  002b4	83 c4 10	 add	 esp, 16			; 00000010H

; 1988 : 	
; 1989 : 	//设置标题
; 1990 : 	SetWindowText(szTitle);

  002b7	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _szTitle$[ebp]
  002bd	50		 push	 eax
  002be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c1	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 1991 : 
; 1992 : 	return true;

  002c6	b0 01		 mov	 al, 1
$LN1@ActiveWiza:

; 1993 : }

  002c8	5f		 pop	 edi
  002c9	5e		 pop	 esi
  002ca	5b		 pop	 ebx
  002cb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ce	33 cd		 xor	 ecx, ebp
  002d0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002d5	8b e5		 mov	 esp, ebp
  002d7	5d		 pop	 ebp
  002d8	c2 04 00	 ret	 4
?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z ENDP	; CDlgMatchWizard::ActiveWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameMatchOption$ = 8					; size = 4
?SetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z PROC ; CDlgMatchWizard::SetGameMatchOption, COMDAT
; _this$ = ecx

; 1930 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1931 : 	//设置变量
; 1932 : 	m_GameMatchOption=GameMatchOption;

  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 10 01 00
	00		 add	 edi, 272		; 00000110H
  00015	b9 b2 00 00 00	 mov	 ecx, 178		; 000000b2H
  0001a	8b 75 08	 mov	 esi, DWORD PTR _GameMatchOption$[ebp]
  0001d	f3 a5		 rep movsd

; 1933 : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?SetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ENDP ; CDlgMatchWizard::SetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameMatchOption$ = 8					; size = 4
?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z PROC ; CDlgMatchWizard::GetGameMatchOption, COMDAT
; _this$ = ecx

; 1923 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1924 : 	//设置变量
; 1925 : 	GameMatchOption=m_GameMatchOption;

  0000c	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0000f	81 c6 10 01 00
	00		 add	 esi, 272		; 00000110H
  00015	b9 b2 00 00 00	 mov	 ecx, 178		; 000000b2H
  0001a	8b 7d 08	 mov	 edi, DWORD PTR _GameMatchOption$[ebp]
  0001d	f3 a5		 rep movsd

; 1926 : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ENDP ; CDlgMatchWizard::GetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?SetGameKindID@CDlgMatchWizard@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wKindID$ = 8						; size = 2
?SetGameKindID@CDlgMatchWizard@@QAEXG@Z PROC		; CDlgMatchWizard::SetGameKindID, COMDAT
; _this$ = ecx

; 512  : 	VOID SetGameKindID(WORD wKindID) { m_wKindID=wKindID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _wKindID$[ebp]
  00013	66 89 88 b4 00
	00 00		 mov	 WORD PTR [eax+180], cx
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?SetGameKindID@CDlgMatchWizard@@QAEXG@Z ENDP		; CDlgMatchWizard::SetGameKindID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnOK@CDlgMatchWizard@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgMatchWizard@@UAEXXZ PROC			; CDlgMatchWizard::OnOK, COMDAT
; _this$ = ecx

; 1907 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1908 : 	if ((m_wActiveIndex+1)<CountArray(m_pWizardItem))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a8 00
	00 00		 movzx	 ecx, WORD PTR [eax+168]
  00016	83 c1 01	 add	 ecx, 1
  00019	83 f9 02	 cmp	 ecx, 2
  0001c	73 0a		 jae	 SHORT $LN2@OnOK

; 1909 : 	{
; 1910 : 		OnBnClickedNext();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?OnBnClickedNext@CDlgMatchWizard@@QAEXXZ ; CDlgMatchWizard::OnBnClickedNext

; 1911 : 	}
; 1912 : 	else

  00026	eb 08		 jmp	 SHORT $LN1@OnOK
$LN2@OnOK:

; 1913 : 	{
; 1914 : 		OnBnClickedFinish();

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?OnBnClickedFinish@CDlgMatchWizard@@QAEXXZ ; CDlgMatchWizard::OnBnClickedFinish
$LN1@OnOK:

; 1915 : 	}
; 1916 : 
; 1917 : 	return;
; 1918 : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?OnOK@CDlgMatchWizard@@UAEXXZ ENDP			; CDlgMatchWizard::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchWizard@@UAEHXZ
_TEXT	SEGMENT
$T2 = -128						; size = 4
_szServiceMachine$ = -60				; size = 33
_MatchInfoManager$ = -24				; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnInitDialog@CDlgMatchWizard@@UAEHXZ PROC		; CDlgMatchWizard::OnInitDialog, COMDAT
; _this$ = ecx

; 1880 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnInitDialog@CDlgMatchWizard@@UAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 74	 sub	 esp, 116		; 00000074H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1881 : 	__super::OnInitDialog();

  0002e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1882 : 
; 1883 : 	//变量定义
; 1884 : 	CMatchInfoManager MatchInfoManager;

  00036	8d 4d e8	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00039	e8 00 00 00 00	 call	 ??0CMatchInfoManager@@QAE@XZ ; CMatchInfoManager::CMatchInfoManager
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1885 : 
; 1886 : 	//获取机器码
; 1887 : 	TCHAR szServiceMachine[LEN_MACHINE_ID];
; 1888 : 	CWHService::GetMachineID(szServiceMachine);

  00045	8d 45 c4	 lea	 eax, DWORD PTR _szServiceMachine$[ebp]
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetMachineID@CWHService@@SA_NQAD@Z
  0004f	83 c4 04	 add	 esp, 4

; 1889 : 
; 1890 : 	//读取信息
; 1891 : 	MatchInfoManager.LoadGameMatchOption(m_wKindID,szServiceMachine,m_MatchInfoBuffer);

  00052	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00055	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0005a	50		 push	 eax
  0005b	8d 4d c4	 lea	 ecx, DWORD PTR _szServiceMachine$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00062	0f b7 82 b4 00
	00 00		 movzx	 eax, WORD PTR [edx+180]
  00069	50		 push	 eax
  0006a	8d 4d e8	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  0006d	e8 00 00 00 00	 call	 ?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z ; CMatchInfoManager::LoadGameMatchOption

; 1892 : 
; 1893 : 	//读取奖励
; 1894 : 	if (m_GameMatchOption.dwMatchID!=0)

  00072	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 b8 10 01 00
	00 00		 cmp	 DWORD PTR [eax+272], 0
  0007c	74 1b		 je	 SHORT $LN2@OnInitDial

; 1895 : 	{
; 1896 : 		MatchInfoManager.LoadGameMatchReward(m_GameMatchOption.dwMatchID,m_RewardInfoBuffer);

  0007e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00081	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  00086	50		 push	 eax
  00087	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 91 10 01 00
	00		 mov	 edx, DWORD PTR [ecx+272]
  00090	52		 push	 edx
  00091	8d 4d e8	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00094	e8 00 00 00 00	 call	 ?LoadGameMatchReward@CMatchInfoManager@@QAEGKAAVCRewardInfoBuffer@@@Z ; CMatchInfoManager::LoadGameMatchReward
$LN2@OnInitDial:

; 1897 : 	}	
; 1898 : 
; 1899 : 	//激活向导
; 1900 : 	ActiveWizardItem(0);

  00099	6a 00		 push	 0
  0009b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	e8 00 00 00 00	 call	 ?ActiveWizardItem@CDlgMatchWizard@@AAE_NG@Z ; CDlgMatchWizard::ActiveWizardItem

; 1901 : 
; 1902 : 	return FALSE;

  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d e8	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  000b4	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  000b9	8b 45 80	 mov	 eax, DWORD PTR $T2[ebp]

; 1903 : }

  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cd	33 cd		 xor	 ecx, ebp
  000cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnInitDialog@CDlgMatchWizard@@UAEHXZ$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
__ehhandler$?OnInitDialog@CDlgMatchWizard@@UAEHXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 7c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-132]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnInitDialog@CDlgMatchWizard@@UAEHXZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnInitDialog@CDlgMatchWizard@@UAEHXZ ENDP		; CDlgMatchWizard::OnInitDialog
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchWizard@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchWizard@@UAE@XZ PROC				; CDlgMatchWizard::~CDlgMatchWizard, COMDAT
; _this$ = ecx

; 1875 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizard@@6B@

; 1876 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 50 09 00
	00		 add	 ecx, 2384		; 00000950H
  0001e	e8 00 00 00 00	 call	 ??1CDlgMatchWizardStep2@@UAE@XZ ; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 d8 03 00
	00		 add	 ecx, 984		; 000003d8H
  0002c	e8 00 00 00 00	 call	 ??1CDlgMatchWizardStep1@@UAE@XZ ; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  0003a	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00048	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??1CDlgMatchWizard@@UAE@XZ ENDP				; CDlgMatchWizard::~CDlgMatchWizard
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchWizard@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgMatchWizard@@QAE@XZ PROC				; CDlgMatchWizard::CDlgMatchWizard, COMDAT
; _this$ = ecx

; 1857 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgMatchWizard@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1856 : CDlgMatchWizard::CDlgMatchWizard() : CDialog(IDD_MATCH_WIZARD)

  0002b	6a 00		 push	 0
  0002d	68 30 23 00 00	 push	 9008			; 00002330H
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1857 : {

  00041	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00044	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizard@@6B@
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00053	e8 00 00 00 00	 call	 ??0CMatchInfoBuffer@@QAE@XZ ; CMatchInfoBuffer::CMatchInfoBuffer
  00058	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  00065	e8 00 00 00 00	 call	 ??0CRewardInfoBuffer@@QAE@XZ ; CRewardInfoBuffer::CRewardInfoBuffer
  0006a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	81 c1 d8 03 00
	00		 add	 ecx, 984		; 000003d8H
  00077	e8 00 00 00 00	 call	 ??0CDlgMatchWizardStep1@@QAE@XZ ; CDlgMatchWizardStep1::CDlgMatchWizardStep1
  0007c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00080	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 50 09 00
	00		 add	 ecx, 2384		; 00000950H
  00089	e8 00 00 00 00	 call	 ??0CDlgMatchWizardStep2@@QAE@XZ ; CDlgMatchWizardStep2::CDlgMatchWizardStep2
  0008e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 1858 : 	//设置变量
; 1859 : 	m_wActiveIndex=INVALID_WORD;

  00092	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00097	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	66 89 81 a8 00
	00 00		 mov	 WORD PTR [ecx+168], ax

; 1860 : 	m_pWizardItem[0]=&m_MatchWizardStep1;

  000a1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	05 d8 03 00 00	 add	 eax, 984		; 000003d8H
  000a9	b9 04 00 00 00	 mov	 ecx, 4
  000ae	6b d1 00	 imul	 edx, ecx, 0
  000b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	89 84 11 ac 00
	00 00		 mov	 DWORD PTR [ecx+edx+172], eax

; 1861 : 	m_pWizardItem[1]=&m_MatchWizardStep2;

  000bb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000be	05 50 09 00 00	 add	 eax, 2384		; 00000950H
  000c3	b9 04 00 00 00	 mov	 ecx, 4
  000c8	c1 e1 00	 shl	 ecx, 0
  000cb	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ce	89 84 0a ac 00
	00 00		 mov	 DWORD PTR [edx+ecx+172], eax

; 1862 : 
; 1863 : 	//配置信息
; 1864 : 	m_RewardInfoBuffer.ResetMatchRewardInfo();

  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  000de	e8 00 00 00 00	 call	 ?ResetMatchRewardInfo@CRewardInfoBuffer@@QAE_NXZ ; CRewardInfoBuffer::ResetMatchRewardInfo

; 1865 : 	ZeroMemory(&m_GameMatchOption,sizeof(m_GameMatchOption));

  000e3	68 c8 02 00 00	 push	 712			; 000002c8H
  000e8	6a 00		 push	 0
  000ea	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	05 10 01 00 00	 add	 eax, 272		; 00000110H
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _memset
  000f8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1866 : 	m_GameMatchOption.cbSignupMode = SIGNUP_MODE_SIGNUP_FEE;

  000fb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000fe	c6 80 50 01 00
	00 01		 mov	 BYTE PTR [eax+336], 1

; 1867 : 	m_GameMatchOption.cbJoinCondition = MATCH_JOINCD_MEMBER_ORDER;	

  00105	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00108	c6 80 51 01 00
	00 01		 mov	 BYTE PTR [eax+337], 1

; 1868 : 	m_GameMatchOption.cbDistributeRule =DISTRIBUTE_ALLOW|DISTRIBUTE_LAST_TABLE;

  0010f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00112	c6 80 85 01 00
	00 03		 mov	 BYTE PTR [eax+389], 3

; 1869 : 
; 1870 : 	return;
; 1871 : }

  00119	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00120	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00123	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00126	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012d	59		 pop	 ecx
  0012e	5f		 pop	 edi
  0012f	5e		 pop	 esi
  00130	5b		 pop	 ebx
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00011	e9 00 00 00 00	 jmp	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  0001f	e9 00 00 00 00	 jmp	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 d8 03 00
	00		 add	 ecx, 984		; 000003d8H
  0002d	e9 00 00 00 00	 jmp	 ??1CDlgMatchWizardStep1@@UAE@XZ ; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
__unwindfunclet$??0CDlgMatchWizard@@QAE@XZ$4:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 50 09 00
	00		 add	 ecx, 2384		; 00000950H
  0003b	e9 00 00 00 00	 jmp	 ??1CDlgMatchWizardStep2@@UAE@XZ ; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
__ehhandler$??0CDlgMatchWizard@@QAE@XZ:
  00040	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00044	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00047	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgMatchWizard@@QAE@XZ
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgMatchWizard@@QAE@XZ ENDP				; CDlgMatchWizard::CDlgMatchWizard
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchWizardStep2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchWizardStep2@@UAEPAXI@Z PROC		; CDlgMatchWizardStep2::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchWizardStep2@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchWizardStep2@@UAE@XZ ; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 38 02 00 00	 push	 568			; 00000238H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 38 02
	00 00		 imul	 ecx, DWORD PTR [eax-4], 568
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchWizardStep2@@UAE@XZ ; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 38 02 00 00	 push	 568			; 00000238H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchWizardStep2@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchWizardStep2@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchWizardStep2@@UAEPAXI@Z ENDP		; CDlgMatchWizardStep2::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchWizardStep2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchWizardStep2@@UAEPAXI@Z PROC		; CDlgMatchWizardStep2::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchWizardStep2@@UAE@XZ ; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 38 02 00 00	 push	 568			; 00000238H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchWizardStep2@@UAEPAXI@Z ENDP		; CDlgMatchWizardStep2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchWizardStep2@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchWizardStep2@@UAEXHH@Z PROC	; CDlgMatchWizardStep2::RectifyControl, COMDAT
; _this$ = ecx

; 1849 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1850 : 	return;
; 1851 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchWizardStep2@@UAEXHH@Z ENDP	; CDlgMatchWizardStep2::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnMatchItemActive@CDlgMatchWizardStep2@@UAEXXZ
_TEXT	SEGMENT
_rcItemRect$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnMatchItemActive@CDlgMatchWizardStep2@@UAEXXZ PROC	; CDlgMatchWizardStep2::OnMatchItemActive, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	//隐藏窗口
; 1822 : 	if (m_pDlgMatchItem!=NULL) m_pDlgMatchItem->ShowWindow(SW_HIDE);

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 b8 c0 00 00
	00 00		 cmp	 DWORD PTR [eax+192], 0
  00020	74 10		 je	 SHORT $LN2@OnMatchIte
  00022	6a 00		 push	 0
  00024	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  0002d	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$LN2@OnMatchIte:

; 1823 : 
; 1824 : 	//获取位置
; 1825 : 	CRect rcItemRect;

  00032	8d 4d e8	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  00035	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 1826 : 	GetDlgItem(IDC_MATCH_OPTION_FRAME)->GetWindowRect(rcItemRect);

  0003a	8d 4d e8	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  0003d	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00042	50		 push	 eax
  00043	68 5a 23 00 00	 push	 9050			; 0000235aH
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 1827 : 	ScreenToClient(&rcItemRect);

  00057	8d 45 e8	 lea	 eax, DWORD PTR _rcItemRect$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 1828 : 
; 1829 : 	//选择子项
; 1830 : 	if (m_pGameMatchOption->cbMatchType==MATCH_TYPE_LOCKTIME)

  00063	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0006c	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00070	85 d2		 test	 edx, edx
  00072	75 13		 jne	 SHORT $LN3@OnMatchIte

; 1831 : 	{
; 1832 : 		m_pDlgMatchItem=&m_DlgMatchLockTime;

  00074	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00077	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	89 81 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], eax

; 1833 : 	}
; 1834 : 	else

  00085	eb 11		 jmp	 SHORT $LN4@OnMatchIte
$LN3@OnMatchIte:

; 1835 : 	{
; 1836 : 		m_pDlgMatchItem=&m_DlgMatchImmediate;

  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	05 80 01 00 00	 add	 eax, 384		; 00000180H
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	89 81 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], eax
$LN4@OnMatchIte:

; 1837 : 	}
; 1838 : 
; 1839 : 	//设置变量
; 1840 : 	m_pDlgMatchItem->SetGameMatchOption(m_pGameMatchOption);

  00098	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000a1	51		 push	 ecx
  000a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 8a c0 00 00
	00		 mov	 ecx, DWORD PTR [edx+192]
  000ab	e8 00 00 00 00	 call	 ?SetGameMatchOption@CDlgMatchItem@@IAEXPAUtagGameMatchOption@@@Z ; CDlgMatchItem::SetGameMatchOption

; 1841 : 
; 1842 : 	//显示子项
; 1843 : 	rcItemRect.DeflateRect(2,12,2,2);

  000b0	6a 02		 push	 2
  000b2	6a 02		 push	 2
  000b4	6a 0c		 push	 12			; 0000000cH
  000b6	6a 02		 push	 2
  000b8	8d 4d e8	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  000bb	e8 00 00 00 00	 call	 ?DeflateRect@CRect@@QAEXHHHH@Z ; CRect::DeflateRect

; 1844 : 	m_pDlgMatchItem->ShowMatchItem(rcItemRect,this);

  000c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	50		 push	 eax
  000c4	8d 4d e8	 lea	 ecx, DWORD PTR _rcItemRect$[ebp]
  000c7	51		 push	 ecx
  000c8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000cb	8b 8a c0 00 00
	00		 mov	 ecx, DWORD PTR [edx+192]
  000d1	e8 00 00 00 00	 call	 ?ShowMatchItem@CDlgMatchItem@@AAE_NABVCRect@@PAVCWnd@@@Z ; CDlgMatchItem::ShowMatchItem

; 1845 : }

  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000dc	33 cd		 xor	 ecx, ebp
  000de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?OnMatchItemActive@CDlgMatchWizardStep2@@UAEXXZ ENDP	; CDlgMatchWizardStep2::OnMatchItemActive
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchWizardStep2@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchWizardStep2@@UAE_NXZ PROC	; CDlgMatchWizardStep2::SaveInputInfo, COMDAT
; _this$ = ecx

; 1811 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1812 : 	//保存输入
; 1813 : 	if (m_pDlgMatchItem->SaveInputInfo() == false) return false;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [eax+192]
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	8b 8a c0 00 00
	00		 mov	 ecx, DWORD PTR [edx+192]
  00020	8b 90 94 01 00
	00		 mov	 edx, DWORD PTR [eax+404]
  00026	ff d2		 call	 edx
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	75 04		 jne	 SHORT $LN2@SaveInputI
  0002f	32 c0		 xor	 al, al
  00031	eb 02		 jmp	 SHORT $LN1@SaveInputI
$LN2@SaveInputI:

; 1814 : 
; 1815 : 	return true;

  00033	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1816 : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?SaveInputInfo@CDlgMatchWizardStep2@@UAE_NXZ ENDP	; CDlgMatchWizardStep2::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchWizardStep2@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchWizardStep2@@MAEHXZ PROC		; CDlgMatchWizardStep2::OnInitDialog, COMDAT
; _this$ = ecx

; 1803 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1804 : 	__super::OnInitDialog();	

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1805 : 	
; 1806 : 	return FALSE;

  00014	33 c0		 xor	 eax, eax

; 1807 : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?OnInitDialog@CDlgMatchWizardStep2@@MAEHXZ ENDP		; CDlgMatchWizardStep2::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?DoDataExchange@CDlgMatchWizardStep2@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CDlgMatchWizardStep2@@MAEXPAVCDataExchange@@@Z PROC ; CDlgMatchWizardStep2::DoDataExchange, COMDAT
; _this$ = ecx

; 1797 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1798 : 	__super::DoDataExchange(pDX);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pDX$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 1799 : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?DoDataExchange@CDlgMatchWizardStep2@@MAEXPAVCDataExchange@@@Z ENDP ; CDlgMatchWizardStep2::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchWizardStep2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchWizardStep2@@UAE@XZ PROC			; CDlgMatchWizardStep2::~CDlgMatchWizardStep2, COMDAT
; _this$ = ecx

; 1792 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizardStep2@@6B@

; 1793 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  0001e	e8 00 00 00 00	 call	 ??1CDlgMatchImmediate@@UAE@XZ ; CDlgMatchImmediate::~CDlgMatchImmediate
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  0002c	e8 00 00 00 00	 call	 ??1CDlgMatchLockTime@@UAE@XZ ; CDlgMatchLockTime::~CDlgMatchLockTime
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??1CDlgMatchWizardStep2@@UAE@XZ ENDP			; CDlgMatchWizardStep2::~CDlgMatchWizardStep2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchWizardStep2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgMatchWizardStep2@@QAE@XZ PROC			; CDlgMatchWizardStep2::CDlgMatchWizardStep2, COMDAT
; _this$ = ecx

; 1785 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgMatchWizardStep2@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1784 : CDlgMatchWizardStep2::CDlgMatchWizardStep2() : CDlgMatchWizardItem(IDD_MATCH_WIZARD_2)

  0002b	68 32 23 00 00	 push	 9010			; 00002332H
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CDlgMatchWizardItem@@IAE@I@Z ; CDlgMatchWizardItem::CDlgMatchWizardItem
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1785 : {

  0003f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizardStep2@@6B@
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  00051	e8 00 00 00 00	 call	 ??0CDlgMatchLockTime@@QAE@XZ ; CDlgMatchLockTime::CDlgMatchLockTime
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 80 01 00
	00		 add	 ecx, 384		; 00000180H
  00063	e8 00 00 00 00	 call	 ??0CDlgMatchImmediate@@QAE@XZ ; CDlgMatchImmediate::CDlgMatchImmediate

; 1786 : 	//设置变量
; 1787 : 	m_pDlgMatchItem=NULL;

  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	c7 80 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+192], 0

; 1788 : }

  00075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgMatchWizardStep2@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
__unwindfunclet$??0CDlgMatchWizardStep2@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  00011	e9 00 00 00 00	 jmp	 ??1CDlgMatchLockTime@@UAE@XZ ; CDlgMatchLockTime::~CDlgMatchLockTime
__ehhandler$??0CDlgMatchWizardStep2@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgMatchWizardStep2@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgMatchWizardStep2@@QAE@XZ ENDP			; CDlgMatchWizardStep2::CDlgMatchWizardStep2
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchWizardStep1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchWizardStep1@@UAEPAXI@Z PROC		; CDlgMatchWizardStep1::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchWizardStep1@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchWizardStep1@@UAE@XZ ; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 78 05 00 00	 push	 1400			; 00000578H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 78 05
	00 00		 imul	 ecx, DWORD PTR [eax-4], 1400
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchWizardStep1@@UAE@XZ ; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 78 05 00 00	 push	 1400			; 00000578H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchWizardStep1@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchWizardStep1@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchWizardStep1@@UAEPAXI@Z ENDP		; CDlgMatchWizardStep1::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchWizardStep1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchWizardStep1@@UAEPAXI@Z PROC		; CDlgMatchWizardStep1::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchWizardStep1@@UAE@XZ ; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 78 05 00 00	 push	 1400			; 00000578H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchWizardStep1@@UAEPAXI@Z ENDP		; CDlgMatchWizardStep1::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMessageMap@CDlgMatchWizardStep1@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgMatchWizardStep1@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchWizardStep1::GetMessageMap, COMDAT
; _this$ = ecx

; 36   : BEGIN_MESSAGE_MAP(CDlgMatchWizardStep1, CDlgMatchWizardItem)	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchWizardStep1::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgMatchWizardStep1@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchWizardStep1::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchWizardStep1::GetThisMessageMap, COMDAT

; 36   : BEGIN_MESSAGE_MAP(CDlgMatchWizardStep1, CDlgMatchWizardItem)	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	ON_CBN_SELCHANGE(IDC_COMBO_MATCH_TYPE, OnCbnSelchangeComboMatchType)
; 38   : 	ON_NOTIFY(TCN_SELCHANGE, IDC_MATCH_OPTION, OnTcnSelchangeMatchOption)
; 39   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgMatchWizardStep1@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchWizardStep1::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnTcnSelchangeMatchOption@CDlgMatchWizardStep1@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_pTabCtrl$ = -8						; size = 4
_this$ = -4						; size = 4
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnTcnSelchangeMatchOption@CDlgMatchWizardStep1@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CDlgMatchWizardStep1::OnTcnSelchangeMatchOption, COMDAT
; _this$ = ecx

; 1775 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1776 : 	//获取控件
; 1777 : 	CTabCtrl * pTabCtrl=(CTabCtrl *)GetDlgItem(IDC_MATCH_OPTION);

  0000c	68 62 23 00 00	 push	 9058			; 00002362H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pTabCtrl$[ebp], eax

; 1778 : 	ActiveOptionItem(pTabCtrl->GetCurSel());	

  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetCurSel@CTabCtrl@@QBEHXZ ; CTabCtrl::GetCurSel
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgMatchWizardStep1@@IAEXE@Z ; CDlgMatchWizardStep1::ActiveOptionItem

; 1779 : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?OnTcnSelchangeMatchOption@CDlgMatchWizardStep1@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CDlgMatchWizardStep1::OnTcnSelchangeMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnCbnSelchangeComboMatchType@CDlgMatchWizardStep1@@IAEXXZ
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_cbMatchType$2 = -9					; size = 1
_pComboBox$ = -8					; size = 4
_this$ = -4						; size = 4
?OnCbnSelchangeComboMatchType@CDlgMatchWizardStep1@@IAEXXZ PROC ; CDlgMatchWizardStep1::OnCbnSelchangeComboMatchType, COMDAT
; _this$ = ecx

; 1758 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1759 : 	//获取对象
; 1760 : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_MATCH_TYPE);

  0000c	68 4b 23 00 00	 push	 9035			; 0000234bH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 1761 : 	if (pComboBox!=NULL && pComboBox->GetCurSel()!=LB_ERR)

  0001c	83 7d f8 00	 cmp	 DWORD PTR _pComboBox$[ebp], 0
  00020	74 64		 je	 SHORT $LN1@OnCbnSelch
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00025	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0002a	83 f8 ff	 cmp	 eax, -1
  0002d	74 57		 je	 SHORT $LN1@OnCbnSelch

; 1762 : 	{
; 1763 : 		//比赛类型
; 1764 : 		BYTE cbMatchType=(BYTE)pComboBox->GetItemData(pComboBox->GetCurSel());

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00032	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00037	50		 push	 eax
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0003b	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00040	88 45 f7	 mov	 BYTE PTR _cbMatchType$2[ebp], al

; 1765 : 
; 1766 : 		//事件通知
; 1767 : 		for (int i=0; i<CountArray(m_pDlgMatchItem); i++)

  00043	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0004a	eb 09		 jmp	 SHORT $LN4@OnCbnSelch
$LN2@OnCbnSelch:
  0004c	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0004f	83 c0 01	 add	 eax, 1
  00052	89 45 f0	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@OnCbnSelch:
  00055	83 7d f0 05	 cmp	 DWORD PTR _i$1[ebp], 5
  00059	73 2b		 jae	 SHORT $LN1@OnCbnSelch

; 1768 : 		{
; 1769 : 			m_pDlgMatchItem[i]->OnEventMatchTypeChanged(cbMatchType);

  0005b	0f b6 45 f7	 movzx	 eax, BYTE PTR _cbMatchType$2[ebp]
  0005f	50		 push	 eax
  00060	8b 4d f0	 mov	 ecx, DWORD PTR _i$1[ebp]
  00063	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 84 8a c4 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+196]
  0006d	8b 4d f0	 mov	 ecx, DWORD PTR _i$1[ebp]
  00070	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00073	8b 00		 mov	 eax, DWORD PTR [eax]
  00075	8b 8c 8a c4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+196]
  0007c	8b 90 9c 01 00
	00		 mov	 edx, DWORD PTR [eax+412]
  00082	ff d2		 call	 edx

; 1770 : 		}

  00084	eb c6		 jmp	 SHORT $LN2@OnCbnSelch
$LN1@OnCbnSelch:

; 1771 : 	}
; 1772 : }

  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?OnCbnSelchangeComboMatchType@CDlgMatchWizardStep1@@IAEXXZ ENDP ; CDlgMatchWizardStep1::OnCbnSelchangeComboMatchType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?ActiveOptionItem@CDlgMatchWizardStep1@@IAEXE@Z
_TEXT	SEGMENT
_i$1 = -28						; size = 4
_rcTabCtrl$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_cbItemIndex$ = 8					; size = 1
?ActiveOptionItem@CDlgMatchWizardStep1@@IAEXE@Z PROC	; CDlgMatchWizardStep1::ActiveOptionItem, COMDAT
; _this$ = ecx

; 1731 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1732 : 	//判断索引
; 1733 : 	if (m_cbItemIndex==cbItemIndex) return;

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	0f b6 88 c0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+192]
  00020	0f b6 55 08	 movzx	 edx, BYTE PTR _cbItemIndex$[ebp]
  00024	3b ca		 cmp	 ecx, edx
  00026	75 05		 jne	 SHORT $LN5@ActiveOpti
  00028	e9 d1 00 00 00	 jmp	 $LN1@ActiveOpti
$LN5@ActiveOpti:

; 1734 : 
; 1735 : 	//设置索引
; 1736 : 	m_cbItemIndex=cbItemIndex;

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8a 4d 08	 mov	 cl, BYTE PTR _cbItemIndex$[ebp]
  00033	88 88 c0 00 00
	00		 mov	 BYTE PTR [eax+192], cl

; 1737 : 
; 1738 : 	//控件区域
; 1739 : 	CRect rcTabCtrl;

  00039	8d 4d e8	 lea	 ecx, DWORD PTR _rcTabCtrl$[ebp]
  0003c	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 1740 : 	GetDlgItem(IDC_MATCH_OPTION)->GetClientRect(&rcTabCtrl);

  00041	8d 45 e8	 lea	 eax, DWORD PTR _rcTabCtrl$[ebp]
  00044	50		 push	 eax
  00045	68 62 23 00 00	 push	 9058			; 00002362H
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00052	8b c8		 mov	 ecx, eax
  00054	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 1741 : 
; 1742 : 	//设置控件
; 1743 : 	if (m_pDlgMatchItem[m_cbItemIndex]->m_hWnd!=NULL)

  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	0f b6 88 c0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+192]
  00063	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00066	8b 84 8a c4 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+196]
  0006d	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00071	74 39		 je	 SHORT $LN6@ActiveOpti

; 1744 : 	{
; 1745 : 		m_pDlgMatchItem[m_cbItemIndex]->SetWindowPos(NULL,5,30,rcTabCtrl.Width()-10,rcTabCtrl.Height()-30-5,SWP_NOZORDER|SWP_SHOWWINDOW);

  00073	6a 44		 push	 68			; 00000044H
  00075	8d 4d e8	 lea	 ecx, DWORD PTR _rcTabCtrl$[ebp]
  00078	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0007d	83 e8 23	 sub	 eax, 35			; 00000023H
  00080	50		 push	 eax
  00081	8d 4d e8	 lea	 ecx, DWORD PTR _rcTabCtrl$[ebp]
  00084	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00089	83 e8 0a	 sub	 eax, 10			; 0000000aH
  0008c	50		 push	 eax
  0008d	6a 1e		 push	 30			; 0000001eH
  0008f	6a 05		 push	 5
  00091	6a 00		 push	 0
  00093	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00096	0f b6 88 c0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+192]
  0009d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	8b 8c 8a c4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+196]
  000a7	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos
$LN6@ActiveOpti:

; 1746 : 	}
; 1747 : 
; 1748 : 	//设置控件
; 1749 : 	for (int i=0; i<CountArray(m_pDlgMatchItem); i++)

  000ac	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  000b3	eb 09		 jmp	 SHORT $LN4@ActiveOpti
$LN2@ActiveOpti:
  000b5	8b 45 e4	 mov	 eax, DWORD PTR _i$1[ebp]
  000b8	83 c0 01	 add	 eax, 1
  000bb	89 45 e4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@ActiveOpti:
  000be	83 7d e4 05	 cmp	 DWORD PTR _i$1[ebp], 5
  000c2	73 3a		 jae	 SHORT $LN1@ActiveOpti

; 1750 : 	{
; 1751 : 		if (i==m_cbItemIndex) continue;

  000c4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	0f b6 88 c0 00
	00 00		 movzx	 ecx, BYTE PTR [eax+192]
  000ce	39 4d e4	 cmp	 DWORD PTR _i$1[ebp], ecx
  000d1	75 02		 jne	 SHORT $LN7@ActiveOpti
  000d3	eb e0		 jmp	 SHORT $LN2@ActiveOpti
$LN7@ActiveOpti:

; 1752 : 		if (m_pDlgMatchItem[i]->m_hWnd!=NULL) m_pDlgMatchItem[i]->ShowWindow(SW_HIDE);

  000d5	8b 45 e4	 mov	 eax, DWORD PTR _i$1[ebp]
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  000e2	83 7a 20 00	 cmp	 DWORD PTR [edx+32], 0
  000e6	74 14		 je	 SHORT $LN8@ActiveOpti
  000e8	6a 00		 push	 0
  000ea	8b 45 e4	 mov	 eax, DWORD PTR _i$1[ebp]
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	8b 8c 81 c4 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+196]
  000f7	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$LN8@ActiveOpti:

; 1753 : 	}

  000fc	eb b7		 jmp	 SHORT $LN2@ActiveOpti
$LN1@ActiveOpti:

; 1754 : }

  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 04 00	 ret	 4
?ActiveOptionItem@CDlgMatchWizardStep1@@IAEXE@Z ENDP	; CDlgMatchWizardStep1::ActiveOptionItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveBaseOption@CDlgMatchWizardStep1@@IAE_NXZ
_TEXT	SEGMENT
_pComboBox$ = -8					; size = 4
_this$ = -4						; size = 4
?SaveBaseOption@CDlgMatchWizardStep1@@IAE_NXZ PROC	; CDlgMatchWizardStep1::SaveBaseOption, COMDAT
; _this$ = ecx

; 1707 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1708 : 	//比赛信息	
; 1709 : 	GetDlgItemText(IDC_EDIT_MATCH_NAME,m_pGameMatchOption->szMatchName,CountArray(m_pGameMatchOption->szMatchName));

  0000c	6a 20		 push	 32			; 00000020H
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00017	83 c1 12	 add	 ecx, 18			; 00000012H
  0001a	51		 push	 ecx
  0001b	68 56 23 00 00	 push	 9046			; 00002356H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?GetDlgItemTextA@CWnd@@QBEHHPADH@Z ; CWnd::GetDlgItemTextA

; 1710 : 
; 1711 : 	//验证名称
; 1712 : 	if (m_pGameMatchOption->szMatchName[0]==0)

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00031	ba 01 00 00 00	 mov	 edx, 1
  00036	6b c2 00	 imul	 eax, edx, 0
  00039	0f be 4c 01 12	 movsx	 ecx, BYTE PTR [ecx+eax+18]
  0003e	85 c9		 test	 ecx, ecx
  00040	75 26		 jne	 SHORT $LN2@SaveBaseOp

; 1713 : 	{
; 1714 : 		AfxMessageBox(TEXT("比赛名称不能为空，请重新输入！"));

  00042	6a 00		 push	 0
  00044	6a 00		 push	 0
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GNGDJPLC@?$LB?H?H?$PM?C?$PL?$LD?F?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD?$KB@
  0004b	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1715 : 
; 1716 : 		//设置焦点
; 1717 : 		GetDlgItem(IDC_EDIT_MATCH_NAME)->SetFocus();

  00050	68 56 23 00 00	 push	 9046			; 00002356H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0005d	8b c8		 mov	 ecx, eax
  0005f	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1718 : 
; 1719 : 		return false;

  00064	32 c0		 xor	 al, al
  00066	eb 2f		 jmp	 SHORT $LN1@SaveBaseOp
$LN2@SaveBaseOp:

; 1720 : 	}
; 1721 : 
; 1722 : 	//比赛类型
; 1723 : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_MATCH_TYPE);

  00068	68 4b 23 00 00	 push	 9035			; 0000234bH
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00075	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 1724 : 	m_pGameMatchOption->cbMatchType=(BYTE)pComboBox->GetItemData(pComboBox->GetCurSel());	

  00078	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0007b	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00084	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00092	88 42 11	 mov	 BYTE PTR [edx+17], al

; 1725 : 
; 1726 : 	return true;

  00095	b0 01		 mov	 al, 1
$LN1@SaveBaseOp:

; 1727 : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?SaveBaseOption@CDlgMatchWizardStep1@@IAE_NXZ ENDP	; CDlgMatchWizardStep1::SaveBaseOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?InitBaseOption@CDlgMatchWizardStep1@@IAEXXZ
_TEXT	SEGMENT
_nIndex$1 = -28						; size = 4
_i$2 = -24						; size = 4
_pszMatchType$3 = -20					; size = 8
_cbMatchType$4 = -12					; size = 2
_pComboBox$ = -8					; size = 4
_this$ = -4						; size = 4
?InitBaseOption@CDlgMatchWizardStep1@@IAEXXZ PROC	; CDlgMatchWizardStep1::InitBaseOption, COMDAT
; _this$ = ecx

; 1598 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1599 : 	//输入限制
; 1600 : 	((CEdit *)GetDlgItem(IDC_EDIT_MATCH_NAME))->LimitText(32);		

  0000c	6a 20		 push	 32			; 00000020H
  0000e	68 56 23 00 00	 push	 9046			; 00002356H
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0001b	8b c8		 mov	 ecx, eax
  0001d	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1601 : 
; 1602 : 	//比赛名称
; 1603 : 	SetDlgItemText(IDC_EDIT_MATCH_NAME,m_pGameMatchOption->szMatchName);

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0002b	83 c1 12	 add	 ecx, 18			; 00000012H
  0002e	51		 push	 ecx
  0002f	68 56 23 00 00	 push	 9046			; 00002356H
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?SetDlgItemTextA@CWnd@@QAEXHPBD@Z ; CWnd::SetDlgItemTextA

; 1604 : 
; 1605 : 	//比赛类型
; 1606 : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_MATCH_TYPE);

  0003c	68 4b 23 00 00	 push	 9035			; 0000234bH
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00049	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 1607 : 	if (pComboBox!=NULL)

  0004c	83 7d f8 00	 cmp	 DWORD PTR _pComboBox$[ebp], 0
  00050	0f 84 ac 00 00
	00		 je	 $LN1@InitBaseOp

; 1608 : 	{
; 1609 : 		//变量定义
; 1610 : 		BYTE cbMatchType[]={MATCH_TYPE_LOCKTIME,MATCH_TYPE_IMMEDIATE};

  00056	c6 45 f4 00	 mov	 BYTE PTR _cbMatchType$4[ebp], 0
  0005a	c6 45 f5 01	 mov	 BYTE PTR _cbMatchType$4[ebp+1], 1

; 1611 : 		LPCTSTR pszMatchType[]={TEXT("定时赛类型"),TEXT("即时赛类型")};

  0005e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pszMatchType$3[ebp], OFFSET ??_C@_0L@PPGJNCEH@?$LG?$KI?J?$LB?H?$PM?$MA?$OA?P?M@
  00065	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pszMatchType$3[ebp+4], OFFSET ??_C@_0L@CAFEOLKF@?$LM?$LE?J?$LB?H?$PM?$MA?$OA?P?M@

; 1612 : 
; 1613 : 		//构造类型
; 1614 : 		for (INT i=0;i<CountArray(cbMatchType);i++)

  0006c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00073	eb 09		 jmp	 SHORT $LN4@InitBaseOp
$LN2@InitBaseOp:
  00075	8b 45 e8	 mov	 eax, DWORD PTR _i$2[ebp]
  00078	83 c0 01	 add	 eax, 1
  0007b	89 45 e8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@InitBaseOp:
  0007e	83 7d e8 02	 cmp	 DWORD PTR _i$2[ebp], 2
  00082	73 4f		 jae	 SHORT $LN3@InitBaseOp

; 1615 : 		{
; 1616 : 			int nIndex=pComboBox->AddString(pszMatchType[i]);

  00084	8b 45 e8	 mov	 eax, DWORD PTR _i$2[ebp]
  00087	8b 4c 85 ec	 mov	 ecx, DWORD PTR _pszMatchType$3[ebp+eax*4]
  0008b	51		 push	 ecx
  0008c	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0008f	e8 00 00 00 00	 call	 ?AddString@CComboBox@@QAEHPBD@Z ; CComboBox::AddString
  00094	89 45 e4	 mov	 DWORD PTR _nIndex$1[ebp], eax

; 1617 : 			pComboBox->SetItemData(nIndex,cbMatchType[i]);

  00097	8b 45 e8	 mov	 eax, DWORD PTR _i$2[ebp]
  0009a	0f b6 4c 05 f4	 movzx	 ecx, BYTE PTR _cbMatchType$4[ebp+eax]
  0009f	51		 push	 ecx
  000a0	8b 55 e4	 mov	 edx, DWORD PTR _nIndex$1[ebp]
  000a3	52		 push	 edx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000a7	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData

; 1618 : 			if (m_pGameMatchOption->cbMatchType==cbMatchType[i])

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b5	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  000b9	8b 45 e8	 mov	 eax, DWORD PTR _i$2[ebp]
  000bc	0f b6 4c 05 f4	 movzx	 ecx, BYTE PTR _cbMatchType$4[ebp+eax]
  000c1	3b d1		 cmp	 edx, ecx
  000c3	75 0c		 jne	 SHORT $LN6@InitBaseOp

; 1619 : 			{
; 1620 : 				pComboBox->SetCurSel(nIndex);

  000c5	8b 45 e4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000cc	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN6@InitBaseOp:

; 1621 : 			}
; 1622 : 		}

  000d1	eb a2		 jmp	 SHORT $LN2@InitBaseOp
$LN3@InitBaseOp:

; 1623 : 
; 1624 : 		//默认选择
; 1625 : 		if (pComboBox->GetCurSel()==CB_ERR) pComboBox->SetCurSel(0);

  000d3	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000d6	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000db	83 f8 ff	 cmp	 eax, -1
  000de	75 0a		 jne	 SHORT $LN7@InitBaseOp
  000e0	6a 00		 push	 0
  000e2	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000e5	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN7@InitBaseOp:

; 1626 : 		if (m_pGameMatchOption->dwMatchID!=0) pComboBox->EnableWindow(FALSE);

  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f3	83 39 00	 cmp	 DWORD PTR [ecx], 0
  000f6	74 0a		 je	 SHORT $LN1@InitBaseOp
  000f8	6a 00		 push	 0
  000fa	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000fd	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN1@InitBaseOp:

; 1627 : 	}
; 1628 : 
; 1629 : 	//关联赛事
; 1630 : 	//pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_RELATED_MATCH);
; 1631 : 	//if (pComboBox!=NULL)
; 1632 : 	//{
; 1633 : 	//	//默认设置
; 1634 : 	//	pComboBox->EnableWindow(FALSE);
; 1635 : 
; 1636 : 	//	//定时赛
; 1637 : 	//	if (m_pGameMatchOption->cbMatchType==MATCH_TYPE_LOCKTIME)
; 1638 : 	//	{
; 1639 : 	//		//加载比赛
; 1640 : 	//		if (m_pMatchInfoBuffer!=NULL)
; 1641 : 	//		{
; 1642 : 	//			//变量定义
; 1643 : 	//			tagGameMatchOption * pGameMatchOption=NULL;
; 1644 : 
; 1645 : 	//			for(INT_PTR i=0;i<m_pMatchInfoBuffer->m_GameMatchOptionArray.GetCount();i++)
; 1646 : 	//			{
; 1647 : 	//				//获取对象
; 1648 : 	//				pGameMatchOption=m_pMatchInfoBuffer->m_GameMatchOptionArray[i];
; 1649 : 	//				if (pGameMatchOption->cbMatchType!=MATCH_TYPE_LOCKTIME) continue;
; 1650 : 	//				if (pGameMatchOption->dwMatchID==m_pGameMatchOption->dwMatchID) continue;
; 1651 : 
; 1652 : 	//				//变量定义
; 1653 : 	//				bool bBreakLoop=false;
; 1654 : 	//				tagGameMatchOption * pGameMatchOption1=NULL;
; 1655 : 	//				for(INT_PTR j=0;j<m_pMatchInfoBuffer->m_GameMatchOptionArray.GetCount();j++)
; 1656 : 	//				{
; 1657 : 	//					//获取对象
; 1658 : 	//					pGameMatchOption1=m_pMatchInfoBuffer->m_GameMatchOptionArray[j];
; 1659 : 	//					if (pGameMatchOption->cbMatchType!=MATCH_TYPE_LOCKTIME) continue;
; 1660 : 
; 1661 : 	//					if ((pGameMatchOption1->dwRelatedMatchID==pGameMatchOption->dwMatchID) && 
; 1662 : 	//						(pGameMatchOption1->dwMatchID!=m_pGameMatchOption->dwMatchID))
; 1663 : 	//					{
; 1664 : 	//						bBreakLoop=true;
; 1665 : 	//						break;
; 1666 : 	//					}
; 1667 : 	//				}
; 1668 : 
; 1669 : 	//				//退出判断
; 1670 : 	//				if (bBreakLoop==true) continue;
; 1671 : 	//			
; 1672 : 	//				//已经关联
; 1673 : 	//				if (m_pGameMatchOption->dwMatchID!=0 && pGameMatchOption->dwRelatedMatchID!=0)
; 1674 : 	//				{
; 1675 : 	//					//变量定义
; 1676 : 	//					bBreakLoop=false;
; 1677 : 	//					pGameMatchOption1=pGameMatchOption;
; 1678 : 
; 1679 : 	//					do
; 1680 : 	//					{							
; 1681 : 	//						if (pGameMatchOption1->dwRelatedMatchID==m_pGameMatchOption->dwMatchID)
; 1682 : 	//						{
; 1683 : 	//							bBreakLoop=true;
; 1684 : 	//							break;
; 1685 : 	//						}								
; 1686 : 	//					}while (pGameMatchOption1=m_pMatchInfoBuffer->SearchMatchOption(pGameMatchOption1->dwRelatedMatchID));	
; 1687 : 
; 1688 : 	//					//退出判断
; 1689 : 	//					if (bBreakLoop==true) continue;
; 1690 : 	//				}				
; 1691 : 
; 1692 : 	//				//添加赛事
; 1693 : 	//				int nIndex=pComboBox->AddString(pGameMatchOption->szMatchName);
; 1694 : 	//				pComboBox->SetItemData(nIndex,pGameMatchOption->dwMatchID);
; 1695 : 	//				if (pGameMatchOption->dwMatchID==m_pGameMatchOption->dwRelatedMatchID)
; 1696 : 	//				{
; 1697 : 	//					pComboBox->SetCurSel(nIndex);
; 1698 : 	//				}
; 1699 : 	//			}
; 1700 : 	//		}
; 1701 : 	//	}
; 1702 : 	//}	
; 1703 : }

  00102	5f		 pop	 edi
  00103	5e		 pop	 esi
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
?InitBaseOption@CDlgMatchWizardStep1@@IAEXXZ ENDP	; CDlgMatchWizardStep1::InitBaseOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchWizardStep1@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchWizardStep1@@UAEXHH@Z PROC	; CDlgMatchWizardStep1::RectifyControl, COMDAT
; _this$ = ecx

; 1592 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1593 : 	return;
; 1594 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchWizardStep1@@UAEXHH@Z ENDP	; CDlgMatchWizardStep1::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnMatchItemActive@CDlgMatchWizardStep1@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnMatchItemActive@CDlgMatchWizardStep1@@UAEXXZ PROC	; CDlgMatchWizardStep1::OnMatchItemActive, COMDAT
; _this$ = ecx

; 1586 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1587 : 	return;
; 1588 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnMatchItemActive@CDlgMatchWizardStep1@@UAEXXZ ENDP	; CDlgMatchWizardStep1::OnMatchItemActive
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchWizardStep1@@UAE_NXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchWizardStep1@@UAE_NXZ PROC	; CDlgMatchWizardStep1::SaveInputInfo, COMDAT
; _this$ = ecx

; 1571 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1572 : 	//保存输入
; 1573 : 	if (SaveBaseOption()==false) return false;

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?SaveBaseOption@CDlgMatchWizardStep1@@IAE_NXZ ; CDlgMatchWizardStep1::SaveBaseOption
  00014	0f b6 c0	 movzx	 eax, al
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $LN5@SaveInputI
  0001b	32 c0		 xor	 al, al
  0001d	eb 4b		 jmp	 SHORT $LN1@SaveInputI
$LN5@SaveInputI:

; 1574 : 
; 1575 : 	//遍历子项
; 1576 : 	for (int i=0; i<CountArray(m_pDlgMatchItem); i++)

  0001f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00026	eb 09		 jmp	 SHORT $LN4@SaveInputI
$LN2@SaveInputI:
  00028	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  0002b	83 c0 01	 add	 eax, 1
  0002e	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SaveInputI:
  00031	83 7d f8 05	 cmp	 DWORD PTR _i$1[ebp], 5
  00035	73 31		 jae	 SHORT $LN3@SaveInputI

; 1577 : 	{
; 1578 : 		if (m_pDlgMatchItem[i]->SaveInputInfo() == false) return false;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	8b 94 81 c4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+196]
  00044	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 12		 mov	 edx, DWORD PTR [edx]
  0004c	8b 8c 81 c4 00
	00 00		 mov	 ecx, DWORD PTR [ecx+eax*4+196]
  00053	8b 82 94 01 00
	00		 mov	 eax, DWORD PTR [edx+404]
  00059	ff d0		 call	 eax
  0005b	0f b6 c8	 movzx	 ecx, al
  0005e	85 c9		 test	 ecx, ecx
  00060	75 04		 jne	 SHORT $LN6@SaveInputI
  00062	32 c0		 xor	 al, al
  00064	eb 04		 jmp	 SHORT $LN1@SaveInputI
$LN6@SaveInputI:

; 1579 : 	}

  00066	eb c0		 jmp	 SHORT $LN2@SaveInputI
$LN3@SaveInputI:

; 1580 : 
; 1581 : 	return true;

  00068	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1582 : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?SaveInputInfo@CDlgMatchWizardStep1@@UAE_NXZ ENDP	; CDlgMatchWizardStep1::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchWizardStep1@@MAEHXZ
_TEXT	SEGMENT
$T1 = -112						; size = 8
$T2 = -104						; size = 8
_i$3 = -32						; size = 4
_rcCreate$ = -28					; size = 16
_pTabCtrl$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnInitDialog@CDlgMatchWizardStep1@@MAEHXZ PROC		; CDlgMatchWizardStep1::OnInitDialog, COMDAT
; _this$ = ecx

; 1519 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1520 : 	__super::OnInitDialog();

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1521 : 
; 1522 : 	//初始化配置
; 1523 : 	InitBaseOption();

  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?InitBaseOption@CDlgMatchWizardStep1@@IAEXXZ ; CDlgMatchWizardStep1::InitBaseOption

; 1524 : 
; 1525 : 	//获取控件
; 1526 : 	CTabCtrl * pTabCtrl=(CTabCtrl *)GetDlgItem(IDC_MATCH_OPTION);

  00026	68 62 23 00 00	 push	 9058			; 00002362H
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00033	89 45 f4	 mov	 DWORD PTR _pTabCtrl$[ebp], eax

; 1527 : 
; 1528 : 	//插入子项
; 1529 : 	pTabCtrl->InsertItem(TAB_OPTION_SIGNUP1,TEXT("报名方式"));

  00036	68 00 00 00 00	 push	 OFFSET ??_C@_08DNENCOFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN@
  0003b	6a 00		 push	 0
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  00040	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 1530 : 	pTabCtrl->InsertItem(TAB_OPTION_SIGNUP2,TEXT("报名条件"));

  00045	68 00 00 00 00	 push	 OFFSET ??_C@_08GGMHIHHC@?$LB?$KI?C?$PL?L?u?$LM?$PO@
  0004a	6a 01		 push	 1
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  0004f	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 1531 : 	pTabCtrl->InsertItem(TAB_OPTION_RANKINGMODE,TEXT("排名方式"));

  00054	68 00 00 00 00	 push	 OFFSET ??_C@_08NLOMAJOJ@?E?E?C?$PL?$LH?$LN?J?$LN@
  00059	6a 02		 push	 2
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  0005e	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 1532 : 	pTabCtrl->InsertItem(TAB_OPTION_DISTRIBUTE,TEXT("撮桌配置"));	

  00063	68 00 00 00 00	 push	 OFFSET ??_C@_08POFGBLDO@?$LE?i?W?$MA?E?d?V?C@
  00068	6a 03		 push	 3
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  0006d	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 1533 : 	pTabCtrl->InsertItem(TAB_OPTION_REWARD,TEXT("奖励配置"));	

  00072	68 00 00 00 00	 push	 OFFSET ??_C@_08JOGGGCJG@?$LN?$LB?$MA?x?E?d?V?C@
  00077	6a 04		 push	 4
  00079	8b 4d f4	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  0007c	e8 00 00 00 00	 call	 ?InsertItem@CTabCtrl@@QAEJHPBD@Z ; CTabCtrl::InsertItem

; 1534 : 
; 1535 : 	//设置大小
; 1536 : 	pTabCtrl->SetItemSize(CSize(120,25));

  00081	6a 19		 push	 25			; 00000019H
  00083	6a 78		 push	 120			; 00000078H
  00085	8d 4d 98	 lea	 ecx, DWORD PTR $T2[ebp]
  00088	e8 00 00 00 00	 call	 ??0CSize@@QAE@HH@Z	; CSize::CSize
  0008d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00090	51		 push	 ecx
  00091	8b 10		 mov	 edx, DWORD PTR [eax]
  00093	52		 push	 edx
  00094	8d 45 90	 lea	 eax, DWORD PTR $T1[ebp]
  00097	50		 push	 eax
  00098	8b 4d f4	 mov	 ecx, DWORD PTR _pTabCtrl$[ebp]
  0009b	e8 00 00 00 00	 call	 ?SetItemSize@CTabCtrl@@QAE?AVCSize@@V2@@Z ; CTabCtrl::SetItemSize

; 1537 : 
; 1538 : 	//添加子项
; 1539 : 	m_pDlgMatchItem[0]=&m_DlgMatchSignup1;

  000a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	05 98 02 00 00	 add	 eax, 664		; 00000298H
  000a8	b9 04 00 00 00	 mov	 ecx, 4
  000ad	6b d1 00	 imul	 edx, ecx, 0
  000b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	89 84 11 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx+196], eax

; 1540 : 	m_pDlgMatchItem[1]=&m_DlgMatchSignup2;

  000ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	05 50 03 00 00	 add	 eax, 848		; 00000350H
  000c2	b9 04 00 00 00	 mov	 ecx, 4
  000c7	c1 e1 00	 shl	 ecx, 0
  000ca	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000cd	89 84 0a c4 00
	00 00		 mov	 DWORD PTR [edx+ecx+196], eax

; 1541 : 	m_pDlgMatchItem[2]=&m_DlgMatchRankingMode;

  000d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	05 c0 04 00 00	 add	 eax, 1216		; 000004c0H
  000dc	b9 04 00 00 00	 mov	 ecx, 4
  000e1	d1 e1		 shl	 ecx, 1
  000e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	89 84 0a c4 00
	00 00		 mov	 DWORD PTR [edx+ecx+196], eax

; 1542 : 	m_pDlgMatchItem[3]=&m_DlgMatchDistribute;	

  000ed	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	05 08 04 00 00	 add	 eax, 1032		; 00000408H
  000f5	b9 04 00 00 00	 mov	 ecx, 4
  000fa	6b d1 03	 imul	 edx, ecx, 3
  000fd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	89 84 11 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx+196], eax

; 1543 : 	m_pDlgMatchItem[4]=&m_DlgMatchReward;	

  00107	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  0010f	b9 04 00 00 00	 mov	 ecx, 4
  00114	c1 e1 02	 shl	 ecx, 2
  00117	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	89 84 0a c4 00
	00 00		 mov	 DWORD PTR [edx+ecx+196], eax

; 1544 : 
; 1545 : 	//变量定义
; 1546 : 	CRect rcCreate(0,0,0,0);

  00121	6a 00		 push	 0
  00123	6a 00		 push	 0
  00125	6a 00		 push	 0
  00127	6a 00		 push	 0
  00129	8d 4d e4	 lea	 ecx, DWORD PTR _rcCreate$[ebp]
  0012c	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect

; 1547 : 
; 1548 : 	//设置子项
; 1549 : 	for (int i=0; i<CountArray(m_pDlgMatchItem); i++)

  00131	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  00138	eb 09		 jmp	 SHORT $LN4@OnInitDial
$LN2@OnInitDial:
  0013a	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  0013d	83 c0 01	 add	 eax, 1
  00140	89 45 e0	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@OnInitDial:
  00143	83 7d e0 05	 cmp	 DWORD PTR _i$3[ebp], 5
  00147	0f 83 85 00 00
	00		 jae	 $LN3@OnInitDial

; 1550 : 	{
; 1551 : 		//指针判断
; 1552 : 		if (m_pDlgMatchItem[i]==NULL) continue;

  0014d	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  00150	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	83 bc 81 c4 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+196], 0
  0015b	75 02		 jne	 SHORT $LN5@OnInitDial
  0015d	eb db		 jmp	 SHORT $LN2@OnInitDial
$LN5@OnInitDial:

; 1553 : 
; 1554 : 		//设置控件		
; 1555 : 		m_pDlgMatchItem[i]->SetGameMatchOption(m_pGameMatchOption);

  0015f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00162	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00168	51		 push	 ecx
  00169	8b 55 e0	 mov	 edx, DWORD PTR _i$3[ebp]
  0016c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016f	8b 8c 90 c4 00
	00 00		 mov	 ecx, DWORD PTR [eax+edx*4+196]
  00176	e8 00 00 00 00	 call	 ?SetGameMatchOption@CDlgMatchItem@@IAEXPAUtagGameMatchOption@@@Z ; CDlgMatchItem::SetGameMatchOption

; 1556 : 		m_pDlgMatchItem[i]->SetMatchInfoBuffer(m_pMatchInfoBuffer);

  0017b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0017e	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  00184	51		 push	 ecx
  00185	8b 55 e0	 mov	 edx, DWORD PTR _i$3[ebp]
  00188	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 8c 90 c4 00
	00 00		 mov	 ecx, DWORD PTR [eax+edx*4+196]
  00192	e8 00 00 00 00	 call	 ?SetMatchInfoBuffer@CDlgMatchItem@@IAEXPAVCMatchInfoBuffer@@@Z ; CDlgMatchItem::SetMatchInfoBuffer

; 1557 : 		m_pDlgMatchItem[i]->SetRewardInfoBuffer(m_pRewardInfoBuffer);

  00197	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0019a	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  001a0	51		 push	 ecx
  001a1	8b 55 e0	 mov	 edx, DWORD PTR _i$3[ebp]
  001a4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001a7	8b 8c 90 c4 00
	00 00		 mov	 ecx, DWORD PTR [eax+edx*4+196]
  001ae	e8 00 00 00 00	 call	 ?SetRewardInfoBuffer@CDlgMatchItem@@IAEXPAVCRewardInfoBuffer@@@Z ; CDlgMatchItem::SetRewardInfoBuffer

; 1558 : 
; 1559 : 		//创建子项		
; 1560 : 		m_pDlgMatchItem[i]->CreateMatchItem(rcCreate,pTabCtrl);

  001b3	8b 45 f4	 mov	 eax, DWORD PTR _pTabCtrl$[ebp]
  001b6	50		 push	 eax
  001b7	8d 4d e4	 lea	 ecx, DWORD PTR _rcCreate$[ebp]
  001ba	51		 push	 ecx
  001bb	8b 55 e0	 mov	 edx, DWORD PTR _i$3[ebp]
  001be	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c1	8b 8c 90 c4 00
	00 00		 mov	 ecx, DWORD PTR [eax+edx*4+196]
  001c8	e8 00 00 00 00	 call	 ?CreateMatchItem@CDlgMatchItem@@AAEXABVCRect@@PAVCWnd@@@Z ; CDlgMatchItem::CreateMatchItem

; 1561 : 	}

  001cd	e9 68 ff ff ff	 jmp	 $LN2@OnInitDial
$LN3@OnInitDial:

; 1562 : 
; 1563 : 	//激活子项
; 1564 : 	ActiveOptionItem(TAB_OPTION_SIGNUP1);

  001d2	6a 00		 push	 0
  001d4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001d7	e8 00 00 00 00	 call	 ?ActiveOptionItem@CDlgMatchWizardStep1@@IAEXE@Z ; CDlgMatchWizardStep1::ActiveOptionItem

; 1565 : 
; 1566 : 	return TRUE;

  001dc	b8 01 00 00 00	 mov	 eax, 1

; 1567 : }

  001e1	5f		 pop	 edi
  001e2	5e		 pop	 esi
  001e3	5b		 pop	 ebx
  001e4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e7	33 cd		 xor	 ecx, ebp
  001e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ee	8b e5		 mov	 esp, ebp
  001f0	5d		 pop	 ebp
  001f1	c3		 ret	 0
?OnInitDialog@CDlgMatchWizardStep1@@MAEHXZ ENDP		; CDlgMatchWizardStep1::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?DoDataExchange@CDlgMatchWizardStep1@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CDlgMatchWizardStep1@@MAEXPAVCDataExchange@@@Z PROC ; CDlgMatchWizardStep1::DoDataExchange, COMDAT
; _this$ = ecx

; 1513 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1514 : 	__super::DoDataExchange(pDX);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pDX$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 1515 : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?DoDataExchange@CDlgMatchWizardStep1@@MAEXPAVCDataExchange@@@Z ENDP ; CDlgMatchWizardStep1::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchWizardStep1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchWizardStep1@@UAE@XZ PROC			; CDlgMatchWizardStep1::~CDlgMatchWizardStep1, COMDAT
; _this$ = ecx

; 1508 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizardStep1@@6B@

; 1509 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 c0 04 00
	00		 add	 ecx, 1216		; 000004c0H
  0001e	e8 00 00 00 00	 call	 ??1CDlgMatchRankingMode@@UAE@XZ ; CDlgMatchRankingMode::~CDlgMatchRankingMode
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 08 04 00
	00		 add	 ecx, 1032		; 00000408H
  0002c	e8 00 00 00 00	 call	 ??1CDlgMatchDistribute@@UAE@XZ ; CDlgMatchDistribute::~CDlgMatchDistribute
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	81 c1 50 03 00
	00		 add	 ecx, 848		; 00000350H
  0003a	e8 00 00 00 00	 call	 ??1CDlgMatchSignup2@@UAE@XZ ; CDlgMatchSignup2::~CDlgMatchSignup2
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00048	e8 00 00 00 00	 call	 ??1CDlgMatchSignup1@@UAE@XZ ; CDlgMatchSignup1::~CDlgMatchSignup1
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00056	e8 00 00 00 00	 call	 ??1CDlgMatchReward@@UAE@XZ ; CDlgMatchReward::~CDlgMatchReward
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??1CDlgMatchWizardStep1@@UAE@XZ ENDP			; CDlgMatchWizardStep1::~CDlgMatchWizardStep1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchWizardStep1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgMatchWizardStep1@@QAE@XZ PROC			; CDlgMatchWizardStep1::CDlgMatchWizardStep1, COMDAT
; _this$ = ecx

; 1498 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgMatchWizardStep1@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1497 : CDlgMatchWizardStep1::CDlgMatchWizardStep1() : CDlgMatchWizardItem(IDD_MATCH_WIZARD_1)

  0002b	68 31 23 00 00	 push	 9009			; 00002331H
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CDlgMatchWizardItem@@IAE@I@Z ; CDlgMatchWizardItem::CDlgMatchWizardItem
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1498 : {

  0003f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizardStep1@@6B@
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00051	e8 00 00 00 00	 call	 ??0CDlgMatchReward@@QAE@XZ ; CDlgMatchReward::CDlgMatchReward
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  00063	e8 00 00 00 00	 call	 ??0CDlgMatchSignup1@@QAE@XZ ; CDlgMatchSignup1::CDlgMatchSignup1
  00068	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 50 03 00
	00		 add	 ecx, 848		; 00000350H
  00075	e8 00 00 00 00	 call	 ??0CDlgMatchSignup2@@QAE@XZ ; CDlgMatchSignup2::CDlgMatchSignup2
  0007a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 08 04 00
	00		 add	 ecx, 1032		; 00000408H
  00087	e8 00 00 00 00	 call	 ??0CDlgMatchDistribute@@QAE@XZ ; CDlgMatchDistribute::CDlgMatchDistribute
  0008c	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00090	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	81 c1 c0 04 00
	00		 add	 ecx, 1216		; 000004c0H
  00099	e8 00 00 00 00	 call	 ??0CDlgMatchRankingMode@@QAE@XZ ; CDlgMatchRankingMode::CDlgMatchRankingMode

; 1499 : 	//变量定义
; 1500 : 	m_cbItemIndex=0xff;

  0009e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	c6 80 c0 00 00
	00 ff		 mov	 BYTE PTR [eax+192], 255	; 000000ffH

; 1501 : 	ZeroMemory(m_pDlgMatchItem,sizeof(m_pDlgMatchItem));

  000a8	6a 14		 push	 20			; 00000014H
  000aa	6a 00		 push	 0
  000ac	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000af	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 _memset
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 
; 1503 : 	return;
; 1504 : }

  000bd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d1	59		 pop	 ecx
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00011	e9 00 00 00 00	 jmp	 ??1CDlgMatchReward@@UAE@XZ ; CDlgMatchReward::~CDlgMatchReward
__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 98 02 00
	00		 add	 ecx, 664		; 00000298H
  0001f	e9 00 00 00 00	 jmp	 ??1CDlgMatchSignup1@@UAE@XZ ; CDlgMatchSignup1::~CDlgMatchSignup1
__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 50 03 00
	00		 add	 ecx, 848		; 00000350H
  0002d	e9 00 00 00 00	 jmp	 ??1CDlgMatchSignup2@@UAE@XZ ; CDlgMatchSignup2::~CDlgMatchSignup2
__unwindfunclet$??0CDlgMatchWizardStep1@@QAE@XZ$4:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 08 04 00
	00		 add	 ecx, 1032		; 00000408H
  0003b	e9 00 00 00 00	 jmp	 ??1CDlgMatchDistribute@@UAE@XZ ; CDlgMatchDistribute::~CDlgMatchDistribute
__ehhandler$??0CDlgMatchWizardStep1@@QAE@XZ:
  00040	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00044	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00047	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgMatchWizardStep1@@QAE@XZ
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgMatchWizardStep1@@QAE@XZ ENDP			; CDlgMatchWizardStep1::CDlgMatchWizardStep1
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchWizardItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchWizardItem@@MAEPAXI@Z PROC			; CDlgMatchWizardItem::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchWizardItem@@MAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 c0 00 00 00	 push	 192			; 000000c0H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc c0 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 192
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 c0 00 00 00	 push	 192			; 000000c0H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchWizardItem@@MAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchWizardItem@@MAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchWizardItem@@MAEPAXI@Z ENDP			; CDlgMatchWizardItem::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchWizardItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchWizardItem@@MAEPAXI@Z PROC			; CDlgMatchWizardItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchWizardItem@@MAE@XZ ; CDlgMatchWizardItem::~CDlgMatchWizardItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 c0 00 00 00	 push	 192			; 000000c0H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchWizardItem@@MAEPAXI@Z ENDP			; CDlgMatchWizardItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMessageMap@CDlgMatchWizardItem@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgMatchWizardItem@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchWizardItem::GetMessageMap, COMDAT
; _this$ = ecx

; 21   : BEGIN_MESSAGE_MAP(CDlgMatchWizardItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchWizardItem::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgMatchWizardItem@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchWizardItem::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchWizardItem::GetThisMessageMap, COMDAT

; 21   : BEGIN_MESSAGE_MAP(CDlgMatchWizardItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 22   : 	ON_WM_SIZE()
; 23   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgMatchWizardItem@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchWizardItem::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnSize@CDlgMatchWizardItem@@AAEXIHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CDlgMatchWizardItem@@AAEXIHH@Z PROC		; CDlgMatchWizardItem::OnSize, COMDAT
; _this$ = ecx

; 1485 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1486 : 	__super::OnSize(nType, cx, cy);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 08	 mov	 edx, DWORD PTR _nType$[ebp]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?OnSize@CWnd@@IAEXIHH@Z	; CWnd::OnSize

; 1487 : 
; 1488 : 	//调整控件
; 1489 : 	RectifyControl(cx,cy);

  00020	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 90 9c 01 00
	00		 mov	 edx, DWORD PTR [eax+412]
  00036	ff d2		 call	 edx

; 1490 : 
; 1491 : 	return;
; 1492 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 0c 00	 ret	 12			; 0000000cH
?OnSize@CDlgMatchWizardItem@@AAEXIHH@Z ENDP		; CDlgMatchWizardItem::OnSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?ShowWizardItem@CDlgMatchWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rcRect$ = 8						; size = 4
_pParentWnd$ = 12					; size = 4
?ShowWizardItem@CDlgMatchWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z PROC ; CDlgMatchWizardItem::ShowWizardItem, COMDAT
; _this$ = ecx

; 1438 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1439 : 	//创建窗口
; 1440 : 	if (m_hWnd==NULL) 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	75 68		 jne	 SHORT $LN2@ShowWizard

; 1441 : 	{
; 1442 : 		//设置资源
; 1443 : 		AfxSetResourceHandle(GetModuleHandle(MODULE_MANAGER_DLL_NAME));

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 1444 : 
; 1445 : 		//创建窗口
; 1446 : 		Create(m_lpszTemplateName,pParentWnd);

  00026	8b 45 0c	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00033	52		 push	 edx
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 10		 mov	 edx, DWORD PTR [eax]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 82 70 01 00
	00		 mov	 eax, DWORD PTR [edx+368]
  00042	ff d0		 call	 eax

; 1447 : 		SetWindowPos(NULL,rcRect.left,rcRect.top,rcRect.Width(),rcRect.Height(),SWP_NOZORDER|SWP_NOACTIVATE);

  00044	6a 14		 push	 20			; 00000014H
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00049	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00052	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00057	50		 push	 eax
  00058	8b 45 08	 mov	 eax, DWORD PTR _rcRect$[ebp]
  0005b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005e	51		 push	 ecx
  0005f	8b 55 08	 mov	 edx, DWORD PTR _rcRect$[ebp]
  00062	8b 02		 mov	 eax, DWORD PTR [edx]
  00064	50		 push	 eax
  00065	6a 00		 push	 0
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 1448 : 
; 1449 : 		//设置资源
; 1450 : 		AfxSetResourceHandle(GetModuleHandle(NULL));

  0006f	6a 00		 push	 0
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle
$LN2@ShowWizard:

; 1451 : 	}
; 1452 : 
; 1453 : 	//设置变量
; 1454 : 	m_bSaveData=false;

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c6 80 a8 00 00
	00 00		 mov	 BYTE PTR [eax+168], 0

; 1455 : 
; 1456 : 	//激活子项
; 1457 : 	OnMatchItemActive();

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 10		 mov	 edx, DWORD PTR [eax]
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	8b 82 98 01 00
	00		 mov	 eax, DWORD PTR [edx+408]
  00095	ff d0		 call	 eax

; 1458 : 
; 1459 : 	//显示窗口
; 1460 : 	ShowWindow(SW_SHOW);

  00097	6a 05		 push	 5
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 1461 : 
; 1462 : 	return true;

  000a1	b0 01		 mov	 al, 1

; 1463 : }

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 08 00	 ret	 8
?ShowWizardItem@CDlgMatchWizardItem@@AAE_NABVCRect@@PAVCWnd@@@Z ENDP ; CDlgMatchWizardItem::ShowWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ PROC		; CDlgMatchWizardItem::SaveItemData, COMDAT
; _this$ = ecx

; 1422 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1423 : 	//保存数据
; 1424 : 	if ((m_hWnd!=NULL)&&(m_bSaveData==false))

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	74 39		 je	 SHORT $LN2@SaveItemDa
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	0f b6 88 a8 00
	00 00		 movzx	 ecx, BYTE PTR [eax+168]
  0001f	85 c9		 test	 ecx, ecx
  00021	75 2b		 jne	 SHORT $LN2@SaveItemDa

; 1425 : 	{
; 1426 : 		//保存数据
; 1427 : 		m_bSaveData=SaveInputInfo();

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8b 82 94 01 00
	00		 mov	 eax, DWORD PTR [edx+404]
  00031	ff d0		 call	 eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	88 81 a8 00 00
	00		 mov	 BYTE PTR [ecx+168], al

; 1428 : 
; 1429 : 		//结果判断
; 1430 : 		if (m_bSaveData==false) return false;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	0f b6 88 a8 00
	00 00		 movzx	 ecx, BYTE PTR [eax+168]
  00046	85 c9		 test	 ecx, ecx
  00048	75 04		 jne	 SHORT $LN2@SaveItemDa
  0004a	32 c0		 xor	 al, al
  0004c	eb 02		 jmp	 SHORT $LN1@SaveItemDa
$LN2@SaveItemDa:

; 1431 : 	}
; 1432 : 
; 1433 : 	return true;

  0004e	b0 01		 mov	 al, 1
$LN1@SaveItemDa:

; 1434 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?SaveItemData@CDlgMatchWizardItem@@AAE_NXZ ENDP		; CDlgMatchWizardItem::SaveItemData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnCancel@CDlgMatchWizardItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnCancel@CDlgMatchWizardItem@@MAEXXZ PROC		; CDlgMatchWizardItem::OnCancel, COMDAT
; _this$ = ecx

; 1476 : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1477 : 	//投递消息
; 1478 : 	GetParent()->PostMessage(WM_COMMAND,MAKELONG(IDCANCEL,0),0);

  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	68 11 01 00 00	 push	 273			; 00000111H
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 1479 : 
; 1480 : 	return;
; 1481 : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?OnCancel@CDlgMatchWizardItem@@MAEXXZ ENDP		; CDlgMatchWizardItem::OnCancel
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnOK@CDlgMatchWizardItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgMatchWizardItem@@MAEXXZ PROC			; CDlgMatchWizardItem::OnOK, COMDAT
; _this$ = ecx

; 1467 : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1468 : 	//投递消息
; 1469 : 	GetParent()->PostMessage(WM_COMMAND,MAKELONG(IDOK,0),0);

  0000c	6a 00		 push	 0
  0000e	6a 01		 push	 1
  00010	68 11 01 00 00	 push	 273			; 00000111H
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetParent@CWnd@@QBEPAV1@XZ ; CWnd::GetParent
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 1470 : 
; 1471 : 	return;
; 1472 : }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?OnOK@CDlgMatchWizardItem@@MAEXXZ ENDP			; CDlgMatchWizardItem::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchWizardItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchWizardItem@@MAE@XZ PROC			; CDlgMatchWizardItem::~CDlgMatchWizardItem, COMDAT
; _this$ = ecx

; 1417 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizardItem@@6B@

; 1418 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchWizardItem@@MAE@XZ ENDP			; CDlgMatchWizardItem::~CDlgMatchWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchWizardItem@@IAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIDTemplate$ = 8					; size = 4
??0CDlgMatchWizardItem@@IAE@I@Z PROC			; CDlgMatchWizardItem::CDlgMatchWizardItem, COMDAT
; _this$ = ecx

; 1402 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1401 : CDlgMatchWizardItem::CDlgMatchWizardItem(UINT nIDTemplate) : CDialog(nIDTemplate)

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nIDTemplate$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog

; 1402 : {

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchWizardItem@@6B@

; 1403 : 	//设置变量
; 1404 : 	m_bSaveData=true;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [eax+168], 1

; 1405 : 
; 1406 : 	//设置变量
; 1407 : 	m_pDlgMatchWizard=NULL;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 1408 : 	m_pGameMatchOption=NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+176], 0

; 1409 : 	m_pMatchInfoBuffer=NULL;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 80 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+180], 0

; 1410 : 	m_pRewardInfoBuffer=NULL;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	c7 80 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+184], 0

; 1411 : 
; 1412 : 	return;
; 1413 : }

  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
??0CDlgMatchWizardItem@@IAE@I@Z ENDP			; CDlgMatchWizardItem::CDlgMatchWizardItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchImmediate@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchImmediate@@UAEPAXI@Z PROC			; CDlgMatchImmediate::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchImmediate@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchImmediate@@UAE@XZ ; CDlgMatchImmediate::~CDlgMatchImmediate
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchImmediate@@UAE@XZ ; CDlgMatchImmediate::~CDlgMatchImmediate
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchImmediate@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchImmediate@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchImmediate@@UAEPAXI@Z ENDP			; CDlgMatchImmediate::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchImmediate@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchImmediate@@UAEPAXI@Z PROC			; CDlgMatchImmediate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchImmediate@@UAE@XZ ; CDlgMatchImmediate::~CDlgMatchImmediate
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchImmediate@@UAEPAXI@Z ENDP			; CDlgMatchImmediate::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchImmediate@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchImmediate@@MAEXHH@Z PROC	; CDlgMatchImmediate::RectifyControl, COMDAT
; _this$ = ecx

; 1394 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1395 : 	return;
; 1396 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchImmediate@@MAEXHH@Z ENDP	; CDlgMatchImmediate::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchImmediate@@MAE_NXZ
_TEXT	SEGMENT
tv273 = -76						; size = 4
tv264 = -76						; size = 4
_pImmediateMatch$ = -8					; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchImmediate@@MAE_NXZ PROC		; CDlgMatchImmediate::SaveInputInfo, COMDAT
; _this$ = ecx

; 1332 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1333 : 	//变量定义
; 1334 : 	tagImmediateMatch * pImmediateMatch=(tagImmediateMatch *)m_pGameMatchOption->cbMatchRule;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00015	83 c1 7e	 add	 ecx, 126		; 0000007eH
  00018	89 4d f8	 mov	 DWORD PTR _pImmediateMatch$[ebp], ecx

; 1335 : 
; 1336 : 	//比赛配置
; 1337 : 	pImmediateMatch->wPlayCount=GetDlgItemInt(IDC_PLAY_COUNT);	

  0001b	6a 01		 push	 1
  0001d	6a 00		 push	 0
  0001f	68 31 23 00 00	 push	 9009			; 00002331H
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _pImmediateMatch$[ebp]
  0002f	66 89 41 16	 mov	 WORD PTR [ecx+22], ax

; 1338 : 	pImmediateMatch->lInitalBase=GetDlgItemInt(IDC_INITIAL_BASE);

  00033	6a 01		 push	 1
  00035	6a 00		 push	 0
  00037	68 34 23 00 00	 push	 9012			; 00002334H
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00044	33 c9		 xor	 ecx, ecx
  00046	8b 55 f8	 mov	 edx, DWORD PTR _pImmediateMatch$[ebp]
  00049	89 42 06	 mov	 DWORD PTR [edx+6], eax
  0004c	89 4a 0a	 mov	 DWORD PTR [edx+10], ecx

; 1339 : 	pImmediateMatch->lInitalScore=GetDlgItemInt(IDC_INITIAL_SCORE);

  0004f	6a 01		 push	 1
  00051	6a 00		 push	 0
  00053	68 36 23 00 00	 push	 9014			; 00002336H
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00060	33 c9		 xor	 ecx, ecx
  00062	8b 55 f8	 mov	 edx, DWORD PTR _pImmediateMatch$[ebp]
  00065	89 42 0e	 mov	 DWORD PTR [edx+14], eax
  00068	89 4a 12	 mov	 DWORD PTR [edx+18], ecx

; 1340 : 	pImmediateMatch->wStartUserCount=GetDlgItemInt(IDC_START_USERCOUNT);

  0006b	6a 01		 push	 1
  0006d	6a 00		 push	 0
  0006f	68 35 23 00 00	 push	 9013			; 00002335H
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _pImmediateMatch$[ebp]
  0007f	66 89 01	 mov	 WORD PTR [ecx], ax

; 1341 : 	pImmediateMatch->wAndroidUserCount=GetDlgItemInt(IDC_ANDROID_USERCOUNT);	

  00082	6a 01		 push	 1
  00084	6a 00		 push	 0
  00086	68 37 23 00 00	 push	 9015			; 00002337H
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _pImmediateMatch$[ebp]
  00096	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 1342 : 	pImmediateMatch->cbSwitchTableCount=GetDlgItemInt(IDC_SWITCH_TABLE_COUNT);

  0009a	6a 01		 push	 1
  0009c	6a 00		 push	 0
  0009e	68 32 23 00 00	 push	 9010			; 00002332H
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _pImmediateMatch$[ebp]
  000ae	88 41 18	 mov	 BYTE PTR [ecx+24], al

; 1343 : 	pImmediateMatch->wAndroidDelaySignupTime=GetDlgItemInt(IDC_ANDROID_DELAYTIME);

  000b1	6a 01		 push	 1
  000b3	6a 00		 push	 0
  000b5	68 38 23 00 00	 push	 9016			; 00002338H
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _pImmediateMatch$[ebp]
  000c5	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 1344 : 
; 1345 : 	//比赛人数
; 1346 : 	if (pImmediateMatch->wStartUserCount==0)

  000c9	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000cc	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000cf	85 c9		 test	 ecx, ecx
  000d1	75 29		 jne	 SHORT $LN2@SaveInputI

; 1347 : 	{
; 1348 : 		AfxMessageBox(TEXT("开赛人数设置不合法，请重新输入！"));

  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@IBGJJLPI@?$LP?$KK?H?$PM?H?K?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  000dc	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1349 : 
; 1350 : 		//设置焦点
; 1351 : 		GetDlgItem(IDC_START_USERCOUNT)->SetFocus();

  000e1	68 35 23 00 00	 push	 9013			; 00002335H
  000e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000ee	8b c8		 mov	 ecx, eax
  000f0	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1352 : 
; 1353 : 		return false;

  000f5	32 c0		 xor	 al, al
  000f7	e9 a7 00 00 00	 jmp	 $LN1@SaveInputI
$LN2@SaveInputI:

; 1354 : 	}
; 1355 : 
; 1356 : 	//游戏底分
; 1357 : 	if (pImmediateMatch->lInitalBase==0)

  000fc	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000ff	89 45 b4	 mov	 DWORD PTR tv264[ebp], eax
  00102	8b 4d b4	 mov	 ecx, DWORD PTR tv264[ebp]
  00105	8b 55 b4	 mov	 edx, DWORD PTR tv264[ebp]
  00108	8b 41 06	 mov	 eax, DWORD PTR [ecx+6]
  0010b	0b 42 0a	 or	 eax, DWORD PTR [edx+10]
  0010e	75 26		 jne	 SHORT $LN3@SaveInputI

; 1358 : 	{
; 1359 : 		AfxMessageBox(TEXT("游戏底分设置不合法，请重新输入！"));

  00110	6a 00		 push	 0
  00112	6a 00		 push	 0
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@PEECONKK@?S?N?O?$LH?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  00119	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1360 : 
; 1361 : 		//设置焦点
; 1362 : 		GetDlgItem(IDC_INITIAL_BASE)->SetFocus();

  0011e	68 34 23 00 00	 push	 9012			; 00002334H
  00123	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00126	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0012b	8b c8		 mov	 ecx, eax
  0012d	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1363 : 
; 1364 : 		return false;

  00132	32 c0		 xor	 al, al
  00134	eb 6d		 jmp	 SHORT $LN1@SaveInputI
$LN3@SaveInputI:

; 1365 : 	}
; 1366 : 
; 1367 : 	//初始底分
; 1368 : 	if (pImmediateMatch->lInitalScore==0)

  00136	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00139	89 45 b4	 mov	 DWORD PTR tv273[ebp], eax
  0013c	8b 4d b4	 mov	 ecx, DWORD PTR tv273[ebp]
  0013f	8b 55 b4	 mov	 edx, DWORD PTR tv273[ebp]
  00142	8b 41 0e	 mov	 eax, DWORD PTR [ecx+14]
  00145	0b 42 12	 or	 eax, DWORD PTR [edx+18]
  00148	75 26		 jne	 SHORT $LN4@SaveInputI

; 1369 : 	{
; 1370 : 		AfxMessageBox(TEXT("初始底分设置不合法，请重新输入！"));

  0014a	6a 00		 push	 0
  0014c	6a 00		 push	 0
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@JCEBBJJ@?$LD?u?J?$LM?$LF?W?$LH?V?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  00153	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1371 : 
; 1372 : 		//设置焦点
; 1373 : 		GetDlgItem(IDC_INITIAL_SCORE)->SetFocus();

  00158	68 36 23 00 00	 push	 9014			; 00002336H
  0015d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00165	8b c8		 mov	 ecx, eax
  00167	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1374 : 
; 1375 : 		return false;

  0016c	32 c0		 xor	 al, al
  0016e	eb 33		 jmp	 SHORT $LN1@SaveInputI
$LN4@SaveInputI:

; 1376 : 	}
; 1377 : 
; 1378 : 	//游戏局数
; 1379 : 	if (pImmediateMatch->wPlayCount==0)

  00170	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00173	0f b7 48 16	 movzx	 ecx, WORD PTR [eax+22]
  00177	85 c9		 test	 ecx, ecx
  00179	75 26		 jne	 SHORT $LN5@SaveInputI

; 1380 : 	{
; 1381 : 		AfxMessageBox(TEXT("游戏局数设置不合法，请重新输入！"));

  0017b	6a 00		 push	 0
  0017d	6a 00		 push	 0
  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FLPJDOOI@?S?N?O?$LH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  00184	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1382 : 
; 1383 : 		//设置焦点
; 1384 : 		GetDlgItem(IDC_PLAY_COUNT)->SetFocus();

  00189	68 31 23 00 00	 push	 9009			; 00002331H
  0018e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00196	8b c8		 mov	 ecx, eax
  00198	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1385 : 
; 1386 : 		return false;

  0019d	32 c0		 xor	 al, al
  0019f	eb 02		 jmp	 SHORT $LN1@SaveInputI
$LN5@SaveInputI:

; 1387 : 	}
; 1388 : 
; 1389 : 	return true;

  001a1	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1390 : }

  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c3		 ret	 0
?SaveInputInfo@CDlgMatchImmediate@@MAE_NXZ ENDP		; CDlgMatchImmediate::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchImmediate@@MAEHXZ
_TEXT	SEGMENT
tv297 = -76						; size = 4
tv289 = -76						; size = 4
_pImmediateMatch$ = -8					; size = 4
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchImmediate@@MAEHXZ PROC		; CDlgMatchImmediate::OnInitDialog, COMDAT
; _this$ = ecx

; 1271 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1272 : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 1273 : 
; 1274 : 	//输入限制
; 1275 : 	((CEdit *)GetDlgItem(IDC_START_USERCOUNT))->LimitText(3);

  00014	6a 03		 push	 3
  00016	68 35 23 00 00	 push	 9013			; 00002335H
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1276 : 	((CEdit *)GetDlgItem(IDC_ANDROID_USERCOUNT))->LimitText(2);

  0002a	6a 02		 push	 2
  0002c	68 37 23 00 00	 push	 9015			; 00002337H
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1277 : 	((CEdit *)GetDlgItem(IDC_INITIAL_BASE))->LimitText(8);

  00040	6a 08		 push	 8
  00042	68 34 23 00 00	 push	 9012			; 00002334H
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1278 : 	((CEdit *)GetDlgItem(IDC_INITIAL_SCORE))->LimitText(8);

  00056	6a 08		 push	 8
  00058	68 36 23 00 00	 push	 9014			; 00002336H
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1279 : 	((CEdit *)GetDlgItem(IDC_PLAY_COUNT))->LimitText(3);

  0006c	6a 03		 push	 3
  0006e	68 31 23 00 00	 push	 9009			; 00002331H
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1280 : 	((CEdit *)GetDlgItem(IDC_SWITCH_TABLE_COUNT))->LimitText(3);

  00082	6a 03		 push	 3
  00084	68 32 23 00 00	 push	 9010			; 00002332H
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 1281 : 
; 1282 : 	//变量定义
; 1283 : 	tagImmediateMatch * pImmediateMatch=(tagImmediateMatch *)m_pGameMatchOption->cbMatchRule;

  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000a1	83 c1 7e	 add	 ecx, 126		; 0000007eH
  000a4	89 4d f8	 mov	 DWORD PTR _pImmediateMatch$[ebp], ecx

; 1284 : 
; 1285 : 	//开赛人数
; 1286 : 	if (pImmediateMatch->wStartUserCount!=0)

  000a7	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000aa	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ad	85 c9		 test	 ecx, ecx
  000af	74 16		 je	 SHORT $LN2@OnInitDial

; 1287 : 	{
; 1288 : 		SetDlgItemInt(IDC_START_USERCOUNT,pImmediateMatch->wStartUserCount);

  000b1	6a 01		 push	 1
  000b3	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000b6	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000b9	51		 push	 ecx
  000ba	68 35 23 00 00	 push	 9013			; 00002335H
  000bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN2@OnInitDial:

; 1289 : 	}
; 1290 : 
; 1291 : 	//机器人数
; 1292 : 	if (pImmediateMatch->wAndroidUserCount!=0)

  000c7	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000ca	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000ce	85 c9		 test	 ecx, ecx
  000d0	74 17		 je	 SHORT $LN3@OnInitDial

; 1293 : 	{
; 1294 : 		SetDlgItemInt(IDC_ANDROID_USERCOUNT,pImmediateMatch->wAndroidUserCount);

  000d2	6a 01		 push	 1
  000d4	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000d7	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  000db	51		 push	 ecx
  000dc	68 37 23 00 00	 push	 9015			; 00002337H
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN3@OnInitDial:

; 1295 : 	}
; 1296 : 
; 1297 : 	//机器等待
; 1298 : 	if (pImmediateMatch->wAndroidDelaySignupTime!=0)

  000e9	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000ec	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  000f0	85 c9		 test	 ecx, ecx
  000f2	74 17		 je	 SHORT $LN4@OnInitDial

; 1299 : 	{
; 1300 : 		SetDlgItemInt(IDC_ANDROID_DELAYTIME,pImmediateMatch->wAndroidDelaySignupTime);

  000f4	6a 01		 push	 1
  000f6	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  000f9	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  000fd	51		 push	 ecx
  000fe	68 38 23 00 00	 push	 9016			; 00002338H
  00103	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN4@OnInitDial:

; 1301 : 	}
; 1302 : 
; 1303 : 	//游戏底分
; 1304 : 	if (pImmediateMatch->lInitalBase!=0)

  0010b	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  0010e	89 45 b4	 mov	 DWORD PTR tv289[ebp], eax
  00111	8b 4d b4	 mov	 ecx, DWORD PTR tv289[ebp]
  00114	8b 55 b4	 mov	 edx, DWORD PTR tv289[ebp]
  00117	8b 41 06	 mov	 eax, DWORD PTR [ecx+6]
  0011a	0b 42 0a	 or	 eax, DWORD PTR [edx+10]
  0011d	74 16		 je	 SHORT $LN5@OnInitDial

; 1305 : 	{
; 1306 : 		SetDlgItemInt(IDC_INITIAL_BASE,(UINT)pImmediateMatch->lInitalBase);

  0011f	6a 01		 push	 1
  00121	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00124	8b 48 06	 mov	 ecx, DWORD PTR [eax+6]
  00127	51		 push	 ecx
  00128	68 34 23 00 00	 push	 9012			; 00002334H
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN5@OnInitDial:

; 1307 : 	}
; 1308 : 
; 1309 : 	//初始底分
; 1310 : 	if (pImmediateMatch->lInitalScore!=0)

  00135	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00138	89 45 b4	 mov	 DWORD PTR tv297[ebp], eax
  0013b	8b 4d b4	 mov	 ecx, DWORD PTR tv297[ebp]
  0013e	8b 55 b4	 mov	 edx, DWORD PTR tv297[ebp]
  00141	8b 41 0e	 mov	 eax, DWORD PTR [ecx+14]
  00144	0b 42 12	 or	 eax, DWORD PTR [edx+18]
  00147	74 16		 je	 SHORT $LN6@OnInitDial

; 1311 : 	{
; 1312 : 		SetDlgItemInt(IDC_INITIAL_SCORE,(UINT)pImmediateMatch->lInitalScore);

  00149	6a 01		 push	 1
  0014b	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  0014e	8b 48 0e	 mov	 ecx, DWORD PTR [eax+14]
  00151	51		 push	 ecx
  00152	68 36 23 00 00	 push	 9014			; 00002336H
  00157	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015a	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN6@OnInitDial:

; 1313 : 	}
; 1314 : 
; 1315 : 	//游戏局数
; 1316 : 	if (pImmediateMatch->wPlayCount!=0)

  0015f	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00162	0f b7 48 16	 movzx	 ecx, WORD PTR [eax+22]
  00166	85 c9		 test	 ecx, ecx
  00168	74 17		 je	 SHORT $LN7@OnInitDial

; 1317 : 	{
; 1318 : 		SetDlgItemInt(IDC_PLAY_COUNT,pImmediateMatch->wPlayCount);

  0016a	6a 01		 push	 1
  0016c	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  0016f	0f b7 48 16	 movzx	 ecx, WORD PTR [eax+22]
  00173	51		 push	 ecx
  00174	68 31 23 00 00	 push	 9009			; 00002331H
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN7@OnInitDial:

; 1319 : 	}
; 1320 : 
; 1321 : 	//换桌局数
; 1322 : 	if (pImmediateMatch->cbSwitchTableCount!=0)

  00181	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00184	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00188	85 c9		 test	 ecx, ecx
  0018a	74 17		 je	 SHORT $LN8@OnInitDial

; 1323 : 	{
; 1324 : 		SetDlgItemInt(IDC_SWITCH_TABLE_COUNT,pImmediateMatch->cbSwitchTableCount);

  0018c	6a 01		 push	 1
  0018e	8b 45 f8	 mov	 eax, DWORD PTR _pImmediateMatch$[ebp]
  00191	0f b6 48 18	 movzx	 ecx, BYTE PTR [eax+24]
  00195	51		 push	 ecx
  00196	68 32 23 00 00	 push	 9010			; 00002332H
  0019b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019e	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN8@OnInitDial:

; 1325 : 	}
; 1326 : 
; 1327 : 	return TRUE;

  001a3	b8 01 00 00 00	 mov	 eax, 1

; 1328 : }

  001a8	5f		 pop	 edi
  001a9	5e		 pop	 esi
  001aa	5b		 pop	 ebx
  001ab	8b e5		 mov	 esp, ebp
  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
?OnInitDialog@CDlgMatchImmediate@@MAEHXZ ENDP		; CDlgMatchImmediate::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchImmediate@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchImmediate@@UAE@XZ PROC			; CDlgMatchImmediate::~CDlgMatchImmediate, COMDAT
; _this$ = ecx

; 1266 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchImmediate@@6B@

; 1267 : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchImmediate@@UAE@XZ ENDP			; CDlgMatchImmediate::~CDlgMatchImmediate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchImmediate@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgMatchImmediate@@QAE@XZ PROC			; CDlgMatchImmediate::CDlgMatchImmediate, COMDAT
; _this$ = ecx

; 1261 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1260 : CDlgMatchImmediate::CDlgMatchImmediate(): CDlgMatchItem(IDD_MATCH_IMMEDIATE)

  0000c	68 34 23 00 00	 push	 9012			; 00002334H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem

; 1261 : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchImmediate@@6B@

; 1262 : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgMatchImmediate@@QAE@XZ ENDP			; CDlgMatchImmediate::CDlgMatchImmediate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchLockTime@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchLockTime@@UAEPAXI@Z PROC			; CDlgMatchLockTime::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchLockTime@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchLockTime@@UAE@XZ ; CDlgMatchLockTime::~CDlgMatchLockTime
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchLockTime@@UAE@XZ ; CDlgMatchLockTime::~CDlgMatchLockTime
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchLockTime@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchLockTime@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchLockTime@@UAEPAXI@Z ENDP			; CDlgMatchLockTime::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchLockTime@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchLockTime@@UAEPAXI@Z PROC			; CDlgMatchLockTime::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchLockTime@@UAE@XZ ; CDlgMatchLockTime::~CDlgMatchLockTime
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchLockTime@@UAEPAXI@Z ENDP			; CDlgMatchLockTime::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchLockTime@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchLockTime@@MAEXHH@Z PROC	; CDlgMatchLockTime::RectifyControl, COMDAT
; _this$ = ecx

; 1253 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1254 : 	return;
; 1255 : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchLockTime@@MAEXHH@Z ENDP	; CDlgMatchLockTime::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchLockTime@@MAE_NXZ
_TEXT	SEGMENT
tv766 = -212						; size = 8
tv745 = -212						; size = 8
tv702 = -212						; size = 8
tv681 = -212						; size = 8
tv643 = -208						; size = 4
$T1 = -204						; size = 8
$T2 = -196						; size = 8
$T3 = -188						; size = 8
$T4 = -180						; size = 8
_SignuStartDateTime$ = -108				; size = 8
_SignupEndDateTime$ = -100				; size = 8
_StartDateTime$ = -92					; size = 8
_EndDateTime$ = -84					; size = 8
_pEndTime$ = -76					; size = 4
_pStartTime$ = -72					; size = 4
_pEndDate$ = -68					; size = 4
_pStartDate$ = -64					; size = 4
_EndDate$ = -60						; size = 8
_EndTime$ = -52						; size = 8
_StartDate$ = -44					; size = 8
_StartTime$ = -36					; size = 8
_TimeSpad$ = -28					; size = 8
_DateSpad$ = -20					; size = 8
_pComboBox$ = -12					; size = 4
_pLockTimeMatch$ = -8					; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchLockTime@@MAE_NXZ PROC		; CDlgMatchLockTime::SaveInputInfo, COMDAT
; _this$ = ecx

; 1055 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1056 : 	//变量定义
; 1057 : 	tagLockTimeMatch * pLockTimeMatch=(tagLockTimeMatch *)m_pGameMatchOption->cbMatchRule;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00018	83 c1 7e	 add	 ecx, 126		; 0000007eH
  0001b	89 4d f8	 mov	 DWORD PTR _pLockTimeMatch$[ebp], ecx

; 1058 : 
; 1059 : 	//获取控件
; 1060 : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_MATCH_MODE);

  0001e	68 6b 23 00 00	 push	 9067			; 0000236bH
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0002b	89 45 f4	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 1061 : 
; 1062 : 	//基础配置
; 1063 : 	pLockTimeMatch->lMatchInitScore=GetDlgItemInt(IDC_INIT_SCORE);

  0002e	6a 01		 push	 1
  00030	6a 00		 push	 0
  00032	68 5e 23 00 00	 push	 9054			; 0000235eH
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0003f	33 c9		 xor	 ecx, ecx
  00041	8b 55 f8	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  00044	89 42 49	 mov	 DWORD PTR [edx+73], eax
  00047	89 4a 4d	 mov	 DWORD PTR [edx+77], ecx

; 1064 : 	pLockTimeMatch->lMatchCullScore=GetDlgItemInt(IDC_CULL_SCORE);

  0004a	6a 01		 push	 1
  0004c	6a 00		 push	 0
  0004e	68 5f 23 00 00	 push	 9055			; 0000235fH
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0005b	33 c9		 xor	 ecx, ecx
  0005d	8b 55 f8	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  00060	89 42 51	 mov	 DWORD PTR [edx+81], eax
  00063	89 4a 55	 mov	 DWORD PTR [edx+85], ecx

; 1065 : 	pLockTimeMatch->wMinPlayCount=GetDlgItemInt(IDC_MIN_PLAYCOUNT);

  00066	6a 01		 push	 1
  00068	6a 00		 push	 0
  0006a	68 33 23 00 00	 push	 9011			; 00002333H
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  0007a	66 89 41 59	 mov	 WORD PTR [ecx+89], ax

; 1066 : 	pLockTimeMatch->wMaxPlayCount=GetDlgItemInt(IDC_MAX_PLAYCOUNT);

  0007e	6a 01		 push	 1
  00080	6a 00		 push	 0
  00082	68 36 23 00 00	 push	 9014			; 00002336H
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  00092	66 89 41 5b	 mov	 WORD PTR [ecx+91], ax

; 1067 : 	pLockTimeMatch->wStartUserCount=GetDlgItemInt(IDC_MIN_MATCH_USER);

  00096	6a 01		 push	 1
  00098	6a 00		 push	 0
  0009a	68 34 23 00 00	 push	 9012			; 00002334H
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  000aa	66 89 41 27	 mov	 WORD PTR [ecx+39], ax

; 1068 : 	pLockTimeMatch->wMaxSignupUser=GetDlgItemInt(IDD_MAX_SIGNUP_USER);

  000ae	6a 01		 push	 1
  000b0	6a 00		 push	 0
  000b2	68 35 23 00 00	 push	 9013			; 00002335H
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  000c2	66 89 41 25	 mov	 WORD PTR [ecx+37], ax

; 1069 : 	pLockTimeMatch->wEndDelayTime=GetDlgItemInt(IDD_END_DELAY_TIME);	

  000c6	6a 01		 push	 1
  000c8	6a 00		 push	 0
  000ca	68 37 23 00 00	 push	 9015			; 00002337H
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  000da	89 01		 mov	 DWORD PTR [ecx], eax

; 1070 : 	pLockTimeMatch->cbMatchMode=(BYTE)(pComboBox->GetItemData(pComboBox->GetCurSel()));

  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000df	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  000e4	50		 push	 eax
  000e5	8b 4d f4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000e8	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  000f0	88 41 24	 mov	 BYTE PTR [ecx+36], al

; 1071 : 
; 1072 : 	//开赛人数
; 1073 : 	if (pLockTimeMatch->wStartUserCount==0)

  000f3	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  000f6	0f b7 48 27	 movzx	 ecx, WORD PTR [eax+39]
  000fa	85 c9		 test	 ecx, ecx
  000fc	75 29		 jne	 SHORT $LN2@SaveInputI

; 1074 : 	{
; 1075 : 		AfxMessageBox(TEXT("开赛人数设置不合法，请重新输入！"));

  000fe	6a 00		 push	 0
  00100	6a 00		 push	 0
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@IBGJJLPI@?$LP?$KK?H?$PM?H?K?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  00107	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1076 : 
; 1077 : 		GetDlgItem(IDC_MIN_MATCH_USER)->SetFocus();

  0010c	68 34 23 00 00	 push	 9012			; 00002334H
  00111	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00114	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00119	8b c8		 mov	 ecx, eax
  0011b	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1078 : 
; 1079 : 		return false;

  00120	32 c0		 xor	 al, al
  00122	e9 ad 05 00 00	 jmp	 $LN1@SaveInputI
$LN2@SaveInputI:

; 1080 : 	}
; 1081 : 
; 1082 : 	//报名人数
; 1083 : 	if (pLockTimeMatch->wMaxSignupUser<pLockTimeMatch->wStartUserCount)

  00127	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0012a	0f b7 48 25	 movzx	 ecx, WORD PTR [eax+37]
  0012e	8b 55 f8	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  00131	0f b7 42 27	 movzx	 eax, WORD PTR [edx+39]
  00135	3b c8		 cmp	 ecx, eax
  00137	7d 29		 jge	 SHORT $LN3@SaveInputI

; 1084 : 	{
; 1085 : 		AfxMessageBox(TEXT("报名人数不能少于开赛人数，请重新输入！"));

  00139	6a 00		 push	 0
  0013b	6a 00		 push	 0
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OLBIFNIB@?$LB?$KI?C?$PL?H?K?J?$PN?$LC?$LL?D?$NM?I?Y?S?Z?$LP?$KK?H?$PM?H?K?J?$PN?$KD?$KM?G?k?V?X?P@
  00142	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1086 : 
; 1087 : 		GetDlgItem(IDD_MAX_SIGNUP_USER)->SetFocus();

  00147	68 35 23 00 00	 push	 9013			; 00002335H
  0014c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1088 : 
; 1089 : 		return false;

  0015b	32 c0		 xor	 al, al
  0015d	e9 72 05 00 00	 jmp	 $LN1@SaveInputI
$LN3@SaveInputI:

; 1090 : 	}
; 1091 : 
; 1092 : 	//初始分数
; 1093 : 	if (pLockTimeMatch->lMatchInitScore==0)

  00162	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00165	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv643[ebp], eax
  0016b	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv643[ebp]
  00171	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv643[ebp]
  00177	8b 41 49	 mov	 eax, DWORD PTR [ecx+73]
  0017a	0b 42 4d	 or	 eax, DWORD PTR [edx+77]
  0017d	75 29		 jne	 SHORT $LN4@SaveInputI

; 1094 : 	{
; 1095 : 		AfxMessageBox(TEXT("初始分数设置不合法，请重新输入！"));

  0017f	6a 00		 push	 0
  00181	6a 00		 push	 0
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GLEENOFN@?$LD?u?J?$LM?$LH?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  00188	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1096 : 
; 1097 : 		GetDlgItem(IDC_INIT_SCORE)->SetFocus();

  0018d	68 5e 23 00 00	 push	 9054			; 0000235eH
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0019a	8b c8		 mov	 ecx, eax
  0019c	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1098 : 
; 1099 : 		return false;

  001a1	32 c0		 xor	 al, al
  001a3	e9 2c 05 00 00	 jmp	 $LN1@SaveInputI
$LN4@SaveInputI:

; 1100 : 	}
; 1101 : 
; 1102 : 	//有效局数
; 1103 : 	if (pLockTimeMatch->wMinPlayCount==0)

  001a8	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001ab	0f b7 48 59	 movzx	 ecx, WORD PTR [eax+89]
  001af	85 c9		 test	 ecx, ecx
  001b1	75 29		 jne	 SHORT $LN5@SaveInputI

; 1104 : 	{
; 1105 : 		AfxMessageBox(TEXT("有效局数设置不合法，请重新输入！"));

  001b3	6a 00		 push	 0
  001b5	6a 00		 push	 0
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@CNOBBOMH@?S?P?P?$KH?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  001bc	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1106 : 
; 1107 : 		GetDlgItem(IDC_MIN_PLAYCOUNT)->SetFocus();

  001c1	68 33 23 00 00	 push	 9011			; 00002333H
  001c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001ce	8b c8		 mov	 ecx, eax
  001d0	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1108 : 
; 1109 : 		return false;

  001d5	32 c0		 xor	 al, al
  001d7	e9 f8 04 00 00	 jmp	 $LN1@SaveInputI
$LN5@SaveInputI:

; 1110 : 	}
; 1111 : 
; 1112 : 	
; 1113 : 	//最大局数
; 1114 : 	if (pLockTimeMatch->wMaxPlayCount!=0 && pLockTimeMatch->wMaxPlayCount<pLockTimeMatch->wMinPlayCount)

  001dc	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001df	0f b7 48 5b	 movzx	 ecx, WORD PTR [eax+91]
  001e3	85 c9		 test	 ecx, ecx
  001e5	74 3b		 je	 SHORT $LN6@SaveInputI
  001e7	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001ea	0f b7 48 5b	 movzx	 ecx, WORD PTR [eax+91]
  001ee	8b 55 f8	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  001f1	0f b7 42 59	 movzx	 eax, WORD PTR [edx+89]
  001f5	3b c8		 cmp	 ecx, eax
  001f7	7d 29		 jge	 SHORT $LN6@SaveInputI

; 1115 : 	{
; 1116 : 		AfxMessageBox(TEXT("最大局数设置不合法，请重新输入！"));

  001f9	6a 00		 push	 0
  001fb	6a 00		 push	 0
  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NBDOAMNH@?W?n?$LE?s?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J?d?H?k?$KD@
  00202	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1117 : 
; 1118 : 		GetDlgItem(IDC_MIN_PLAYCOUNT)->SetFocus();

  00207	68 33 23 00 00	 push	 9011			; 00002333H
  0020c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020f	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00214	8b c8		 mov	 ecx, eax
  00216	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1119 : 
; 1120 : 		return false;

  0021b	32 c0		 xor	 al, al
  0021d	e9 b2 04 00 00	 jmp	 $LN1@SaveInputI
$LN6@SaveInputI:

; 1121 : 	}
; 1122 : 	
; 1123 :     
; 1124 : 	//时间定义
; 1125 : 	CTimeSpan DateSpad,TimeSpad;

  00222	8d 4d ec	 lea	 ecx, DWORD PTR _DateSpad$[ebp]
  00225	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@XZ ; ATL::CTimeSpan::CTimeSpan
  0022a	8d 4d e4	 lea	 ecx, DWORD PTR _TimeSpad$[ebp]
  0022d	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@XZ ; ATL::CTimeSpan::CTimeSpan

; 1126 : 	CTime StartTime,StartDate,EndTime,EndDate;		

  00232	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  00235	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@XZ	; ATL::CTime::CTime
  0023a	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  0023d	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@XZ	; ATL::CTime::CTime
  00242	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  00245	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@XZ	; ATL::CTime::CTime
  0024a	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  0024d	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@XZ	; ATL::CTime::CTime

; 1127 : 	CDateTimeCtrl * pStartDate,* pEndDate,* pStartTime,* pEndTime;
; 1128 :     
; 1129 : 	//开始日期
; 1130 : 	pStartDate=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_START_DATE);

  00252	68 4f 23 00 00	 push	 9039			; 0000234fH
  00257	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0025f	89 45 c0	 mov	 DWORD PTR _pStartDate$[ebp], eax

; 1131 : 	pStartDate->GetTime(StartDate);

  00262	8d 45 d4	 lea	 eax, DWORD PTR _StartDate$[ebp]
  00265	50		 push	 eax
  00266	8b 4d c0	 mov	 ecx, DWORD PTR _pStartDate$[ebp]
  00269	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1132 : 
; 1133 : 	//结束日期
; 1134 : 	pEndDate=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_END_DATE);

  0026e	68 50 23 00 00	 push	 9040			; 00002350H
  00273	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00276	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0027b	89 45 bc	 mov	 DWORD PTR _pEndDate$[ebp], eax

; 1135 : 	pEndDate->GetTime(EndDate);

  0027e	8d 45 c4	 lea	 eax, DWORD PTR _EndDate$[ebp]
  00281	50		 push	 eax
  00282	8b 4d bc	 mov	 ecx, DWORD PTR _pEndDate$[ebp]
  00285	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1136 : 
; 1137 : 	//开始时间
; 1138 : 	pStartTime=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_START_TIME);

  0028a	68 51 23 00 00	 push	 9041			; 00002351H
  0028f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00292	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00297	89 45 b8	 mov	 DWORD PTR _pStartTime$[ebp], eax

; 1139 : 	pStartTime->GetTime(StartTime);

  0029a	8d 45 dc	 lea	 eax, DWORD PTR _StartTime$[ebp]
  0029d	50		 push	 eax
  0029e	8b 4d b8	 mov	 ecx, DWORD PTR _pStartTime$[ebp]
  002a1	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1140 : 
; 1141 : 	//结束时间
; 1142 : 	pEndTime=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_END_TIME);

  002a6	68 52 23 00 00	 push	 9042			; 00002352H
  002ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ae	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002b3	89 45 b4	 mov	 DWORD PTR _pEndTime$[ebp], eax

; 1143 : 	pEndTime->GetTime(EndTime);

  002b6	8d 45 cc	 lea	 eax, DWORD PTR _EndTime$[ebp]
  002b9	50		 push	 eax
  002ba	8b 4d b4	 mov	 ecx, DWORD PTR _pEndTime$[ebp]
  002bd	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1144 : 
; 1145 : 	//日期校验
; 1146 : 	DateSpad=EndDate-StartDate;

  002c2	8b 45 d8	 mov	 eax, DWORD PTR _StartDate$[ebp+4]
  002c5	50		 push	 eax
  002c6	8b 4d d4	 mov	 ecx, DWORD PTR _StartDate$[ebp]
  002c9	51		 push	 ecx
  002ca	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  002d0	52		 push	 edx
  002d1	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  002d4	e8 00 00 00 00	 call	 ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ; ATL::CTime::operator-
  002d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002db	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002de	89 4d ec	 mov	 DWORD PTR _DateSpad$[ebp], ecx
  002e1	89 55 f0	 mov	 DWORD PTR _DateSpad$[ebp+4], edx

; 1147 : 	if (DateSpad.GetTimeSpan() < 0)

  002e4	8d 4d ec	 lea	 ecx, DWORD PTR _DateSpad$[ebp]
  002e7	e8 00 00 00 00	 call	 ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTimeSpan
  002ec	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv681[ebp], eax
  002f2	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv681[ebp+4], edx
  002f8	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR tv681[ebp+4], 0
  002ff	7f 34		 jg	 SHORT $LN7@SaveInputI
  00301	7c 09		 jl	 SHORT $LN16@SaveInputI
  00303	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR tv681[ebp], 0
  0030a	73 29		 jae	 SHORT $LN7@SaveInputI
$LN16@SaveInputI:

; 1148 : 	{
; 1149 : 		AfxMessageBox(TEXT("比赛结束日期设置不合法，请重新输入！"));

  0030c	6a 00		 push	 0
  0030e	6a 00		 push	 0
  00310	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@BMJDJCHE@?$LB?H?H?$PM?$LN?a?J?x?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
  00315	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1150 : 
; 1151 : 		GetDlgItem(IDC_MATCH_END_DATE)->SetFocus();

  0031a	68 50 23 00 00	 push	 9040			; 00002350H
  0031f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00322	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00327	8b c8		 mov	 ecx, eax
  00329	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1152 : 
; 1153 : 		return false;

  0032e	32 c0		 xor	 al, al
  00330	e9 9f 03 00 00	 jmp	 $LN1@SaveInputI
$LN7@SaveInputI:

; 1154 : 	}
; 1155 : 
; 1156 : 	//时间校验
; 1157 : 	TimeSpad=EndTime-StartTime;

  00335	8b 45 e0	 mov	 eax, DWORD PTR _StartTime$[ebp+4]
  00338	50		 push	 eax
  00339	8b 4d dc	 mov	 ecx, DWORD PTR _StartTime$[ebp]
  0033c	51		 push	 ecx
  0033d	8d 95 44 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00343	52		 push	 edx
  00344	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  00347	e8 00 00 00 00	 call	 ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ; ATL::CTime::operator-
  0034c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00351	89 4d e4	 mov	 DWORD PTR _TimeSpad$[ebp], ecx
  00354	89 55 e8	 mov	 DWORD PTR _TimeSpad$[ebp+4], edx

; 1158 : 	if (TimeSpad.GetTimeSpan() < 0)

  00357	8d 4d e4	 lea	 ecx, DWORD PTR _TimeSpad$[ebp]
  0035a	e8 00 00 00 00	 call	 ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTimeSpan
  0035f	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv702[ebp], eax
  00365	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv702[ebp+4], edx
  0036b	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR tv702[ebp+4], 0
  00372	7f 34		 jg	 SHORT $LN8@SaveInputI
  00374	7c 09		 jl	 SHORT $LN17@SaveInputI
  00376	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR tv702[ebp], 0
  0037d	73 29		 jae	 SHORT $LN8@SaveInputI
$LN17@SaveInputI:

; 1159 : 	{
; 1160 : 		AfxMessageBox(TEXT("比赛结束时间设置不合法，请重新输入！"));

  0037f	6a 00		 push	 0
  00381	6a 00		 push	 0
  00383	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JHFPJNIO@?$LB?H?H?$PM?$LN?a?J?x?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
  00388	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1161 : 
; 1162 : 		GetDlgItem(IDC_MATCH_END_TIME)->SetFocus();

  0038d	68 52 23 00 00	 push	 9042			; 00002352H
  00392	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00395	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0039a	8b c8		 mov	 ecx, eax
  0039c	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1163 : 
; 1164 : 		return false;

  003a1	32 c0		 xor	 al, al
  003a3	e9 2c 03 00 00	 jmp	 $LN1@SaveInputI
$LN8@SaveInputI:

; 1165 : 	}
; 1166 : 
; 1167 : 	//合并时间
; 1168 : 	CTime EndDateTime(EndDate.GetYear(),EndDate.GetMonth(),EndDate.GetDay(),EndTime.GetHour(),EndTime.GetMinute(),EndTime.GetSecond());

  003a8	6a ff		 push	 -1
  003aa	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  003ad	e8 00 00 00 00	 call	 ?GetSecond@CTime@ATL@@QBEHXZ ; ATL::CTime::GetSecond
  003b2	50		 push	 eax
  003b3	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  003b6	e8 00 00 00 00	 call	 ?GetMinute@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMinute
  003bb	50		 push	 eax
  003bc	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  003bf	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour
  003c4	50		 push	 eax
  003c5	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  003c8	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay
  003cd	50		 push	 eax
  003ce	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  003d1	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth
  003d6	50		 push	 eax
  003d7	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  003da	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  003df	50		 push	 eax
  003e0	8d 4d ac	 lea	 ecx, DWORD PTR _EndDateTime$[ebp]
  003e3	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1169 : 	CTime StartDateTime(StartDate.GetYear(),StartDate.GetMonth(),StartDate.GetDay(),StartTime.GetHour(),StartTime.GetMinute(),StartTime.GetSecond());	

  003e8	6a ff		 push	 -1
  003ea	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  003ed	e8 00 00 00 00	 call	 ?GetSecond@CTime@ATL@@QBEHXZ ; ATL::CTime::GetSecond
  003f2	50		 push	 eax
  003f3	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  003f6	e8 00 00 00 00	 call	 ?GetMinute@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMinute
  003fb	50		 push	 eax
  003fc	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  003ff	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour
  00404	50		 push	 eax
  00405	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  00408	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay
  0040d	50		 push	 eax
  0040e	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  00411	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth
  00416	50		 push	 eax
  00417	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  0041a	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  0041f	50		 push	 eax
  00420	8d 4d a4	 lea	 ecx, DWORD PTR _StartDateTime$[ebp]
  00423	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1170 : 
; 1171 : 	//比赛时间
; 1172 : 	EndDateTime.GetAsSystemTime(pLockTimeMatch->MatchEndTime);

  00428	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0042b	83 c0 14	 add	 eax, 20			; 00000014H
  0042e	50		 push	 eax
  0042f	8d 4d ac	 lea	 ecx, DWORD PTR _EndDateTime$[ebp]
  00432	e8 00 00 00 00	 call	 ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime

; 1173 : 	StartDateTime.GetAsSystemTime(pLockTimeMatch->MatchStartTime);

  00437	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0043a	83 c0 04	 add	 eax, 4
  0043d	50		 push	 eax
  0043e	8d 4d a4	 lea	 ecx, DWORD PTR _StartDateTime$[ebp]
  00441	e8 00 00 00 00	 call	 ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime

; 1174 : 	
; 1175 : 	//开始日期
; 1176 : 	pStartDate=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_START_DATE);

  00446	68 55 23 00 00	 push	 9045			; 00002355H
  0044b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0044e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00453	89 45 c0	 mov	 DWORD PTR _pStartDate$[ebp], eax

; 1177 : 	pStartDate->GetTime(StartDate);

  00456	8d 45 d4	 lea	 eax, DWORD PTR _StartDate$[ebp]
  00459	50		 push	 eax
  0045a	8b 4d c0	 mov	 ecx, DWORD PTR _pStartDate$[ebp]
  0045d	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1178 : 
; 1179 : 	//结束日期
; 1180 : 	pEndDate=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_END_DATE);

  00462	68 53 23 00 00	 push	 9043			; 00002353H
  00467	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0046a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0046f	89 45 bc	 mov	 DWORD PTR _pEndDate$[ebp], eax

; 1181 : 	pEndDate->GetTime(EndDate);

  00472	8d 45 c4	 lea	 eax, DWORD PTR _EndDate$[ebp]
  00475	50		 push	 eax
  00476	8b 4d bc	 mov	 ecx, DWORD PTR _pEndDate$[ebp]
  00479	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1182 : 
; 1183 : 	//开始时间
; 1184 : 	pStartTime=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_START_TIME);

  0047e	68 56 23 00 00	 push	 9046			; 00002356H
  00483	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00486	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0048b	89 45 b8	 mov	 DWORD PTR _pStartTime$[ebp], eax

; 1185 : 	pStartTime->GetTime(StartTime);

  0048e	8d 45 dc	 lea	 eax, DWORD PTR _StartTime$[ebp]
  00491	50		 push	 eax
  00492	8b 4d b8	 mov	 ecx, DWORD PTR _pStartTime$[ebp]
  00495	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1186 : 
; 1187 : 	//结束时间
; 1188 : 	pEndTime=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_END_TIME);

  0049a	68 54 23 00 00	 push	 9044			; 00002354H
  0049f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004a2	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  004a7	89 45 b4	 mov	 DWORD PTR _pEndTime$[ebp], eax

; 1189 : 	pEndTime->GetTime(EndTime);

  004aa	8d 45 cc	 lea	 eax, DWORD PTR _EndTime$[ebp]
  004ad	50		 push	 eax
  004ae	8b 4d b4	 mov	 ecx, DWORD PTR _pEndTime$[ebp]
  004b1	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKAAVCTime@ATL@@@Z ; CDateTimeCtrl::GetTime

; 1190 : 
; 1191 : 	//日期校验
; 1192 : 	DateSpad=EndDate-StartDate;

  004b6	8b 45 d8	 mov	 eax, DWORD PTR _StartDate$[ebp+4]
  004b9	50		 push	 eax
  004ba	8b 4d d4	 mov	 ecx, DWORD PTR _StartDate$[ebp]
  004bd	51		 push	 ecx
  004be	8d 95 3c ff ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  004c4	52		 push	 edx
  004c5	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  004c8	e8 00 00 00 00	 call	 ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ; ATL::CTime::operator-
  004cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  004cf	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  004d2	89 4d ec	 mov	 DWORD PTR _DateSpad$[ebp], ecx
  004d5	89 55 f0	 mov	 DWORD PTR _DateSpad$[ebp+4], edx

; 1193 : 	if (DateSpad.GetTimeSpan() < 0)

  004d8	8d 4d ec	 lea	 ecx, DWORD PTR _DateSpad$[ebp]
  004db	e8 00 00 00 00	 call	 ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTimeSpan
  004e0	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv745[ebp], eax
  004e6	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv745[ebp+4], edx
  004ec	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR tv745[ebp+4], 0
  004f3	7f 34		 jg	 SHORT $LN9@SaveInputI
  004f5	7c 09		 jl	 SHORT $LN18@SaveInputI
  004f7	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR tv745[ebp], 0
  004fe	73 29		 jae	 SHORT $LN9@SaveInputI
$LN18@SaveInputI:

; 1194 : 	{
; 1195 : 		AfxMessageBox(TEXT("报名截止日期设置不合法，请重新输入！"));

  00500	6a 00		 push	 0
  00502	6a 00		 push	 0
  00504	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DLMEACLJ@?$LB?$KI?C?$PL?$LN?X?V?$LJ?H?U?F?Z?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
  00509	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1196 : 
; 1197 : 		GetDlgItem(IDC_SIGNUP_END_DATE)->SetFocus();

  0050e	68 53 23 00 00	 push	 9043			; 00002353H
  00513	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00516	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0051b	8b c8		 mov	 ecx, eax
  0051d	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1198 : 
; 1199 : 		return false;

  00522	32 c0		 xor	 al, al
  00524	e9 ab 01 00 00	 jmp	 $LN1@SaveInputI
$LN9@SaveInputI:

; 1200 : 	}
; 1201 : 
; 1202 : 	//时间校验
; 1203 : 	TimeSpad=EndTime-StartTime;

  00529	8b 45 e0	 mov	 eax, DWORD PTR _StartTime$[ebp+4]
  0052c	50		 push	 eax
  0052d	8b 4d dc	 mov	 ecx, DWORD PTR _StartTime$[ebp]
  00530	51		 push	 ecx
  00531	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00537	52		 push	 edx
  00538	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  0053b	e8 00 00 00 00	 call	 ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ; ATL::CTime::operator-
  00540	8b 08		 mov	 ecx, DWORD PTR [eax]
  00542	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00545	89 4d e4	 mov	 DWORD PTR _TimeSpad$[ebp], ecx
  00548	89 55 e8	 mov	 DWORD PTR _TimeSpad$[ebp+4], edx

; 1204 : 	if (TimeSpad.GetTimeSpan() < 0)

  0054b	8d 4d e4	 lea	 ecx, DWORD PTR _TimeSpad$[ebp]
  0054e	e8 00 00 00 00	 call	 ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ; ATL::CTimeSpan::GetTimeSpan
  00553	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv766[ebp], eax
  00559	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv766[ebp+4], edx
  0055f	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR tv766[ebp+4], 0
  00566	7f 34		 jg	 SHORT $LN10@SaveInputI
  00568	7c 09		 jl	 SHORT $LN19@SaveInputI
  0056a	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR tv766[ebp], 0
  00571	73 29		 jae	 SHORT $LN10@SaveInputI
$LN19@SaveInputI:

; 1205 : 	{
; 1206 : 		AfxMessageBox(TEXT("报名截止时间设置不合法，请重新输入！"));

  00573	6a 00		 push	 0
  00575	6a 00		 push	 0
  00577	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@LAAIANED@?$LB?$KI?C?$PL?$LN?X?V?$LJ?J?$LB?$LM?d?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
  0057c	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 1207 : 
; 1208 : 		GetDlgItem(IDC_SIGNUP_END_TIME)->SetFocus();

  00581	68 54 23 00 00	 push	 9044			; 00002354H
  00586	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00589	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0058e	8b c8		 mov	 ecx, eax
  00590	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1209 : 
; 1210 : 		return false;

  00595	32 c0		 xor	 al, al
  00597	e9 38 01 00 00	 jmp	 $LN1@SaveInputI
$LN10@SaveInputI:

; 1211 : 	}
; 1212 : 
; 1213 : 	//合并时间
; 1214 : 	CTime SignupEndDateTime(EndDate.GetYear(),EndDate.GetMonth(),EndDate.GetDay(),EndTime.GetHour(),EndTime.GetMinute(),EndTime.GetSecond());

  0059c	6a ff		 push	 -1
  0059e	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  005a1	e8 00 00 00 00	 call	 ?GetSecond@CTime@ATL@@QBEHXZ ; ATL::CTime::GetSecond
  005a6	50		 push	 eax
  005a7	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  005aa	e8 00 00 00 00	 call	 ?GetMinute@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMinute
  005af	50		 push	 eax
  005b0	8d 4d cc	 lea	 ecx, DWORD PTR _EndTime$[ebp]
  005b3	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour
  005b8	50		 push	 eax
  005b9	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  005bc	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay
  005c1	50		 push	 eax
  005c2	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  005c5	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth
  005ca	50		 push	 eax
  005cb	8d 4d c4	 lea	 ecx, DWORD PTR _EndDate$[ebp]
  005ce	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  005d3	50		 push	 eax
  005d4	8d 4d 9c	 lea	 ecx, DWORD PTR _SignupEndDateTime$[ebp]
  005d7	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1215 : 	CTime SignuStartDateTime(StartDate.GetYear(),StartDate.GetMonth(),StartDate.GetDay(),StartTime.GetHour(),StartTime.GetMinute(),StartTime.GetSecond());	

  005dc	6a ff		 push	 -1
  005de	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  005e1	e8 00 00 00 00	 call	 ?GetSecond@CTime@ATL@@QBEHXZ ; ATL::CTime::GetSecond
  005e6	50		 push	 eax
  005e7	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  005ea	e8 00 00 00 00	 call	 ?GetMinute@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMinute
  005ef	50		 push	 eax
  005f0	8d 4d dc	 lea	 ecx, DWORD PTR _StartTime$[ebp]
  005f3	e8 00 00 00 00	 call	 ?GetHour@CTime@ATL@@QBEHXZ ; ATL::CTime::GetHour
  005f8	50		 push	 eax
  005f9	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  005fc	e8 00 00 00 00	 call	 ?GetDay@CTime@ATL@@QBEHXZ ; ATL::CTime::GetDay
  00601	50		 push	 eax
  00602	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  00605	e8 00 00 00 00	 call	 ?GetMonth@CTime@ATL@@QBEHXZ ; ATL::CTime::GetMonth
  0060a	50		 push	 eax
  0060b	8d 4d d4	 lea	 ecx, DWORD PTR _StartDate$[ebp]
  0060e	e8 00 00 00 00	 call	 ?GetYear@CTime@ATL@@QBEHXZ ; ATL::CTime::GetYear
  00613	50		 push	 eax
  00614	8d 4d 94	 lea	 ecx, DWORD PTR _SignuStartDateTime$[ebp]
  00617	e8 00 00 00 00	 call	 ??0CTime@ATL@@QAE@HHHHHHH@Z ; ATL::CTime::CTime

; 1216 : 
; 1217 : 	//比赛时间
; 1218 : 	SignupEndDateTime.GetAsSystemTime(pLockTimeMatch->SignupEndTime);

  0061c	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0061f	83 c0 39	 add	 eax, 57			; 00000039H
  00622	50		 push	 eax
  00623	8d 4d 9c	 lea	 ecx, DWORD PTR _SignupEndDateTime$[ebp]
  00626	e8 00 00 00 00	 call	 ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime

; 1219 : 	SignuStartDateTime.GetAsSystemTime(pLockTimeMatch->SignupStartTime);

  0062b	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0062e	83 c0 29	 add	 eax, 41			; 00000029H
  00631	50		 push	 eax
  00632	8d 4d 94	 lea	 ecx, DWORD PTR _SignuStartDateTime$[ebp]
  00635	e8 00 00 00 00	 call	 ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ; ATL::CTime::GetAsSystemTime

; 1220 : 
; 1221 : 	//复活设置
; 1222 : 	if (IsDlgButtonChecked(IDC_CHECK_REVIVE_ENABLED))

  0063a	68 29 23 00 00	 push	 9001			; 00002329H
  0063f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00642	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00647	85 c0		 test	 eax, eax
  00649	74 79		 je	 SHORT $LN11@SaveInputI

; 1223 : 	{
; 1224 : 		//设置变量
; 1225 : 		pLockTimeMatch->cbReviveEnabled=TRUE;		

  0064b	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0064e	c6 40 5d 01	 mov	 BYTE PTR [eax+93], 1

; 1226 : 
; 1227 : 		//保险卡设置
; 1228 : 		if (IsDlgButtonChecked(IDC_CHECK_SAFECARD_ENABLED)) 

  00652	68 2a 23 00 00	 push	 9002			; 0000232aH
  00657	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0065a	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  0065f	85 c0		 test	 eax, eax
  00661	74 09		 je	 SHORT $LN13@SaveInputI

; 1229 : 		{
; 1230 : 			pLockTimeMatch->cbSafeCardEnabled=TRUE;

  00663	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00666	c6 40 5e 01	 mov	 BYTE PTR [eax+94], 1

; 1231 : 		}
; 1232 : 		else

  0066a	eb 07		 jmp	 SHORT $LN14@SaveInputI
$LN13@SaveInputI:

; 1233 : 		{
; 1234 : 			pLockTimeMatch->cbSafeCardEnabled=FALSE;

  0066c	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0066f	c6 40 5e 00	 mov	 BYTE PTR [eax+94], 0
$LN14@SaveInputI:

; 1235 : 		}
; 1236 : 
; 1237 : 		//复活参数
; 1238 : 		pLockTimeMatch->lReviveFee=GetDlgItemInt(IDC_REVIVE_FEE);

  00673	6a 01		 push	 1
  00675	6a 00		 push	 0
  00677	68 61 23 00 00	 push	 9057			; 00002361H
  0067c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0067f	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00684	33 c9		 xor	 ecx, ecx
  00686	8b 55 f8	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  00689	89 42 60	 mov	 DWORD PTR [edx+96], eax
  0068c	89 4a 64	 mov	 DWORD PTR [edx+100], ecx

; 1239 : 		pLockTimeMatch->lSafeCardFee=GetDlgItemInt(IDC_SAFECARD_FEE);		

  0068f	6a 01		 push	 1
  00691	6a 00		 push	 0
  00693	68 62 23 00 00	 push	 9058			; 00002362H
  00698	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0069b	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  006a0	33 c9		 xor	 ecx, ecx
  006a2	8b 55 f8	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  006a5	89 42 68	 mov	 DWORD PTR [edx+104], eax
  006a8	89 4a 6c	 mov	 DWORD PTR [edx+108], ecx

; 1240 : 		pLockTimeMatch->cbReviveTimes=GetDlgItemInt(IDC_REVIVE_TIMES);

  006ab	6a 01		 push	 1
  006ad	6a 00		 push	 0
  006af	68 60 23 00 00	 push	 9056			; 00002360H
  006b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006b7	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  006bc	8b 4d f8	 mov	 ecx, DWORD PTR _pLockTimeMatch$[ebp]
  006bf	88 41 5f	 mov	 BYTE PTR [ecx+95], al

; 1241 : 	}
; 1242 : 	else

  006c2	eb 0e		 jmp	 SHORT $LN12@SaveInputI
$LN11@SaveInputI:

; 1243 : 	{
; 1244 : 		pLockTimeMatch->cbReviveEnabled=FALSE;

  006c4	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  006c7	c6 40 5d 00	 mov	 BYTE PTR [eax+93], 0

; 1245 : 		pLockTimeMatch->cbSafeCardEnabled=FALSE;

  006cb	8b 45 f8	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  006ce	c6 40 5e 00	 mov	 BYTE PTR [eax+94], 0
$LN12@SaveInputI:

; 1246 : 	}
; 1247 : 
; 1248 : 	return true;

  006d2	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 1249 : }

  006d4	5f		 pop	 edi
  006d5	5e		 pop	 esi
  006d6	5b		 pop	 ebx
  006d7	8b e5		 mov	 esp, ebp
  006d9	5d		 pop	 ebp
  006da	c3		 ret	 0
?SaveInputInfo@CDlgMatchLockTime@@MAE_NXZ ENDP		; CDlgMatchLockTime::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchLockTime@@MAEHXZ
_TEXT	SEGMENT
tv504 = -200						; size = 4
tv496 = -200						; size = 4
_pSignupEndTime$ = -132					; size = 4
_pSignupEndDate$ = -128					; size = 4
_pSignupStartTime$ = -124				; size = 4
_pSignupStartDate$ = -120				; size = 4
_pEndTime$ = -116					; size = 4
_pStartTime$ = -112					; size = 4
_pEndDate$ = -108					; size = 4
_pStartDate$ = -104					; size = 4
_SignupStartTime$ = -100				; size = 16
_SignupEndTime$ = -84					; size = 16
_MatchStartTime$ = -68					; size = 16
_MatchEndTime$ = -52					; size = 16
_nIndex$1 = -36						; size = 4
_i$2 = -32						; size = 4
_pComboBox$ = -28					; size = 4
_cbMatchMode$ = -24					; size = 2
_pszMatchMode$ = -20					; size = 8
_pLockTimeMatch$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnInitDialog@CDlgMatchLockTime@@MAEHXZ PROC		; CDlgMatchLockTime::OnInitDialog, COMDAT
; _this$ = ecx

; 919  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 920  : 	__super::OnInitDialog();

  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 921  : 
; 922  : 	//输入限制
; 923  : 	((CEdit *)GetDlgItem(IDC_INIT_SCORE))->LimitText(8);

  00021	6a 08		 push	 8
  00023	68 5e 23 00 00	 push	 9054			; 0000235eH
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00030	8b c8		 mov	 ecx, eax
  00032	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 924  : 	((CEdit *)GetDlgItem(IDC_CULL_SCORE))->LimitText(8);

  00037	6a 08		 push	 8
  00039	68 5f 23 00 00	 push	 9055			; 0000235fH
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00046	8b c8		 mov	 ecx, eax
  00048	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 925  : 	((CEdit *)GetDlgItem(IDC_MIN_PLAYCOUNT))->LimitText(4);

  0004d	6a 04		 push	 4
  0004f	68 33 23 00 00	 push	 9011			; 00002333H
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 926  : 	((CEdit *)GetDlgItem(IDC_MAX_PLAYCOUNT))->LimitText(4);

  00063	6a 04		 push	 4
  00065	68 36 23 00 00	 push	 9014			; 00002336H
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 927  : 	((CEdit *)GetDlgItem(IDD_END_DELAY_TIME))->LimitText(8);

  00079	6a 08		 push	 8
  0007b	68 37 23 00 00	 push	 9015			; 00002337H
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 928  : 
; 929  : 	//变量定义
; 930  : 	tagLockTimeMatch * pLockTimeMatch=(tagLockTimeMatch *)m_pGameMatchOption->cbMatchRule;

  0008f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00098	83 c1 7e	 add	 ecx, 126		; 0000007eH
  0009b	89 4d f4	 mov	 DWORD PTR _pLockTimeMatch$[ebp], ecx

; 931  : 
; 932  : 	//开赛模式
; 933  : 	LPCTSTR pszMatchMode[]={TEXT("常规开赛"), TEXT("循环开赛")};

  0009e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pszMatchMode$[ebp], OFFSET ??_C@_08KONJAKGH@?$LD?$KD?$LJ?f?$LP?$KK?H?$PM@
  000a5	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pszMatchMode$[ebp+4], OFFSET ??_C@_08JJILHLAM@?Q?$KN?$LL?$LH?$LP?$KK?H?$PM@

; 934  : 	BYTE cbMatchMode[]={MATCH_MODE_NORMAL, MATCH_MODE_ROUND};

  000ac	c6 45 e8 00	 mov	 BYTE PTR _cbMatchMode$[ebp], 0
  000b0	c6 45 e9 01	 mov	 BYTE PTR _cbMatchMode$[ebp+1], 1

; 935  : 
; 936  : 	//获取控件
; 937  : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_MATCH_MODE);

  000b4	68 6b 23 00 00	 push	 9067			; 0000236bH
  000b9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000c1	89 45 e4	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 938  : 
; 939  : 	//设置控件
; 940  : 	for (int i=0; i<CountArray(pszMatchMode); i++)

  000c4	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  000cb	eb 09		 jmp	 SHORT $LN4@OnInitDial
$LN2@OnInitDial:
  000cd	8b 45 e0	 mov	 eax, DWORD PTR _i$2[ebp]
  000d0	83 c0 01	 add	 eax, 1
  000d3	89 45 e0	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@OnInitDial:
  000d6	83 7d e0 02	 cmp	 DWORD PTR _i$2[ebp], 2
  000da	73 4a		 jae	 SHORT $LN3@OnInitDial

; 941  : 	{
; 942  : 		int nIndex=pComboBox->SetItemData(pComboBox->InsertString(i,pszMatchMode[i]),cbMatchMode[i]);

  000dc	8b 45 e0	 mov	 eax, DWORD PTR _i$2[ebp]
  000df	0f b6 4c 05 e8	 movzx	 ecx, BYTE PTR _cbMatchMode$[ebp+eax]
  000e4	51		 push	 ecx
  000e5	8b 55 e0	 mov	 edx, DWORD PTR _i$2[ebp]
  000e8	8b 44 95 ec	 mov	 eax, DWORD PTR _pszMatchMode$[ebp+edx*4]
  000ec	50		 push	 eax
  000ed	8b 4d e0	 mov	 ecx, DWORD PTR _i$2[ebp]
  000f0	51		 push	 ecx
  000f1	8b 4d e4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000f4	e8 00 00 00 00	 call	 ?InsertString@CComboBox@@QAEHHPBD@Z ; CComboBox::InsertString
  000f9	50		 push	 eax
  000fa	8b 4d e4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  000fd	e8 00 00 00 00	 call	 ?SetItemData@CComboBox@@QAEHHK@Z ; CComboBox::SetItemData
  00102	89 45 dc	 mov	 DWORD PTR _nIndex$1[ebp], eax

; 943  : 		if (cbMatchMode[i]==pLockTimeMatch->cbMatchMode)

  00105	8b 45 e0	 mov	 eax, DWORD PTR _i$2[ebp]
  00108	0f b6 4c 05 e8	 movzx	 ecx, BYTE PTR _cbMatchMode$[ebp+eax]
  0010d	8b 55 f4	 mov	 edx, DWORD PTR _pLockTimeMatch$[ebp]
  00110	0f b6 42 24	 movzx	 eax, BYTE PTR [edx+36]
  00114	3b c8		 cmp	 ecx, eax
  00116	75 0c		 jne	 SHORT $LN5@OnInitDial

; 944  : 		{
; 945  : 			pComboBox->SetCurSel(nIndex);

  00118	8b 45 dc	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0011b	50		 push	 eax
  0011c	8b 4d e4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0011f	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN5@OnInitDial:

; 946  : 		}
; 947  : 	}

  00124	eb a7		 jmp	 SHORT $LN2@OnInitDial
$LN3@OnInitDial:

; 948  : 
; 949  : 	//默认设置
; 950  : 	if (pComboBox->GetCurSel()==-1) pComboBox->SetCurSel(0);

  00126	8b 4d e4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00129	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0012e	83 f8 ff	 cmp	 eax, -1
  00131	75 0a		 jne	 SHORT $LN6@OnInitDial
  00133	6a 00		 push	 0
  00135	8b 4d e4	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00138	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN6@OnInitDial:

; 951  : 
; 952  : 	//开赛人数
; 953  : 	if (pLockTimeMatch->wStartUserCount!=0)

  0013d	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00140	0f b7 48 27	 movzx	 ecx, WORD PTR [eax+39]
  00144	85 c9		 test	 ecx, ecx
  00146	74 17		 je	 SHORT $LN7@OnInitDial

; 954  : 	{
; 955  : 		SetDlgItemInt(IDC_MIN_MATCH_USER,(UINT)pLockTimeMatch->wStartUserCount);

  00148	6a 01		 push	 1
  0014a	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0014d	0f b7 48 27	 movzx	 ecx, WORD PTR [eax+39]
  00151	51		 push	 ecx
  00152	68 34 23 00 00	 push	 9012			; 00002334H
  00157	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015a	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN7@OnInitDial:

; 956  : 	}
; 957  : 
; 958  : 	//报名人数
; 959  : 	if (pLockTimeMatch->wMaxSignupUser!=0)

  0015f	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00162	0f b7 48 25	 movzx	 ecx, WORD PTR [eax+37]
  00166	85 c9		 test	 ecx, ecx
  00168	74 17		 je	 SHORT $LN8@OnInitDial

; 960  : 	{
; 961  : 		SetDlgItemInt(IDD_MAX_SIGNUP_USER,(UINT)pLockTimeMatch->wMaxSignupUser);

  0016a	6a 01		 push	 1
  0016c	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0016f	0f b7 48 25	 movzx	 ecx, WORD PTR [eax+37]
  00173	51		 push	 ecx
  00174	68 35 23 00 00	 push	 9013			; 00002335H
  00179	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN8@OnInitDial:

; 962  : 	}
; 963  : 
; 964  : 	//初始分数
; 965  : 	if (pLockTimeMatch->lMatchInitScore!=0)

  00181	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00184	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv496[ebp], eax
  0018a	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv496[ebp]
  00190	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv496[ebp]
  00196	8b 41 49	 mov	 eax, DWORD PTR [ecx+73]
  00199	0b 42 4d	 or	 eax, DWORD PTR [edx+77]
  0019c	74 16		 je	 SHORT $LN9@OnInitDial

; 966  : 	{
; 967  : 		SetDlgItemInt(IDC_INIT_SCORE,(UINT)pLockTimeMatch->lMatchInitScore);

  0019e	6a 01		 push	 1
  001a0	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001a3	8b 48 49	 mov	 ecx, DWORD PTR [eax+73]
  001a6	51		 push	 ecx
  001a7	68 5e 23 00 00	 push	 9054			; 0000235eH
  001ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001af	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN9@OnInitDial:

; 968  : 	}
; 969  : 
; 970  : 	//淘汰分数
; 971  : 	if (pLockTimeMatch->lMatchCullScore!=0)

  001b4	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001b7	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv504[ebp], eax
  001bd	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv504[ebp]
  001c3	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv504[ebp]
  001c9	8b 41 51	 mov	 eax, DWORD PTR [ecx+81]
  001cc	0b 42 55	 or	 eax, DWORD PTR [edx+85]
  001cf	74 16		 je	 SHORT $LN10@OnInitDial

; 972  : 	{
; 973  : 		SetDlgItemInt(IDC_CULL_SCORE,(UINT)pLockTimeMatch->lMatchCullScore);

  001d1	6a 01		 push	 1
  001d3	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001d6	8b 48 51	 mov	 ecx, DWORD PTR [eax+81]
  001d9	51		 push	 ecx
  001da	68 5f 23 00 00	 push	 9055			; 0000235fH
  001df	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e2	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN10@OnInitDial:

; 974  : 	}
; 975  : 
; 976  : 	//有效局数
; 977  : 	if (pLockTimeMatch->wMinPlayCount!=0)

  001e7	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001ea	0f b7 48 59	 movzx	 ecx, WORD PTR [eax+89]
  001ee	85 c9		 test	 ecx, ecx
  001f0	74 17		 je	 SHORT $LN11@OnInitDial

; 978  : 	{
; 979  : 		SetDlgItemInt(IDC_MIN_PLAYCOUNT,pLockTimeMatch->wMinPlayCount);

  001f2	6a 01		 push	 1
  001f4	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  001f7	0f b7 48 59	 movzx	 ecx, WORD PTR [eax+89]
  001fb	51		 push	 ecx
  001fc	68 33 23 00 00	 push	 9011			; 00002333H
  00201	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN11@OnInitDial:

; 980  : 	}
; 981  : 
; 982  : 	//最大局数
; 983  : 	if (pLockTimeMatch->wMaxPlayCount!=0)

  00209	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0020c	0f b7 48 5b	 movzx	 ecx, WORD PTR [eax+91]
  00210	85 c9		 test	 ecx, ecx
  00212	74 17		 je	 SHORT $LN12@OnInitDial

; 984  : 	{
; 985  : 		SetDlgItemInt(IDC_MAX_PLAYCOUNT,pLockTimeMatch->wMaxPlayCount);

  00214	6a 01		 push	 1
  00216	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00219	0f b7 48 5b	 movzx	 ecx, WORD PTR [eax+91]
  0021d	51		 push	 ecx
  0021e	68 36 23 00 00	 push	 9014			; 00002336H
  00223	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00226	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN12@OnInitDial:

; 986  : 	}
; 987  : 
; 988  : 	//报名人数
; 989  : 	if (pLockTimeMatch->wEndDelayTime!=0)

  0022b	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0022e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00231	74 15		 je	 SHORT $LN13@OnInitDial

; 990  : 	{
; 991  : 		SetDlgItemInt(IDD_END_DELAY_TIME,(UINT)pLockTimeMatch->wEndDelayTime);

  00233	6a 01		 push	 1
  00235	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00238	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023a	51		 push	 ecx
  0023b	68 37 23 00 00	 push	 9015			; 00002337H
  00240	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00243	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN13@OnInitDial:

; 992  : 	}
; 993  :     
; 994  : 	//比赛时间
; 995  : 	SYSTEMTIME MatchEndTime=pLockTimeMatch->MatchEndTime;

  00248	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  0024b	83 c0 14	 add	 eax, 20			; 00000014H
  0024e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00250	89 4d cc	 mov	 DWORD PTR _MatchEndTime$[ebp], ecx
  00253	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00256	89 55 d0	 mov	 DWORD PTR _MatchEndTime$[ebp+4], edx
  00259	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0025c	89 4d d4	 mov	 DWORD PTR _MatchEndTime$[ebp+8], ecx
  0025f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00262	89 55 d8	 mov	 DWORD PTR _MatchEndTime$[ebp+12], edx

; 996  : 	SYSTEMTIME MatchStartTime=pLockTimeMatch->MatchStartTime;	

  00265	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00268	83 c0 04	 add	 eax, 4
  0026b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026d	89 4d bc	 mov	 DWORD PTR _MatchStartTime$[ebp], ecx
  00270	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00273	89 55 c0	 mov	 DWORD PTR _MatchStartTime$[ebp+4], edx
  00276	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00279	89 4d c4	 mov	 DWORD PTR _MatchStartTime$[ebp+8], ecx
  0027c	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0027f	89 55 c8	 mov	 DWORD PTR _MatchStartTime$[ebp+12], edx

; 997  : 	SYSTEMTIME SignupEndTime=pLockTimeMatch->SignupEndTime;	

  00282	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00285	83 c0 39	 add	 eax, 57			; 00000039H
  00288	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028a	89 4d ac	 mov	 DWORD PTR _SignupEndTime$[ebp], ecx
  0028d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00290	89 55 b0	 mov	 DWORD PTR _SignupEndTime$[ebp+4], edx
  00293	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00296	89 4d b4	 mov	 DWORD PTR _SignupEndTime$[ebp+8], ecx
  00299	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0029c	89 55 b8	 mov	 DWORD PTR _SignupEndTime$[ebp+12], edx

; 998  : 	SYSTEMTIME SignupStartTime=pLockTimeMatch->SignupStartTime;	

  0029f	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  002a2	83 c0 29	 add	 eax, 41			; 00000029H
  002a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a7	89 4d 9c	 mov	 DWORD PTR _SignupStartTime$[ebp], ecx
  002aa	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002ad	89 55 a0	 mov	 DWORD PTR _SignupStartTime$[ebp+4], edx
  002b0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002b3	89 4d a4	 mov	 DWORD PTR _SignupStartTime$[ebp+8], ecx
  002b6	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  002b9	89 55 a8	 mov	 DWORD PTR _SignupStartTime$[ebp+12], edx

; 999  : 
; 1000 : 	//开始日期
; 1001 : 	CDateTimeCtrl * pStartDate=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_START_DATE);

  002bc	68 4f 23 00 00	 push	 9039			; 0000234fH
  002c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c4	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002c9	89 45 98	 mov	 DWORD PTR _pStartDate$[ebp], eax

; 1002 : 	pStartDate->SetTime(&MatchStartTime);

  002cc	8d 45 bc	 lea	 eax, DWORD PTR _MatchStartTime$[ebp]
  002cf	50		 push	 eax
  002d0	8b 4d 98	 mov	 ecx, DWORD PTR _pStartDate$[ebp]
  002d3	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1003 : 
; 1004 : 	//结束日期
; 1005 : 	CDateTimeCtrl * pEndDate=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_END_DATE);

  002d8	68 50 23 00 00	 push	 9040			; 00002350H
  002dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002e0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  002e5	89 45 94	 mov	 DWORD PTR _pEndDate$[ebp], eax

; 1006 : 	pEndDate->SetTime(&MatchEndTime);

  002e8	8d 45 cc	 lea	 eax, DWORD PTR _MatchEndTime$[ebp]
  002eb	50		 push	 eax
  002ec	8b 4d 94	 mov	 ecx, DWORD PTR _pEndDate$[ebp]
  002ef	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1007 : 
; 1008 : 	//开始时间
; 1009 : 	CDateTimeCtrl * pStartTime=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_START_TIME);

  002f4	68 51 23 00 00	 push	 9041			; 00002351H
  002f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002fc	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00301	89 45 90	 mov	 DWORD PTR _pStartTime$[ebp], eax

; 1010 : 	pStartTime->SetTime(&MatchStartTime);

  00304	8d 45 bc	 lea	 eax, DWORD PTR _MatchStartTime$[ebp]
  00307	50		 push	 eax
  00308	8b 4d 90	 mov	 ecx, DWORD PTR _pStartTime$[ebp]
  0030b	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1011 : 
; 1012 : 	//结束时间
; 1013 : 	CDateTimeCtrl * pEndTime=(CDateTimeCtrl *)GetDlgItem(IDC_MATCH_END_TIME);

  00310	68 52 23 00 00	 push	 9042			; 00002352H
  00315	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00318	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0031d	89 45 8c	 mov	 DWORD PTR _pEndTime$[ebp], eax

; 1014 : 	pEndTime->SetTime(&MatchEndTime);

  00320	8d 45 cc	 lea	 eax, DWORD PTR _MatchEndTime$[ebp]
  00323	50		 push	 eax
  00324	8b 4d 8c	 mov	 ecx, DWORD PTR _pEndTime$[ebp]
  00327	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1015 : 
; 1016 : 	//开始日期
; 1017 : 	CDateTimeCtrl * pSignupStartDate=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_START_DATE);

  0032c	68 55 23 00 00	 push	 9045			; 00002355H
  00331	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00339	89 45 88	 mov	 DWORD PTR _pSignupStartDate$[ebp], eax

; 1018 : 	pSignupStartDate->SetTime(&SignupStartTime);

  0033c	8d 45 9c	 lea	 eax, DWORD PTR _SignupStartTime$[ebp]
  0033f	50		 push	 eax
  00340	8b 4d 88	 mov	 ecx, DWORD PTR _pSignupStartDate$[ebp]
  00343	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1019 : 
; 1020 : 	//开始时间
; 1021 : 	CDateTimeCtrl * pSignupStartTime=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_START_TIME);

  00348	68 56 23 00 00	 push	 9046			; 00002356H
  0034d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00350	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00355	89 45 84	 mov	 DWORD PTR _pSignupStartTime$[ebp], eax

; 1022 : 	pSignupStartTime->SetTime(&SignupStartTime);

  00358	8d 45 9c	 lea	 eax, DWORD PTR _SignupStartTime$[ebp]
  0035b	50		 push	 eax
  0035c	8b 4d 84	 mov	 ecx, DWORD PTR _pSignupStartTime$[ebp]
  0035f	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1023 : 
; 1024 : 	//截止日期
; 1025 : 	CDateTimeCtrl * pSignupEndDate=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_END_DATE);

  00364	68 53 23 00 00	 push	 9043			; 00002353H
  00369	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0036c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00371	89 45 80	 mov	 DWORD PTR _pSignupEndDate$[ebp], eax

; 1026 : 	pSignupEndDate->SetTime(&SignupEndTime);

  00374	8d 45 ac	 lea	 eax, DWORD PTR _SignupEndTime$[ebp]
  00377	50		 push	 eax
  00378	8b 4d 80	 mov	 ecx, DWORD PTR _pSignupEndDate$[ebp]
  0037b	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1027 : 
; 1028 : 	//截止时间
; 1029 : 	CDateTimeCtrl * pSignupEndTime=(CDateTimeCtrl *)GetDlgItem(IDC_SIGNUP_END_TIME);

  00380	68 54 23 00 00	 push	 9044			; 00002354H
  00385	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00388	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0038d	89 85 7c ff ff
	ff		 mov	 DWORD PTR _pSignupEndTime$[ebp], eax

; 1030 : 	pSignupEndTime->SetTime(&SignupEndTime);

  00393	8d 45 ac	 lea	 eax, DWORD PTR _SignupEndTime$[ebp]
  00396	50		 push	 eax
  00397	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _pSignupEndTime$[ebp]
  0039d	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 1031 : 
; 1032 : 	//复活机制
; 1033 : 	if (pLockTimeMatch->cbReviveEnabled)

  003a2	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  003a5	0f b6 48 5d	 movzx	 ecx, BYTE PTR [eax+93]
  003a9	85 c9		 test	 ecx, ecx
  003ab	74 7a		 je	 SHORT $LN14@OnInitDial

; 1034 : 	{
; 1035 : 		//保险卡设置
; 1036 : 		if (pLockTimeMatch->cbSafeCardEnabled)

  003ad	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  003b0	0f b6 48 5e	 movzx	 ecx, BYTE PTR [eax+94]
  003b4	85 c9		 test	 ecx, ecx
  003b6	74 16		 je	 SHORT $LN15@OnInitDial

; 1037 : 		{
; 1038 : 			((CButton *)GetDlgItem(IDC_CHECK_SAFECARD_ENABLED))->SetCheck(TRUE);

  003b8	6a 01		 push	 1
  003ba	68 2a 23 00 00	 push	 9002			; 0000232aH
  003bf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c2	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  003c7	8b c8		 mov	 ecx, eax
  003c9	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN15@OnInitDial:

; 1039 : 		}
; 1040 : 
; 1041 : 		//设置控件
; 1042 : 		((CButton *)GetDlgItem(IDC_CHECK_REVIVE_ENABLED))->SetCheck(TRUE);

  003ce	6a 01		 push	 1
  003d0	68 29 23 00 00	 push	 9001			; 00002329H
  003d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003d8	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  003dd	8b c8		 mov	 ecx, eax
  003df	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 1043 : 
; 1044 : 		//设置控件
; 1045 : 		SetDlgItemInt(IDC_REVIVE_FEE,(int)pLockTimeMatch->lReviveFee);

  003e4	6a 01		 push	 1
  003e6	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  003e9	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  003ec	51		 push	 ecx
  003ed	68 61 23 00 00	 push	 9057			; 00002361H
  003f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003f5	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1046 : 		SetDlgItemInt(IDC_SAFECARD_FEE,(int)pLockTimeMatch->lSafeCardFee);		

  003fa	6a 01		 push	 1
  003fc	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  003ff	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00402	51		 push	 ecx
  00403	68 62 23 00 00	 push	 9058			; 00002362H
  00408	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0040b	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 1047 : 		SetDlgItemInt(IDC_REVIVE_TIMES,pLockTimeMatch->cbReviveTimes);		

  00410	6a 01		 push	 1
  00412	8b 45 f4	 mov	 eax, DWORD PTR _pLockTimeMatch$[ebp]
  00415	0f b6 48 5f	 movzx	 ecx, BYTE PTR [eax+95]
  00419	51		 push	 ecx
  0041a	68 60 23 00 00	 push	 9056			; 00002360H
  0041f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00422	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN14@OnInitDial:

; 1048 : 	}
; 1049 : 
; 1050 : 	return FALSE;

  00427	33 c0		 xor	 eax, eax

; 1051 : }

  00429	5f		 pop	 edi
  0042a	5e		 pop	 esi
  0042b	5b		 pop	 ebx
  0042c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0042f	33 cd		 xor	 ecx, ebp
  00431	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00436	8b e5		 mov	 esp, ebp
  00438	5d		 pop	 ebp
  00439	c3		 ret	 0
?OnInitDialog@CDlgMatchLockTime@@MAEHXZ ENDP		; CDlgMatchLockTime::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchLockTime@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchLockTime@@UAE@XZ PROC			; CDlgMatchLockTime::~CDlgMatchLockTime, COMDAT
; _this$ = ecx

; 914  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchLockTime@@6B@

; 915  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchLockTime@@UAE@XZ ENDP			; CDlgMatchLockTime::~CDlgMatchLockTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchLockTime@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgMatchLockTime@@QAE@XZ PROC			; CDlgMatchLockTime::CDlgMatchLockTime, COMDAT
; _this$ = ecx

; 909  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 908  : CDlgMatchLockTime::CDlgMatchLockTime() : CDlgMatchItem(IDD_MATCH_LOCKTIME)

  0000c	68 33 23 00 00	 push	 9011			; 00002333H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem

; 909  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchLockTime@@6B@

; 910  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgMatchLockTime@@QAE@XZ ENDP			; CDlgMatchLockTime::CDlgMatchLockTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchReward@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchReward@@UAEPAXI@Z PROC			; CDlgMatchReward::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchReward@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchReward@@UAE@XZ ; CDlgMatchReward::~CDlgMatchReward
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 c0 01 00 00	 push	 448			; 000001c0H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc c0 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 448
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchReward@@UAE@XZ ; CDlgMatchReward::~CDlgMatchReward
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 c0 01 00 00	 push	 448			; 000001c0H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchReward@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchReward@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchReward@@UAEPAXI@Z ENDP			; CDlgMatchReward::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchReward@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchReward@@UAEPAXI@Z PROC			; CDlgMatchReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchReward@@UAE@XZ ; CDlgMatchReward::~CDlgMatchReward
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 c0 01 00 00	 push	 448			; 000001c0H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchReward@@UAEPAXI@Z ENDP			; CDlgMatchReward::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMessageMap@CDlgMatchReward@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgMatchReward@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchReward::GetMessageMap, COMDAT
; _this$ = ecx

; 29   : BEGIN_MESSAGE_MAP(CDlgMatchReward, CDlgMatchItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchReward::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgMatchReward@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchReward::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchReward::GetThisMessageMap, COMDAT

; 29   : BEGIN_MESSAGE_MAP(CDlgMatchReward, CDlgMatchItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 30   : 	ON_BN_CLICKED(IDC_ADD_REWARD, OnBnClickedAddReward)
; 31   : 	ON_BN_CLICKED(IDC_MODIFY_REWARD, OnBnClickedModifyReward)	
; 32   : 	ON_BN_CLICKED(IDC_DELETE_REWARD, OnBnClickedDeleteReward)
; 33   : 	ON_NOTIFY(LVN_ITEMCHANGED, IDC_LIST_REWARD, OnLvnItemchangedListReward)
; 34   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgMatchReward@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchReward::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnLvnItemchangedListReward@CDlgMatchReward@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_pMatchRewardInfo$1 = -12				; size = 4
_pNMLV$ = -8						; size = 4
_this$ = -4						; size = 4
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnLvnItemchangedListReward@CDlgMatchReward@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CDlgMatchReward::OnLvnItemchangedListReward, COMDAT
; _this$ = ecx

; 892  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 893  : 	LPNMLISTVIEW pNMLV = reinterpret_cast<LPNMLISTVIEW>(pNMHDR);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pNMLV$[ebp], eax

; 894  : 	
; 895  : 	//变量定义
; 896  : 	if (pNMLV->iItem!=LB_ERR)

  00012	8b 45 f8	 mov	 eax, DWORD PTR _pNMLV$[ebp]
  00015	83 78 0c ff	 cmp	 DWORD PTR [eax+12], -1
  00019	74 2a		 je	 SHORT $LN2@OnLvnItemc

; 897  : 	{
; 898  : 		//设置配置
; 899  : 		tagMatchRewardInfo * pMatchRewardInfo=(tagMatchRewardInfo *)m_RewardListControl.GetItemData(pNMLV->iItem);

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _pNMLV$[ebp]
  0001e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00021	51		 push	 ecx
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  0002b	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00030	89 45 f4	 mov	 DWORD PTR _pMatchRewardInfo$1[ebp], eax

; 900  : 		if (pMatchRewardInfo!=NULL) SetMatchRewardOption(pMatchRewardInfo);

  00033	83 7d f4 00	 cmp	 DWORD PTR _pMatchRewardInfo$1[ebp], 0
  00037	74 0c		 je	 SHORT $LN2@OnLvnItemc
  00039	8b 45 f4	 mov	 eax, DWORD PTR _pMatchRewardInfo$1[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z ; CDlgMatchReward::SetMatchRewardOption
$LN2@OnLvnItemc:

; 901  : 	}
; 902  : 
; 903  : 	*pResult = 0;

  00045	8b 45 0c	 mov	 eax, DWORD PTR _pResult$[ebp]
  00048	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 904  : }

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?OnLvnItemchangedListReward@CDlgMatchReward@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CDlgMatchReward::OnLvnItemchangedListReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnBnClickedDeleteReward@CDlgMatchReward@@QAEXXZ
_TEXT	SEGMENT
_pMatchRewardInfo$1 = -48				; size = 4
_wRankID$2 = -44					; size = 2
_MatchRewardInfo$ = -40					; size = 22
_wEndRankID$ = -16					; size = 2
_wStartRankID$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnBnClickedDeleteReward@CDlgMatchReward@@QAEXXZ PROC	; CDlgMatchReward::OnBnClickedDeleteReward, COMDAT
; _this$ = ecx

; 863  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 864  : 	//变量定义
; 865  : 	WORD wStartRankID,wEndRankID;
; 866  : 	tagMatchRewardInfo MatchRewardInfo;
; 867  : 
; 868  : 	//获取配置
; 869  : 	if (GetMatchRewardOption(MatchRewardInfo,wStartRankID,wEndRankID)==false) return;

  00016	8d 45 f0	 lea	 eax, DWORD PTR _wEndRankID$[ebp]
  00019	50		 push	 eax
  0001a	8d 4d f4	 lea	 ecx, DWORD PTR _wStartRankID$[ebp]
  0001d	51		 push	 ecx
  0001e	8d 55 d8	 lea	 edx, DWORD PTR _MatchRewardInfo$[ebp]
  00021	52		 push	 edx
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z ; CDlgMatchReward::GetMatchRewardOption
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	75 02		 jne	 SHORT $LN5@OnBnClicke
  00031	eb 7f		 jmp	 SHORT $LN1@OnBnClicke
$LN5@OnBnClicke:

; 870  : 
; 871  : 	for (WORD wRankID=wStartRankID; wRankID<=wEndRankID; wRankID++)

  00033	66 8b 45 f4	 mov	 ax, WORD PTR _wStartRankID$[ebp]
  00037	66 89 45 d4	 mov	 WORD PTR _wRankID$2[ebp], ax
  0003b	eb 0c		 jmp	 SHORT $LN4@OnBnClicke
$LN2@OnBnClicke:
  0003d	66 8b 45 d4	 mov	 ax, WORD PTR _wRankID$2[ebp]
  00041	66 83 c0 01	 add	 ax, 1
  00045	66 89 45 d4	 mov	 WORD PTR _wRankID$2[ebp], ax
$LN4@OnBnClicke:
  00049	0f b7 45 d4	 movzx	 eax, WORD PTR _wRankID$2[ebp]
  0004d	0f b7 4d f0	 movzx	 ecx, WORD PTR _wEndRankID$[ebp]
  00051	3b c1		 cmp	 eax, ecx
  00053	7f 5d		 jg	 SHORT $LN1@OnBnClicke

; 872  : 	{
; 873  : 		//设置名次
; 874  : 		MatchRewardInfo.wRankID=wRankID;

  00055	66 8b 45 d4	 mov	 ax, WORD PTR _wRankID$2[ebp]
  00059	66 89 45 d8	 mov	 WORD PTR _MatchRewardInfo$[ebp], ax

; 875  : 
; 876  : 		//存在判断
; 877  : 		tagMatchRewardInfo * pMatchRewardInfo=m_pRewardInfoBuffer->SearchMatchReward(wRankID);

  0005d	0f b7 45 d4	 movzx	 eax, WORD PTR _wRankID$2[ebp]
  00061	50		 push	 eax
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	8b 89 ac 00 00
	00		 mov	 ecx, DWORD PTR [ecx+172]
  0006b	e8 00 00 00 00	 call	 ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
  00070	89 45 d0	 mov	 DWORD PTR _pMatchRewardInfo$1[ebp], eax

; 878  : 		if (pMatchRewardInfo==NULL)

  00073	83 7d d0 00	 cmp	 DWORD PTR _pMatchRewardInfo$1[ebp], 0
  00077	75 10		 jne	 SHORT $LN6@OnBnClicke

; 879  : 		{
; 880  : 			AfxMessageBox(TEXT("抱歉，该名次的奖励不存在,如要添加请点击添加奖励按钮！"));

  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CBDLPBKG@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?$LC?$LL?$LE?f?T?Z?0?H?g?R?$KK?L?m@
  00082	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 881  : 			return;

  00087	eb 29		 jmp	 SHORT $LN1@OnBnClicke
$LN6@OnBnClicke:

; 882  : 		}
; 883  : 
; 884  : 		//更新控件
; 885  : 		m_RewardListControl.DeleteMatchReward(pMatchRewardInfo);

  00089	8b 45 d0	 mov	 eax, DWORD PTR _pMatchRewardInfo$1[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00096	e8 00 00 00 00	 call	 ?DeleteMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z ; CRewardListControl::DeleteMatchReward

; 886  : 		m_pRewardInfoBuffer->DeleteMatchRewardInfo(pMatchRewardInfo->wRankID);

  0009b	8b 45 d0	 mov	 eax, DWORD PTR _pMatchRewardInfo$1[ebp]
  0009e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a1	51		 push	 ecx
  000a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 8a ac 00 00
	00		 mov	 ecx, DWORD PTR [edx+172]
  000ab	e8 00 00 00 00	 call	 ?DeleteMatchRewardInfo@CRewardInfoBuffer@@QAE_NG@Z ; CRewardInfoBuffer::DeleteMatchRewardInfo

; 887  : 	}

  000b0	eb 8b		 jmp	 SHORT $LN2@OnBnClicke
$LN1@OnBnClicke:

; 888  : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
?OnBnClickedDeleteReward@CDlgMatchReward@@QAEXXZ ENDP	; CDlgMatchReward::OnBnClickedDeleteReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnBnClickedModifyReward@CDlgMatchReward@@QAEXXZ
_TEXT	SEGMENT
_pMatchRewardInfo$1 = -48				; size = 4
_wRankID$2 = -44					; size = 2
_MatchRewardInfo$ = -40					; size = 22
_wEndRankID$ = -16					; size = 2
_wStartRankID$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnBnClickedModifyReward@CDlgMatchReward@@QAEXXZ PROC	; CDlgMatchReward::OnBnClickedModifyReward, COMDAT
; _this$ = ecx

; 832  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 833  : 	//变量定义
; 834  : 	WORD wStartRankID,wEndRankID;
; 835  : 	tagMatchRewardInfo MatchRewardInfo;
; 836  : 
; 837  : 	//获取配置
; 838  : 	if (GetMatchRewardOption(MatchRewardInfo,wStartRankID,wEndRankID)==false) return;

  00016	8d 45 f0	 lea	 eax, DWORD PTR _wEndRankID$[ebp]
  00019	50		 push	 eax
  0001a	8d 4d f4	 lea	 ecx, DWORD PTR _wStartRankID$[ebp]
  0001d	51		 push	 ecx
  0001e	8d 55 d8	 lea	 edx, DWORD PTR _MatchRewardInfo$[ebp]
  00021	52		 push	 edx
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z ; CDlgMatchReward::GetMatchRewardOption
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	75 02		 jne	 SHORT $LN5@OnBnClicke
  00031	eb 7c		 jmp	 SHORT $LN1@OnBnClicke
$LN5@OnBnClicke:

; 839  : 
; 840  : 	for (WORD wRankID=wStartRankID; wRankID<=wEndRankID; wRankID++)

  00033	66 8b 45 f4	 mov	 ax, WORD PTR _wStartRankID$[ebp]
  00037	66 89 45 d4	 mov	 WORD PTR _wRankID$2[ebp], ax
  0003b	eb 0c		 jmp	 SHORT $LN4@OnBnClicke
$LN2@OnBnClicke:
  0003d	66 8b 45 d4	 mov	 ax, WORD PTR _wRankID$2[ebp]
  00041	66 83 c0 01	 add	 ax, 1
  00045	66 89 45 d4	 mov	 WORD PTR _wRankID$2[ebp], ax
$LN4@OnBnClicke:
  00049	0f b7 45 d4	 movzx	 eax, WORD PTR _wRankID$2[ebp]
  0004d	0f b7 4d f0	 movzx	 ecx, WORD PTR _wEndRankID$[ebp]
  00051	3b c1		 cmp	 eax, ecx
  00053	7f 5a		 jg	 SHORT $LN1@OnBnClicke

; 841  : 	{
; 842  : 		//设置名次
; 843  : 		MatchRewardInfo.wRankID=wRankID;

  00055	66 8b 45 d4	 mov	 ax, WORD PTR _wRankID$2[ebp]
  00059	66 89 45 d8	 mov	 WORD PTR _MatchRewardInfo$[ebp], ax

; 844  : 
; 845  : 		//存在判断
; 846  : 		tagMatchRewardInfo * pMatchRewardInfo=m_pRewardInfoBuffer->SearchMatchReward(wRankID);

  0005d	0f b7 45 d4	 movzx	 eax, WORD PTR _wRankID$2[ebp]
  00061	50		 push	 eax
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	8b 89 ac 00 00
	00		 mov	 ecx, DWORD PTR [ecx+172]
  0006b	e8 00 00 00 00	 call	 ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
  00070	89 45 d0	 mov	 DWORD PTR _pMatchRewardInfo$1[ebp], eax

; 847  : 		if (pMatchRewardInfo==NULL)

  00073	83 7d d0 00	 cmp	 DWORD PTR _pMatchRewardInfo$1[ebp], 0
  00077	75 10		 jne	 SHORT $LN6@OnBnClicke

; 848  : 		{
; 849  : 			AfxMessageBox(TEXT("抱歉，该名次的奖励不存在,如要添加请点击添加奖励按钮！"));

  00079	6a 00		 push	 0
  0007b	6a 00		 push	 0
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CBDLPBKG@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?$LC?$LL?$LE?f?T?Z?0?H?g?R?$KK?L?m@
  00082	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 850  : 			return;

  00087	eb 26		 jmp	 SHORT $LN1@OnBnClicke
$LN6@OnBnClicke:

; 851  : 		}
; 852  : 
; 853  : 		//更新数据
; 854  : 		CopyMemory(pMatchRewardInfo,&MatchRewardInfo,sizeof(tagMatchRewardInfo));

  00089	6a 16		 push	 22			; 00000016H
  0008b	8d 45 d8	 lea	 eax, DWORD PTR _MatchRewardInfo$[ebp]
  0008e	50		 push	 eax
  0008f	8b 4d d0	 mov	 ecx, DWORD PTR _pMatchRewardInfo$1[ebp]
  00092	51		 push	 ecx
  00093	e8 00 00 00 00	 call	 _memcpy
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH

; 855  : 
; 856  : 		//更新控件
; 857  : 		m_RewardListControl.UpdateMatchReward(pMatchRewardInfo);

  0009b	8b 45 d0	 mov	 eax, DWORD PTR _pMatchRewardInfo$1[ebp]
  0009e	50		 push	 eax
  0009f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  000a8	e8 00 00 00 00	 call	 ?UpdateMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z ; CRewardListControl::UpdateMatchReward

; 858  : 	}

  000ad	eb 8e		 jmp	 SHORT $LN2@OnBnClicke
$LN1@OnBnClicke:

; 859  : }

  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b5	33 cd		 xor	 ecx, ebp
  000b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
?OnBnClickedModifyReward@CDlgMatchReward@@QAEXXZ ENDP	; CDlgMatchReward::OnBnClickedModifyReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnBnClickedAddReward@CDlgMatchReward@@QAEXXZ
_TEXT	SEGMENT
_pMatchRewardInfo$1 = -48				; size = 4
_wRankID$2 = -44					; size = 2
_MatchRewardInfo$ = -40					; size = 22
_wEndRankID$ = -16					; size = 2
_wStartRankID$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?OnBnClickedAddReward@CDlgMatchReward@@QAEXXZ PROC	; CDlgMatchReward::OnBnClickedAddReward, COMDAT
; _this$ = ecx

; 800  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 801  : 	//变量定义
; 802  : 	WORD wStartRankID,wEndRankID;
; 803  : 	tagMatchRewardInfo MatchRewardInfo;
; 804  : 
; 805  : 	//获取配置
; 806  : 	if (GetMatchRewardOption(MatchRewardInfo,wStartRankID,wEndRankID)==false) return;

  00016	8d 45 f0	 lea	 eax, DWORD PTR _wEndRankID$[ebp]
  00019	50		 push	 eax
  0001a	8d 4d f4	 lea	 ecx, DWORD PTR _wStartRankID$[ebp]
  0001d	51		 push	 ecx
  0001e	8d 55 d8	 lea	 edx, DWORD PTR _MatchRewardInfo$[ebp]
  00021	52		 push	 edx
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z ; CDlgMatchReward::GetMatchRewardOption
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	75 05		 jne	 SHORT $LN5@OnBnClicke
  00031	e9 87 00 00 00	 jmp	 $LN1@OnBnClicke
$LN5@OnBnClicke:

; 807  : 
; 808  : 	for (WORD wRankID=wStartRankID; wRankID<=wEndRankID; wRankID++)

  00036	66 8b 45 f4	 mov	 ax, WORD PTR _wStartRankID$[ebp]
  0003a	66 89 45 d4	 mov	 WORD PTR _wRankID$2[ebp], ax
  0003e	eb 0c		 jmp	 SHORT $LN4@OnBnClicke
$LN2@OnBnClicke:
  00040	66 8b 45 d4	 mov	 ax, WORD PTR _wRankID$2[ebp]
  00044	66 83 c0 01	 add	 ax, 1
  00048	66 89 45 d4	 mov	 WORD PTR _wRankID$2[ebp], ax
$LN4@OnBnClicke:
  0004c	0f b7 45 d4	 movzx	 eax, WORD PTR _wRankID$2[ebp]
  00050	0f b7 4d f0	 movzx	 ecx, WORD PTR _wEndRankID$[ebp]
  00054	3b c1		 cmp	 eax, ecx
  00056	7f 65		 jg	 SHORT $LN1@OnBnClicke

; 809  : 	{
; 810  : 		//设置名次
; 811  : 		MatchRewardInfo.wRankID=wRankID;

  00058	66 8b 45 d4	 mov	 ax, WORD PTR _wRankID$2[ebp]
  0005c	66 89 45 d8	 mov	 WORD PTR _MatchRewardInfo$[ebp], ax

; 812  : 
; 813  : 		//存在判断
; 814  : 		if (m_pRewardInfoBuffer->SearchMatchReward(MatchRewardInfo.wRankID)!=NULL)

  00060	0f b7 45 d8	 movzx	 eax, WORD PTR _MatchRewardInfo$[ebp]
  00064	50		 push	 eax
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	8b 89 ac 00 00
	00		 mov	 ecx, DWORD PTR [ecx+172]
  0006e	e8 00 00 00 00	 call	 ?SearchMatchReward@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@G@Z ; CRewardInfoBuffer::SearchMatchReward
  00073	85 c0		 test	 eax, eax
  00075	74 10		 je	 SHORT $LN6@OnBnClicke

; 815  : 		{
; 816  : 			AfxMessageBox(TEXT("抱歉，该名次的奖励已存在,如要修改请点击修改奖励按钮！"));

  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@KCCJLHM@?$LB?$KH?G?$LI?$KD?$KM?$LI?C?C?$PL?$LE?N?$LF?D?$LN?$LB?$MA?x?R?Q?$LE?f?T?Z?0?H?g?R?$KK?P?$NO@
  00080	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 817  : 
; 818  : 			return;

  00085	eb 36		 jmp	 SHORT $LN1@OnBnClicke
$LN6@OnBnClicke:

; 819  : 		}
; 820  : 
; 821  : 		//插入奖励
; 822  : 		tagMatchRewardInfo * pMatchRewardInfo=NULL;

  00087	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pMatchRewardInfo$1[ebp], 0

; 823  : 		if (pMatchRewardInfo=m_pRewardInfoBuffer->InsertMatchRewardInfo(MatchRewardInfo))

  0008e	8d 45 d8	 lea	 eax, DWORD PTR _MatchRewardInfo$[ebp]
  00091	50		 push	 eax
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 89 ac 00 00
	00		 mov	 ecx, DWORD PTR [ecx+172]
  0009b	e8 00 00 00 00	 call	 ?InsertMatchRewardInfo@CRewardInfoBuffer@@QAEPAUtagMatchRewardInfo@@AAU2@@Z ; CRewardInfoBuffer::InsertMatchRewardInfo
  000a0	89 45 d0	 mov	 DWORD PTR _pMatchRewardInfo$1[ebp], eax
  000a3	83 7d d0 00	 cmp	 DWORD PTR _pMatchRewardInfo$1[ebp], 0
  000a7	74 12		 je	 SHORT $LN7@OnBnClicke

; 824  : 		{
; 825  : 			m_RewardListControl.InsertMatchReward(pMatchRewardInfo);

  000a9	8b 45 d0	 mov	 eax, DWORD PTR _pMatchRewardInfo$1[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  000b6	e8 00 00 00 00	 call	 ?InsertMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z ; CRewardListControl::InsertMatchReward
$LN7@OnBnClicke:

; 826  : 		}
; 827  : 	}

  000bb	eb 83		 jmp	 SHORT $LN2@OnBnClicke
$LN1@OnBnClicke:

; 828  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c3	33 cd		 xor	 ecx, ebp
  000c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
?OnBnClickedAddReward@CDlgMatchReward@@QAEXXZ ENDP	; CDlgMatchReward::OnBnClickedAddReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_MatchRewardInfo$ = 8					; size = 4
_wStartRankID$ = 12					; size = 4
_wEndRankID$ = 16					; size = 4
?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z PROC ; CDlgMatchReward::GetMatchRewardOption, COMDAT
; _this$ = ecx

; 745  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 746  : 	//获取名次
; 747  : 	wEndRankID=GetDlgItemInt(IDC_RANKID_END);

  0000c	6a 01		 push	 1
  0000e	6a 00		 push	 0
  00010	68 5d 23 00 00	 push	 9053			; 0000235dH
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0001d	8b 4d 10	 mov	 ecx, DWORD PTR _wEndRankID$[ebp]
  00020	66 89 01	 mov	 WORD PTR [ecx], ax

; 748  : 	wStartRankID=GetDlgItemInt(IDC_RANKID_START);	

  00023	6a 01		 push	 1
  00025	6a 00		 push	 0
  00027	68 5b 23 00 00	 push	 9051			; 0000235bH
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _wStartRankID$[ebp]
  00037	66 89 01	 mov	 WORD PTR [ecx], ax

; 749  : 
; 750  : 	//调整名次
; 751  : 	if (wEndRankID==0) wEndRankID=wStartRankID;

  0003a	8b 45 10	 mov	 eax, DWORD PTR _wEndRankID$[ebp]
  0003d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00040	85 c9		 test	 ecx, ecx
  00042	75 0c		 jne	 SHORT $LN2@GetMatchRe
  00044	8b 45 10	 mov	 eax, DWORD PTR _wEndRankID$[ebp]
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _wStartRankID$[ebp]
  0004a	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0004d	66 89 10	 mov	 WORD PTR [eax], dx
$LN2@GetMatchRe:

; 752  : 
; 753  : 	//奖励金币
; 754  : 	MatchRewardInfo.lRewardGold=GetDlgItemInt(IDC_REWARD_GOLD);

  00050	6a 01		 push	 1
  00052	6a 00		 push	 0
  00054	68 5c 23 00 00	 push	 9052			; 0000235cH
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00061	33 c9		 xor	 ecx, ecx
  00063	8b 55 08	 mov	 edx, DWORD PTR _MatchRewardInfo$[ebp]
  00066	89 42 02	 mov	 DWORD PTR [edx+2], eax
  00069	89 4a 06	 mov	 DWORD PTR [edx+6], ecx

; 755  : 
; 756  : 	//奖励元宝
; 757  : 	MatchRewardInfo.lRewardIngot=GetDlgItemInt(IDC_REWARD_INGOT);

  0006c	6a 01		 push	 1
  0006e	6a 00		 push	 0
  00070	68 5f 23 00 00	 push	 9055			; 0000235fH
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0007d	33 c9		 xor	 ecx, ecx
  0007f	8b 55 08	 mov	 edx, DWORD PTR _MatchRewardInfo$[ebp]
  00082	89 42 0a	 mov	 DWORD PTR [edx+10], eax
  00085	89 4a 0e	 mov	 DWORD PTR [edx+14], ecx

; 758  : 
; 759  : 	//奖励经验
; 760  : 	MatchRewardInfo.dwRewardExperience=GetDlgItemInt(IDC_REWARD_EXPERIENCE);

  00088	6a 01		 push	 1
  0008a	6a 00		 push	 0
  0008c	68 61 23 00 00	 push	 9057			; 00002361H
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _MatchRewardInfo$[ebp]
  0009c	89 41 12	 mov	 DWORD PTR [ecx+18], eax

; 761  : 
; 762  : 	//名次校验
; 763  : 	if (wStartRankID==0 || wEndRankID<wStartRankID)

  0009f	8b 45 0c	 mov	 eax, DWORD PTR _wStartRankID$[ebp]
  000a2	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a5	85 c9		 test	 ecx, ecx
  000a7	74 10		 je	 SHORT $LN4@GetMatchRe
  000a9	8b 45 10	 mov	 eax, DWORD PTR _wEndRankID$[ebp]
  000ac	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000af	8b 55 0c	 mov	 edx, DWORD PTR _wStartRankID$[ebp]
  000b2	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000b5	3b c8		 cmp	 ecx, eax
  000b7	7d 26		 jge	 SHORT $LN3@GetMatchRe
$LN4@GetMatchRe:

; 764  : 	{
; 765  : 		AfxMessageBox(TEXT("您输入的比赛名次不合法，请重新输入！"));

  000b9	6a 00		 push	 0
  000bb	6a 00		 push	 0
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JAINKKBO@?D?z?J?d?H?k?$LF?D?$LB?H?H?$PM?C?$PL?$LE?N?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?J@
  000c2	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 766  : 
; 767  : 		//设置焦点
; 768  : 		GetDlgItem(IDC_RANKID_START)->SetFocus();

  000c7	68 5b 23 00 00	 push	 9051			; 0000235bH
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 769  : 
; 770  : 		return false;

  000db	32 c0		 xor	 al, al
  000dd	eb 02		 jmp	 SHORT $LN1@GetMatchRe
$LN3@GetMatchRe:

; 771  : 	}
; 772  : 
; 773  : 	return true;

  000df	b0 01		 mov	 al, 1
$LN1@GetMatchRe:

; 774  : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 0c 00	 ret	 12			; 0000000cH
?GetMatchRewardOption@CDlgMatchReward@@IAE_NAAUtagMatchRewardInfo@@AAG1@Z ENDP ; CDlgMatchReward::GetMatchRewardOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMatchRewardInfo$ = 8					; size = 4
?SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z PROC ; CDlgMatchReward::SetMatchRewardOption, COMDAT
; _this$ = ecx

; 778  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 779  : 	//参数校验
; 780  : 	ASSERT(pMatchRewardInfo!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pMatchRewardInfo$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@SetMatchRe
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MJOKLGEN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@SetMatchRe
  00029	cc		 int	 3
$LN4@SetMatchRe:

; 781  : 	if (pMatchRewardInfo==NULL) return;	

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pMatchRewardInfo$[ebp], 0
  0002e	75 02		 jne	 SHORT $LN2@SetMatchRe
  00030	eb 6e		 jmp	 SHORT $LN1@SetMatchRe
$LN2@SetMatchRe:

; 782  : 
; 783  : 	//设置名次
; 784  : 	SetDlgItemInt(IDC_RANKID_END,(UINT)pMatchRewardInfo->wRankID);

  00032	6a 01		 push	 1
  00034	8b 45 08	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  00037	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	68 5d 23 00 00	 push	 9053			; 0000235dH
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 785  : 	SetDlgItemInt(IDC_RANKID_START,(UINT)pMatchRewardInfo->wRankID);	

  00048	6a 01		 push	 1
  0004a	8b 45 08	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0004d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00050	51		 push	 ecx
  00051	68 5b 23 00 00	 push	 9051			; 0000235bH
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 786  : 
; 787  : 	//金币奖励
; 788  : 	SetDlgItemInt(IDC_REWARD_GOLD,(UINT)pMatchRewardInfo->lRewardGold);

  0005e	6a 01		 push	 1
  00060	8b 45 08	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  00063	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  00066	51		 push	 ecx
  00067	68 5c 23 00 00	 push	 9052			; 0000235cH
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 789  : 
; 790  : 	//奖牌奖励
; 791  : 	SetDlgItemInt(IDC_REWARD_INGOT,(UINT)pMatchRewardInfo->lRewardIngot);

  00074	6a 01		 push	 1
  00076	8b 45 08	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  00079	8b 48 0a	 mov	 ecx, DWORD PTR [eax+10]
  0007c	51		 push	 ecx
  0007d	68 5f 23 00 00	 push	 9055			; 0000235fH
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 792  : 
; 793  : 	//经验奖励
; 794  : 	SetDlgItemInt(IDC_REWARD_EXPERIENCE,(UINT)pMatchRewardInfo->dwRewardExperience);

  0008a	6a 01		 push	 1
  0008c	8b 45 08	 mov	 eax, DWORD PTR _pMatchRewardInfo$[ebp]
  0008f	8b 48 12	 mov	 ecx, DWORD PTR [eax+18]
  00092	51		 push	 ecx
  00093	68 61 23 00 00	 push	 9057			; 00002361H
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN1@SetMatchRe:

; 795  : }

  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
?SetMatchRewardOption@CDlgMatchReward@@IAEXPAUtagMatchRewardInfo@@@Z ENDP ; CDlgMatchReward::SetMatchRewardOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchReward@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchReward@@MAEXHH@Z PROC		; CDlgMatchReward::RectifyControl, COMDAT
; _this$ = ecx

; 739  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 740  : 	return;
; 741  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchReward@@MAEXHH@Z ENDP		; CDlgMatchReward::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchReward@@MAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchReward@@MAE_NXZ PROC		; CDlgMatchReward::SaveInputInfo, COMDAT
; _this$ = ecx

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 734  : 	return true;

  0000c	b0 01		 mov	 al, 1

; 735  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?SaveInputInfo@CDlgMatchReward@@MAE_NXZ ENDP		; CDlgMatchReward::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?DoDataExchange@CDlgMatchReward@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CDlgMatchReward@@MAEXPAVCDataExchange@@@Z PROC ; CDlgMatchReward::DoDataExchange, COMDAT
; _this$ = ecx

; 724  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 725  : 	__super::DoDataExchange(pDX);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pDX$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 726  : 
; 727  : 	//奖励列表
; 728  : 	DDX_Control(pDX,IDC_LIST_REWARD,m_RewardListControl);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  00020	50		 push	 eax
  00021	68 53 23 00 00	 push	 9043			; 00002353H
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pDX$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 729  : }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?DoDataExchange@CDlgMatchReward@@MAEXPAVCDataExchange@@@Z ENDP ; CDlgMatchReward::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchReward@@MAEHXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchReward@@MAEHXZ PROC		; CDlgMatchReward::OnInitDialog, COMDAT
; _this$ = ecx

; 707  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 708  : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 709  : 
; 710  : 	//添加奖励
; 711  : 	if (m_pRewardInfoBuffer!=NULL)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 b8 ac 00 00
	00 00		 cmp	 DWORD PTR [eax+172], 0
  0001e	74 50		 je	 SHORT $LN5@OnInitDial

; 712  : 	{
; 713  : 		for(INT_PTR i=0;i<m_pRewardInfoBuffer->m_MatchRewardInfoArray.GetCount();i++) 

  00020	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00027	eb 09		 jmp	 SHORT $LN4@OnInitDial
$LN2@OnInitDial:
  00029	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  0002c	83 c0 01	 add	 eax, 1
  0002f	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@OnInitDial:
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  0003b	83 c1 04	 add	 ecx, 4
  0003e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
  00043	39 45 f8	 cmp	 DWORD PTR _i$1[ebp], eax
  00046	7d 28		 jge	 SHORT $LN5@OnInitDial

; 714  : 		{
; 715  : 			m_RewardListControl.InsertMatchReward(m_pRewardInfoBuffer->m_MatchRewardInfoArray[i]);

  00048	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	8b 89 ac 00 00
	00		 mov	 ecx, DWORD PTR [ecx+172]
  00055	83 c1 04	 add	 ecx, 4
  00058	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	52		 push	 edx
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00069	e8 00 00 00 00	 call	 ?InsertMatchReward@CRewardListControl@@QAE_NPAUtagMatchRewardInfo@@@Z ; CRewardListControl::InsertMatchReward

; 716  : 		}

  0006e	eb b9		 jmp	 SHORT $LN2@OnInitDial
$LN5@OnInitDial:

; 717  : 	}
; 718  : 
; 719  : 	return FALSE;

  00070	33 c0		 xor	 eax, eax

; 720  : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?OnInitDialog@CDlgMatchReward@@MAEHXZ ENDP		; CDlgMatchReward::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchReward@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchReward@@UAE@XZ PROC				; CDlgMatchReward::~CDlgMatchReward, COMDAT
; _this$ = ecx

; 702  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchReward@@6B@

; 703  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  0001e	e8 00 00 00 00	 call	 ??1CRewardListControl@@UAE@XZ ; CRewardListControl::~CRewardListControl
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??1CDlgMatchReward@@UAE@XZ ENDP				; CDlgMatchReward::~CDlgMatchReward
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchReward@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgMatchReward@@QAE@XZ PROC				; CDlgMatchReward::CDlgMatchReward, COMDAT
; _this$ = ecx

; 697  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgMatchReward@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 696  : CDlgMatchReward::CDlgMatchReward() : CDlgMatchItem(IDD_MATCH_REWARD)

  0002b	68 39 23 00 00	 push	 9017			; 00002339H
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 697  : {

  0003f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchReward@@6B@
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00051	e8 00 00 00 00	 call	 ??0CRewardListControl@@QAE@XZ ; CRewardListControl::CRewardListControl

; 698  : }

  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgMatchReward@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
__ehhandler$??0CDlgMatchReward@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgMatchReward@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgMatchReward@@QAE@XZ ENDP				; CDlgMatchReward::CDlgMatchReward
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchRankingMode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchRankingMode@@UAEPAXI@Z PROC		; CDlgMatchRankingMode::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchRankingMode@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchRankingMode@@UAE@XZ ; CDlgMatchRankingMode::~CDlgMatchRankingMode
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchRankingMode@@UAE@XZ ; CDlgMatchRankingMode::~CDlgMatchRankingMode
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchRankingMode@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchRankingMode@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchRankingMode@@UAEPAXI@Z ENDP		; CDlgMatchRankingMode::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchRankingMode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchRankingMode@@UAEPAXI@Z PROC		; CDlgMatchRankingMode::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchRankingMode@@UAE@XZ ; CDlgMatchRankingMode::~CDlgMatchRankingMode
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchRankingMode@@UAEPAXI@Z ENDP		; CDlgMatchRankingMode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnEventMatchTypeChanged@CDlgMatchRankingMode@@UAEXE@Z
_TEXT	SEGMENT
tv75 = -72						; size = 4
_this$ = -4						; size = 4
_cbMatchType$ = 8					; size = 1
?OnEventMatchTypeChanged@CDlgMatchRankingMode@@UAEXE@Z PROC ; CDlgMatchRankingMode::OnEventMatchTypeChanged, COMDAT
; _this$ = ecx

; 688  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 689  : 	//设置控件
; 690  : 	GetDlgItem(IDC_RADIO_SPECIALLY_GRADES)->EnableWindow(cbMatchType==MATCH_TYPE_LOCKTIME);

  0000c	0f b6 45 08	 movzx	 eax, BYTE PTR _cbMatchType$[ebp]
  00010	85 c0		 test	 eax, eax
  00012	75 09		 jne	 SHORT $LN3@OnEventMat
  00014	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0001b	eb 07		 jmp	 SHORT $LN4@OnEventMat
$LN3@OnEventMat:
  0001d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN4@OnEventMat:
  00024	8b 4d b8	 mov	 ecx, DWORD PTR tv75[ebp]
  00027	51		 push	 ecx
  00028	68 36 23 00 00	 push	 9014			; 00002336H
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 691  : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?OnEventMatchTypeChanged@CDlgMatchRankingMode@@UAEXE@Z ENDP ; CDlgMatchRankingMode::OnEventMatchTypeChanged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchRankingMode@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchRankingMode@@MAEXHH@Z PROC	; CDlgMatchRankingMode::RectifyControl, COMDAT
; _this$ = ecx

; 682  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 683  : 	return;
; 684  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchRankingMode@@MAEXHH@Z ENDP	; CDlgMatchRankingMode::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchRankingMode@@MAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchRankingMode@@MAE_NXZ PROC	; CDlgMatchRankingMode::SaveInputInfo, COMDAT
; _this$ = ecx

; 652  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 653  : 	//排名方式
; 654  : 	if (IsDlgButtonChecked(IDC_RADIO_TOTAL_GRADES)) m_pGameMatchOption->cbRankingMode=RANKING_MODE_TOTAL_GRADES;

  0000c	68 35 23 00 00	 push	 9013			; 00002335H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN2@SaveInputI
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00026	c6 41 70 00	 mov	 BYTE PTR [ecx+112], 0
$LN2@SaveInputI:

; 655  : 	if (IsDlgButtonChecked(IDC_RADIO_SPECIALLY_GRADES)) m_pGameMatchOption->cbRankingMode=RANKING_MODE_SPECIAL_GRADES;

  0002a	68 36 23 00 00	 push	 9014			; 00002336H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00037	85 c0		 test	 eax, eax
  00039	74 0d		 je	 SHORT $LN3@SaveInputI
  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00044	c6 41 70 01	 mov	 BYTE PTR [ecx+112], 1
$LN3@SaveInputI:

; 656  : 
; 657  : 	//特定局数
; 658  : 	if (m_pGameMatchOption->cbRankingMode==RANKING_MODE_SPECIAL_GRADES)

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00051	0f b6 51 70	 movzx	 edx, BYTE PTR [ecx+112]
  00055	83 fa 01	 cmp	 edx, 1
  00058	0f 85 9b 00 00
	00		 jne	 $LN4@SaveInputI

; 659  : 	{
; 660  : 		//统计局数
; 661  : 		m_pGameMatchOption->wCountInnings=GetDlgItemInt(IDC_EDIT_COUNT_INNINGS);

  0005e	6a 01		 push	 1
  00060	6a 00		 push	 0
  00062	68 31 23 00 00	 push	 9009			; 00002331H
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00078	66 89 42 72	 mov	 WORD PTR [edx+114], ax

; 662  : 
; 663  : 		//合法校验
; 664  : 		if (m_pGameMatchOption->wCountInnings==0)

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00085	0f b7 51 72	 movzx	 edx, WORD PTR [ecx+114]
  00089	85 d2		 test	 edx, edx
  0008b	75 12		 jne	 SHORT $LN5@SaveInputI

; 665  : 		{
; 666  : 			AfxMessageBox(TEXT("统计局数设置不合法，请重新设置！"));

  0008d	6a 00		 push	 0
  0008f	6a 00		 push	 0
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NFBJEILB@?M?$LD?$LM?F?$LO?V?J?$PN?I?h?V?C?$LC?$LL?$LK?O?$LH?$KI?$KD?$KM?G?k?V?X?P?B?I?h?V?C?$KD@
  00096	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 667  : 
; 668  : 			return false;

  0009b	32 c0		 xor	 al, al
  0009d	eb 5c		 jmp	 SHORT $LN1@SaveInputI
$LN5@SaveInputI:

; 669  : 		}
; 670  : 
; 671  : 		//筛选模式
; 672  : 		if (IsDlgButtonChecked(IDC_RADIO_BEST_GRADES)) m_pGameMatchOption->cbFilterGradesMode=FILTER_GRADES_MODE_BEST;

  0009f	68 37 23 00 00	 push	 9015			; 00002337H
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  000ac	85 c0		 test	 eax, eax
  000ae	74 0d		 je	 SHORT $LN6@SaveInputI
  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b9	c6 41 74 00	 mov	 BYTE PTR [ecx+116], 0
$LN6@SaveInputI:

; 673  : 		if (IsDlgButtonChecked(IDC_RADIO_AVERAGE_GRADES)) m_pGameMatchOption->cbFilterGradesMode=FILTER_GRADES_MODE_AVERAGE;

  000bd	68 38 23 00 00	 push	 9016			; 00002338H
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  000ca	85 c0		 test	 eax, eax
  000cc	74 0d		 je	 SHORT $LN7@SaveInputI
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000d7	c6 41 74 01	 mov	 BYTE PTR [ecx+116], 1
$LN7@SaveInputI:

; 674  : 		if (IsDlgButtonChecked(IDC_RADIO_AVERAGEEX_GRADES)) m_pGameMatchOption->cbFilterGradesMode=FILTER_GRADES_MODE_AVERAGEEX;

  000db	68 39 23 00 00	 push	 9017			; 00002339H
  000e0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  000e8	85 c0		 test	 eax, eax
  000ea	74 0d		 je	 SHORT $LN4@SaveInputI
  000ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ef	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f5	c6 41 74 02	 mov	 BYTE PTR [ecx+116], 2
$LN4@SaveInputI:

; 675  : 	}	
; 676  : 
; 677  : 	return true;

  000f9	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 678  : }

  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
?SaveInputInfo@CDlgMatchRankingMode@@MAE_NXZ ENDP	; CDlgMatchRankingMode::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchRankingMode@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchRankingMode@@MAEHXZ PROC		; CDlgMatchRankingMode::OnInitDialog, COMDAT
; _this$ = ecx

; 624  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 625  : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 626  : 
; 627  : 	//设置控件
; 628  : 	((CEdit *)GetDlgItem(IDC_EDIT_COUNT_INNINGS))->LimitText(3);

  00014	6a 03		 push	 3
  00016	68 31 23 00 00	 push	 9009			; 00002331H
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 629  : 
; 630  : 	//设置控件
; 631  : 	CheckRadioButton(IDC_RADIO_TOTAL_GRADES,IDC_RADIO_SPECIALLY_GRADES,IDC_RADIO_TOTAL_GRADES+(m_pGameMatchOption->cbRankingMode-RANKING_MODE_TOTAL_GRADES));

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00033	0f b6 51 70	 movzx	 edx, BYTE PTR [ecx+112]
  00037	81 c2 35 23 00
	00		 add	 edx, 9013		; 00002335H
  0003d	52		 push	 edx
  0003e	68 36 23 00 00	 push	 9014			; 00002336H
  00043	68 35 23 00 00	 push	 9013			; 00002335H
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton

; 632  : 
; 633  : 	//特定局数排名
; 634  : 	if (IsDlgButtonChecked(IDC_RADIO_SPECIALLY_GRADES))

  00050	68 36 23 00 00	 push	 9014			; 00002336H
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  0005d	85 c0		 test	 eax, eax
  0005f	74 45		 je	 SHORT $LN2@OnInitDial

; 635  : 	{
; 636  : 		//统计局数
; 637  : 		SetDlgItemInt(IDC_EDIT_COUNT_INNINGS,m_pGameMatchOption->wCountInnings);

  00061	6a 01		 push	 1
  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0006c	0f b7 51 72	 movzx	 edx, WORD PTR [ecx+114]
  00070	52		 push	 edx
  00071	68 31 23 00 00	 push	 9009			; 00002331H
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 638  : 
; 639  : 		//设置控件
; 640  : 		CheckRadioButton(IDC_RADIO_BEST_GRADES,IDC_RADIO_AVERAGEEX_GRADES,IDC_RADIO_BEST_GRADES+(m_pGameMatchOption->cbFilterGradesMode-FILTER_GRADES_MODE_BEST));

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00087	0f b6 51 74	 movzx	 edx, BYTE PTR [ecx+116]
  0008b	81 c2 37 23 00
	00		 add	 edx, 9015		; 00002337H
  00091	52		 push	 edx
  00092	68 39 23 00 00	 push	 9017			; 00002339H
  00097	68 37 23 00 00	 push	 9015			; 00002337H
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton

; 641  : 	}
; 642  : 	else

  000a4	eb 17		 jmp	 SHORT $LN3@OnInitDial
$LN2@OnInitDial:

; 643  : 	{
; 644  : 		CheckRadioButton(IDC_RADIO_BEST_GRADES,IDC_RADIO_AVERAGEEX_GRADES,IDC_RADIO_BEST_GRADES);

  000a6	68 37 23 00 00	 push	 9015			; 00002337H
  000ab	68 39 23 00 00	 push	 9017			; 00002339H
  000b0	68 37 23 00 00	 push	 9015			; 00002337H
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN3@OnInitDial:

; 645  : 	}
; 646  : 
; 647  : 	return FALSE;

  000bd	33 c0		 xor	 eax, eax

; 648  : }

  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?OnInitDialog@CDlgMatchRankingMode@@MAEHXZ ENDP		; CDlgMatchRankingMode::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchRankingMode@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchRankingMode@@UAE@XZ PROC			; CDlgMatchRankingMode::~CDlgMatchRankingMode, COMDAT
; _this$ = ecx

; 619  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchRankingMode@@6B@

; 620  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchRankingMode@@UAE@XZ ENDP			; CDlgMatchRankingMode::~CDlgMatchRankingMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchRankingMode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgMatchRankingMode@@QAE@XZ PROC			; CDlgMatchRankingMode::CDlgMatchRankingMode, COMDAT
; _this$ = ecx

; 614  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 613  : CDlgMatchRankingMode::CDlgMatchRankingMode() : CDlgMatchItem(IDD_MATCH_RANKING_MODE)

  0000c	68 38 23 00 00	 push	 9016			; 00002338H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem

; 614  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchRankingMode@@6B@

; 615  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgMatchRankingMode@@QAE@XZ ENDP			; CDlgMatchRankingMode::CDlgMatchRankingMode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchDistribute@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchDistribute@@UAEPAXI@Z PROC			; CDlgMatchDistribute::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchDistribute@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchDistribute@@UAE@XZ ; CDlgMatchDistribute::~CDlgMatchDistribute
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchDistribute@@UAE@XZ ; CDlgMatchDistribute::~CDlgMatchDistribute
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchDistribute@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchDistribute@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchDistribute@@UAEPAXI@Z ENDP			; CDlgMatchDistribute::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchDistribute@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchDistribute@@UAEPAXI@Z PROC			; CDlgMatchDistribute::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchDistribute@@UAE@XZ ; CDlgMatchDistribute::~CDlgMatchDistribute
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchDistribute@@UAEPAXI@Z ENDP			; CDlgMatchDistribute::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchDistribute@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchDistribute@@MAEXHH@Z PROC	; CDlgMatchDistribute::RectifyControl, COMDAT
; _this$ = ecx

; 605  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 606  : 	return;
; 607  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchDistribute@@MAEXHH@Z ENDP	; CDlgMatchDistribute::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchDistribute@@MAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchDistribute@@MAE_NXZ PROC	; CDlgMatchDistribute::SaveInputInfo, COMDAT
; _this$ = ecx

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 574  : 	//配桌参数
; 575  : 	m_pGameMatchOption->wMinDistributeUser=GetDlgItemInt(IDC_DISTRIBUTE_MINCOUNT);

  0000c	6a 01		 push	 1
  0000e	6a 00		 push	 0
  00010	68 58 23 00 00	 push	 9048			; 00002358H
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00026	66 89 42 76	 mov	 WORD PTR [edx+118], ax

; 576  : 	m_pGameMatchOption->wDistributeTimeSpace=GetDlgItemInt(IDC_DISTRIBUTE_TIMESPACE);

  0002a	6a 01		 push	 1
  0002c	6a 00		 push	 0
  0002e	68 59 23 00 00	 push	 9049			; 00002359H
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00044	66 89 42 78	 mov	 WORD PTR [edx+120], ax

; 577  : 	m_pGameMatchOption->wMinPartakeGameUser=GetDlgItemInt(IDC_PARTAKE_MIN_GAMEUSER);

  00048	6a 01		 push	 1
  0004a	6a 00		 push	 0
  0004c	68 37 23 00 00	 push	 9015			; 00002337H
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00062	66 89 42 7a	 mov	 WORD PTR [edx+122], ax

; 578  : 	m_pGameMatchOption->wMaxPartakeGameUser=GetDlgItemInt(IDC_PARTAKE_MAX_GAMEUSER);

  00066	6a 01		 push	 1
  00068	6a 00		 push	 0
  0006a	68 38 23 00 00	 push	 9016			; 00002338H
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00077	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00080	66 89 42 7c	 mov	 WORD PTR [edx+124], ax

; 579  : 
; 580  : 	//同桌选项
; 581  : 	if (((CButton *)GetDlgItem(IDC_ALLOW_LAST_SAMETABLE))->GetCheck()==BST_CHECKED)

  00084	68 2a 23 00 00	 push	 9002			; 0000232aH
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  00098	83 f8 01	 cmp	 eax, 1
  0009b	75 1e		 jne	 SHORT $LN2@SaveInputI

; 582  : 	{
; 583  : 		m_pGameMatchOption->cbDistributeRule|=DISTRIBUTE_LAST_TABLE;

  0009d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000a6	0f b6 51 75	 movzx	 edx, BYTE PTR [ecx+117]
  000aa	83 ca 02	 or	 edx, 2
  000ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b6	88 51 75	 mov	 BYTE PTR [ecx+117], dl

; 584  : 	}
; 585  : 	else

  000b9	eb 1c		 jmp	 SHORT $LN3@SaveInputI
$LN2@SaveInputI:

; 586  : 	{
; 587  : 		m_pGameMatchOption->cbDistributeRule&=~DISTRIBUTE_LAST_TABLE;

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000c4	0f b6 51 75	 movzx	 edx, BYTE PTR [ecx+117]
  000c8	83 e2 fd	 and	 edx, -3			; fffffffdH
  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000d4	88 51 75	 mov	 BYTE PTR [ecx+117], dl
$LN3@SaveInputI:

; 588  : 	}
; 589  : 
; 590  : 	//地址选项
; 591  : 	if (((CButton *)GetDlgItem(IDC_ALLOW_SAME_ADDRESS))->GetCheck()==BST_CHECKED)

  000d7	68 2b 23 00 00	 push	 9003			; 0000232bH
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000e4	8b c8		 mov	 ecx, eax
  000e6	e8 00 00 00 00	 call	 ?GetCheck@CButton@@QBEHXZ ; CButton::GetCheck
  000eb	83 f8 01	 cmp	 eax, 1
  000ee	75 1e		 jne	 SHORT $LN4@SaveInputI

; 592  : 	{
; 593  : 		m_pGameMatchOption->cbDistributeRule|=DISTRIBUTE_SAME_ADDRESS;

  000f0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f9	0f b6 51 75	 movzx	 edx, BYTE PTR [ecx+117]
  000fd	83 ca 04	 or	 edx, 4
  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00109	88 51 75	 mov	 BYTE PTR [ecx+117], dl

; 594  : 	}
; 595  : 	else

  0010c	eb 1c		 jmp	 SHORT $LN5@SaveInputI
$LN4@SaveInputI:

; 596  : 	{
; 597  : 		m_pGameMatchOption->cbDistributeRule&=~DISTRIBUTE_SAME_ADDRESS;

  0010e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00111	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00117	0f b6 51 75	 movzx	 edx, BYTE PTR [ecx+117]
  0011b	83 e2 fb	 and	 edx, -5			; fffffffbH
  0011e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00121	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00127	88 51 75	 mov	 BYTE PTR [ecx+117], dl
$LN5@SaveInputI:

; 598  : 	}
; 599  : 
; 600  : 	return true;

  0012a	b0 01		 mov	 al, 1

; 601  : }

  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c3		 ret	 0
?SaveInputInfo@CDlgMatchDistribute@@MAE_NXZ ENDP	; CDlgMatchDistribute::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchDistribute@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchDistribute@@MAEHXZ PROC		; CDlgMatchDistribute::OnInitDialog, COMDAT
; _this$ = ecx

; 515  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 516  : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 517  : 
; 518  : 	//设置控件
; 519  : 	((CEdit *)GetDlgItem(IDC_DISTRIBUTE_MINCOUNT))->LimitText(3);

  00014	6a 03		 push	 3
  00016	68 58 23 00 00	 push	 9048			; 00002358H
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 520  : 	((CEdit *)GetDlgItem(IDC_DISTRIBUTE_TIMESPACE))->LimitText(3);

  0002a	6a 03		 push	 3
  0002c	68 59 23 00 00	 push	 9049			; 00002359H
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 521  : 	((CEdit *)GetDlgItem(IDC_PARTAKE_MIN_GAMEUSER))->LimitText(2);

  00040	6a 02		 push	 2
  00042	68 37 23 00 00	 push	 9015			; 00002337H
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0004f	8b c8		 mov	 ecx, eax
  00051	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 522  : 	((CEdit *)GetDlgItem(IDC_PARTAKE_MAX_GAMEUSER))->LimitText(2);	

  00056	6a 02		 push	 2
  00058	68 38 23 00 00	 push	 9016			; 00002338H
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 523  : 
; 524  : 	//同桌选项
; 525  : 	if ((m_pGameMatchOption->cbDistributeRule&DISTRIBUTE_LAST_TABLE)!=0)

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00075	0f b6 51 75	 movzx	 edx, BYTE PTR [ecx+117]
  00079	83 e2 02	 and	 edx, 2
  0007c	74 18		 je	 SHORT $LN2@OnInitDial

; 526  : 	{
; 527  : 		((CButton *)GetDlgItem(IDC_ALLOW_LAST_SAMETABLE))->SetCheck(TRUE);

  0007e	6a 01		 push	 1
  00080	68 2a 23 00 00	 push	 9002			; 0000232aH
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 528  : 	}
; 529  : 	else

  00094	eb 16		 jmp	 SHORT $LN3@OnInitDial
$LN2@OnInitDial:

; 530  : 	{
; 531  : 		((CButton *)GetDlgItem(IDC_ALLOW_LAST_SAMETABLE))->SetCheck(FALSE);

  00096	6a 00		 push	 0
  00098	68 2a 23 00 00	 push	 9002			; 0000232aH
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN3@OnInitDial:

; 532  : 	}
; 533  : 
; 534  : 	//地址选项
; 535  : 	if ((m_pGameMatchOption->cbDistributeRule&DISTRIBUTE_SAME_ADDRESS)!=0)

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b5	0f b6 51 75	 movzx	 edx, BYTE PTR [ecx+117]
  000b9	83 e2 04	 and	 edx, 4
  000bc	74 18		 je	 SHORT $LN4@OnInitDial

; 536  : 	{
; 537  : 		((CButton *)GetDlgItem(IDC_ALLOW_SAME_ADDRESS))->SetCheck(TRUE);

  000be	6a 01		 push	 1
  000c0	68 2b 23 00 00	 push	 9003			; 0000232bH
  000c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 538  : 	}
; 539  : 	else

  000d4	eb 16		 jmp	 SHORT $LN5@OnInitDial
$LN4@OnInitDial:

; 540  : 	{
; 541  : 		((CButton *)GetDlgItem(IDC_ALLOW_SAME_ADDRESS))->SetCheck(FALSE);

  000d6	6a 00		 push	 0
  000d8	68 2b 23 00 00	 push	 9003			; 0000232bH
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000e5	8b c8		 mov	 ecx, eax
  000e7	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck
$LN5@OnInitDial:

; 542  : 	}
; 543  : 
; 544  : 	//配桌人数
; 545  : 	if (m_pGameMatchOption->wMinDistributeUser!=0)

  000ec	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ef	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f5	0f b7 51 76	 movzx	 edx, WORD PTR [ecx+118]
  000f9	85 d2		 test	 edx, edx
  000fb	74 1d		 je	 SHORT $LN6@OnInitDial

; 546  : 	{
; 547  : 		SetDlgItemInt(IDC_DISTRIBUTE_MINCOUNT,m_pGameMatchOption->wMinDistributeUser);

  000fd	6a 01		 push	 1
  000ff	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00102	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00108	0f b7 51 76	 movzx	 edx, WORD PTR [ecx+118]
  0010c	52		 push	 edx
  0010d	68 58 23 00 00	 push	 9048			; 00002358H
  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN6@OnInitDial:

; 548  : 	}
; 549  : 
; 550  : 	//分组间隔
; 551  : 	if (m_pGameMatchOption->wDistributeTimeSpace!=0)

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00123	0f b7 51 78	 movzx	 edx, WORD PTR [ecx+120]
  00127	85 d2		 test	 edx, edx
  00129	74 1d		 je	 SHORT $LN7@OnInitDial

; 552  : 	{
; 553  : 		SetDlgItemInt(IDC_DISTRIBUTE_TIMESPACE,m_pGameMatchOption->wDistributeTimeSpace);

  0012b	6a 01		 push	 1
  0012d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00130	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00136	0f b7 51 78	 movzx	 edx, WORD PTR [ecx+120]
  0013a	52		 push	 edx
  0013b	68 59 23 00 00	 push	 9049			; 00002359H
  00140	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN7@OnInitDial:

; 554  : 	}
; 555  : 
; 556  : 	//最小人数
; 557  : 	if (m_pGameMatchOption->wMinPartakeGameUser!=0)

  00148	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0014b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00151	0f b7 51 7a	 movzx	 edx, WORD PTR [ecx+122]
  00155	85 d2		 test	 edx, edx
  00157	74 1d		 je	 SHORT $LN8@OnInitDial

; 558  : 	{
; 559  : 		SetDlgItemInt(IDC_PARTAKE_MIN_GAMEUSER,m_pGameMatchOption->wMinPartakeGameUser);

  00159	6a 01		 push	 1
  0015b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00164	0f b7 51 7a	 movzx	 edx, WORD PTR [ecx+122]
  00168	52		 push	 edx
  00169	68 37 23 00 00	 push	 9015			; 00002337H
  0016e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN8@OnInitDial:

; 560  : 	}
; 561  : 
; 562  : 	//最大人数
; 563  : 	if (m_pGameMatchOption->wMaxPartakeGameUser!=0)

  00176	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00179	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0017f	0f b7 51 7c	 movzx	 edx, WORD PTR [ecx+124]
  00183	85 d2		 test	 edx, edx
  00185	74 1d		 je	 SHORT $LN9@OnInitDial

; 564  : 	{
; 565  : 		SetDlgItemInt(IDC_PARTAKE_MAX_GAMEUSER,m_pGameMatchOption->wMaxPartakeGameUser);

  00187	6a 01		 push	 1
  00189	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018c	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00192	0f b7 51 7c	 movzx	 edx, WORD PTR [ecx+124]
  00196	52		 push	 edx
  00197	68 38 23 00 00	 push	 9016			; 00002338H
  0019c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019f	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN9@OnInitDial:

; 566  : 	}
; 567  : 
; 568  : 	return FALSE;

  001a4	33 c0		 xor	 eax, eax

; 569  : }

  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi
  001a8	5b		 pop	 ebx
  001a9	8b e5		 mov	 esp, ebp
  001ab	5d		 pop	 ebp
  001ac	c3		 ret	 0
?OnInitDialog@CDlgMatchDistribute@@MAEHXZ ENDP		; CDlgMatchDistribute::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchDistribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchDistribute@@UAE@XZ PROC			; CDlgMatchDistribute::~CDlgMatchDistribute, COMDAT
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchDistribute@@6B@

; 511  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchDistribute@@UAE@XZ ENDP			; CDlgMatchDistribute::~CDlgMatchDistribute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchDistribute@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgMatchDistribute@@QAE@XZ PROC			; CDlgMatchDistribute::CDlgMatchDistribute, COMDAT
; _this$ = ecx

; 505  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 504  : CDlgMatchDistribute::CDlgMatchDistribute() : CDlgMatchItem(IDD_MATCH_DISTRIBUTE)

  0000c	68 35 23 00 00	 push	 9013			; 00002335H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem

; 505  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchDistribute@@6B@

; 506  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgMatchDistribute@@QAE@XZ ENDP			; CDlgMatchDistribute::CDlgMatchDistribute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchSignup2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchSignup2@@UAEPAXI@Z PROC			; CDlgMatchSignup2::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchSignup2@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchSignup2@@UAE@XZ ; CDlgMatchSignup2::~CDlgMatchSignup2
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchSignup2@@UAE@XZ ; CDlgMatchSignup2::~CDlgMatchSignup2
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchSignup2@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchSignup2@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchSignup2@@UAEPAXI@Z ENDP			; CDlgMatchSignup2::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchSignup2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchSignup2@@UAEPAXI@Z PROC			; CDlgMatchSignup2::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchSignup2@@UAE@XZ ; CDlgMatchSignup2::~CDlgMatchSignup2
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchSignup2@@UAEPAXI@Z ENDP			; CDlgMatchSignup2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchSignup2@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchSignup2@@MAEXHH@Z PROC		; CDlgMatchSignup2::RectifyControl, COMDAT
; _this$ = ecx

; 497  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 498  : 	return;
; 499  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchSignup2@@MAEXHH@Z ENDP		; CDlgMatchSignup2::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchSignup2@@MAE_NXZ
_TEXT	SEGMENT
_nCheckedID$1 = -8					; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchSignup2@@MAE_NXZ PROC		; CDlgMatchSignup2::SaveInputInfo, COMDAT
; _this$ = ecx

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 457  : 	//用户经验
; 458  : 	if (IsDlgButtonChecked(IDC_CHECK_EXPERIENCE))

  0000c	68 32 23 00 00	 push	 9010			; 00002332H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00019	85 c0		 test	 eax, eax
  0001b	74 3b		 je	 SHORT $LN2@SaveInputI

; 459  : 	{
; 460  : 		m_pGameMatchOption->cbJoinCondition|=MATCH_JOINCD_EXPERIENCE;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00026	0f b6 51 41	 movzx	 edx, BYTE PTR [ecx+65]
  0002a	83 ca 02	 or	 edx, 2
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00036	88 51 41	 mov	 BYTE PTR [ecx+65], dl

; 461  : 
; 462  : 		//设置经验
; 463  : 		m_pGameMatchOption->dwExperience=GetDlgItemInt(IDC_EDIT_EXPERIENCE);

  00039	6a 01		 push	 1
  0003b	6a 00		 push	 0
  0003d	68 69 23 00 00	 push	 9065			; 00002369H
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00053	89 42 44	 mov	 DWORD PTR [edx+68], eax

; 464  : 	}
; 465  : 	else

  00056	eb 1c		 jmp	 SHORT $LN3@SaveInputI
$LN2@SaveInputI:

; 466  : 	{
; 467  : 		m_pGameMatchOption->cbJoinCondition&=~MATCH_JOINCD_EXPERIENCE;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00061	0f b6 51 41	 movzx	 edx, BYTE PTR [ecx+65]
  00065	83 e2 fd	 and	 edx, -3			; fffffffdH
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00071	88 51 41	 mov	 BYTE PTR [ecx+65], dl
$LN3@SaveInputI:

; 468  : 	}
; 469  : 
; 470  : 	//会员等级
; 471  : 	if (IsDlgButtonChecked(IDC_CHECK_MEMBER_ORDER))

  00074	68 2c 23 00 00	 push	 9004			; 0000232cH
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00081	85 c0		 test	 eax, eax
  00083	74 47		 je	 SHORT $LN4@SaveInputI

; 472  : 	{
; 473  : 		m_pGameMatchOption->cbJoinCondition|=MATCH_JOINCD_MEMBER_ORDER;		

  00085	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00088	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0008e	0f b6 51 41	 movzx	 edx, BYTE PTR [ecx+65]
  00092	83 ca 01	 or	 edx, 1
  00095	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00098	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0009e	88 51 41	 mov	 BYTE PTR [ecx+65], dl

; 474  : 
; 475  : 		//设置等级	
; 476  : 		UINT nCheckedID=GetCheckedRadioButton(IDC_RADIO_NOAMAL,IDC_RADIO_MEMBER_V7);

  000a1	68 3e 23 00 00	 push	 9022			; 0000233eH
  000a6	68 37 23 00 00	 push	 9015			; 00002337H
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	e8 00 00 00 00	 call	 ?GetCheckedRadioButton@CWnd@@QBEHHH@Z ; CWnd::GetCheckedRadioButton
  000b3	89 45 f8	 mov	 DWORD PTR _nCheckedID$1[ebp], eax

; 477  : 		m_pGameMatchOption->cbMemberOrder=nCheckedID-IDC_RADIO_NOAMAL;

  000b6	8b 45 f8	 mov	 eax, DWORD PTR _nCheckedID$1[ebp]
  000b9	2d 37 23 00 00	 sub	 eax, 9015		; 00002337H
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  000c7	88 42 42	 mov	 BYTE PTR [edx+66], al

; 478  : 	}
; 479  : 	else

  000ca	eb 1c		 jmp	 SHORT $LN5@SaveInputI
$LN4@SaveInputI:

; 480  : 	{
; 481  : 		m_pGameMatchOption->cbJoinCondition&=~MATCH_JOINCD_MEMBER_ORDER;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000d5	0f b6 51 41	 movzx	 edx, BYTE PTR [ecx+65]
  000d9	83 e2 fe	 and	 edx, -2			; fffffffeH
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000e5	88 51 41	 mov	 BYTE PTR [ecx+65], dl
$LN5@SaveInputI:

; 482  : 	}	
; 483  : 
; 484  : 	//报名方式
; 485  : 	if (m_pGameMatchOption->cbSignupMode==0)

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f1	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  000f5	85 d2		 test	 edx, edx
  000f7	75 12		 jne	 SHORT $LN6@SaveInputI

; 486  : 	{
; 487  : 		AfxMessageBox(TEXT("报名方式不能为空，请重新选择！"));

  000f9	6a 00		 push	 0
  000fb	6a 00		 push	 0
  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@BGMCEKFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T?q?$KD?$KB@
  00102	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 488  : 
; 489  : 		return false;

  00107	32 c0		 xor	 al, al
  00109	eb 02		 jmp	 SHORT $LN1@SaveInputI
$LN6@SaveInputI:

; 490  : 	}
; 491  : 
; 492  : 	return true;

  0010b	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 493  : }

  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	5b		 pop	 ebx
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c3		 ret	 0
?SaveInputInfo@CDlgMatchSignup2@@MAE_NXZ ENDP		; CDlgMatchSignup2::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchSignup2@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchSignup2@@MAEHXZ PROC		; CDlgMatchSignup2::OnInitDialog, COMDAT
; _this$ = ecx

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 426  : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 427  : 
; 428  : 	//用户经验
; 429  : 	if (m_pGameMatchOption->cbJoinCondition&MATCH_JOINCD_EXPERIENCE)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0001d	0f b6 51 41	 movzx	 edx, BYTE PTR [ecx+65]
  00021	83 e2 02	 and	 edx, 2
  00024	74 32		 je	 SHORT $LN2@OnInitDial

; 430  : 	{
; 431  : 		//设置选择
; 432  : 		((CButton *)GetDlgItem(IDC_CHECK_EXPERIENCE))->SetCheck(TRUE);

  00026	6a 01		 push	 1
  00028	68 32 23 00 00	 push	 9010			; 00002332H
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 433  : 
; 434  : 		//设置经验
; 435  : 		SetDlgItemInt(IDC_EDIT_EXPERIENCE,m_pGameMatchOption->dwExperience);

  0003c	6a 01		 push	 1
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00047	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0004a	52		 push	 edx
  0004b	68 69 23 00 00	 push	 9065			; 00002369H
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt
$LN2@OnInitDial:

; 436  : 	}
; 437  : 
; 438  :     //会员等级
; 439  : 	if (m_pGameMatchOption->cbJoinCondition&MATCH_JOINCD_MEMBER_ORDER)

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00061	0f b6 51 41	 movzx	 edx, BYTE PTR [ecx+65]
  00065	83 e2 01	 and	 edx, 1
  00068	74 3e		 je	 SHORT $LN3@OnInitDial

; 440  : 	{
; 441  : 		//设置空控件
; 442  : 		((CButton *)GetDlgItem(IDC_CHECK_MEMBER_ORDER))->SetCheck(TRUE);

  0006a	6a 01		 push	 1
  0006c	68 2c 23 00 00	 push	 9004			; 0000232cH
  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 443  : 		CheckRadioButton(IDC_RADIO_NOAMAL,IDC_RADIO_MEMBER_V7,IDC_RADIO_NOAMAL+m_pGameMatchOption->cbMemberOrder);		

  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00089	0f b6 51 42	 movzx	 edx, BYTE PTR [ecx+66]
  0008d	81 c2 37 23 00
	00		 add	 edx, 9015		; 00002337H
  00093	52		 push	 edx
  00094	68 3e 23 00 00	 push	 9022			; 0000233eH
  00099	68 37 23 00 00	 push	 9015			; 00002337H
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton

; 444  : 	}
; 445  : 	else

  000a6	eb 17		 jmp	 SHORT $LN4@OnInitDial
$LN3@OnInitDial:

; 446  : 	{
; 447  : 		//默认设置
; 448  : 		CheckRadioButton(IDC_RADIO_NOAMAL,IDC_RADIO_MEMBER_V7,IDC_RADIO_NOAMAL);		

  000a8	68 37 23 00 00	 push	 9015			; 00002337H
  000ad	68 3e 23 00 00	 push	 9022			; 0000233eH
  000b2	68 37 23 00 00	 push	 9015			; 00002337H
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN4@OnInitDial:

; 449  : 	}	
; 450  : 
; 451  : 	return FALSE;

  000bf	33 c0		 xor	 eax, eax

; 452  : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
?OnInitDialog@CDlgMatchSignup2@@MAEHXZ ENDP		; CDlgMatchSignup2::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchSignup2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchSignup2@@UAE@XZ PROC			; CDlgMatchSignup2::~CDlgMatchSignup2, COMDAT
; _this$ = ecx

; 420  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchSignup2@@6B@

; 421  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchSignup2@@UAE@XZ ENDP			; CDlgMatchSignup2::~CDlgMatchSignup2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchSignup2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgMatchSignup2@@QAE@XZ PROC			; CDlgMatchSignup2::CDlgMatchSignup2, COMDAT
; _this$ = ecx

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : CDlgMatchSignup2::CDlgMatchSignup2() : CDlgMatchItem(IDD_MATCH_SIGNUP2)

  0000c	68 37 23 00 00	 push	 9015			; 00002337H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem

; 415  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchSignup2@@6B@

; 416  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgMatchSignup2@@QAE@XZ ENDP			; CDlgMatchSignup2::CDlgMatchSignup2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchSignup1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchSignup1@@UAEPAXI@Z PROC			; CDlgMatchSignup1::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchSignup1@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchSignup1@@UAE@XZ ; CDlgMatchSignup1::~CDlgMatchSignup1
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchSignup1@@UAE@XZ ; CDlgMatchSignup1::~CDlgMatchSignup1
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchSignup1@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchSignup1@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchSignup1@@UAEPAXI@Z ENDP			; CDlgMatchSignup1::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchSignup1@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchSignup1@@UAEPAXI@Z PROC			; CDlgMatchSignup1::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchSignup1@@UAE@XZ ; CDlgMatchSignup1::~CDlgMatchSignup1
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchSignup1@@UAEPAXI@Z ENDP			; CDlgMatchSignup1::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMessageMap@CDlgMatchSignup1@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgMatchSignup1@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchSignup1::GetMessageMap, COMDAT
; _this$ = ecx

; 25   : BEGIN_MESSAGE_MAP(CDlgMatchSignup1, CDlgMatchItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchSignup1::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgMatchSignup1@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchSignup1::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchSignup1::GetThisMessageMap, COMDAT

; 25   : BEGIN_MESSAGE_MAP(CDlgMatchSignup1, CDlgMatchItem)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 26   : 	ON_CBN_SELCHANGE(IDC_COMBO_FROM_MATCH, OnCbnSelchangeComboFromMatch)
; 27   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgMatchSignup1@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchSignup1::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnCbnSelchangeComboFromMatch@CDlgMatchSignup1@@IAEXXZ
_TEXT	SEGMENT
_pGameMatchOption$1 = -12				; size = 4
_pComboBox$ = -8					; size = 4
_this$ = -4						; size = 4
?OnCbnSelchangeComboFromMatch@CDlgMatchSignup1@@IAEXXZ PROC ; CDlgMatchSignup1::OnCbnSelchangeComboFromMatch, COMDAT
; _this$ = ecx

; 371  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 372  : 	//获取对象
; 373  : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_FROM_MATCH);

  0000c	68 64 23 00 00	 push	 9060			; 00002364H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 374  : 	if (pComboBox!=NULL && pComboBox->GetCurSel()!=LB_ERR)

  0001c	83 7d f8 00	 cmp	 DWORD PTR _pComboBox$[ebp], 0
  00020	0f 84 46 01 00
	00		 je	 $LN1@OnCbnSelch
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00029	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0002e	83 f8 ff	 cmp	 eax, -1
  00031	0f 84 35 01 00
	00		 je	 $LN1@OnCbnSelch

; 375  : 	{
; 376  : 		tagGameMatchOption * pGameMatchOption=(tagGameMatchOption *)pComboBox->GetItemDataPtr(pComboBox->GetCurSel());

  00037	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  0003a	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  0003f	50		 push	 eax
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  00043	e8 00 00 00 00	 call	 ?GetItemDataPtr@CComboBox@@QBEPAXH@Z ; CComboBox::GetItemDataPtr
  00048	89 45 f4	 mov	 DWORD PTR _pGameMatchOption$1[ebp], eax

; 377  : 
; 378  : 		//设置控件
; 379  : 		GetDlgItem(IDC_DATE_MATCH_START)->EnableWindow(TRUE);

  0004b	6a 01		 push	 1
  0004d	68 65 23 00 00	 push	 9061			; 00002365H
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0005a	8b c8		 mov	 ecx, eax
  0005c	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 380  : 		GetDlgItem(IDC_EDIT_SINGLE_RANK)->EnableWindow(TRUE);

  00061	6a 01		 push	 1
  00063	68 67 23 00 00	 push	 9063			; 00002367H
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 381  : 		GetDlgItem(IDC_RADIO_SINGLE_TURN)->EnableWindow(TRUE);		

  00077	6a 01		 push	 1
  00079	68 35 23 00 00	 push	 9013			; 00002335H
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 382  : 		GetDlgItem(IDC_EDIT_TOTAL_RANK)->EnableWindow(TRUE);

  0008d	6a 01		 push	 1
  0008f	68 68 23 00 00	 push	 9064			; 00002368H
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 383  : 		GetDlgItem(IDC_RADIO_TOTAL_RANKING)->EnableWindow(TRUE);				

  000a3	6a 01		 push	 1
  000a5	68 36 23 00 00	 push	 9014			; 00002336H
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 384  : 
; 385  : 		//即时赛类型
; 386  : 		if (pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  000b9	8b 45 f4	 mov	 eax, DWORD PTR _pGameMatchOption$1[ebp]
  000bc	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  000c0	83 f9 01	 cmp	 ecx, 1
  000c3	75 43		 jne	 SHORT $LN3@OnCbnSelch

; 387  : 		{
; 388  : 			//禁用控件
; 389  : 			GetDlgItem(IDC_EDIT_TOTAL_RANK)->EnableWindow(FALSE);

  000c5	6a 00		 push	 0
  000c7	68 68 23 00 00	 push	 9064			; 00002368H
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 390  : 			GetDlgItem(IDC_RADIO_TOTAL_RANKING)->EnableWindow(FALSE);			

  000db	6a 00		 push	 0
  000dd	68 36 23 00 00	 push	 9014			; 00002336H
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000ea	8b c8		 mov	 ecx, eax
  000ec	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 391  : 
; 392  : 			//设置选择
; 393  : 			CheckRadioButton(IDC_RADIO_SINGLE_TURN,IDC_RADIO_TOTAL_RANKING,IDC_RADIO_SINGLE_TURN);

  000f1	68 35 23 00 00	 push	 9013			; 00002335H
  000f6	68 36 23 00 00	 push	 9014			; 00002336H
  000fb	68 35 23 00 00	 push	 9013			; 00002335H
  00100	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN3@OnCbnSelch:

; 394  : 		}
; 395  : 
; 396  : 		//定时赛类型
; 397  : 		if (pGameMatchOption->cbMatchType==MATCH_TYPE_LOCKTIME)

  00108	8b 45 f4	 mov	 eax, DWORD PTR _pGameMatchOption$1[ebp]
  0010b	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  0010f	85 c9		 test	 ecx, ecx
  00111	75 59		 jne	 SHORT $LN1@OnCbnSelch

; 398  : 		{
; 399  : 			//禁用控件
; 400  : 			GetDlgItem(IDC_DATE_MATCH_START)->EnableWindow(FALSE);

  00113	6a 00		 push	 0
  00115	68 65 23 00 00	 push	 9061			; 00002365H
  0011a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00122	8b c8		 mov	 ecx, eax
  00124	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 401  : 			GetDlgItem(IDC_RADIO_SINGLE_TURN)->EnableWindow(FALSE);

  00129	6a 00		 push	 0
  0012b	68 35 23 00 00	 push	 9013			; 00002335H
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00138	8b c8		 mov	 ecx, eax
  0013a	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 402  : 			GetDlgItem(IDC_EDIT_SINGLE_RANK)->EnableWindow(FALSE);

  0013f	6a 00		 push	 0
  00141	68 67 23 00 00	 push	 9063			; 00002367H
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0014e	8b c8		 mov	 ecx, eax
  00150	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 403  : 
; 404  : 			//设置选择
; 405  : 			CheckRadioButton(IDC_RADIO_SINGLE_TURN,IDC_RADIO_TOTAL_RANKING,IDC_RADIO_TOTAL_RANKING);

  00155	68 36 23 00 00	 push	 9014			; 00002336H
  0015a	68 36 23 00 00	 push	 9014			; 00002336H
  0015f	68 35 23 00 00	 push	 9013			; 00002335H
  00164	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN1@OnCbnSelch:

; 406  : 		}		
; 407  : 	}	
; 408  : }

  0016c	5f		 pop	 edi
  0016d	5e		 pop	 esi
  0016e	5b		 pop	 ebx
  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c3		 ret	 0
?OnCbnSelchangeComboFromMatch@CDlgMatchSignup1@@IAEXXZ ENDP ; CDlgMatchSignup1::OnCbnSelchangeComboFromMatch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnEventMatchTypeChanged@CDlgMatchSignup1@@UAEXE@Z
_TEXT	SEGMENT
tv86 = -76						; size = 4
_pCheckButton$ = -8					; size = 4
_this$ = -4						; size = 4
_cbMatchType$ = 8					; size = 1
?OnEventMatchTypeChanged@CDlgMatchSignup1@@UAEXE@Z PROC	; CDlgMatchSignup1::OnEventMatchTypeChanged, COMDAT
; _this$ = ecx

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 360  : 	//设置控件
; 361  : 	CButton * pCheckButton=(CButton *)GetDlgItem(IDC_CHECK_MATCH_USER);

  0000c	68 31 23 00 00	 push	 9009			; 00002331H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00019	89 45 f8	 mov	 DWORD PTR _pCheckButton$[ebp], eax

; 362  : 	if (pCheckButton!=NULL)

  0001c	83 7d f8 00	 cmp	 DWORD PTR _pCheckButton$[ebp], 0
  00020	74 2e		 je	 SHORT $LN1@OnEventMat

; 363  : 	{
; 364  : 		pCheckButton->SetCheck(FALSE);

  00022	6a 00		 push	 0
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _pCheckButton$[ebp]
  00027	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 365  : 		pCheckButton->EnableWindow(cbMatchType==MATCH_TYPE_LOCKTIME);

  0002c	0f b6 45 08	 movzx	 eax, BYTE PTR _cbMatchType$[ebp]
  00030	85 c0		 test	 eax, eax
  00032	75 09		 jne	 SHORT $LN4@OnEventMat
  00034	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv86[ebp], 1
  0003b	eb 07		 jmp	 SHORT $LN5@OnEventMat
$LN4@OnEventMat:
  0003d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN5@OnEventMat:
  00044	8b 4d b4	 mov	 ecx, DWORD PTR tv86[ebp]
  00047	51		 push	 ecx
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _pCheckButton$[ebp]
  0004b	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN1@OnEventMat:

; 366  : 	}	
; 367  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?OnEventMatchTypeChanged@CDlgMatchSignup1@@UAEXE@Z ENDP	; CDlgMatchSignup1::OnEventMatchTypeChanged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?RectifyControl@CDlgMatchSignup1@@MAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nWidth$ = 8						; size = 4
_nHeight$ = 12						; size = 4
?RectifyControl@CDlgMatchSignup1@@MAEXHH@Z PROC		; CDlgMatchSignup1::RectifyControl, COMDAT
; _this$ = ecx

; 353  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 354  : 	return;
; 355  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?RectifyControl@CDlgMatchSignup1@@MAEXHH@Z ENDP		; CDlgMatchSignup1::RectifyControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SaveInputInfo@CDlgMatchSignup1@@MAE_NXZ
_TEXT	SEGMENT
_pGameMatchOption$1 = -24				; size = 4
_pStartDate$2 = -20					; size = 4
_pEndtDate$3 = -16					; size = 4
_pGameMatchOption$4 = -12				; size = 4
_pComboBox$5 = -8					; size = 4
_this$ = -4						; size = 4
?SaveInputInfo@CDlgMatchSignup1@@MAE_NXZ PROC		; CDlgMatchSignup1::SaveInputInfo, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  : 	//扣除金币
; 237  : 	if (IsDlgButtonChecked(IDC_CHECK_SIGNUP_FEE))

  0000c	68 33 23 00 00	 push	 9011			; 00002333H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00019	85 c0		 test	 eax, eax
  0001b	0f 84 b8 00 00
	00		 je	 $LN2@SaveInputI

; 238  : 	{
; 239  : 		//费用额度
; 240  : 		m_pGameMatchOption->cbSignupMode|=SIGNUP_MODE_SIGNUP_FEE;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0002a	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  0002e	83 ca 01	 or	 edx, 1
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0003a	88 51 40	 mov	 BYTE PTR [ecx+64], dl

; 241  : 		m_pGameMatchOption->lSignupFee=GetDlgItemInt(IDC_EDIT_SIGNUP_FEE);

  0003d	6a 01		 push	 1
  0003f	6a 00		 push	 0
  00041	68 57 23 00 00	 push	 9047			; 00002357H
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  0004e	33 c9		 xor	 ecx, ecx
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 92 b0 00 00
	00		 mov	 edx, DWORD PTR [edx+176]
  00059	89 42 38	 mov	 DWORD PTR [edx+56], eax
  0005c	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 242  : 
; 243  : 		//缴费区域
; 244  : 		if (IsDlgButtonChecked(IDC_RADIO_SERVER)) m_pGameMatchOption->cbDeductArea=DEDUCT_AREA_SERVER;

  0005f	68 37 23 00 00	 push	 9015			; 00002337H
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  0006c	85 c0		 test	 eax, eax
  0006e	74 0d		 je	 SHORT $LN4@SaveInputI
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00079	c6 41 33 00	 mov	 BYTE PTR [ecx+51], 0
$LN4@SaveInputI:

; 245  : 		if (IsDlgButtonChecked(IDC_RADIO_WEBSITE)) m_pGameMatchOption->cbDeductArea=DEDUCT_AREA_WEBSITE;

  0007d	68 38 23 00 00	 push	 9016			; 00002338H
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  0008a	85 c0		 test	 eax, eax
  0008c	74 0d		 je	 SHORT $LN5@SaveInputI
  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00097	c6 41 33 01	 mov	 BYTE PTR [ecx+51], 1
$LN5@SaveInputI:

; 246  : 
; 247  : 		//费用类型
; 248  : 		if (IsDlgButtonChecked(IDC_RADIO_GOLD)) m_pGameMatchOption->cbFeeType=FEE_TYPE_GOLD;

  0009b	68 3b 23 00 00	 push	 9019			; 0000233bH
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  000a8	85 c0		 test	 eax, eax
  000aa	74 0d		 je	 SHORT $LN6@SaveInputI
  000ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000b5	c6 41 32 00	 mov	 BYTE PTR [ecx+50], 0
$LN6@SaveInputI:

; 249  : 		if (IsDlgButtonChecked(IDC_RADIO_MEDAL)) m_pGameMatchOption->cbFeeType=FEE_TYPE_MEDAL;

  000b9	68 3c 23 00 00	 push	 9020			; 0000233cH
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  000c6	85 c0		 test	 eax, eax
  000c8	74 0d		 je	 SHORT $LN7@SaveInputI
  000ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000d3	c6 41 32 01	 mov	 BYTE PTR [ecx+50], 1
$LN7@SaveInputI:

; 250  : 	}
; 251  : 	else

  000d7	eb 1c		 jmp	 SHORT $LN3@SaveInputI
$LN2@SaveInputI:

; 252  : 	{
; 253  : 		m_pGameMatchOption->cbSignupMode&=~SIGNUP_MODE_SIGNUP_FEE;

  000d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dc	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000e2	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  000e6	83 e2 fe	 and	 edx, -2			; fffffffeH
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000f2	88 51 40	 mov	 BYTE PTR [ecx+64], dl
$LN3@SaveInputI:

; 254  : 	}
; 255  : 
; 256  : 	//比赛用户
; 257  : 	if (IsDlgButtonChecked(IDC_CHECK_MATCH_USER))

  000f5	68 31 23 00 00	 push	 9009			; 00002331H
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00102	85 c0		 test	 eax, eax
  00104	0f 84 2e 01 00
	00		 je	 $LN8@SaveInputI

; 258  : 	{
; 259  : 		m_pGameMatchOption->cbSignupMode|=SIGNUP_MODE_MATCH_USER;

  0010a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00113	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00117	83 ca 02	 or	 edx, 2
  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00123	88 51 40	 mov	 BYTE PTR [ecx+64], dl

; 260  : 
; 261  : 		//获取控件
; 262  : 		CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_FROM_MATCH);

  00126	68 64 23 00 00	 push	 9060			; 00002364H
  0012b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00133	89 45 f8	 mov	 DWORD PTR _pComboBox$5[ebp], eax

; 263  : 		if (pComboBox!=NULL && pComboBox->GetCurSel()!=LB_ERR)

  00136	83 7d f8 00	 cmp	 DWORD PTR _pComboBox$5[ebp], 0
  0013a	74 38		 je	 SHORT $LN10@SaveInputI
  0013c	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$5[ebp]
  0013f	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00144	83 f8 ff	 cmp	 eax, -1
  00147	74 2b		 je	 SHORT $LN10@SaveInputI

; 264  : 		{
; 265  : 			tagGameMatchOption * pGameMatchOption=(tagGameMatchOption *)pComboBox->GetItemData(pComboBox->GetCurSel());

  00149	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$5[ebp]
  0014c	e8 00 00 00 00	 call	 ?GetCurSel@CComboBox@@QBEHXZ ; CComboBox::GetCurSel
  00151	50		 push	 eax
  00152	8b 4d f8	 mov	 ecx, DWORD PTR _pComboBox$5[ebp]
  00155	e8 00 00 00 00	 call	 ?GetItemData@CComboBox@@QBEKH@Z ; CComboBox::GetItemData
  0015a	89 45 f4	 mov	 DWORD PTR _pGameMatchOption$4[ebp], eax

; 266  : 			if (pGameMatchOption!=NULL) m_pGameMatchOption->dwFromMatchID=pGameMatchOption->dwMatchID;

  0015d	83 7d f4 00	 cmp	 DWORD PTR _pGameMatchOption$4[ebp], 0
  00161	74 11		 je	 SHORT $LN10@SaveInputI
  00163	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00166	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0016c	8b 55 f4	 mov	 edx, DWORD PTR _pGameMatchOption$4[ebp]
  0016f	8b 02		 mov	 eax, DWORD PTR [edx]
  00171	89 41 48	 mov	 DWORD PTR [ecx+72], eax
$LN10@SaveInputI:

; 267  : 		}
; 268  : 
; 269  : 		//结束日期
; 270  : 		CDateTimeCtrl * pEndtDate=(CDateTimeCtrl *)GetDlgItem(IDC_DATE_MATCH_END);

  00174	68 66 23 00 00	 push	 9062			; 00002366H
  00179	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017c	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00181	89 45 f0	 mov	 DWORD PTR _pEndtDate$3[ebp], eax

; 271  : 		pEndtDate->GetTime(&m_pGameMatchOption->MatchEndDate);

  00184	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00187	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0018d	83 c1 50	 add	 ecx, 80			; 00000050H
  00190	51		 push	 ecx
  00191	8b 4d f0	 mov	 ecx, DWORD PTR _pEndtDate$3[ebp]
  00194	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::GetTime

; 272  : 
; 273  : 		//开始日期 
; 274  : 		CDateTimeCtrl * pStartDate=(CDateTimeCtrl *)GetDlgItem(IDC_DATE_MATCH_START);

  00199	68 65 23 00 00	 push	 9061			; 00002365H
  0019e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  001a6	89 45 ec	 mov	 DWORD PTR _pStartDate$2[ebp], eax

; 275  : 		pStartDate->GetTime(&m_pGameMatchOption->MatchStartDate);

  001a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001ac	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001b2	83 c1 60	 add	 ecx, 96			; 00000060H
  001b5	51		 push	 ecx
  001b6	8b 4d ec	 mov	 ecx, DWORD PTR _pStartDate$2[ebp]
  001b9	e8 00 00 00 00	 call	 ?GetTime@CDateTimeCtrl@@QBEKPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::GetTime

; 276  : 
; 277  : 		//单轮排名
; 278  : 		if (IsDlgButtonChecked(IDC_RADIO_SINGLE_TURN))

  001be	68 35 23 00 00	 push	 9013			; 00002335H
  001c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c6	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  001cb	85 c0		 test	 eax, eax
  001cd	74 2b		 je	 SHORT $LN12@SaveInputI

; 279  : 		{			
; 280  : 			m_pGameMatchOption->cbFilterType=FILTER_TYPE_SINGLE_TURN;

  001cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d2	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001d8	c6 41 4c 00	 mov	 BYTE PTR [ecx+76], 0

; 281  : 			m_pGameMatchOption->wMaxRankID=GetDlgItemInt(IDC_EDIT_SINGLE_RANK);

  001dc	6a 01		 push	 1
  001de	6a 00		 push	 0
  001e0	68 67 23 00 00	 push	 9063			; 00002367H
  001e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e8	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  001ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f0	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  001f6	66 89 42 4e	 mov	 WORD PTR [edx+78], ax
$LN12@SaveInputI:

; 282  : 		}
; 283  : 
; 284  : 		//总排名次
; 285  : 		if (IsDlgButtonChecked(IDC_RADIO_TOTAL_RANKING))

  001fa	68 36 23 00 00	 push	 9014			; 00002336H
  001ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00202	e8 00 00 00 00	 call	 ?IsDlgButtonChecked@CWnd@@QBEIH@Z ; CWnd::IsDlgButtonChecked
  00207	85 c0		 test	 eax, eax
  00209	74 2b		 je	 SHORT $LN13@SaveInputI

; 286  : 		{
; 287  : 			m_pGameMatchOption->cbFilterType=FILTER_TYPE_TOTAL_RANKING;

  0020b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00214	c6 41 4c 01	 mov	 BYTE PTR [ecx+76], 1

; 288  : 			m_pGameMatchOption->wMaxRankID=GetDlgItemInt(IDC_EDIT_TOTAL_RANK);

  00218	6a 01		 push	 1
  0021a	6a 00		 push	 0
  0021c	68 68 23 00 00	 push	 9064			; 00002368H
  00221	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00224	e8 00 00 00 00	 call	 ?GetDlgItemInt@CWnd@@QBEIHPAHH@Z ; CWnd::GetDlgItemInt
  00229	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	8b 91 b0 00 00
	00		 mov	 edx, DWORD PTR [ecx+176]
  00232	66 89 42 4e	 mov	 WORD PTR [edx+78], ax
$LN13@SaveInputI:

; 289  : 		}
; 290  : 	}
; 291  : 	else

  00236	eb 1c		 jmp	 SHORT $LN9@SaveInputI
$LN8@SaveInputI:

; 292  : 	{
; 293  : 		m_pGameMatchOption->cbSignupMode&=~SIGNUP_MODE_MATCH_USER;

  00238	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0023b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00241	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00245	83 e2 fd	 and	 edx, -3			; fffffffdH
  00248	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0024b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00251	88 51 40	 mov	 BYTE PTR [ecx+64], dl
$LN9@SaveInputI:

; 294  : 	}
; 295  : 
; 296  : 	//报名方式
; 297  : 	if (m_pGameMatchOption->cbSignupMode==0)

  00254	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00257	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0025d	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00261	85 d2		 test	 edx, edx
  00263	75 15		 jne	 SHORT $LN14@SaveInputI

; 298  : 	{
; 299  : 		AfxMessageBox(TEXT("报名方式不能为空，请重新选择！"));

  00265	6a 00		 push	 0
  00267	6a 00		 push	 0
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@BGMCEKFK@?$LB?$KI?C?$PL?$LH?$LN?J?$LN?$LC?$LL?D?$NM?N?$KK?$LP?U?$KD?$KM?G?k?V?X?P?B?Q?$KB?T?q?$KD?$KB@
  0026e	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 300  : 
; 301  : 		return false;

  00273	32 c0		 xor	 al, al
  00275	e9 f4 00 00 00	 jmp	 $LN1@SaveInputI
$LN14@SaveInputI:

; 302  : 	}
; 303  : 
; 304  : 	//比赛用户
; 305  : 	if (m_pGameMatchOption->cbSignupMode&SIGNUP_MODE_MATCH_USER)

  0027a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0027d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00283	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00287	83 e2 02	 and	 edx, 2
  0028a	0f 84 a6 00 00
	00		 je	 $LN15@SaveInputI

; 306  : 	{
; 307  : 		if (m_pGameMatchOption->dwFromMatchID==0)

  00290	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00293	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00299	83 79 48 00	 cmp	 DWORD PTR [ecx+72], 0
  0029d	75 15		 jne	 SHORT $LN16@SaveInputI

; 308  : 		{
; 309  : 			AfxMessageBox(TEXT("您勾选了参加特定比赛作为报名方式，必须选择一场赛事来确定比赛用户的来源！"));

  0029f	6a 00		 push	 0
  002a1	6a 00		 push	 0
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@IJMPOAAP@?D?z?$LJ?$LE?Q?$KB?A?K?$LC?N?$LM?S?L?X?$LG?$KI?$LB?H?H?$PM?W?w?N?$KK?$LB?$KI?C?$PL?$LH?$LN?J@
  002a8	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 310  : 
; 311  : 			return false;

  002ad	32 c0		 xor	 al, al
  002af	e9 ba 00 00 00	 jmp	 $LN1@SaveInputI
$LN16@SaveInputI:

; 312  : 		}
; 313  : 
; 314  : 		//查找比赛
; 315  : 		tagGameMatchOption * pGameMatchOption=m_pMatchInfoBuffer->SearchMatchOption(m_pGameMatchOption->dwFromMatchID);

  002b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002b7	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002bd	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  002c0	52		 push	 edx
  002c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c4	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  002ca	e8 00 00 00 00	 call	 ?SearchMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@K@Z ; CMatchInfoBuffer::SearchMatchOption
  002cf	89 45 e8	 mov	 DWORD PTR _pGameMatchOption$1[ebp], eax

; 316  : 		if (pGameMatchOption!=NULL)

  002d2	83 7d e8 00	 cmp	 DWORD PTR _pGameMatchOption$1[ebp], 0
  002d6	74 5e		 je	 SHORT $LN15@SaveInputI

; 317  : 		{
; 318  : 			if (pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  002d8	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$1[ebp]
  002db	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  002df	83 f9 01	 cmp	 ecx, 1
  002e2	75 23		 jne	 SHORT $LN18@SaveInputI

; 319  : 			{
; 320  : 				if (m_pGameMatchOption->cbFilterType!=FILTER_TYPE_SINGLE_TURN)

  002e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002e7	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002ed	0f b6 51 4c	 movzx	 edx, BYTE PTR [ecx+76]
  002f1	85 d2		 test	 edx, edx
  002f3	74 12		 je	 SHORT $LN18@SaveInputI

; 321  : 				{
; 322  : 					AfxMessageBox(TEXT("您选择了即时赛作为比赛用户的来源，筛选方式必须为单轮比赛排名！"));

  002f5	6a 00		 push	 0
  002f7	6a 00		 push	 0
  002f9	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@FFLEHDAN@?D?z?Q?$KB?T?q?A?K?$LM?$LE?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@
  002fe	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 323  : 
; 324  : 					return false;

  00303	32 c0		 xor	 al, al
  00305	eb 67		 jmp	 SHORT $LN1@SaveInputI
$LN18@SaveInputI:

; 325  : 				}
; 326  : 			}
; 327  : 
; 328  : 			if (pGameMatchOption->cbMatchType==MATCH_TYPE_LOCKTIME)

  00307	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$1[ebp]
  0030a	0f b6 48 11	 movzx	 ecx, BYTE PTR [eax+17]
  0030e	85 c9		 test	 ecx, ecx
  00310	75 24		 jne	 SHORT $LN15@SaveInputI

; 329  : 			{
; 330  : 				if (m_pGameMatchOption->cbFilterType!=FILTER_TYPE_TOTAL_RANKING)

  00312	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00315	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0031b	0f b6 51 4c	 movzx	 edx, BYTE PTR [ecx+76]
  0031f	83 fa 01	 cmp	 edx, 1
  00322	74 12		 je	 SHORT $LN15@SaveInputI

; 331  : 				{
; 332  : 					AfxMessageBox(TEXT("您选择了定时赛作为比赛用户的来源，筛选方式必须为比赛总排名！"));

  00324	6a 00		 push	 0
  00326	6a 00		 push	 0
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@MMLGHCLB@?D?z?Q?$KB?T?q?A?K?$LG?$KI?J?$LB?H?$PM?W?w?N?$KK?$LB?H?H?$PM?S?C?$LL?$KH?$LF?D?$MA?$LE?T@
  0032d	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 333  : 
; 334  : 					return false;

  00332	32 c0		 xor	 al, al
  00334	eb 38		 jmp	 SHORT $LN1@SaveInputI
$LN15@SaveInputI:

; 335  : 				}
; 336  : 			}
; 337  : 		}
; 338  : 	}
; 339  : 
; 340  : 	//特殊判断
; 341  : 	if (m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE && m_pGameMatchOption->cbSignupMode&SIGNUP_MODE_MATCH_USER)

  00336	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00339	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0033f	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00343	83 fa 01	 cmp	 edx, 1
  00346	75 24		 jne	 SHORT $LN22@SaveInputI
  00348	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0034b	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00351	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00355	83 e2 02	 and	 edx, 2
  00358	74 12		 je	 SHORT $LN22@SaveInputI

; 342  : 	{
; 343  : 		AfxMessageBox(TEXT("即时赛不能选择比赛金币作为报名方式，请重新选择！"));

  0035a	6a 00		 push	 0
  0035c	6a 00		 push	 0
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@GIIJOMAB@?$LM?$LE?J?$LB?H?$PM?$LC?$LL?D?$NM?Q?$KB?T?q?$LB?H?H?$PM?$LN?p?$LB?R?W?w?N?$KK?$LB?$KI?C?$PL?$LH@
  00363	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 344  : 
; 345  : 		return false;

  00368	32 c0		 xor	 al, al
  0036a	eb 02		 jmp	 SHORT $LN1@SaveInputI
$LN22@SaveInputI:

; 346  : 	}
; 347  : 
; 348  : 	return true;

  0036c	b0 01		 mov	 al, 1
$LN1@SaveInputI:

; 349  : }

  0036e	5f		 pop	 edi
  0036f	5e		 pop	 esi
  00370	5b		 pop	 ebx
  00371	8b e5		 mov	 esp, ebp
  00373	5d		 pop	 ebp
  00374	c3		 ret	 0
?SaveInputInfo@CDlgMatchSignup1@@MAE_NXZ ENDP		; CDlgMatchSignup1::SaveInputInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnInitDialog@CDlgMatchSignup1@@MAEHXZ
_TEXT	SEGMENT
_nIndex$1 = -28						; size = 4
_pGameMatchOption$2 = -24				; size = 4
_i$3 = -20						; size = 4
_pComboBox$ = -16					; size = 4
_pStartDate$4 = -12					; size = 4
_pEndtDate$5 = -8					; size = 4
_this$ = -4						; size = 4
?OnInitDialog@CDlgMatchSignup1@@MAEHXZ PROC		; CDlgMatchSignup1::OnInitDialog, COMDAT
; _this$ = ecx

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 138  : 
; 139  : 	//设置控件
; 140  : 	((CEdit *)GetDlgItem(IDC_EDIT_SIGNUP_FEE))->LimitText(9);

  00014	6a 09		 push	 9
  00016	68 57 23 00 00	 push	 9047			; 00002357H
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00023	8b c8		 mov	 ecx, eax
  00025	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 141  : 
; 142  : 	//默认选择
; 143  : 	CheckRadioButton(IDC_RADIO_GOLD,IDC_RADIO_MEDAL,IDC_RADIO_GOLD);

  0002a	68 3b 23 00 00	 push	 9019			; 0000233bH
  0002f	68 3c 23 00 00	 push	 9020			; 0000233cH
  00034	68 3b 23 00 00	 push	 9019			; 0000233bH
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton

; 144  : 	CheckRadioButton(IDC_RADIO_SERVER,IDC_RADIO_WEBSITE,IDC_RADIO_SERVER);	

  00041	68 37 23 00 00	 push	 9015			; 00002337H
  00046	68 38 23 00 00	 push	 9016			; 00002338H
  0004b	68 37 23 00 00	 push	 9015			; 00002337H
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton

; 145  : 
; 146  : 	//比赛费用
; 147  : 	SetDlgItemInt(IDC_EDIT_SIGNUP_FEE,(UINT)m_pGameMatchOption->lSignupFee);

  00058	6a 01		 push	 1
  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00063	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00066	52		 push	 edx
  00067	68 57 23 00 00	 push	 9047			; 00002357H
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 148  : 
; 149  : 	//报名费用
; 150  : 	if (m_pGameMatchOption->cbSignupMode&SIGNUP_MODE_SIGNUP_FEE)

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0007d	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00081	83 e2 01	 and	 edx, 1
  00084	74 7e		 je	 SHORT $LN5@OnInitDial

; 151  : 	{
; 152  : 		//设置选择
; 153  : 		((CButton *)GetDlgItem(IDC_CHECK_SIGNUP_FEE))->SetCheck(TRUE);

  00086	6a 01		 push	 1
  00088	68 33 23 00 00	 push	 9011			; 00002333H
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 154  : 
; 155  : 		//报名费用
; 156  : 		SetDlgItemInt(IDC_EDIT_SIGNUP_FEE,(int)m_pGameMatchOption->lSignupFee);

  0009c	6a 01		 push	 1
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000a7	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000aa	52		 push	 edx
  000ab	68 57 23 00 00	 push	 9047			; 00002357H
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 157  : 
; 158  : 		//费用类型
; 159  : 		CheckRadioButton(IDC_RADIO_GOLD,IDC_RADIO_MEDAL,IDC_RADIO_GOLD+(m_pGameMatchOption->cbFeeType-FEE_TYPE_GOLD));

  000b8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000c1	0f b6 51 32	 movzx	 edx, BYTE PTR [ecx+50]
  000c5	81 c2 3b 23 00
	00		 add	 edx, 9019		; 0000233bH
  000cb	52		 push	 edx
  000cc	68 3c 23 00 00	 push	 9020			; 0000233cH
  000d1	68 3b 23 00 00	 push	 9019			; 0000233bH
  000d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton

; 160  : 
; 161  : 		//缴费位置
; 162  : 		CheckRadioButton(IDC_RADIO_SERVER,IDC_RADIO_WEBSITE,IDC_RADIO_SERVER+(m_pGameMatchOption->cbDeductArea-DEDUCT_AREA_SERVER));		

  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  000e7	0f b6 51 33	 movzx	 edx, BYTE PTR [ecx+51]
  000eb	81 c2 37 23 00
	00		 add	 edx, 9015		; 00002337H
  000f1	52		 push	 edx
  000f2	68 38 23 00 00	 push	 9016			; 00002338H
  000f7	68 37 23 00 00	 push	 9015			; 00002337H
  000fc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN5@OnInitDial:

; 163  : 	}
; 164  : 
; 165  : 	//比赛晋级
; 166  : 	if (m_pGameMatchOption->cbSignupMode&SIGNUP_MODE_MATCH_USER)

  00104	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0010d	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  00111	83 e2 02	 and	 edx, 2
  00114	0f 84 ed 00 00
	00		 je	 $LN6@OnInitDial

; 167  : 	{
; 168  : 		//设置选择
; 169  : 		((CButton *)GetDlgItem(IDC_CHECK_MATCH_USER))->SetCheck(TRUE);		

  0011a	6a 01		 push	 1
  0011c	68 31 23 00 00	 push	 9009			; 00002331H
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00129	8b c8		 mov	 ecx, eax
  0012b	e8 00 00 00 00	 call	 ?SetCheck@CButton@@QAEXH@Z ; CButton::SetCheck

; 170  : 
; 171  : 		//结束日期
; 172  : 		CDateTimeCtrl * pEndtDate=(CDateTimeCtrl *)GetDlgItem(IDC_DATE_MATCH_END);

  00130	68 66 23 00 00	 push	 9062			; 00002366H
  00135	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0013d	89 45 f8	 mov	 DWORD PTR _pEndtDate$5[ebp], eax

; 173  : 		pEndtDate->SetTime(&m_pGameMatchOption->MatchEndDate);

  00140	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00143	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00149	83 c1 50	 add	 ecx, 80			; 00000050H
  0014c	51		 push	 ecx
  0014d	8b 4d f8	 mov	 ecx, DWORD PTR _pEndtDate$5[ebp]
  00150	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 174  : 
; 175  : 		//开始日期
; 176  : 		CDateTimeCtrl * pStartDate=(CDateTimeCtrl *)GetDlgItem(IDC_DATE_MATCH_START);

  00155	68 65 23 00 00	 push	 9061			; 00002365H
  0015a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00162	89 45 f4	 mov	 DWORD PTR _pStartDate$4[ebp], eax

; 177  : 		pStartDate->SetTime(&m_pGameMatchOption->MatchStartDate);		

  00165	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00168	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  0016e	83 c1 60	 add	 ecx, 96			; 00000060H
  00171	51		 push	 ecx
  00172	8b 4d f4	 mov	 ecx, DWORD PTR _pStartDate$4[ebp]
  00175	e8 00 00 00 00	 call	 ?SetTime@CDateTimeCtrl@@QAEHPAU_SYSTEMTIME@@@Z ; CDateTimeCtrl::SetTime

; 178  : 
; 179  : 		//单轮排名
; 180  : 		if (m_pGameMatchOption->cbFilterType==FILTER_TYPE_SINGLE_TURN)

  0017a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00183	0f b6 51 4c	 movzx	 edx, BYTE PTR [ecx+76]
  00187	85 d2		 test	 edx, edx
  00189	75 34		 jne	 SHORT $LN8@OnInitDial

; 181  : 		{			
; 182  : 			SetDlgItemInt(IDC_EDIT_SINGLE_RANK,m_pGameMatchOption->wMaxRankID);

  0018b	6a 01		 push	 1
  0018d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00190	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00196	0f b7 51 4e	 movzx	 edx, WORD PTR [ecx+78]
  0019a	52		 push	 edx
  0019b	68 67 23 00 00	 push	 9063			; 00002367H
  001a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a3	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 183  : 			CheckRadioButton(IDC_RADIO_SINGLE_TURN,IDC_RADIO_TOTAL_RANKING,IDC_RADIO_SINGLE_TURN);			

  001a8	68 35 23 00 00	 push	 9013			; 00002335H
  001ad	68 36 23 00 00	 push	 9014			; 00002336H
  001b2	68 35 23 00 00	 push	 9013			; 00002335H
  001b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN8@OnInitDial:

; 184  : 		}
; 185  : 
; 186  : 		//总排名次
; 187  : 		if (m_pGameMatchOption->cbFilterType==FILTER_TYPE_TOTAL_RANKING)

  001bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c2	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001c8	0f b6 51 4c	 movzx	 edx, BYTE PTR [ecx+76]
  001cc	83 fa 01	 cmp	 edx, 1
  001cf	75 34		 jne	 SHORT $LN9@OnInitDial

; 188  : 		{
; 189  : 			SetDlgItemInt(IDC_EDIT_TOTAL_RANK,m_pGameMatchOption->wMaxRankID);

  001d1	6a 01		 push	 1
  001d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d6	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001dc	0f b7 51 4e	 movzx	 edx, WORD PTR [ecx+78]
  001e0	52		 push	 edx
  001e1	68 68 23 00 00	 push	 9064			; 00002368H
  001e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e9	e8 00 00 00 00	 call	 ?SetDlgItemInt@CWnd@@QAEXHIH@Z ; CWnd::SetDlgItemInt

; 190  : 			CheckRadioButton(IDC_RADIO_SINGLE_TURN,IDC_RADIO_TOTAL_RANKING,IDC_RADIO_TOTAL_RANKING);			

  001ee	68 36 23 00 00	 push	 9014			; 00002336H
  001f3	68 36 23 00 00	 push	 9014			; 00002336H
  001f8	68 35 23 00 00	 push	 9013			; 00002335H
  001fd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00200	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN9@OnInitDial:

; 191  : 		}		
; 192  : 	}
; 193  : 	else

  00205	eb 17		 jmp	 SHORT $LN7@OnInitDial
$LN6@OnInitDial:

; 194  : 	{
; 195  : 		//默认设置
; 196  : 		CheckRadioButton(IDC_RADIO_SINGLE_TURN,IDC_RADIO_TOTAL_RANKING,IDC_RADIO_SINGLE_TURN);

  00207	68 35 23 00 00	 push	 9013			; 00002335H
  0020c	68 36 23 00 00	 push	 9014			; 00002336H
  00211	68 35 23 00 00	 push	 9013			; 00002335H
  00216	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00219	e8 00 00 00 00	 call	 ?CheckRadioButton@CWnd@@QAEXHHH@Z ; CWnd::CheckRadioButton
$LN7@OnInitDial:

; 197  : 	}
; 198  : 
; 199  : 	//获取控件
; 200  : 	CComboBox * pComboBox=(CComboBox *)GetDlgItem(IDC_COMBO_FROM_MATCH);

  0021e	68 64 23 00 00	 push	 9060			; 00002364H
  00223	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00226	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0022b	89 45 f0	 mov	 DWORD PTR _pComboBox$[ebp], eax

; 201  : 	if (pComboBox!=NULL)

  0022e	83 7d f0 00	 cmp	 DWORD PTR _pComboBox$[ebp], 0
  00232	0f 84 ca 00 00
	00		 je	 $LN10@OnInitDial

; 202  : 	{
; 203  : 		//加载比赛
; 204  : 		if (m_pMatchInfoBuffer!=NULL)

  00238	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0023b	83 b8 a8 00 00
	00 00		 cmp	 DWORD PTR [eax+168], 0
  00242	0f 84 b2 00 00
	00		 je	 $LN11@OnInitDial

; 205  : 		{
; 206  : 			//遍历赛事
; 207  : 			for (INT_PTR i=0;i<m_pMatchInfoBuffer->m_GameMatchOptionArray.GetCount();i++)

  00248	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  0024f	eb 09		 jmp	 SHORT $LN4@OnInitDial
$LN2@OnInitDial:
  00251	8b 45 ec	 mov	 eax, DWORD PTR _i$3[ebp]
  00254	83 c0 01	 add	 eax, 1
  00257	89 45 ec	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@OnInitDial:
  0025a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0025d	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  00263	83 c1 04	 add	 ecx, 4
  00266	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
  0026b	39 45 ec	 cmp	 DWORD PTR _i$3[ebp], eax
  0026e	0f 8d 86 00 00
	00		 jge	 $LN11@OnInitDial

; 208  : 			{
; 209  : 				//获取对象
; 210  : 				tagGameMatchOption * pGameMatchOption=m_pMatchInfoBuffer->m_GameMatchOptionArray[i];

  00274	8b 45 ec	 mov	 eax, DWORD PTR _i$3[ebp]
  00277	50		 push	 eax
  00278	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027b	8b 89 a8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+168]
  00281	83 c1 04	 add	 ecx, 4
  00284	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
  00289	8b 10		 mov	 edx, DWORD PTR [eax]
  0028b	89 55 e8	 mov	 DWORD PTR _pGameMatchOption$2[ebp], edx

; 211  : 				if (pGameMatchOption->dwMatchID==m_pGameMatchOption->dwMatchID) continue;

  0028e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00291	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00297	8b 55 e8	 mov	 edx, DWORD PTR _pGameMatchOption$2[ebp]
  0029a	8b 02		 mov	 eax, DWORD PTR [edx]
  0029c	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0029e	75 02		 jne	 SHORT $LN12@OnInitDial
  002a0	eb af		 jmp	 SHORT $LN2@OnInitDial
$LN12@OnInitDial:

; 212  : 			
; 213  : 				//添加赛事
; 214  : 				int nIndex=pComboBox->AddString(pGameMatchOption->szMatchName);

  002a2	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$2[ebp]
  002a5	83 c0 12	 add	 eax, 18			; 00000012H
  002a8	50		 push	 eax
  002a9	8b 4d f0	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002ac	e8 00 00 00 00	 call	 ?AddString@CComboBox@@QAEHPBD@Z ; CComboBox::AddString
  002b1	89 45 e4	 mov	 DWORD PTR _nIndex$1[ebp], eax

; 215  : 				pComboBox->SetItemDataPtr(nIndex,pGameMatchOption);

  002b4	8b 45 e8	 mov	 eax, DWORD PTR _pGameMatchOption$2[ebp]
  002b7	50		 push	 eax
  002b8	8b 4d e4	 mov	 ecx, DWORD PTR _nIndex$1[ebp]
  002bb	51		 push	 ecx
  002bc	8b 4d f0	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002bf	e8 00 00 00 00	 call	 ?SetItemDataPtr@CComboBox@@QAEHHPAX@Z ; CComboBox::SetItemDataPtr

; 216  : 				if (pGameMatchOption->dwMatchID==m_pGameMatchOption->dwFromMatchID)

  002c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002c7	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002cd	8b 55 e8	 mov	 edx, DWORD PTR _pGameMatchOption$2[ebp]
  002d0	8b 02		 mov	 eax, DWORD PTR [edx]
  002d2	3b 41 48	 cmp	 eax, DWORD PTR [ecx+72]
  002d5	75 1e		 jne	 SHORT $LN13@OnInitDial

; 217  : 				{
; 218  : 					if (m_pGameMatchOption->cbSignupMode&SIGNUP_MODE_MATCH_USER)

  002d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002da	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  002e0	0f b6 51 40	 movzx	 edx, BYTE PTR [ecx+64]
  002e4	83 e2 02	 and	 edx, 2
  002e7	74 0c		 je	 SHORT $LN13@OnInitDial

; 219  : 					{
; 220  : 						pComboBox->SetCurSel(nIndex);

  002e9	8b 45 e4	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  002ec	50		 push	 eax
  002ed	8b 4d f0	 mov	 ecx, DWORD PTR _pComboBox$[ebp]
  002f0	e8 00 00 00 00	 call	 ?SetCurSel@CComboBox@@QAEHH@Z ; CComboBox::SetCurSel
$LN13@OnInitDial:

; 221  : 					}
; 222  : 				}
; 223  : 			}

  002f5	e9 57 ff ff ff	 jmp	 $LN2@OnInitDial
$LN11@OnInitDial:

; 224  : 		}
; 225  : 
; 226  : 		//模拟选择
; 227  : 		OnCbnSelchangeComboFromMatch();

  002fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fd	e8 00 00 00 00	 call	 ?OnCbnSelchangeComboFromMatch@CDlgMatchSignup1@@IAEXXZ ; CDlgMatchSignup1::OnCbnSelchangeComboFromMatch
$LN10@OnInitDial:

; 228  : 	}
; 229  : 	
; 230  : 	return FALSE;

  00302	33 c0		 xor	 eax, eax

; 231  : }

  00304	5f		 pop	 edi
  00305	5e		 pop	 esi
  00306	5b		 pop	 ebx
  00307	8b e5		 mov	 esp, ebp
  00309	5d		 pop	 ebp
  0030a	c3		 ret	 0
?OnInitDialog@CDlgMatchSignup1@@MAEHXZ ENDP		; CDlgMatchSignup1::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchSignup1@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchSignup1@@UAE@XZ PROC			; CDlgMatchSignup1::~CDlgMatchSignup1, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchSignup1@@6B@

; 132  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchSignup1@@UAE@XZ ENDP			; CDlgMatchSignup1::~CDlgMatchSignup1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchSignup1@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDlgMatchSignup1@@QAE@XZ PROC			; CDlgMatchSignup1::CDlgMatchSignup1, COMDAT
; _this$ = ecx

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : CDlgMatchSignup1::CDlgMatchSignup1() : CDlgMatchItem(IDD_MATCH_SIGNUP1)

  0000c	68 36 23 00 00	 push	 9014			; 00002336H
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CDlgMatchItem@@IAE@I@Z ; CDlgMatchItem::CDlgMatchItem

; 126  : {

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchSignup1@@6B@

; 127  : }

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CDlgMatchSignup1@@QAE@XZ ENDP			; CDlgMatchSignup1::CDlgMatchSignup1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgMatchItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgMatchItem@@MAEPAXI@Z PROC			; CDlgMatchItem::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgMatchItem@@MAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 b8 00 00 00	 push	 184			; 000000b8H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc b8 00
	00 00		 imul	 ecx, DWORD PTR [eax-4], 184
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 b8 00 00 00	 push	 184			; 000000b8H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgMatchItem@@MAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgMatchItem@@MAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgMatchItem@@MAEPAXI@Z ENDP			; CDlgMatchItem::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgMatchItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgMatchItem@@MAEPAXI@Z PROC			; CDlgMatchItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgMatchItem@@MAE@XZ ; CDlgMatchItem::~CDlgMatchItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 b8 00 00 00	 push	 184			; 000000b8H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgMatchItem@@MAEPAXI@Z ENDP			; CDlgMatchItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ PROC	; CDlgMatchItem::GetMessageMap, COMDAT
; _this$ = ecx

; 17   : BEGIN_MESSAGE_MAP(CDlgMatchItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ ; CDlgMatchItem::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgMatchItem@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CDlgMatchItem::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgMatchItem::GetThisMessageMap, COMDAT

; 17   : BEGIN_MESSAGE_MAP(CDlgMatchItem, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 18   : 	ON_WM_SIZE()
; 19   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgMatchItem@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgMatchItem::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnSize@CDlgMatchItem@@AAEXIHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nType$ = 8						; size = 4
_cx$ = 12						; size = 4
_cy$ = 16						; size = 4
?OnSize@CDlgMatchItem@@AAEXIHH@Z PROC			; CDlgMatchItem::OnSize, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 114  : 	__super::OnSize(nType, cx, cy);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 08	 mov	 edx, DWORD PTR _nType$[ebp]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?OnSize@CWnd@@IAEXIHH@Z	; CWnd::OnSize

; 115  : 
; 116  : 	//调整控件
; 117  : 	RectifyControl(cx,cy);

  00020	8b 45 10	 mov	 eax, DWORD PTR _cy$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 02		 mov	 eax, DWORD PTR [edx]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 90 98 01 00
	00		 mov	 edx, DWORD PTR [eax+408]
  00036	ff d2		 call	 edx

; 118  : 
; 119  : 	return;
; 120  : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 0c 00	 ret	 12			; 0000000cH
?OnSize@CDlgMatchItem@@AAEXIHH@Z ENDP			; CDlgMatchItem::OnSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbMatchType$ = 8					; size = 1
?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z PROC	; CDlgMatchItem::OnEventMatchTypeChanged, COMDAT
; _this$ = ecx

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 109  : }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnEventMatchTypeChanged@CDlgMatchItem@@UAEXE@Z ENDP	; CDlgMatchItem::OnEventMatchTypeChanged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?CreateMatchItem@CDlgMatchItem@@AAEXABVCRect@@PAVCWnd@@@Z
_TEXT	SEGMENT
_bSuccess$ = -8						; size = 4
_this$ = -4						; size = 4
_rcRect$ = 8						; size = 4
_pParentWnd$ = 12					; size = 4
?CreateMatchItem@CDlgMatchItem@@AAEXABVCRect@@PAVCWnd@@@Z PROC ; CDlgMatchItem::CreateMatchItem, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 	//设置资源
; 96   : 	AfxSetResourceHandle(GetModuleHandle(MODULE_MANAGER_DLL_NAME));

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 97   : 
; 98   : 	//创建窗口
; 99   : 	BOOL bSuccess=Create(m_lpszTemplateName,pParentWnd);

  0001d	8b 45 0c	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  0002a	52		 push	 edx
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 82 70 01 00
	00		 mov	 eax, DWORD PTR [edx+368]
  00039	ff d0		 call	 eax
  0003b	89 45 f8	 mov	 DWORD PTR _bSuccess$[ebp], eax

; 100  : 	SetWindowPos(NULL,rcRect.left,rcRect.top,rcRect.Width(),rcRect.Height(),SWP_NOZORDER|SWP_NOACTIVATE);

  0003e	6a 14		 push	 20			; 00000014H
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  00043	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  0004c	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00051	50		 push	 eax
  00052	8b 45 08	 mov	 eax, DWORD PTR _rcRect$[ebp]
  00055	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00058	51		 push	 ecx
  00059	8b 55 08	 mov	 edx, DWORD PTR _rcRect$[ebp]
  0005c	8b 02		 mov	 eax, DWORD PTR [edx]
  0005e	50		 push	 eax
  0005f	6a 00		 push	 0
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 101  : 
; 102  : 	//设置资源
; 103  : 	AfxSetResourceHandle(GetModuleHandle(NULL));

  00069	6a 00		 push	 0
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 104  : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 08 00	 ret	 8
?CreateMatchItem@CDlgMatchItem@@AAEXABVCRect@@PAVCWnd@@@Z ENDP ; CDlgMatchItem::CreateMatchItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?ShowMatchItem@CDlgMatchItem@@AAE_NABVCRect@@PAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rcRect$ = 8						; size = 4
_pParentWnd$ = 12					; size = 4
?ShowMatchItem@CDlgMatchItem@@AAE_NABVCRect@@PAVCWnd@@@Z PROC ; CDlgMatchItem::ShowMatchItem, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 83   : 	//创建窗口
; 84   : 	if (m_hWnd==NULL) CreateMatchItem(rcRect,pParentWnd);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00013	75 10		 jne	 SHORT $LN2@ShowMatchI
  00015	8b 45 0c	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _rcRect$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?CreateMatchItem@CDlgMatchItem@@AAEXABVCRect@@PAVCWnd@@@Z ; CDlgMatchItem::CreateMatchItem
$LN2@ShowMatchI:

; 85   : 
; 86   : 	//显示窗口
; 87   : 	ShowWindow(SW_SHOW);

  00025	6a 05		 push	 5
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 88   : 
; 89   : 	return true;

  0002f	b0 01		 mov	 al, 1

; 90   : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 08 00	 ret	 8
?ShowMatchItem@CDlgMatchItem@@AAE_NABVCRect@@PAVCWnd@@@Z ENDP ; CDlgMatchItem::ShowMatchItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ PROC ; CDlgMatchItem::GetGameMatchOption, COMDAT
; _this$ = ecx

; 62   : 	tagGameMatchOption * GetGameMatchOption() { return m_pGameMatchOption; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 b0 00 00
	00		 mov	 eax, DWORD PTR [eax+176]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ ENDP ; CDlgMatchItem::GetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SetGameMatchOption@CDlgMatchItem@@IAEXPAUtagGameMatchOption@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pGameMatchOption$ = 8					; size = 4
?SetGameMatchOption@CDlgMatchItem@@IAEXPAUtagGameMatchOption@@@Z PROC ; CDlgMatchItem::SetGameMatchOption, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 77   : 	m_pGameMatchOption=pGameMatchOption;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _pGameMatchOption$[ebp]
  00012	89 88 b0 00 00
	00		 mov	 DWORD PTR [eax+176], ecx

; 78   : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetGameMatchOption@CDlgMatchItem@@IAEXPAUtagGameMatchOption@@@Z ENDP ; CDlgMatchItem::SetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SetRewardInfoBuffer@CDlgMatchItem@@IAEXPAVCRewardInfoBuffer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pRewardInfoBuffer$ = 8					; size = 4
?SetRewardInfoBuffer@CDlgMatchItem@@IAEXPAVCRewardInfoBuffer@@@Z PROC ; CDlgMatchItem::SetRewardInfoBuffer, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 	m_pRewardInfoBuffer=pRewardInfoBuffer;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _pRewardInfoBuffer$[ebp]
  00012	89 88 ac 00 00
	00		 mov	 DWORD PTR [eax+172], ecx

; 72   : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetRewardInfoBuffer@CDlgMatchItem@@IAEXPAVCRewardInfoBuffer@@@Z ENDP ; CDlgMatchItem::SetRewardInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?SetMatchInfoBuffer@CDlgMatchItem@@IAEXPAVCMatchInfoBuffer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMatchInfoBuffer$ = 8					; size = 4
?SetMatchInfoBuffer@CDlgMatchItem@@IAEXPAVCMatchInfoBuffer@@@Z PROC ; CDlgMatchItem::SetMatchInfoBuffer, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	m_pMatchInfoBuffer=pMatchInfoBuffer;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _pMatchInfoBuffer$[ebp]
  00012	89 88 a8 00 00
	00		 mov	 DWORD PTR [eax+168], ecx

; 66   : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetMatchInfoBuffer@CDlgMatchItem@@IAEXPAVCMatchInfoBuffer@@@Z ENDP ; CDlgMatchItem::SetMatchInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?OnCancel@CDlgMatchItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnCancel@CDlgMatchItem@@MAEXXZ PROC			; CDlgMatchItem::OnCancel, COMDAT
; _this$ = ecx

; 44   : 	virtual VOID OnCancel() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnCancel@CDlgMatchItem@@MAEXXZ ENDP			; CDlgMatchItem::OnCancel
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?OnOK@CDlgMatchItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgMatchItem@@MAEXXZ PROC			; CDlgMatchItem::OnOK, COMDAT
; _this$ = ecx

; 42   : 	virtual VOID OnOK() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnOK@CDlgMatchItem@@MAEXXZ ENDP			; CDlgMatchItem::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??1CDlgMatchItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgMatchItem@@MAE@XZ PROC				; CDlgMatchItem::~CDlgMatchItem, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchItem@@6B@

; 60   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CDlgMatchItem@@MAE@XZ ENDP				; CDlgMatchItem::~CDlgMatchItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ??0CDlgMatchItem@@IAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIDTemplate$ = 8					; size = 4
??0CDlgMatchItem@@IAE@I@Z PROC				; CDlgMatchItem::CDlgMatchItem, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : CDlgMatchItem::CDlgMatchItem(UINT nIDTemplate): CDialog(nIDTemplate)

  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR _nIDTemplate$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog

; 50   : {

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgMatchItem@@6B@

; 51   : 	//设置变量		
; 52   : 	m_pGameMatchOption=NULL;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 80 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+176], 0

; 53   : 	m_pMatchInfoBuffer=NULL;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0

; 54   : 	m_pRewardInfoBuffer=NULL;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 55   : }

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
??0CDlgMatchItem@@IAE@I@Z ENDP				; CDlgMatchItem::CDlgMatchItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchInfoManager@@UAEPAXI@Z PROC			; CMatchInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 44		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 04		 push	 4
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1d		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00058	8d 14 8d 04 00
	00 00		 lea	 edx, DWORD PTR [ecx*4+4]
  0005f	52		 push	 edx
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 e8 04	 sub	 eax, 4
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 e8 04	 sub	 eax, 4
  00075	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 0e		 je	 SHORT $LN4@vector
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN4@vector:
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchInfoManager@@UAEPAXI@Z ENDP			; CMatchInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchInfoManager@@UAEPAXI@Z PROC			; CMatchInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchInfoManager@@UAEPAXI@Z ENDP			; CMatchInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchInfoManager@@QAEAAV0@ABV0@@Z PROC		; CMatchInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4CMatchInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CMatchInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchInfoManager@@QAE@ABV0@@Z PROC			; CMatchInfoManager::CMatchInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoManager@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CMatchInfoManager@@QAE@ABV0@@Z ENDP			; CMatchInfoManager::CMatchInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECRewardInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECRewardInfoBuffer@@UAEPAXI@Z PROC			; CRewardInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECRewardInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECRewardInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECRewardInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECRewardInfoBuffer@@UAEPAXI@Z ENDP			; CRewardInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCRewardInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRewardInfoBuffer@@UAEPAXI@Z PROC			; CRewardInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCRewardInfoBuffer@@UAEPAXI@Z ENDP			; CRewardInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z PROC		; CRewardInfoBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z ENDP		; CRewardInfoBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CRewardInfoBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CRewardInfoBuffer@@QAE@ABV0@@Z PROC			; CRewardInfoBuffer::CRewardInfoBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRewardInfoBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CRewardInfoBuffer@@QAE@ABV0@@Z ENDP			; CRewardInfoBuffer::CRewardInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAPAUtagMatchRewardInfo@@H@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchInfoBuffer@@UAEPAXI@Z PROC			; CMatchInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchInfoBuffer@@UAEPAXI@Z ENDP			; CMatchInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchInfoBuffer@@UAEPAXI@Z PROC			; CMatchInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchInfoBuffer@@UAEPAXI@Z ENDP			; CMatchInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z PROC		; CMatchInfoBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z ENDP		; CMatchInfoBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchInfoBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchInfoBuffer@@QAE@ABV0@@Z PROC			; CMatchInfoBuffer::CMatchInfoBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CMatchInfoBuffer@@QAE@ABV0@@Z ENDP			; CMatchInfoBuffer::CMatchInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ?DeflateRect@CRect@@QAEXHHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_l$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_b$ = 20						; size = 4
?DeflateRect@CRect@@QAEXHHHH@Z PROC			; CRect::DeflateRect, COMDAT
; _this$ = ecx

; 931  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 932  : 	left += l;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	03 4d 08	 add	 ecx, DWORD PTR _l$[ebp]
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx

; 933  : 	top += t;

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	03 4d 0c	 add	 ecx, DWORD PTR _t$[ebp]
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 934  : 	right -= r;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002e	2b 4d 10	 sub	 ecx, DWORD PTR _r$[ebp]
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 935  : 	bottom -= b;

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003d	2b 4d 14	 sub	 ecx, DWORD PTR _b$[ebp]
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 936  : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 10 00	 ret	 16			; 00000010H
?DeflateRect@CRect@@QAEXHHHH@Z ENDP			; CRect::DeflateRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCRect@@QAEPAUtagRECT@@XZ PROC			; CRect::operator tagRECT *, COMDAT
; _this$ = ecx

; 627  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 	return this;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 629  : }

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Height@CRect@@QBEHXZ PROC				; CRect::Height, COMDAT
; _this$ = ecx

; 580  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 581  : 	return bottom - top;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00015	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]

; 582  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Width@CRect@@QBEHXZ PROC				; CRect::Width, COMDAT
; _this$ = ecx

; 575  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 576  : 	return right - left;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00015	2b 01		 sub	 eax, DWORD PTR [ecx]

; 577  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_l$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_b$ = 20						; size = 4
??0CRect@@QAE@HHHH@Z PROC				; CRect::CRect, COMDAT
; _this$ = ecx

; 539  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 540  : 	left = l;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 541  : 	top = t;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  0001a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 542  : 	right = r;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 10	 mov	 ecx, DWORD PTR _r$[ebp]
  00023	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 543  : 	bottom = b;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  0002c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 544  : }

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRect@@QAE@XZ PROC					; CRect::CRect, COMDAT
; _this$ = ecx

; 527  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 528  : 	left = 0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 529  : 	top = 0;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 530  : 	right = 0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 531  : 	bottom = 0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 532  : }

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltypes.h
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_initCX$ = 8						; size = 4
_initCY$ = 12						; size = 4
??0CSize@@QAE@HH@Z PROC					; CSize::CSize, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 312  : 	cx = initCX;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _initCX$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 	cy = initCY;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _initCY$[ebp]
  0001a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 314  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
??0CSize@@QAE@HH@Z ENDP					; CSize::CSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetSecond@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
tv69 = -116						; size = 4
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetSecond@CTime@ATL@@QBEHXZ PROC			; ATL::CTime::GetSecond, COMDAT
; _this$ = ecx

; 702  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 703  : 	struct tm ttm;
; 704  : 	struct tm * ptm;
; 705  : 
; 706  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 707  : 	return ptm ? ptm->tm_sec : -1 ;

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	74 0a		 je	 SHORT $LN3@GetSecond
  0002b	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	89 4d 8c	 mov	 DWORD PTR tv69[ebp], ecx
  00033	eb 07		 jmp	 SHORT $LN4@GetSecond
$LN3@GetSecond:
  00035	c7 45 8c ff ff
	ff ff		 mov	 DWORD PTR tv69[ebp], -1
$LN4@GetSecond:
  0003c	8b 45 8c	 mov	 eax, DWORD PTR tv69[ebp]

; 708  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00045	33 cd		 xor	 ecx, ebp
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?GetSecond@CTime@ATL@@QBEHXZ ENDP			; ATL::CTime::GetSecond
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetMinute@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
tv69 = -116						; size = 4
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetMinute@CTime@ATL@@QBEHXZ PROC			; ATL::CTime::GetMinute, COMDAT
; _this$ = ecx

; 693  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 694  : 	struct tm ttm;
; 695  : 	struct tm * ptm;
; 696  : 
; 697  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 698  : 	return ptm ? ptm->tm_min : -1 ;

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	74 0b		 je	 SHORT $LN3@GetMinute
  0002b	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  0002e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00031	89 4d 8c	 mov	 DWORD PTR tv69[ebp], ecx
  00034	eb 07		 jmp	 SHORT $LN4@GetMinute
$LN3@GetMinute:
  00036	c7 45 8c ff ff
	ff ff		 mov	 DWORD PTR tv69[ebp], -1
$LN4@GetMinute:
  0003d	8b 45 8c	 mov	 eax, DWORD PTR tv69[ebp]

; 699  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00046	33 cd		 xor	 ecx, ebp
  00048	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?GetMinute@CTime@ATL@@QBEHXZ ENDP			; ATL::CTime::GetMinute
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetHour@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
tv69 = -116						; size = 4
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetHour@CTime@ATL@@QBEHXZ PROC				; ATL::CTime::GetHour, COMDAT
; _this$ = ecx

; 684  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 685  : 	struct tm ttm;
; 686  : 	struct tm * ptm;
; 687  : 
; 688  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 689  : 	return ptm ? ptm->tm_hour : -1 ;

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	74 0b		 je	 SHORT $LN3@GetHour
  0002b	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  0002e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00031	89 4d 8c	 mov	 DWORD PTR tv69[ebp], ecx
  00034	eb 07		 jmp	 SHORT $LN4@GetHour
$LN3@GetHour:
  00036	c7 45 8c ff ff
	ff ff		 mov	 DWORD PTR tv69[ebp], -1
$LN4@GetHour:
  0003d	8b 45 8c	 mov	 eax, DWORD PTR tv69[ebp]

; 690  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00046	33 cd		 xor	 ecx, ebp
  00048	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?GetHour@CTime@ATL@@QBEHXZ ENDP				; ATL::CTime::GetHour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetDay@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
tv69 = -116						; size = 4
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetDay@CTime@ATL@@QBEHXZ PROC				; ATL::CTime::GetDay, COMDAT
; _this$ = ecx

; 675  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 676  : 	struct tm ttm;
; 677  : 	struct tm * ptm;
; 678  : 
; 679  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 680  : 	return ptm ? ptm->tm_mday : 0 ;

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	74 0b		 je	 SHORT $LN3@GetDay
  0002b	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  0002e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00031	89 4d 8c	 mov	 DWORD PTR tv69[ebp], ecx
  00034	eb 07		 jmp	 SHORT $LN4@GetDay
$LN3@GetDay:
  00036	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@GetDay:
  0003d	8b 45 8c	 mov	 eax, DWORD PTR tv69[ebp]

; 681  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00046	33 cd		 xor	 ecx, ebp
  00048	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?GetDay@CTime@ATL@@QBEHXZ ENDP				; ATL::CTime::GetDay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetMonth@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
tv70 = -116						; size = 4
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetMonth@CTime@ATL@@QBEHXZ PROC			; ATL::CTime::GetMonth, COMDAT
; _this$ = ecx

; 666  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 	struct tm ttm;
; 668  : 	struct tm * ptm;
; 669  : 
; 670  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 671  : 	return ptm ? ptm->tm_mon + 1 : 0;

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	74 0e		 je	 SHORT $LN3@GetMonth
  0002b	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  0002e	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00031	83 c1 01	 add	 ecx, 1
  00034	89 4d 8c	 mov	 DWORD PTR tv70[ebp], ecx
  00037	eb 07		 jmp	 SHORT $LN4@GetMonth
$LN3@GetMonth:
  00039	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@GetMonth:
  00040	8b 45 8c	 mov	 eax, DWORD PTR tv70[ebp]

; 672  : }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00049	33 cd		 xor	 ecx, ebp
  0004b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?GetMonth@CTime@ATL@@QBEHXZ ENDP			; ATL::CTime::GetMonth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetYear@CTime@ATL@@QBEHXZ
_TEXT	SEGMENT
tv70 = -116						; size = 4
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetYear@CTime@ATL@@QBEHXZ PROC				; ATL::CTime::GetYear, COMDAT
; _this$ = ecx

; 657  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 658  : 	struct tm ttm;
; 659  : 	struct tm * ptm;
; 660  : 
; 661  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 662  : 	return ptm ? (ptm->tm_year) + 1900 : 0 ;

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	74 11		 je	 SHORT $LN3@GetYear
  0002b	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  0002e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00031	81 c1 6c 07 00
	00		 add	 ecx, 1900		; 0000076cH
  00037	89 4d 8c	 mov	 DWORD PTR tv70[ebp], ecx
  0003a	eb 07		 jmp	 SHORT $LN4@GetYear
$LN3@GetYear:
  0003c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@GetYear:
  00043	8b 45 8c	 mov	 eax, DWORD PTR tv70[ebp]

; 663  : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004c	33 cd		 xor	 ecx, ebp
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?GetYear@CTime@ATL@@QBEHXZ ENDP				; ATL::CTime::GetYear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z
_TEXT	SEGMENT
_ptm$ = -48						; size = 4
_ttm$ = -44						; size = 36
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_timeDest$ = 8						; size = 4
?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z PROC ; ATL::CTime::GetAsSystemTime, COMDAT
; _this$ = ecx

; 629  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 630  : 	struct tm ttm;
; 631  : 	struct tm* ptm;
; 632  : 
; 633  : 	ptm = GetLocalTm(&ttm);

  00016	8d 45 d4	 lea	 eax, DWORD PTR _ttm$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ; ATL::CTime::GetLocalTm
  00022	89 45 d0	 mov	 DWORD PTR _ptm$[ebp], eax

; 634  : 	if(!ptm)

  00025	83 7d d0 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  00029	75 04		 jne	 SHORT $LN2@GetAsSyste

; 635  : 	{
; 636  : 		return false;

  0002b	32 c0		 xor	 al, al
  0002d	eb 72		 jmp	 SHORT $LN1@GetAsSyste
$LN2@GetAsSyste:

; 637  : 	}
; 638  : 
; 639  : 	timeDest.wYear = (WORD) (1900 + ptm->tm_year);

  0002f	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  00032	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00035	81 c1 6c 07 00
	00		 add	 ecx, 1900		; 0000076cH
  0003b	8b 55 08	 mov	 edx, DWORD PTR _timeDest$[ebp]
  0003e	66 89 0a	 mov	 WORD PTR [edx], cx

; 640  : 	timeDest.wMonth = (WORD) (1 + ptm->tm_mon);

  00041	8b 45 d0	 mov	 eax, DWORD PTR _ptm$[ebp]
  00044	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00047	83 c1 01	 add	 ecx, 1
  0004a	8b 55 08	 mov	 edx, DWORD PTR _timeDest$[ebp]
  0004d	66 89 4a 02	 mov	 WORD PTR [edx+2], cx

; 641  : 	timeDest.wDayOfWeek = (WORD) ptm->tm_wday;

  00051	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  00054	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00057	66 8b 51 18	 mov	 dx, WORD PTR [ecx+24]
  0005b	66 89 50 04	 mov	 WORD PTR [eax+4], dx

; 642  : 	timeDest.wDay = (WORD) ptm->tm_mday;

  0005f	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  00062	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00065	66 8b 51 0c	 mov	 dx, WORD PTR [ecx+12]
  00069	66 89 50 06	 mov	 WORD PTR [eax+6], dx

; 643  : 	timeDest.wHour = (WORD) ptm->tm_hour;

  0006d	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  00070	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00073	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00077	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 644  : 	timeDest.wMinute = (WORD) ptm->tm_min;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  0007e	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  00081	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  00085	66 89 50 0a	 mov	 WORD PTR [eax+10], dx

; 645  : 	timeDest.wSecond = (WORD) ptm->tm_sec;

  00089	8b 45 08	 mov	 eax, DWORD PTR _timeDest$[ebp]
  0008c	8b 4d d0	 mov	 ecx, DWORD PTR _ptm$[ebp]
  0008f	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00092	66 89 50 0c	 mov	 WORD PTR [eax+12], dx

; 646  : 	timeDest.wMilliseconds = 0;

  00096	33 c0		 xor	 eax, eax
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _timeDest$[ebp]
  0009b	66 89 41 0e	 mov	 WORD PTR [ecx+14], ax

; 647  : 
; 648  : 	return true;

  0009f	b0 01		 mov	 al, 1
$LN1@GetAsSyste:

; 649  : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a7	33 cd		 xor	 ecx, ebp
  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 04 00	 ret	 4
?GetAsSystemTime@CTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ENDP ; ATL::CTime::GetAsSystemTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z
_TEXT	SEGMENT
tv65 = -120						; size = 4
_err$1 = -52						; size = 4
_ptmTemp$2 = -48					; size = 36
___atl_condVal$3 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ptm$ = 8						; size = 4
?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z PROC		; ATL::CTime::GetLocalTm, COMDAT
; _this$ = ecx

; 607  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@GetLocalTm:

; 608  : 	// Ensure ptm is valid
; 609  : 	ATLENSURE( ptm != NULL );

  00016	83 7d 08 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  0001a	74 09		 je	 SHORT $LN12@GetLocalTm
  0001c	c7 45 88 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00023	eb 07		 jmp	 SHORT $LN13@GetLocalTm
$LN12@GetLocalTm:
  00025	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN13@GetLocalTm:
  0002c	8b 45 88	 mov	 eax, DWORD PTR tv65[ebp]
  0002f	89 45 f4	 mov	 DWORD PTR ___atl_condVal$3[ebp], eax
$LN7@GetLocalTm:
  00032	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  00036	75 2b		 jne	 SHORT $LN5@GetLocalTm
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00042	6a 00		 push	 0
  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU4@@Z@4JA
  00049	83 c0 02	 add	 eax, 2
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00052	6a 02		 push	 2
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN5@GetLocalTm
  00062	cc		 int	 3
$LN5@GetLocalTm:
  00063	33 c0		 xor	 eax, eax
  00065	75 cb		 jne	 SHORT $LN7@GetLocalTm
  00067	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  0006b	75 0a		 jne	 SHORT $LN2@GetLocalTm
  0006d	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00072	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@GetLocalTm:
  00077	33 c0		 xor	 eax, eax
  00079	75 9b		 jne	 SHORT $LN4@GetLocalTm

; 610  : 
; 611  : 	if (ptm != NULL)

  0007b	83 7d 08 00	 cmp	 DWORD PTR _ptm$[ebp], 0
  0007f	74 30		 je	 SHORT $LN9@GetLocalTm

; 612  : 	{
; 613  : 		struct tm ptmTemp;
; 614  : 		errno_t err = _localtime64_s(&ptmTemp, &m_time);

  00081	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00084	50		 push	 eax
  00085	8d 4d d0	 lea	 ecx, DWORD PTR _ptmTemp$2[ebp]
  00088	51		 push	 ecx
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___localtime64_s
  0008f	83 c4 08	 add	 esp, 8
  00092	89 45 cc	 mov	 DWORD PTR _err$1[ebp], eax

; 615  : 
; 616  : 		if (err != 0)

  00095	83 7d cc 00	 cmp	 DWORD PTR _err$1[ebp], 0
  00099	74 04		 je	 SHORT $LN10@GetLocalTm

; 617  : 		{
; 618  : 			return NULL;    // indicates that m_time was not initialized!

  0009b	33 c0		 xor	 eax, eax
  0009d	eb 14		 jmp	 SHORT $LN11@GetLocalTm
$LN10@GetLocalTm:

; 619  : 		}
; 620  : 
; 621  : 		*ptm = ptmTemp;

  0009f	b9 09 00 00 00	 mov	 ecx, 9
  000a4	8d 75 d0	 lea	 esi, DWORD PTR _ptmTemp$2[ebp]
  000a7	8b 7d 08	 mov	 edi, DWORD PTR _ptm$[ebp]
  000aa	f3 a5		 rep movsd

; 622  : 		return ptm;

  000ac	8b 45 08	 mov	 eax, DWORD PTR _ptm$[ebp]
  000af	eb 02		 jmp	 SHORT $LN11@GetLocalTm
$LN9@GetLocalTm:

; 623  : 	}
; 624  : 
; 625  : 	return NULL;

  000b1	33 c0		 xor	 eax, eax
$LN11@GetLocalTm:

; 626  : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b9	33 cd		 xor	 ecx, ebp
  000bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 04 00	 ret	 4
?GetLocalTm@CTime@ATL@@QBEPAUtm@@PAU3@@Z ENDP		; ATL::CTime::GetLocalTm
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_time$ = 12						; size = 8
??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z PROC		; ATL::CTime::operator-, COMDAT
; _this$ = ecx

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 543  : 	return( CTimeSpan( m_time-time.m_time ) );

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	2b 4d 0c	 sub	 ecx, DWORD PTR _time$[ebp]
  00014	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00017	1b 55 10	 sbb	 edx, DWORD PTR _time$[ebp+4]
  0001a	52		 push	 edx
  0001b	51		 push	 ecx
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	e8 00 00 00 00	 call	 ??0CTimeSpan@ATL@@QAE@_J@Z ; ATL::CTimeSpan::CTimeSpan
  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 544  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
??GCTime@ATL@@QBE?AVCTimeSpan@1@V01@@Z ENDP		; ATL::CTime::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ??0CTime@ATL@@QAE@HHHHHHH@Z
_TEXT	SEGMENT
tv287 = -136						; size = 4
tv276 = -136						; size = 4
tv187 = -136						; size = 4
tv169 = -136						; size = 4
tv151 = -136						; size = 4
tv133 = -136						; size = 4
tv83 = -136						; size = 4
tv65 = -136						; size = 4
_atm$ = -68						; size = 36
___atl_condVal$1 = -32					; size = 4
___atl_condVal$2 = -28					; size = 4
___atl_condVal$3 = -24					; size = 4
___atl_condVal$4 = -20					; size = 4
___atl_condVal$5 = -16					; size = 4
___atl_condVal$6 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_nYear$ = 8						; size = 4
_nMonth$ = 12						; size = 4
_nDay$ = 16						; size = 4
_nHour$ = 20						; size = 4
_nMin$ = 24						; size = 4
_nSec$ = 28						; size = 4
_nDST$ = 32						; size = 4
??0CTime@ATL@@QAE@HHHHHHH@Z PROC			; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 429  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@CTime:

; 430  : #pragma warning (push)
; 431  : #pragma warning (disable: 4127)  // conditional expression constant
; 432  : 
; 433  : 	ATLENSURE( nYear >= 1970 );

  00019	81 7d 08 b2 07
	00 00		 cmp	 DWORD PTR _nYear$[ebp], 1970 ; 000007b2H
  00020	7c 0c		 jl	 SHORT $LN49@CTime
  00022	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  0002c	eb 0a		 jmp	 SHORT $LN50@CTime
$LN49@CTime:
  0002e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN50@CTime:
  00038	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv65[ebp]
  0003e	89 45 f4	 mov	 DWORD PTR ___atl_condVal$6[ebp], eax
$LN7@CTime:
  00041	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  00045	75 2b		 jne	 SHORT $LN5@CTime
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00051	6a 00		 push	 0
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  00058	83 c0 04	 add	 eax, 4
  0005b	50		 push	 eax
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00061	6a 02		 push	 2
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	83 f8 01	 cmp	 eax, 1
  0006f	75 01		 jne	 SHORT $LN5@CTime
  00071	cc		 int	 3
$LN5@CTime:
  00072	33 c0		 xor	 eax, eax
  00074	75 cb		 jne	 SHORT $LN7@CTime
  00076	83 7d f4 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  0007a	75 0a		 jne	 SHORT $LN2@CTime
  0007c	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00081	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@CTime:
  00086	33 c0		 xor	 eax, eax
  00088	75 8f		 jne	 SHORT $LN4@CTime
$LN10@CTime:

; 434  : 	ATLENSURE( nMonth >= 1 && nMonth <= 12 );

  0008a	83 7d 0c 01	 cmp	 DWORD PTR _nMonth$[ebp], 1
  0008e	7c 12		 jl	 SHORT $LN52@CTime
  00090	83 7d 0c 0c	 cmp	 DWORD PTR _nMonth$[ebp], 12 ; 0000000cH
  00094	7f 0c		 jg	 SHORT $LN52@CTime
  00096	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv83[ebp], 1
  000a0	eb 0a		 jmp	 SHORT $LN53@CTime
$LN52@CTime:
  000a2	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN53@CTime:
  000ac	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b2	89 45 f0	 mov	 DWORD PTR ___atl_condVal$5[ebp], eax
$LN13@CTime:
  000b5	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$5[ebp], 0
  000b9	75 2b		 jne	 SHORT $LN11@CTime
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000c5	6a 00		 push	 0
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  000cc	83 c0 05	 add	 eax, 5
  000cf	50		 push	 eax
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  000d5	6a 02		 push	 2
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000dd	83 c4 18	 add	 esp, 24			; 00000018H
  000e0	83 f8 01	 cmp	 eax, 1
  000e3	75 01		 jne	 SHORT $LN11@CTime
  000e5	cc		 int	 3
$LN11@CTime:
  000e6	33 c0		 xor	 eax, eax
  000e8	75 cb		 jne	 SHORT $LN13@CTime
  000ea	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$5[ebp], 0
  000ee	75 0a		 jne	 SHORT $LN8@CTime
  000f0	68 05 40 00 80	 push	 -2147467259		; 80004005H
  000f5	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN8@CTime:
  000fa	33 c0		 xor	 eax, eax
  000fc	75 8c		 jne	 SHORT $LN10@CTime
$LN16@CTime:

; 435  : 	ATLENSURE( nDay >= 1 && nDay <= 31 );

  000fe	83 7d 10 01	 cmp	 DWORD PTR _nDay$[ebp], 1
  00102	7c 12		 jl	 SHORT $LN55@CTime
  00104	83 7d 10 1f	 cmp	 DWORD PTR _nDay$[ebp], 31 ; 0000001fH
  00108	7f 0c		 jg	 SHORT $LN55@CTime
  0010a	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv133[ebp], 1
  00114	eb 0a		 jmp	 SHORT $LN56@CTime
$LN55@CTime:
  00116	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN56@CTime:
  00120	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv133[ebp]
  00126	89 45 ec	 mov	 DWORD PTR ___atl_condVal$4[ebp], eax
$LN19@CTime:
  00129	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  0012d	75 2b		 jne	 SHORT $LN17@CTime
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00139	6a 00		 push	 0
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  00140	83 c0 06	 add	 eax, 6
  00143	50		 push	 eax
  00144	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00149	6a 02		 push	 2
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00151	83 c4 18	 add	 esp, 24			; 00000018H
  00154	83 f8 01	 cmp	 eax, 1
  00157	75 01		 jne	 SHORT $LN17@CTime
  00159	cc		 int	 3
$LN17@CTime:
  0015a	33 c0		 xor	 eax, eax
  0015c	75 cb		 jne	 SHORT $LN19@CTime
  0015e	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  00162	75 0a		 jne	 SHORT $LN14@CTime
  00164	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00169	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN14@CTime:
  0016e	33 c0		 xor	 eax, eax
  00170	75 8c		 jne	 SHORT $LN16@CTime
$LN22@CTime:

; 436  : 	ATLENSURE( nHour >= 0 && nHour <= 23 );

  00172	83 7d 14 00	 cmp	 DWORD PTR _nHour$[ebp], 0
  00176	7c 12		 jl	 SHORT $LN58@CTime
  00178	83 7d 14 17	 cmp	 DWORD PTR _nHour$[ebp], 23 ; 00000017H
  0017c	7f 0c		 jg	 SHORT $LN58@CTime
  0017e	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv151[ebp], 1
  00188	eb 0a		 jmp	 SHORT $LN59@CTime
$LN58@CTime:
  0018a	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv151[ebp], 0
$LN59@CTime:
  00194	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv151[ebp]
  0019a	89 45 e8	 mov	 DWORD PTR ___atl_condVal$3[ebp], eax
$LN25@CTime:
  0019d	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  001a1	75 2b		 jne	 SHORT $LN23@CTime
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001ad	6a 00		 push	 0
  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  001b4	83 c0 07	 add	 eax, 7
  001b7	50		 push	 eax
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  001bd	6a 02		 push	 2
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  001c5	83 c4 18	 add	 esp, 24			; 00000018H
  001c8	83 f8 01	 cmp	 eax, 1
  001cb	75 01		 jne	 SHORT $LN23@CTime
  001cd	cc		 int	 3
$LN23@CTime:
  001ce	33 c0		 xor	 eax, eax
  001d0	75 cb		 jne	 SHORT $LN25@CTime
  001d2	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  001d6	75 0a		 jne	 SHORT $LN20@CTime
  001d8	68 05 40 00 80	 push	 -2147467259		; 80004005H
  001dd	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN20@CTime:
  001e2	33 c0		 xor	 eax, eax
  001e4	75 8c		 jne	 SHORT $LN22@CTime
$LN28@CTime:

; 437  : 	ATLENSURE( nMin >= 0 && nMin <= 59 );

  001e6	83 7d 18 00	 cmp	 DWORD PTR _nMin$[ebp], 0
  001ea	7c 12		 jl	 SHORT $LN61@CTime
  001ec	83 7d 18 3b	 cmp	 DWORD PTR _nMin$[ebp], 59 ; 0000003bH
  001f0	7f 0c		 jg	 SHORT $LN61@CTime
  001f2	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv169[ebp], 1
  001fc	eb 0a		 jmp	 SHORT $LN62@CTime
$LN61@CTime:
  001fe	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN62@CTime:
  00208	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv169[ebp]
  0020e	89 45 e4	 mov	 DWORD PTR ___atl_condVal$2[ebp], eax
$LN31@CTime:
  00211	83 7d e4 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  00215	75 2b		 jne	 SHORT $LN29@CTime
  00217	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0021c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00221	6a 00		 push	 0
  00223	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  00228	83 c0 08	 add	 eax, 8
  0022b	50		 push	 eax
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00231	6a 02		 push	 2
  00233	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00239	83 c4 18	 add	 esp, 24			; 00000018H
  0023c	83 f8 01	 cmp	 eax, 1
  0023f	75 01		 jne	 SHORT $LN29@CTime
  00241	cc		 int	 3
$LN29@CTime:
  00242	33 c0		 xor	 eax, eax
  00244	75 cb		 jne	 SHORT $LN31@CTime
  00246	83 7d e4 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  0024a	75 0a		 jne	 SHORT $LN26@CTime
  0024c	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00251	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN26@CTime:
  00256	33 c0		 xor	 eax, eax
  00258	75 8c		 jne	 SHORT $LN28@CTime
$LN34@CTime:

; 438  : 	ATLENSURE( nSec >= 0 && nSec <= 59 );

  0025a	83 7d 1c 00	 cmp	 DWORD PTR _nSec$[ebp], 0
  0025e	7c 12		 jl	 SHORT $LN64@CTime
  00260	83 7d 1c 3b	 cmp	 DWORD PTR _nSec$[ebp], 59 ; 0000003bH
  00264	7f 0c		 jg	 SHORT $LN64@CTime
  00266	c7 85 78 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv187[ebp], 1
  00270	eb 0a		 jmp	 SHORT $LN65@CTime
$LN64@CTime:
  00272	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv187[ebp], 0
$LN65@CTime:
  0027c	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv187[ebp]
  00282	89 45 e0	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
$LN37@CTime:
  00285	83 7d e0 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  00289	75 2b		 jne	 SHORT $LN35@CTime
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00295	6a 00		 push	 0
  00297	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  0029c	83 c0 09	 add	 eax, 9
  0029f	50		 push	 eax
  002a0	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  002a5	6a 02		 push	 2
  002a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  002ad	83 c4 18	 add	 esp, 24			; 00000018H
  002b0	83 f8 01	 cmp	 eax, 1
  002b3	75 01		 jne	 SHORT $LN35@CTime
  002b5	cc		 int	 3
$LN35@CTime:
  002b6	33 c0		 xor	 eax, eax
  002b8	75 cb		 jne	 SHORT $LN37@CTime
  002ba	83 7d e0 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  002be	75 0a		 jne	 SHORT $LN32@CTime
  002c0	68 05 40 00 80	 push	 -2147467259		; 80004005H
  002c5	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN32@CTime:
  002ca	33 c0		 xor	 eax, eax
  002cc	75 8c		 jne	 SHORT $LN34@CTime

; 439  : 
; 440  : #pragma warning (pop)
; 441  : 
; 442  : 	struct tm atm;
; 443  : 
; 444  : 	atm.tm_sec = nSec;

  002ce	8b 45 1c	 mov	 eax, DWORD PTR _nSec$[ebp]
  002d1	89 45 bc	 mov	 DWORD PTR _atm$[ebp], eax

; 445  : 	atm.tm_min = nMin;

  002d4	8b 45 18	 mov	 eax, DWORD PTR _nMin$[ebp]
  002d7	89 45 c0	 mov	 DWORD PTR _atm$[ebp+4], eax

; 446  : 	atm.tm_hour = nHour;

  002da	8b 45 14	 mov	 eax, DWORD PTR _nHour$[ebp]
  002dd	89 45 c4	 mov	 DWORD PTR _atm$[ebp+8], eax

; 447  : 	atm.tm_mday = nDay;

  002e0	8b 45 10	 mov	 eax, DWORD PTR _nDay$[ebp]
  002e3	89 45 c8	 mov	 DWORD PTR _atm$[ebp+12], eax

; 448  : 	atm.tm_mon = nMonth - 1;        // tm_mon is 0 based

  002e6	8b 45 0c	 mov	 eax, DWORD PTR _nMonth$[ebp]
  002e9	83 e8 01	 sub	 eax, 1
  002ec	89 45 cc	 mov	 DWORD PTR _atm$[ebp+16], eax

; 449  : 	atm.tm_year = nYear - 1900;     // tm_year is 1900 based

  002ef	8b 45 08	 mov	 eax, DWORD PTR _nYear$[ebp]
  002f2	2d 6c 07 00 00	 sub	 eax, 1900		; 0000076cH
  002f7	89 45 d0	 mov	 DWORD PTR _atm$[ebp+20], eax

; 450  : 	atm.tm_isdst = nDST;

  002fa	8b 45 20	 mov	 eax, DWORD PTR _nDST$[ebp]
  002fd	89 45 dc	 mov	 DWORD PTR _atm$[ebp+32], eax

; 451  : 
; 452  : 	m_time = _mktime64(&atm);

  00300	8d 45 bc	 lea	 eax, DWORD PTR _atm$[ebp]
  00303	50		 push	 eax
  00304	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mktime64
  0030a	83 c4 04	 add	 esp, 4
  0030d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00310	89 01		 mov	 DWORD PTR [ecx], eax
  00312	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN40@CTime:

; 453  : 	ATLASSUME(m_time != -1);       // indicates an illegal input time

  00315	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00318	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv276[ebp], eax
  0031e	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv276[ebp]
  00324	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv276[ebp]
  0032a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0032c	23 42 04	 and	 eax, DWORD PTR [edx+4]
  0032f	83 f8 ff	 cmp	 eax, -1
  00332	75 2c		 jne	 SHORT $LN38@CTime
  00334	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHHHCKNA@?$AAm?$AA_?$AAt?$AAi?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?9?$AA1@
  00339	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0033e	6a 00		 push	 0
  00340	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???0CTime@ATL@@QAE@HHHHHHH@Z@4JA
  00346	83 c1 18	 add	 ecx, 24			; 00000018H
  00349	51		 push	 ecx
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@IALJLBM@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0034f	6a 02		 push	 2
  00351	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00357	83 c4 18	 add	 esp, 24			; 00000018H
  0035a	83 f8 01	 cmp	 eax, 1
  0035d	75 01		 jne	 SHORT $LN38@CTime
  0035f	cc		 int	 3
$LN38@CTime:
  00360	33 c0		 xor	 eax, eax
  00362	75 b1		 jne	 SHORT $LN40@CTime

; 454  : 	if(m_time == -1)

  00364	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00367	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv287[ebp], eax
  0036d	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv287[ebp]
  00373	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv287[ebp]
  00379	8b 01		 mov	 eax, DWORD PTR [ecx]
  0037b	23 42 04	 and	 eax, DWORD PTR [edx+4]
  0037e	83 f8 ff	 cmp	 eax, -1
  00381	75 0a		 jne	 SHORT $LN1@CTime

; 455  : 	{
; 456  : 		AtlThrow(E_INVALIDARG);

  00383	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00388	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN1@CTime:

; 457  : 	}
; 458  : }

  0038d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN48@CTime:
  00390	5f		 pop	 edi
  00391	5e		 pop	 esi
  00392	5b		 pop	 ebx
  00393	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00396	33 cd		 xor	 ecx, ebp
  00398	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0039d	8b e5		 mov	 esp, ebp
  0039f	5d		 pop	 ebp
  003a0	c2 1c 00	 ret	 28			; 0000001cH
??0CTime@ATL@@QAE@HHHHHHH@Z ENDP			; ATL::CTime::CTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ??0CTime@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTime@ATL@@QAE@XZ PROC				; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 412  : 	m_time(0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 414  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0CTime@ATL@@QAE@XZ ENDP				; ATL::CTime::CTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ PROC		; ATL::CTimeSpan::GetTimeSpan, COMDAT
; _this$ = ecx

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 313  : 	return( m_timeSpan );

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]

; 314  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetTimeSpan@CTimeSpan@ATL@@QBE_JXZ ENDP		; ATL::CTimeSpan::GetTimeSpan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ??0CTimeSpan@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 8
??0CTimeSpan@ATL@@QAE@_J@Z PROC				; ATL::CTimeSpan::CTimeSpan, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 263  : 	m_timeSpan( time )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _time$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 55 0c	 mov	 edx, DWORD PTR _time$[ebp+4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 265  : }

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??0CTimeSpan@ATL@@QAE@_J@Z ENDP				; ATL::CTimeSpan::CTimeSpan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltime.h
;	COMDAT ??0CTimeSpan@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTimeSpan@ATL@@QAE@XZ PROC				; ATL::CTimeSpan::CTimeSpan, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 258  : 	m_timeSpan(0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 260  : }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0CTimeSpan@ATL@@QAE@XZ ENDP				; ATL::CTimeSpan::CTimeSpan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
_TEXT	SEGMENT
_ptr$ = -20						; size = 4
_ple$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 421  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 422  : 		CPreserveLastError ple;

  00028	8d 4d f0	 lea	 ecx, DWORD PTR _ple$[ebp]
  0002b	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::CPreserveLastError
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 423  : 		va_list ptr; va_start(ptr, pszFmt);

  00037	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  0003a	89 45 ec	 mov	 DWORD PTR _ptr$[ebp], eax

; 424  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  0003d	8b 45 ec	 mov	 eax, DWORD PTR _ptr$[ebp]
  00040	50		 push	 eax
  00041	8b 4d 14	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  00044	51		 push	 ecx
  00045	8b 55 10	 mov	 edx, DWORD PTR _nLevel$[ebp]
  00048	52		 push	 edx
  00049	8b 45 0c	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00053	52		 push	 edx
  00054	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	51		 push	 ecx
  0005a	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ; ATL::CTrace::TraceV
  0005f	83 c4 18	 add	 esp, 24			; 00000018H

; 425  : 		va_end(ptr);

  00062	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 426  : 	}

  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8d 4d f0	 lea	 ecx, DWORD PTR _ple$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _ple$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
__ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 411  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _nLineNo$[ebp]
  0001a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 412  : 	}

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx

; 396  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 397  : 		SetLastError(m_dwLastError);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 398  : 	}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx

; 390  : 	CPreserveLastError()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	89 01		 mov	 DWORD PTR [ecx], eax

; 393  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = -8						; size = 4
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  00013	6a 01		 push	 1
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	50		 push	 eax
  00019	8d 4d f8	 lea	 ecx, DWORD PTR _nBytes$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
  00025	85 c0		 test	 eax, eax
  00027	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00029	32 c0		 xor	 al, al
  0002b	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 435  : 	{

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>

; 436  : 	}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00017	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	74 27		 je	 SHORT $LN4@AllocateBy
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001e	6a 00		 push	 0
  00020	68 7e 01 00 00	 push	 382			; 0000017eH
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 01		 jne	 SHORT $LN4@AllocateBy
  0003a	cc		 int	 3
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0003b	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00044	83 c4 04	 add	 esp, 4
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00052	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00054	32 c0		 xor	 al, al
  00056	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00058	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 350  : 		Free();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free

; 351  : 	}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = -8						; size = 4
_this$ = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  00013	6a 02		 push	 2
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	50		 push	 eax
  00019	8d 4d f8	 lea	 ecx, DWORD PTR _nBytes$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH
  00025	85 c0		 test	 eax, eax
  00027	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00029	32 c0		 xor	 al, al
  0002b	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 435  : 	{

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>

; 436  : 	}

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPAX@Z ; ATL::CCRTAllocator::Free
  00017	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	74 27		 je	 SHORT $LN4@AllocateBy
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001e	6a 00		 push	 0
  00020	68 7e 01 00 00	 push	 382			; 0000017eH
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 01		 jne	 SHORT $LN4@AllocateBy
  0003a	cc		 int	 3
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0003b	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ; ATL::CCRTAllocator::Allocate
  00044	83 c4 04	 add	 esp, 4
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00052	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00054	32 c0		 xor	 al, al
  00056	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00058	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 350  : 		Free();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
_TEXT	SEGMENT
_wszBuf$ = -24						; size = 4
_szBuf$ = -20						; size = 4
_cchNeeded$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 239  : 		int cchNeeded = _vscprintf(pszFmt, args);

  00028	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 __vscprintf
  00035	83 c4 08	 add	 esp, 8
  00038	89 45 f0	 mov	 DWORD PTR _cchNeeded$[ebp], eax

; 240  : 		if (cchNeeded < 0)

  0003b	83 7d f0 00	 cmp	 DWORD PTR _cchNeeded$[ebp], 0
  0003f	7d 05		 jge	 SHORT $LN2@TraceV

; 241  : 		{
; 242  : 			return;

  00041	e9 64 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 243  : 		}
; 244  : 
; 245  : 		CHeapPtr<char> szBuf;

  00046	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 246  : 		if (!szBuf.Allocate(cchNeeded + 1))

  00055	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  00058	83 c0 01	 add	 eax, 1
  0005b	50		 push	 eax
  0005c	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  0005f	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
  00064	0f b6 c8	 movzx	 ecx, al
  00067	85 c9		 test	 ecx, ecx
  00069	75 14		 jne	 SHORT $LN3@TraceV

; 247  : 		{
; 248  : 			return;

  0006b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00072	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00075	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0007a	e9 2b 01 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 249  : 		}
; 250  : 
; 251  : 		szBuf[0] = '\0';

  0007f	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00082	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  00087	b9 01 00 00 00	 mov	 ecx, 1
  0008c	6b d1 00	 imul	 edx, ecx, 0
  0008f	c6 04 10 00	 mov	 BYTE PTR [eax+edx], 0

; 252  : 
; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  00093	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  00096	50		 push	 eax
  00097	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0009a	51		 push	 ecx
  0009b	8b 55 f0	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  0009e	52		 push	 edx
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  000a2	83 c0 01	 add	 eax, 1
  000a5	50		 push	 eax
  000a6	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  000a9	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 __vsnprintf_s
  000b4	83 c4 14	 add	 esp, 20			; 00000014H
  000b7	83 f8 ff	 cmp	 eax, -1
  000ba	75 14		 jne	 SHORT $LN4@TraceV

; 254  : 		{
; 255  : 			return;

  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c3	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  000c6	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  000cb	e9 da 00 00 00	 jmp	 $LN1@TraceV
$LN4@TraceV:

; 256  : 		}
; 257  : 
; 258  : 		CHeapPtr<wchar_t> wszBuf;

  000d0	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000d3	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
  000d8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 259  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  000dc	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  000df	83 c0 01	 add	 eax, 1
  000e2	50		 push	 eax
  000e3	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000e6	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  000eb	0f b6 c8	 movzx	 ecx, al
  000ee	85 c9		 test	 ecx, ecx
  000f0	75 20		 jne	 SHORT $LN5@TraceV

; 260  : 		{
; 261  : 			return;

  000f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000f6	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000f9	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  000fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00105	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00108	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0010d	e9 98 00 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 262  : 		}
; 263  : 
; 264  : 		wszBuf[0] = '\0';

  00112	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00115	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  0011a	b9 02 00 00 00	 mov	 ecx, 2
  0011f	6b d1 00	 imul	 edx, ecx, 0
  00122	33 c9		 xor	 ecx, ecx
  00124	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 265  : 
; 266  : 		if (::MultiByteToWideChar(CP_ACP, 0, szBuf, -1, wszBuf, cchNeeded + 1) == 0)

  00128	8b 45 f0	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  0012b	83 c0 01	 add	 eax, 1
  0012e	50		 push	 eax
  0012f	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00132	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00137	50		 push	 eax
  00138	6a ff		 push	 -1
  0013a	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  0013d	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  00142	50		 push	 eax
  00143	6a 00		 push	 0
  00145	6a 00		 push	 0
  00147	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0014d	85 c0		 test	 eax, eax
  0014f	75 1d		 jne	 SHORT $LN6@TraceV

; 267  : 		{
; 268  : 			return;

  00151	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00155	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00158	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0015d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00164	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00167	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0016c	eb 3c		 jmp	 SHORT $LN1@TraceV
$LN6@TraceV:

; 269  : 		}
; 270  : 
; 271  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  0016e	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00171	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00176	50		 push	 eax
  00177	8b 45 14	 mov	 eax, DWORD PTR _nLevel$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d 10	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  0017e	51		 push	 ecx
  0017f	8b 55 0c	 mov	 edx, DWORD PTR _nLine$[ebp]
  00182	52		 push	 edx
  00183	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ; ATL::CTrace::TraceV
  0018c	83 c4 14	 add	 esp, 20			; 00000014H

; 272  : 	}

  0018f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00193	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00196	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0019b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a2	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  001a5	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
  001aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b4	59		 pop	 ecx
  001b5	5f		 pop	 edi
  001b6	5e		 pop	 esi
  001b7	5b		 pop	 ebx
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_fileName$ = -2588					; size = 520
_wszBuf$ = -2068					; size = 4
_chCount$ = -2064					; size = 4
_pwszCategoryName$ = -2060				; size = 4
_categoryLength$ = -2056				; size = 4
_wszCategory$ = -2052					; size = 2048
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 0b 00
	00		 sub	 esp, 2972		; 00000b9cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00016	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel
  0001d	74 14		 je	 SHORT $LN3@TraceV
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
  00024	3b 45 14	 cmp	 eax, DWORD PTR _nLevel$[ebp]
  00027	72 0a		 jb	 SHORT $LN3@TraceV
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  0002e	23 45 10	 and	 eax, DWORD PTR _dwCategory$[ebp]
  00031	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00033	e9 c2 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00038	68 00 08 00 00	 push	 2048			; 00000800H
  0003d	6a 00		 push	 0
  0003f	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 		int categoryLength = 0;

  0004e	c7 85 f8 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _categoryLength$[ebp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00058	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ; ATL::CTrace::GetCategoryName
  00061	83 c4 04	 add	 esp, 4
  00064	89 85 f4 f7 ff
	ff		 mov	 DWORD PTR _pwszCategoryName$[ebp], eax

; 159  : 		if (pwszCategoryName != nullptr)

  0006a	83 bd f4 f7 ff
	ff 00		 cmp	 DWORD PTR _pwszCategoryName$[ebp], 0
  00071	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  00073	8b 85 f4 f7 ff
	ff		 mov	 eax, DWORD PTR _pwszCategoryName$[ebp]
  00079	50		 push	 eax
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  0007f	68 00 04 00 00	 push	 1024			; 00000400H
  00084	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 _swprintf_s
  00090	83 c4 10	 add	 esp, 16			; 00000010H
  00093	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  00099	83 bd f8 f7 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000a0	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000a2	e9 53 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}
; 166  : 		else

  000a7	eb 31		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000a9	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  000b2	68 00 04 00 00	 push	 1024			; 00000400H
  000b7	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 _swprintf_s
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	89 85 f8 f7 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  000cc	83 bd f8 f7 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000d3	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  000d5	e9 20 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  000da	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  000e4	83 c4 04	 add	 esp, 4
  000e7	8b 8d f8 f7 ff
	ff		 mov	 ecx, DWORD PTR _categoryLength$[ebp]
  000ed	8d 54 08 01	 lea	 edx, DWORD PTR [eax+ecx+1]
  000f1	89 95 f0 f7 ff
	ff		 mov	 DWORD PTR _chCount$[ebp], edx

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  000f7	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000fd	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 176  : 		if (!wszBuf.Allocate(chCount))

  00102	8b 85 f0 f7 ff
	ff		 mov	 eax, DWORD PTR _chCount$[ebp]
  00108	50		 push	 eax
  00109	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0010f	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00114	0f b6 c8	 movzx	 ecx, al
  00117	85 c9		 test	 ecx, ecx
  00119	75 10		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  0011b	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00121	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  00126	e9 cf 00 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  0012b	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00131	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00136	b9 02 00 00 00	 mov	 ecx, 2
  0013b	6b d1 00	 imul	 edx, ecx, 0
  0013e	33 c9		 xor	 ecx, ecx
  00140	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00144	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  00147	50		 push	 eax
  00148	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0014e	51		 push	 ecx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  00154	8b 95 f0 f7 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0015a	52		 push	 edx
  0015b	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00161	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 _swprintf_s
  0016c	83 c4 14	 add	 esp, 20			; 00000014H
  0016f	83 f8 ff	 cmp	 eax, -1
  00172	75 0d		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  00174	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0017a	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  0017f	eb 79		 jmp	 SHORT $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  00181	68 08 02 00 00	 push	 520			; 00000208H
  00186	6a 00		 push	 0
  00188	8d 85 e4 f5 ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 _memset
  00194	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00197	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  0019a	50		 push	 eax
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  001a0	68 04 01 00 00	 push	 260			; 00000104H
  001a5	8d 8d e4 f5 ff
	ff		 lea	 ecx, DWORD PTR _fileName$[ebp]
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 _swprintf_s
  001b1	83 c4 10	 add	 esp, 16			; 00000010H
  001b4	83 f8 ff	 cmp	 eax, -1
  001b7	75 0d		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  001b9	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001bf	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
  001c4	eb 34		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  001c6	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001cc	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001d1	50		 push	 eax
  001d2	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  001d7	6a 00		 push	 0
  001d9	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  001dc	50		 push	 eax
  001dd	8d 8d e4 f5 ff
	ff		 lea	 ecx, DWORD PTR _fileName$[ebp]
  001e3	51		 push	 ecx
  001e4	6a 00		 push	 0
  001e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  001ec	83 c4 18	 add	 esp, 24			; 00000018H

; 199  : 	}

  001ef	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001f5	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
$LN1@TraceV:
  001fa	5f		 pop	 edi
  001fb	5e		 pop	 esi
  001fc	5b		 pop	 ebx
  001fd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00200	33 cd		 xor	 ecx, ebp
  00202	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00207	8b e5		 mov	 esp, ebp
  00209	5d		 pop	 ebp
  0020a	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@GetCategor:
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  0001e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00024	73 22		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00026	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  0002d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax]
  00033	3b 4d 08	 cmp	 ecx, DWORD PTR _nCategory$[ebp]
  00036	75 0e		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00038	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  0003f	05 04 00 00 00	 add	 eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  00044	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  00046	eb ca		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  00048	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0000c	b8 00 20 00 00	 mov	 eax, 8192		; 00002000H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 267  : 		free(p);

  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00013	83 c4 04	 add	 esp, 4

; 268  : 	}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 262  : 		return malloc(nBytes);

  00009	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00013	83 c4 04	 add	 esp, 4

; 263  : 	}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  0000c	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  00012	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00015	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00019	77 06		 ja	 SHORT $LN4@AtlMultipl
  0001b	83 7d f8 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001f	76 0f		 jbe	 SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:

; 138  : 	{
; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00021	68 16 02 00 00	 push	 534			; 00000216H
  00026	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0002b	83 c4 04	 add	 esp, 4
  0002e	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  00030	8b 45 f8	 mov	 eax, DWORD PTR _i64Result$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00036	89 01		 mov	 DWORD PTR [ecx], eax

; 142  : 	return S_OK;

  00038	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 143  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T1 = -72						; size = 8
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 66   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  00009	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0000c	50		 push	 eax
  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@
  00012	6a 00		 push	 0
  00014	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00019	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
  0001e	50		 push	 eax
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??AtlThrowImpl@ATL@@YGXJ@Z@4JA
  00025	83 c1 01	 add	 ecx, 1
  00028	51		 push	 ecx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002e	8d 4d b8	 lea	 ecx, DWORD PTR $T1[ebp]
  00031	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  0003c	83 c4 14	 add	 esp, 20			; 00000014H

; 67   : #ifdef _AFX
; 68   : 	if( hr == E_OUTOFMEMORY )

  0003f	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00046	75 07		 jne	 SHORT $LN2@AtlThrowIm

; 69   : 	{
; 70   : 		AfxThrowMemoryException();

  00048	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException

; 71   : 	}
; 72   : 	else

  0004d	eb 09		 jmp	 SHORT $LN4@AtlThrowIm
$LN2@AtlThrowIm:

; 73   : 	{
; 74   : 		AfxThrowOleException( hr );

  0004f	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$LN4@AtlThrowIm:

; 75   : 	}
; 76   : #else
; 77   : 	throw CAtlException( hr );
; 78   : #endif
; 79   : };

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
__ArgList$ = 12						; size = 4
__vscprintf PROC					; COMDAT

; 1675 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 __vscprintf_l
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1677 :     }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
__vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Format$ = 8						; size = 4
__Locale$ = 12						; size = 4
__ArgList$ = 16						; size = 4
__vscprintf_l PROC					; COMDAT

; 1658 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a 00		 push	 0
  00017	6a 00		 push	 0
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	83 c9 02	 or	 ecx, 2
  00023	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00026	52		 push	 edx
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  0002e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00031	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  00034	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00038	7d 09		 jge	 SHORT $LN3@vscprintf_
  0003a	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00041	eb 06		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00043	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00046	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vscprintf_:
  00049	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1664 :     }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
__vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -68						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  0000d	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  0000f	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00012	89 45 bc	 mov	 DWORD PTR tv68[ebp], eax
  00015	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0001a	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00020	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00026	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  0002c	89 4d bc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv68[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?__global_array_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_array_delete@@YAXPAXI@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_array_delete@@YAXPAXI@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?__global_array_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_array_delete@@YAXPAX@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_array_delete@@YAXPAX@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?__global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_delete@@YAXPAXI@Z PROC			; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_delete@@YAXPAXI@Z ENDP			; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?__global_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_delete@@YAXPAX@Z PROC				; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_delete@@YAXPAX@Z ENDP				; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
