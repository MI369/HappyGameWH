; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\模块管理\ModuleInfoManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	_wmemcpy
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
PUBLIC	??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ	; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
PUBLIC	?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance
PUBLIC	?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
PUBLIC	??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
PUBLIC	?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
PUBLIC	??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z	; CTempldateHelper<IDataBase>::`scalar deleting destructor'
PUBLIC	??0CDataBaseHelper@@QAE@XZ			; CDataBaseHelper::CDataBaseHelper
PUBLIC	??1CDataBaseHelper@@UAE@XZ			; CDataBaseHelper::~CDataBaseHelper
PUBLIC	??_GCDataBaseHelper@@UAEPAXI@Z			; CDataBaseHelper::`scalar deleting destructor'
PUBLIC	??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>
PUBLIC	??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
PUBLIC	?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance
PUBLIC	?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CreateInstance
PUBLIC	?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo
PUBLIC	??C?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ; CTempldateHelper<IGameServiceManager>::operator->
PUBLIC	?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ; CTempldateHelper<IGameServiceManager>::GetInterface
PUBLIC	??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z ; CTempldateHelper<IGameServiceManager>::`scalar deleting destructor'
PUBLIC	??0CGameServiceManagerHelper@@QAE@XZ		; CGameServiceManagerHelper::CGameServiceManagerHelper
PUBLIC	??1CGameServiceManagerHelper@@UAE@XZ		; CGameServiceManagerHelper::~CGameServiceManagerHelper
PUBLIC	??_GCGameServiceManagerHelper@@UAEPAXI@Z	; CGameServiceManagerHelper::`scalar deleting destructor'
PUBLIC	?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
PUBLIC	?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetPlatformDBParameter
PUBLIC	?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetGameMatchDBParameter
PUBLIC	?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetGameMatchDBParameter
PUBLIC	?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
PUBLIC	??0CModuleDBParameter@@QAE@ABV0@@Z		; CModuleDBParameter::CModuleDBParameter
PUBLIC	??4CModuleDBParameter@@QAEAAV0@ABV0@@Z		; CModuleDBParameter::operator=
PUBLIC	??_GCModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`scalar deleting destructor'
PUBLIC	??_ECModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`vector deleting destructor'
PUBLIC	??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
PUBLIC	?GetCount@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetCount
PUBLIC	?Lookup@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Lookup
PUBLIC	??A?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEAAPAUtagGameModuleInfo@@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXGPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetAssocAt
PUBLIC	??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
PUBLIC	?Serialize@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Serialize
PUBLIC	?Dump@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::AssertValid
PUBLIC	??_G?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
PUBLIC	??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::~CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEHABQAUtagGameModuleInfo@@@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHABQAUtagGameModuleInfo@@@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`scalar deleting destructor'
PUBLIC	??0CModuleInfoBuffer@@QAE@XZ			; CModuleInfoBuffer::CModuleInfoBuffer
PUBLIC	??1CModuleInfoBuffer@@UAE@XZ			; CModuleInfoBuffer::~CModuleInfoBuffer
PUBLIC	?ResetModuleInfo@CModuleInfoBuffer@@QAE_NXZ	; CModuleInfoBuffer::ResetModuleInfo
PUBLIC	?DeleteModuleInfo@CModuleInfoBuffer@@QAE_NG@Z	; CModuleInfoBuffer::DeleteModuleInfo
PUBLIC	?InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z ; CModuleInfoBuffer::InsertModuleInfo
PUBLIC	?GetModuleInfoCount@CModuleInfoBuffer@@QAEKXZ	; CModuleInfoBuffer::GetModuleInfoCount
PUBLIC	?SearchModuleInfo@CModuleInfoBuffer@@QAEPAUtagGameModuleInfo@@G@Z ; CModuleInfoBuffer::SearchModuleInfo
PUBLIC	?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ ; CModuleInfoBuffer::CreateModuleInfo
PUBLIC	??_GCModuleInfoBuffer@@UAEPAXI@Z		; CModuleInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECModuleInfoBuffer@@UAEPAXI@Z		; CModuleInfoBuffer::`vector deleting destructor'
PUBLIC	??0CModuleInfoManager@@QAE@XZ			; CModuleInfoManager::CModuleInfoManager
PUBLIC	??1CModuleInfoManager@@UAE@XZ			; CModuleInfoManager::~CModuleInfoManager
PUBLIC	?RegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z ; CModuleInfoManager::RegisterGameModule
PUBLIC	?UnRegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z ; CModuleInfoManager::UnRegisterGameModule
PUBLIC	?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z ; CModuleInfoManager::LoadGameModuleInfo
PUBLIC	?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z ; CModuleInfoManager::GetGameServiceAttrib
PUBLIC	??0CModuleInfoManager@@QAE@ABV0@@Z		; CModuleInfoManager::CModuleInfoManager
PUBLIC	??4CModuleInfoManager@@QAEAAV0@ABV0@@Z		; CModuleInfoManager::operator=
PUBLIC	??_GCModuleInfoManager@@UAEPAXI@Z		; CModuleInfoManager::`scalar deleting destructor'
PUBLIC	??_ECModuleInfoManager@@UAEPAXI@Z		; CModuleInfoManager::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z	; SerializeElements<unsigned short>
PUBLIC	??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z	; DumpElements<unsigned short>
PUBLIC	??0CPair@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CAssoc::CAssoc
PUBLIC	??$HashKey@G@@YGIG@Z				; HashKey<unsigned short>
PUBLIC	??$CompareElements@GG@@YGHPBG0@Z		; CompareElements<unsigned short,unsigned short>
PUBLIC	??$SerializeElements@PAUtagGameModuleInfo@@@@YGXAAVCArchive@@PAPAUtagGameModuleInfo@@H@Z ; SerializeElements<tagGameModuleInfo *>
PUBLIC	??$DumpElements@PAUtagGameModuleInfo@@@@YGXAAVCDumpContext@@PBQAUtagGameModuleInfo@@H@Z ; DumpElements<tagGameModuleInfo *>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7?$CTempldateHelper@UIDataBase@@@@6B@	; CTempldateHelper<IDataBase>::`vftable'
PUBLIC	??_7CDataBaseHelper@@6B@			; CDataBaseHelper::`vftable'
PUBLIC	??_C@_0P@IKJBDFNG@CreateDataBase@		; `string'
PUBLIC	??_C@_0BB@BEMLEOHB@KernelEngine?4dll@		; `string'
PUBLIC	??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@ ; CTempldateHelper<IGameServiceManager>::`vftable'
PUBLIC	??_7CGameServiceManagerHelper@@6B@		; CGameServiceManagerHelper::`vftable'
PUBLIC	??_7CModuleDBParameter@@6B@			; CModuleDBParameter::`vftable'
PUBLIC	??_7?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`vftable'
PUBLIC	??_7CModuleInfoBuffer@@6B@			; CModuleInfoBuffer::`vftable'
PUBLIC	??_7CModuleInfoManager@@6B@			; CModuleInfoManager::`vftable'
PUBLIC	?__LINE__Var@?0???1CModuleInfoBuffer@@UAE@XZ@4JA ; `CModuleInfoBuffer::~CModuleInfoBuffer'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z@4JA ; `CModuleInfoBuffer::InsertModuleInfo'::`1'::__LINE__Var
PUBLIC	??_C@_0DC@IEHDDBLE@LoadGameModuleInfo?5?$LE?$LE?$LN?$KI?5Platfor@ ; `string'
PUBLIC	??_C@_0BI@BHCCIOLM@GSP_GS_LoadGameGameItem@	; `string'
PUBLIC	??_C@_06KGJDDPAK@GameID@			; `string'
PUBLIC	??_C@_0O@DNEICACF@ClientVersion@		; `string'
PUBLIC	??_C@_0O@BNALHPOE@ServerVersion@		; `string'
PUBLIC	??_C@_08DBMACHKJ@GameName@			; `string'
PUBLIC	??_C@_0N@KEAKJKMG@DataBaseAddr@			; `string'
PUBLIC	??_C@_0N@BLNGECDM@DataBaseName@			; `string'
PUBLIC	??_C@_0O@DLLFAKFN@ServerDLLName@		; `string'
PUBLIC	??_C@_0O@GDMCLMBH@ClientEXEName@		; `string'
PUBLIC	??_R0PAUIDataBaseException@@@8			; IDataBaseException * `RTTI Type Descriptor'
PUBLIC	??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@	; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ ; `string'
PUBLIC	??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ ; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4CDataBaseHelper@@6B@			; CDataBaseHelper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDataBaseHelper@@@8			; CDataBaseHelper `RTTI Type Descriptor'
PUBLIC	??_R3CDataBaseHelper@@8				; CDataBaseHelper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDataBaseHelper@@8				; CDataBaseHelper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDataBaseHelper@@8		; CDataBaseHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8	; CTempldateHelper<IDataBase> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTempldateHelper@UIDataBase@@@@8		; CTempldateHelper<IDataBase>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTempldateHelper@UIDataBase@@@@8		; CTempldateHelper<IDataBase>::`RTTI Base Class Array'
PUBLIC	??_R4?$CTempldateHelper@UIDataBase@@@@6B@	; CTempldateHelper<IDataBase>::`RTTI Complete Object Locator'
PUBLIC	??_R4CGameServiceManagerHelper@@6B@		; CGameServiceManagerHelper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGameServiceManagerHelper@@@8		; CGameServiceManagerHelper `RTTI Type Descriptor'
PUBLIC	??_R3CGameServiceManagerHelper@@8		; CGameServiceManagerHelper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGameServiceManagerHelper@@8		; CGameServiceManagerHelper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGameServiceManagerHelper@@8	; CGameServiceManagerHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8 ; CTempldateHelper<IGameServiceManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Array'
PUBLIC	??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@ ; CTempldateHelper<IGameServiceManager>::`RTTI Complete Object Locator'
PUBLIC	??_R4CModuleDBParameter@@6B@			; CModuleDBParameter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleDBParameter@@@8			; CModuleDBParameter `RTTI Type Descriptor'
PUBLIC	??_R3CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleDBParameter@@8		; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@@8 ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@@8 ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8 ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CModuleInfoBuffer@@6B@			; CModuleInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleInfoBuffer@@@8			; CModuleInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CModuleInfoBuffer@@8			; CModuleInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleInfoBuffer@@8			; CModuleInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleInfoBuffer@@8		; CModuleInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CModuleInfoManager@@6B@			; CModuleInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleInfoManager@@@8			; CModuleInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CModuleInfoManager@@8			; CModuleInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleInfoManager@@8			; CModuleInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleInfoManager@@8		; CModuleInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	?AfxMessageBox@@YGHPBDII@Z:PROC			; AfxMessageBox
EXTRN	?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z:PROC	; AfxLoadLibrary
EXTRN	?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z:PROC	; AfxFreeLibrary
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?GetModuleVersion@CWHService@@SA_NPBDAAK@Z:PROC
EXTRN	??_E?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z:PROC ; CTempldateHelper<IDataBase>::`vector deleting destructor'
EXTRN	??_ECDataBaseHelper@@UAEPAXI@Z:PROC		; CDataBaseHelper::`vector deleting destructor'
EXTRN	__imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z:PROC
EXTRN	__imp_??1CDataBaseAide@@UAE@XZ:PROC
EXTRN	__imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z:PROC
EXTRN	__imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z:PROC
EXTRN	__imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z:PROC
EXTRN	__imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z:PROC
EXTRN	__imp_?ResetParameter@CDataBaseAide@@QAEXXZ:PROC
EXTRN	__imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??_E?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z:PROC ; CTempldateHelper<IGameServiceManager>::`vector deleting destructor'
EXTRN	??_ECGameServiceManagerHelper@@UAEPAXI@Z:PROC	; CGameServiceManagerHelper::`vector deleting destructor'
EXTRN	??1CModuleDBParameter@@UAE@XZ:PROC		; CModuleDBParameter::~CModuleDBParameter
EXTRN	??_E?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A:DWORD ; CModuleDBParameter::m_pModuleDBParameter
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleInfoManager@@8 DD FLAT:??_R0?AVCModuleInfoManager@@@8 ; CModuleInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleInfoManager@@8
rdata$r	SEGMENT
??_R2CModuleInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CModuleInfoManager@@8 ; CModuleInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleInfoManager@@8
rdata$r	SEGMENT
??_R3CModuleInfoManager@@8 DD 00H			; CModuleInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleInfoManager@@@8
data$r	SEGMENT
??_R0?AVCModuleInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleInfoManager@@6B@
rdata$r	SEGMENT
??_R4CModuleInfoManager@@6B@ DD 00H			; CModuleInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleInfoManager@@@8
	DD	FLAT:??_R3CModuleInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleInfoBuffer@@8 DD FLAT:??_R0?AVCModuleInfoBuffer@@@8 ; CModuleInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleInfoBuffer@@8
rdata$r	SEGMENT
??_R2CModuleInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CModuleInfoBuffer@@8 ; CModuleInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleInfoBuffer@@8
rdata$r	SEGMENT
??_R3CModuleInfoBuffer@@8 DD 00H			; CModuleInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCModuleInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CModuleInfoBuffer@@6B@ DD 00H			; CModuleInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleInfoBuffer@@@8
	DD	FLAT:??_R3CModuleInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8 DD FLAT:??_R0?AV?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@@8 ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8 ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8 DD 00H	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@ DD 00H	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@@8
	DD	FLAT:??_R3?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@@8 ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8 DD 00H	; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleDBParameter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleDBParameter@@8 DD FLAT:??_R0?AVCModuleDBParameter@@@8 ; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleDBParameter@@8
rdata$r	SEGMENT
??_R2CModuleDBParameter@@8 DD FLAT:??_R1A@?0A@EA@CModuleDBParameter@@8 ; CModuleDBParameter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleDBParameter@@8
rdata$r	SEGMENT
??_R3CModuleDBParameter@@8 DD 00H			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleDBParameter@@@8
data$r	SEGMENT
??_R0?AVCModuleDBParameter@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleDBParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleDBParameter@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleDBParameter@@6B@
rdata$r	SEGMENT
??_R4CModuleDBParameter@@6B@ DD 00H			; CModuleDBParameter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleDBParameter@@@8
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@
rdata$r	SEGMENT
??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@ DD 00H ; CTempldateHelper<IGameServiceManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8
	DD	FLAT:??_R3?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	SEGMENT
??_R2?$CTempldateHelper@UIGameServiceManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	SEGMENT
??_R3?$CTempldateHelper@UIGameServiceManager@@@@8 DD 00H ; CTempldateHelper<IGameServiceManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8
data$r	SEGMENT
??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; CTempldateHelper<IGameServiceManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTempldateHelper@UIGameServiceManager@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8 DD FLAT:??_R0?AV?$CTempldateHelper@UIGameServiceManager@@@@@8 ; CTempldateHelper<IGameServiceManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGameServiceManagerHelper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGameServiceManagerHelper@@8 DD FLAT:??_R0?AVCGameServiceManagerHelper@@@8 ; CGameServiceManagerHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGameServiceManagerHelper@@8
rdata$r	ENDS
;	COMDAT ??_R2CGameServiceManagerHelper@@8
rdata$r	SEGMENT
??_R2CGameServiceManagerHelper@@8 DD FLAT:??_R1A@?0A@EA@CGameServiceManagerHelper@@8 ; CGameServiceManagerHelper::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIGameServiceManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CGameServiceManagerHelper@@8
rdata$r	SEGMENT
??_R3CGameServiceManagerHelper@@8 DD 00H		; CGameServiceManagerHelper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGameServiceManagerHelper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGameServiceManagerHelper@@@8
data$r	SEGMENT
??_R0?AVCGameServiceManagerHelper@@@8 DD FLAT:??_7type_info@@6B@ ; CGameServiceManagerHelper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGameServiceManagerHelper@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGameServiceManagerHelper@@6B@
rdata$r	SEGMENT
??_R4CGameServiceManagerHelper@@6B@ DD 00H		; CGameServiceManagerHelper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGameServiceManagerHelper@@@8
	DD	FLAT:??_R3CGameServiceManagerHelper@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTempldateHelper@UIDataBase@@@@6B@
rdata$r	SEGMENT
??_R4?$CTempldateHelper@UIDataBase@@@@6B@ DD 00H	; CTempldateHelper<IDataBase>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8
	DD	FLAT:??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R2?$CTempldateHelper@UIDataBase@@@@8 DD FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R3?$CTempldateHelper@UIDataBase@@@@8 DD 00H		; CTempldateHelper<IDataBase>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8
data$r	SEGMENT
??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8 DD FLAT:??_7type_info@@6B@ ; CTempldateHelper<IDataBase> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTempldateHelper@UIDataBase@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 DD FLAT:??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDataBaseHelper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDataBaseHelper@@8 DD FLAT:??_R0?AVCDataBaseHelper@@@8 ; CDataBaseHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_R2CDataBaseHelper@@8
rdata$r	SEGMENT
??_R2CDataBaseHelper@@8 DD FLAT:??_R1A@?0A@EA@CDataBaseHelper@@8 ; CDataBaseHelper::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CDataBaseHelper@@8
rdata$r	SEGMENT
??_R3CDataBaseHelper@@8 DD 00H				; CDataBaseHelper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDataBaseHelper@@@8
data$r	SEGMENT
??_R0?AVCDataBaseHelper@@@8 DD FLAT:??_7type_info@@6B@	; CDataBaseHelper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDataBaseHelper@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDataBaseHelper@@6B@
rdata$r	SEGMENT
??_R4CDataBaseHelper@@6B@ DD 00H			; CDataBaseHelper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDataBaseHelper@@@8
	DD	FLAT:??_R3CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
CONST	SEGMENT
??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ DB 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH
	DB	0a1H, 0b0H, '%s', 0a1H, 0b1H, 0b2H, 0faH, 0c9H, 0faH, 0ceH, 0b4H
	DB	0d6H, 0aaH, 0d2H, 0ecH, 0b3H, 0a3H, 0b4H, 0edH, 0ceH, 0f3H, 0a3H
	DB	0acH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0a1H, 0b0H, '%s', 0a1H, 0b1H, 0a3H, 0acH, 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H, 0b0H, 0dcH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ DB 0b5H
	DB	0f7H, 0d3H, 0c3H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H
	DB	0b1H, 0c9H, 0faH, 0b3H, 0c9H, 0b6H, 0d4H, 0cfH, 0f3H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
CONST	SEGMENT
??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ DB 0d5H
	DB	0d2H, 0b2H, 0bbH, 0b5H, 0bdH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H
	DB	0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H, 0b1H
	DB	':%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ DB 0a1H
	DB	0b0H, '%s', 0a1H, 0b1H, 0c4H, 0a3H, 0bfH, 0e9H, 0bcH, 0d3H, 0d4H
	DB	0d8H, 0caH, 0a7H, 0b0H, 0dcH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\m'
	DB	'odule.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@
CONST	SEGMENT
??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@ DB 'CreateGameServiceManager'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_R0PAUIDataBaseException@@@8
data$r	SEGMENT
??_R0PAUIDataBaseException@@@8 DD FLAT:??_7type_info@@6B@ ; IDataBaseException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAUIDataBaseException@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0O@GDMCLMBH@ClientEXEName@
CONST	SEGMENT
??_C@_0O@GDMCLMBH@ClientEXEName@ DB 'ClientEXEName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DLLFAKFN@ServerDLLName@
CONST	SEGMENT
??_C@_0O@DLLFAKFN@ServerDLLName@ DB 'ServerDLLName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLNGECDM@DataBaseName@
CONST	SEGMENT
??_C@_0N@BLNGECDM@DataBaseName@ DB 'DataBaseName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KEAKJKMG@DataBaseAddr@
CONST	SEGMENT
??_C@_0N@KEAKJKMG@DataBaseAddr@ DB 'DataBaseAddr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DBMACHKJ@GameName@
CONST	SEGMENT
??_C@_08DBMACHKJ@GameName@ DB 'GameName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNALHPOE@ServerVersion@
CONST	SEGMENT
??_C@_0O@BNALHPOE@ServerVersion@ DB 'ServerVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DNEICACF@ClientVersion@
CONST	SEGMENT
??_C@_0O@DNEICACF@ClientVersion@ DB 'ClientVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KGJDDPAK@GameID@
CONST	SEGMENT
??_C@_06KGJDDPAK@GameID@ DB 'GameID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BHCCIOLM@GSP_GS_LoadGameGameItem@
CONST	SEGMENT
??_C@_0BI@BHCCIOLM@GSP_GS_LoadGameGameItem@ DB 'GSP_GS_LoadGameGameItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IEHDDBLE@LoadGameModuleInfo?5?$LE?$LE?$LN?$KI?5Platfor@
CONST	SEGMENT
??_C@_0DC@IEHDDBLE@LoadGameModuleInfo?5?$LE?$LE?$LN?$KI?5Platfor@ DB 'Loa'
	DB	'dGameModuleInfo ', 0b4H, 0b4H, 0bdH, 0a8H, ' PlatformDBModule'
	DB	' ', 0b6H, 0d4H, 0cfH, 0f3H, 0caH, 0a7H, 0b0H, 0dcH, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z@4JA DD 051H ; `CModuleInfoBuffer::InsertModuleInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0a3H, 0bfH, 0e9H, 0b9H, 0dcH, 0c0H, 0edH, '\m'
	DB	'oduleinfomanager.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CModuleInfoBuffer@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CModuleInfoBuffer@@UAE@XZ@4JA DD 0eH	; `CModuleInfoBuffer::~CModuleInfoBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CModuleInfoManager@@6B@
CONST	SEGMENT
??_7CModuleInfoManager@@6B@ DD FLAT:??_R4CModuleInfoManager@@6B@ ; CModuleInfoManager::`vftable'
	DD	FLAT:??_ECModuleInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CModuleInfoBuffer@@6B@
CONST	SEGMENT
??_7CModuleInfoBuffer@@6B@ DD FLAT:??_R4CModuleInfoBuffer@@6B@ ; CModuleInfoBuffer::`vftable'
	DD	FLAT:??_ECModuleInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@ DD FLAT:??_R4?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CModuleDBParameter@@6B@
CONST	SEGMENT
??_7CModuleDBParameter@@6B@ DD FLAT:??_R4CModuleDBParameter@@6B@ ; CModuleDBParameter::`vftable'
	DD	FLAT:??_ECModuleDBParameter@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGameServiceManagerHelper@@6B@
CONST	SEGMENT
??_7CGameServiceManagerHelper@@6B@ DD FLAT:??_R4CGameServiceManagerHelper@@6B@ ; CGameServiceManagerHelper::`vftable'
	DD	FLAT:??_ECGameServiceManagerHelper@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@
CONST	SEGMENT
??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@ DD FLAT:??_R4?$CTempldateHelper@UIGameServiceManager@@@@6B@ ; CTempldateHelper<IGameServiceManager>::`vftable'
	DD	FLAT:??_E?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0BB@BEMLEOHB@KernelEngine?4dll@
CONST	SEGMENT
??_C@_0BB@BEMLEOHB@KernelEngine?4dll@ DB 'KernelEngine.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IKJBDFNG@CreateDataBase@
CONST	SEGMENT
??_C@_0P@IKJBDFNG@CreateDataBase@ DB 'CreateDataBase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDataBaseHelper@@6B@
CONST	SEGMENT
??_7CDataBaseHelper@@6B@ DD FLAT:??_R4CDataBaseHelper@@6B@ ; CDataBaseHelper::`vftable'
	DD	FLAT:??_ECDataBaseHelper@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTempldateHelper@UIDataBase@@@@6B@
CONST	SEGMENT
??_7?$CTempldateHelper@UIDataBase@@@@6B@ DD FLAT:??_R4?$CTempldateHelper@UIDataBase@@@@6B@ ; CTempldateHelper<IDataBase>::`vftable'
	DD	FLAT:??_E?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z$0
__ehfuncinfo$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffffd58H
	DD	FLAT:__catch$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$0
__tryblocktable$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$4
__unwindtable$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ$0
__unwindtable$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ$2
__ehfuncinfo$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CModuleInfoBuffer@@UAE@XZ$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CModuleInfoBuffer@@UAE@XZ$2
__catchsym$??1CModuleInfoBuffer@@UAE@XZ$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CModuleInfoBuffer@@UAE@XZ$0
__ehfuncinfo$??1CModuleInfoBuffer@@UAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1CModuleInfoBuffer@@UAE@XZ
	DD	02H
	DD	FLAT:__tryblocktable$??1CModuleInfoBuffer@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__tryblocktable$??1CModuleInfoBuffer@@UAE@XZ DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??1CModuleInfoBuffer@@UAE@XZ$6
	DD	04H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$??1CModuleInfoBuffer@@UAE@XZ$7
__unwindtable$??1CModuleInfoBuffer@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CModuleInfoBuffer@@UAE@XZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$??1CModuleInfoBuffer@@UAE@XZ$5
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CModuleInfoBuffer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CModuleInfoBuffer@@QAE@XZ$0
__ehfuncinfo$??0CModuleInfoBuffer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CModuleInfoBuffer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$3
__catchsym$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$3 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$1
__ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$3
__catchsym$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$3 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$1
__ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAUtagGameModuleInfo@@@@YGXAAVCDumpContext@@PBQAUtagGameModuleInfo@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAUtagGameModuleInfo@@@@YGXAAVCDumpContext@@PBQAUtagGameModuleInfo@@H@Z PROC ; DumpElements<tagGameModuleInfo *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAUtagGameModuleInfo@@@@YGXAAVCDumpContext@@PBQAUtagGameModuleInfo@@H@Z ENDP ; DumpElements<tagGameModuleInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAUtagGameModuleInfo@@@@YGXAAVCArchive@@PAPAUtagGameModuleInfo@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAUtagGameModuleInfo@@@@YGXAAVCArchive@@PAPAUtagGameModuleInfo@@H@Z PROC ; SerializeElements<tagGameModuleInfo *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAUtagGameModuleInfo@@@@YGXAAVCArchive@@PAPAUtagGameModuleInfo@@H@Z ENDP ; SerializeElements<tagGameModuleInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@GG@@YGHPBG0@Z
_TEXT	SEGMENT
tv130 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@GG@@YGHPBG0@Z PROC			; CompareElements<unsigned short,unsigned short>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 02		 push	 2
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 02		 push	 2
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _pElement2$[ebp]
  000a7	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000aa	3b c8		 cmp	 ecx, eax
  000ac	75 09		 jne	 SHORT $LN12@CompareEle
  000ae	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv130[ebp], 1
  000b5	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN13@CompareEle:
  000be	8b 45 b8	 mov	 eax, DWORD PTR tv130[ebp]
$LN6@CompareEle:

; 157  : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 08 00	 ret	 8
??$CompareElements@GG@@YGHPBG0@Z ENDP			; CompareElements<unsigned short,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@G@@YGIG@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 2
??$HashKey@G@@YGIG@Z PROC				; HashKey<unsigned short>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00019	83 c4 08	 add	 esp, 8
  0001c	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001f	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00022	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00025	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00028	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002b	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002e	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00035	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003c	2b c1		 sub	 eax, ecx
  0003e	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00041	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00046	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004b	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??$HashKey@G@@YGIG@Z ENDP				; HashKey<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z PROC	; DumpElements<unsigned short>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 29		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	d1 e0		 shl	 eax, 1
  00061	50		 push	 eax
  00062	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006b	85 c0		 test	 eax, eax
  0006d	75 14		 jne	 SHORT $LN6@DumpElemen
  0006f	68 8c 00 00 00	 push	 140			; 0000008cH
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00079	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007e	85 c0		 test	 eax, eax
  00080	74 01		 je	 SHORT $LN6@DumpElemen
  00082	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ENDP	; DumpElements<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z PROC	; SerializeElements<unsigned short>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 26		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	d1 e0		 shl	 eax, 1
  0005e	50		 push	 eax
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00068	85 c0		 test	 eax, eax
  0006a	75 11		 jne	 SHORT $LN16@SerializeE
  0006c	6a 46		 push	 70			; 00000046H
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN16@SerializeE
  0007c	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007d	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00080	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00085	85 c0		 test	 eax, eax
  00087	74 5b		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00089	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008c	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  0008f	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00092	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00095	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  00099	76 47		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009b	81 7d f4 ff ff
	ff 3f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 1073741823 ; 3fffffffH
  000a2	73 08		 jae	 SHORT $LN17@SerializeE
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a7	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000aa	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ac	c7 45 a0 ff ff
	ff 3f		 mov	 DWORD PTR tv92[ebp], 1073741823 ; 3fffffffH
$LN18@SerializeE:
  000b3	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b6	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000b9	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bc	d1 e0		 shl	 eax, 1
  000be	50		 push	 eax
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c2	51		 push	 ecx
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c6	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cb	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000ce	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d1	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d4	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000da	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  000dd	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e0	eb b3		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e2	eb 59		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e4	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e7	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ea	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ed	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f0	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f4	76 47		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f6	81 7d e8 ff ff
	ff 3f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 1073741823 ; 3fffffffH
  000fd	73 08		 jae	 SHORT $LN19@SerializeE
  000ff	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00102	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00105	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00107	c7 45 a0 ff ff
	ff 3f		 mov	 DWORD PTR tv134[ebp], 1073741823 ; 3fffffffH
$LN20@SerializeE:
  0010e	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00111	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00114	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00117	d1 e0		 shl	 eax, 1
  00119	50		 push	 eax
  0011a	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  0011d	51		 push	 ecx
  0011e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00121	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00126	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00129	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012c	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  0012f	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00132	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00135	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00138	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013b	eb b3		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  0013d	5f		 pop	 edi
  0013e	5e		 pop	 esi
  0013f	5b		 pop	 ebx
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ENDP	; SerializeElements<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleInfoManager@@UAEPAXI@Z PROC			; CModuleInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 44		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 04		 push	 4
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1d		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00058	8d 14 8d 04 00
	00 00		 lea	 edx, DWORD PTR [ecx*4+4]
  0005f	52		 push	 edx
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 e8 04	 sub	 eax, 4
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 e8 04	 sub	 eax, 4
  00075	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 0e		 je	 SHORT $LN4@vector
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN4@vector:
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleInfoManager@@UAEPAXI@Z ENDP			; CModuleInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleInfoManager@@UAEPAXI@Z PROC			; CModuleInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleInfoManager@@UAE@XZ ; CModuleInfoManager::~CModuleInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCModuleInfoManager@@UAEPAXI@Z ENDP			; CModuleInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleInfoManager@@QAEAAV0@ABV0@@Z PROC		; CModuleInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4CModuleInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CModuleInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleInfoManager@@QAE@ABV0@@Z PROC			; CModuleInfoManager::CModuleInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoManager@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CModuleInfoManager@@QAE@ABV0@@Z ENDP			; CModuleInfoManager::CModuleInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z
_TEXT	SEGMENT
tv92 = -564						; size = 4
$T2 = -558						; size = 1
$T3 = -557						; size = 1
_GameServiceManager$ = -492				; size = 472
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszModuleName$ = 8					; size = 4
_GameServiceAttrib$ = 12				; size = 4
?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z PROC ; CModuleInfoManager::GetGameServiceAttrib, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 28 02 00
	00		 sub	 esp, 552		; 00000228H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//设置变量
; 266  : 	ZeroMemory(&GameServiceAttrib,sizeof(GameServiceAttrib));

  00031	68 94 00 00 00	 push	 148			; 00000094H
  00036	6a 00		 push	 0
  00038	8b 45 0c	 mov	 eax, DWORD PTR _GameServiceAttrib$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 _memset
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 267  : 
; 268  : 	//游戏模块
; 269  : 	CGameServiceManagerHelper GameServiceManager;

  00044	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  0004a	e8 00 00 00 00	 call	 ??0CGameServiceManagerHelper@@QAE@XZ ; CGameServiceManagerHelper::CGameServiceManagerHelper
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 270  : 	GameServiceManager.SetModuleCreateInfo(pszModuleName,GAME_SERVICE_CREATE_NAME);

  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EBOMCPGB@CreateGameServiceManager@
  0005b	8b 45 08	 mov	 eax, DWORD PTR _pszModuleName$[ebp]
  0005e	50		 push	 eax
  0005f	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  00065	e8 00 00 00 00	 call	 ?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo

; 271  : 
; 272  : 	//加载模块
; 273  : 	if (GameServiceManager.CreateInstance()==true)

  0006a	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  00070	e8 00 00 00 00	 call	 ?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CreateInstance
  00075	0f b6 c0	 movzx	 eax, al
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 49		 jne	 SHORT $LN2@GetGameSer

; 274  : 	{
; 275  : 		GameServiceManager->GetServiceAttrib(GameServiceAttrib);

  0007d	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  00083	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ; CTempldateHelper<IGameServiceManager>::operator->
  00088	89 85 cc fd ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  0008e	8b 45 0c	 mov	 eax, DWORD PTR _GameServiceAttrib$[ebp]
  00091	50		 push	 eax
  00092	8b 8d cc fd ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  00098	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009a	8b 8d cc fd ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000a0	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000a3	ff d0		 call	 eax

; 276  : 		return true;

  000a5	c6 85 d3 fd ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  000ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b3	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  000b9	e8 00 00 00 00	 call	 ??1CGameServiceManagerHelper@@UAE@XZ
  000be	8a 85 d3 fd ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  000c4	eb 1f		 jmp	 SHORT $LN1@GetGameSer
$LN2@GetGameSer:

; 277  : 	}
; 278  : 
; 279  : 	return false;

  000c6	c6 85 d2 fd ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  000cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d4	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  000da	e8 00 00 00 00	 call	 ??1CGameServiceManagerHelper@@UAE@XZ
  000df	8a 85 d2 fd ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@GetGameSer:

; 280  : }

  000e5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ef	59		 pop	 ecx
  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
  000f3	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f6	33 cd		 xor	 ecx, ebp
  000f8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z$0:
  00000	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServiceManager$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CGameServiceManagerHelper@@UAE@XZ
__ehhandler$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a c8 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-568]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGameServiceAttrib@CModuleInfoManager@@QAE_NPBDAAUtagGameServiceAttrib@@@Z ENDP ; CModuleInfoManager::GetGameServiceAttrib
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z
_TEXT	SEGMENT
tv255 = -825						; size = 1
tv229 = -824						; size = 4
tv180 = -824						; size = 4
tv151 = -824						; size = 4
tv131 = -824						; size = 4
tv259 = -820						; size = 4
tv258 = -820						; size = 4
tv257 = -820						; size = 4
tv254 = -820						; size = 4
tv253 = -820						; size = 4
tv252 = -820						; size = 4
tv251 = -820						; size = 4
tv250 = -820						; size = 4
tv69 = -820						; size = 4
tv65 = -820						; size = 4
tv256 = -818						; size = 2
$T2 = -815						; size = 1
$T3 = -814						; size = 1
$T4 = -813						; size = 1
_pszDescribe$5 = -684					; size = 4
_pIException$6 = -680					; size = 4
_pszServerDLLName$7 = -676				; size = 4
_GameModuleInfo$8 = -672				; size = 160
_pDataBaseParameter$9 = -512				; size = 4
_pModuleDBParameter$10 = -508				; size = 4
_PlatformDBModule$ = -504				; size = 472
_PlatformDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_ModuleInfoBuffer$ = 8					; size = 4
?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z PROC ; CModuleInfoManager::LoadGameModuleInfo, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 2c 03 00
	00		 sub	 esp, 812		; 0000032cH
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	//变量定义
; 182  : 	CDataBaseAide PlatformDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 183  : 	CDataBaseHelper PlatformDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 184  : 
; 185  : 	//创建对象
; 186  : 	if ((PlatformDBModule.GetInterface()==NULL)&&(PlatformDBModule.CreateInstance()==false))

  00056	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0005c	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  00061	85 c0		 test	 eax, eax
  00063	75 51		 jne	 SHORT $LN4@LoadGameMo
  00065	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0006b	e8 00 00 00 00	 call	 ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
  00070	0f b6 c0	 movzx	 eax, al
  00073	85 c0		 test	 eax, eax
  00075	75 3f		 jne	 SHORT $LN4@LoadGameMo

; 187  : 	{
; 188  : 		AfxMessageBox(TEXT("LoadGameModuleInfo 创建 PlatformDBModule 对象失败"),MB_ICONERROR);

  00077	6a 00		 push	 0
  00079	6a 10		 push	 16			; 00000010H
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@IEHDDBLE@LoadGameModuleInfo?5?$LE?$LE?$LN?$KI?5Platfor@
  00080	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 189  : 		return false;

  00085	c6 85 d3 fc ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  0008c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00090	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00096	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  0009b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000a2	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000ab	8a 85 d3 fc ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  000b1	e9 62 03 00 00	 jmp	 $LN1@LoadGameMo
$LN4@LoadGameMo:

; 190  : 	}
; 191  : 
; 192  : 	//连接数据库
; 193  : 	try

  000b6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 194  : 	{
; 195  : 		//变量定义
; 196  : 		CModuleDBParameter * pModuleDBParameter=CModuleDBParameter::GetModuleDBParameter();

  000ba	e8 00 00 00 00	 call	 ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
  000bf	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  000c5	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
  000cb	89 85 04 fe ff
	ff		 mov	 DWORD PTR _pModuleDBParameter$10[ebp], eax

; 197  : 		tagDataBaseParameter * pDataBaseParameter=pModuleDBParameter->GetPlatformDBParameter();

  000d1	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR _pModuleDBParameter$10[ebp]
  000d7	e8 00 00 00 00	 call	 ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
  000dc	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  000e2	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv65[ebp]
  000e8	89 85 00 fe ff
	ff		 mov	 DWORD PTR _pDataBaseParameter$9[ebp], eax

; 198  : 
; 199  : 		//设置连接
; 200  : 		PlatformDBModule->SetConnectionInfo(pDataBaseParameter->szDataBaseAddr,pDataBaseParameter->wDataBasePort,

  000ee	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  000f4	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  000f9	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv250[ebp], eax
  000ff	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv250[ebp]
  00105	89 85 c8 fc ff
	ff		 mov	 DWORD PTR tv131[ebp], eax
  0010b	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR _pDataBaseParameter$9[ebp]
  00111	83 c1 42	 add	 ecx, 66			; 00000042H
  00114	51		 push	 ecx
  00115	8b 95 00 fe ff
	ff		 mov	 edx, DWORD PTR _pDataBaseParameter$9[ebp]
  0011b	83 c2 22	 add	 edx, 34			; 00000022H
  0011e	52		 push	 edx
  0011f	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pDataBaseParameter$9[ebp]
  00125	83 c0 62	 add	 eax, 98			; 00000062H
  00128	50		 push	 eax
  00129	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR _pDataBaseParameter$9[ebp]
  0012f	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00132	52		 push	 edx
  00133	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pDataBaseParameter$9[ebp]
  00139	83 c0 02	 add	 eax, 2
  0013c	50		 push	 eax
  0013d	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv131[ebp]
  00143	8b 11		 mov	 edx, DWORD PTR [ecx]
  00145	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv131[ebp]
  0014b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0014e	ff d0		 call	 eax

; 201  : 			pDataBaseParameter->szDataBaseName,pDataBaseParameter->szDataBaseUser,pDataBaseParameter->szDataBasePass);
; 202  : 
; 203  : 		//发起连接
; 204  : 		PlatformDBModule->OpenConnection();

  00150	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00156	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  0015b	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv251[ebp], eax
  00161	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv251[ebp]
  00167	89 85 c8 fc ff
	ff		 mov	 DWORD PTR tv151[ebp], eax
  0016d	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv151[ebp]
  00173	8b 11		 mov	 edx, DWORD PTR [ecx]
  00175	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv151[ebp]
  0017b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0017e	ff d0		 call	 eax

; 205  : 		PlatformDBAide.SetDataBase(PlatformDBModule.GetInterface());

  00180	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00186	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  0018b	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv252[ebp], eax
  00191	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv252[ebp]
  00197	50		 push	 eax
  00198	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 206  : 
; 207  : 		//读取列表
; 208  : 		PlatformDBAide.ResetParameter();

  001a1	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 209  : 		if (PlatformDBAide.ExecuteProcess(TEXT("GSP_GS_LoadGameGameItem"),true)==DB_SUCCESS)

  001aa	6a 01		 push	 1
  001ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BHCCIOLM@GSP_GS_LoadGameGameItem@
  001b1	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  001b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  001ba	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv253[ebp], eax
  001c0	83 bd cc fc ff
	ff 00		 cmp	 DWORD PTR tv253[ebp], 0
  001c7	0f 85 a0 01 00
	00		 jne	 $LN6@LoadGameMo

; 210  : 		{
; 211  : 			//清空列表
; 212  : 			ModuleInfoBuffer.ResetModuleInfo();

  001cd	8b 4d 08	 mov	 ecx, DWORD PTR _ModuleInfoBuffer$[ebp]
  001d0	e8 00 00 00 00	 call	 ?ResetModuleInfo@CModuleInfoBuffer@@QAE_NXZ ; CModuleInfoBuffer::ResetModuleInfo
$LN2@LoadGameMo:

; 213  : 
; 214  : 			//读取列表
; 215  : 			while (PlatformDBModule->IsRecordsetEnd()==false)

  001d5	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  001db	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  001e0	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv254[ebp], eax
  001e6	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv254[ebp]
  001ec	89 85 c8 fc ff
	ff		 mov	 DWORD PTR tv180[ebp], eax
  001f2	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv180[ebp]
  001f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fa	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv180[ebp]
  00200	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00203	ff d0		 call	 eax
  00205	88 85 c7 fc ff
	ff		 mov	 BYTE PTR tv255[ebp], al
  0020b	0f b6 8d c7 fc
	ff ff		 movzx	 ecx, BYTE PTR tv255[ebp]
  00212	85 c9		 test	 ecx, ecx
  00214	0f 85 53 01 00
	00		 jne	 $LN6@LoadGameMo

; 216  : 			{
; 217  : 				//变量定义
; 218  : 				tagGameModuleInfo GameModuleInfo;
; 219  : 				ZeroMemory(&GameModuleInfo,sizeof(GameModuleInfo));

  0021a	68 a0 00 00 00	 push	 160			; 000000a0H
  0021f	6a 00		 push	 0
  00221	8d 85 60 fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp]
  00227	50		 push	 eax
  00228	e8 00 00 00 00	 call	 _memset
  0022d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 220  : 
; 221  : 				//模块属性
; 222  : 				GameModuleInfo.wGameID=PlatformDBAide.GetValue_WORD(TEXT("GameID"));

  00230	68 00 00 00 00	 push	 OFFSET ??_C@_06KGJDDPAK@GameID@
  00235	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00238	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  0023e	66 89 85 ce fc
	ff ff		 mov	 WORD PTR tv256[ebp], ax
  00245	66 8b 85 ce fc
	ff ff		 mov	 ax, WORD PTR tv256[ebp]
  0024c	66 89 85 6c fd
	ff ff		 mov	 WORD PTR _GameModuleInfo$8[ebp+12], ax

; 223  : 				GameModuleInfo.dwClientVersion=PlatformDBAide.GetValue_DWORD(TEXT("ClientVersion"));

  00253	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DNEICACF@ClientVersion@
  00258	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0025b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  00261	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv257[ebp], eax
  00267	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv257[ebp]
  0026d	89 85 60 fd ff
	ff		 mov	 DWORD PTR _GameModuleInfo$8[ebp], eax

; 224  : 				GameModuleInfo.dwServerVersion=PlatformDBAide.GetValue_DWORD(TEXT("ServerVersion"));

  00273	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BNALHPOE@ServerVersion@
  00278	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0027b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  00281	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv258[ebp], eax
  00287	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv258[ebp]
  0028d	89 85 64 fd ff
	ff		 mov	 DWORD PTR _GameModuleInfo$8[ebp+4], eax

; 225  : 
; 226  : 				//数据属性
; 227  : 				PlatformDBAide.GetValue_String(TEXT("GameName"),GameModuleInfo.szGameName,CountArray(GameModuleInfo.szGameName));

  00293	6a 20		 push	 32			; 00000020H
  00295	8d 85 9d fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+61]
  0029b	50		 push	 eax
  0029c	68 00 00 00 00	 push	 OFFSET ??_C@_08DBMACHKJ@GameName@
  002a1	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 228  : 				PlatformDBAide.GetValue_String(TEXT("DataBaseAddr"),GameModuleInfo.szDataBaseAddr,CountArray(GameModuleInfo.szDataBaseAddr));

  002aa	6a 0f		 push	 15			; 0000000fH
  002ac	8d 85 6e fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+14]
  002b2	50		 push	 eax
  002b3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KEAKJKMG@DataBaseAddr@
  002b8	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 229  : 				PlatformDBAide.GetValue_String(TEXT("DataBaseName"),GameModuleInfo.szDataBaseName,CountArray(GameModuleInfo.szDataBaseName));

  002c1	6a 20		 push	 32			; 00000020H
  002c3	8d 85 7d fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+29]
  002c9	50		 push	 eax
  002ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BLNGECDM@DataBaseName@
  002cf	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 230  : 
; 231  : 				//游戏属性
; 232  : 				PlatformDBAide.GetValue_String(TEXT("ServerDLLName"),GameModuleInfo.szServerDLLName,CountArray(GameModuleInfo.szServerDLLName));

  002d8	6a 20		 push	 32			; 00000020H
  002da	8d 85 bd fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+93]
  002e0	50		 push	 eax
  002e1	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DLLFAKFN@ServerDLLName@
  002e6	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 233  : 				PlatformDBAide.GetValue_String(TEXT("ClientEXEName"),GameModuleInfo.szClientEXEName,CountArray(GameModuleInfo.szClientEXEName));

  002ef	6a 20		 push	 32			; 00000020H
  002f1	8d 85 dd fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+125]
  002f7	50		 push	 eax
  002f8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GDMCLMBH@ClientEXEName@
  002fd	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00300	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 234  : 
; 235  : 				//本地版本
; 236  : 				LPCTSTR pszServerDLLName=GameModuleInfo.szServerDLLName;

  00306	8d 85 bd fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+93]
  0030c	89 85 5c fd ff
	ff		 mov	 DWORD PTR _pszServerDLLName$7[ebp], eax

; 237  : 				CWHService::GetModuleVersion(pszServerDLLName,GameModuleInfo.dwNativeVersion);

  00312	8d 85 68 fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp+8]
  00318	50		 push	 eax
  00319	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR _pszServerDLLName$7[ebp]
  0031f	51		 push	 ecx
  00320	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetModuleVersion@CWHService@@SA_NPBDAAK@Z
  00326	83 c4 08	 add	 esp, 8

; 238  : 
; 239  : 				//列表处理
; 240  : 				ModuleInfoBuffer.InsertModuleInfo(&GameModuleInfo);

  00329	8d 85 60 fd ff
	ff		 lea	 eax, DWORD PTR _GameModuleInfo$8[ebp]
  0032f	50		 push	 eax
  00330	8b 4d 08	 mov	 ecx, DWORD PTR _ModuleInfoBuffer$[ebp]
  00333	e8 00 00 00 00	 call	 ?InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z ; CModuleInfoBuffer::InsertModuleInfo

; 241  : 
; 242  : 				//移动记录
; 243  : 				PlatformDBModule->MoveToNext();

  00338	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0033e	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00343	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv259[ebp], eax
  00349	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv259[ebp]
  0034f	89 85 c8 fc ff
	ff		 mov	 DWORD PTR tv229[ebp], eax
  00355	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv229[ebp]
  0035b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0035d	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv229[ebp]
  00363	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00366	ff d0		 call	 eax

; 244  : 			}

  00368	e9 68 fe ff ff	 jmp	 $LN2@LoadGameMo
$LN6@LoadGameMo:

; 245  : 		}
; 246  : 
; 247  : 		return true;

  0036d	c6 85 d2 fc ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  00374	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00378	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0037e	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00383	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0038a	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0038d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00393	8a 85 d2 fc ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  00399	eb 7d		 jmp	 SHORT $LN1@LoadGameMo
__catch$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$0:

; 248  : 	}
; 249  : 	catch (IDataBaseException * pIException)
; 250  : 	{
; 251  : 		//错误信息
; 252  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  0039b	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR _pIException$6[ebp]
  003a1	8b 10		 mov	 edx, DWORD PTR [eax]
  003a3	8b 8d 58 fd ff
	ff		 mov	 ecx, DWORD PTR _pIException$6[ebp]
  003a9	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  003ac	ff d0		 call	 eax
  003ae	89 85 54 fd ff
	ff		 mov	 DWORD PTR _pszDescribe$5[ebp], eax

; 253  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  003b4	6a 03		 push	 3
  003b6	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$5[ebp]
  003bc	50		 push	 eax
  003bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  003c3	83 c4 08	 add	 esp, 8

; 254  : 
; 255  : 		//错误提示
; 256  : 		AfxMessageBox(pszDescribe,MB_ICONERROR);

  003c6	6a 00		 push	 0
  003c8	6a 10		 push	 16			; 00000010H
  003ca	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$5[ebp]
  003d0	50		 push	 eax
  003d1	e8 00 00 00 00	 call	 ?AfxMessageBox@@YGHPBDII@Z ; AfxMessageBox

; 257  : 	}

  003d6	b8 00 00 00 00	 mov	 eax, $LN13@LoadGameMo
  003db	c3		 ret	 0
  003dc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  003e3	eb 07		 jmp	 SHORT __tryend$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$1
$LN13@LoadGameMo:
  003e5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$1:

; 258  : 
; 259  : 	return false;

  003ec	c6 85 d1 fc ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  003f3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  003f7	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  003fd	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00402	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00409	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0040c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00412	8a 85 d1 fc ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@LoadGameMo:

; 260  : }

  00418	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0041b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00422	59		 pop	 ecx
  00423	5f		 pop	 edi
  00424	5e		 pop	 esi
  00425	5b		 pop	 ebx
  00426	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00429	33 cd		 xor	 ecx, ebp
  0042b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00430	8b e5		 mov	 esp, ebp
  00432	5d		 pop	 ebp
  00433	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a c0 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-832]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadGameModuleInfo@CModuleInfoManager@@QAE_NAAVCModuleInfoBuffer@@@Z ENDP ; CModuleInfoManager::LoadGameModuleInfo
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?UnRegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszModuleName$ = 8					; size = 4
?UnRegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z PROC ; CModuleInfoManager::UnRegisterGameModule, COMDAT
; _this$ = ecx

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  : 	return true;

  0000c	b0 01		 mov	 al, 1

; 176  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?UnRegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z ENDP ; CModuleInfoManager::UnRegisterGameModule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?RegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszModuleName$ = 8					; size = 4
?RegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z PROC	; CModuleInfoManager::RegisterGameModule, COMDAT
; _this$ = ecx

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 169  : 	return true;

  0000c	b0 01		 mov	 al, 1

; 170  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?RegisterGameModule@CModuleInfoManager@@QAE_NPBD@Z ENDP	; CModuleInfoManager::RegisterGameModule
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ??1CModuleInfoManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CModuleInfoManager@@UAE@XZ PROC			; CModuleInfoManager::~CModuleInfoManager, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoManager@@6B@

; 164  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CModuleInfoManager@@UAE@XZ ENDP			; CModuleInfoManager::~CModuleInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ??0CModuleInfoManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CModuleInfoManager@@QAE@XZ PROC			; CModuleInfoManager::CModuleInfoManager, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoManager@@6B@

; 159  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CModuleInfoManager@@QAE@XZ ENDP			; CModuleInfoManager::CModuleInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleInfoBuffer@@UAEPAXI@Z PROC			; CModuleInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleInfoBuffer@@UAE@XZ ; CModuleInfoBuffer::~CModuleInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 34		 push	 52			; 00000034H
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 34	 imul	 ecx, DWORD PTR [eax-4], 52
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CModuleInfoBuffer@@UAE@XZ ; CModuleInfoBuffer::~CModuleInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 34		 push	 52			; 00000034H
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleInfoBuffer@@UAEPAXI@Z ENDP			; CModuleInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleInfoBuffer@@UAEPAXI@Z PROC			; CModuleInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleInfoBuffer@@UAE@XZ ; CModuleInfoBuffer::~CModuleInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 34		 push	 52			; 00000034H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCModuleInfoBuffer@@UAEPAXI@Z ENDP			; CModuleInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ
_TEXT	SEGMENT
tv90 = -104						; size = 4
tv89 = -104						; size = 4
tv88 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_nArrayCount$4 = -28					; size = 4
_pGameModuleInfo$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ PROC ; CModuleInfoBuffer::CreateModuleInfo, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 58	 sub	 esp, 88			; 00000058H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 	//变量定义
; 129  : 	tagGameModuleInfo * pGameModuleInfo=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 130  : 
; 131  : 	//创建对象
; 132  : 	try

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 133  : 	{
; 134  : 		INT_PTR nArrayCount=m_GameModuleInfoArray.GetCount();

  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	83 c1 20	 add	 ecx, 32			; 00000020H
  00043	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::GetCount
  00048	89 45 98	 mov	 DWORD PTR tv88[ebp], eax
  0004b	8b 45 98	 mov	 eax, DWORD PTR tv88[ebp]
  0004e	89 45 e4	 mov	 DWORD PTR _nArrayCount$4[ebp], eax

; 135  : 		if (nArrayCount>0)

  00051	83 7d e4 00	 cmp	 DWORD PTR _nArrayCount$4[ebp], 0
  00055	7e 33		 jle	 SHORT $LN3@CreateModu

; 136  : 		{
; 137  : 			pGameModuleInfo=m_GameModuleInfoArray[nArrayCount-1];

  00057	8b 45 e4	 mov	 eax, DWORD PTR _nArrayCount$4[ebp]
  0005a	83 e8 01	 sub	 eax, 1
  0005d	50		 push	 eax
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 20	 add	 ecx, 32			; 00000020H
  00064	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::operator[]
  00069	89 45 98	 mov	 DWORD PTR tv89[ebp], eax
  0006c	8b 4d 98	 mov	 ecx, DWORD PTR tv89[ebp]
  0006f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00071	89 55 e8	 mov	 DWORD PTR _pGameModuleInfo$[ebp], edx

; 138  : 			m_GameModuleInfoArray.RemoveAt(nArrayCount-1);

  00074	6a 01		 push	 1
  00076	8b 45 e4	 mov	 eax, DWORD PTR _nArrayCount$4[ebp]
  00079	83 e8 01	 sub	 eax, 1
  0007c	50		 push	 eax
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	83 c1 20	 add	 ecx, 32			; 00000020H
  00083	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAt

; 139  : 		}
; 140  : 		else

  00088	eb 26		 jmp	 SHORT $LN4@CreateModu
$LN3@CreateModu:

; 141  : 		{
; 142  : 			pGameModuleInfo=new tagGameModuleInfo;

  0008a	68 a0 00 00 00	 push	 160			; 000000a0H
  0008f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00094	83 c4 04	 add	 esp, 4
  00097	89 45 98	 mov	 DWORD PTR tv90[ebp], eax
  0009a	8b 45 98	 mov	 eax, DWORD PTR tv90[ebp]
  0009d	89 45 a0	 mov	 DWORD PTR $T3[ebp], eax
  000a0	8b 4d a0	 mov	 ecx, DWORD PTR $T3[ebp]
  000a3	89 4d e8	 mov	 DWORD PTR _pGameModuleInfo$[ebp], ecx

; 143  : 			if (pGameModuleInfo==NULL) return NULL;

  000a6	83 7d e8 00	 cmp	 DWORD PTR _pGameModuleInfo$[ebp], 0
  000aa	75 04		 jne	 SHORT $LN4@CreateModu
  000ac	33 c0		 xor	 eax, eax
  000ae	eb 40		 jmp	 SHORT $LN1@CreateModu
$LN4@CreateModu:

; 144  : 		}
; 145  : 	}

  000b0	eb 13		 jmp	 SHORT $LN7@CreateModu
__catch$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ$0:

; 146  : 	catch (...) { return false; }

  000b2	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  000b9	b8 00 00 00 00	 mov	 eax, $LN10@CreateModu
  000be	c3		 ret	 0
  000bf	b8 00 00 00 00	 mov	 eax, $LN7@CreateModu
  000c4	c3		 ret	 0
$LN7@CreateModu:
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000cc	eb 0c		 jmp	 SHORT $LN9@CreateModu
$LN10@CreateModu:
  000ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d5	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  000d8	eb 16		 jmp	 SHORT $LN1@CreateModu
$LN9@CreateModu:

; 147  : 
; 148  : 	//设置变量
; 149  : 	ZeroMemory(pGameModuleInfo,sizeof(tagGameModuleInfo));

  000da	68 a0 00 00 00	 push	 160			; 000000a0H
  000df	6a 00		 push	 0
  000e1	8b 45 e8	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 _memset
  000ea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 150  : 
; 151  : 	return pGameModuleInfo;

  000ed	8b 45 e8	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
$LN1@CreateModu:

; 152  : }

  000f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fa	59		 pop	 ecx
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 94	 mov	 ecx, DWORD PTR [edx-108]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ ENDP ; CModuleInfoBuffer::CreateModuleInfo
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?SearchModuleInfo@CModuleInfoBuffer@@QAEPAUtagGameModuleInfo@@G@Z
_TEXT	SEGMENT
_pGameModuleInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_wModuleID$ = 8						; size = 2
?SearchModuleInfo@CModuleInfoBuffer@@QAEPAUtagGameModuleInfo@@G@Z PROC ; CModuleInfoBuffer::SearchModuleInfo, COMDAT
; _this$ = ecx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 120  : 	tagGameModuleInfo * pGameModuleInfo=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 121  : 	m_GameModuleInfoMap.Lookup(wModuleID,pGameModuleInfo);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wModuleID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Lookup

; 122  : 	return pGameModuleInfo;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]

; 123  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchModuleInfo@CModuleInfoBuffer@@QAEPAUtagGameModuleInfo@@G@Z ENDP ; CModuleInfoBuffer::SearchModuleInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?GetModuleInfoCount@CModuleInfoBuffer@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetModuleInfoCount@CModuleInfoBuffer@@QAEKXZ PROC	; CModuleInfoBuffer::GetModuleInfoCount, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 114  : 	return (DWORD)(m_GameModuleInfoMap.GetCount());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetCount

; 115  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetModuleInfoCount@CModuleInfoBuffer@@QAEKXZ ENDP	; CModuleInfoBuffer::GetModuleInfoCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
_pGameModuleInsert$ = -12				; size = 4
_wGameID$ = -8						; size = 2
_this$ = -4						; size = 4
_pGameModuleInfo$ = 8					; size = 4
?InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z PROC ; CModuleInfoBuffer::InsertModuleInfo, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	//效验参数
; 83   : 	ASSERT(pGameModuleInfo!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pGameModuleInfo$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@InsertModu
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN6@InsertModu
  00029	cc		 int	 3
$LN6@InsertModu:

; 84   : 	if (pGameModuleInfo==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pGameModuleInfo$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@InsertModu
  00030	32 c0		 xor	 al, al
  00032	eb 7f		 jmp	 SHORT $LN1@InsertModu
$LN2@InsertModu:

; 85   : 
; 86   : 	//查找现存
; 87   : 	WORD wGameID=pGameModuleInfo->wGameID;

  00034	8b 45 08	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00037	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  0003b	66 89 4d f8	 mov	 WORD PTR _wGameID$[ebp], cx

; 88   : 	tagGameModuleInfo * pGameModuleInsert=SearchModuleInfo(wGameID);

  0003f	0f b7 45 f8	 movzx	 eax, WORD PTR _wGameID$[ebp]
  00043	50		 push	 eax
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?SearchModuleInfo@CModuleInfoBuffer@@QAEPAUtagGameModuleInfo@@G@Z ; CModuleInfoBuffer::SearchModuleInfo
  0004c	89 45 f4	 mov	 DWORD PTR _pGameModuleInsert$[ebp], eax

; 89   : 
; 90   : 	//创建判断
; 91   : 	if (pGameModuleInsert==NULL)

  0004f	83 7d f4 00	 cmp	 DWORD PTR _pGameModuleInsert$[ebp], 0
  00053	75 32		 jne	 SHORT $LN3@InsertModu

; 92   : 	{
; 93   : 		//创建对象
; 94   : 		pGameModuleInsert=CreateModuleInfo();

  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?CreateModuleInfo@CModuleInfoBuffer@@AAEPAUtagGameModuleInfo@@XZ ; CModuleInfoBuffer::CreateModuleInfo
  0005d	89 45 f4	 mov	 DWORD PTR _pGameModuleInsert$[ebp], eax

; 95   : 
; 96   : 		//结果判断
; 97   : 		if (pGameModuleInsert==NULL)

  00060	83 7d f4 00	 cmp	 DWORD PTR _pGameModuleInsert$[ebp], 0
  00064	75 21		 jne	 SHORT $LN3@InsertModu

; 98   : 		{
; 99   : 			ASSERT(FALSE);

  00066	33 c0		 xor	 eax, eax
  00068	75 19		 jne	 SHORT $LN7@InsertModu
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z@4JA
  00070	83 c1 12	 add	 ecx, 18			; 00000012H
  00073	51		 push	 ecx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00079	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007e	85 c0		 test	 eax, eax
  00080	74 01		 je	 SHORT $LN7@InsertModu
  00082	cc		 int	 3
$LN7@InsertModu:

; 100  : 			return false;

  00083	32 c0		 xor	 al, al
  00085	eb 2c		 jmp	 SHORT $LN1@InsertModu
$LN3@InsertModu:

; 101  : 		}
; 102  : 	}
; 103  : 
; 104  : 	//设置数据
; 105  : 	m_GameModuleInfoMap[wGameID]=pGameModuleInsert;

  00087	0f b7 45 f8	 movzx	 eax, WORD PTR _wGameID$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	83 c1 04	 add	 ecx, 4
  00092	e8 00 00 00 00	 call	 ??A?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEAAPAUtagGameModuleInfo@@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::operator[]
  00097	8b 4d f4	 mov	 ecx, DWORD PTR _pGameModuleInsert$[ebp]
  0009a	89 08		 mov	 DWORD PTR [eax], ecx

; 106  : 	CopyMemory(pGameModuleInsert,pGameModuleInfo,sizeof(tagGameModuleInfo));

  0009c	68 a0 00 00 00	 push	 160			; 000000a0H
  000a1	8b 45 08	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d f4	 mov	 ecx, DWORD PTR _pGameModuleInsert$[ebp]
  000a8	51		 push	 ecx
  000a9	e8 00 00 00 00	 call	 _memcpy
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH

; 107  : 
; 108  : 	return true;

  000b1	b0 01		 mov	 al, 1
$LN1@InsertModu:

; 109  : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?InsertModuleInfo@CModuleInfoBuffer@@QAE_NPAUtagGameModuleInfo@@@Z ENDP ; CModuleInfoBuffer::InsertModuleInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?DeleteModuleInfo@CModuleInfoBuffer@@QAE_NG@Z
_TEXT	SEGMENT
_pGameModuleInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_wModuleID$ = 8						; size = 2
?DeleteModuleInfo@CModuleInfoBuffer@@QAE_NG@Z PROC	; CModuleInfoBuffer::DeleteModuleInfo, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	//查找类型
; 66   : 	tagGameModuleInfo * pGameModuleInfo=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 67   : 	if (m_GameModuleInfoMap.Lookup(wModuleID,pGameModuleInfo)==FALSE) return false;

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wModuleID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 04		 jne	 SHORT $LN2@DeleteModu
  0002b	32 c0		 xor	 al, al
  0002d	eb 34		 jmp	 SHORT $LN1@DeleteModu
$LN2@DeleteModu:

; 68   : 
; 69   : 	//删除数据
; 70   : 	m_GameModuleInfoMap.RemoveKey(wModuleID);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _wModuleID$[ebp]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveKey

; 71   : 	m_GameModuleInfoArray.Add(pGameModuleInfo);

  0003f	8d 45 f8	 lea	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 20	 add	 ecx, 32			; 00000020H
  00049	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEHABQAUtagGameModuleInfo@@@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::Add

; 72   : 
; 73   : 	//设置变量
; 74   : 	ZeroMemory(pGameModuleInfo,sizeof(tagGameModuleInfo));

  0004e	68 a0 00 00 00	 push	 160			; 000000a0H
  00053	6a 00		 push	 0
  00055	8b 45 f8	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 75   : 
; 76   : 	return true;

  00061	b0 01		 mov	 al, 1
$LN1@DeleteModu:

; 77   : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?DeleteModuleInfo@CModuleInfoBuffer@@QAE_NG@Z ENDP	; CModuleInfoBuffer::DeleteModuleInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?ResetModuleInfo@CModuleInfoBuffer@@QAE_NXZ
_TEXT	SEGMENT
_Position$ = -16					; size = 4
_pGameModuleInfo$ = -12					; size = 4
_wModuleID$ = -8					; size = 2
_this$ = -4						; size = 4
?ResetModuleInfo@CModuleInfoBuffer@@QAE_NXZ PROC	; CModuleInfoBuffer::ResetModuleInfo, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	//变量定义
; 45   : 	WORD wModuleID=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wModuleID$[ebp], ax

; 46   : 	tagGameModuleInfo * pGameModuleInfo=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 47   : 	POSITION Position=m_GameModuleInfoMap.GetStartPosition();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 04	 add	 ecx, 4
  0001f	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
  00024	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@ResetModul:

; 48   : 
; 49   : 	//删除对象
; 50   : 	while (Position!=NULL)

  00027	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0002b	74 28		 je	 SHORT $LN3@ResetModul

; 51   : 	{
; 52   : 		m_GameModuleInfoMap.GetNextAssoc(Position,wModuleID,pGameModuleInfo);

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00030	50		 push	 eax
  00031	8d 4d f8	 lea	 ecx, DWORD PTR _wModuleID$[ebp]
  00034	51		 push	 ecx
  00035	8d 55 f0	 lea	 edx, DWORD PTR _Position$[ebp]
  00038	52		 push	 edx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 04	 add	 ecx, 4
  0003f	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc

; 53   : 		m_GameModuleInfoArray.Add(pGameModuleInfo);

  00044	8d 45 f4	 lea	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 20	 add	 ecx, 32			; 00000020H
  0004e	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEHABQAUtagGameModuleInfo@@@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::Add

; 54   : 	}

  00053	eb d2		 jmp	 SHORT $LN2@ResetModul
$LN3@ResetModul:

; 55   : 
; 56   : 	//删除索引
; 57   : 	m_GameModuleInfoMap.RemoveAll();

  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 04	 add	 ecx, 4
  0005b	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll

; 58   : 
; 59   : 	return true;

  00060	b0 01		 mov	 al, 1

; 60   : }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?ResetModuleInfo@CModuleInfoBuffer@@QAE_NXZ ENDP	; CModuleInfoBuffer::ResetModuleInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ??1CModuleInfoBuffer@@UAE@XZ
_TEXT	SEGMENT
$T2 = -108						; size = 4
$T3 = -104						; size = 4
_i$4 = -36						; size = 4
_Position$ = -32					; size = 4
_pGameModuleInfo$ = -28					; size = 4
_wModuleID$ = -24					; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CModuleInfoBuffer@@UAE@XZ PROC			; CModuleInfoBuffer::~CModuleInfoBuffer, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CModuleInfoBuffer@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoBuffer@@6B@
  00038	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1

; 15   : 	//变量定义
; 16   : 	WORD wModuleID=0;

  0003f	33 c0		 xor	 eax, eax
  00041	66 89 45 e8	 mov	 WORD PTR _wModuleID$[ebp], ax

; 17   : 	tagGameModuleInfo * pGameModuleInfo=NULL;

  00045	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 18   : 	POSITION Position=m_GameModuleInfoMap.GetStartPosition();

  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	83 c1 04	 add	 ecx, 4
  00052	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
  00057	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@CModuleInf:

; 19   : 
; 20   : 	//删除索引
; 21   : 	while (Position!=NULL)

  0005a	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0005e	74 70		 je	 SHORT $LN3@CModuleInf

; 22   : 	{
; 23   : 		m_GameModuleInfoMap.GetNextAssoc(Position,wModuleID,pGameModuleInfo);

  00060	8d 45 e4	 lea	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  00063	50		 push	 eax
  00064	8d 4d e8	 lea	 ecx, DWORD PTR _wModuleID$[ebp]
  00067	51		 push	 ecx
  00068	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  0006b	52		 push	 edx
  0006c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 04	 add	 ecx, 4
  00072	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc

; 24   : 		SafeDelete(pGameModuleInfo);

  00077	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0007b	8b 45 e4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  0007e	89 45 98	 mov	 DWORD PTR $T3[ebp], eax
  00081	68 a0 00 00 00	 push	 160			; 000000a0H
  00086	8b 4d 98	 mov	 ecx, DWORD PTR $T3[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
  00092	eb 23		 jmp	 SHORT $LN12@CModuleInf
__catch$??1CModuleInfoBuffer@@UAE@XZ$0:
  00094	33 c0		 xor	 eax, eax
  00096	75 19		 jne	 SHORT $LN10@CModuleInf
  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CModuleInfoBuffer@@UAE@XZ@4JA
  0009e	83 c1 0a	 add	 ecx, 10			; 0000000aH
  000a1	51		 push	 ecx
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a7	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ac	85 c0		 test	 eax, eax
  000ae	74 01		 je	 SHORT $LN10@CModuleInf
  000b0	cc		 int	 3
$LN10@CModuleInf:
  000b1	b8 00 00 00 00	 mov	 eax, $LN19@CModuleInf
  000b6	c3		 ret	 0
$LN12@CModuleInf:
  000b7	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  000be	eb 07		 jmp	 SHORT __tryend$??1CModuleInfoBuffer@@UAE@XZ$1
$LN19@CModuleInf:
  000c0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??1CModuleInfoBuffer@@UAE@XZ$1:
  000c7	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 25   : 	}

  000ce	eb 8a		 jmp	 SHORT $LN2@CModuleInf
$LN3@CModuleInf:

; 26   : 
; 27   : 	//删除数组
; 28   : 	for (INT_PTR i=0;i<m_GameModuleInfoArray.GetCount();i++)

  000d0	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  000d7	eb 09		 jmp	 SHORT $LN6@CModuleInf
$LN4@CModuleInf:
  000d9	8b 45 dc	 mov	 eax, DWORD PTR _i$4[ebp]
  000dc	83 c0 01	 add	 eax, 1
  000df	89 45 dc	 mov	 DWORD PTR _i$4[ebp], eax
$LN6@CModuleInf:
  000e2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	83 c1 20	 add	 ecx, 32			; 00000020H
  000e8	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::GetCount
  000ed	39 45 dc	 cmp	 DWORD PTR _i$4[ebp], eax
  000f0	7d 70		 jge	 SHORT $LN5@CModuleInf

; 29   : 	{
; 30   : 		pGameModuleInfo=m_GameModuleInfoArray[i];

  000f2	8b 45 dc	 mov	 eax, DWORD PTR _i$4[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	83 c1 20	 add	 ecx, 32			; 00000020H
  000fc	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::operator[]
  00101	8b 08		 mov	 ecx, DWORD PTR [eax]
  00103	89 4d e4	 mov	 DWORD PTR _pGameModuleInfo$[ebp], ecx

; 31   : 		SafeDelete(pGameModuleInfo);

  00106	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4
  0010a	8b 45 e4	 mov	 eax, DWORD PTR _pGameModuleInfo$[ebp]
  0010d	89 45 94	 mov	 DWORD PTR $T2[ebp], eax
  00110	68 a0 00 00 00	 push	 160			; 000000a0H
  00115	8b 4d 94	 mov	 ecx, DWORD PTR $T2[ebp]
  00118	51		 push	 ecx
  00119	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0011e	83 c4 08	 add	 esp, 8
  00121	eb 23		 jmp	 SHORT $LN14@CModuleInf
__catch$??1CModuleInfoBuffer@@UAE@XZ$2:
  00123	33 c0		 xor	 eax, eax
  00125	75 19		 jne	 SHORT $LN11@CModuleInf
  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CModuleInfoBuffer@@UAE@XZ@4JA
  0012d	83 c1 11	 add	 ecx, 17			; 00000011H
  00130	51		 push	 ecx
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MGEBBDOE@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00136	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0013b	85 c0		 test	 eax, eax
  0013d	74 01		 je	 SHORT $LN11@CModuleInf
  0013f	cc		 int	 3
$LN11@CModuleInf:
  00140	b8 00 00 00 00	 mov	 eax, $LN21@CModuleInf
  00145	c3		 ret	 0
$LN14@CModuleInf:
  00146	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  0014d	eb 07		 jmp	 SHORT __tryend$??1CModuleInfoBuffer@@UAE@XZ$3
$LN21@CModuleInf:
  0014f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$??1CModuleInfoBuffer@@UAE@XZ$3:
  00156	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameModuleInfo$[ebp], 0

; 32   : 	}

  0015d	e9 77 ff ff ff	 jmp	 $LN4@CModuleInf
$LN5@CModuleInf:

; 33   : 
; 34   : 	//删除引用
; 35   : 	m_GameModuleInfoMap.RemoveAll();

  00162	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	83 c1 04	 add	 ecx, 4
  00168	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll

; 36   : 	m_GameModuleInfoArray.RemoveAll();

  0016d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00170	83 c1 20	 add	 ecx, 32			; 00000020H
  00173	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAll

; 37   : 
; 38   : 	return;
; 39   : }

  00178	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0017c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	83 c1 20	 add	 ecx, 32			; 00000020H
  00182	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::~CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
  00187	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0018e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	83 c1 04	 add	 ecx, 4
  00194	e8 00 00 00 00	 call	 ??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
  00199	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a3	59		 pop	 ecx
  001a4	5f		 pop	 edi
  001a5	5e		 pop	 esi
  001a6	5b		 pop	 ebx
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CModuleInfoBuffer@@UAE@XZ$4:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
__unwindfunclet$??1CModuleInfoBuffer@@UAE@XZ$5:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::~CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
__ehhandler$??1CModuleInfoBuffer@@UAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a 90	 mov	 ecx, DWORD PTR [edx-112]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CModuleInfoBuffer@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CModuleInfoBuffer@@UAE@XZ ENDP			; CModuleInfoBuffer::~CModuleInfoBuffer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ??0CModuleInfoBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CModuleInfoBuffer@@QAE@XZ PROC			; CModuleInfoBuffer::CModuleInfoBuffer, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CModuleInfoBuffer@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleInfoBuffer@@6B@
  00034	6a 0a		 push	 10			; 0000000aH
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	e8 00 00 00 00	 call	 ??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 20	 add	 ecx, 32			; 00000020H
  0004e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>

; 10   : }

  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00067	59		 pop	 ecx
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CModuleInfoBuffer@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
__ehhandler$??0CModuleInfoBuffer@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CModuleInfoBuffer@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CModuleInfoBuffer@@QAE@XZ ENDP			; CModuleInfoBuffer::CModuleInfoBuffer
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::~CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHABQAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHABQAUtagGameModuleInfo@@@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHABQAUtagGameModuleInfo@@@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEAAPAUtagGameModuleInfo@@H@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEHABQAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEHABQAUtagGameModuleInfo@@@Z PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEXHABQAUtagGameModuleInfo@@@Z ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAEHABQAUtagGameModuleInfo@@@Z ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::~CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::~CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagGameModuleInfo@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>::CWHArray<tagGameModuleInfo *,tagGameModuleInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAUtagGameModuleInfo@@@@YGXAAVCDumpContext@@PBQAUtagGameModuleInfo@@H@Z ; DumpElements<tagGameModuleInfo *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAUtagGameModuleInfo@@@@YGXAAVCArchive@@PAPAUtagGameModuleInfo@@H@Z ; SerializeElements<tagGameModuleInfo *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAUtagGameModuleInfo@@@@YGXAAVCArchive@@PAPAUtagGameModuleInfo@@H@Z ; SerializeElements<tagGameModuleInfo *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXGPAUtagGameModuleInfo@@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ PROC	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@UAE@XZ ENDP	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::~CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEXAAPAU__POSITION@@AAGAAPAUtagGameModuleInfo@@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXGPAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXGPAUtagGameModuleInfo@@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEAAPAUtagGameModuleInfo@@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	89 08		 mov	 DWORD PTR [eax], ecx
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXGPAUtagGameModuleInfo@@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEAAPAUtagGameModuleInfo@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEAAPAUtagGameModuleInfo@@G@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAEAAPAUtagGameModuleInfo@@G@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHGAAPAUtagGameModuleInfo@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHGAAPAUtagGameModuleInfo@@@Z PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHGAAPAUtagGameModuleInfo@@@Z ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetCount@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHXZ PROC ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetCount, COMDAT
; _this$ = ecx

; 1338 : 	{ return m_nCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QBEHXZ ENDP ; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z PROC	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAUtagGameModuleInfo@@PAU1@@@QAE@H@Z ENDP	; CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>::CMap<unsigned short,unsigned short,tagGameModuleInfo *,tagGameModuleInfo *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 08 01 00 00	 push	 264			; 00000108H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 08 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 264
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 11		 je	 SHORT $LN4@vector
  0008a	68 08 01 00 00	 push	 264			; 00000108H
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00098	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 08 01 00 00	 push	 264			; 00000108H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleDBParameter@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z PROC		; CModuleDBParameter::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0000f	83 c6 04	 add	 esi, 4
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	83 c7 04	 add	 edi, 4
  00018	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00024	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  0002a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0002d	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00033	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00038	f3 a5		 rep movsd
  0003a	66 a5		 movsw
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z ENDP		; CModuleDBParameter::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleDBParameter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleDBParameter@@QAE@ABV0@@Z PROC			; CModuleDBParameter::CModuleDBParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleDBParameter@@6B@
  00015	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00018	83 c6 04	 add	 esi, 4
  0001b	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0001e	83 c7 04	 add	 edi, 4
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f3 a5		 rep movsd
  00028	66 a5		 movsw
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  00033	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00036	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  0003c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00041	f3 a5		 rep movsd
  00043	66 a5		 movsw
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0CModuleDBParameter@@QAE@ABV0@@Z ENDP			; CModuleDBParameter::CModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ
_TEXT	SEGMENT
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ PROC ; CModuleDBParameter::GetModuleDBParameter, COMDAT

; 46   : 	static CModuleDBParameter * GetModuleDBParameter() { return m_pModuleDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A ; CModuleDBParameter::m_pModuleDBParameter
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ENDP ; CModuleDBParameter::GetModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameMatchDBParameter$ = 8				; size = 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 41   : 	VOID SetGameMatchDBParameter(tagDataBaseParameter & GameMatchDBParameter) { m_GameMatchDBParameter=GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	8b 75 08	 mov	 esi, DWORD PTR _GameMatchDBParameter$[ebp]
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 39   : 	tagDataBaseParameter * GetGameMatchDBParameter() { return &m_GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 86 00 00 00	 add	 eax, 134		; 00000086H
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PlatformDBParameter$ = 8				; size = 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetPlatformDBParameter, COMDAT
; _this$ = ecx

; 34   : 	VOID SetPlatformDBParameter(tagDataBaseParameter & PlatformDBParameter) { m_PlatformDBParameter=PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	83 c7 04	 add	 edi, 4
  00012	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00017	8b 75 08	 mov	 esi, DWORD PTR _PlatformDBParameter$[ebp]
  0001a	f3 a5		 rep movsd
  0001c	66 a5		 movsw
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetPlatformDBParameter, COMDAT
; _this$ = ecx

; 32   : 	tagDataBaseParameter * GetPlatformDBParameter() { return &m_PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGameServiceManagerHelper@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGameServiceManagerHelper@@UAEPAXI@Z PROC		; CGameServiceManagerHelper::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGameServiceManagerHelper@@UAE@XZ
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCGameServiceManagerHelper@@UAEPAXI@Z ENDP		; CGameServiceManagerHelper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1CGameServiceManagerHelper@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGameServiceManagerHelper@@UAE@XZ PROC		; CGameServiceManagerHelper::~CGameServiceManagerHelper, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CGameServiceManagerHelper@@UAE@XZ ENDP		; CGameServiceManagerHelper::~CGameServiceManagerHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\gameservicehead.h
;	COMDAT ??0CGameServiceManagerHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameServiceManagerHelper@@QAE@XZ PROC		; CGameServiceManagerHelper::CGameServiceManagerHelper, COMDAT
; _this$ = ecx

; 1702 : DECLARE_MODULE_DYNAMIC(GameServiceManager)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 01 01 06	 push	 100729088		; 06010100H
  00011	68 00 00 00 00	 push	 OFFSET ?IID_IGameServiceManager@@3U_GUID@@B
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGameServiceManagerHelper@@6B@
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??0CGameServiceManagerHelper@@QAE@XZ ENDP		; CGameServiceManagerHelper::CGameServiceManagerHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z PROC ; CTempldateHelper<IGameServiceManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CTempldateHelper@UIGameServiceManager@@@@UAEPAXI@Z ENDP ; CTempldateHelper<IGameServiceManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ PROC ; CTempldateHelper<IGameServiceManager>::GetInterface, COMDAT
; _this$ = ecx

; 316  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	return m_pIModeluInterface; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]

; 318  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ENDP ; CTempldateHelper<IGameServiceManager>::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??C?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ PROC ; CTempldateHelper<IGameServiceManager>::operator->, COMDAT
; _this$ = ecx

; 309  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	return GetInterface(); 

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ; CTempldateHelper<IGameServiceManager>::GetInterface

; 311  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$CTempldateHelper@UIGameServiceManager@@@@QBEPAUIGameServiceManager@@XZ ENDP ; CTempldateHelper<IGameServiceManager>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszModuleDllName$ = 8					; size = 4
_pszCreateProc$ = 12					; size = 4
?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z PROC ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo, COMDAT
; _this$ = ecx

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 289  : 	//设置信息
; 290  : 	lstrcpynA(m_szCreateProc,pszCreateProc,CountArray(m_szCreateProc));

  0000c	6a 40		 push	 64			; 00000040H
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _pszCreateProc$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00018	51		 push	 ecx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 291  : 	lstrcpyn(m_szModuleDllName,pszModuleDllName,CountArray(m_szModuleDllName));

  0001f	68 04 01 00 00	 push	 260			; 00000104H
  00024	8b 45 08	 mov	 eax, DWORD PTR _pszModuleDllName$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 4c	 add	 ecx, 76			; 0000004cH
  0002e	51		 push	 ecx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 292  : 
; 293  : 	return;
; 294  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
?SetModuleCreateInfo@?$CTempldateHelper@UIGameServiceManager@@@@QAEXPBD0@Z ENDP ; CTempldateHelper<IGameServiceManager>::SetModuleCreateInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
_TEXT	SEGMENT
tv173 = -100						; size = 4
tv172 = -100						; size = 4
tv171 = -100						; size = 4
tv170 = -100						; size = 4
$T2 = -94						; size = 1
$T3 = -93						; size = 1
_pszError$4 = -28					; size = 4
_CreateProc$5 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ PROC ; CTempldateHelper<IGameServiceManager>::CreateInstance, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	//释放组件
; 214  : 	CloseInstance();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance

; 215  : 
; 216  : 	//创建组件
; 217  : 	try

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 218  : 	{
; 219  : 		//效验参数
; 220  : 		ASSERT(m_szCreateProc[0]!=0);

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	6b c8 00	 imul	 ecx, eax, 0
  00046	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00049	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  0004e	85 c0		 test	 eax, eax
  00050	75 19		 jne	 SHORT $LN7@CreateInst
  00052	68 dc 00 00 00	 push	 220			; 000000dcH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00061	89 45 9c	 mov	 DWORD PTR tv170[ebp], eax
  00064	83 7d 9c 00	 cmp	 DWORD PTR tv170[ebp], 0
  00068	74 01		 je	 SHORT $LN7@CreateInst
  0006a	cc		 int	 3
$LN7@CreateInst:

; 221  : 		ASSERT(m_szModuleDllName[0]!=0);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	0f be 44 0a 4c	 movsx	 eax, BYTE PTR [edx+ecx+76]
  0007b	85 c0		 test	 eax, eax
  0007d	75 19		 jne	 SHORT $LN8@CreateInst
  0007f	68 dd 00 00 00	 push	 221			; 000000ddH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	89 45 9c	 mov	 DWORD PTR tv171[ebp], eax
  00091	83 7d 9c 00	 cmp	 DWORD PTR tv171[ebp], 0
  00095	74 01		 je	 SHORT $LN8@CreateInst
  00097	cc		 int	 3
$LN8@CreateInst:

; 222  : 
; 223  : 		//加载模块
; 224  : 		m_hDllInstance=AfxLoadLibrary(m_szModuleDllName);

  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	83 c0 4c	 add	 eax, 76			; 0000004cH
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z ; AfxLoadLibrary
  000a4	89 45 9c	 mov	 DWORD PTR tv172[ebp], eax
  000a7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 55 9c	 mov	 edx, DWORD PTR tv172[ebp]
  000ad	89 91 50 01 00
	00		 mov	 DWORD PTR [ecx+336], edx

; 225  : 		if (m_hDllInstance==NULL) 

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  000bd	75 2a		 jne	 SHORT $LN3@CreateInst

; 226  : 		{
; 227  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("“%s”模块加载失败"),m_szModuleDllName);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	83 c0 4c	 add	 eax, 76			; 0000004cH
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
  000cb	68 80 00 00 00	 push	 128			; 00000080H
  000d0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 228  : 			return false;

  000e2	32 c0		 xor	 al, al
  000e4	e9 34 01 00 00	 jmp	 $LN1@CreateInst
$LN3@CreateInst:

; 229  : 		}
; 230  : 
; 231  : 		//寻找函数
; 232  : 		ModuleCreateProc * CreateProc=(ModuleCreateProc *)GetProcAddress(m_hDllInstance,m_szCreateProc);

  000e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	83 c0 0c	 add	 eax, 12			; 0000000cH
  000ef	50		 push	 eax
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  000f9	52		 push	 edx
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00100	89 45 e8	 mov	 DWORD PTR _CreateProc$5[ebp], eax

; 233  : 		if (CreateProc==NULL) 

  00103	83 7d e8 00	 cmp	 DWORD PTR _CreateProc$5[ebp], 0
  00107	75 31		 jne	 SHORT $LN4@CreateInst

; 234  : 		{		
; 235  : 			_sntprintf_s(m_szDescribe, CountArray(m_szDescribe), TEXT("找不到组件创建函数“%s”:%d"), m_szCreateProc, GetLastError());

  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0010f	50		 push	 eax
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	83 c0 0c	 add	 eax, 12			; 0000000cH
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
  0011c	68 80 00 00 00	 push	 128			; 00000080H
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00130	83 c4 14	 add	 esp, 20			; 00000014H

; 236  : 			return false;

  00133	32 c0		 xor	 al, al
  00135	e9 e3 00 00 00	 jmp	 $LN1@CreateInst
$LN4@CreateInst:

; 237  : 		}
; 238  : 
; 239  : 		//创建组件
; 240  : 		m_pIModeluInterface=(IModeluInterface *)CreateProc(m_Guid,m_dwVersion);

  0013a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00140	51		 push	 ecx
  00141	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00144	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00147	50		 push	 eax
  00148	ff 55 e8	 call	 DWORD PTR _CreateProc$5[ebp]
  0014b	83 c4 08	 add	 esp, 8
  0014e	89 45 9c	 mov	 DWORD PTR tv173[ebp], eax
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 55 9c	 mov	 edx, DWORD PTR tv173[ebp]
  00157	89 91 54 01 00
	00		 mov	 DWORD PTR [ecx+340], edx

; 241  : 		if (m_pIModeluInterface==NULL) 

  0015d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00160	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00167	75 2a		 jne	 SHORT $LN5@CreateInst

; 242  : 		{
; 243  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("调用函数“%s”生成对象失败"),m_szCreateProc);

  00169	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
  00175	68 80 00 00 00	 push	 128			; 00000080H
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00189	83 c4 10	 add	 esp, 16			; 00000010H

; 244  : 			return false;

  0018c	32 c0		 xor	 al, al
  0018e	e9 8a 00 00 00	 jmp	 $LN1@CreateInst
$LN5@CreateInst:

; 245  : 		}
; 246  : 	}

  00193	eb 63		 jmp	 SHORT $LN9@CreateInst
__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$0:

; 247  : 	catch (LPCTSTR pszError)
; 248  : 	{
; 249  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("由于“%s”，组件创建失败"),pszError);

  00195	8b 45 e4	 mov	 eax, DWORD PTR _pszError$4[ebp]
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  0019e	68 80 00 00 00	 push	 128			; 00000080H
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001ac	51		 push	 ecx
  001ad	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001b2	83 c4 10	 add	 esp, 16			; 00000010H

; 250  : 		return false;

  001b5	c6 45 a3 00	 mov	 BYTE PTR $T3[ebp], 0
  001b9	b8 00 00 00 00	 mov	 eax, $LN13@CreateInst
  001be	c3		 ret	 0

; 251  : 	}

  001bf	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001c4	c3		 ret	 0
__catch$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ$1:

; 252  : 	catch (...)	
; 253  : 	{ 
; 254  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("组件创建函数“%s”产生未知异常错误，组件创建失败"),m_szCreateProc);

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  001cb	50		 push	 eax
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
  001d1	68 80 00 00 00	 push	 128			; 00000080H
  001d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001df	51		 push	 ecx
  001e0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001e5	83 c4 10	 add	 esp, 16			; 00000010H

; 255  : 		return false;

  001e8	c6 45 a2 00	 mov	 BYTE PTR $T2[ebp], 0
  001ec	b8 00 00 00 00	 mov	 eax, $LN15@CreateInst
  001f1	c3		 ret	 0

; 256  : 	}

  001f2	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001f7	c3		 ret	 0
$LN9@CreateInst:
  001f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ff	eb 0c		 jmp	 SHORT $LN14@CreateInst
$LN15@CreateInst:
  00201	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 255  : 		return false;

  00208	8a 45 a2	 mov	 al, BYTE PTR $T2[ebp]
  0020b	eb 10		 jmp	 SHORT $LN1@CreateInst
$LN14@CreateInst:
  0020d	eb 0c		 jmp	 SHORT $LN12@CreateInst
$LN13@CreateInst:
  0020f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 250  : 		return false;

  00216	8a 45 a3	 mov	 al, BYTE PTR $T3[ebp]
  00219	eb 02		 jmp	 SHORT $LN1@CreateInst
$LN12@CreateInst:

; 257  : 
; 258  : 	return true;

  0021b	b0 01		 mov	 al, 1
$LN1@CreateInst:

; 259  : }

  0021d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00220	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00227	59		 pop	 ecx
  00228	5f		 pop	 edi
  00229	5e		 pop	 esi
  0022a	5b		 pop	 ebx
  0022b	8b e5		 mov	 esp, ebp
  0022d	5d		 pop	 ebp
  0022e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ENDP ; CTempldateHelper<IGameServiceManager>::CreateInstance
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ PROC ; CTempldateHelper<IGameServiceManager>::CloseInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//设置变量
; 266  : 	m_szDescribe[0]=0;

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 267  : 
; 268  : 	//销毁对象
; 269  : 	if (m_pIModeluInterface!=NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00029	74 25		 je	 SHORT $LN2@CloseInsta

; 270  : 	{
; 271  : 		m_pIModeluInterface->Release();

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 8a 54 01 00
	00		 mov	 ecx, DWORD PTR [edx+340]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	ff d2		 call	 edx

; 272  : 		m_pIModeluInterface=NULL;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0
$LN2@CloseInsta:

; 273  : 	}
; 274  : 
; 275  : 	//释放 DLL
; 276  : 	if (m_hDllInstance!=NULL)

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  0005a	74 1c		 je	 SHORT $LN3@CloseInsta

; 277  : 	{
; 278  : 		AfxFreeLibrary(m_hDllInstance);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z ; AfxFreeLibrary

; 279  : 		m_hDllInstance=NULL;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0
$LN3@CloseInsta:

; 280  : 	}
; 281  : 
; 282  : 	return true;

  00078	b0 01		 mov	 al, 1

; 283  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ENDP ; CTempldateHelper<IGameServiceManager>::CloseInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ PROC ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@

; 206  : 	CloseInstance();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIGameServiceManager@@@@QAE_NXZ ; CTempldateHelper<IGameServiceManager>::CloseInstance

; 207  : }

  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00046	59		 pop	 ecx
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CTempldateHelper@UIGameServiceManager@@@@UAE@XZ ENDP ; CTempldateHelper<IGameServiceManager>::~CTempldateHelper<IGameServiceManager>
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwVersion$ = 12					; size = 4
??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z PROC ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>, COMDAT
; _this$ = ecx

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIGameServiceManager@@@@6B@

; 168  : CTempldateHelper<IModeluInterface>::CTempldateHelper(REFGUID Guid, DWORD dwVersion) : m_dwVersion(dwVersion), m_Guid(Guid)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _dwVersion$[ebp]
  00024	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 170  : 	//辅助变量
; 171  : 	m_szDescribe[0]=0;

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 172  : 
; 173  : 	//内核信息
; 174  : 	m_hDllInstance=NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0

; 175  : 	m_pIModeluInterface=NULL;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 176  : 
; 177  : 	//组件属性
; 178  : 	ZeroMemory(m_szCreateProc,sizeof(m_szCreateProc));

  00054	6a 40		 push	 64			; 00000040H
  00056	6a 00		 push	 0
  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _memset
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH

; 179  : 	ZeroMemory(m_szModuleDllName,sizeof(m_szModuleDllName));

  00067	68 04 01 00 00	 push	 260			; 00000104H
  0006c	6a 00		 push	 0
  0006e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00071	83 c0 4c	 add	 eax, 76			; 0000004cH
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 180  : 
; 181  : 	return;
; 182  : }

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
??0?$CTempldateHelper@UIGameServiceManager@@@@QAE@ABU_GUID@@K@Z ENDP ; CTempldateHelper<IGameServiceManager>::CTempldateHelper<IGameServiceManager>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDataBaseHelper@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDataBaseHelper@@UAEPAXI@Z PROC			; CDataBaseHelper::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCDataBaseHelper@@UAEPAXI@Z ENDP			; CDataBaseHelper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1CDataBaseHelper@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDataBaseHelper@@UAE@XZ PROC				; CDataBaseHelper::~CDataBaseHelper, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CDataBaseHelper@@UAE@XZ ENDP				; CDataBaseHelper::~CDataBaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\kernelenginehead.h
;	COMDAT ??0CDataBaseHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDataBaseHelper@@QAE@XZ PROC				; CDataBaseHelper::CDataBaseHelper, COMDAT
; _this$ = ecx

; 842  : DECLARE_MODULE_HELPER(DataBase, KERNEL_ENGINE_DLL_NAME, "CreateDataBase")

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IKJBDFNG@CreateDataBase@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BEMLEOHB@KernelEngine?4dll@
  00016	68 00 01 01 06	 push	 100729088		; 06010100H
  0001b	68 00 00 00 00	 push	 OFFSET ?IID_IDataBase@@3U_GUID@@B
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDataBaseHelper@@6B@
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0CDataBaseHelper@@QAE@XZ ENDP				; CDataBaseHelper::CDataBaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z PROC	; CTempldateHelper<IDataBase>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z ENDP	; CTempldateHelper<IDataBase>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ PROC ; CTempldateHelper<IDataBase>::GetInterface, COMDAT
; _this$ = ecx

; 316  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	return m_pIModeluInterface; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]

; 318  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ENDP ; CTempldateHelper<IDataBase>::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ PROC ; CTempldateHelper<IDataBase>::operator->, COMDAT
; _this$ = ecx

; 309  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	return GetInterface(); 

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface

; 311  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ENDP ; CTempldateHelper<IDataBase>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
_TEXT	SEGMENT
tv173 = -100						; size = 4
tv172 = -100						; size = 4
tv171 = -100						; size = 4
tv170 = -100						; size = 4
$T2 = -94						; size = 1
$T3 = -93						; size = 1
_pszError$4 = -28					; size = 4
_CreateProc$5 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ PROC ; CTempldateHelper<IDataBase>::CreateInstance, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	//释放组件
; 214  : 	CloseInstance();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance

; 215  : 
; 216  : 	//创建组件
; 217  : 	try

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 218  : 	{
; 219  : 		//效验参数
; 220  : 		ASSERT(m_szCreateProc[0]!=0);

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	6b c8 00	 imul	 ecx, eax, 0
  00046	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00049	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  0004e	85 c0		 test	 eax, eax
  00050	75 19		 jne	 SHORT $LN7@CreateInst
  00052	68 dc 00 00 00	 push	 220			; 000000dcH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00061	89 45 9c	 mov	 DWORD PTR tv170[ebp], eax
  00064	83 7d 9c 00	 cmp	 DWORD PTR tv170[ebp], 0
  00068	74 01		 je	 SHORT $LN7@CreateInst
  0006a	cc		 int	 3
$LN7@CreateInst:

; 221  : 		ASSERT(m_szModuleDllName[0]!=0);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	0f be 44 0a 4c	 movsx	 eax, BYTE PTR [edx+ecx+76]
  0007b	85 c0		 test	 eax, eax
  0007d	75 19		 jne	 SHORT $LN8@CreateInst
  0007f	68 dd 00 00 00	 push	 221			; 000000ddH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	89 45 9c	 mov	 DWORD PTR tv171[ebp], eax
  00091	83 7d 9c 00	 cmp	 DWORD PTR tv171[ebp], 0
  00095	74 01		 je	 SHORT $LN8@CreateInst
  00097	cc		 int	 3
$LN8@CreateInst:

; 222  : 
; 223  : 		//加载模块
; 224  : 		m_hDllInstance=AfxLoadLibrary(m_szModuleDllName);

  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	83 c0 4c	 add	 eax, 76			; 0000004cH
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z ; AfxLoadLibrary
  000a4	89 45 9c	 mov	 DWORD PTR tv172[ebp], eax
  000a7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 55 9c	 mov	 edx, DWORD PTR tv172[ebp]
  000ad	89 91 50 01 00
	00		 mov	 DWORD PTR [ecx+336], edx

; 225  : 		if (m_hDllInstance==NULL) 

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  000bd	75 2a		 jne	 SHORT $LN3@CreateInst

; 226  : 		{
; 227  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("“%s”模块加载失败"),m_szModuleDllName);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	83 c0 4c	 add	 eax, 76			; 0000004cH
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
  000cb	68 80 00 00 00	 push	 128			; 00000080H
  000d0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 228  : 			return false;

  000e2	32 c0		 xor	 al, al
  000e4	e9 34 01 00 00	 jmp	 $LN1@CreateInst
$LN3@CreateInst:

; 229  : 		}
; 230  : 
; 231  : 		//寻找函数
; 232  : 		ModuleCreateProc * CreateProc=(ModuleCreateProc *)GetProcAddress(m_hDllInstance,m_szCreateProc);

  000e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	83 c0 0c	 add	 eax, 12			; 0000000cH
  000ef	50		 push	 eax
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  000f9	52		 push	 edx
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00100	89 45 e8	 mov	 DWORD PTR _CreateProc$5[ebp], eax

; 233  : 		if (CreateProc==NULL) 

  00103	83 7d e8 00	 cmp	 DWORD PTR _CreateProc$5[ebp], 0
  00107	75 31		 jne	 SHORT $LN4@CreateInst

; 234  : 		{		
; 235  : 			_sntprintf_s(m_szDescribe, CountArray(m_szDescribe), TEXT("找不到组件创建函数“%s”:%d"), m_szCreateProc, GetLastError());

  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0010f	50		 push	 eax
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	83 c0 0c	 add	 eax, 12			; 0000000cH
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
  0011c	68 80 00 00 00	 push	 128			; 00000080H
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00130	83 c4 14	 add	 esp, 20			; 00000014H

; 236  : 			return false;

  00133	32 c0		 xor	 al, al
  00135	e9 e3 00 00 00	 jmp	 $LN1@CreateInst
$LN4@CreateInst:

; 237  : 		}
; 238  : 
; 239  : 		//创建组件
; 240  : 		m_pIModeluInterface=(IModeluInterface *)CreateProc(m_Guid,m_dwVersion);

  0013a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00140	51		 push	 ecx
  00141	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00144	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00147	50		 push	 eax
  00148	ff 55 e8	 call	 DWORD PTR _CreateProc$5[ebp]
  0014b	83 c4 08	 add	 esp, 8
  0014e	89 45 9c	 mov	 DWORD PTR tv173[ebp], eax
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 55 9c	 mov	 edx, DWORD PTR tv173[ebp]
  00157	89 91 54 01 00
	00		 mov	 DWORD PTR [ecx+340], edx

; 241  : 		if (m_pIModeluInterface==NULL) 

  0015d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00160	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00167	75 2a		 jne	 SHORT $LN5@CreateInst

; 242  : 		{
; 243  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("调用函数“%s”生成对象失败"),m_szCreateProc);

  00169	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
  00175	68 80 00 00 00	 push	 128			; 00000080H
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00189	83 c4 10	 add	 esp, 16			; 00000010H

; 244  : 			return false;

  0018c	32 c0		 xor	 al, al
  0018e	e9 8a 00 00 00	 jmp	 $LN1@CreateInst
$LN5@CreateInst:

; 245  : 		}
; 246  : 	}

  00193	eb 63		 jmp	 SHORT $LN9@CreateInst
__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$0:

; 247  : 	catch (LPCTSTR pszError)
; 248  : 	{
; 249  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("由于“%s”，组件创建失败"),pszError);

  00195	8b 45 e4	 mov	 eax, DWORD PTR _pszError$4[ebp]
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  0019e	68 80 00 00 00	 push	 128			; 00000080H
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001ac	51		 push	 ecx
  001ad	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001b2	83 c4 10	 add	 esp, 16			; 00000010H

; 250  : 		return false;

  001b5	c6 45 a3 00	 mov	 BYTE PTR $T3[ebp], 0
  001b9	b8 00 00 00 00	 mov	 eax, $LN13@CreateInst
  001be	c3		 ret	 0

; 251  : 	}

  001bf	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001c4	c3		 ret	 0
__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$1:

; 252  : 	catch (...)	
; 253  : 	{ 
; 254  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("组件创建函数“%s”产生未知异常错误，组件创建失败"),m_szCreateProc);

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  001cb	50		 push	 eax
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
  001d1	68 80 00 00 00	 push	 128			; 00000080H
  001d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001df	51		 push	 ecx
  001e0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001e5	83 c4 10	 add	 esp, 16			; 00000010H

; 255  : 		return false;

  001e8	c6 45 a2 00	 mov	 BYTE PTR $T2[ebp], 0
  001ec	b8 00 00 00 00	 mov	 eax, $LN15@CreateInst
  001f1	c3		 ret	 0

; 256  : 	}

  001f2	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001f7	c3		 ret	 0
$LN9@CreateInst:
  001f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ff	eb 0c		 jmp	 SHORT $LN14@CreateInst
$LN15@CreateInst:
  00201	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 255  : 		return false;

  00208	8a 45 a2	 mov	 al, BYTE PTR $T2[ebp]
  0020b	eb 10		 jmp	 SHORT $LN1@CreateInst
$LN14@CreateInst:
  0020d	eb 0c		 jmp	 SHORT $LN12@CreateInst
$LN13@CreateInst:
  0020f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 250  : 		return false;

  00216	8a 45 a3	 mov	 al, BYTE PTR $T3[ebp]
  00219	eb 02		 jmp	 SHORT $LN1@CreateInst
$LN12@CreateInst:

; 257  : 
; 258  : 	return true;

  0021b	b0 01		 mov	 al, 1
$LN1@CreateInst:

; 259  : }

  0021d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00220	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00227	59		 pop	 ecx
  00228	5f		 pop	 edi
  00229	5e		 pop	 esi
  0022a	5b		 pop	 ebx
  0022b	8b e5		 mov	 esp, ebp
  0022d	5d		 pop	 ebp
  0022e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ENDP ; CTempldateHelper<IDataBase>::CreateInstance
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ PROC ; CTempldateHelper<IDataBase>::CloseInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//设置变量
; 266  : 	m_szDescribe[0]=0;

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 267  : 
; 268  : 	//销毁对象
; 269  : 	if (m_pIModeluInterface!=NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00029	74 25		 je	 SHORT $LN2@CloseInsta

; 270  : 	{
; 271  : 		m_pIModeluInterface->Release();

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 8a 54 01 00
	00		 mov	 ecx, DWORD PTR [edx+340]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	ff d2		 call	 edx

; 272  : 		m_pIModeluInterface=NULL;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0
$LN2@CloseInsta:

; 273  : 	}
; 274  : 
; 275  : 	//释放 DLL
; 276  : 	if (m_hDllInstance!=NULL)

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  0005a	74 1c		 je	 SHORT $LN3@CloseInsta

; 277  : 	{
; 278  : 		AfxFreeLibrary(m_hDllInstance);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z ; AfxFreeLibrary

; 279  : 		m_hDllInstance=NULL;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0
$LN3@CloseInsta:

; 280  : 	}
; 281  : 
; 282  : 	return true;

  00078	b0 01		 mov	 al, 1

; 283  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ENDP ; CTempldateHelper<IDataBase>::CloseInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ PROC		; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIDataBase@@@@6B@

; 206  : 	CloseInstance();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance

; 207  : }

  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00046	59		 pop	 ecx
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ENDP		; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwVersion$ = 12					; size = 4
_pszModuleDll$ = 16					; size = 4
_pszCreateProc$ = 20					; size = 4
??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z PROC ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>, COMDAT
; _this$ = ecx

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIDataBase@@@@6B@

; 186  : CTempldateHelper<IModeluInterface>::CTempldateHelper(REFGUID Guid, DWORD dwVersion, LPCTSTR pszModuleDll, LPCSTR pszCreateProc) : m_dwVersion(dwVersion), m_Guid(Guid)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _dwVersion$[ebp]
  00024	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 188  : 	//辅助变量
; 189  : 	m_szDescribe[0]=0;

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 190  : 
; 191  : 	//内核信息
; 192  : 	m_hDllInstance=NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0

; 193  : 	m_pIModeluInterface=NULL;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 194  : 
; 195  : 	//组件属性
; 196  : 	lstrcpynA(m_szCreateProc,pszCreateProc,CountArray(m_szCreateProc));

  00054	6a 40		 push	 64			; 00000040H
  00056	8b 45 14	 mov	 eax, DWORD PTR _pszCreateProc$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00060	51		 push	 ecx
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 197  : 	lstrcpyn(m_szModuleDllName,pszModuleDll,CountArray(m_szModuleDllName));

  00067	68 04 01 00 00	 push	 260			; 00000104H
  0006c	8b 45 10	 mov	 eax, DWORD PTR _pszModuleDll$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00076	51		 push	 ecx
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 198  : 
; 199  : 	return;
; 200  : }

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 10 00	 ret	 16			; 00000010H
??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ENDP ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduleinfomanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
