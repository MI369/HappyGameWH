; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\模块管理\DlgServerMatch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ	; CDlgServerMatch::OnBnClickedLoadMatch
PUBLIC	?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ	; CDlgServerMatch::OnBnClickedOptionMatch
PUBLIC	?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ	; CDlgServerMatch::OnBnClickedDeleteMatch
PUBLIC	?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ	; CDlgServerMatch::OnBnClickedCreateMatch
PUBLIC	?OnNMDblclkServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z ; CDlgServerMatch::OnNMDblclkServerList
PUBLIC	?OnLvnItemChangedServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z ; CDlgServerMatch::OnLvnItemChangedServerList
EXTRN	?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ:PROC ; CDialog::GetThisMessageMap
CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
?_messageEntries@?1??GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; `CDlgServerMatch::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	02342H
	DD	02342H
	DD	03aH
	DD	FLAT:?OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ
	DD	0111H
	DD	00H
	DD	02347H
	DD	02347H
	DD	03aH
	DD	FLAT:?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ
	DD	0111H
	DD	00H
	DD	02343H
	DD	02343H
	DD	03aH
	DD	FLAT:?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ
	DD	0111H
	DD	00H
	DD	02348H
	DD	02348H
	DD	03aH
	DD	FLAT:?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ
	DD	04eH
	DD	0fffdH
	DD	02341H
	DD	02341H
	DD	03eH
	DD	FLAT:?OnNMDblclkServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	04eH
	DD	0ff9bH
	DD	02341H
	DD	02341H
	DD	03eH
	DD	FLAT:?OnLvnItemChangedServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialog@@KGPBUAFX_MSGMAP@@XZ ; `CDlgServerMatch::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAX@Z			; __global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAXI@Z			; __global_delete
PUBLIC	?__global_array_delete@@YAXPAX@Z		; __global_array_delete
PUBLIC	?__global_array_delete@@YAXPAXI@Z		; __global_array_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_s_l
PUBLIC	__vsnprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	_wmemcpy
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
PUBLIC	??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ	; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
PUBLIC	?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance
PUBLIC	?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
PUBLIC	??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
PUBLIC	?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
PUBLIC	??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z	; CTempldateHelper<IDataBase>::`scalar deleting destructor'
PUBLIC	??0CDataBaseHelper@@QAE@XZ			; CDataBaseHelper::CDataBaseHelper
PUBLIC	??1CDataBaseHelper@@UAE@XZ			; CDataBaseHelper::~CDataBaseHelper
PUBLIC	??_GCDataBaseHelper@@UAEPAXI@Z			; CDataBaseHelper::`scalar deleting destructor'
PUBLIC	??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
PUBLIC	?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt
PUBLIC	??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
PUBLIC	??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
PUBLIC	??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
PUBLIC	??0CMatchInfoBuffer@@QAE@ABV0@@Z		; CMatchInfoBuffer::CMatchInfoBuffer
PUBLIC	??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z		; CMatchInfoBuffer::operator=
PUBLIC	??_GCMatchInfoBuffer@@UAEPAXI@Z			; CMatchInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECMatchInfoBuffer@@UAEPAXI@Z			; CMatchInfoBuffer::`vector deleting destructor'
PUBLIC	??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
PUBLIC	??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor'
PUBLIC	??0CRewardInfoBuffer@@QAE@ABV0@@Z		; CRewardInfoBuffer::CRewardInfoBuffer
PUBLIC	??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z		; CRewardInfoBuffer::operator=
PUBLIC	??_GCRewardInfoBuffer@@UAEPAXI@Z		; CRewardInfoBuffer::`scalar deleting destructor'
PUBLIC	??_ECRewardInfoBuffer@@UAEPAXI@Z		; CRewardInfoBuffer::`vector deleting destructor'
PUBLIC	??0CMatchInfoManager@@QAE@ABV0@@Z		; CMatchInfoManager::CMatchInfoManager
PUBLIC	??4CMatchInfoManager@@QAEAAV0@ABV0@@Z		; CMatchInfoManager::operator=
PUBLIC	??_GCMatchInfoManager@@UAEPAXI@Z		; CMatchInfoManager::`scalar deleting destructor'
PUBLIC	??_ECMatchInfoManager@@UAEPAXI@Z		; CMatchInfoManager::`vector deleting destructor'
PUBLIC	??0CDlgServerMatch@@QAE@XZ			; CDlgServerMatch::CDlgServerMatch
PUBLIC	??1CDlgServerMatch@@UAE@XZ			; CDlgServerMatch::~CDlgServerMatch
PUBLIC	?OnInitDialog@CDlgServerMatch@@MAEHXZ		; CDlgServerMatch::OnInitDialog
PUBLIC	?DoDataExchange@CDlgServerMatch@@MAEXPAVCDataExchange@@@Z ; CDlgServerMatch::DoDataExchange
PUBLIC	?OpenGameMatch@CDlgServerMatch@@QAE_NAAUtagGameServiceAttrib@@AAUtagGameServiceOption@@@Z ; CDlgServerMatch::OpenGameMatch
PUBLIC	?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ	; CDlgServerMatch::LoadDBMatchItem
PUBLIC	?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ	; CDlgServerMatch::QueryMatchDataBase
PUBLIC	?GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerMatch::GetThisMessageMap
PUBLIC	?GetMessageMap@CDlgServerMatch@@MBEPBUAFX_MSGMAP@@XZ ; CDlgServerMatch::GetMessageMap
PUBLIC	??_GCDlgServerMatch@@UAEPAXI@Z			; CDlgServerMatch::`scalar deleting destructor'
PUBLIC	??_ECDlgServerMatch@@UAEPAXI@Z			; CDlgServerMatch::`vector deleting destructor'
PUBLIC	?OnOK@CDlgMatchItem@@MAEXXZ			; CDlgMatchItem::OnOK
PUBLIC	?OnCancel@CDlgMatchItem@@MAEXXZ			; CDlgMatchItem::OnCancel
PUBLIC	?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ ; CDlgMatchItem::GetGameMatchOption
PUBLIC	?SetGameKindID@CDlgMatchWizard@@QAEXG@Z		; CDlgMatchWizard::SetGameKindID
PUBLIC	?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
PUBLIC	?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetPlatformDBParameter
PUBLIC	?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetGameMatchDBParameter
PUBLIC	?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ; CModuleDBParameter::SetGameMatchDBParameter
PUBLIC	?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
PUBLIC	??0CModuleDBParameter@@QAE@ABV0@@Z		; CModuleDBParameter::CModuleDBParameter
PUBLIC	??4CModuleDBParameter@@QAEAAV0@ABV0@@Z		; CModuleDBParameter::operator=
PUBLIC	??_GCModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`scalar deleting destructor'
PUBLIC	??_ECModuleDBParameter@@UAEPAXI@Z		; CModuleDBParameter::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ		; _snprintf_s<128>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDialog@@8			; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R3CDialog@@8					; CDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialog@@8					; CDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7?$CTempldateHelper@UIDataBase@@@@6B@	; CTempldateHelper<IDataBase>::`vftable'
PUBLIC	??_7CDataBaseHelper@@6B@			; CDataBaseHelper::`vftable'
PUBLIC	??_C@_0P@IKJBDFNG@CreateDataBase@		; `string'
PUBLIC	??_C@_0BB@BEMLEOHB@KernelEngine?4dll@		; `string'
PUBLIC	??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
PUBLIC	??_7CMatchInfoBuffer@@6B@			; CMatchInfoBuffer::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vftable'
PUBLIC	??_7CRewardInfoBuffer@@6B@			; CRewardInfoBuffer::`vftable'
PUBLIC	??_7CMatchInfoManager@@6B@			; CMatchInfoManager::`vftable'
PUBLIC	??_7CDlgServerMatch@@6B@			; CDlgServerMatch::`vftable'
PUBLIC	??_7CModuleDBParameter@@6B@			; CModuleDBParameter::`vftable'
PUBLIC	??_C@_0BC@LFCAOGLK@ModuleManager?4dll@		; `string'
PUBLIC	?__LINE__Var@?0??LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ@4JA ; `CDlgServerMatch::LoadDBMatchItem'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ@4JA ; `CDlgServerMatch::QueryMatchDataBase'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@EOFIIHMB@?$EAstrDataBaseAddr@		; `string'
PUBLIC	??_C@_0BI@EBKHBLK@GSP_GS_LoadDataBaseInfo@	; `string'
PUBLIC	??_C@_0O@BGGHDOEH@ErrorDescribe@		; `string'
PUBLIC	??_C@_06EKCLIHPK@DBUser@			; `string'
PUBLIC	??_C@_0L@CINAGOHO@DBPassword@			; `string'
PUBLIC	??_C@_06NHDHPCNO@DBPort@			; `string'
PUBLIC	??_R0PAUIDataBaseException@@@8			; IDataBaseException * `RTTI Type Descriptor'
PUBLIC	?__LINE__Var@?0??OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ@4JA ; `CDlgServerMatch::OnBnClickedLoadMatch'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ@4JA ; `CDlgServerMatch::OnBnClickedOptionMatch'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ@4JA ; `CDlgServerMatch::OnBnClickedDeleteMatch'::`1'::__LINE__Var
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ ; `string'
PUBLIC	??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4CDataBaseHelper@@6B@			; CDataBaseHelper::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDataBaseHelper@@@8			; CDataBaseHelper `RTTI Type Descriptor'
PUBLIC	??_R3CDataBaseHelper@@8				; CDataBaseHelper::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDataBaseHelper@@8				; CDataBaseHelper::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDataBaseHelper@@8		; CDataBaseHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8	; CTempldateHelper<IDataBase> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTempldateHelper@UIDataBase@@@@8		; CTempldateHelper<IDataBase>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTempldateHelper@UIDataBase@@@@8		; CTempldateHelper<IDataBase>::`RTTI Base Class Array'
PUBLIC	??_R4?$CTempldateHelper@UIDataBase@@@@6B@	; CTempldateHelper<IDataBase>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchInfoBuffer@@6B@			; CMatchInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchInfoBuffer@@@8			; CMatchInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CMatchInfoBuffer@@8			; CMatchInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchInfoBuffer@@8			; CMatchInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchInfoBuffer@@8		; CMatchInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRewardInfoBuffer@@6B@			; CRewardInfoBuffer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRewardInfoBuffer@@@8			; CRewardInfoBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CRewardInfoBuffer@@8			; CRewardInfoBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRewardInfoBuffer@@8			; CRewardInfoBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRewardInfoBuffer@@8		; CRewardInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CMatchInfoManager@@6B@			; CMatchInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMatchInfoManager@@@8			; CMatchInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CMatchInfoManager@@8			; CMatchInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMatchInfoManager@@8			; CMatchInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMatchInfoManager@@8		; CMatchInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CDlgServerMatch@@6B@			; CDlgServerMatch::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDlgServerMatch@@@8			; CDlgServerMatch `RTTI Type Descriptor'
PUBLIC	??_R3CDlgServerMatch@@8				; CDlgServerMatch::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDlgServerMatch@@8				; CDlgServerMatch::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDlgServerMatch@@8		; CDlgServerMatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CModuleDBParameter@@6B@			; CModuleDBParameter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCModuleDBParameter@@@8			; CModuleDBParameter `RTTI Type Descriptor'
PUBLIC	??_R3CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CModuleDBParameter@@8			; CModuleDBParameter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CModuleDBParameter@@8		; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z:PROC ; DDX_Control
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:PROC		; CWnd::GetDlgItem
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:PROC		; CWnd::EnableWindow
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ:PROC ; CDialog::GetRuntimeClass
EXTRN	?Create@CDialog@@UAEHPBDPAVCWnd@@@Z:PROC	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:PROC		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:PROC ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:PROC ; CDialog::CreateIndirect
EXTRN	??0CDialog@@QAE@IPAVCWnd@@@Z:PROC		; CDialog::CDialog
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	?EndDialog@CDialog@@QAEXH@Z:PROC		; CDialog::EndDialog
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:PROC		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:PROC	; CDialog::OnSetFont
EXTRN	?OnOK@CDialog@@MAEXXZ:PROC			; CDialog::OnOK
EXTRN	?OnCancel@CDialog@@MAEXXZ:PROC			; CDialog::OnCancel
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	?AssertValid@CDialog@@UBEXXZ:PROC		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:PROC	; CDialog::Dump
EXTRN	?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z:PROC ; CDialog::PreTranslateMessage
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:PROC		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CDialog::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CDialog::GetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:PROC		; CDialog::PreInitDialog
EXTRN	?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z:PROC ; AfxSetResourceHandle
EXTRN	?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z:PROC	; AfxLoadLibrary
EXTRN	?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z:PROC	; AfxFreeLibrary
EXTRN	?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ:PROC ; CListCtrl::GetFirstSelectedItemPosition
EXTRN	?GetNextSelectedItem@CListCtrl@@QBEHAAPAU__POSITION@@@Z:PROC ; CListCtrl::GetNextSelectedItem
EXTRN	?GetItemData@CListCtrl@@QBEKH@Z:PROC		; CListCtrl::GetItemData
EXTRN	?DeleteItem@CListCtrl@@QAEHH@Z:PROC		; CListCtrl::DeleteItem
EXTRN	?DeleteAllItems@CListCtrl@@QAEHXZ:PROC		; CListCtrl::DeleteAllItems
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?XorCrevasse@CWHEncrypt@@SA_NPBDPADG@Z:PROC
EXTRN	__imp_?GetMachineID@CWHService@@SA_NQAD@Z:PROC
EXTRN	??_E?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z:PROC ; CTempldateHelper<IDataBase>::`vector deleting destructor'
EXTRN	??_ECDataBaseHelper@@UAEPAXI@Z:PROC		; CDataBaseHelper::`vector deleting destructor'
EXTRN	__imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z:PROC
EXTRN	__imp_??1CDataBaseAide@@UAE@XZ:PROC
EXTRN	__imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z:PROC
EXTRN	__imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z:PROC
EXTRN	__imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z:PROC
EXTRN	__imp_?ResetParameter@CDataBaseAide@@QAEXXZ:PROC
EXTRN	__imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z:PROC
EXTRN	__imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??0CMatchListControl@@QAE@XZ:PROC		; CMatchListControl::CMatchListControl
EXTRN	??1CMatchListControl@@UAE@XZ:PROC		; CMatchListControl::~CMatchListControl
EXTRN	?InsertMatchOption@CMatchListControl@@QAE_NPAUtagGameMatchOption@@@Z:PROC ; CMatchListControl::InsertMatchOption
EXTRN	?UpdateMatchOption@CMatchListControl@@QAE_NPAUtagGameMatchOption@@@Z:PROC ; CMatchListControl::UpdateMatchOption
EXTRN	??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vector deleting destructor'
EXTRN	??0CMatchInfoBuffer@@QAE@XZ:PROC		; CMatchInfoBuffer::CMatchInfoBuffer
EXTRN	??1CMatchInfoBuffer@@UAE@XZ:PROC		; CMatchInfoBuffer::~CMatchInfoBuffer
EXTRN	?DeleteMatchOption@CMatchInfoBuffer@@QAE_NK@Z:PROC ; CMatchInfoBuffer::DeleteMatchOption
EXTRN	?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z:PROC ; CMatchInfoBuffer::InsertMatchOption
EXTRN	??_E?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vector deleting destructor'
EXTRN	??1CRewardInfoBuffer@@UAE@XZ:PROC		; CRewardInfoBuffer::~CRewardInfoBuffer
EXTRN	??0CMatchInfoManager@@QAE@XZ:PROC		; CMatchInfoManager::CMatchInfoManager
EXTRN	??1CMatchInfoManager@@UAE@XZ:PROC		; CMatchInfoManager::~CMatchInfoManager
EXTRN	?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z:PROC ; CMatchInfoManager::LoadGameMatchOption
EXTRN	?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z:PROC ; CMatchInfoManager::DeleteGameMatchOption
EXTRN	??0CDlgMatchWizard@@QAE@XZ:PROC			; CDlgMatchWizard::CDlgMatchWizard
EXTRN	??1CDlgMatchWizard@@UAE@XZ:PROC			; CDlgMatchWizard::~CDlgMatchWizard
EXTRN	?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z:PROC ; CDlgMatchWizard::GetGameMatchOption
EXTRN	?SetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z:PROC ; CDlgMatchWizard::SetGameMatchOption
EXTRN	??1CModuleDBParameter@@UAE@XZ:PROC		; CModuleDBParameter::~CModuleDBParameter
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A:DWORD ; CModuleDBParameter::m_pModuleDBParameter
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CModuleDBParameter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CModuleDBParameter@@8 DD FLAT:??_R0?AVCModuleDBParameter@@@8 ; CModuleDBParameter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R2CModuleDBParameter@@8
rdata$r	SEGMENT
??_R2CModuleDBParameter@@8 DD FLAT:??_R1A@?0A@EA@CModuleDBParameter@@8 ; CModuleDBParameter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CModuleDBParameter@@8
rdata$r	SEGMENT
??_R3CModuleDBParameter@@8 DD 00H			; CModuleDBParameter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCModuleDBParameter@@@8
data$r	SEGMENT
??_R0?AVCModuleDBParameter@@@8 DD FLAT:??_7type_info@@6B@ ; CModuleDBParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCModuleDBParameter@@', 00H
data$r	ENDS
;	COMDAT ??_R4CModuleDBParameter@@6B@
rdata$r	SEGMENT
??_R4CModuleDBParameter@@6B@ DD 00H			; CModuleDBParameter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCModuleDBParameter@@@8
	DD	FLAT:??_R3CModuleDBParameter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDlgServerMatch@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDlgServerMatch@@8 DD FLAT:??_R0?AVCDlgServerMatch@@@8 ; CDlgServerMatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDlgServerMatch@@8
rdata$r	ENDS
;	COMDAT ??_R2CDlgServerMatch@@8
rdata$r	SEGMENT
??_R2CDlgServerMatch@@8 DD FLAT:??_R1A@?0A@EA@CDlgServerMatch@@8 ; CDlgServerMatch::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDlgServerMatch@@8
rdata$r	SEGMENT
??_R3CDlgServerMatch@@8 DD 00H				; CDlgServerMatch::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDlgServerMatch@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDlgServerMatch@@@8
data$r	SEGMENT
??_R0?AVCDlgServerMatch@@@8 DD FLAT:??_7type_info@@6B@	; CDlgServerMatch `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDlgServerMatch@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDlgServerMatch@@6B@
rdata$r	SEGMENT
??_R4CDlgServerMatch@@6B@ DD 00H			; CDlgServerMatch::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDlgServerMatch@@@8
	DD	FLAT:??_R3CDlgServerMatch@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchInfoManager@@8 DD FLAT:??_R0?AVCMatchInfoManager@@@8 ; CMatchInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchInfoManager@@8
rdata$r	SEGMENT
??_R2CMatchInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CMatchInfoManager@@8 ; CMatchInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchInfoManager@@8
rdata$r	SEGMENT
??_R3CMatchInfoManager@@8 DD 00H			; CMatchInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchInfoManager@@@8
data$r	SEGMENT
??_R0?AVCMatchInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CMatchInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchInfoManager@@6B@
rdata$r	SEGMENT
??_R4CMatchInfoManager@@6B@ DD 00H			; CMatchInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchInfoManager@@@8
	DD	FLAT:??_R3CMatchInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRewardInfoBuffer@@8 DD FLAT:??_R0?AVCRewardInfoBuffer@@@8 ; CRewardInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R2CRewardInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CRewardInfoBuffer@@8 ; CRewardInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRewardInfoBuffer@@8
rdata$r	SEGMENT
??_R3CRewardInfoBuffer@@8 DD 00H			; CRewardInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRewardInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCRewardInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@ ; CRewardInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRewardInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRewardInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CRewardInfoBuffer@@6B@ DD 00H			; CRewardInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRewardInfoBuffer@@@8
	DD	FLAT:??_R3CRewardInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMatchInfoBuffer@@8 DD FLAT:??_R0?AVCMatchInfoBuffer@@@8 ; CMatchInfoBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R2CMatchInfoBuffer@@8 DD FLAT:??_R1A@?0A@EA@CMatchInfoBuffer@@8 ; CMatchInfoBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMatchInfoBuffer@@8
rdata$r	SEGMENT
??_R3CMatchInfoBuffer@@8 DD 00H				; CMatchInfoBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMatchInfoBuffer@@@8
data$r	SEGMENT
??_R0?AVCMatchInfoBuffer@@@8 DD FLAT:??_7type_info@@6B@	; CMatchInfoBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMatchInfoBuffer@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMatchInfoBuffer@@6B@
rdata$r	SEGMENT
??_R4CMatchInfoBuffer@@6B@ DD 00H			; CMatchInfoBuffer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMatchInfoBuffer@@@8
	DD	FLAT:??_R3CMatchInfoBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8 DD 00H ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8 DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTempldateHelper@UIDataBase@@@@6B@
rdata$r	SEGMENT
??_R4?$CTempldateHelper@UIDataBase@@@@6B@ DD 00H	; CTempldateHelper<IDataBase>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8
	DD	FLAT:??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R2?$CTempldateHelper@UIDataBase@@@@8 DD FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R3?$CTempldateHelper@UIDataBase@@@@8 DD 00H		; CTempldateHelper<IDataBase>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8
data$r	SEGMENT
??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8 DD FLAT:??_7type_info@@6B@ ; CTempldateHelper<IDataBase> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTempldateHelper@UIDataBase@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8 DD FLAT:??_R0?AV?$CTempldateHelper@UIDataBase@@@@@8 ; CTempldateHelper<IDataBase>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDataBaseHelper@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDataBaseHelper@@8 DD FLAT:??_R0?AVCDataBaseHelper@@@8 ; CDataBaseHelper::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_R2CDataBaseHelper@@8
rdata$r	SEGMENT
??_R2CDataBaseHelper@@8 DD FLAT:??_R1A@?0A@EA@CDataBaseHelper@@8 ; CDataBaseHelper::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CTempldateHelper@UIDataBase@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CDataBaseHelper@@8
rdata$r	SEGMENT
??_R3CDataBaseHelper@@8 DD 00H				; CDataBaseHelper::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDataBaseHelper@@@8
data$r	SEGMENT
??_R0?AVCDataBaseHelper@@@8 DD FLAT:??_7type_info@@6B@	; CDataBaseHelper `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDataBaseHelper@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDataBaseHelper@@6B@
rdata$r	SEGMENT
??_R4CDataBaseHelper@@6B@ DD 00H			; CDataBaseHelper::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDataBaseHelper@@@8
	DD	FLAT:??_R3CDataBaseHelper@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
CONST	SEGMENT
??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@ DB 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH
	DB	0a1H, 0b0H, '%s', 0a1H, 0b1H, 0b2H, 0faH, 0c9H, 0faH, 0ceH, 0b4H
	DB	0d6H, 0aaH, 0d2H, 0ecH, 0b3H, 0a3H, 0b4H, 0edH, 0ceH, 0f3H, 0a3H
	DB	0acH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ DB 0d3H
	DB	0c9H, 0d3H, 0daH, 0a1H, 0b0H, '%s', 0a1H, 0b1H, 0a3H, 0acH, 0d7H
	DB	0e9H, 0bcH, 0feH, 0b4H, 0b4H, 0bdH, 0a8H, 0caH, 0a7H, 0b0H, 0dcH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@ DB 0b5H
	DB	0f7H, 0d3H, 0c3H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H
	DB	0b1H, 0c9H, 0faH, 0b3H, 0c9H, 0b6H, 0d4H, 0cfH, 0f3H, 0caH, 0a7H
	DB	0b0H, 0dcH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
CONST	SEGMENT
??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@ DB 0d5H
	DB	0d2H, 0b2H, 0bbH, 0b5H, 0bdH, 0d7H, 0e9H, 0bcH, 0feH, 0b4H, 0b4H
	DB	0bdH, 0a8H, 0baH, 0afH, 0caH, 0fdH, 0a1H, 0b0H, '%s', 0a1H, 0b1H
	DB	':%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@ DB 0a1H
	DB	0b0H, '%s', 0a1H, 0b1H, 0c4H, 0a3H, 0bfH, 0e9H, 0bcH, 0d3H, 0d4H
	DB	0d8H, 0caH, 0a7H, 0b0H, 0dcH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\m'
	DB	'odule.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ@4JA DD 0f9H ; `CDlgServerMatch::OnBnClickedDeleteMatch'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ@4JA DD 0d8H ; `CDlgServerMatch::OnBnClickedOptionMatch'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ@4JA DD 0c6H ; `CDlgServerMatch::OnBnClickedLoadMatch'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_R0PAUIDataBaseException@@@8
data$r	SEGMENT
??_R0PAUIDataBaseException@@@8 DD FLAT:??_7type_info@@6B@ ; IDataBaseException * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAUIDataBaseException@@', 00H
data$r	ENDS
;	COMDAT ??_C@_06NHDHPCNO@DBPort@
CONST	SEGMENT
??_C@_06NHDHPCNO@DBPort@ DB 'DBPort', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CINAGOHO@DBPassword@
CONST	SEGMENT
??_C@_0L@CINAGOHO@DBPassword@ DB 'DBPassword', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EKCLIHPK@DBUser@
CONST	SEGMENT
??_C@_06EKCLIHPK@DBUser@ DB 'DBUser', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BGGHDOEH@ErrorDescribe@
CONST	SEGMENT
??_C@_0O@BGGHDOEH@ErrorDescribe@ DB 'ErrorDescribe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EBKHBLK@GSP_GS_LoadDataBaseInfo@
CONST	SEGMENT
??_C@_0BI@EBKHBLK@GSP_GS_LoadDataBaseInfo@ DB 'GSP_GS_LoadDataBaseInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EOFIIHMB@?$EAstrDataBaseAddr@
CONST	SEGMENT
??_C@_0BB@EOFIIHMB@?$EAstrDataBaseAddr@ DB '@strDataBaseAddr', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ@4JA DD 07cH ; `CDlgServerMatch::QueryMatchDataBase'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0a3H, 0bfH, 0e9H, 0b9H, 0dcH, 0c0H, 0edH, '\d'
	DB	'lgservermatch.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ@4JA DD 058H ; `CDlgServerMatch::LoadDBMatchItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
CONST	SEGMENT
??_C@_0BC@LFCAOGLK@ModuleManager?4dll@ DB 'ModuleManager.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CModuleDBParameter@@6B@
CONST	SEGMENT
??_7CModuleDBParameter@@6B@ DD FLAT:??_R4CModuleDBParameter@@6B@ ; CModuleDBParameter::`vftable'
	DD	FLAT:??_ECModuleDBParameter@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CDlgServerMatch@@6B@
CONST	SEGMENT
??_7CDlgServerMatch@@6B@ DD FLAT:??_R4CDlgServerMatch@@6B@ ; CDlgServerMatch::`vftable'
	DD	FLAT:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECDlgServerMatch@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CDlgServerMatch@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CDlgServerMatch@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialog@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPBDPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CDlgServerMatch@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CMatchInfoManager@@6B@
CONST	SEGMENT
??_7CMatchInfoManager@@6B@ DD FLAT:??_R4CMatchInfoManager@@6B@ ; CMatchInfoManager::`vftable'
	DD	FLAT:??_ECMatchInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRewardInfoBuffer@@6B@
CONST	SEGMENT
??_7CRewardInfoBuffer@@6B@ DD FLAT:??_R4CRewardInfoBuffer@@6B@ ; CRewardInfoBuffer::`vftable'
	DD	FLAT:??_ECRewardInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CMatchInfoBuffer@@6B@
CONST	SEGMENT
??_7CMatchInfoBuffer@@6B@ DD FLAT:??_R4CMatchInfoBuffer@@6B@ ; CMatchInfoBuffer::`vftable'
	DD	FLAT:??_ECMatchInfoBuffer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0BB@BEMLEOHB@KernelEngine?4dll@
CONST	SEGMENT
??_C@_0BB@BEMLEOHB@KernelEngine?4dll@ DB 'KernelEngine.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IKJBDFNG@CreateDataBase@
CONST	SEGMENT
??_C@_0P@IKJBDFNG@CreateDataBase@ DB 'CreateDataBase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDataBaseHelper@@6B@
CONST	SEGMENT
??_7CDataBaseHelper@@6B@ DD FLAT:??_R4CDataBaseHelper@@6B@ ; CDataBaseHelper::`vftable'
	DD	FLAT:??_ECDataBaseHelper@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTempldateHelper@UIDataBase@@@@6B@
CONST	SEGMENT
??_7?$CTempldateHelper@UIDataBase@@@@6B@ DD FLAT:??_R4?$CTempldateHelper@UIDataBase@@@@6B@ ; CTempldateHelper<IDataBase>::`vftable'
	DD	FLAT:??_E?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$r	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$r	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CDialog@@8
rdata$r	SEGMENT
??_R2CDialog@@8 DD FLAT:??_R1A@?0A@EA@CDialog@@8	; CDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialog@@8
rdata$r	SEGMENT
??_R3CDialog@@8 DD 00H					; CDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
data$r	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDlgServerMatch@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ$0
__ehfuncinfo$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ$0
__ehfuncinfo$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ$0
__ehfuncinfo$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$4 DD 00H
	DD	FLAT:??_R0PAUIDataBaseException@@@8
	DD	0fffff938H
	DD	FLAT:__catch$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$0
__tryblocktable$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$4
__unwindtable$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ$0
__ehfuncinfo$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDlgServerMatch@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDlgServerMatch@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDlgServerMatch@@QAE@XZ$1
__ehfuncinfo$??0CDlgServerMatch@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDlgServerMatch@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchInfoManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECRewardInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECMatchInfoBuffer@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$3
__catchsym$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$3 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$1
__ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ PROC		; _snprintf_s<128>, COMDAT

; 2079 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2073 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
  0000f	8b 45 fc	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001a	52		 push	 edx
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __vsnprintf_s
  00029	83 c4 14	 add	 esp, 20			; 00000014H
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ENDP		; _snprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 08 01 00 00	 push	 264			; 00000108H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 08 01
	00 00		 imul	 ecx, DWORD PTR [eax-4], 264
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 11		 je	 SHORT $LN4@vector
  0008a	68 08 01 00 00	 push	 264			; 00000108H
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00098	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECModuleDBParameter@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECModuleDBParameter@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCModuleDBParameter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCModuleDBParameter@@UAEPAXI@Z PROC			; CModuleDBParameter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CModuleDBParameter@@UAE@XZ ; CModuleDBParameter::~CModuleDBParameter
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 08 01 00 00	 push	 264			; 00000108H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCModuleDBParameter@@UAEPAXI@Z ENDP			; CModuleDBParameter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CModuleDBParameter@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z PROC		; CModuleDBParameter::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0000f	83 c6 04	 add	 esi, 4
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	83 c7 04	 add	 edi, 4
  00018	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00024	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  0002a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0002d	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00033	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00038	f3 a5		 rep movsd
  0003a	66 a5		 movsw
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4CModuleDBParameter@@QAEAAV0@ABV0@@Z ENDP		; CModuleDBParameter::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CModuleDBParameter@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CModuleDBParameter@@QAE@ABV0@@Z PROC			; CModuleDBParameter::CModuleDBParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CModuleDBParameter@@6B@
  00015	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00018	83 c6 04	 add	 esi, 4
  0001b	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0001e	83 c7 04	 add	 edi, 4
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f3 a5		 rep movsd
  00028	66 a5		 movsw
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	81 c6 86 00 00
	00		 add	 esi, 134		; 00000086H
  00033	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00036	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  0003c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00041	f3 a5		 rep movsd
  00043	66 a5		 movsw
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0CModuleDBParameter@@QAE@ABV0@@Z ENDP			; CModuleDBParameter::CModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ
_TEXT	SEGMENT
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ PROC ; CModuleDBParameter::GetModuleDBParameter, COMDAT

; 46   : 	static CModuleDBParameter * GetModuleDBParameter() { return m_pModuleDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pModuleDBParameter@CModuleDBParameter@@1PAV1@A ; CModuleDBParameter::m_pModuleDBParameter
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ENDP ; CModuleDBParameter::GetModuleDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameMatchDBParameter$ = 8				; size = 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 41   : 	VOID SetGameMatchDBParameter(tagDataBaseParameter & GameMatchDBParameter) { m_GameMatchDBParameter=GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 86 00 00
	00		 add	 edi, 134		; 00000086H
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	8b 75 08	 mov	 esi, DWORD PTR _GameMatchDBParameter$[ebp]
  0001d	f3 a5		 rep movsd
  0001f	66 a5		 movsw
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?SetGameMatchDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetGameMatchDBParameter, COMDAT
; _this$ = ecx

; 39   : 	tagDataBaseParameter * GetGameMatchDBParameter() { return &m_GameMatchDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	05 86 00 00 00	 add	 eax, 134		; 00000086H
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetGameMatchDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PlatformDBParameter$ = 8				; size = 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z PROC ; CModuleDBParameter::SetPlatformDBParameter, COMDAT
; _this$ = ecx

; 34   : 	VOID SetPlatformDBParameter(tagDataBaseParameter & PlatformDBParameter) { m_PlatformDBParameter=PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	83 c7 04	 add	 edi, 4
  00012	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00017	8b 75 08	 mov	 esi, DWORD PTR _PlatformDBParameter$[ebp]
  0001a	f3 a5		 rep movsd
  0001c	66 a5		 movsw
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
?SetPlatformDBParameter@CModuleDBParameter@@QAEXAAUtagDataBaseParameter@@@Z ENDP ; CModuleDBParameter::SetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\moduledbparameter.h
;	COMDAT ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ PROC ; CModuleDBParameter::GetPlatformDBParameter, COMDAT
; _this$ = ecx

; 32   : 	tagDataBaseParameter * GetPlatformDBParameter() { return &m_PlatformDBParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ENDP ; CModuleDBParameter::GetPlatformDBParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?SetGameKindID@CDlgMatchWizard@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wKindID$ = 8						; size = 2
?SetGameKindID@CDlgMatchWizard@@QAEXG@Z PROC		; CDlgMatchWizard::SetGameKindID, COMDAT
; _this$ = ecx

; 512  : 	VOID SetGameKindID(WORD wKindID) { m_wKindID=wKindID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _wKindID$[ebp]
  00013	66 89 88 b4 00
	00 00		 mov	 WORD PTR [eax+180], cx
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
?SetGameKindID@CDlgMatchWizard@@QAEXG@Z ENDP		; CDlgMatchWizard::SetGameKindID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ PROC ; CDlgMatchItem::GetGameMatchOption, COMDAT
; _this$ = ecx

; 62   : 	tagGameMatchOption * GetGameMatchOption() { return m_pGameMatchOption; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 b0 00 00
	00		 mov	 eax, DWORD PTR [eax+176]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameMatchOption@CDlgMatchItem@@IAEPAUtagGameMatchOption@@XZ ENDP ; CDlgMatchItem::GetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?OnCancel@CDlgMatchItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnCancel@CDlgMatchItem@@MAEXXZ PROC			; CDlgMatchItem::OnCancel, COMDAT
; _this$ = ecx

; 44   : 	virtual VOID OnCancel() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnCancel@CDlgMatchItem@@MAEXXZ ENDP			; CDlgMatchItem::OnCancel
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgmatchwizard.h
;	COMDAT ?OnOK@CDlgMatchItem@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnOK@CDlgMatchItem@@MAEXXZ PROC			; CDlgMatchItem::OnOK, COMDAT
; _this$ = ecx

; 42   : 	virtual VOID OnOK() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnOK@CDlgMatchItem@@MAEXXZ ENDP			; CDlgMatchItem::OnOK
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECDlgServerMatch@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDlgServerMatch@@UAEPAXI@Z PROC			; CDlgServerMatch::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDlgServerMatch@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CDlgServerMatch@@UAE@XZ ; CDlgServerMatch::~CDlgServerMatch
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 30 0e 00 00	 push	 3632			; 00000e30H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 30 0e
	00 00		 imul	 ecx, DWORD PTR [eax-4], 3632
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CDlgServerMatch@@UAE@XZ ; CDlgServerMatch::~CDlgServerMatch
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 24		 je	 SHORT $LN4@vector
  0008a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0008d	83 e0 04	 and	 eax, 4
  00090	75 0b		 jne	 SHORT $LN5@vector
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009b	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:
  0009d	68 30 0e 00 00	 push	 3632			; 00000e30H
  000a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  000ab	83 c4 08	 add	 esp, 8
$LN4@vector:
  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bb	59		 pop	 ecx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDlgServerMatch@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDlgServerMatch@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDlgServerMatch@@UAEPAXI@Z ENDP			; CDlgServerMatch::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDlgServerMatch@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDlgServerMatch@@UAEPAXI@Z PROC			; CDlgServerMatch::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDlgServerMatch@@UAE@XZ ; CDlgServerMatch::~CDlgServerMatch
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 24		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	68 30 0e 00 00	 push	 3632			; 00000e30H
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003d	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??_GCDlgServerMatch@@UAEPAXI@Z ENDP			; CDlgServerMatch::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?GetMessageMap@CDlgServerMatch@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CDlgServerMatch@@MBEPBUAFX_MSGMAP@@XZ PROC ; CDlgServerMatch::GetMessageMap, COMDAT
; _this$ = ecx

; 12   : BEGIN_MESSAGE_MAP(CDlgServerMatch, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ ; CDlgServerMatch::GetThisMessageMap
  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?GetMessageMap@CDlgServerMatch@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerMatch::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ PROC ; CDlgServerMatch::GetThisMessageMap, COMDAT

; 12   : BEGIN_MESSAGE_MAP(CDlgServerMatch, CDialog)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 13   : 
; 14   : 	//按钮消息
; 15   : 	ON_BN_CLICKED(IDC_LOAD_MATCH, OnBnClickedLoadMatch)
; 16   : 	ON_BN_CLICKED(IDC_CREATE_MATCH, OnBnClickedCreateMatch)
; 17   : 	ON_BN_CLICKED(IDC_DELETE_MATCH, OnBnClickedDeleteMatch)
; 18   : 	ON_BN_CLICKED(IDC_OPTION_MATCH, OnBnClickedOptionMatch)
; 19   : 
; 20   : 	//控件消息
; 21   : 	ON_NOTIFY(NM_DBLCLK, IDC_MATCH_LIST, OnNMDblclkServerList)
; 22   : 	ON_NOTIFY(LVN_ITEMCHANGED, IDC_MATCH_LIST, OnLvnItemChangedServerList)
; 23   : 
; 24   : END_MESSAGE_MAP()

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?GetThisMessageMap@CDlgServerMatch@@KGPBUAFX_MSGMAP@@XZ ENDP ; CDlgServerMatch::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnLvnItemChangedServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_Position$ = -8						; size = 4
_this$ = -4						; size = 4
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnLvnItemChangedServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CDlgServerMatch::OnLvnItemChangedServerList, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 305  : 	//获取选择
; 306  : 	POSITION Position=m_MatchListControl.GetFirstSelectedItemPosition();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00015	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  0001a	89 45 f8	 mov	 DWORD PTR _Position$[ebp], eax

; 307  : 
; 308  : 	//设置列表
; 309  : 	if (Position!=NULL)

  0001d	83 7d f8 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00021	74 44		 je	 SHORT $LN2@OnLvnItemC

; 310  : 	{
; 311  : 		//设置按钮
; 312  : 		GetDlgItem(IDC_LOAD_MATCH)->EnableWindow(TRUE);

  00023	6a 01		 push	 1
  00025	68 42 23 00 00	 push	 9026			; 00002342H
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 313  : 		GetDlgItem(IDC_OPTION_MATCH)->EnableWindow(TRUE);

  00039	6a 01		 push	 1
  0003b	68 48 23 00 00	 push	 9032			; 00002348H
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 314  : 		GetDlgItem(IDC_DELETE_MATCH)->EnableWindow(TRUE);

  0004f	6a 01		 push	 1
  00051	68 43 23 00 00	 push	 9027			; 00002343H
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 315  : 	}
; 316  : 	else

  00065	eb 42		 jmp	 SHORT $LN1@OnLvnItemC
$LN2@OnLvnItemC:

; 317  : 	{
; 318  : 		//设置按钮
; 319  : 		GetDlgItem(IDC_LOAD_MATCH)->EnableWindow(FALSE);

  00067	6a 00		 push	 0
  00069	68 42 23 00 00	 push	 9026			; 00002342H
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 320  : 		GetDlgItem(IDC_OPTION_MATCH)->EnableWindow(FALSE);

  0007d	6a 00		 push	 0
  0007f	68 48 23 00 00	 push	 9032			; 00002348H
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 321  : 		GetDlgItem(IDC_DELETE_MATCH)->EnableWindow(FALSE);

  00093	6a 00		 push	 0
  00095	68 43 23 00 00	 push	 9027			; 00002343H
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN1@OnLvnItemC:

; 322  : 	}
; 323  : 
; 324  : 	return;
; 325  : }

  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 08 00	 ret	 8
?OnLvnItemChangedServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CDlgServerMatch::OnLvnItemChangedServerList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnNMDblclkServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pNMHDR$ = 8						; size = 4
_pResult$ = 12						; size = 4
?OnNMDblclkServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z PROC ; CDlgServerMatch::OnNMDblclkServerList, COMDAT
; _this$ = ecx

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 293  : 	//加载配置
; 294  : 	if (((NMITEMACTIVATE *)pNMHDR)->iItem!=LB_ERR)

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  0000f	83 78 0c ff	 cmp	 DWORD PTR [eax+12], -1
  00013	74 08		 je	 SHORT $LN1@OnNMDblclk

; 295  : 	{
; 296  : 		OnBnClickedLoadMatch();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ ; CDlgServerMatch::OnBnClickedLoadMatch
$LN1@OnNMDblclk:

; 297  : 	}
; 298  : 
; 299  : 	return;
; 300  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?OnNMDblclkServerList@CDlgServerMatch@@IAEXPAUtagNMHDR@@PAJ@Z ENDP ; CDlgServerMatch::OnNMDblclkServerList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ
_TEXT	SEGMENT
_pGameMatchOption$2 = -3688				; size = 4
_GameMatchOption$3 = -3684				; size = 712
_DlgMatchWizard$ = -2972				; size = 2952
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ PROC	; CDlgServerMatch::OnBnClickedCreateMatch, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 5c 10 00 00	 mov	 eax, 4188		; 0000105cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 270  : 	//设置控件
; 271  : 	CDlgMatchWizard DlgMatchWizard;

  00035	8d 8d 64 f4 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  0003b	e8 00 00 00 00	 call	 ??0CDlgMatchWizard@@QAE@XZ ; CDlgMatchWizard::CDlgMatchWizard
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 272  : 	DlgMatchWizard.SetGameKindID(m_GameServiceAttrib.wKindID);

  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	0f b7 88 98 0d
	00 00		 movzx	 ecx, WORD PTR [eax+3480]
  00051	51		 push	 ecx
  00052	8d 8d 64 f4 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetGameKindID@CDlgMatchWizard@@QAEXG@Z ; CDlgMatchWizard::SetGameKindID

; 273  : 
; 274  : 	//配置房间
; 275  :     if (DlgMatchWizard.DoModal()==IDOK)

  0005d	8d 8d 64 f4 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  00063	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 4b		 jne	 SHORT $LN2@OnBnClicke

; 276  : 	{
; 277  : 		//获取配置
; 278  : 		tagGameMatchOption GameMatchOption;
; 279  : 		DlgMatchWizard.GetGameMatchOption(GameMatchOption);

  0006d	8d 85 9c f1 ff
	ff		 lea	 eax, DWORD PTR _GameMatchOption$3[ebp]
  00073	50		 push	 eax
  00074	8d 8d 64 f4 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  0007a	e8 00 00 00 00	 call	 ?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ; CDlgMatchWizard::GetGameMatchOption

; 280  : 
; 281  : 		//插入配置
; 282  : 		tagGameMatchOption * pGameMatchOption=m_MatchInfoBuffer.InsertMatchOption(&GameMatchOption);

  0007f	8d 85 9c f1 ff
	ff		 lea	 eax, DWORD PTR _GameMatchOption$3[ebp]
  00085	50		 push	 eax
  00086	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  0008f	e8 00 00 00 00	 call	 ?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z ; CMatchInfoBuffer::InsertMatchOption
  00094	89 85 98 f1 ff
	ff		 mov	 DWORD PTR _pGameMatchOption$2[ebp], eax

; 283  : 		if (pGameMatchOption!=NULL)

  0009a	83 bd 98 f1 ff
	ff 00		 cmp	 DWORD PTR _pGameMatchOption$2[ebp], 0
  000a1	74 15		 je	 SHORT $LN2@OnBnClicke

; 284  : 		{
; 285  : 			m_MatchListControl.InsertMatchOption(pGameMatchOption);

  000a3	8b 85 98 f1 ff
	ff		 mov	 eax, DWORD PTR _pGameMatchOption$2[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  000b3	e8 00 00 00 00	 call	 ?InsertMatchOption@CMatchListControl@@QAE_NPAUtagGameMatchOption@@@Z ; CMatchListControl::InsertMatchOption
$LN2@OnBnClicke:

; 286  : 		}		
; 287  : 	}
; 288  : }

  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bf	8d 8d 64 f4 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  000c5	e8 00 00 00 00	 call	 ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
  000ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d4	59		 pop	 ecx
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000db	33 cd		 xor	 ecx, ebp
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ$0:
  00000	8d 8d 64 f4 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
__ehhandler$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 94 ef ff
	ff		 mov	 ecx, DWORD PTR [edx-4204]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedCreateMatch@CDlgServerMatch@@IAEXXZ ENDP	; CDlgServerMatch::OnBnClickedCreateMatch
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ
_TEXT	SEGMENT
_MatchInfoManager$ = -32				; size = 4
_pGameMatchOption$ = -28				; size = 4
_nListItem$ = -24					; size = 4
_Position$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ PROC	; CDlgServerMatch::OnBnClickedDeleteMatch, COMDAT
; _this$ = ecx

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 250  : 	//获取选择
; 251  : 	ASSERT(m_MatchListControl.GetFirstSelectedItemPosition()!=NULL);

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00034	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  00039	85 c0		 test	 eax, eax
  0003b	75 18		 jne	 SHORT $LN4@OnBnClicke
  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ@4JA
  00042	83 c0 02	 add	 eax, 2
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0004b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00050	85 c0		 test	 eax, eax
  00052	74 01		 je	 SHORT $LN4@OnBnClicke
  00054	cc		 int	 3
$LN4@OnBnClicke:

; 252  : 	POSITION Position=m_MatchListControl.GetFirstSelectedItemPosition();

  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0005e	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  00063	89 45 ec	 mov	 DWORD PTR _Position$[ebp], eax

; 253  : 	
; 254  : 	//获取房间
; 255  : 	INT nListItem=m_MatchListControl.GetNextSelectedItem(Position);

  00066	8d 45 ec	 lea	 eax, DWORD PTR _Position$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00073	e8 00 00 00 00	 call	 ?GetNextSelectedItem@CListCtrl@@QBEHAAPAU__POSITION@@@Z ; CListCtrl::GetNextSelectedItem
  00078	89 45 e8	 mov	 DWORD PTR _nListItem$[ebp], eax

; 256  : 	tagGameMatchOption * pGameMatchOption=(tagGameMatchOption *)m_MatchListControl.GetItemData(nListItem);

  0007b	8b 45 e8	 mov	 eax, DWORD PTR _nListItem$[ebp]
  0007e	50		 push	 eax
  0007f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00088	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  0008d	89 45 e4	 mov	 DWORD PTR _pGameMatchOption$[ebp], eax

; 257  : 
; 258  : 	//删除比赛
; 259  : 	CMatchInfoManager MatchInfoManager;

  00090	8d 4d e0	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00093	e8 00 00 00 00	 call	 ??0CMatchInfoManager@@QAE@XZ ; CMatchInfoManager::CMatchInfoManager
  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 260  : 	if (MatchInfoManager.DeleteGameMatchOption(pGameMatchOption->dwMatchID))

  0009f	8b 45 e4	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	51		 push	 ecx
  000a5	8d 4d e0	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  000a8	e8 00 00 00 00	 call	 ?DeleteGameMatchOption@CMatchInfoManager@@QAE_NK@Z ; CMatchInfoManager::DeleteGameMatchOption
  000ad	0f b6 d0	 movzx	 edx, al
  000b0	85 d2		 test	 edx, edx
  000b2	74 26		 je	 SHORT $LN2@OnBnClicke

; 261  : 	{		
; 262  : 		m_MatchListControl.DeleteItem(nListItem);

  000b4	8b 45 e8	 mov	 eax, DWORD PTR _nListItem$[ebp]
  000b7	50		 push	 eax
  000b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  000c1	e8 00 00 00 00	 call	 ?DeleteItem@CListCtrl@@QAEHH@Z ; CListCtrl::DeleteItem

; 263  : 		m_MatchInfoBuffer.DeleteMatchOption(pGameMatchOption->dwMatchID);

  000c6	8b 45 e4	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	51		 push	 ecx
  000cc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  000d5	e8 00 00 00 00	 call	 ?DeleteMatchOption@CMatchInfoBuffer@@QAE_NK@Z ; CMatchInfoBuffer::DeleteMatchOption
$LN2@OnBnClicke:

; 264  : 	}
; 265  : }

  000da	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e1	8d 4d e0	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  000e4	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  000e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f3	59		 pop	 ecx
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
__ehhandler$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedDeleteMatch@CDlgServerMatch@@IAEXXZ ENDP	; CDlgServerMatch::OnBnClickedDeleteMatch
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ
_TEXT	SEGMENT
_GameMatchOption$2 = -4408				; size = 712
_DlgMatchWizard$ = -3696				; size = 2952
_GameMatchOption$ = -744				; size = 712
_pGameMatchOption$ = -32				; size = 4
_nListItem$ = -28					; size = 4
_Position$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ PROC	; CDlgServerMatch::OnBnClickedOptionMatch, COMDAT
; _this$ = ecx

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 2c 13 00 00	 mov	 eax, 4908		; 0000132cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 	//获取选择
; 218  : 	ASSERT(m_MatchListControl.GetFirstSelectedItemPosition()!=NULL);

  00035	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0003e	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  00043	85 c0		 test	 eax, eax
  00045	75 18		 jne	 SHORT $LN4@OnBnClicke
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ@4JA
  0004c	83 c0 02	 add	 eax, 2
  0004f	50		 push	 eax
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00055	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005a	85 c0		 test	 eax, eax
  0005c	74 01		 je	 SHORT $LN4@OnBnClicke
  0005e	cc		 int	 3
$LN4@OnBnClicke:

; 219  : 	POSITION Position=m_MatchListControl.GetFirstSelectedItemPosition();

  0005f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00068	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  0006d	89 45 e8	 mov	 DWORD PTR _Position$[ebp], eax

; 220  : 	
; 221  : 	//获取房间
; 222  : 	INT nListItem=m_MatchListControl.GetNextSelectedItem(Position);

  00070	8d 45 e8	 lea	 eax, DWORD PTR _Position$[ebp]
  00073	50		 push	 eax
  00074	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0007d	e8 00 00 00 00	 call	 ?GetNextSelectedItem@CListCtrl@@QBEHAAPAU__POSITION@@@Z ; CListCtrl::GetNextSelectedItem
  00082	89 45 e4	 mov	 DWORD PTR _nListItem$[ebp], eax

; 223  : 	tagGameMatchOption * pGameMatchOption=(tagGameMatchOption *)m_MatchListControl.GetItemData(nListItem);

  00085	8b 45 e4	 mov	 eax, DWORD PTR _nListItem$[ebp]
  00088	50		 push	 eax
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00092	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00097	89 45 e0	 mov	 DWORD PTR _pGameMatchOption$[ebp], eax

; 224  : 
; 225  : 	//变量定义
; 226  : 	tagGameMatchOption GameMatchOption;
; 227  : 	CopyMemory(&GameMatchOption,pGameMatchOption,sizeof(GameMatchOption));

  0009a	68 c8 02 00 00	 push	 712			; 000002c8H
  0009f	8b 45 e0	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  000a2	50		 push	 eax
  000a3	8d 8d 18 fd ff
	ff		 lea	 ecx, DWORD PTR _GameMatchOption$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 _memcpy
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH

; 228  : 
; 229  : 	//设置控件
; 230  : 	CDlgMatchWizard DlgMatchWizard;

  000b2	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  000b8	e8 00 00 00 00	 call	 ??0CDlgMatchWizard@@QAE@XZ ; CDlgMatchWizard::CDlgMatchWizard
  000bd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 231  : 	DlgMatchWizard.SetGameMatchOption(GameMatchOption);

  000c4	8d 85 18 fd ff
	ff		 lea	 eax, DWORD PTR _GameMatchOption$[ebp]
  000ca	50		 push	 eax
  000cb	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  000d1	e8 00 00 00 00	 call	 ?SetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ; CDlgMatchWizard::SetGameMatchOption

; 232  : 	DlgMatchWizard.SetGameKindID(m_GameServiceAttrib.wKindID);	

  000d6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	0f b7 88 98 0d
	00 00		 movzx	 ecx, WORD PTR [eax+3480]
  000e0	51		 push	 ecx
  000e1	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  000e7	e8 00 00 00 00	 call	 ?SetGameKindID@CDlgMatchWizard@@QAEXG@Z ; CDlgMatchWizard::SetGameKindID

; 233  : 
; 234  : 	//配置比赛
; 235  : 	if (DlgMatchWizard.DoModal()==IDOK)

  000ec	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  000f2	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal
  000f7	83 f8 01	 cmp	 eax, 1
  000fa	75 39		 jne	 SHORT $LN2@OnBnClicke

; 236  : 	{
; 237  : 		//获取配置
; 238  : 		tagGameMatchOption GameMatchOption;
; 239  : 		DlgMatchWizard.GetGameMatchOption(GameMatchOption);

  000fc	8d 85 c8 ee ff
	ff		 lea	 eax, DWORD PTR _GameMatchOption$2[ebp]
  00102	50		 push	 eax
  00103	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  00109	e8 00 00 00 00	 call	 ?GetGameMatchOption@CDlgMatchWizard@@QAEXAAUtagGameMatchOption@@@Z ; CDlgMatchWizard::GetGameMatchOption

; 240  : 
; 241  : 		//修改配置
; 242  : 		m_MatchInfoBuffer.InsertMatchOption(&GameMatchOption);

  0010e	8d 85 c8 ee ff
	ff		 lea	 eax, DWORD PTR _GameMatchOption$2[ebp]
  00114	50		 push	 eax
  00115	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  0011e	e8 00 00 00 00	 call	 ?InsertMatchOption@CMatchInfoBuffer@@QAEPAUtagGameMatchOption@@PAU2@@Z ; CMatchInfoBuffer::InsertMatchOption

; 243  : 		m_MatchListControl.UpdateMatchOption(pGameMatchOption);

  00123	8b 45 e0	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00126	50		 push	 eax
  00127	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00130	e8 00 00 00 00	 call	 ?UpdateMatchOption@CMatchListControl@@QAE_NPAUtagGameMatchOption@@@Z ; CMatchListControl::UpdateMatchOption
$LN2@OnBnClicke:

; 244  : 	}
; 245  : }

  00135	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0013c	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  00142	e8 00 00 00 00	 call	 ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00158	33 cd		 xor	 ecx, ebp
  0015a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ$0:
  00000	8d 8d 90 f1 ff
	ff		 lea	 ecx, DWORD PTR _DlgMatchWizard$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CDlgMatchWizard@@UAE@XZ ; CDlgMatchWizard::~CDlgMatchWizard
__ehhandler$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a c4 ec ff
	ff		 mov	 ecx, DWORD PTR [edx-4924]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedOptionMatch@CDlgServerMatch@@IAEXXZ ENDP	; CDlgServerMatch::OnBnClickedOptionMatch
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ
_TEXT	SEGMENT
_pGameMatchOption$ = -16				; size = 4
_nListItem$ = -12					; size = 4
_Position$ = -8						; size = 4
_this$ = -4						; size = 4
?OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ PROC	; CDlgServerMatch::OnBnClickedLoadMatch, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 199  : 	//获取选择
; 200  : 	ASSERT(m_MatchListControl.GetFirstSelectedItemPosition()!=NULL);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00015	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  0001a	85 c0		 test	 eax, eax
  0001c	75 18		 jne	 SHORT $LN3@OnBnClicke
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ@4JA
  00023	83 c0 02	 add	 eax, 2
  00026	50		 push	 eax
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0002c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00031	85 c0		 test	 eax, eax
  00033	74 01		 je	 SHORT $LN3@OnBnClicke
  00035	cc		 int	 3
$LN3@OnBnClicke:

; 201  : 	POSITION Position=m_MatchListControl.GetFirstSelectedItemPosition();

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0003f	e8 00 00 00 00	 call	 ?GetFirstSelectedItemPosition@CListCtrl@@QBEPAU__POSITION@@XZ ; CListCtrl::GetFirstSelectedItemPosition
  00044	89 45 f8	 mov	 DWORD PTR _Position$[ebp], eax

; 202  : 	
; 203  : 	//获取房间
; 204  : 	INT nListItem=m_MatchListControl.GetNextSelectedItem(Position);

  00047	8d 45 f8	 lea	 eax, DWORD PTR _Position$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00054	e8 00 00 00 00	 call	 ?GetNextSelectedItem@CListCtrl@@QBEHAAPAU__POSITION@@@Z ; CListCtrl::GetNextSelectedItem
  00059	89 45 f4	 mov	 DWORD PTR _nListItem$[ebp], eax

; 205  : 	tagGameMatchOption * pGameMatchOption=(tagGameMatchOption *)m_MatchListControl.GetItemData(nListItem);

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _nListItem$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00069	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  0006e	89 45 f0	 mov	 DWORD PTR _pGameMatchOption$[ebp], eax

; 206  : 
; 207  : 	//设置变量
; 208  : 	CopyMemory(&m_GameMatchOption,pGameMatchOption,sizeof(m_GameMatchOption));

  00071	68 c8 02 00 00	 push	 712			; 000002c8H
  00076	8b 45 f0	 mov	 eax, DWORD PTR _pGameMatchOption$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	81 c1 e0 01 00
	00		 add	 ecx, 480		; 000001e0H
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 _memcpy
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH

; 209  : 
; 210  : 	//结束对话框
; 211  : 	EndDialog(IDC_LOAD_MATCH);

  0008c	68 42 23 00 00	 push	 9026			; 00002342H
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?EndDialog@CDialog@@QAEXH@Z ; CDialog::EndDialog

; 212  : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?OnBnClickedLoadMatch@CDlgServerMatch@@IAEXXZ ENDP	; CDlgServerMatch::OnBnClickedLoadMatch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ
_TEXT	SEGMENT
tv157 = -2008						; size = 4
tv279 = -2004						; size = 4
tv137 = -2004						; size = 4
tv69 = -2004						; size = 4
tv65 = -2004						; size = 4
tv280 = -2002						; size = 2
$T2 = -2000						; size = 1
$T3 = -1999						; size = 1
$T4 = -1998						; size = 1
$T5 = -1997						; size = 1
_pszDescribe$6 = -1740					; size = 4
_pIException$7 = -1736					; size = 4
_szDataBasePass$8 = -1732				; size = 32
_szDataBaseUser$9 = -1700				; size = 32
_szDBPassRead$10 = -1668				; size = 512
_szDBUserRead$11 = -1156				; size = 512
_szErrorDescribe$12 = -644				; size = 128
_pPlatformDBParameter$ = -516				; size = 4
_pMatchDBParameter$ = -512				; size = 4
_pModuleDBParameter$ = -508				; size = 4
_PlatformDBModule$ = -504				; size = 472
_PlatformDBAide$ = -32					; size = 8
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ PROC	; CDlgServerMatch::QueryMatchDataBase, COMDAT
; _this$ = ecx

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec c8 07 00
	00		 sub	 esp, 1992		; 000007c8H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 	//变量定义
; 126  : 	CDataBaseAide PlatformDBAide;

  00035	6a 00		 push	 0
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 127  : 	CDataBaseHelper PlatformDBModule;

  00047	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0004d	e8 00 00 00 00	 call	 ??0CDataBaseHelper@@QAE@XZ ; CDataBaseHelper::CDataBaseHelper
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 128  : 
; 129  : 	//创建对象
; 130  : 	if ((PlatformDBModule.GetInterface()==NULL)&&(PlatformDBModule.CreateInstance()==false))

  00056	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0005c	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  00061	85 c0		 test	 eax, eax
  00063	75 60		 jne	 SHORT $LN2@QueryMatch
  00065	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0006b	e8 00 00 00 00	 call	 ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CreateInstance
  00070	0f b6 c0	 movzx	 eax, al
  00073	85 c0		 test	 eax, eax
  00075	75 4e		 jne	 SHORT $LN2@QueryMatch

; 131  : 	{
; 132  : 		ASSERT(FALSE);

  00077	33 c0		 xor	 eax, eax
  00079	75 19		 jne	 SHORT $LN6@QueryMatch
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ@4JA
  00081	83 c1 08	 add	 ecx, 8
  00084	51		 push	 ecx
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN6@QueryMatch
  00093	cc		 int	 3
$LN6@QueryMatch:

; 133  : 		return false;

  00094	c6 85 33 f8 ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
  0009b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0009f	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  000a5	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b1	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  000ba	8a 85 33 f8 ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  000c0	e9 c4 03 00 00	 jmp	 $LN1@QueryMatch
$LN2@QueryMatch:

; 134  : 	}
; 135  : 
; 136  : 	//获取参数
; 137  : 	CModuleDBParameter * pModuleDBParameter=CModuleDBParameter::GetModuleDBParameter();

  000c5	e8 00 00 00 00	 call	 ?GetModuleDBParameter@CModuleDBParameter@@SAPAV1@XZ ; CModuleDBParameter::GetModuleDBParameter
  000ca	89 85 04 fe ff
	ff		 mov	 DWORD PTR _pModuleDBParameter$[ebp], eax

; 138  : 	tagDataBaseParameter * pMatchDBParameter=pModuleDBParameter->GetGameMatchDBParameter();

  000d0	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR _pModuleDBParameter$[ebp]
  000d6	e8 00 00 00 00	 call	 ?GetGameMatchDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetGameMatchDBParameter
  000db	89 85 00 fe ff
	ff		 mov	 DWORD PTR _pMatchDBParameter$[ebp], eax

; 139  : 	tagDataBaseParameter * pPlatformDBParameter=pModuleDBParameter->GetPlatformDBParameter();	

  000e1	8b 8d 04 fe ff
	ff		 mov	 ecx, DWORD PTR _pModuleDBParameter$[ebp]
  000e7	e8 00 00 00 00	 call	 ?GetPlatformDBParameter@CModuleDBParameter@@QAEPAUtagDataBaseParameter@@XZ ; CModuleDBParameter::GetPlatformDBParameter
  000ec	89 85 fc fd ff
	ff		 mov	 DWORD PTR _pPlatformDBParameter$[ebp], eax

; 140  : 
; 141  : 	//设置连接
; 142  : 	PlatformDBModule->SetConnectionInfo(pPlatformDBParameter->szDataBaseAddr,pPlatformDBParameter->wDataBasePort,

  000f2	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  000f8	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  000fd	89 85 2c f8 ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
  00103	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _pPlatformDBParameter$[ebp]
  00109	83 c0 42	 add	 eax, 66			; 00000042H
  0010c	50		 push	 eax
  0010d	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR _pPlatformDBParameter$[ebp]
  00113	83 c1 22	 add	 ecx, 34			; 00000022H
  00116	51		 push	 ecx
  00117	8b 95 fc fd ff
	ff		 mov	 edx, DWORD PTR _pPlatformDBParameter$[ebp]
  0011d	83 c2 62	 add	 edx, 98			; 00000062H
  00120	52		 push	 edx
  00121	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR _pPlatformDBParameter$[ebp]
  00127	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0012a	51		 push	 ecx
  0012b	8b 95 fc fd ff
	ff		 mov	 edx, DWORD PTR _pPlatformDBParameter$[ebp]
  00131	83 c2 02	 add	 edx, 2
  00134	52		 push	 edx
  00135	8b 85 2c f8 ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  0013b	8b 10		 mov	 edx, DWORD PTR [eax]
  0013d	8b 8d 2c f8 ff
	ff		 mov	 ecx, DWORD PTR tv137[ebp]
  00143	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00146	ff d0		 call	 eax

; 143  : 		pPlatformDBParameter->szDataBaseName,pPlatformDBParameter->szDataBaseUser,pPlatformDBParameter->szDataBasePass);
; 144  : 
; 145  : 	//获取信息
; 146  : 	try

  00148	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 147  : 	{
; 148  : 		//发起连接
; 149  : 		PlatformDBModule->OpenConnection();

  0014c	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00152	e8 00 00 00 00	 call	 ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::operator->
  00157	89 85 2c f8 ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0015d	8b 85 2c f8 ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
  00163	89 85 28 f8 ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
  00169	8b 8d 28 f8 ff
	ff		 mov	 ecx, DWORD PTR tv157[ebp]
  0016f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00171	8b 8d 28 f8 ff
	ff		 mov	 ecx, DWORD PTR tv157[ebp]
  00177	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0017a	ff d0		 call	 eax

; 150  : 		PlatformDBAide.SetDataBase(PlatformDBModule.GetInterface());

  0017c	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00182	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface
  00187	89 85 2c f8 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  0018d	8b 85 2c f8 ff
	ff		 mov	 eax, DWORD PTR tv65[ebp]
  00193	50		 push	 eax
  00194	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z

; 151  : 
; 152  : 		//连接信息
; 153  : 		PlatformDBAide.ResetParameter();

  0019d	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ResetParameter@CDataBaseAide@@QAEXXZ

; 154  : 		PlatformDBAide.AddParameter(TEXT("@strDataBaseAddr"),m_GameServiceOption.szDataBaseAddr);

  001a6	6a 01		 push	 1
  001a8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001ab	05 44 05 00 00	 add	 eax, 1348		; 00000544H
  001b0	50		 push	 eax
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EOFIIHMB@?$EAstrDataBaseAddr@
  001b6	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z

; 155  : 
; 156  : 		//执行查询
; 157  : 		if (PlatformDBAide.ExecuteProcess(TEXT("GSP_GS_LoadDataBaseInfo"),true)!=DB_SUCCESS)

  001bf	6a 01		 push	 1
  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EBKHBLK@GSP_GS_LoadDataBaseInfo@
  001c6	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  001c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
  001cf	89 85 2c f8 ff
	ff		 mov	 DWORD PTR tv279[ebp], eax
  001d5	83 bd 2c f8 ff
	ff 00		 cmp	 DWORD PTR tv279[ebp], 0
  001dc	74 7b		 je	 SHORT $LN4@QueryMatch

; 158  : 		{
; 159  : 			//构造信息
; 160  : 			TCHAR szErrorDescribe[128]=TEXT("");

  001de	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  001e3	88 85 7c fd ff
	ff		 mov	 BYTE PTR _szErrorDescribe$12[ebp], al
  001e9	6a 7f		 push	 127			; 0000007fH
  001eb	6a 00		 push	 0
  001ed	8d 85 7d fd ff
	ff		 lea	 eax, DWORD PTR _szErrorDescribe$12[ebp+1]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 _memset
  001f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 			PlatformDBAide.GetValue_String(TEXT("ErrorDescribe"),szErrorDescribe,CountArray(szErrorDescribe));

  001fc	68 80 00 00 00	 push	 128			; 00000080H
  00201	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _szErrorDescribe$12[ebp]
  00207	50		 push	 eax
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BGGHDOEH@ErrorDescribe@
  0020d	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00210	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 162  : 
; 163  : 			//提示消息
; 164  : 			CTraceService::TraceString(szErrorDescribe,TraceLevel_Exception);

  00216	6a 03		 push	 3
  00218	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _szErrorDescribe$12[ebp]
  0021e	50		 push	 eax
  0021f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00225	83 c4 08	 add	 esp, 8

; 165  : 
; 166  : 			return false;

  00228	c6 85 32 f8 ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  0022f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00233	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00239	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  0023e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00245	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00248	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  0024e	8a 85 32 f8 ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  00254	e9 30 02 00 00	 jmp	 $LN1@QueryMatch
$LN4@QueryMatch:

; 167  : 		}
; 168  : 
; 169  : 		//读取密文
; 170  : 		TCHAR szDBUserRead[512]=TEXT(""),szDBPassRead[512]=TEXT("");

  00259	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0025e	88 85 7c fb ff
	ff		 mov	 BYTE PTR _szDBUserRead$11[ebp], al
  00264	68 ff 01 00 00	 push	 511			; 000001ffH
  00269	6a 00		 push	 0
  0026b	8d 85 7d fb ff
	ff		 lea	 eax, DWORD PTR _szDBUserRead$11[ebp+1]
  00271	50		 push	 eax
  00272	e8 00 00 00 00	 call	 _memset
  00277	83 c4 0c	 add	 esp, 12			; 0000000cH
  0027a	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0027f	88 85 7c f9 ff
	ff		 mov	 BYTE PTR _szDBPassRead$10[ebp], al
  00285	68 ff 01 00 00	 push	 511			; 000001ffH
  0028a	6a 00		 push	 0
  0028c	8d 85 7d f9 ff
	ff		 lea	 eax, DWORD PTR _szDBPassRead$10[ebp+1]
  00292	50		 push	 eax
  00293	e8 00 00 00 00	 call	 _memset
  00298	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 		PlatformDBAide.GetValue_String(TEXT("DBUser"),szDBUserRead,CountArray(szDBUserRead));

  0029b	68 00 02 00 00	 push	 512			; 00000200H
  002a0	8d 85 7c fb ff
	ff		 lea	 eax, DWORD PTR _szDBUserRead$11[ebp]
  002a6	50		 push	 eax
  002a7	68 00 00 00 00	 push	 OFFSET ??_C@_06EKCLIHPK@DBUser@
  002ac	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 172  : 		PlatformDBAide.GetValue_String(TEXT("DBPassword"),szDBPassRead,CountArray(szDBPassRead));

  002b5	68 00 02 00 00	 push	 512			; 00000200H
  002ba	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _szDBPassRead$10[ebp]
  002c0	50		 push	 eax
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CINAGOHO@DBPassword@
  002c6	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z

; 173  : 
; 174  : 		//获取信息
; 175  : 		pMatchDBParameter->wDataBasePort=PlatformDBAide.GetValue_WORD(TEXT("DBPort"));

  002cf	68 00 00 00 00	 push	 OFFSET ??_C@_06NHDHPCNO@DBPort@
  002d4	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  002d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  002dd	66 89 85 2e f8
	ff ff		 mov	 WORD PTR tv280[ebp], ax
  002e4	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pMatchDBParameter$[ebp]
  002ea	66 8b 8d 2e f8
	ff ff		 mov	 cx, WORD PTR tv280[ebp]
  002f1	66 89 08	 mov	 WORD PTR [eax], cx

; 176  : 		lstrcpyn(pMatchDBParameter->szDataBaseAddr,m_GameServiceOption.szDataBaseAddr,CountArray(pMatchDBParameter->szDataBaseAddr));

  002f4	6a 20		 push	 32			; 00000020H
  002f6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002f9	05 44 05 00 00	 add	 eax, 1348		; 00000544H
  002fe	50		 push	 eax
  002ff	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR _pMatchDBParameter$[ebp]
  00305	83 c1 02	 add	 ecx, 2
  00308	51		 push	 ecx
  00309	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 177  : 		lstrcpyn(pMatchDBParameter->szDataBaseName,m_GameServiceOption.szDataBaseName,CountArray(pMatchDBParameter->szDataBaseName));

  0030f	6a 20		 push	 32			; 00000020H
  00311	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00314	05 54 05 00 00	 add	 eax, 1364		; 00000554H
  00319	50		 push	 eax
  0031a	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR _pMatchDBParameter$[ebp]
  00320	83 c1 62	 add	 ecx, 98			; 00000062H
  00323	51		 push	 ecx
  00324	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 178  : 
; 179  : 		//解密密文
; 180  : 		TCHAR szDataBaseUser[32]=TEXT(""),szDataBasePass[32]=TEXT("");

  0032a	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0032f	88 85 5c f9 ff
	ff		 mov	 BYTE PTR _szDataBaseUser$9[ebp], al
  00335	33 c0		 xor	 eax, eax
  00337	89 85 5d f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+1], eax
  0033d	89 85 61 f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+5], eax
  00343	89 85 65 f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+9], eax
  00349	89 85 69 f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+13], eax
  0034f	89 85 6d f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+17], eax
  00355	89 85 71 f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+21], eax
  0035b	89 85 75 f9 ff
	ff		 mov	 DWORD PTR _szDataBaseUser$9[ebp+25], eax
  00361	66 89 85 79 f9
	ff ff		 mov	 WORD PTR _szDataBaseUser$9[ebp+29], ax
  00368	88 85 7b f9 ff
	ff		 mov	 BYTE PTR _szDataBaseUser$9[ebp+31], al
  0036e	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00373	88 85 3c f9 ff
	ff		 mov	 BYTE PTR _szDataBasePass$8[ebp], al
  00379	33 c0		 xor	 eax, eax
  0037b	89 85 3d f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+1], eax
  00381	89 85 41 f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+5], eax
  00387	89 85 45 f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+9], eax
  0038d	89 85 49 f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+13], eax
  00393	89 85 4d f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+17], eax
  00399	89 85 51 f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+21], eax
  0039f	89 85 55 f9 ff
	ff		 mov	 DWORD PTR _szDataBasePass$8[ebp+25], eax
  003a5	66 89 85 59 f9
	ff ff		 mov	 WORD PTR _szDataBasePass$8[ebp+29], ax
  003ac	88 85 5b f9 ff
	ff		 mov	 BYTE PTR _szDataBasePass$8[ebp+31], al

; 181  : 		CWHEncrypt::XorCrevasse(szDBUserRead,pMatchDBParameter->szDataBaseUser,CountArray(pMatchDBParameter->szDataBaseUser));

  003b2	6a 20		 push	 32			; 00000020H
  003b4	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pMatchDBParameter$[ebp]
  003ba	83 c0 22	 add	 eax, 34			; 00000022H
  003bd	50		 push	 eax
  003be	8d 8d 7c fb ff
	ff		 lea	 ecx, DWORD PTR _szDBUserRead$11[ebp]
  003c4	51		 push	 ecx
  003c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?XorCrevasse@CWHEncrypt@@SA_NPBDPADG@Z
  003cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 182  : 		CWHEncrypt::XorCrevasse(szDBPassRead,pMatchDBParameter->szDataBasePass,CountArray(pMatchDBParameter->szDataBasePass));

  003ce	6a 20		 push	 32			; 00000020H
  003d0	8b 85 00 fe ff
	ff		 mov	 eax, DWORD PTR _pMatchDBParameter$[ebp]
  003d6	83 c0 42	 add	 eax, 66			; 00000042H
  003d9	50		 push	 eax
  003da	8d 8d 7c f9 ff
	ff		 lea	 ecx, DWORD PTR _szDBPassRead$10[ebp]
  003e0	51		 push	 ecx
  003e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?XorCrevasse@CWHEncrypt@@SA_NPBDPADG@Z
  003e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 183  : 	}

  003ea	eb 3e		 jmp	 SHORT $LN7@QueryMatch
__catch$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$0:

; 184  : 	catch (IDataBaseException * pIException)
; 185  : 	{
; 186  : 		//错误信息
; 187  : 		LPCTSTR pszDescribe=pIException->GetExceptionDescribe();

  003ec	8b 85 38 f9 ff
	ff		 mov	 eax, DWORD PTR _pIException$7[ebp]
  003f2	8b 10		 mov	 edx, DWORD PTR [eax]
  003f4	8b 8d 38 f9 ff
	ff		 mov	 ecx, DWORD PTR _pIException$7[ebp]
  003fa	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  003fd	ff d0		 call	 eax
  003ff	89 85 34 f9 ff
	ff		 mov	 DWORD PTR _pszDescribe$6[ebp], eax

; 188  : 		CTraceService::TraceString(pszDescribe,TraceLevel_Exception);

  00405	6a 03		 push	 3
  00407	8b 85 34 f9 ff
	ff		 mov	 eax, DWORD PTR _pszDescribe$6[ebp]
  0040d	50		 push	 eax
  0040e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00414	83 c4 08	 add	 esp, 8

; 189  : 
; 190  : 		return false;

  00417	c6 85 31 f8 ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  0041e	b8 00 00 00 00	 mov	 eax, $LN12@QueryMatch
  00423	c3		 ret	 0

; 191  : 	}

  00424	b8 00 00 00 00	 mov	 eax, $LN7@QueryMatch
  00429	c3		 ret	 0
$LN7@QueryMatch:
  0042a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00431	eb 2a		 jmp	 SHORT $LN11@QueryMatch
$LN12@QueryMatch:

; 189  : 
; 190  : 		return false;

  00433	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0043a	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  00440	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00445	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0044c	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0044f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00455	8a 85 31 f8 ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  0045b	eb 2c		 jmp	 SHORT $LN1@QueryMatch
$LN11@QueryMatch:

; 192  : 
; 193  : 	return true;

  0045d	c6 85 30 f8 ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  00464	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00468	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0046e	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00473	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0047a	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  0047d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
  00483	8a 85 30 f8 ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@QueryMatch:

; 194  : }

  00489	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0048c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00493	59		 pop	 ecx
  00494	5f		 pop	 edi
  00495	5e		 pop	 esi
  00496	5b		 pop	 ebx
  00497	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0049a	33 cd		 xor	 ecx, ebp
  0049c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004a1	8b e5		 mov	 esp, ebp
  004a3	5d		 pop	 ebp
  004a4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _PlatformDBAide$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CDataBaseAide@@UAE@XZ
__unwindfunclet$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ$3:
  00009	8d 8d 08 fe ff
	ff		 lea	 ecx, DWORD PTR _PlatformDBModule$[ebp]
  0000f	e9 00 00 00 00	 jmp	 ??1CDataBaseHelper@@UAE@XZ
__ehhandler$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 24 f8 ff
	ff		 mov	 ecx, DWORD PTR [edx-2012]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ ENDP	; CDlgServerMatch::QueryMatchDataBase
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ
_TEXT	SEGMENT
$T2 = -134						; size = 1
$T3 = -133						; size = 1
_nIndex$4 = -68						; size = 4
_pGameMatchOption$5 = -64				; size = 4
_MatchInfoManager$ = -60				; size = 4
_szServiceMachine$ = -56				; size = 33
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ PROC		; CDlgServerMatch::LoadDBMatchItem, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 89   : 	//重置列表
; 90   : 	m_MatchListControl.DeleteAllItems();

  0002e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00037	e8 00 00 00 00	 call	 ?DeleteAllItems@CListCtrl@@QAEHXZ ; CListCtrl::DeleteAllItems

; 91   : 
; 92   : 	//设置按钮
; 93   : 	GetDlgItem(IDC_LOAD_MATCH)->EnableWindow(FALSE);

  0003c	6a 00		 push	 0
  0003e	68 42 23 00 00	 push	 9026			; 00002342H
  00043	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0004b	8b c8		 mov	 ecx, eax
  0004d	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 94   : 
; 95   : 	//获取机器码
; 96   : 	TCHAR szServiceMachine[LEN_MACHINE_ID];
; 97   : 	CWHService::GetMachineID(szServiceMachine);

  00052	8d 45 c8	 lea	 eax, DWORD PTR _szServiceMachine$[ebp]
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetMachineID@CWHService@@SA_NQAD@Z
  0005c	83 c4 04	 add	 esp, 4

; 98   : 
; 99   : 	//加载信息
; 100  : 	CMatchInfoManager MatchInfoManager;

  0005f	8d 4d c4	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00062	e8 00 00 00 00	 call	 ??0CMatchInfoManager@@QAE@XZ ; CMatchInfoManager::CMatchInfoManager
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 101  : 	if (MatchInfoManager.LoadGameMatchOption(m_GameServiceAttrib.wKindID,szServiceMachine,m_MatchInfoBuffer)==true)

  0006e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00071	05 a8 00 00 00	 add	 eax, 168		; 000000a8H
  00076	50		 push	 eax
  00077	8d 4d c8	 lea	 ecx, DWORD PTR _szServiceMachine$[ebp]
  0007a	51		 push	 ecx
  0007b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0007e	0f b7 82 98 0d
	00 00		 movzx	 eax, WORD PTR [edx+3480]
  00085	50		 push	 eax
  00086	8d 4d c4	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00089	e8 00 00 00 00	 call	 ?LoadGameMatchOption@CMatchInfoManager@@QAE_NGQADAAVCMatchInfoBuffer@@@Z ; CMatchInfoManager::LoadGameMatchOption
  0008e	0f b6 c8	 movzx	 ecx, al
  00091	83 f9 01	 cmp	 ecx, 1
  00094	0f 85 99 00 00
	00		 jne	 $LN5@LoadDBMatc

; 102  : 	{
; 103  : 		//变量定义
; 104  : 		tagGameMatchOption * pGameMatchOption=NULL;

  0009a	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pGameMatchOption$5[ebp], 0

; 105  : 
; 106  : 		for(INT_PTR nIndex=0;nIndex<m_MatchInfoBuffer.m_GameMatchOptionArray.GetCount();nIndex++)

  000a1	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _nIndex$4[ebp], 0
  000a8	eb 09		 jmp	 SHORT $LN4@LoadDBMatc
$LN2@LoadDBMatc:
  000aa	8b 45 bc	 mov	 eax, DWORD PTR _nIndex$4[ebp]
  000ad	83 c0 01	 add	 eax, 1
  000b0	89 45 bc	 mov	 DWORD PTR _nIndex$4[ebp], eax
$LN4@LoadDBMatc:
  000b3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  000bc	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
  000c1	39 45 bc	 cmp	 DWORD PTR _nIndex$4[ebp], eax
  000c4	7d 4f		 jge	 SHORT $LN3@LoadDBMatc

; 107  : 		{
; 108  : 			//获取对象
; 109  : 			pGameMatchOption=m_MatchInfoBuffer.m_GameMatchOptionArray[nIndex];

  000c6	8b 45 bc	 mov	 eax, DWORD PTR _nIndex$4[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  000d3	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	89 4d c0	 mov	 DWORD PTR _pGameMatchOption$5[ebp], ecx

; 110  : 
; 111  : 			//插入列表
; 112  : 			ASSERT(pGameMatchOption!=NULL);

  000dd	83 7d c0 00	 cmp	 DWORD PTR _pGameMatchOption$5[ebp], 0
  000e1	75 18		 jne	 SHORT $LN8@LoadDBMatc
  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ@4JA
  000e8	83 c0 18	 add	 eax, 24			; 00000018H
  000eb	50		 push	 eax
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@JOGPPMFA@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000f1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000f6	85 c0		 test	 eax, eax
  000f8	74 01		 je	 SHORT $LN8@LoadDBMatc
  000fa	cc		 int	 3
$LN8@LoadDBMatc:

; 113  : 			if (pGameMatchOption!=NULL) m_MatchListControl.InsertMatchOption(pGameMatchOption);

  000fb	83 7d c0 00	 cmp	 DWORD PTR _pGameMatchOption$5[ebp], 0
  000ff	74 12		 je	 SHORT $LN6@LoadDBMatc
  00101	8b 45 c0	 mov	 eax, DWORD PTR _pGameMatchOption$5[ebp]
  00104	50		 push	 eax
  00105	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0010e	e8 00 00 00 00	 call	 ?InsertMatchOption@CMatchListControl@@QAE_NPAUtagGameMatchOption@@@Z ; CMatchListControl::InsertMatchOption
$LN6@LoadDBMatc:

; 114  : 		}

  00113	eb 95		 jmp	 SHORT $LN2@LoadDBMatc
$LN3@LoadDBMatc:

; 115  : 		
; 116  : 		return true;

  00115	c6 85 7b ff ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  0011c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00123	8d 4d c4	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00126	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  0012b	8a 85 7b ff ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
  00131	eb 1c		 jmp	 SHORT $LN1@LoadDBMatc
$LN5@LoadDBMatc:

; 117  : 	}
; 118  : 
; 119  : 	return false;

  00133	c6 85 7a ff ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  0013a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00141	8d 4d c4	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00144	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00149	8a 85 7a ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@LoadDBMatc:

; 120  : }

  0014f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00152	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00159	59		 pop	 ecx
  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	5b		 pop	 ebx
  0015d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ$0:
  00000	8d 4d c4	 lea	 ecx, DWORD PTR _MatchInfoManager$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
__ehhandler$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 74 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-140]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ ENDP		; CDlgServerMatch::LoadDBMatchItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OpenGameMatch@CDlgServerMatch@@QAE_NAAUtagGameServiceAttrib@@AAUtagGameServiceOption@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_GameServiceAttrib$ = 8					; size = 4
_GameServiceOption$ = 12				; size = 4
?OpenGameMatch@CDlgServerMatch@@QAE_NAAUtagGameServiceAttrib@@AAUtagGameServiceOption@@@Z PROC ; CDlgServerMatch::OpenGameMatch, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	//设置变量
; 71   : 	m_GameServiceOption=GameServiceOption;

  0000c	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0000f	81 c7 a8 04 00
	00		 add	 edi, 1192		; 000004a8H
  00015	b9 3c 02 00 00	 mov	 ecx, 572		; 0000023cH
  0001a	8b 75 0c	 mov	 esi, DWORD PTR _GameServiceOption$[ebp]
  0001d	f3 a5		 rep movsd

; 72   : 	m_GameServiceAttrib=GameServiceAttrib;

  0001f	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00022	81 c7 98 0d 00
	00		 add	 edi, 3480		; 00000d98H
  00028	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H
  0002d	8b 75 08	 mov	 esi, DWORD PTR _GameServiceAttrib$[ebp]
  00030	f3 a5		 rep movsd

; 73   : 
; 74   : 	//设置资源
; 75   : 	AfxSetResourceHandle(GetModuleHandle(MODULE_MANAGER_DLL_NAME));

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFCAOGLK@ModuleManager?4dll@
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?AfxSetResourceHandle@@YGXPAUHINSTANCE__@@@Z ; AfxSetResourceHandle

; 76   : 
; 77   : 	//配置房间
; 78   : 	if (DoModal()==IDC_LOAD_MATCH)

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 10		 mov	 edx, DWORD PTR [eax]
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 82 7c 01 00
	00		 mov	 eax, DWORD PTR [edx+380]
  00051	ff d0		 call	 eax
  00053	3d 42 23 00 00	 cmp	 eax, 9026		; 00002342H
  00058	75 04		 jne	 SHORT $LN2@OpenGameMa

; 79   : 	{
; 80   : 		return true;

  0005a	b0 01		 mov	 al, 1
  0005c	eb 02		 jmp	 SHORT $LN1@OpenGameMa
$LN2@OpenGameMa:

; 81   : 	}
; 82   : 
; 83   : 	return false;

  0005e	32 c0		 xor	 al, al
$LN1@OpenGameMa:

; 84   : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?OpenGameMatch@CDlgServerMatch@@QAE_NAAUtagGameServiceAttrib@@AAUtagGameServiceOption@@@Z ENDP ; CDlgServerMatch::OpenGameMatch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?DoDataExchange@CDlgServerMatch@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDX$ = 8						; size = 4
?DoDataExchange@CDlgServerMatch@@MAEXPAVCDataExchange@@@Z PROC ; CDlgServerMatch::DoDataExchange, COMDAT
; _this$ = ecx

; 60   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 61   : 	__super::DoDataExchange(pDX);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pDX$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange

; 62   : 
; 63   : 	//比赛列表
; 64   : 	DDX_Control(pDX,IDC_MATCH_LIST,m_MatchListControl);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  00020	50		 push	 eax
  00021	68 41 23 00 00	 push	 9025			; 00002341H
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pDX$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z ; DDX_Control

; 65   : }

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?DoDataExchange@CDlgServerMatch@@MAEXPAVCDataExchange@@@Z ENDP ; CDlgServerMatch::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?OnInitDialog@CDlgServerMatch@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitDialog@CDlgServerMatch@@MAEHXZ PROC		; CDlgServerMatch::OnInitDialog, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	__super::OnInitDialog();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 48   : 
; 49   : 	//查询数据库
; 50   : 	QueryMatchDataBase();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?QueryMatchDataBase@CDlgServerMatch@@IAE_NXZ ; CDlgServerMatch::QueryMatchDataBase

; 51   : 
; 52   : 	//加载比赛
; 53   : 	LoadDBMatchItem();

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?LoadDBMatchItem@CDlgServerMatch@@IAE_NXZ ; CDlgServerMatch::LoadDBMatchItem

; 54   : 
; 55   : 	return TRUE;  

  00024	b8 01 00 00 00	 mov	 eax, 1

; 56   : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?OnInitDialog@CDlgServerMatch@@MAEHXZ ENDP		; CDlgServerMatch::OnInitDialog
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ??1CDlgServerMatch@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDlgServerMatch@@UAE@XZ PROC				; CDlgServerMatch::~CDlgServerMatch, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerMatch@@6B@

; 42   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  0001e	e8 00 00 00 00	 call	 ??1CMatchListControl@@UAE@XZ ; CMatchListControl::~CMatchListControl
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  0002c	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??1CDlgServerMatch@@UAE@XZ ENDP				; CDlgServerMatch::~CDlgServerMatch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ??0CDlgServerMatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDlgServerMatch@@QAE@XZ PROC				; CDlgServerMatch::CDlgServerMatch, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDlgServerMatch@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : CDlgServerMatch::CDlgServerMatch() : CDialog(IDD_SERVER_MATCH)

  0002b	6a 00		 push	 0
  0002d	68 2e 23 00 00	 push	 9006			; 0000232eH
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ??0CDialog@@QAE@IPAVCWnd@@@Z ; CDialog::CDialog
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 30   : {

  00041	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00044	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDlgServerMatch@@6B@
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  00053	e8 00 00 00 00	 call	 ??0CMatchInfoBuffer@@QAE@XZ ; CMatchInfoBuffer::CMatchInfoBuffer
  00058	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00065	e8 00 00 00 00	 call	 ??0CMatchListControl@@QAE@XZ ; CMatchListControl::CMatchListControl

; 31   : 	//模块参数
; 32   : 	ZeroMemory(&m_GameMatchOption,sizeof(m_GameMatchOption));

  0006a	68 c8 02 00 00	 push	 712			; 000002c8H
  0006f	6a 00		 push	 0
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	05 e0 01 00 00	 add	 eax, 480		; 000001e0H
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 _memset
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 33   : 	ZeroMemory(&m_GameServiceOption,sizeof(m_GameServiceOption));

  00082	68 f0 08 00 00	 push	 2288			; 000008f0H
  00087	6a 00		 push	 0
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	05 a8 04 00 00	 add	 eax, 1192		; 000004a8H
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 _memset
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH

; 34   : 	ZeroMemory(&m_GameServiceAttrib,sizeof(m_GameServiceAttrib));

  0009a	68 94 00 00 00	 push	 148			; 00000094H
  0009f	6a 00		 push	 0
  000a1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	05 98 0d 00 00	 add	 eax, 3480		; 00000d98H
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 _memset
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH

; 35   : 
; 36   : 	return;
; 37   : }

  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDlgServerMatch@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
__unwindfunclet$??0CDlgServerMatch@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  00011	e9 00 00 00 00	 jmp	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
__ehhandler$??0CDlgServerMatch@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDlgServerMatch@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDlgServerMatch@@QAE@XZ ENDP				; CDlgServerMatch::CDlgServerMatch
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchInfoManager@@UAEPAXI@Z PROC			; CMatchInfoManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchInfoManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 44		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 04		 push	 4
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1d		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00058	8d 14 8d 04 00
	00 00		 lea	 edx, DWORD PTR [ecx*4+4]
  0005f	52		 push	 edx
  00060	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00063	83 e8 04	 sub	 eax, 4
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006c	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 e8 04	 sub	 eax, 4
  00075	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00082	83 e0 01	 and	 eax, 1
  00085	74 0e		 je	 SHORT $LN4@vector
  00087	6a 04		 push	 4
  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00092	83 c4 08	 add	 esp, 8
$LN4@vector:
  00095	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchInfoManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchInfoManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchInfoManager@@UAEPAXI@Z ENDP			; CMatchInfoManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchInfoManager@@UAEPAXI@Z PROC			; CMatchInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchInfoManager@@UAE@XZ ; CMatchInfoManager::~CMatchInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchInfoManager@@UAEPAXI@Z ENDP			; CMatchInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchInfoManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchInfoManager@@QAEAAV0@ABV0@@Z PROC		; CMatchInfoManager::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4CMatchInfoManager@@QAEAAV0@ABV0@@Z ENDP		; CMatchInfoManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchInfoManager@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchInfoManager@@QAE@ABV0@@Z PROC			; CMatchInfoManager::CMatchInfoManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoManager@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0CMatchInfoManager@@QAE@ABV0@@Z ENDP			; CMatchInfoManager::CMatchInfoManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECRewardInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECRewardInfoBuffer@@UAEPAXI@Z PROC			; CRewardInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECRewardInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECRewardInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECRewardInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECRewardInfoBuffer@@UAEPAXI@Z ENDP			; CRewardInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCRewardInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRewardInfoBuffer@@UAEPAXI@Z PROC			; CRewardInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CRewardInfoBuffer@@UAE@XZ ; CRewardInfoBuffer::~CRewardInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCRewardInfoBuffer@@UAEPAXI@Z ENDP			; CRewardInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z PROC		; CRewardInfoBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CRewardInfoBuffer@@QAEAAV0@ABV0@@Z ENDP		; CRewardInfoBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CRewardInfoBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CRewardInfoBuffer@@QAE@ABV0@@Z PROC			; CRewardInfoBuffer::CRewardInfoBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CRewardInfoBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CRewardInfoBuffer@@QAE@ABV0@@Z ENDP			; CRewardInfoBuffer::CRewardInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagMatchRewardInfo@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>::~CWHArray<tagMatchRewardInfo *,tagMatchRewardInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECMatchInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECMatchInfoBuffer@@UAEPAXI@Z PROC			; CMatchInfoBuffer::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECMatchInfoBuffer@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 41		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	6a 2c		 push	 44			; 0000002cH
  00041	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0004d	83 e0 01	 and	 eax, 1
  00050	74 1a		 je	 SHORT $LN3@vector
  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	6b 48 fc 2c	 imul	 ecx, DWORD PTR [eax-4], 44
  00059	83 c1 04	 add	 ecx, 4
  0005c	51		 push	 ecx
  0005d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00060	83 ea 04	 sub	 edx, 4
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00069	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 e8 04	 sub	 eax, 4
  00072	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  0007c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007f	83 e0 01	 and	 eax, 1
  00082	74 0e		 je	 SHORT $LN4@vector
  00084	6a 2c		 push	 44			; 0000002cH
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008f	83 c4 08	 add	 esp, 8
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECMatchInfoBuffer@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECMatchInfoBuffer@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECMatchInfoBuffer@@UAEPAXI@Z ENDP			; CMatchInfoBuffer::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMatchInfoBuffer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMatchInfoBuffer@@UAEPAXI@Z PROC			; CMatchInfoBuffer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMatchInfoBuffer@@UAE@XZ ; CMatchInfoBuffer::~CMatchInfoBuffer
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCMatchInfoBuffer@@UAEPAXI@Z ENDP			; CMatchInfoBuffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z PROC		; CMatchInfoBuffer::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	83 c0 04	 add	 eax, 4
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00021	83 c0 18	 add	 eax, 24			; 00000018H
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 18	 add	 ecx, 24			; 00000018H
  0002b	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4CMatchInfoBuffer@@QAEAAV0@ABV0@@Z ENDP		; CMatchInfoBuffer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMatchInfoBuffer@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CMatchInfoBuffer@@QAE@ABV0@@Z PROC			; CMatchInfoBuffer::CMatchInfoBuffer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMatchInfoBuffer@@6B@
  00015	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00027	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	50		 push	 eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 18	 add	 ecx, 24			; 00000018H
  00034	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
??0CMatchInfoBuffer@@QAE@ABV0@@Z ENDP			; CMatchInfoBuffer::CMatchInfoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QAEAAPAUtagGameMatchOption@@H@Z ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagGameMatchOption@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>::~CWHArray<tagGameMatchOption *,tagGameMatchOption * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDataBaseHelper@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDataBaseHelper@@UAEPAXI@Z PROC			; CDataBaseHelper::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDataBaseHelper@@UAE@XZ
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCDataBaseHelper@@UAEPAXI@Z ENDP			; CDataBaseHelper::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1CDataBaseHelper@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDataBaseHelper@@UAE@XZ PROC				; CDataBaseHelper::~CDataBaseHelper, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CDataBaseHelper@@UAE@XZ ENDP				; CDataBaseHelper::~CDataBaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\kernelenginehead.h
;	COMDAT ??0CDataBaseHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDataBaseHelper@@QAE@XZ PROC				; CDataBaseHelper::CDataBaseHelper, COMDAT
; _this$ = ecx

; 842  : DECLARE_MODULE_HELPER(DataBase, KERNEL_ENGINE_DLL_NAME, "CreateDataBase")

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IKJBDFNG@CreateDataBase@
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BEMLEOHB@KernelEngine?4dll@
  00016	68 00 01 01 06	 push	 100729088		; 06010100H
  0001b	68 00 00 00 00	 push	 OFFSET ?IID_IDataBase@@3U_GUID@@B
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDataBaseHelper@@6B@
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0CDataBaseHelper@@QAE@XZ ENDP				; CDataBaseHelper::CDataBaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z PROC	; CTempldateHelper<IDataBase>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 d8 01 00 00	 push	 472			; 000001d8H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CTempldateHelper@UIDataBase@@@@UAEPAXI@Z ENDP	; CTempldateHelper<IDataBase>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ PROC ; CTempldateHelper<IDataBase>::GetInterface, COMDAT
; _this$ = ecx

; 316  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	return m_pIModeluInterface; 

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]

; 318  : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ENDP ; CTempldateHelper<IDataBase>::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ PROC ; CTempldateHelper<IDataBase>::operator->, COMDAT
; _this$ = ecx

; 309  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	return GetInterface(); 

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetInterface@?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ; CTempldateHelper<IDataBase>::GetInterface

; 311  : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??C?$CTempldateHelper@UIDataBase@@@@QBEPAUIDataBase@@XZ ENDP ; CTempldateHelper<IDataBase>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
_TEXT	SEGMENT
tv173 = -100						; size = 4
tv172 = -100						; size = 4
tv171 = -100						; size = 4
tv170 = -100						; size = 4
$T2 = -94						; size = 1
$T3 = -93						; size = 1
_pszError$4 = -28					; size = 4
_CreateProc$5 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ PROC ; CTempldateHelper<IDataBase>::CreateInstance, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	//释放组件
; 214  : 	CloseInstance();

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance

; 215  : 
; 216  : 	//创建组件
; 217  : 	try

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 218  : 	{
; 219  : 		//效验参数
; 220  : 		ASSERT(m_szCreateProc[0]!=0);

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	6b c8 00	 imul	 ecx, eax, 0
  00046	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00049	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  0004e	85 c0		 test	 eax, eax
  00050	75 19		 jne	 SHORT $LN7@CreateInst
  00052	68 dc 00 00 00	 push	 220			; 000000dcH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00061	89 45 9c	 mov	 DWORD PTR tv170[ebp], eax
  00064	83 7d 9c 00	 cmp	 DWORD PTR tv170[ebp], 0
  00068	74 01		 je	 SHORT $LN7@CreateInst
  0006a	cc		 int	 3
$LN7@CreateInst:

; 221  : 		ASSERT(m_szModuleDllName[0]!=0);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	0f be 44 0a 4c	 movsx	 eax, BYTE PTR [edx+ecx+76]
  0007b	85 c0		 test	 eax, eax
  0007d	75 19		 jne	 SHORT $LN8@CreateInst
  0007f	68 dd 00 00 00	 push	 221			; 000000ddH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@CDIFDKED@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	89 45 9c	 mov	 DWORD PTR tv171[ebp], eax
  00091	83 7d 9c 00	 cmp	 DWORD PTR tv171[ebp], 0
  00095	74 01		 je	 SHORT $LN8@CreateInst
  00097	cc		 int	 3
$LN8@CreateInst:

; 222  : 
; 223  : 		//加载模块
; 224  : 		m_hDllInstance=AfxLoadLibrary(m_szModuleDllName);

  00098	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	83 c0 4c	 add	 eax, 76			; 0000004cH
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?AfxLoadLibrary@@YGPAUHINSTANCE__@@PBD@Z ; AfxLoadLibrary
  000a4	89 45 9c	 mov	 DWORD PTR tv172[ebp], eax
  000a7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	8b 55 9c	 mov	 edx, DWORD PTR tv172[ebp]
  000ad	89 91 50 01 00
	00		 mov	 DWORD PTR [ecx+336], edx

; 225  : 		if (m_hDllInstance==NULL) 

  000b3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  000bd	75 2a		 jne	 SHORT $LN3@CreateInst

; 226  : 		{
; 227  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("“%s”模块加载失败"),m_szModuleDllName);

  000bf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	83 c0 4c	 add	 eax, 76			; 0000004cH
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LMOFNGMO@?$KB?$LA?$CFs?$KB?$LB?D?$KD?$LP?i?$LM?S?T?X?J?$KH?$LA?$NM@
  000cb	68 80 00 00 00	 push	 128			; 00000080H
  000d0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 228  : 			return false;

  000e2	32 c0		 xor	 al, al
  000e4	e9 34 01 00 00	 jmp	 $LN1@CreateInst
$LN3@CreateInst:

; 229  : 		}
; 230  : 
; 231  : 		//寻找函数
; 232  : 		ModuleCreateProc * CreateProc=(ModuleCreateProc *)GetProcAddress(m_hDllInstance,m_szCreateProc);

  000e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	83 c0 0c	 add	 eax, 12			; 0000000cH
  000ef	50		 push	 eax
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 91 50 01 00
	00		 mov	 edx, DWORD PTR [ecx+336]
  000f9	52		 push	 edx
  000fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00100	89 45 e8	 mov	 DWORD PTR _CreateProc$5[ebp], eax

; 233  : 		if (CreateProc==NULL) 

  00103	83 7d e8 00	 cmp	 DWORD PTR _CreateProc$5[ebp], 0
  00107	75 31		 jne	 SHORT $LN4@CreateInst

; 234  : 		{		
; 235  : 			_sntprintf_s(m_szDescribe, CountArray(m_szDescribe), TEXT("找不到组件创建函数“%s”:%d"), m_szCreateProc, GetLastError());

  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0010f	50		 push	 eax
  00110	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00113	83 c0 0c	 add	 eax, 12			; 0000000cH
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PEGNCJOH@?U?R?$LC?$LL?$LF?$LN?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?3?$CFd@
  0011c	68 80 00 00 00	 push	 128			; 00000080H
  00121	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00130	83 c4 14	 add	 esp, 20			; 00000014H

; 236  : 			return false;

  00133	32 c0		 xor	 al, al
  00135	e9 e3 00 00 00	 jmp	 $LN1@CreateInst
$LN4@CreateInst:

; 237  : 		}
; 238  : 
; 239  : 		//创建组件
; 240  : 		m_pIModeluInterface=(IModeluInterface *)CreateProc(m_Guid,m_dwVersion);

  0013a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00140	51		 push	 ecx
  00141	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00144	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00147	50		 push	 eax
  00148	ff 55 e8	 call	 DWORD PTR _CreateProc$5[ebp]
  0014b	83 c4 08	 add	 esp, 8
  0014e	89 45 9c	 mov	 DWORD PTR tv173[ebp], eax
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	8b 55 9c	 mov	 edx, DWORD PTR tv173[ebp]
  00157	89 91 54 01 00
	00		 mov	 DWORD PTR [ecx+340], edx

; 241  : 		if (m_pIModeluInterface==NULL) 

  0015d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00160	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00167	75 2a		 jne	 SHORT $LN5@CreateInst

; 242  : 		{
; 243  : 			_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("调用函数“%s”生成对象失败"),m_szCreateProc);

  00169	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PDAODLKM@?$LF?w?S?C?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?I?z?$LD?I?$LG?T?O?s?J?$KH?$LA?$NM@
  00175	68 80 00 00 00	 push	 128			; 00000080H
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  00189	83 c4 10	 add	 esp, 16			; 00000010H

; 244  : 			return false;

  0018c	32 c0		 xor	 al, al
  0018e	e9 8a 00 00 00	 jmp	 $LN1@CreateInst
$LN5@CreateInst:

; 245  : 		}
; 246  : 	}

  00193	eb 63		 jmp	 SHORT $LN9@CreateInst
__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$0:

; 247  : 	catch (LPCTSTR pszError)
; 248  : 	{
; 249  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("由于“%s”，组件创建失败"),pszError);

  00195	8b 45 e4	 mov	 eax, DWORD PTR _pszError$4[ebp]
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JGPFHIJF@?S?I?S?Z?$KB?$LA?$CFs?$KB?$LB?$KD?$KM?W?i?$LM?$PO?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  0019e	68 80 00 00 00	 push	 128			; 00000080H
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001ac	51		 push	 ecx
  001ad	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001b2	83 c4 10	 add	 esp, 16			; 00000010H

; 250  : 		return false;

  001b5	c6 45 a3 00	 mov	 BYTE PTR $T3[ebp], 0
  001b9	b8 00 00 00 00	 mov	 eax, $LN13@CreateInst
  001be	c3		 ret	 0

; 251  : 	}

  001bf	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001c4	c3		 ret	 0
__catch$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ$1:

; 252  : 	catch (...)	
; 253  : 	{ 
; 254  : 		_sntprintf_s(m_szDescribe,CountArray(m_szDescribe),TEXT("组件创建函数“%s”产生未知异常错误，组件创建失败"),m_szCreateProc);

  001c5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  001cb	50		 push	 eax
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@JBNKENAJ@?W?i?$LM?$PO?$LE?$LE?$LN?$KI?$LK?$KP?J?$PN?$KB?$LA?$CFs?$KB?$LB?$LC?z?I?z?N?$LE?V?$KK?R?l?$LD?$KD?$LE@
  001d1	68 80 00 00 00	 push	 128			; 00000080H
  001d6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d9	81 c1 58 01 00
	00		 add	 ecx, 344		; 00000158H
  001df	51		 push	 ecx
  001e0	e8 00 00 00 00	 call	 ??$_snprintf_s@$0IA@@@YAHAAY0IA@DIPBDZZ ; _snprintf_s<128>
  001e5	83 c4 10	 add	 esp, 16			; 00000010H

; 255  : 		return false;

  001e8	c6 45 a2 00	 mov	 BYTE PTR $T2[ebp], 0
  001ec	b8 00 00 00 00	 mov	 eax, $LN15@CreateInst
  001f1	c3		 ret	 0

; 256  : 	}

  001f2	b8 00 00 00 00	 mov	 eax, $LN9@CreateInst
  001f7	c3		 ret	 0
$LN9@CreateInst:
  001f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ff	eb 0c		 jmp	 SHORT $LN14@CreateInst
$LN15@CreateInst:
  00201	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 255  : 		return false;

  00208	8a 45 a2	 mov	 al, BYTE PTR $T2[ebp]
  0020b	eb 10		 jmp	 SHORT $LN1@CreateInst
$LN14@CreateInst:
  0020d	eb 0c		 jmp	 SHORT $LN12@CreateInst
$LN13@CreateInst:
  0020f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 250  : 		return false;

  00216	8a 45 a3	 mov	 al, BYTE PTR $T3[ebp]
  00219	eb 02		 jmp	 SHORT $LN1@CreateInst
$LN12@CreateInst:

; 257  : 
; 258  : 	return true;

  0021b	b0 01		 mov	 al, 1
$LN1@CreateInst:

; 259  : }

  0021d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00220	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00227	59		 pop	 ecx
  00228	5f		 pop	 edi
  00229	5e		 pop	 esi
  0022a	5b		 pop	 ebx
  0022b	8b e5		 mov	 esp, ebp
  0022d	5d		 pop	 ebp
  0022e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ENDP ; CTempldateHelper<IDataBase>::CreateInstance
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ PROC ; CTempldateHelper<IDataBase>::CloseInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	//设置变量
; 266  : 	m_szDescribe[0]=0;

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 267  : 
; 268  : 	//销毁对象
; 269  : 	if (m_pIModeluInterface!=NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 b8 54 01 00
	00 00		 cmp	 DWORD PTR [eax+340], 0
  00029	74 25		 je	 SHORT $LN2@CloseInsta

; 270  : 	{
; 271  : 		m_pIModeluInterface->Release();

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 88 54 01 00
	00		 mov	 ecx, DWORD PTR [eax+340]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 8a 54 01 00
	00		 mov	 ecx, DWORD PTR [edx+340]
  0003f	8b 10		 mov	 edx, DWORD PTR [eax]
  00041	ff d2		 call	 edx

; 272  : 		m_pIModeluInterface=NULL;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0
$LN2@CloseInsta:

; 273  : 	}
; 274  : 
; 275  : 	//释放 DLL
; 276  : 	if (m_hDllInstance!=NULL)

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 b8 50 01 00
	00 00		 cmp	 DWORD PTR [eax+336], 0
  0005a	74 1c		 je	 SHORT $LN3@CloseInsta

; 277  : 	{
; 278  : 		AfxFreeLibrary(m_hDllInstance);

  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 88 50 01 00
	00		 mov	 ecx, DWORD PTR [eax+336]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxFreeLibrary@@YGHPAUHINSTANCE__@@@Z ; AfxFreeLibrary

; 279  : 		m_hDllInstance=NULL;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0
$LN3@CloseInsta:

; 280  : 	}
; 281  : 
; 282  : 	return true;

  00078	b0 01		 mov	 al, 1

; 283  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ENDP ; CTempldateHelper<IDataBase>::CloseInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ PROC		; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIDataBase@@@@6B@

; 206  : 	CloseInstance();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?CloseInstance@?$CTempldateHelper@UIDataBase@@@@QAE_NXZ ; CTempldateHelper<IDataBase>::CloseInstance

; 207  : }

  0003c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00046	59		 pop	 ecx
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CTempldateHelper@UIDataBase@@@@UAE@XZ ENDP		; CTempldateHelper<IDataBase>::~CTempldateHelper<IDataBase>
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwVersion$ = 12					; size = 4
_pszModuleDll$ = 16					; size = 4
_pszCreateProc$ = 20					; size = 4
??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z PROC ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>, COMDAT
; _this$ = ecx

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTempldateHelper@UIDataBase@@@@6B@

; 186  : CTempldateHelper<IModeluInterface>::CTempldateHelper(REFGUID Guid, DWORD dwVersion, LPCTSTR pszModuleDll, LPCSTR pszCreateProc) : m_dwVersion(dwVersion), m_Guid(Guid)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _dwVersion$[ebp]
  00024	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 188  : 	//辅助变量
; 189  : 	m_szDescribe[0]=0;

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	c6 84 0a 58 01
	00 00 00	 mov	 BYTE PTR [edx+ecx+344], 0

; 190  : 
; 191  : 	//内核信息
; 192  : 	m_hDllInstance=NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 80 50 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+336], 0

; 193  : 	m_pIModeluInterface=NULL;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 194  : 
; 195  : 	//组件属性
; 196  : 	lstrcpynA(m_szCreateProc,pszCreateProc,CountArray(m_szCreateProc));

  00054	6a 40		 push	 64			; 00000040H
  00056	8b 45 14	 mov	 eax, DWORD PTR _pszCreateProc$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00060	51		 push	 ecx
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 197  : 	lstrcpyn(m_szModuleDllName,pszModuleDll,CountArray(m_szModuleDllName));

  00067	68 04 01 00 00	 push	 260			; 00000104H
  0006c	8b 45 10	 mov	 eax, DWORD PTR _pszModuleDll$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 4c	 add	 ecx, 76			; 0000004cH
  00076	51		 push	 ecx
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 198  : 
; 199  : 	return;
; 200  : }

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 10 00	 ret	 16			; 00000010H
??0?$CTempldateHelper@UIDataBase@@@@QAE@ABU_GUID@@KPBD1@Z ENDP ; CTempldateHelper<IDataBase>::CTempldateHelper<IDataBase>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 __vsnprintf_s_l
  00024	83 c4 18	 add	 esp, 24			; 00000018H

; 1607 :     }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00009	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	51		 push	 ecx
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00033	83 c4 20	 add	 esp, 32			; 00000020H
  00036	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00039	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003d	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003f	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00046	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00048	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004b	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004e	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?__global_array_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_array_delete@@YAXPAXI@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_array_delete@@YAXPAXI@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?__global_array_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_array_delete@@YAXPAX@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_array_delete@@YAXPAX@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?__global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_delete@@YAXPAXI@Z PROC			; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00016	83 c4 08	 add	 esp, 8
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?__global_delete@@YAXPAXI@Z ENDP			; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?__global_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_delete@@YAXPAX@Z PROC				; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?__global_delete@@YAXPAX@Z ENDP				; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\模块管理\dlgservermatch.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
