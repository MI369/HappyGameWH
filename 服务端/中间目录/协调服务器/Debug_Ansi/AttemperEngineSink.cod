; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\协调服务器\AttemperEngineSink.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
?IID_IAttemperEngineSink@@3U_GUID@@B DD 0831b9001H	; IID_IAttemperEngineSink
	DW	04450H
	DW	045ddH
	DB	091H
	DB	037H
	DB	0dH
	DB	026H
	DB	016H
	DB	0e3H
	DB	075H
	DB	032H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_IsEqualGUID
PUBLIC	_==
PUBLIC	__tcslwr
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	??0tagHostCreatRoomInfo@@QAE@XZ			; tagHostCreatRoomInfo::tagHostCreatRoomInfo
PUBLIC	??0tagPersonalUserScoreInfo@@QAE@XZ		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
PUBLIC	??0IUnknownEx@@QAE@XZ				; IUnknownEx::IUnknownEx
PUBLIC	?GetProductVer@@YAEK@Z				; GetProductVer
PUBLIC	?GetMainVer@@YAEK@Z				; GetMainVer
PUBLIC	?GetSubVer@@YAEK@Z				; GetSubVer
PUBLIC	?GetBuildVer@@YAEK@Z				; GetBuildVer
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	??0CMD_CS_C_DismissTableResult@@QAE@XZ		; CMD_CS_C_DismissTableResult::CMD_CS_C_DismissTableResult
PUBLIC	??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ		; CMD_CS_C_HostCreatRoomInfo::CMD_CS_C_HostCreatRoomInfo
PUBLIC	??0IAttemperEngineSink@@QAE@XZ			; IAttemperEngineSink::IAttemperEngineSink
PUBLIC	?GetUserID@CGlobalUserItem@@QAEKXZ		; CGlobalUserItem::GetUserID
PUBLIC	?GetGameID@CGlobalUserItem@@QAEKXZ		; CGlobalUserItem::GetGameID
PUBLIC	?GetNickName@CGlobalUserItem@@QAEPBDXZ		; CGlobalUserItem::GetNickName
PUBLIC	?GetGender@CGlobalUserItem@@QAEEXZ		; CGlobalUserItem::GetGender
PUBLIC	?GetMemberOrder@CGlobalUserItem@@QAEEXZ		; CGlobalUserItem::GetMemberOrder
PUBLIC	?GetMasterOrder@CGlobalUserItem@@QAEEXZ		; CGlobalUserItem::GetMasterOrder
PUBLIC	?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ; CGlobalUserItem::GetUserInfo
PUBLIC	?GetIndex@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetIndex
PUBLIC	?GetKindID@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetKindID
PUBLIC	?GetServerID@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetServerID
PUBLIC	?IsMatchServer@CGlobalServerItem@@QAE_NXZ	; CGlobalServerItem::IsMatchServer
PUBLIC	??0?$CWHArray@GABG@@QAE@XZ			; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>
PUBLIC	??1?$CWHArray@GABG@@UAE@XZ			; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
PUBLIC	?GetCount@?$CWHArray@GABG@@QBEHXZ		; CWHArray<unsigned short,unsigned short const &>::GetCount
PUBLIC	?Add@?$CWHArray@GABG@@QAEHABG@Z			; CWHArray<unsigned short,unsigned short const &>::Add
PUBLIC	?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z		; CWHArray<unsigned short,unsigned short const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@GABG@@QAEXH@Z		; CWHArray<unsigned short,unsigned short const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z		; CWHArray<unsigned short,unsigned short const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z		; CWHArray<unsigned short,unsigned short const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@GABG@@QAEXXZ		; CWHArray<unsigned short,unsigned short const &>::RemoveAll
PUBLIC	??A?$CWHArray@GABG@@QAEAAGH@Z			; CWHArray<unsigned short,unsigned short const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@GABG@@QAEXH@Z		; CWHArray<unsigned short,unsigned short const &>::AllocMemory
PUBLIC	??_G?$CWHArray@GABG@@UAEPAXI@Z			; CWHArray<unsigned short,unsigned short const &>::`scalar deleting destructor'
PUBLIC	??0CAttemperEngineSink@@QAE@XZ			; CAttemperEngineSink::CAttemperEngineSink
PUBLIC	??1CAttemperEngineSink@@UAE@XZ			; CAttemperEngineSink::~CAttemperEngineSink
PUBLIC	?Release@CAttemperEngineSink@@UAEXXZ		; CAttemperEngineSink::Release
PUBLIC	?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ; CAttemperEngineSink::QueryInterface
PUBLIC	?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngineSink::OnAttemperEngineStart
PUBLIC	?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngineSink::OnAttemperEngineConclude
PUBLIC	?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z ; CAttemperEngineSink::OnEventControl
PUBLIC	?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z ; CAttemperEngineSink::OnEventAttemperData
PUBLIC	?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z	; CAttemperEngineSink::OnEventTimer
PUBLIC	?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z ; CAttemperEngineSink::OnEventDataBase
PUBLIC	?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z ; CAttemperEngineSink::OnEventTCPSocketLink
PUBLIC	?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z ; CAttemperEngineSink::OnEventTCPSocketShut
PUBLIC	?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z ; CAttemperEngineSink::OnEventTCPSocketRead
PUBLIC	?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z ; CAttemperEngineSink::OnEventTCPNetworkBind
PUBLIC	?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z ; CAttemperEngineSink::OnEventTCPNetworkShut
PUBLIC	?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z ; CAttemperEngineSink::OnEventTCPNetworkRead
PUBLIC	?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRegister
PUBLIC	?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo
PUBLIC	?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainUserCollect
PUBLIC	?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRemoteService
PUBLIC	?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainManagerService
PUBLIC	?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainAndroidService
PUBLIC	?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendServerListItem
PUBLIC	?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendMatchListItem
PUBLIC	?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame
PUBLIC	?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z ; CAttemperEngineSink::SendDataToUser
PUBLIC	??_GCAttemperEngineSink@@UAEPAXI@Z		; CAttemperEngineSink::`scalar deleting destructor'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	??_C@_0P@MBNHGHMI@atlTraceString@		; `string'
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_7IAttemperEngineSink@@6B@			; IAttemperEngineSink::`vftable'
PUBLIC	??_7?$CWHArray@GABG@@6B@			; CWHArray<unsigned short,unsigned short const &>::`vftable'
PUBLIC	??_7CAttemperEngineSink@@6B@			; CAttemperEngineSink::`vftable'
PUBLIC	?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA ; `CAttemperEngineSink::OnAttemperEngineConclude'::`1'::__LINE__Var
PUBLIC	??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA ; `CAttemperEngineSink::OnEventTCPNetworkBind'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainRegister'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@CHBPFBCE@?$LH?$PO?N?q?F?w?W?$KC?$LC?a?J?$KH?$LA?$NM?$KD?$KM?$KB?$LA?$LH?$PO?N?q?$LF?X?V?$LH?$KB?$LB?S?k?$KB@ ; `string'
PUBLIC	??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainServiceInfo'::`1'::__LINE__Var
PUBLIC	??_C@_0EH@JNADOHAP@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@ ; `string'
PUBLIC	??_C@_0CP@LAAPCNIF@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?K?$LN?H?K?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainUserCollect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainRemoteService'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainAndroidService'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAttemperEngineSink@@6B@			; IAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAttemperEngineSink@@@8			; IAttemperEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3IAttemperEngineSink@@8			; IAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAttemperEngineSink@@8			; IAttemperEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAttemperEngineSink@@8		; IAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@GABG@@6B@			; CWHArray<unsigned short,unsigned short const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@GABG@@@8			; CWHArray<unsigned short,unsigned short const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@GABG@@8				; CWHArray<unsigned short,unsigned short const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@GABG@@8				; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@GABG@@8		; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAttemperEngineSink@@6B@			; CAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAttemperEngineSink@@@8			; CAttemperEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3CAttemperEngineSink@@8			; CAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAttemperEngineSink@@8			; CAttemperEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAttemperEngineSink@@8		; CAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp___mbslwr:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z:PROC	; CGlobalUserItem::UpdateStatus
EXTRN	?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z:PROC ; CGlobalUserItem::EnumServerItem
EXTRN	??0CGlobalInfoManager@@QAE@XZ:PROC		; CGlobalInfoManager::CGlobalInfoManager
EXTRN	??1CGlobalInfoManager@@UAE@XZ:PROC		; CGlobalInfoManager::~CGlobalInfoManager
EXTRN	?ResetData@CGlobalInfoManager@@QAEXXZ:PROC	; CGlobalInfoManager::ResetData
EXTRN	?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@PBD@Z:PROC ; CGlobalInfoManager::SearchTableByID
EXTRN	?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z:PROC ; CGlobalInfoManager::SearchTableByTableIDAndServerID
EXTRN	?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z:PROC ; CGlobalInfoManager::AddFreeServerTable
EXTRN	?AddServerTable@CGlobalInfoManager@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@UtagPersonalTableInfo@@@Z:PROC ; CGlobalInfoManager::AddServerTable
EXTRN	?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z:PROC ; CGlobalInfoManager::RemoveFreeServerTable
EXTRN	?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z:PROC ; CGlobalInfoManager::RemoveServerTable
EXTRN	?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z:PROC ; CGlobalInfoManager::GetFreeServer
EXTRN	?RandServerID@CGlobalInfoManager@@QAEXPADG@Z:PROC ; CGlobalInfoManager::RandServerID
EXTRN	?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z:PROC ; CGlobalInfoManager::GetHostCreatePersonalRoom
EXTRN	?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z:PROC ; CGlobalInfoManager::AddPersonalMaxCreate
EXTRN	?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z:PROC ; CGlobalInfoManager::CanCreatePersonalRoom
EXTRN	?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z:PROC ; CGlobalInfoManager::DeleteUserItem
EXTRN	?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z:PROC ; CGlobalInfoManager::ActiveUserItem
EXTRN	?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z:PROC ; CGlobalInfoManager::DeletePlazaItem
EXTRN	?ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z:PROC ; CGlobalInfoManager::ActivePlazaItem
EXTRN	?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z:PROC ; CGlobalInfoManager::DeleteServerItem
EXTRN	?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z:PROC ; CGlobalInfoManager::ActiveServerItem
EXTRN	?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z:PROC ; CGlobalInfoManager::DeleteChatItem
EXTRN	?ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z:PROC ; CGlobalInfoManager::ActiveChatItem
EXTRN	?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z:PROC ; CGlobalInfoManager::SearchServerItem
EXTRN	?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z:PROC ; CGlobalInfoManager::SearchUserItemByUserID
EXTRN	?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z:PROC ; CGlobalInfoManager::SearchUserItemByGameID
EXTRN	?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z:PROC ; CGlobalInfoManager::SearchUserItemByNickName
EXTRN	?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z:PROC ; CGlobalInfoManager::EnumServerItem
EXTRN	?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z:PROC ; CGlobalInfoManager::EnumChatItem
EXTRN	??_E?$CWHArray@GABG@@UAEPAXI@Z:PROC		; CWHArray<unsigned short,unsigned short const &>::`vector deleting destructor'
EXTRN	??_ECAttemperEngineSink@@UAEPAXI@Z:PROC		; CAttemperEngineSink::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAttemperEngineSink@@8 DD FLAT:??_R0?AVCAttemperEngineSink@@@8 ; CAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R2CAttemperEngineSink@@8 DD FLAT:??_R1A@?0A@EA@CAttemperEngineSink@@8 ; CAttemperEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAttemperEngineSink@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R3CAttemperEngineSink@@8 DD 00H			; CAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAttemperEngineSink@@@8
data$r	SEGMENT
??_R0?AVCAttemperEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; CAttemperEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAttemperEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAttemperEngineSink@@6B@
rdata$r	SEGMENT
??_R4CAttemperEngineSink@@6B@ DD 00H			; CAttemperEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngineSink@@@8
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@GABG@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@GABG@@8 DD FLAT:??_R0?AV?$CWHArray@GABG@@@8 ; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@GABG@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@GABG@@8
rdata$r	SEGMENT
??_R2?$CWHArray@GABG@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@GABG@@8 ; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@GABG@@8
rdata$r	SEGMENT
??_R3?$CWHArray@GABG@@8 DD 00H				; CWHArray<unsigned short,unsigned short const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@GABG@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@GABG@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@GABG@@@8 DD FLAT:??_7type_info@@6B@	; CWHArray<unsigned short,unsigned short const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@GABG@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@GABG@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@GABG@@6B@ DD 00H			; CWHArray<unsigned short,unsigned short const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@GABG@@@8
	DD	FLAT:??_R3?$CWHArray@GABG@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAttemperEngineSink@@8 DD FLAT:??_R0?AUIAttemperEngineSink@@@8 ; IAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R2IAttemperEngineSink@@8 DD FLAT:??_R1A@?0A@EA@IAttemperEngineSink@@8 ; IAttemperEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R3IAttemperEngineSink@@8 DD 00H			; IAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAttemperEngineSink@@@8
data$r	SEGMENT
??_R0?AUIAttemperEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; IAttemperEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAttemperEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAttemperEngineSink@@6B@
rdata$r	SEGMENT
??_R4IAttemperEngineSink@@6B@ DD 00H			; IAttemperEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAttemperEngineSink@@@8
	DD	FLAT:??_R3IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 04bbH ; `CAttemperEngineSink::OnTCPNetworkMainAndroidService'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0403H ; `CAttemperEngineSink::OnTCPNetworkMainRemoteService'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 032fH ; `CAttemperEngineSink::OnTCPNetworkMainUserCollect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@LAAPCNIF@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?K?$LN?H?K?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@
CONST	SEGMENT
??_C@_0CP@LAAPCNIF@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?K?$LN?H?K?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@ DB 0d2H
	DB	0d1H, 0beH, 0adH, 0b4H, 0efH, 0b5H, 0bdH, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0cbH, 0bdH, 0c8H, 0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0b5H, 0c4H, 0d7H
	DB	0eeH, 0b4H, 0f3H, 0caH, 0fdH, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH
	DB	0d4H, 0d9H, 0b4H, 0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@JNADOHAP@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@
CONST	SEGMENT
??_C@_0EH@JNADOHAP@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0b1H, 0d8H, 0d0H, 0ebH, 0b2H, 0ceH, 0d3H, 0ebH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0c4H, 0a3H, 0caH, 0bdH, 0cfH, 0c2H, 0d6H
	DB	0bbH, 0c4H, 0dcH, 0b4H, 0b4H, 0bdH, 0a8H, 0d2H, 0bbH, 0b8H, 0f6H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0acH, 0bbH, 0f2H, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0cbH, 0bdH, 0c8H, 0cbH, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0c2H
	DB	0faH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 01fdH ; `CAttemperEngineSink::OnTCPNetworkMainServiceInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@
CONST	SEGMENT
??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@ DB 0d2H
	DB	0d1H, 0beH, 0adH, 0b4H, 0e6H, 0d4H, 0daH, 0cfH, 0e0H, 0cdH, 0acH
	DB	0b1H, 0eaH, 0caH, 0b6H, 0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H
	DB	0bfH, 0bcH, 0e4H, 0b7H, 0feH, 0ceH, 0f1H, 0a3H, 0acH, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0b7H, 0feH, 0ceH, 0f1H, 0d7H, 0a2H, 0b2H, 0e1H, 0caH
	DB	0a7H, 0b0H, 0dcH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CHBPFBCE@?$LH?$PO?N?q?F?w?W?$KC?$LC?a?J?$KH?$LA?$NM?$KD?$KM?$KB?$LA?$LH?$PO?N?q?$LF?X?V?$LH?$KB?$LB?S?k?$KB@
CONST	SEGMENT
??_C@_0DD@CHBPFBCE@?$LH?$PO?N?q?F?w?W?$KC?$LC?a?J?$KH?$LA?$NM?$KD?$KM?$KB?$LA?$LH?$PO?N?q?$LF?X?V?$LH?$KB?$LB?S?k?$KB@ DB 0b7H
	DB	0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0a2H, 0b2H, 0e1H, 0caH, 0a7H
	DB	0b0H, 0dcH, 0a3H, 0acH, 0a1H, 0b0H, 0b7H, 0feH, 0ceH, 0f1H, 0b5H
	DB	0d8H, 0d6H, 0b7H, 0a1H, 0b1H, 0d3H, 0ebH, 0a1H, 0b0H, 0b7H, 0feH
	DB	0ceH, 0f1H, 0c6H, 0f7H, 0c3H, 0fbH, 0a1H, 0b1H, 0b2H, 0bbH, 0baH
	DB	0cfH, 0b7H, 0a8H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0112H ; `CAttemperEngineSink::OnTCPNetworkMainRegister'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA DD 06eH ; `CAttemperEngineSink::OnEventTCPNetworkBind'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0d0H, 0adH, 0b5H, 0f7H, 0b7H, 0feH, 0ceH, 0f1H, 0c6H
	DB	0f7H, '\attemperenginesink.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA DD 03fH ; `CAttemperEngineSink::OnAttemperEngineConclude'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CAttemperEngineSink@@6B@
CONST	SEGMENT
??_7CAttemperEngineSink@@6B@ DD FLAT:??_R4CAttemperEngineSink@@6B@ ; CAttemperEngineSink::`vftable'
	DD	FLAT:?Release@CAttemperEngineSink@@UAEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
	DD	FLAT:?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z
	DD	FLAT:?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z
	DD	FLAT:?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z
	DD	FLAT:?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z
	DD	FLAT:?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z
	DD	FLAT:?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
	DD	FLAT:?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z
	DD	FLAT:??_ECAttemperEngineSink@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@GABG@@6B@
CONST	SEGMENT
??_7?$CWHArray@GABG@@6B@ DD FLAT:??_R4?$CWHArray@GABG@@6B@ ; CWHArray<unsigned short,unsigned short const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@GABG@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7IAttemperEngineSink@@6B@
CONST	SEGMENT
??_7IAttemperEngineSink@@6B@ DD FLAT:??_R4IAttemperEngineSink@@6B@ ; IAttemperEngineSink::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBNHGHMI@atlTraceString@
CONST	SEGMENT
??_C@_0P@MBNHGHMI@atlTraceString@ DB 'atlTraceString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$0
__unwindtable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$2
__ehfuncinfo$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CAttemperEngineSink@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$0
__ehfuncinfo$??0CAttemperEngineSink@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CAttemperEngineSink@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCAttemperEngineSink@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAttemperEngineSink@@UAEPAXI@Z PROC			; CAttemperEngineSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CAttemperEngineSink@@UAE@XZ ; CAttemperEngineSink::~CAttemperEngineSink
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 38 01 00 00	 push	 312			; 00000138H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCAttemperEngineSink@@UAEPAXI@Z ENDP			; CAttemperEngineSink::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_dwUserID$ = 12						; size = 4
_wMainCmdID$ = 16					; size = 2
_wSubCmdID$ = 20					; size = 2
_pData$ = 24						; size = 4
_wDataSize$ = 28					; size = 2
?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z PROC ; CAttemperEngineSink::SendDataToUser, COMDAT
; _this$ = ecx

; 1372 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1373 : 	return true;

  0000c	b0 01		 mov	 al, 1

; 1374 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 18 00	 ret	 24			; 00000018H
?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z ENDP ; CAttemperEngineSink::SendDataToUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z
_TEXT	SEGMENT
_dwSocketID$ = -20					; size = 4
_pBindParameter$ = -16					; size = 4
_wBindIndex$ = -12					; size = 2
_pGlobalServerItem$ = -8				; size = 4
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z PROC ; CAttemperEngineSink::SendDataToGame, COMDAT
; _this$ = ecx

; 1354 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1355 : 	//查找房间
; 1356 : 	CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(wServerID);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 24	 add	 ecx, 36			; 00000024H
  00017	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0001c	89 45 f8	 mov	 DWORD PTR _pGlobalServerItem$[ebp], eax

; 1357 : 	if (pGlobalServerItem==NULL) return false;

  0001f	83 7d f8 00	 cmp	 DWORD PTR _pGlobalServerItem$[ebp], 0
  00023	75 04		 jne	 SHORT $LN2@SendDataTo
  00025	32 c0		 xor	 al, al
  00027	eb 56		 jmp	 SHORT $LN1@SendDataTo
$LN2@SendDataTo:

; 1358 : 
; 1359 : 	//获取参数
; 1360 : 	WORD wBindIndex=pGlobalServerItem->GetIndex();

  00029	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  0002c	e8 00 00 00 00	 call	 ?GetIndex@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetIndex
  00031	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 1361 : 	tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00035	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00039	6b c8 14	 imul	 ecx, eax, 20
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00042	89 4d f0	 mov	 DWORD PTR _pBindParameter$[ebp], ecx

; 1362 : 
; 1363 : 	//发送数据
; 1364 : 	DWORD dwSocketID=pBindParameter->dwSocketID;

  00045	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d ec	 mov	 DWORD PTR _dwSocketID$[ebp], ecx

; 1365 : 	m_pITCPNetworkEngine->SendData(dwSocketID,wMainCmdID,wSubCmdID,pData,wDataSize);

  0004d	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00051	50		 push	 eax
  00052	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00055	51		 push	 ecx
  00056	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0005a	52		 push	 edx
  0005b	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00063	51		 push	 ecx
  00064	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 10		 mov	 edx, DWORD PTR [eax]
  00072	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00078	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0007b	ff d0		 call	 eax

; 1366 : 
; 1367 : 	return true;

  0007d	b0 01		 mov	 al, 1
$LN1@SendDataTo:

; 1368 : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 14 00	 ret	 20			; 00000014H
?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ENDP ; CAttemperEngineSink::SendDataToGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z
_TEXT	SEGMENT
_pGlobalServerItem$1 = -16400				; size = 4
_pGameMatch$2 = -16396					; size = 4
_cbBuffer$ = -16392					; size = 16376
_Position$ = -16					; size = 4
_wPacketSize$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwSocketID$ = 8					; size = 4
?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z PROC	; CAttemperEngineSink::SendMatchListItem, COMDAT
; _this$ = ecx

; 1317 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 10 42 00 00	 mov	 eax, 16912		; 00004210H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1318 : 	//变量定义
; 1319 : 	WORD wPacketSize=0L;

  0001d	33 c0		 xor	 eax, eax
  0001f	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1320 : 	POSITION Position=NULL;

  00023	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0
$LN4@SendMatchL:

; 1321 : 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 1322 : 
; 1323 : 	//收集数据
; 1324 : 	do
; 1325 : 	{
; 1326 : 		//发送数据
; 1327 : 		if ((wPacketSize+sizeof(tagGameServer))>sizeof(cbBuffer))

  0002a	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0002e	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  00033	3d f8 3f 00 00	 cmp	 eax, 16376		; 00003ff8H
  00038	76 33		 jbe	 SHORT $LN5@SendMatchL

; 1328 : 		{
; 1329 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_MATCH_INSERT,cbBuffer,wPacketSize);

  0003a	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0003e	50		 push	 eax
  0003f	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00045	51		 push	 ecx
  00046	6a 78		 push	 120			; 00000078H
  00048	6a 02		 push	 2
  0004a	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00057	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005c	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00062	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00065	ff d2		 call	 edx

; 1330 : 			wPacketSize=0;

  00067	33 c0		 xor	 eax, eax
  00069	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax
$LN5@SendMatchL:

; 1331 : 		}
; 1332 : 
; 1333 : 		//获取对象
; 1334 : 		tagGameMatch * pGameMatch=(tagGameMatch *)(cbBuffer+wPacketSize);

  0006d	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  00071	8d 8c 05 f8 bf
	ff ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp+eax]
  00078	89 8d f4 bf ff
	ff		 mov	 DWORD PTR _pGameMatch$2[ebp], ecx

; 1335 : 		CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.EnumServerItem(Position);

  0007e	8d 45 f0	 lea	 eax, DWORD PTR _Position$[ebp]
  00081	50		 push	 eax
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	83 c1 24	 add	 ecx, 36			; 00000024H
  00088	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumServerItem
  0008d	89 85 f0 bf ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$1[ebp], eax

; 1336 : 
; 1337 : 		//设置数据
; 1338 : 		if (pGlobalServerItem!=NULL && pGlobalServerItem->IsMatchServer())

  00093	83 bd f0 bf ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$1[ebp], 0
  0009a	74 3f		 je	 SHORT $LN2@SendMatchL
  0009c	8b 8d f0 bf ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$1[ebp]
  000a2	e8 00 00 00 00	 call	 ?IsMatchServer@CGlobalServerItem@@QAE_NXZ ; CGlobalServerItem::IsMatchServer
  000a7	0f b6 c0	 movzx	 eax, al
  000aa	85 c0		 test	 eax, eax
  000ac	74 2d		 je	 SHORT $LN2@SendMatchL

; 1339 : 		{
; 1340 : 			wPacketSize+=sizeof(tagGameMatch);

  000ae	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000b2	05 80 02 00 00	 add	 eax, 640		; 00000280H
  000b7	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1341 : 			CopyMemory(pGameMatch,&pGlobalServerItem->m_GameMatch,sizeof(tagGameMatch));

  000bb	68 80 02 00 00	 push	 640			; 00000280H
  000c0	8b 85 f0 bf ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$1[ebp]
  000c6	05 a1 00 00 00	 add	 eax, 161		; 000000a1H
  000cb	50		 push	 eax
  000cc	8b 8d f4 bf ff
	ff		 mov	 ecx, DWORD PTR _pGameMatch$2[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 _memcpy
  000d8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendMatchL:

; 1342 : 		}
; 1343 : 
; 1344 : 	} while (Position!=NULL);

  000db	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000df	0f 85 45 ff ff
	ff		 jne	 $LN4@SendMatchL

; 1345 : 
; 1346 : 	//发送数据
; 1347 : 	if (wPacketSize>0) m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_MATCH_INSERT,cbBuffer,wPacketSize);

  000e5	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000e9	85 c0		 test	 eax, eax
  000eb	7e 2d		 jle	 SHORT $LN7@SendMatchL
  000ed	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000f1	50		 push	 eax
  000f2	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  000f8	51		 push	 ecx
  000f9	6a 78		 push	 120			; 00000078H
  000fb	6a 02		 push	 2
  000fd	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00100	52		 push	 edx
  00101	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0010a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010f	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00115	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00118	ff d2		 call	 edx
$LN7@SendMatchL:

; 1348 : 
; 1349 : 	return true;

  0011a	b0 01		 mov	 al, 1

; 1350 : }

  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00122	33 cd		 xor	 ecx, ebp
  00124	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c2 04 00	 ret	 4
?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ENDP	; CAttemperEngineSink::SendMatchListItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z
_TEXT	SEGMENT
_pGlobalServerItem$1 = -16400				; size = 4
_pGameServer$2 = -16396					; size = 4
_cbBuffer$ = -16392					; size = 16376
_Position$ = -16					; size = 4
_wPacketSize$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwSocketID$ = 8					; size = 4
?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z PROC	; CAttemperEngineSink::SendServerListItem, COMDAT
; _this$ = ecx

; 1275 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 10 42 00 00	 mov	 eax, 16912		; 00004210H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1276 : 	//变量定义
; 1277 : 	WORD wPacketSize=0L;

  0001d	33 c0		 xor	 eax, eax
  0001f	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1278 : 	POSITION Position=NULL;

  00023	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0

; 1279 : 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 1280 : 
; 1281 : 	//发送信息
; 1282 : 	m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INFO);

  0002a	6a 6e		 push	 110			; 0000006eH
  0002c	6a 02		 push	 2
  0002e	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00031	50		 push	 eax
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 12		 mov	 edx, DWORD PTR [edx]
  00040	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00046	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00049	ff d0		 call	 eax
$LN4@SendServer:

; 1283 : 
; 1284 : 	//收集数据
; 1285 : 	do
; 1286 : 	{
; 1287 : 		//发送数据
; 1288 : 		if ((wPacketSize+sizeof(tagGameServer))>sizeof(cbBuffer))

  0004b	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0004f	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  00054	3d f8 3f 00 00	 cmp	 eax, 16376		; 00003ff8H
  00059	76 33		 jbe	 SHORT $LN5@SendServer

; 1289 : 		{
; 1290 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INSERT,cbBuffer,wPacketSize);

  0005b	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0005f	50		 push	 eax
  00060	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00066	51		 push	 ecx
  00067	6a 70		 push	 112			; 00000070H
  00069	6a 02		 push	 2
  0006b	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0006e	52		 push	 edx
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00078	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007d	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00083	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00086	ff d2		 call	 edx

; 1291 : 			wPacketSize=0;

  00088	33 c0		 xor	 eax, eax
  0008a	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax
$LN5@SendServer:

; 1292 : 		}
; 1293 : 
; 1294 : 		//获取对象
; 1295 : 		tagGameServer * pGameServer=(tagGameServer *)(cbBuffer+wPacketSize);

  0008e	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  00092	8d 8c 05 f8 bf
	ff ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp+eax]
  00099	89 8d f4 bf ff
	ff		 mov	 DWORD PTR _pGameServer$2[ebp], ecx

; 1296 : 		CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.EnumServerItem(Position);

  0009f	8d 45 f0	 lea	 eax, DWORD PTR _Position$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	83 c1 24	 add	 ecx, 36			; 00000024H
  000a9	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumServerItem
  000ae	89 85 f0 bf ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$1[ebp], eax

; 1297 : 
; 1298 : 		//设置数据
; 1299 : 		if (pGlobalServerItem!=NULL)

  000b4	83 bd f0 bf ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$1[ebp], 0
  000bb	74 2b		 je	 SHORT $LN2@SendServer

; 1300 : 		{
; 1301 : 			wPacketSize+=sizeof(tagGameServer);

  000bd	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000c1	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  000c6	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1302 : 			CopyMemory(pGameServer,&pGlobalServerItem->m_GameServer,sizeof(tagGameServer));

  000ca	68 9b 00 00 00	 push	 155			; 0000009bH
  000cf	8b 85 f0 bf ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$1[ebp]
  000d5	83 c0 06	 add	 eax, 6
  000d8	50		 push	 eax
  000d9	8b 8d f4 bf ff
	ff		 mov	 ecx, DWORD PTR _pGameServer$2[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 _memcpy
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendServer:

; 1303 : 		}
; 1304 : 
; 1305 : 	} while (Position!=NULL);

  000e8	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000ec	0f 85 59 ff ff
	ff		 jne	 $LN4@SendServer

; 1306 : 
; 1307 : 	//发送数据
; 1308 : 	if (wPacketSize>0) m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INSERT,cbBuffer,wPacketSize);

  000f2	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000f6	85 c0		 test	 eax, eax
  000f8	7e 2d		 jle	 SHORT $LN7@SendServer
  000fa	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000fe	50		 push	 eax
  000ff	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00105	51		 push	 ecx
  00106	6a 70		 push	 112			; 00000070H
  00108	6a 02		 push	 2
  0010a	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0010d	52		 push	 edx
  0010e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00111	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00117	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0011c	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00122	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00125	ff d2		 call	 edx
$LN7@SendServer:

; 1309 : 
; 1310 : 	//发送完成
; 1311 : 	m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_FINISH);

  00127	6a 73		 push	 115			; 00000073H
  00129	6a 02		 push	 2
  0012b	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0012e	50		 push	 eax
  0012f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00138	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013b	8b 12		 mov	 edx, DWORD PTR [edx]
  0013d	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00143	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00146	ff d0		 call	 eax

; 1312 : 
; 1313 : 	return true;

  00148	b0 01		 mov	 al, 1

; 1314 : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00150	33 cd		 xor	 ecx, ebp
  00152	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 04 00	 ret	 4
?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ENDP	; CAttemperEngineSink::SendServerListItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -260						; size = 4
_DeleteParameter$1 = -192				; size = 4
_pDeleteParameter$2 = -188				; size = 4
_ModifyParameter$3 = -184				; size = 84
_pModifyParameter$4 = -100				; size = 4
_AddParameter$5 = -96					; size = 84
_pAddParameter$6 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainAndroidService, COMDAT
; _this$ = ecx

; 1211 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1212 : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	83 bd fc fe ff
	ff 64		 cmp	 DWORD PTR tv65[ebp], 100 ; 00000064H
  0002a	74 1f		 je	 SHORT $LN4@OnTCPNetwo
  0002c	83 bd fc fe ff
	ff 65		 cmp	 DWORD PTR tv65[ebp], 101 ; 00000065H
  00033	0f 84 82 00 00
	00		 je	 $LN6@OnTCPNetwo
  00039	83 bd fc fe ff
	ff 66		 cmp	 DWORD PTR tv65[ebp], 102 ; 00000066H
  00040	0f 84 e8 00 00
	00		 je	 $LN8@OnTCPNetwo
  00046	e9 50 01 00 00	 jmp	 $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 1213 : 	{
; 1214 : 	case SUB_CS_C_ADDPARAMETER:		//添加参数
; 1215 : 		{
; 1216 : 			//参数校验
; 1217 : 			ASSERT(sizeof(CMD_CS_C_AddParameter)==wDataSize);

  0004b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004f	83 f8 56	 cmp	 eax, 86			; 00000056H
  00052	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0005a	83 c1 06	 add	 ecx, 6
  0005d	51		 push	 ecx
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00063	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00068	85 c0		 test	 eax, eax
  0006a	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0006c	cc		 int	 3
$LN11@OnTCPNetwo:

; 1218 : 			if(sizeof(CMD_CS_C_AddParameter)!=wDataSize) return false;

  0006d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00071	83 f8 56	 cmp	 eax, 86			; 00000056H
  00074	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00076	32 c0		 xor	 al, al
  00078	e9 20 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 1219 : 
; 1220 : 			//提取数据
; 1221 : 			CMD_CS_C_AddParameter * pAddParameter = (CMD_CS_C_AddParameter *)pData;

  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00080	89 45 f4	 mov	 DWORD PTR _pAddParameter$6[ebp], eax

; 1222 : 
; 1223 : 			//构造结构
; 1224 : 			CMD_CS_S_AddParameter AddParameter;
; 1225 : 			CopyMemory(&AddParameter.AndroidParameter,&pAddParameter->AndroidParameter,sizeof(tagAndroidParameter));

  00083	6a 54		 push	 84			; 00000054H
  00085	8b 45 f4	 mov	 eax, DWORD PTR _pAddParameter$6[ebp]
  00088	83 c0 02	 add	 eax, 2
  0008b	50		 push	 eax
  0008c	8d 4d a0	 lea	 ecx, DWORD PTR _AddParameter$5[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 _memcpy
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1226 : 
; 1227 : 			//发送消息
; 1228 : 			SendDataToGame(pAddParameter->wServerID,MDM_CS_ANDROID_SERVICE,SUB_CS_S_ADDPARAMETER,&AddParameter,sizeof(AddParameter));

  00098	6a 54		 push	 84			; 00000054H
  0009a	8d 45 a0	 lea	 eax, DWORD PTR _AddParameter$5[ebp]
  0009d	50		 push	 eax
  0009e	68 c8 00 00 00	 push	 200			; 000000c8H
  000a3	6a 06		 push	 6
  000a5	8b 4d f4	 mov	 ecx, DWORD PTR _pAddParameter$6[ebp]
  000a8	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  000ab	52		 push	 edx
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame

; 1229 : 
; 1230 : 			return true;

  000b4	b0 01		 mov	 al, 1
  000b6	e9 e2 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 1231 : 		}
; 1232 : 	case SUB_CS_C_MODIFYPARAMETER:  //修改参数
; 1233 : 		{
; 1234 : 			//参数校验
; 1235 : 			ASSERT(sizeof(CMD_CS_C_ModifyParameter)==wDataSize);

  000bb	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000bf	83 f8 56	 cmp	 eax, 86			; 00000056H
  000c2	74 19		 je	 SHORT $LN12@OnTCPNetwo
  000c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000ca	83 c1 18	 add	 ecx, 24			; 00000018H
  000cd	51		 push	 ecx
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000d3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d8	85 c0		 test	 eax, eax
  000da	74 01		 je	 SHORT $LN12@OnTCPNetwo
  000dc	cc		 int	 3
$LN12@OnTCPNetwo:

; 1236 : 			if(sizeof(CMD_CS_C_ModifyParameter)!=wDataSize) return false;

  000dd	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000e1	83 f8 56	 cmp	 eax, 86			; 00000056H
  000e4	74 07		 je	 SHORT $LN7@OnTCPNetwo
  000e6	32 c0		 xor	 al, al
  000e8	e9 b0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 1237 : 
; 1238 : 			//提取数据
; 1239 : 			CMD_CS_C_ModifyParameter * pModifyParameter = (CMD_CS_C_ModifyParameter *)pData;

  000ed	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000f0	89 45 9c	 mov	 DWORD PTR _pModifyParameter$4[ebp], eax

; 1240 : 
; 1241 : 			//构造结构
; 1242 : 			CMD_CS_S_ModifyParameter ModifyParameter;
; 1243 : 			CopyMemory(&ModifyParameter.AndroidParameter,&pModifyParameter->AndroidParameter,sizeof(tagAndroidParameter));

  000f3	6a 54		 push	 84			; 00000054H
  000f5	8b 45 9c	 mov	 eax, DWORD PTR _pModifyParameter$4[ebp]
  000f8	83 c0 02	 add	 eax, 2
  000fb	50		 push	 eax
  000fc	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _ModifyParameter$3[ebp]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 _memcpy
  00108	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1244 : 
; 1245 : 			//发送通知
; 1246 : 			SendDataToGame(pModifyParameter->wServerID,MDM_CS_ANDROID_SERVICE,SUB_CS_S_MODIFYPARAMETER,&ModifyParameter,sizeof(ModifyParameter));

  0010b	6a 54		 push	 84			; 00000054H
  0010d	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _ModifyParameter$3[ebp]
  00113	50		 push	 eax
  00114	68 c9 00 00 00	 push	 201			; 000000c9H
  00119	6a 06		 push	 6
  0011b	8b 4d 9c	 mov	 ecx, DWORD PTR _pModifyParameter$4[ebp]
  0011e	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00121	52		 push	 edx
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame

; 1247 : 
; 1248 : 			return true;

  0012a	b0 01		 mov	 al, 1
  0012c	eb 6f		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 1249 : 		}
; 1250 : 	case SUB_CS_C_DELETEPARAMETER:  //删除参数
; 1251 : 		{
; 1252 : 			//参数校验
; 1253 : 			ASSERT(sizeof(CMD_CS_C_DeleteParameter)==wDataSize);

  0012e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00132	83 f8 06	 cmp	 eax, 6
  00135	74 19		 je	 SHORT $LN13@OnTCPNetwo
  00137	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0013d	83 c1 2a	 add	 ecx, 42			; 0000002aH
  00140	51		 push	 ecx
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00146	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0014b	85 c0		 test	 eax, eax
  0014d	74 01		 je	 SHORT $LN13@OnTCPNetwo
  0014f	cc		 int	 3
$LN13@OnTCPNetwo:

; 1254 : 			if(sizeof(CMD_CS_C_DeleteParameter)!=wDataSize) return false;

  00150	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00154	83 f8 06	 cmp	 eax, 6
  00157	74 04		 je	 SHORT $LN9@OnTCPNetwo
  00159	32 c0		 xor	 al, al
  0015b	eb 40		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 1255 : 
; 1256 : 			//提取数据
; 1257 : 			CMD_CS_C_DeleteParameter * pDeleteParameter = (CMD_CS_C_DeleteParameter *)pData;

  0015d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00160	89 85 44 ff ff
	ff		 mov	 DWORD PTR _pDeleteParameter$2[ebp], eax

; 1258 : 
; 1259 : 			//构造结构
; 1260 : 			CMD_CS_S_DeleteParameter DeleteParameter;
; 1261 : 			DeleteParameter.dwBatchID=pDeleteParameter->dwBatchID;

  00166	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pDeleteParameter$2[ebp]
  0016c	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  0016f	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _DeleteParameter$1[ebp], ecx

; 1262 : 
; 1263 : 			//发送通知
; 1264 : 			SendDataToGame(pDeleteParameter->wServerID,MDM_CS_ANDROID_SERVICE,SUB_CS_S_DELETEPARAMETER,&DeleteParameter,sizeof(DeleteParameter));

  00175	6a 04		 push	 4
  00177	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _DeleteParameter$1[ebp]
  0017d	50		 push	 eax
  0017e	68 ca 00 00 00	 push	 202			; 000000caH
  00183	6a 06		 push	 6
  00185	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _pDeleteParameter$2[ebp]
  0018b	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0018e	52		 push	 edx
  0018f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	e8 00 00 00 00	 call	 ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame

; 1265 : 
; 1266 : 			return true;

  00197	b0 01		 mov	 al, 1
  00199	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1267 : 		}
; 1268 : 	}
; 1269 : 
; 1270 : 	return false;

  0019b	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1271 : }

  0019d	5f		 pop	 edi
  0019e	5e		 pop	 esi
  0019f	5b		 pop	 ebx
  001a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a3	33 cd		 xor	 ecx, ebp
  001a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001aa	8b e5		 mov	 esp, ebp
  001ac	5d		 pop	 ebp
  001ad	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainAndroidService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainManagerService, COMDAT
; _this$ = ecx

; 1188 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1189 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b8 01	 cmp	 DWORD PTR tv65[ebp], 1
  00017	74 08		 je	 SHORT $LN4@OnTCPNetwo
  00019	83 7d b8 02	 cmp	 DWORD PTR tv65[ebp], 2
  0001d	74 2e		 je	 SHORT $LN5@OnTCPNetwo
  0001f	eb 5b		 jmp	 SHORT $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 1190 : 	{
; 1191 : 	case SUB_CS_C_SYSTEM_MESSAGE:	//系统消息
; 1192 : 		{
; 1193 : 			//发送通知
; 1194 : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_MANAGER_SERVICE,SUB_CS_S_SYSTEM_MESSAGE,pData,wDataSize,0L);

  00021	6a 00		 push	 0
  00023	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0002b	51		 push	 ecx
  0002c	6a 64		 push	 100			; 00000064H
  0002e	6a 05		 push	 5
  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00044	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00047	ff d0		 call	 eax

; 1195 : 			return true;

  00049	b0 01		 mov	 al, 1
  0004b	eb 31		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 1196 : 		}
; 1197 : 	case SUB_CS_C_PROPERTY_TRUMPET:  //喇叭消息
; 1198 : 		{
; 1199 : 			//发送通知
; 1200 : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_MANAGER_SERVICE,SUB_CS_S_PROPERTY_TRUMPET,pData,wDataSize,0L);

  0004d	6a 00		 push	 0
  0004f	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00053	50		 push	 eax
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00057	51		 push	 ecx
  00058	68 c8 00 00 00	 push	 200			; 000000c8H
  0005d	6a 05		 push	 5
  0005f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00062	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00073	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00076	ff d0		 call	 eax

; 1201 : 
; 1202 : 			return true;

  00078	b0 01		 mov	 al, 1
  0007a	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1203 : 		}
; 1204 : 	}
; 1205 : 
; 1206 : 	return false;

  0007c	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1207 : }

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainManagerService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -18404						; size = 4
tv314 = -18402						; size = 2
tv155 = -18402						; size = 2
_pGlobalServerItem$1 = -17888				; size = 4
_wServerIndex$2 = -17884				; size = 2
_pUserInfo$3 = -17880					; size = 4
_pGlobalUserItem$4 = -17876				; size = 4
_i$5 = -17872						; size = 4
_nSearchCount$6 = -17868				; size = 4
_cbPacketSize$7 = -17864				; size = 4
_cbPacketHeadSize$8 = -17860				; size = 4
_nCount$9 = -17856					; size = 4
_pAllSearchCorrespond$10 = -17852			; size = 4
_cbDataBuffer$11 = -17848				; size = 16376
_pSearchCorrespond$12 = -1472				; size = 4
_wItemSize$13 = -1468					; size = 2
_wHeadSize$14 = -1464					; size = 2
_pUserInfo$15 = -1460					; size = 4
_wIndex$16 = -1456					; size = 2
_pGlobalServerItem$17 = -1452				; size = 4
_wServerIndex$18 = -1448				; size = 2
_i$19 = -1441						; size = 1
_ResultUserItem$20 = -1440				; size = 8
_SearchCorrespond$21 = -1432				; size = 1418
_pSearchCorrespond$22 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainRemoteService, COMDAT
; _this$ = ecx

; 1027 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 e4 47 00 00	 mov	 eax, 18404		; 000047e4H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1028 : 	switch (wSubCmdID)

  0001d	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00021	89 85 1c b8 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00027	83 bd 1c b8 ff
	ff 02		 cmp	 DWORD PTR tv65[ebp], 2
  0002e	74 12		 je	 SHORT $LN13@OnTCPNetwo
  00030	83 bd 1c b8 ff
	ff 03		 cmp	 DWORD PTR tv65[ebp], 3
  00037	0f 84 21 04 00
	00		 je	 $LN20@OnTCPNetwo
  0003d	e9 e1 07 00 00	 jmp	 $LN2@OnTCPNetwo
$LN13@OnTCPNetwo:

; 1029 : 	{
; 1030 : 	case SUB_CS_C_SEARCH_CORRESPOND:	//协调查找
; 1031 : 		{
; 1032 : 			//效验参数
; 1033 : 			ASSERT(wDataSize==sizeof(CMD_CS_C_SearchCorrespond));

  00042	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00046	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  00049	74 19		 je	 SHORT $LN27@OnTCPNetwo
  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00051	83 c1 06	 add	 ecx, 6
  00054	51		 push	 ecx
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005f	85 c0		 test	 eax, eax
  00061	74 01		 je	 SHORT $LN27@OnTCPNetwo
  00063	cc		 int	 3
$LN27@OnTCPNetwo:

; 1034 : 			if (wDataSize!=sizeof(CMD_CS_C_SearchCorrespond)) return false;

  00064	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00068	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  0006b	74 07		 je	 SHORT $LN14@OnTCPNetwo
  0006d	32 c0		 xor	 al, al
  0006f	e9 b1 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 1035 : 
; 1036 : 			//处理消息
; 1037 : 			CMD_CS_C_SearchCorrespond * pSearchCorrespond=(CMD_CS_C_SearchCorrespond *)pData;

  00074	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00077	89 45 f4	 mov	 DWORD PTR _pSearchCorrespond$22[ebp], eax

; 1038 : 			pSearchCorrespond->szNickName[CountArray(pSearchCorrespond->szNickName)-1]=0;

  0007a	b8 01 00 00 00	 mov	 eax, 1
  0007f	6b c8 1f	 imul	 ecx, eax, 31
  00082	8b 55 f4	 mov	 edx, DWORD PTR _pSearchCorrespond$22[ebp]
  00085	c6 44 0a 0c 00	 mov	 BYTE PTR [edx+ecx+12], 0

; 1039 : 
; 1040 : 			//变量定义
; 1041 : 			CMD_CS_S_SearchCorrespond SearchCorrespond;
; 1042 : 			ZeroMemory(&SearchCorrespond,sizeof(SearchCorrespond));

  0008a	68 8a 05 00 00	 push	 1418			; 0000058aH
  0008f	6a 00		 push	 0
  00091	8d 85 68 fa ff
	ff		 lea	 eax, DWORD PTR _SearchCorrespond$21[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 _memset
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1043 : 
; 1044 : 			//结果用户
; 1045 : 			CGlobalUserItem * ResultUserItem[2];
; 1046 : 			ZeroMemory(ResultUserItem,sizeof(ResultUserItem));

  000a0	6a 08		 push	 8
  000a2	6a 00		 push	 0
  000a4	8d 85 60 fa ff
	ff		 lea	 eax, DWORD PTR _ResultUserItem$20[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 _memset
  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1047 : 
; 1048 : 			//设置变量
; 1049 : 			SearchCorrespond.dwSocketID=pSearchCorrespond->dwSocketID;

  000b3	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	89 8d 68 fa ff
	ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp], ecx

; 1050 : 			SearchCorrespond.dwClientAddr=pSearchCorrespond->dwClientAddr;

  000be	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000c1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c4	89 8d 6c fa ff
	ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp+4], ecx

; 1051 : 
; 1052 : 			//查找用户
; 1053 : 			if (pSearchCorrespond->dwGameID!=0L)

  000ca	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000cd	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000d1	74 21		 je	 SHORT $LN15@OnTCPNetwo

; 1054 : 			{
; 1055 : 				ResultUserItem[0]=m_GlobalInfoManager.SearchUserItemByGameID(pSearchCorrespond->dwGameID);

  000d3	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000d6	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d9	51		 push	 ecx
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	83 c1 24	 add	 ecx, 36			; 00000024H
  000e0	e8 00 00 00 00	 call	 ?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByGameID
  000e5	ba 04 00 00 00	 mov	 edx, 4
  000ea	6b ca 00	 imul	 ecx, edx, 0
  000ed	89 84 0d 60 fa
	ff ff		 mov	 DWORD PTR _ResultUserItem$20[ebp+ecx], eax
$LN15@OnTCPNetwo:

; 1056 : 			}
; 1057 : 
; 1058 : 			//查找用户
; 1059 : 			if (pSearchCorrespond->szNickName[0]!=0)

  000f4	b8 01 00 00 00	 mov	 eax, 1
  000f9	6b c8 00	 imul	 ecx, eax, 0
  000fc	8b 55 f4	 mov	 edx, DWORD PTR _pSearchCorrespond$22[ebp]
  000ff	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  00104	85 c0		 test	 eax, eax
  00106	74 30		 je	 SHORT $LN16@OnTCPNetwo

; 1060 : 			{
; 1061 : 				_tcslwr(pSearchCorrespond->szNickName);

  00108	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  0010b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 __tcslwr
  00114	83 c4 04	 add	 esp, 4

; 1062 : 				ResultUserItem[1]=m_GlobalInfoManager.SearchUserItemByNickName(pSearchCorrespond->szNickName);

  00117	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  0011a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0011d	50		 push	 eax
  0011e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	83 c1 24	 add	 ecx, 36			; 00000024H
  00124	e8 00 00 00 00	 call	 ?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z ; CGlobalInfoManager::SearchUserItemByNickName
  00129	b9 04 00 00 00	 mov	 ecx, 4
  0012e	c1 e1 00	 shl	 ecx, 0
  00131	89 84 0d 60 fa
	ff ff		 mov	 DWORD PTR _ResultUserItem$20[ebp+ecx], eax
$LN16@OnTCPNetwo:

; 1063 : 			}
; 1064 : 
; 1065 : 			//设置结果
; 1066 : 			for (BYTE i=0;i<CountArray(ResultUserItem);i++)

  00138	c6 85 5f fa ff
	ff 00		 mov	 BYTE PTR _i$19[ebp], 0
  0013f	eb 0e		 jmp	 SHORT $LN6@OnTCPNetwo
$LN4@OnTCPNetwo:
  00141	8a 85 5f fa ff
	ff		 mov	 al, BYTE PTR _i$19[ebp]
  00147	04 01		 add	 al, 1
  00149	88 85 5f fa ff
	ff		 mov	 BYTE PTR _i$19[ebp], al
$LN6@OnTCPNetwo:
  0014f	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00156	83 f8 02	 cmp	 eax, 2
  00159	0f 83 a2 02 00
	00		 jae	 $LN5@OnTCPNetwo

; 1067 : 			{
; 1068 : 				if (ResultUserItem[i]!=NULL)

  0015f	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00166	83 bc 85 60 fa
	ff ff 00	 cmp	 DWORD PTR _ResultUserItem$20[ebp+eax*4], 0
  0016e	0f 84 88 02 00
	00		 je	 $LN17@OnTCPNetwo

; 1069 : 				{
; 1070 : 					//变量定义
; 1071 : 					WORD wServerIndex=0;

  00174	33 c0		 xor	 eax, eax
  00176	66 89 85 58 fa
	ff ff		 mov	 WORD PTR _wServerIndex$18[ebp], ax
$LN9@OnTCPNetwo:

; 1072 : 
; 1073 : 					//查找房间
; 1074 : 					do
; 1075 : 					{
; 1076 : 						//查找房间
; 1077 : 						CGlobalServerItem * pGlobalServerItem=ResultUserItem[i]->EnumServerItem(wServerIndex++);

  0017d	66 8b 85 58 fa
	ff ff		 mov	 ax, WORD PTR _wServerIndex$18[ebp]
  00184	66 89 85 1e b8
	ff ff		 mov	 WORD PTR tv155[ebp], ax
  0018b	0f b7 8d 1e b8
	ff ff		 movzx	 ecx, WORD PTR tv155[ebp]
  00192	51		 push	 ecx
  00193	0f b6 95 5f fa
	ff ff		 movzx	 edx, BYTE PTR _i$19[ebp]
  0019a	8b 8c 95 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+edx*4]
  001a1	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalUserItem::EnumServerItem
  001a6	89 85 54 fa ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$17[ebp], eax
  001ac	66 8b 85 58 fa
	ff ff		 mov	 ax, WORD PTR _wServerIndex$18[ebp]
  001b3	66 83 c0 01	 add	 ax, 1
  001b7	66 89 85 58 fa
	ff ff		 mov	 WORD PTR _wServerIndex$18[ebp], ax

; 1078 : 
; 1079 : 						//终止判断
; 1080 : 						if (pGlobalServerItem==NULL) break;

  001be	83 bd 54 fa ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$17[ebp], 0
  001c5	75 05		 jne	 SHORT $LN18@OnTCPNetwo
  001c7	e9 30 02 00 00	 jmp	 $LN17@OnTCPNetwo
$LN18@OnTCPNetwo:

; 1081 : 						if (SearchCorrespond.wUserCount>=CountArray(SearchCorrespond.UserRemoteInfo)) break;

  001cc	0f b7 85 70 fa
	ff ff		 movzx	 eax, WORD PTR _SearchCorrespond$21[ebp+8]
  001d3	83 f8 10	 cmp	 eax, 16			; 00000010H
  001d6	72 05		 jb	 SHORT $LN19@OnTCPNetwo
  001d8	e9 1f 02 00 00	 jmp	 $LN17@OnTCPNetwo
$LN19@OnTCPNetwo:

; 1082 : 
; 1083 : 						//索引定义
; 1084 : 						WORD wIndex=SearchCorrespond.wUserCount++;

  001dd	66 8b 85 70 fa
	ff ff		 mov	 ax, WORD PTR _SearchCorrespond$21[ebp+8]
  001e4	66 89 85 50 fa
	ff ff		 mov	 WORD PTR _wIndex$16[ebp], ax
  001eb	66 8b 8d 70 fa
	ff ff		 mov	 cx, WORD PTR _SearchCorrespond$21[ebp+8]
  001f2	66 83 c1 01	 add	 cx, 1
  001f6	66 89 8d 70 fa
	ff ff		 mov	 WORD PTR _SearchCorrespond$21[ebp+8], cx

; 1085 : 
; 1086 : 						//辅助信息
; 1087 : 						SearchCorrespond.UserRemoteInfo[wIndex].cbGender=ResultUserItem[i]->GetGender();

  001fd	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00204	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0020b	e8 00 00 00 00	 call	 ?GetGender@CGlobalUserItem@@QAEEXZ ; CGlobalUserItem::GetGender
  00210	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  00217	6b d1 58	 imul	 edx, ecx, 88
  0021a	88 84 15 9c fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+edx+52], al

; 1088 : 						SearchCorrespond.UserRemoteInfo[wIndex].cbMemberOrder=ResultUserItem[i]->GetMemberOrder();

  00221	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00228	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0022f	e8 00 00 00 00	 call	 ?GetMemberOrder@CGlobalUserItem@@QAEEXZ ; CGlobalUserItem::GetMemberOrder
  00234	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0023b	6b d1 58	 imul	 edx, ecx, 88
  0023e	88 84 15 9d fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+edx+53], al

; 1089 : 						SearchCorrespond.UserRemoteInfo[wIndex].cbMasterOrder=ResultUserItem[i]->GetMasterOrder();

  00245	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  0024c	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  00253	e8 00 00 00 00	 call	 ?GetMasterOrder@CGlobalUserItem@@QAEEXZ ; CGlobalUserItem::GetMasterOrder
  00258	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0025f	6b d1 58	 imul	 edx, ecx, 88
  00262	88 84 15 9e fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+edx+54], al

; 1090 : 
; 1091 : 						//用户信息
; 1092 : 						SearchCorrespond.UserRemoteInfo[wIndex].dwUserID=ResultUserItem[i]->GetUserID();

  00269	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00270	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  00277	e8 00 00 00 00	 call	 ?GetUserID@CGlobalUserItem@@QAEKXZ ; CGlobalUserItem::GetUserID
  0027c	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  00283	6b d1 58	 imul	 edx, ecx, 88
  00286	89 84 15 72 fa
	ff ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp+edx+10], eax

; 1093 : 						SearchCorrespond.UserRemoteInfo[wIndex].dwGameID=ResultUserItem[i]->GetGameID();

  0028d	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00294	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0029b	e8 00 00 00 00	 call	 ?GetGameID@CGlobalUserItem@@QAEKXZ ; CGlobalUserItem::GetGameID
  002a0	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  002a7	6b d1 58	 imul	 edx, ecx, 88
  002aa	89 84 15 76 fa
	ff ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp+edx+14], eax

; 1094 : 						lstrcpyn(SearchCorrespond.UserRemoteInfo[wIndex].szNickName,ResultUserItem[i]->GetNickName(),LEN_NICKNAME);

  002b1	6a 20		 push	 32			; 00000020H
  002b3	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  002ba	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  002c1	e8 00 00 00 00	 call	 ?GetNickName@CGlobalUserItem@@QAEPBDXZ ; CGlobalUserItem::GetNickName
  002c6	50		 push	 eax
  002c7	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  002ce	6b d1 58	 imul	 edx, ecx, 88
  002d1	8d 84 15 7a fa
	ff ff		 lea	 eax, DWORD PTR _SearchCorrespond$21[ebp+edx+18]
  002d8	50		 push	 eax
  002d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1095 : 
; 1096 : 						//房间信息
; 1097 : 						SearchCorrespond.UserRemoteInfo[wIndex].wKindID=pGlobalServerItem->GetKindID();

  002df	8b 8d 54 fa ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$17[ebp]
  002e5	e8 00 00 00 00	 call	 ?GetKindID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetKindID
  002ea	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  002f1	6b d1 58	 imul	 edx, ecx, 88
  002f4	66 89 84 15 9f
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+edx+55], ax

; 1098 : 						SearchCorrespond.UserRemoteInfo[wIndex].wServerID=pGlobalServerItem->GetServerID();

  002fc	8b 8d 54 fa ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$17[ebp]
  00302	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  00307	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0030e	6b d1 58	 imul	 edx, ecx, 88
  00311	66 89 84 15 a1
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+edx+57], ax

; 1099 : 						lstrcpyn(SearchCorrespond.UserRemoteInfo[wIndex].szGameServer,pGlobalServerItem->m_GameServer.szServerName,LEN_SERVER);

  00319	6a 20		 push	 32			; 00000020H
  0031b	8b 85 54 fa ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$17[ebp]
  00321	83 c0 57	 add	 eax, 87			; 00000057H
  00324	50		 push	 eax
  00325	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0032c	6b d1 58	 imul	 edx, ecx, 88
  0032f	8d 84 15 a3 fa
	ff ff		 lea	 eax, DWORD PTR _SearchCorrespond$21[ebp+edx+59]
  00336	50		 push	 eax
  00337	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1100 : 
; 1101 : 						tagUserInfo* pUserInfo = ResultUserItem[i]->GetUserInfo();

  0033d	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00344	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0034b	e8 00 00 00 00	 call	 ?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ; CGlobalUserItem::GetUserInfo
  00350	89 85 4c fa ff
	ff		 mov	 DWORD PTR _pUserInfo$15[ebp], eax

; 1102 : 						SearchCorrespond.UserRemoteInfo[wIndex].wFaceID = pUserInfo->wFaceID;

  00356	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  0035d	6b c8 58	 imul	 ecx, eax, 88
  00360	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  00366	66 8b 82 88 00
	00 00		 mov	 ax, WORD PTR [edx+136]
  0036d	66 89 84 0d 9a
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+50], ax

; 1103 : 						SearchCorrespond.UserRemoteInfo[wIndex].wChairID = pUserInfo->wChairID;

  00375	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  0037c	6b c8 58	 imul	 ecx, eax, 88
  0037f	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  00385	66 8b 82 95 00
	00 00		 mov	 ax, WORD PTR [edx+149]
  0038c	66 89 84 0d c7
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+95], ax

; 1104 : 						SearchCorrespond.UserRemoteInfo[wIndex].cbUserStatus = pUserInfo->cbUserStatus;

  00394	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  0039b	6b c8 58	 imul	 ecx, eax, 88
  0039e	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  003a4	8a 82 97 00 00
	00		 mov	 al, BYTE PTR [edx+151]
  003aa	88 84 0d c9 fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+ecx+97], al

; 1105 : 						SearchCorrespond.UserRemoteInfo[wIndex].wTableID = pUserInfo->wTableID;

  003b1	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  003b8	6b c8 58	 imul	 ecx, eax, 88
  003bb	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  003c1	66 8b 82 91 00
	00 00		 mov	 ax, WORD PTR [edx+145]
  003c8	66 89 84 0d c3
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+91], ax

; 1106 : 						SearchCorrespond.UserRemoteInfo[wIndex].wLastTableID = pUserInfo->wLastTableID;

  003d0	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  003d7	6b c8 58	 imul	 ecx, eax, 88
  003da	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  003e0	66 8b 82 93 00
	00 00		 mov	 ax, WORD PTR [edx+147]
  003e7	66 89 84 0d c5
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+93], ax

; 1107 : 						
; 1108 : 
; 1109 : 					} while (true);

  003ef	b8 01 00 00 00	 mov	 eax, 1
  003f4	85 c0		 test	 eax, eax
  003f6	0f 85 81 fd ff
	ff		 jne	 $LN9@OnTCPNetwo
$LN17@OnTCPNetwo:

; 1110 : 				}
; 1111 : 			}

  003fc	e9 40 fd ff ff	 jmp	 $LN4@OnTCPNetwo
$LN5@OnTCPNetwo:

; 1112 : 
; 1113 : 			//发送数据
; 1114 : 			WORD wHeadSize=sizeof(SearchCorrespond)-sizeof(SearchCorrespond.UserRemoteInfo);

  00401	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00406	66 89 85 48 fa
	ff ff		 mov	 WORD PTR _wHeadSize$14[ebp], ax

; 1115 : 			WORD wItemSize=sizeof(SearchCorrespond.UserRemoteInfo[0])*SearchCorrespond.wUserCount;

  0040d	0f b7 85 70 fa
	ff ff		 movzx	 eax, WORD PTR _SearchCorrespond$21[ebp+8]
  00414	6b c8 58	 imul	 ecx, eax, 88
  00417	66 89 8d 44 fa
	ff ff		 mov	 WORD PTR _wItemSize$13[ebp], cx

; 1116 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REMOTE_SERVICE,SUB_CS_S_SEARCH_CORRESPOND,&SearchCorrespond,wHeadSize+wItemSize);

  0041e	0f b7 85 48 fa
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$14[ebp]
  00425	0f b7 8d 44 fa
	ff ff		 movzx	 ecx, WORD PTR _wItemSize$13[ebp]
  0042c	03 c1		 add	 eax, ecx
  0042e	50		 push	 eax
  0042f	8d 95 68 fa ff
	ff		 lea	 edx, DWORD PTR _SearchCorrespond$21[ebp]
  00435	52		 push	 edx
  00436	6a 65		 push	 101			; 00000065H
  00438	6a 04		 push	 4
  0043a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0043d	50		 push	 eax
  0043e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00441	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00447	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0044a	8b 12		 mov	 edx, DWORD PTR [edx]
  0044c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00452	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00455	ff d0		 call	 eax

; 1117 : 
; 1118 : 			return true;

  00457	b0 01		 mov	 al, 1
  00459	e9 c7 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN20@OnTCPNetwo:

; 1119 : 		}
; 1120 : 	case SUB_CS_C_SEARCH_ALLCORRESPOND:	//协调查找
; 1121 : 		{
; 1122 : 			CMD_CS_C_AllSearchCorrespond * pSearchCorrespond=(CMD_CS_C_AllSearchCorrespond *)pData;

  0045e	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00461	89 85 40 fa ff
	ff		 mov	 DWORD PTR _pSearchCorrespond$12[ebp], eax

; 1123 : 			if(pSearchCorrespond->dwCount > 512) return false;

  00467	8b 85 40 fa ff
	ff		 mov	 eax, DWORD PTR _pSearchCorrespond$12[ebp]
  0046d	81 78 08 00 02
	00 00		 cmp	 DWORD PTR [eax+8], 512	; 00000200H
  00474	76 07		 jbe	 SHORT $LN21@OnTCPNetwo
  00476	32 c0		 xor	 al, al
  00478	e9 a8 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN21@OnTCPNetwo:

; 1124 : 
; 1125 : 			BYTE cbDataBuffer[SOCKET_TCP_PACKET]={0};

  0047d	68 f8 3f 00 00	 push	 16376			; 00003ff8H
  00482	6a 00		 push	 0
  00484	8d 85 48 ba ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$11[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 _memset
  00490	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1126 : 			CMD_CS_S_SearchAllCorrespond* pAllSearchCorrespond = (CMD_CS_S_SearchAllCorrespond*)cbDataBuffer;

  00493	8d 85 48 ba ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$11[ebp]
  00499	89 85 44 ba ff
	ff		 mov	 DWORD PTR _pAllSearchCorrespond$10[ebp], eax

; 1127 : 			//设置变量
; 1128 : 			pAllSearchCorrespond->dwSocketID=pSearchCorrespond->dwSocketID;

  0049f	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  004a5	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _pSearchCorrespond$12[ebp]
  004ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  004ad	89 10		 mov	 DWORD PTR [eax], edx

; 1129 : 			pAllSearchCorrespond->dwClientAddr=pSearchCorrespond->dwClientAddr;

  004af	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  004b5	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _pSearchCorrespond$12[ebp]
  004bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  004be	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1130 : 
; 1131 : 			int nCount = 0;

  004c1	c7 85 40 ba ff
	ff 00 00 00 00	 mov	 DWORD PTR _nCount$9[ebp], 0

; 1132 : 			const int cbPacketHeadSize = sizeof(CMD_CS_S_SearchAllCorrespond) - sizeof(tagUserRemoteInfo);

  004cb	c7 85 3c ba ff
	ff 0c 00 00 00	 mov	 DWORD PTR _cbPacketHeadSize$8[ebp], 12 ; 0000000cH

; 1133 : 			int cbPacketSize = cbPacketHeadSize;

  004d5	c7 85 38 ba ff
	ff 0c 00 00 00	 mov	 DWORD PTR _cbPacketSize$7[ebp], 12 ; 0000000cH

; 1134 : 			//查找用户
; 1135 : 			int nSearchCount = (int)pSearchCorrespond->dwCount;

  004df	8b 85 40 fa ff
	ff		 mov	 eax, DWORD PTR _pSearchCorrespond$12[ebp]
  004e5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  004e8	89 8d 34 ba ff
	ff		 mov	 DWORD PTR _nSearchCount$6[ebp], ecx

; 1136 : 			for(int i = 0; i < nSearchCount; i++)

  004ee	c7 85 30 ba ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$5[ebp], 0
  004f8	eb 0f		 jmp	 SHORT $LN12@OnTCPNetwo
$LN10@OnTCPNetwo:
  004fa	8b 85 30 ba ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  00500	83 c0 01	 add	 eax, 1
  00503	89 85 30 ba ff
	ff		 mov	 DWORD PTR _i$5[ebp], eax
$LN12@OnTCPNetwo:
  00509	8b 85 30 ba ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  0050f	3b 85 34 ba ff
	ff		 cmp	 eax, DWORD PTR _nSearchCount$6[ebp]
  00515	0f 8d b2 02 00
	00		 jge	 $LN11@OnTCPNetwo

; 1137 : 			{
; 1138 : 				CGlobalUserItem* pGlobalUserItem =  m_GlobalInfoManager.SearchUserItemByGameID(pSearchCorrespond->dwGameID[i]);

  0051b	8b 85 30 ba ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  00521	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _pSearchCorrespond$12[ebp]
  00527	8b 54 81 0c	 mov	 edx, DWORD PTR [ecx+eax*4+12]
  0052b	52		 push	 edx
  0052c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052f	83 c1 24	 add	 ecx, 36			; 00000024H
  00532	e8 00 00 00 00	 call	 ?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByGameID
  00537	89 85 2c ba ff
	ff		 mov	 DWORD PTR _pGlobalUserItem$4[ebp], eax

; 1139 : 				if(pGlobalUserItem != NULL)

  0053d	83 bd 2c ba ff
	ff 00		 cmp	 DWORD PTR _pGlobalUserItem$4[ebp], 0
  00544	0f 84 1f 02 00
	00		 je	 $LN22@OnTCPNetwo

; 1140 : 				{
; 1141 : 					tagUserInfo* pUserInfo = pGlobalUserItem->GetUserInfo();

  0054a	8b 8d 2c ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalUserItem$4[ebp]
  00550	e8 00 00 00 00	 call	 ?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ; CGlobalUserItem::GetUserInfo
  00555	89 85 28 ba ff
	ff		 mov	 DWORD PTR _pUserInfo$3[ebp], eax

; 1142 : 					//查找房间
; 1143 : 					WORD wServerIndex=0;

  0055b	33 c0		 xor	 eax, eax
  0055d	66 89 85 24 ba
	ff ff		 mov	 WORD PTR _wServerIndex$2[ebp], ax

; 1144 : 					CGlobalServerItem * pGlobalServerItem = pGlobalUserItem->EnumServerItem(wServerIndex++);

  00564	66 8b 85 24 ba
	ff ff		 mov	 ax, WORD PTR _wServerIndex$2[ebp]
  0056b	66 89 85 1e b8
	ff ff		 mov	 WORD PTR tv314[ebp], ax
  00572	0f b7 8d 1e b8
	ff ff		 movzx	 ecx, WORD PTR tv314[ebp]
  00579	51		 push	 ecx
  0057a	8b 8d 2c ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalUserItem$4[ebp]
  00580	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalUserItem::EnumServerItem
  00585	89 85 20 ba ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$1[ebp], eax
  0058b	66 8b 95 24 ba
	ff ff		 mov	 dx, WORD PTR _wServerIndex$2[ebp]
  00592	66 83 c2 01	 add	 dx, 1
  00596	66 89 95 24 ba
	ff ff		 mov	 WORD PTR _wServerIndex$2[ebp], dx

; 1145 : 					
; 1146 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].dwUserID = pUserInfo->dwUserID;

  0059d	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005a4	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005aa	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  005b0	8b 12		 mov	 edx, DWORD PTR [edx]
  005b2	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1147 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].dwGameID = pUserInfo->dwGameID;

  005b6	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005bd	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005c3	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  005c9	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  005cc	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1148 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbMasterOrder = pUserInfo->cbMasterOrder;

  005d0	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005d7	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005dd	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  005e3	8a 92 90 00 00
	00		 mov	 dl, BYTE PTR [edx+144]
  005e9	88 54 01 38	 mov	 BYTE PTR [ecx+eax+56], dl

; 1149 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbMemberOrder = pUserInfo->cbMemberOrder;

  005ed	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005f4	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005fa	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00600	8a 92 8f 00 00
	00		 mov	 dl, BYTE PTR [edx+143]
  00606	88 54 01 37	 mov	 BYTE PTR [ecx+eax+55], dl

; 1150 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbGender = pUserInfo->cbGender;

  0060a	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  00611	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00617	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  0061d	8a 92 8e 00 00
	00		 mov	 dl, BYTE PTR [edx+142]
  00623	88 54 01 36	 mov	 BYTE PTR [ecx+eax+54], dl

; 1151 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbUserStatus = pUserInfo->cbUserStatus;

  00627	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  0062e	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00634	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  0063a	8a 92 97 00 00
	00		 mov	 dl, BYTE PTR [edx+151]
  00640	88 54 01 63	 mov	 BYTE PTR [ecx+eax+99], dl

; 1152 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wFaceID = pUserInfo->wFaceID;

  00644	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  0064b	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00651	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00657	66 8b 92 88 00
	00 00		 mov	 dx, WORD PTR [edx+136]
  0065e	66 89 54 01 34	 mov	 WORD PTR [ecx+eax+52], dx

; 1153 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wChairID = pUserInfo->wChairID;

  00663	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  0066a	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00670	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00676	66 8b 92 95 00
	00 00		 mov	 dx, WORD PTR [edx+149]
  0067d	66 89 54 01 61	 mov	 WORD PTR [ecx+eax+97], dx

; 1154 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wTableID = pUserInfo->wTableID;

  00682	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  00689	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  0068f	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00695	66 8b 92 91 00
	00 00		 mov	 dx, WORD PTR [edx+145]
  0069c	66 89 54 01 5d	 mov	 WORD PTR [ecx+eax+93], dx

; 1155 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wLastTableID = pUserInfo->wLastTableID;

  006a1	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  006a8	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  006ae	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  006b4	66 8b 92 93 00
	00 00		 mov	 dx, WORD PTR [edx+147]
  006bb	66 89 54 01 5f	 mov	 WORD PTR [ecx+eax+95], dx

; 1156 : 					lstrcpyn(pAllSearchCorrespond->UserRemoteInfo[nCount].szNickName,pUserInfo->szNickName, LEN_NICKNAME);

  006c0	6a 20		 push	 32			; 00000020H
  006c2	8b 85 28 ba ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$3[ebp]
  006c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  006cb	50		 push	 eax
  006cc	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  006d3	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  006d9	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  006dd	50		 push	 eax
  006de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1157 : 					if(pGlobalServerItem != NULL)

  006e4	83 bd 20 ba ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$1[ebp], 0
  006eb	74 5e		 je	 SHORT $LN23@OnTCPNetwo

; 1158 : 					{
; 1159 : 						pAllSearchCorrespond->UserRemoteInfo[nCount].wServerID = pGlobalServerItem->GetServerID();

  006ed	8b 8d 20 ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$1[ebp]
  006f3	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  006f8	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  006ff	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00705	66 89 44 0a 3b	 mov	 WORD PTR [edx+ecx+59], ax

; 1160 : 						pAllSearchCorrespond->UserRemoteInfo[nCount].wKindID = pGlobalServerItem->GetKindID();

  0070a	8b 8d 20 ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$1[ebp]
  00710	e8 00 00 00 00	 call	 ?GetKindID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetKindID
  00715	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  0071c	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00722	66 89 44 0a 39	 mov	 WORD PTR [edx+ecx+57], ax

; 1161 : 						lstrcpyn(pAllSearchCorrespond->UserRemoteInfo[nCount].szGameServer, pGlobalServerItem->m_GameServer.szServerName,LEN_SERVER);

  00727	6a 20		 push	 32			; 00000020H
  00729	8b 85 20 ba ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$1[ebp]
  0072f	83 c0 57	 add	 eax, 87			; 00000057H
  00732	50		 push	 eax
  00733	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  0073a	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00740	8d 44 0a 3d	 lea	 eax, DWORD PTR [edx+ecx+61]
  00744	50		 push	 eax
  00745	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN23@OnTCPNetwo:

; 1162 : 					}
; 1163 : 					nCount+=1;

  0074b	8b 85 40 ba ff
	ff		 mov	 eax, DWORD PTR _nCount$9[ebp]
  00751	83 c0 01	 add	 eax, 1
  00754	89 85 40 ba ff
	ff		 mov	 DWORD PTR _nCount$9[ebp], eax

; 1164 : 					cbPacketSize += sizeof(tagUserRemoteInfo);

  0075a	8b 85 38 ba ff
	ff		 mov	 eax, DWORD PTR _cbPacketSize$7[ebp]
  00760	83 c0 58	 add	 eax, 88			; 00000058H
  00763	89 85 38 ba ff
	ff		 mov	 DWORD PTR _cbPacketSize$7[ebp], eax
$LN22@OnTCPNetwo:

; 1165 : 				}
; 1166 : 				if( cbPacketSize > (SOCKET_TCP_PACKET-sizeof(CMD_CS_S_SearchAllCorrespond)) )

  00769	81 bd 38 ba ff
	ff 94 3f 00 00	 cmp	 DWORD PTR _cbPacketSize$7[ebp], 16276 ; 00003f94H
  00773	76 53		 jbe	 SHORT $LN24@OnTCPNetwo

; 1167 : 				{
; 1168 : 					pAllSearchCorrespond->dwCount = nCount;

  00775	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  0077b	8b 8d 40 ba ff
	ff		 mov	 ecx, DWORD PTR _nCount$9[ebp]
  00781	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1169 : 					m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REMOTE_SERVICE,SUB_CS_S_SEARCH_ALLCORRESPOND, pAllSearchCorrespond, cbPacketSize);

  00784	0f b7 85 38 ba
	ff ff		 movzx	 eax, WORD PTR _cbPacketSize$7[ebp]
  0078b	50		 push	 eax
  0078c	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00792	51		 push	 ecx
  00793	6a 66		 push	 102			; 00000066H
  00795	6a 04		 push	 4
  00797	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0079a	52		 push	 edx
  0079b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0079e	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  007a4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  007a7	8b 01		 mov	 eax, DWORD PTR [ecx]
  007a9	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  007af	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  007b2	ff d2		 call	 edx

; 1170 : 					cbPacketSize = cbPacketHeadSize;

  007b4	c7 85 38 ba ff
	ff 0c 00 00 00	 mov	 DWORD PTR _cbPacketSize$7[ebp], 12 ; 0000000cH

; 1171 : 					nCount = 0;

  007be	c7 85 40 ba ff
	ff 00 00 00 00	 mov	 DWORD PTR _nCount$9[ebp], 0
$LN24@OnTCPNetwo:

; 1172 : 				}
; 1173 : 			}

  007c8	e9 2d fd ff ff	 jmp	 $LN10@OnTCPNetwo
$LN11@OnTCPNetwo:

; 1174 : 			
; 1175 : 			pAllSearchCorrespond->dwCount = nCount;

  007cd	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  007d3	8b 8d 40 ba ff
	ff		 mov	 ecx, DWORD PTR _nCount$9[ebp]
  007d9	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1176 : 			if(nCount == 0) cbPacketSize = sizeof(CMD_CS_S_SearchAllCorrespond);

  007dc	83 bd 40 ba ff
	ff 00		 cmp	 DWORD PTR _nCount$9[ebp], 0
  007e3	75 0a		 jne	 SHORT $LN25@OnTCPNetwo
  007e5	c7 85 38 ba ff
	ff 64 00 00 00	 mov	 DWORD PTR _cbPacketSize$7[ebp], 100 ; 00000064H
$LN25@OnTCPNetwo:

; 1177 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REMOTE_SERVICE,SUB_CS_S_SEARCH_ALLCORRESPOND, pAllSearchCorrespond, cbPacketSize);

  007ef	0f b7 85 38 ba
	ff ff		 movzx	 eax, WORD PTR _cbPacketSize$7[ebp]
  007f6	50		 push	 eax
  007f7	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  007fd	51		 push	 ecx
  007fe	6a 66		 push	 102			; 00000066H
  00800	6a 04		 push	 4
  00802	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00805	52		 push	 edx
  00806	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00809	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0080f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00812	8b 01		 mov	 eax, DWORD PTR [ecx]
  00814	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  0081a	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0081d	ff d2		 call	 edx

; 1178 : 			
; 1179 : 			return true;

  0081f	b0 01		 mov	 al, 1
  00821	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1180 : 		}
; 1181 : 	}
; 1182 : 
; 1183 : 	return false;

  00823	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1184 : }

  00825	5f		 pop	 edi
  00826	5e		 pop	 esi
  00827	5b		 pop	 ebx
  00828	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0082b	33 cd		 xor	 ecx, ebp
  0082d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00832	8b e5		 mov	 esp, ebp
  00834	5d		 pop	 ebp
  00835	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainRemoteService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -692						; size = 4
_pGlobalChatItem$1 = -560				; size = 4
_posChat$2 = -556					; size = 4
_UserGameStatus$3 = -552				; size = 45
_pGlobalServerItem$4 = -504				; size = 4
_pBindParameter$5 = -500				; size = 4
_wBindIndex$6 = -496					; size = 2
_pGlobalUserItem$7 = -492				; size = 4
_pUserStatus$8 = -488					; size = 4
_dwSocketID$9 = -484					; size = 4
_nWaitCount$10 = -480					; size = 4
_pBindParameter$11 = -476				; size = 4
_wBindIndex$12 = -472					; size = 2
_pGlobalChatItem$13 = -468				; size = 4
_posChat$14 = -464					; size = 4
_UserGameStatus$15 = -460				; size = 45
_pGlobalServerItem$16 = -412				; size = 4
_pBindParameter$17 = -408				; size = 4
_wBindIndex$18 = -404					; size = 2
_pUserLeave$19 = -400					; size = 4
_pGlobalChatItem$20 = -396				; size = 4
_posChat$21 = -392					; size = 4
_UserGameStatus$22 = -388				; size = 45
_pGlobalServerItem$23 = -340				; size = 4
_GlobalUserInfo$24 = -336				; size = 316
_pBindParameter$25 = -20				; size = 4
_wBindIndex$26 = -16					; size = 2
_pUserEnter$27 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainUserCollect, COMDAT
; _this$ = ecx

; 815  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 02 00
	00		 sub	 esp, 692		; 000002b4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 816  : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 4c fd ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	8b 8d 4c fd ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	89 8d 4c fd ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00032	83 bd 4c fd ff
	ff 03		 cmp	 DWORD PTR tv65[ebp], 3
  00039	0f 87 a7 06 00
	00		 ja	 $LN2@OnTCPNetwo
  0003f	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00045	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN37@OnTCPNetwo[edx*4]
$LN13@OnTCPNetwo:

; 817  : 	{
; 818  : 	case SUB_CS_C_USER_ENTER:		//用户进入
; 819  : 		{
; 820  : 			//效验数据
; 821  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_UserEnter));

  0004c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00050	3d 3b 01 00 00	 cmp	 eax, 315		; 0000013bH
  00055	74 19		 je	 SHORT $LN30@OnTCPNetwo
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0005d	83 c1 06	 add	 ecx, 6
  00060	51		 push	 ecx
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00066	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006b	85 c0		 test	 eax, eax
  0006d	74 01		 je	 SHORT $LN30@OnTCPNetwo
  0006f	cc		 int	 3
$LN30@OnTCPNetwo:

; 822  : 			if (wDataSize!=sizeof(CMD_CS_C_UserEnter)) return false;

  00070	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00074	3d 3b 01 00 00	 cmp	 eax, 315		; 0000013bH
  00079	74 07		 je	 SHORT $LN14@OnTCPNetwo
  0007b	32 c0		 xor	 al, al
  0007d	e9 66 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 823  : 
; 824  : 			//消息处理
; 825  : 			CMD_CS_C_UserEnter * pUserEnter=(CMD_CS_C_UserEnter *)pData;

  00082	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00085	89 45 f4	 mov	 DWORD PTR _pUserEnter$27[ebp], eax

; 826  : 			pUserEnter->szNickName[CountArray(pUserEnter->szNickName)-1]=0;

  00088	b8 01 00 00 00	 mov	 eax, 1
  0008d	6b c8 1f	 imul	 ecx, eax, 31
  00090	8b 55 f4	 mov	 edx, DWORD PTR _pUserEnter$27[ebp]
  00093	c6 44 0a 08 00	 mov	 BYTE PTR [edx+ecx+8], 0

; 827  : 
; 828  : 			//获取参数
; 829  : 			WORD wBindIndex=LOWORD(dwSocketID);

  00098	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0009b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000a0	66 89 45 f0	 mov	 WORD PTR _wBindIndex$26[ebp], ax

; 830  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  000a4	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$26[ebp]
  000a8	6b c8 14	 imul	 ecx, eax, 20
  000ab	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ae	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  000b1	89 4d ec	 mov	 DWORD PTR _pBindParameter$25[ebp], ecx

; 831  : 
; 832  : 			//连接效验
; 833  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  000b4	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  000b7	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000bb	74 19		 je	 SHORT $LN31@OnTCPNetwo
  000bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000c3	83 c1 12	 add	 ecx, 18			; 00000012H
  000c6	51		 push	 ecx
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000cc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d1	85 c0		 test	 eax, eax
  000d3	74 01		 je	 SHORT $LN31@OnTCPNetwo
  000d5	cc		 int	 3
$LN31@OnTCPNetwo:

; 834  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  000d6	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  000d9	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000dd	74 07		 je	 SHORT $LN15@OnTCPNetwo
  000df	32 c0		 xor	 al, al
  000e1	e9 02 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 835  : 
; 836  : 			//变量定义
; 837  : 			tagGlobalUserInfo GlobalUserInfo;
; 838  : 			ZeroMemory(&GlobalUserInfo,sizeof(GlobalUserInfo));

  000e6	68 3c 01 00 00	 push	 316			; 0000013cH
  000eb	6a 00		 push	 0
  000ed	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _GlobalUserInfo$24[ebp]
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 _memset
  000f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 839  : 
; 840  : 			//设置变量
; 841  : 			GlobalUserInfo.dwUserID=pUserEnter->dwUserID;

  000fc	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  000ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00101	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _GlobalUserInfo$24[ebp], ecx

; 842  : 			GlobalUserInfo.dwGameID=pUserEnter->dwGameID;

  00107	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  0010a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010d	89 8d b4 fe ff
	ff		 mov	 DWORD PTR _GlobalUserInfo$24[ebp+4], ecx

; 843  : 			lstrcpyn(GlobalUserInfo.szNickName,pUserEnter->szNickName,CountArray(GlobalUserInfo.szNickName));

  00113	6a 20		 push	 32			; 00000020H
  00115	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00118	83 c0 08	 add	 eax, 8
  0011b	50		 push	 eax
  0011c	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _GlobalUserInfo$24[ebp+8]
  00122	51		 push	 ecx
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 844  : 
; 845  : 			//辅助信息
; 846  : 			GlobalUserInfo.cbGender=pUserEnter->cbGender;

  00129	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  0012c	8a 48 28	 mov	 cl, BYTE PTR [eax+40]
  0012f	88 8d d8 fe ff
	ff		 mov	 BYTE PTR _GlobalUserInfo$24[ebp+40], cl

; 847  : 			GlobalUserInfo.cbMemberOrder=pUserEnter->cbMemberOrder;

  00135	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00138	8a 48 29	 mov	 cl, BYTE PTR [eax+41]
  0013b	88 8d d9 fe ff
	ff		 mov	 BYTE PTR _GlobalUserInfo$24[ebp+41], cl

; 848  : 			GlobalUserInfo.cbMasterOrder=pUserEnter->cbMasterOrder;

  00141	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00144	8a 48 2a	 mov	 cl, BYTE PTR [eax+42]
  00147	88 8d da fe ff
	ff		 mov	 BYTE PTR _GlobalUserInfo$24[ebp+42], cl

; 849  : 			
; 850  : 			//拷贝详细信息
; 851  : 			memcpy(&GlobalUserInfo.userInfo, &pUserEnter->userInfo, sizeof(tagUserInfo));

  0014d	68 10 01 00 00	 push	 272			; 00000110H
  00152	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00155	83 c0 2b	 add	 eax, 43			; 0000002bH
  00158	50		 push	 eax
  00159	8d 8d db fe ff
	ff		 lea	 ecx, DWORD PTR _GlobalUserInfo$24[ebp+43]
  0015f	51		 push	 ecx
  00160	e8 00 00 00 00	 call	 _memcpy
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH

; 852  : 
; 853  : 			//激活用户
; 854  : 			m_GlobalInfoManager.ActiveUserItem(GlobalUserInfo,pBindParameter->wServiceID);

  00168	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  0016b	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  0016f	51		 push	 ecx
  00170	8d 95 b0 fe ff
	ff		 lea	 edx, DWORD PTR _GlobalUserInfo$24[ebp]
  00176	52		 push	 edx
  00177	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	83 c1 24	 add	 ecx, 36			; 00000024H
  0017d	e8 00 00 00 00	 call	 ?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z ; CGlobalInfoManager::ActiveUserItem

; 855  : 
; 856  : 
; 857  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  00182	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  00185	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00189	51		 push	 ecx
  0018a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018d	83 c1 24	 add	 ecx, 36			; 00000024H
  00190	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  00195	89 85 ac fe ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$23[ebp], eax

; 858  : 
; 859  : 			//同步状态
; 860  : 			CMD_CS_S_UserGameStatus UserGameStatus;
; 861  : 			UserGameStatus.dwUserID=pUserEnter->dwUserID;

  0019b	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  0019e	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a0	89 8d 7c fe ff
	ff		 mov	 DWORD PTR _UserGameStatus$22[ebp], ecx

; 862  : 			UserGameStatus.cbGameStatus=pUserEnter->userInfo.cbUserStatus;

  001a6	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  001a9	8a 88 c2 00 00
	00		 mov	 cl, BYTE PTR [eax+194]
  001af	88 8d 80 fe ff
	ff		 mov	 BYTE PTR _UserGameStatus$22[ebp+4], cl

; 863  : 			UserGameStatus.wKindID   = pBindParameter->ServiceKind;

  001b5	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  001b8	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  001bc	66 89 8d 81 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+5], cx

; 864  : 			UserGameStatus.wServerID = pBindParameter->wServiceID;

  001c3	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  001c6	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  001ca	66 89 8d 83 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+7], cx

; 865  : 			UserGameStatus.wTableID  = INVALID_TABLE;

  001d1	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  001d6	66 89 85 85 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+9], ax

; 866  : 			UserGameStatus.wChairID  = INVALID_CHAIR;

  001dd	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  001e2	66 89 85 87 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+11], ax

; 867  : 			lstrcpyn(UserGameStatus.szServerName,pGlobalServerItem->m_GameServer.szServerName,CountArray(UserGameStatus.szServerName));

  001e9	6a 20		 push	 32			; 00000020H
  001eb	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$23[ebp]
  001f1	83 c0 57	 add	 eax, 87			; 00000057H
  001f4	50		 push	 eax
  001f5	8d 8d 89 fe ff
	ff		 lea	 ecx, DWORD PTR _UserGameStatus$22[ebp+13]
  001fb	51		 push	 ecx
  001fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 868  : 			
; 869  : 
; 870  : 			//变量定义
; 871  : 			POSITION posChat=NULL;

  00202	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _posChat$21[ebp], 0
$LN6@OnTCPNetwo:

; 872  : 
; 873  : 			//查找房间
; 874  : 			do
; 875  : 			{
; 876  : 				//查找房间
; 877  : 				CGlobalChatItem * pGlobalChatItem=m_GlobalInfoManager.EnumChatItem(posChat);

  0020c	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _posChat$21[ebp]
  00212	50		 push	 eax
  00213	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00216	83 c1 24	 add	 ecx, 36			; 00000024H
  00219	e8 00 00 00 00	 call	 ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
  0021e	89 85 74 fe ff
	ff		 mov	 DWORD PTR _pGlobalChatItem$20[ebp], eax

; 878  : 
; 879  : 				//终止判断
; 880  : 				if (pGlobalChatItem==NULL) break;

  00224	83 bd 74 fe ff
	ff 00		 cmp	 DWORD PTR _pGlobalChatItem$20[ebp], 0
  0022b	75 02		 jne	 SHORT $LN16@OnTCPNetwo
  0022d	eb 39		 jmp	 SHORT $LN5@OnTCPNetwo
$LN16@OnTCPNetwo:

; 881  : 
; 882  : 				//发送状态
; 883  : 				m_pITCPNetworkEngine->SendData(pGlobalChatItem->m_ChatServer.dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_USER_GAMESTATE,&UserGameStatus,sizeof(UserGameStatus));

  0022f	6a 2d		 push	 45			; 0000002dH
  00231	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _UserGameStatus$22[ebp]
  00237	50		 push	 eax
  00238	6a 65		 push	 101			; 00000065H
  0023a	6a 03		 push	 3
  0023c	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR _pGlobalChatItem$20[ebp]
  00242	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00245	52		 push	 edx
  00246	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00249	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0024f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00252	8b 01		 mov	 eax, DWORD PTR [ecx]
  00254	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  0025a	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0025d	ff d2		 call	 edx

; 884  : 
; 885  : 			}while(posChat != NULL);

  0025f	83 bd 78 fe ff
	ff 00		 cmp	 DWORD PTR _posChat$21[ebp], 0
  00266	75 a4		 jne	 SHORT $LN6@OnTCPNetwo
$LN5@OnTCPNetwo:

; 886  : 
; 887  : 			return true;

  00268	b0 01		 mov	 al, 1
  0026a	e9 79 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 888  : 		}
; 889  : 	case SUB_CS_C_USER_LEAVE:		//用户离开
; 890  : 		{
; 891  : 			//效验数据
; 892  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_UserLeave));

  0026f	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00273	83 f8 04	 cmp	 eax, 4
  00276	74 19		 je	 SHORT $LN32@OnTCPNetwo
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0027e	83 c1 4d	 add	 ecx, 77			; 0000004dH
  00281	51		 push	 ecx
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00287	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0028c	85 c0		 test	 eax, eax
  0028e	74 01		 je	 SHORT $LN32@OnTCPNetwo
  00290	cc		 int	 3
$LN32@OnTCPNetwo:

; 893  : 			if (wDataSize!=sizeof(CMD_CS_C_UserLeave)) return false;

  00291	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00295	83 f8 04	 cmp	 eax, 4
  00298	74 07		 je	 SHORT $LN18@OnTCPNetwo
  0029a	32 c0		 xor	 al, al
  0029c	e9 47 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 894  : 
; 895  : 			//消息处理
; 896  : 			CMD_CS_C_UserLeave * pUserLeave=(CMD_CS_C_UserLeave *)pData;

  002a1	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  002a4	89 85 70 fe ff
	ff		 mov	 DWORD PTR _pUserLeave$19[ebp], eax

; 897  : 
; 898  : 			//获取参数
; 899  : 			WORD wBindIndex=LOWORD(dwSocketID);

  002aa	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002ad	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  002b2	66 89 85 6c fe
	ff ff		 mov	 WORD PTR _wBindIndex$18[ebp], ax

; 900  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  002b9	0f b7 85 6c fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$18[ebp]
  002c0	6b c8 14	 imul	 ecx, eax, 20
  002c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002c6	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  002c9	89 8d 68 fe ff
	ff		 mov	 DWORD PTR _pBindParameter$17[ebp], ecx

; 901  : 
; 902  : 			//连接效验
; 903  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  002cf	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  002d5	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  002d9	74 19		 je	 SHORT $LN33@OnTCPNetwo
  002db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  002e1	83 c1 58	 add	 ecx, 88			; 00000058H
  002e4	51		 push	 ecx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  002ea	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002ef	85 c0		 test	 eax, eax
  002f1	74 01		 je	 SHORT $LN33@OnTCPNetwo
  002f3	cc		 int	 3
$LN33@OnTCPNetwo:

; 904  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  002f4	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  002fa	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  002fe	74 07		 je	 SHORT $LN19@OnTCPNetwo
  00300	32 c0		 xor	 al, al
  00302	e9 e1 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN19@OnTCPNetwo:

; 905  : 
; 906  : 			//删除用户
; 907  : 			m_GlobalInfoManager.DeleteUserItem(pUserLeave->dwUserID,pBindParameter->wServiceID);

  00307	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0030d	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00311	51		 push	 ecx
  00312	8b 95 70 fe ff
	ff		 mov	 edx, DWORD PTR _pUserLeave$19[ebp]
  00318	8b 02		 mov	 eax, DWORD PTR [edx]
  0031a	50		 push	 eax
  0031b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0031e	83 c1 24	 add	 ecx, 36			; 00000024H
  00321	e8 00 00 00 00	 call	 ?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z ; CGlobalInfoManager::DeleteUserItem

; 908  : 
; 909  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  00326	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0032c	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00330	51		 push	 ecx
  00331	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	83 c1 24	 add	 ecx, 36			; 00000024H
  00337	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0033c	89 85 64 fe ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$16[ebp], eax

; 910  : 
; 911  : 			//同步状态
; 912  : 			CMD_CS_S_UserGameStatus UserGameStatus;
; 913  : 			UserGameStatus.dwUserID=pUserLeave->dwUserID;

  00342	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _pUserLeave$19[ebp]
  00348	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034a	89 8d 34 fe ff
	ff		 mov	 DWORD PTR _UserGameStatus$15[ebp], ecx

; 914  : 			UserGameStatus.cbGameStatus=US_NULL;

  00350	c6 85 38 fe ff
	ff 00		 mov	 BYTE PTR _UserGameStatus$15[ebp+4], 0

; 915  : 			UserGameStatus.wKindID   = pBindParameter->ServiceKind;

  00357	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0035d	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  00361	66 89 8d 39 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+5], cx

; 916  : 			UserGameStatus.wServerID = pBindParameter->wServiceID;

  00368	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0036e	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  00372	66 89 8d 3b fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+7], cx

; 917  : 			UserGameStatus.wTableID  = INVALID_TABLE;

  00379	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0037e	66 89 85 3d fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+9], ax

; 918  : 			UserGameStatus.wChairID  = INVALID_CHAIR;

  00385	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0038a	66 89 85 3f fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+11], ax

; 919  : 
; 920  : 			lstrcpyn(UserGameStatus.szServerName,pGlobalServerItem->m_GameServer.szServerName,CountArray(UserGameStatus.szServerName));

  00391	6a 20		 push	 32			; 00000020H
  00393	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$16[ebp]
  00399	83 c0 57	 add	 eax, 87			; 00000057H
  0039c	50		 push	 eax
  0039d	8d 8d 41 fe ff
	ff		 lea	 ecx, DWORD PTR _UserGameStatus$15[ebp+13]
  003a3	51		 push	 ecx
  003a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 921  : 
; 922  : 			POSITION posChat=NULL;

  003aa	c7 85 30 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _posChat$14[ebp], 0
$LN9@OnTCPNetwo:

; 923  : 
; 924  : 			//查找房间
; 925  : 			do
; 926  : 			{
; 927  : 				//查找房间
; 928  : 				CGlobalChatItem * pGlobalChatItem=m_GlobalInfoManager.EnumChatItem(posChat);

  003b4	8d 85 30 fe ff
	ff		 lea	 eax, DWORD PTR _posChat$14[ebp]
  003ba	50		 push	 eax
  003bb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003be	83 c1 24	 add	 ecx, 36			; 00000024H
  003c1	e8 00 00 00 00	 call	 ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
  003c6	89 85 2c fe ff
	ff		 mov	 DWORD PTR _pGlobalChatItem$13[ebp], eax

; 929  : 
; 930  : 				//终止判断
; 931  : 				if (pGlobalChatItem==NULL) break;

  003cc	83 bd 2c fe ff
	ff 00		 cmp	 DWORD PTR _pGlobalChatItem$13[ebp], 0
  003d3	75 02		 jne	 SHORT $LN20@OnTCPNetwo
  003d5	eb 39		 jmp	 SHORT $LN8@OnTCPNetwo
$LN20@OnTCPNetwo:

; 932  : 
; 933  : 				//发送状态
; 934  : 				m_pITCPNetworkEngine->SendData(pGlobalChatItem->m_ChatServer.dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_USER_GAMESTATE,&UserGameStatus,sizeof(UserGameStatus));

  003d7	6a 2d		 push	 45			; 0000002dH
  003d9	8d 85 34 fe ff
	ff		 lea	 eax, DWORD PTR _UserGameStatus$15[ebp]
  003df	50		 push	 eax
  003e0	6a 65		 push	 101			; 00000065H
  003e2	6a 03		 push	 3
  003e4	8b 8d 2c fe ff
	ff		 mov	 ecx, DWORD PTR _pGlobalChatItem$13[ebp]
  003ea	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003ed	52		 push	 edx
  003ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003f1	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  003f7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003fa	8b 01		 mov	 eax, DWORD PTR [ecx]
  003fc	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00402	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00405	ff d2		 call	 edx

; 935  : 
; 936  : 			}while(posChat != NULL);

  00407	83 bd 30 fe ff
	ff 00		 cmp	 DWORD PTR _posChat$14[ebp], 0
  0040e	75 a4		 jne	 SHORT $LN9@OnTCPNetwo
$LN8@OnTCPNetwo:

; 937  : 
; 938  : 			return true;

  00410	b0 01		 mov	 al, 1
  00412	e9 d1 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN21@OnTCPNetwo:

; 939  : 		}
; 940  : 	case SUB_CS_C_USER_FINISH:		//用户完成
; 941  : 		{
; 942  : 			//获取参数
; 943  : 			WORD wBindIndex=LOWORD(dwSocketID);

  00417	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0041a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0041f	66 89 85 28 fe
	ff ff		 mov	 WORD PTR _wBindIndex$12[ebp], ax

; 944  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00426	0f b7 85 28 fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$12[ebp]
  0042d	6b c8 14	 imul	 ecx, eax, 20
  00430	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00433	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00436	89 8d 24 fe ff
	ff		 mov	 DWORD PTR _pBindParameter$11[ebp], ecx

; 945  : 
; 946  : 			//连接效验
; 947  : 			ASSERT((m_wCollectItem==wBindIndex)&&(pBindParameter->ServiceKind==ServiceKind_Game));

  0043c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0043f	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00443	0f b7 95 28 fe
	ff ff		 movzx	 edx, WORD PTR _wBindIndex$12[ebp]
  0044a	3b ca		 cmp	 ecx, edx
  0044c	75 0c		 jne	 SHORT $LN34@OnTCPNetwo
  0044e	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$11[ebp]
  00454	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  00458	74 1c		 je	 SHORT $LN35@OnTCPNetwo
$LN34@OnTCPNetwo:
  0045a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00460	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00466	51		 push	 ecx
  00467	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0046c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00471	85 c0		 test	 eax, eax
  00473	74 01		 je	 SHORT $LN35@OnTCPNetwo
  00475	cc		 int	 3
$LN35@OnTCPNetwo:

; 948  : 			if ((m_wCollectItem!=wBindIndex)||(pBindParameter->ServiceKind!=ServiceKind_Game)) return false;

  00476	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00479	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0047d	0f b7 95 28 fe
	ff ff		 movzx	 edx, WORD PTR _wBindIndex$12[ebp]
  00484	3b ca		 cmp	 ecx, edx
  00486	75 0c		 jne	 SHORT $LN23@OnTCPNetwo
  00488	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$11[ebp]
  0048e	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  00492	74 07		 je	 SHORT $LN22@OnTCPNetwo
$LN23@OnTCPNetwo:
  00494	32 c0		 xor	 al, al
  00496	e9 4d 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN22@OnTCPNetwo:

; 949  : 
; 950  : 			//设置变量
; 951  : 			m_wCollectItem=INVALID_WORD;

  0049b	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  004a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a3	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 952  : 
; 953  : 			//汇总切换
; 954  : 			if (m_WaitCollectItemArray.GetCount()>0)

  004a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004aa	83 c1 08	 add	 ecx, 8
  004ad	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  004b2	85 c0		 test	 eax, eax
  004b4	0f 8e 84 00 00
	00		 jle	 $LN24@OnTCPNetwo

; 955  : 			{
; 956  : 				//切换汇总
; 957  : 				INT_PTR nWaitCount=m_WaitCollectItemArray.GetCount();

  004ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004bd	83 c1 08	 add	 ecx, 8
  004c0	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  004c5	89 85 20 fe ff
	ff		 mov	 DWORD PTR _nWaitCount$10[ebp], eax

; 958  : 				m_wCollectItem=m_WaitCollectItemArray[nWaitCount-1];

  004cb	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _nWaitCount$10[ebp]
  004d1	83 e8 01	 sub	 eax, 1
  004d4	50		 push	 eax
  004d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004d8	83 c1 08	 add	 ecx, 8
  004db	e8 00 00 00 00	 call	 ??A?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::operator[]
  004e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e3	66 8b 10	 mov	 dx, WORD PTR [eax]
  004e6	66 89 51 04	 mov	 WORD PTR [ecx+4], dx

; 959  : 
; 960  : 				//删除数组
; 961  : 				m_WaitCollectItemArray.RemoveAt(nWaitCount-1);

  004ea	6a 01		 push	 1
  004ec	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _nWaitCount$10[ebp]
  004f2	83 e8 01	 sub	 eax, 1
  004f5	50		 push	 eax
  004f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f9	83 c1 08	 add	 ecx, 8
  004fc	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ; CWHArray<unsigned short,unsigned short const &>::RemoveAt

; 962  : 
; 963  : 				//发送消息
; 964  : 				DWORD dwSocketID=(m_pBindParameter+m_wCollectItem)->dwSocketID;

  00501	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00504	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00508	6b d1 14	 imul	 edx, ecx, 20
  0050b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0050e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00511	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00514	89 95 1c fe ff
	ff		 mov	 DWORD PTR _dwSocketID$9[ebp], edx

; 965  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_COLLECT_REQUEST);

  0051a	6a 64		 push	 100			; 00000064H
  0051c	6a 03		 push	 3
  0051e	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR _dwSocketID$9[ebp]
  00524	50		 push	 eax
  00525	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00528	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0052e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00531	8b 12		 mov	 edx, DWORD PTR [edx]
  00533	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00539	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0053c	ff d0		 call	 eax
$LN24@OnTCPNetwo:

; 966  : 			}
; 967  : 
; 968  : 			return true;

  0053e	b0 01		 mov	 al, 1
  00540	e9 a3 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN25@OnTCPNetwo:

; 969  : 		}
; 970  : 	case SUB_CS_C_USER_STATUS:		//用户状态
; 971  : 		{
; 972  : 			//效验数据
; 973  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_UserStatus));

  00545	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00549	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  0054c	74 1c		 je	 SHORT $LN36@OnTCPNetwo
  0054e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00554	81 c1 9e 00 00
	00		 add	 ecx, 158		; 0000009eH
  0055a	51		 push	 ecx
  0055b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00560	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00565	85 c0		 test	 eax, eax
  00567	74 01		 je	 SHORT $LN36@OnTCPNetwo
  00569	cc		 int	 3
$LN36@OnTCPNetwo:

; 974  : 			if (wDataSize!=sizeof(CMD_CS_C_UserStatus)) return false;

  0056a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0056e	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00571	74 07		 je	 SHORT $LN26@OnTCPNetwo
  00573	32 c0		 xor	 al, al
  00575	e9 6e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN26@OnTCPNetwo:

; 975  : 
; 976  : 			//消息处理
; 977  : 			CMD_CS_C_UserStatus * pUserStatus=(CMD_CS_C_UserStatus *)pData;

  0057a	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0057d	89 85 18 fe ff
	ff		 mov	 DWORD PTR _pUserStatus$8[ebp], eax

; 978  : 
; 979  : 			CGlobalUserItem* pGlobalUserItem = m_GlobalInfoManager.SearchUserItemByUserID(pUserStatus->dwUserID);

  00583	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00589	8b 08		 mov	 ecx, DWORD PTR [eax]
  0058b	51		 push	 ecx
  0058c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	83 c1 24	 add	 ecx, 36			; 00000024H
  00592	e8 00 00 00 00	 call	 ?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByUserID
  00597	89 85 14 fe ff
	ff		 mov	 DWORD PTR _pGlobalUserItem$7[ebp], eax

; 980  : 			if(pGlobalUserItem != NULL)

  0059d	83 bd 14 fe ff
	ff 00		 cmp	 DWORD PTR _pGlobalUserItem$7[ebp], 0
  005a4	74 2c		 je	 SHORT $LN27@OnTCPNetwo

; 981  : 			{
; 982  : 				pGlobalUserItem->UpdateStatus(pUserStatus->wTableID, pUserStatus->wChairID, pUserStatus->cbUserStatus);

  005a6	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  005ac	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  005b0	51		 push	 ecx
  005b1	8b 95 18 fe ff
	ff		 mov	 edx, DWORD PTR _pUserStatus$8[ebp]
  005b7	0f b7 42 0b	 movzx	 eax, WORD PTR [edx+11]
  005bb	50		 push	 eax
  005bc	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR _pUserStatus$8[ebp]
  005c2	0f b7 51 09	 movzx	 edx, WORD PTR [ecx+9]
  005c6	52		 push	 edx
  005c7	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR _pGlobalUserItem$7[ebp]
  005cd	e8 00 00 00 00	 call	 ?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z ; CGlobalUserItem::UpdateStatus
$LN27@OnTCPNetwo:

; 983  : 
; 984  : 			}
; 985  : 
; 986  : 			//获取参数
; 987  : 			WORD wBindIndex=LOWORD(dwSocketID);

  005d2	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  005d5	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  005da	66 89 85 10 fe
	ff ff		 mov	 WORD PTR _wBindIndex$6[ebp], ax

; 988  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  005e1	0f b7 85 10 fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$6[ebp]
  005e8	6b c8 14	 imul	 ecx, eax, 20
  005eb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005ee	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  005f1	89 8d 0c fe ff
	ff		 mov	 DWORD PTR _pBindParameter$5[ebp], ecx

; 989  : 
; 990  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  005f7	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$5[ebp]
  005fd	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00601	51		 push	 ecx
  00602	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00605	83 c1 24	 add	 ecx, 36			; 00000024H
  00608	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0060d	89 85 08 fe ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$4[ebp], eax

; 991  : 
; 992  : 			//同步状态
; 993  : 			CMD_CS_S_UserGameStatus UserGameStatus;
; 994  : 			UserGameStatus.dwUserID=pUserStatus->dwUserID;

  00613	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00619	8b 08		 mov	 ecx, DWORD PTR [eax]
  0061b	89 8d d8 fd ff
	ff		 mov	 DWORD PTR _UserGameStatus$3[ebp], ecx

; 995  : 			UserGameStatus.cbGameStatus=pUserStatus->cbUserStatus;

  00621	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00627	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0062a	88 8d dc fd ff
	ff		 mov	 BYTE PTR _UserGameStatus$3[ebp+4], cl

; 996  : 			UserGameStatus.wKindID =pUserStatus->wKindID;

  00630	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00636	66 8b 48 05	 mov	 cx, WORD PTR [eax+5]
  0063a	66 89 8d dd fd
	ff ff		 mov	 WORD PTR _UserGameStatus$3[ebp+5], cx

; 997  : 			UserGameStatus.wServerID=pUserStatus->wServerID;

  00641	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00647	66 8b 48 07	 mov	 cx, WORD PTR [eax+7]
  0064b	66 89 8d df fd
	ff ff		 mov	 WORD PTR _UserGameStatus$3[ebp+7], cx

; 998  : 			UserGameStatus.wTableID=pUserStatus->wTableID;

  00652	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00658	66 8b 48 09	 mov	 cx, WORD PTR [eax+9]
  0065c	66 89 8d e1 fd
	ff ff		 mov	 WORD PTR _UserGameStatus$3[ebp+9], cx

; 999  : 			lstrcpyn(UserGameStatus.szServerName,pGlobalServerItem->m_GameServer.szServerName,CountArray(UserGameStatus.szServerName));

  00663	6a 20		 push	 32			; 00000020H
  00665	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$4[ebp]
  0066b	83 c0 57	 add	 eax, 87			; 00000057H
  0066e	50		 push	 eax
  0066f	8d 8d e5 fd ff
	ff		 lea	 ecx, DWORD PTR _UserGameStatus$3[ebp+13]
  00675	51		 push	 ecx
  00676	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1000 : 
; 1001 : 			//变量定义
; 1002 : 			POSITION posChat=NULL;

  0067c	c7 85 d4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _posChat$2[ebp], 0
$LN12@OnTCPNetwo:

; 1003 : 
; 1004 : 			//查找房间
; 1005 : 			do
; 1006 : 			{
; 1007 : 				//查找房间
; 1008 : 				CGlobalChatItem * pGlobalChatItem=m_GlobalInfoManager.EnumChatItem(posChat);

  00686	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _posChat$2[ebp]
  0068c	50		 push	 eax
  0068d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00690	83 c1 24	 add	 ecx, 36			; 00000024H
  00693	e8 00 00 00 00	 call	 ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
  00698	89 85 d0 fd ff
	ff		 mov	 DWORD PTR _pGlobalChatItem$1[ebp], eax

; 1009 : 
; 1010 : 				//终止判断
; 1011 : 				if (pGlobalChatItem==NULL) break;

  0069e	83 bd d0 fd ff
	ff 00		 cmp	 DWORD PTR _pGlobalChatItem$1[ebp], 0
  006a5	75 02		 jne	 SHORT $LN28@OnTCPNetwo
  006a7	eb 39		 jmp	 SHORT $LN11@OnTCPNetwo
$LN28@OnTCPNetwo:

; 1012 : 
; 1013 : 				//发送状态
; 1014 : 				m_pITCPNetworkEngine->SendData(pGlobalChatItem->m_ChatServer.dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_USER_GAMESTATE,&UserGameStatus,sizeof(UserGameStatus));

  006a9	6a 2d		 push	 45			; 0000002dH
  006ab	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _UserGameStatus$3[ebp]
  006b1	50		 push	 eax
  006b2	6a 65		 push	 101			; 00000065H
  006b4	6a 03		 push	 3
  006b6	8b 8d d0 fd ff
	ff		 mov	 ecx, DWORD PTR _pGlobalChatItem$1[ebp]
  006bc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  006bf	52		 push	 edx
  006c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006c3	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  006c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006cc	8b 01		 mov	 eax, DWORD PTR [ecx]
  006ce	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  006d4	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  006d7	ff d2		 call	 edx

; 1015 : 
; 1016 : 			}while(posChat != NULL);

  006d9	83 bd d4 fd ff
	ff 00		 cmp	 DWORD PTR _posChat$2[ebp], 0
  006e0	75 a4		 jne	 SHORT $LN12@OnTCPNetwo
$LN11@OnTCPNetwo:

; 1017 : 
; 1018 : 			return true;

  006e2	b0 01		 mov	 al, 1
  006e4	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1019 : 		}
; 1020 : 	}
; 1021 : 
; 1022 : 	return false;

  006e6	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1023 : }

  006e8	5f		 pop	 edi
  006e9	5e		 pop	 esi
  006ea	5b		 pop	 ebx
  006eb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006ee	33 cd		 xor	 ecx, ebp
  006f0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006f5	8b e5		 mov	 esp, ebp
  006f7	5d		 pop	 ebp
  006f8	c2 10 00	 ret	 16			; 00000010H
  006fb	90		 npad	 1
$LN37@OnTCPNetwo:
  006fc	00 00 00 00	 DD	 $LN13@OnTCPNetwo
  00700	00 00 00 00	 DD	 $LN17@OnTCPNetwo
  00704	00 00 00 00	 DD	 $LN21@OnTCPNetwo
  00708	00 00 00 00	 DD	 $LN25@OnTCPNetwo
?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainUserCollect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -2104						; size = 4
$T1 = -2100						; size = 4
_cmdHostCreatRoomInfo$2 = -1840				; size = 352
_QeuryPersonalRoomList$3 = -1488			; size = 4
_DismissTableResult$4 = -1484				; size = 693
_pPersonalTableInfo$5 = -788				; size = 4
_pDismissTable$6 = -784					; size = 4
_CreateTableResult$7 = -780				; size = 239
_szServerID$8 = -540					; size = 7
_pCreateTable$9 = -532					; size = 4
_QueryGameServerResult$10 = -528			; size = 273
_bCanCreateRoom$11 = -249				; size = 1
_dwServerID$12 = -248					; size = 4
_pQueryGameServer$13 = -244				; size = 4
_SearchTableResult$14 = -240				; size = 20
_pPersonalTable$15 = -220				; size = 4
_pSearchTable$16 = -216					; size = 4
_SearchTableResult$17 = -212				; size = 20
_pPersonalTable$18 = -192				; size = 4
_pSearchTable$19 = -188					; size = 4
_ServerModify$20 = -184					; size = 122
_pGlobalServerItem$21 = -60				; size = 4
_pBindParameter$22 = -56				; size = 4
_wBindIndex$23 = -52					; size = 2
_pServerModify$24 = -48					; size = 4
_ServerOnLine$25 = -44					; size = 14
_pGlobalServerItem$26 = -28				; size = 4
_wServerID$27 = -24					; size = 2
_pBindParameter$28 = -20				; size = 4
_wBindIndex$29 = -16					; size = 2
_pServerOnLine$30 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo, COMDAT
; _this$ = ecx

; 509  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 08 00
	00		 sub	 esp, 2104		; 00000838H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 510  : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 c8 f7 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	8b 8d c8 f7 ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	89 8d c8 f7 ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00032	81 bd c8 f7 ff
	ff 8d 00 00 00	 cmp	 DWORD PTR tv65[ebp], 141 ; 0000008dH
  0003c	0f 87 dd 0a 00
	00		 ja	 $LN2@OnTCPNetwo
  00042	8b 95 c8 f7 ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00048	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN45@OnTCPNetwo[edx]
  0004f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN46@OnTCPNetwo[eax*4]
$LN4@OnTCPNetwo:

; 511  : 	{
; 512  : 	case SUB_CS_C_SERVER_ONLINE:	//房间人数
; 513  : 		{
; 514  : 			//效验数据
; 515  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_ServerOnLine));

  00056	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005a	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  0005d	74 19		 je	 SHORT $LN33@OnTCPNetwo
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00065	83 c1 06	 add	 ecx, 6
  00068	51		 push	 ecx
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0006e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00073	85 c0		 test	 eax, eax
  00075	74 01		 je	 SHORT $LN33@OnTCPNetwo
  00077	cc		 int	 3
$LN33@OnTCPNetwo:

; 516  : 			if (wDataSize!=sizeof(CMD_CS_C_ServerOnLine)) return false;

  00078	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0007c	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  0007f	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 99 0a 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 517  : 
; 518  : 			//消息定义
; 519  : 			CMD_CS_C_ServerOnLine * pServerOnLine=(CMD_CS_C_ServerOnLine *)pData;

  00088	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0008b	89 45 f4	 mov	 DWORD PTR _pServerOnLine$30[ebp], eax

; 520  : 
; 521  : 			//获取参数
; 522  : 			WORD wBindIndex=LOWORD(dwSocketID);

  0008e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00091	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00096	66 89 45 f0	 mov	 WORD PTR _wBindIndex$29[ebp], ax

; 523  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  0009a	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$29[ebp]
  0009e	6b c8 14	 imul	 ecx, eax, 20
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  000a7	89 4d ec	 mov	 DWORD PTR _pBindParameter$28[ebp], ecx

; 524  : 
; 525  : 			//连接效验
; 526  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  000aa	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$28[ebp]
  000ad	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000b1	74 19		 je	 SHORT $LN34@OnTCPNetwo
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000b9	83 c1 11	 add	 ecx, 17			; 00000011H
  000bc	51		 push	 ecx
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000c2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c7	85 c0		 test	 eax, eax
  000c9	74 01		 je	 SHORT $LN34@OnTCPNetwo
  000cb	cc		 int	 3
$LN34@OnTCPNetwo:

; 527  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  000cc	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$28[ebp]
  000cf	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000d3	74 07		 je	 SHORT $LN6@OnTCPNetwo
  000d5	32 c0		 xor	 al, al
  000d7	e9 45 0a 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 528  : 
; 529  : 			//查找房间
; 530  : 			WORD wServerID=pBindParameter->wServiceID;

  000dc	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$28[ebp]
  000df	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  000e3	66 89 4d e8	 mov	 WORD PTR _wServerID$27[ebp], cx

; 531  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(wServerID);

  000e7	0f b7 45 e8	 movzx	 eax, WORD PTR _wServerID$27[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	83 c1 24	 add	 ecx, 36			; 00000024H
  000f2	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  000f7	89 45 e4	 mov	 DWORD PTR _pGlobalServerItem$26[ebp], eax

; 532  : 
; 533  : 			//设置人数
; 534  : 			if (pGlobalServerItem!=NULL)

  000fa	83 7d e4 00	 cmp	 DWORD PTR _pGlobalServerItem$26[ebp], 0
  000fe	74 7a		 je	 SHORT $LN7@OnTCPNetwo

; 535  : 			{
; 536  : 				//变量定义
; 537  : 				CMD_CS_S_ServerOnLine ServerOnLine;
; 538  : 				ZeroMemory(&ServerOnLine,sizeof(ServerOnLine));

  00100	6a 0e		 push	 14			; 0000000eH
  00102	6a 00		 push	 0
  00104	8d 45 d4	 lea	 eax, DWORD PTR _ServerOnLine$25[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 _memset
  0010d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 539  : 
; 540  : 				//设置变量
; 541  : 				pGlobalServerItem->m_GameServer.dwAndroidCount=pServerOnLine->dwAndroidCount;

  00110	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalServerItem$26[ebp]
  00113	8b 4d f4	 mov	 ecx, DWORD PTR _pServerOnLine$30[ebp]
  00116	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00119	89 50 2f	 mov	 DWORD PTR [eax+47], edx

; 542  : 				pGlobalServerItem->m_GameServer.dwOnLineCount=pServerOnLine->dwOnLineCount;

  0011c	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalServerItem$26[ebp]
  0011f	8b 4d f4	 mov	 ecx, DWORD PTR _pServerOnLine$30[ebp]
  00122	8b 11		 mov	 edx, DWORD PTR [ecx]
  00124	89 50 2b	 mov	 DWORD PTR [eax+43], edx

; 543  : 				pGlobalServerItem->m_GameServer.dwSetPlayerCount = pServerOnLine->dwSetCount;

  00127	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalServerItem$26[ebp]
  0012a	8b 4d f4	 mov	 ecx, DWORD PTR _pServerOnLine$30[ebp]
  0012d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00130	89 50 7d	 mov	 DWORD PTR [eax+125], edx

; 544  : 				//设置变量
; 545  : 				ServerOnLine.wServerID=wServerID;

  00133	66 8b 45 e8	 mov	 ax, WORD PTR _wServerID$27[ebp]
  00137	66 89 45 d4	 mov	 WORD PTR _ServerOnLine$25[ebp], ax

; 546  : 				ServerOnLine.dwOnLineCount=pServerOnLine->dwOnLineCount;

  0013b	8b 45 f4	 mov	 eax, DWORD PTR _pServerOnLine$30[ebp]
  0013e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00140	89 4d d6	 mov	 DWORD PTR _ServerOnLine$25[ebp+2], ecx

; 547  : 				ServerOnLine.dwAndroidCount=pServerOnLine->dwAndroidCount;

  00143	8b 45 f4	 mov	 eax, DWORD PTR _pServerOnLine$30[ebp]
  00146	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00149	89 4d da	 mov	 DWORD PTR _ServerOnLine$25[ebp+6], ecx

; 548  : 				ServerOnLine.dwSetCount = pServerOnLine->dwSetCount;

  0014c	8b 45 f4	 mov	 eax, DWORD PTR _pServerOnLine$30[ebp]
  0014f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00152	89 4d de	 mov	 DWORD PTR _ServerOnLine$25[ebp+10], ecx

; 549  : 				//发送通知
; 550  : 				m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_ONLINE,&ServerOnLine,sizeof(ServerOnLine),0L);

  00155	6a 00		 push	 0
  00157	6a 0e		 push	 14			; 0000000eH
  00159	8d 45 d4	 lea	 eax, DWORD PTR _ServerOnLine$25[ebp]
  0015c	50		 push	 eax
  0015d	6a 6f		 push	 111			; 0000006fH
  0015f	6a 02		 push	 2
  00161	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0016a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0016d	8b 12		 mov	 edx, DWORD PTR [edx]
  0016f	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00175	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00178	ff d0		 call	 eax
$LN7@OnTCPNetwo:

; 551  : 			}
; 552  : 
; 553  : 			return true;

  0017a	b0 01		 mov	 al, 1
  0017c	e9 a0 09 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 554  : 		}
; 555  : 	case SUB_CS_C_SERVER_MODIFY:	//房间修改
; 556  : 		{
; 557  : 			//效验数据
; 558  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_ServerModify));

  00181	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00185	83 f8 78	 cmp	 eax, 120		; 00000078H
  00188	74 19		 je	 SHORT $LN35@OnTCPNetwo
  0018a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00190	83 c1 31	 add	 ecx, 49			; 00000031H
  00193	51		 push	 ecx
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00199	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0019e	85 c0		 test	 eax, eax
  001a0	74 01		 je	 SHORT $LN35@OnTCPNetwo
  001a2	cc		 int	 3
$LN35@OnTCPNetwo:

; 559  : 			if (wDataSize!=sizeof(CMD_CS_C_ServerModify)) return false;

  001a3	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001a7	83 f8 78	 cmp	 eax, 120		; 00000078H
  001aa	74 07		 je	 SHORT $LN9@OnTCPNetwo
  001ac	32 c0		 xor	 al, al
  001ae	e9 6e 09 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 560  : 
; 561  : 			//消息定义
; 562  : 			CMD_CS_C_ServerModify * pServerModify=(CMD_CS_C_ServerModify *)pData;

  001b3	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  001b6	89 45 d0	 mov	 DWORD PTR _pServerModify$24[ebp], eax

; 563  : 
; 564  : 			//获取参数
; 565  : 			WORD wBindIndex=LOWORD(dwSocketID);

  001b9	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001bc	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001c1	66 89 45 cc	 mov	 WORD PTR _wBindIndex$23[ebp], ax

; 566  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  001c5	0f b7 45 cc	 movzx	 eax, WORD PTR _wBindIndex$23[ebp]
  001c9	6b c8 14	 imul	 ecx, eax, 20
  001cc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001cf	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  001d2	89 4d c8	 mov	 DWORD PTR _pBindParameter$22[ebp], ecx

; 567  : 
; 568  : 			//连接效验
; 569  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  001d5	8b 45 c8	 mov	 eax, DWORD PTR _pBindParameter$22[ebp]
  001d8	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  001dc	74 19		 je	 SHORT $LN36@OnTCPNetwo
  001de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  001e4	83 c1 3c	 add	 ecx, 60			; 0000003cH
  001e7	51		 push	 ecx
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001ed	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001f2	85 c0		 test	 eax, eax
  001f4	74 01		 je	 SHORT $LN36@OnTCPNetwo
  001f6	cc		 int	 3
$LN36@OnTCPNetwo:

; 570  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  001f7	8b 45 c8	 mov	 eax, DWORD PTR _pBindParameter$22[ebp]
  001fa	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  001fe	74 07		 je	 SHORT $LN10@OnTCPNetwo
  00200	32 c0		 xor	 al, al
  00202	e9 1a 09 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 571  : 
; 572  : 			//查找房间
; 573  : 			ASSERT(m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID)!=NULL);

  00207	8b 45 c8	 mov	 eax, DWORD PTR _pBindParameter$22[ebp]
  0020a	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  0020e	51		 push	 ecx
  0020f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00212	83 c1 24	 add	 ecx, 36			; 00000024H
  00215	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0021a	85 c0		 test	 eax, eax
  0021c	75 19		 jne	 SHORT $LN37@OnTCPNetwo
  0021e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00224	83 c2 40	 add	 edx, 64			; 00000040H
  00227	52		 push	 edx
  00228	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0022d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00232	85 c0		 test	 eax, eax
  00234	74 01		 je	 SHORT $LN37@OnTCPNetwo
  00236	cc		 int	 3
$LN37@OnTCPNetwo:

; 574  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  00237	8b 45 c8	 mov	 eax, DWORD PTR _pBindParameter$22[ebp]
  0023a	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  0023e	51		 push	 ecx
  0023f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00242	83 c1 24	 add	 ecx, 36			; 00000024H
  00245	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0024a	89 45 c4	 mov	 DWORD PTR _pGlobalServerItem$21[ebp], eax

; 575  : 
; 576  : 			//房间修改
; 577  : 			if (pGlobalServerItem!=NULL)

  0024d	83 7d c4 00	 cmp	 DWORD PTR _pGlobalServerItem$21[ebp], 0
  00251	0f 84 7c 01 00
	00		 je	 $LN11@OnTCPNetwo

; 578  : 			{
; 579  : 				//设置变量
; 580  : 				pGlobalServerItem->m_GameServer.wSortID=pServerModify->wSortID;

  00257	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  0025a	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  0025d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00260	66 89 50 0a	 mov	 WORD PTR [eax+10], dx

; 581  : 				pGlobalServerItem->m_GameServer.wKindID=pServerModify->wKindID;

  00264	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  00267	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  0026a	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  0026e	66 89 50 06	 mov	 WORD PTR [eax+6], dx

; 582  : 				pGlobalServerItem->m_GameServer.wNodeID=pServerModify->wNodeID;

  00272	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  00275	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  00278	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  0027c	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 583  : 				pGlobalServerItem->m_GameServer.wServerPort=pServerModify->wServerPort;

  00280	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  00283	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  00286	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  0028a	66 89 50 14	 mov	 WORD PTR [eax+20], dx

; 584  : 				pGlobalServerItem->m_GameServer.dwOnLineCount=pServerModify->dwOnLineCount;

  0028e	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  00291	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  00294	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00297	89 50 2b	 mov	 DWORD PTR [eax+43], edx

; 585  : 				pGlobalServerItem->m_GameServer.dwAndroidCount = pServerModify->dwAndroidCount;

  0029a	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  0029d	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  002a0	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  002a3	89 50 2f	 mov	 DWORD PTR [eax+47], edx

; 586  : 				pGlobalServerItem->m_GameServer.dwFullCount=pServerModify->dwFullCount;	

  002a6	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  002a9	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  002ac	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  002af	89 50 33	 mov	 DWORD PTR [eax+51], edx

; 587  : 				pGlobalServerItem->m_GameServer.dwSetPlayerCount = pServerModify->dwSetCount;

  002b2	8b 45 c4	 mov	 eax, DWORD PTR _pGlobalServerItem$21[ebp]
  002b5	8b 4d d0	 mov	 ecx, DWORD PTR _pServerModify$24[ebp]
  002b8	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  002bb	89 50 7d	 mov	 DWORD PTR [eax+125], edx

; 588  : 				lstrcpyn(pGlobalServerItem->m_GameServer.szServerName,pServerModify->szServerName,CountArray(pGlobalServerItem->m_GameServer.szServerName));

  002be	6a 20		 push	 32			; 00000020H
  002c0	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  002c3	83 c0 38	 add	 eax, 56			; 00000038H
  002c6	50		 push	 eax
  002c7	8b 4d c4	 mov	 ecx, DWORD PTR _pGlobalServerItem$21[ebp]
  002ca	83 c1 57	 add	 ecx, 87			; 00000057H
  002cd	51		 push	 ecx
  002ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 589  : 				lstrcpyn(pGlobalServerItem->m_GameServer.szServerAddr,pServerModify->szServerAddr,CountArray(pGlobalServerItem->m_GameServer.szServerAddr));

  002d4	6a 20		 push	 32			; 00000020H
  002d6	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  002d9	83 c0 18	 add	 eax, 24			; 00000018H
  002dc	50		 push	 eax
  002dd	8b 4d c4	 mov	 ecx, DWORD PTR _pGlobalServerItem$21[ebp]
  002e0	83 c1 37	 add	 ecx, 55			; 00000037H
  002e3	51		 push	 ecx
  002e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 590  : 				lstrcpyn(pGlobalServerItem->m_GameServer.szGameInfomation, pServerModify->szGameInfomation, CountArray(pGlobalServerItem->m_GameServer.szGameInfomation));

  002ea	6a 20		 push	 32			; 00000020H
  002ec	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  002ef	83 c0 58	 add	 eax, 88			; 00000058H
  002f2	50		 push	 eax
  002f3	8b 4d c4	 mov	 ecx, DWORD PTR _pGlobalServerItem$21[ebp]
  002f6	81 c1 81 00 00
	00		 add	 ecx, 129		; 00000081H
  002fc	51		 push	 ecx
  002fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 591  : 
; 592  : 				//变量定义
; 593  : 				CMD_CS_S_ServerModify ServerModify;
; 594  : 				ZeroMemory(&ServerModify,sizeof(ServerModify));

  00303	6a 7a		 push	 122			; 0000007aH
  00305	6a 00		 push	 0
  00307	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$20[ebp]
  0030d	50		 push	 eax
  0030e	e8 00 00 00 00	 call	 _memset
  00313	83 c4 0c	 add	 esp, 12			; 0000000cH

; 595  : 
; 596  : 				//设置变量
; 597  : 				ServerModify.wKindID=pServerModify->wKindID;

  00316	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  00319	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  0031d	66 89 8d 4a ff
	ff ff		 mov	 WORD PTR _ServerModify$20[ebp+2], cx

; 598  : 				ServerModify.wSortID=pServerModify->wSortID;

  00324	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  00327	66 8b 08	 mov	 cx, WORD PTR [eax]
  0032a	66 89 8d 48 ff
	ff ff		 mov	 WORD PTR _ServerModify$20[ebp], cx

; 599  : 				ServerModify.wNodeID=pServerModify->wNodeID;

  00331	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  00334	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  00338	66 89 8d 4c ff
	ff ff		 mov	 WORD PTR _ServerModify$20[ebp+4], cx

; 600  : 				ServerModify.wServerID=pBindParameter->wServiceID;

  0033f	8b 45 c8	 mov	 eax, DWORD PTR _pBindParameter$22[ebp]
  00342	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  00346	66 89 8d 4e ff
	ff ff		 mov	 WORD PTR _ServerModify$20[ebp+6], cx

; 601  : 				ServerModify.wServerPort=pServerModify->wServerPort;

  0034d	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  00350	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  00354	66 89 8d 50 ff
	ff ff		 mov	 WORD PTR _ServerModify$20[ebp+8], cx

; 602  : 				ServerModify.dwOnLineCount=pServerModify->dwOnLineCount;

  0035b	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  0035e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00361	89 8d 52 ff ff
	ff		 mov	 DWORD PTR _ServerModify$20[ebp+10], ecx

; 603  : 				ServerModify.dwFullCount=pServerModify->dwFullCount;

  00367	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  0036a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0036d	89 8d 5a ff ff
	ff		 mov	 DWORD PTR _ServerModify$20[ebp+18], ecx

; 604  : 				ServerModify.dwAndroidCount= pServerModify->dwAndroidCount;

  00373	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  00376	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00379	89 8d 56 ff ff
	ff		 mov	 DWORD PTR _ServerModify$20[ebp+14], ecx

; 605  : 				lstrcpyn(ServerModify.szServerAddr,pServerModify->szServerAddr,CountArray(ServerModify.szServerAddr));

  0037f	6a 20		 push	 32			; 00000020H
  00381	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  00384	83 c0 18	 add	 eax, 24			; 00000018H
  00387	50		 push	 eax
  00388	8d 8d 5e ff ff
	ff		 lea	 ecx, DWORD PTR _ServerModify$20[ebp+22]
  0038e	51		 push	 ecx
  0038f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 606  : 				lstrcpyn(ServerModify.szServerName,pServerModify->szServerName,CountArray(ServerModify.szServerName));

  00395	6a 20		 push	 32			; 00000020H
  00397	8b 45 d0	 mov	 eax, DWORD PTR _pServerModify$24[ebp]
  0039a	83 c0 38	 add	 eax, 56			; 00000038H
  0039d	50		 push	 eax
  0039e	8d 8d 7e ff ff
	ff		 lea	 ecx, DWORD PTR _ServerModify$20[ebp+54]
  003a4	51		 push	 ecx
  003a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 607  : 
; 608  : 				//发送通知
; 609  : 				m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_MODIFY,&ServerModify,sizeof(ServerModify),0L);

  003ab	6a 00		 push	 0
  003ad	6a 7a		 push	 122			; 0000007aH
  003af	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$20[ebp]
  003b5	50		 push	 eax
  003b6	6a 71		 push	 113			; 00000071H
  003b8	6a 02		 push	 2
  003ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003bd	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  003c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c6	8b 12		 mov	 edx, DWORD PTR [edx]
  003c8	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  003ce	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  003d1	ff d0		 call	 eax
$LN11@OnTCPNetwo:

; 610  : 			}
; 611  : 
; 612  : 			return true;

  003d3	b0 01		 mov	 al, 1
  003d5	e9 47 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN12@OnTCPNetwo:

; 613  : 		}
; 614  : 	case SUB_CS_C_SEARCH_TABLE:			//查找桌子
; 615  : 		{
; 616  : 			//效验数据
; 617  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_SearchTable));

  003da	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003de	83 f8 17	 cmp	 eax, 23			; 00000017H
  003e1	74 19		 je	 SHORT $LN38@OnTCPNetwo
  003e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  003e9	83 c1 6c	 add	 ecx, 108		; 0000006cH
  003ec	51		 push	 ecx
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  003f2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003f7	85 c0		 test	 eax, eax
  003f9	74 01		 je	 SHORT $LN38@OnTCPNetwo
  003fb	cc		 int	 3
$LN38@OnTCPNetwo:

; 618  : 			if (wDataSize!=sizeof(CMD_CS_C_SearchTable)) return false;

  003fc	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00400	83 f8 17	 cmp	 eax, 23			; 00000017H
  00403	74 07		 je	 SHORT $LN13@OnTCPNetwo
  00405	32 c0		 xor	 al, al
  00407	e9 15 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 619  : 
; 620  : 			CMD_CS_C_SearchTable *pSearchTable = (CMD_CS_C_SearchTable*)pData;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0040f	89 85 44 ff ff
	ff		 mov	 DWORD PTR _pSearchTable$19[ebp], eax

; 621  : 
; 622  : 			//查找桌子
; 623  : 			tagPersonalTableInfo* pPersonalTable = m_GlobalInfoManager.SearchTableByID(pSearchTable->szPersonalTableID);

  00415	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$19[ebp]
  0041b	83 c0 10	 add	 eax, 16			; 00000010H
  0041e	50		 push	 eax
  0041f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00422	83 c1 24	 add	 ecx, 36			; 00000024H
  00425	e8 00 00 00 00	 call	 ?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@PBD@Z ; CGlobalInfoManager::SearchTableByID
  0042a	89 85 40 ff ff
	ff		 mov	 DWORD PTR _pPersonalTable$18[ebp], eax

; 624  : 
; 625  : 			//构造数据
; 626  : 			CMD_CS_S_SearchTableResult SearchTableResult;
; 627  : 			ZeroMemory(&SearchTableResult, sizeof(CMD_CS_S_SearchTableResult));

  00430	6a 14		 push	 20			; 00000014H
  00432	6a 00		 push	 0
  00434	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$17[ebp]
  0043a	50		 push	 eax
  0043b	e8 00 00 00 00	 call	 _memset
  00440	83 c4 0c	 add	 esp, 12			; 0000000cH

; 628  : 
; 629  : 			SearchTableResult.dwSocketID = pSearchTable->dwSocketID;

  00443	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$19[ebp]
  00449	8b 08		 mov	 ecx, DWORD PTR [eax]
  0044b	89 8d 2c ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$17[ebp], ecx

; 630  : 			SearchTableResult.dwClientAddr = pSearchTable->dwClientAddr;

  00451	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$19[ebp]
  00457	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0045a	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$17[ebp+4], ecx

; 631  : 
; 632  : 			if(pPersonalTable == NULL)

  00460	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR _pPersonalTable$18[ebp], 0
  00467	75 16		 jne	 SHORT $LN14@OnTCPNetwo

; 633  : 			{
; 634  : 				SearchTableResult.dwServerID = 0;

  00469	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$17[ebp+8], 0

; 635  : 				SearchTableResult.dwTableID = 0;

  00473	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$17[ebp+12], 0

; 636  : 			}
; 637  : 			else

  0047d	eb 1d		 jmp	 SHORT $LN15@OnTCPNetwo
$LN14@OnTCPNetwo:

; 638  : 			{
; 639  : 				SearchTableResult.dwServerID = pPersonalTable->dwServerID;

  0047f	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$18[ebp]
  00485	8b 08		 mov	 ecx, DWORD PTR [eax]
  00487	89 8d 34 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$17[ebp+8], ecx

; 640  : 				SearchTableResult.dwTableID = pPersonalTable->dwTableID;

  0048d	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$18[ebp]
  00493	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00496	89 8d 38 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$17[ebp+12], ecx
$LN15@OnTCPNetwo:

; 641  : 			}
; 642  : 			
; 643  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_SEARCH_TABLE_RESULT, &SearchTableResult, sizeof(SearchTableResult));

  0049c	6a 14		 push	 20			; 00000014H
  0049e	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$17[ebp]
  004a4	50		 push	 eax
  004a5	68 84 00 00 00	 push	 132			; 00000084H
  004aa	6a 02		 push	 2
  004ac	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  004af	51		 push	 ecx
  004b0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  004b3	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  004b9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004bc	8b 10		 mov	 edx, DWORD PTR [eax]
  004be	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  004c4	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  004c7	ff d0		 call	 eax

; 644  : 
; 645  : 			return true;

  004c9	b0 01		 mov	 al, 1
  004cb	e9 51 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN16@OnTCPNetwo:

; 646  : 		}
; 647  : 	case SUB_CS_C_DISSUME_SEARCH_TABLE:			//查找桌子
; 648  : 		{
; 649  : 			//效验数据
; 650  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_SearchTable));

  004d0	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004d4	83 f8 17	 cmp	 eax, 23			; 00000017H
  004d7	74 1c		 je	 SHORT $LN39@OnTCPNetwo
  004d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  004df	81 c1 8d 00 00
	00		 add	 ecx, 141		; 0000008dH
  004e5	51		 push	 ecx
  004e6	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  004eb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  004f0	85 c0		 test	 eax, eax
  004f2	74 01		 je	 SHORT $LN39@OnTCPNetwo
  004f4	cc		 int	 3
$LN39@OnTCPNetwo:

; 651  : 			if (wDataSize!=sizeof(CMD_CS_C_SearchTable)) return false;

  004f5	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004f9	83 f8 17	 cmp	 eax, 23			; 00000017H
  004fc	74 07		 je	 SHORT $LN17@OnTCPNetwo
  004fe	32 c0		 xor	 al, al
  00500	e9 1c 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 652  : 
; 653  : 			CMD_CS_C_SearchTable *pSearchTable = (CMD_CS_C_SearchTable*)pData;

  00505	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00508	89 85 28 ff ff
	ff		 mov	 DWORD PTR _pSearchTable$16[ebp], eax

; 654  : 
; 655  : 			//查找桌子
; 656  : 			tagPersonalTableInfo* pPersonalTable = m_GlobalInfoManager.SearchTableByID(pSearchTable->szPersonalTableID);

  0050e	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$16[ebp]
  00514	83 c0 10	 add	 eax, 16			; 00000010H
  00517	50		 push	 eax
  00518	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0051b	83 c1 24	 add	 ecx, 36			; 00000024H
  0051e	e8 00 00 00 00	 call	 ?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@PBD@Z ; CGlobalInfoManager::SearchTableByID
  00523	89 85 24 ff ff
	ff		 mov	 DWORD PTR _pPersonalTable$15[ebp], eax

; 657  : 
; 658  : 			//构造数据
; 659  : 			CMD_CS_S_SearchTableResult SearchTableResult;
; 660  : 			ZeroMemory(&SearchTableResult, sizeof(CMD_CS_S_SearchTableResult));

  00529	6a 14		 push	 20			; 00000014H
  0052b	6a 00		 push	 0
  0052d	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$14[ebp]
  00533	50		 push	 eax
  00534	e8 00 00 00 00	 call	 _memset
  00539	83 c4 0c	 add	 esp, 12			; 0000000cH

; 661  : 
; 662  : 			SearchTableResult.dwSocketID = pSearchTable->dwSocketID;

  0053c	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$16[ebp]
  00542	8b 08		 mov	 ecx, DWORD PTR [eax]
  00544	89 8d 10 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$14[ebp], ecx

; 663  : 			SearchTableResult.dwClientAddr = pSearchTable->dwClientAddr;

  0054a	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$16[ebp]
  00550	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00553	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$14[ebp+4], ecx

; 664  : 
; 665  : 			if(pPersonalTable == NULL)

  00559	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _pPersonalTable$15[ebp], 0
  00560	75 16		 jne	 SHORT $LN18@OnTCPNetwo

; 666  : 			{
; 667  : 				SearchTableResult.dwServerID = 0;

  00562	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$14[ebp+8], 0

; 668  : 				SearchTableResult.dwTableID = 0;

  0056c	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$14[ebp+12], 0

; 669  : 			}
; 670  : 			else

  00576	eb 1d		 jmp	 SHORT $LN19@OnTCPNetwo
$LN18@OnTCPNetwo:

; 671  : 			{
; 672  : 				SearchTableResult.dwServerID = pPersonalTable->dwServerID;

  00578	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$15[ebp]
  0057e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00580	89 8d 18 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$14[ebp+8], ecx

; 673  : 				SearchTableResult.dwTableID = pPersonalTable->dwTableID;

  00586	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$15[ebp]
  0058c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0058f	89 8d 1c ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$14[ebp+12], ecx
$LN19@OnTCPNetwo:

; 674  : 			}
; 675  : 			
; 676  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_DISSUME_SEARCH_TABLE_RESULT, &SearchTableResult, sizeof(SearchTableResult));

  00595	6a 14		 push	 20			; 00000014H
  00597	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$14[ebp]
  0059d	50		 push	 eax
  0059e	68 8f 00 00 00	 push	 143			; 0000008fH
  005a3	6a 02		 push	 2
  005a5	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  005a8	51		 push	 ecx
  005a9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005ac	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  005b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b5	8b 10		 mov	 edx, DWORD PTR [eax]
  005b7	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  005bd	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  005c0	ff d0		 call	 eax

; 677  : 
; 678  : 			return true;

  005c2	b0 01		 mov	 al, 1
  005c4	e9 58 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN20@OnTCPNetwo:

; 679  : 		}
; 680  : 	case SUB_CS_C_QUERY_GAME_SERVER:		//查询可用房间
; 681  : 		{
; 682  : 			//效验数据
; 683  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_QueryGameServer));

  005c9	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005cd	83 f8 11	 cmp	 eax, 17			; 00000011H
  005d0	74 1c		 je	 SHORT $LN40@OnTCPNetwo
  005d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  005d8	81 c1 ae 00 00
	00		 add	 ecx, 174		; 000000aeH
  005de	51		 push	 ecx
  005df	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  005e4	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  005e9	85 c0		 test	 eax, eax
  005eb	74 01		 je	 SHORT $LN40@OnTCPNetwo
  005ed	cc		 int	 3
$LN40@OnTCPNetwo:

; 684  : 			if (wDataSize!=sizeof(CMD_CS_C_QueryGameServer)) return false;

  005ee	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005f2	83 f8 11	 cmp	 eax, 17			; 00000011H
  005f5	74 07		 je	 SHORT $LN21@OnTCPNetwo
  005f7	32 c0		 xor	 al, al
  005f9	e9 23 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN21@OnTCPNetwo:

; 685  : 
; 686  : 			CMD_CS_C_QueryGameServer *pQueryGameServer = (CMD_CS_C_QueryGameServer *)pData;

  005fe	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00601	89 85 0c ff ff
	ff		 mov	 DWORD PTR _pQueryGameServer$13[ebp], eax

; 687  : 
; 688  : 			//判断是否可以创建私人房间
; 689  : 			DWORD dwServerID = 0;

  00607	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwServerID$12[ebp], 0

; 690  : 			bool bCanCreateRoom = false;

  00611	c6 85 07 ff ff
	ff 00		 mov	 BYTE PTR _bCanCreateRoom$11[ebp], 0

; 691  : 
; 692  : 			CMD_CS_S_QueryGameServerResult QueryGameServerResult;
; 693  : 			ZeroMemory(&QueryGameServerResult, sizeof(CMD_CS_S_QueryGameServerResult));

  00618	68 11 01 00 00	 push	 273			; 00000111H
  0061d	6a 00		 push	 0
  0061f	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$10[ebp]
  00625	50		 push	 eax
  00626	e8 00 00 00 00	 call	 _memset
  0062b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 694  : 
; 695  : 			if (m_GlobalInfoManager.CanCreatePersonalRoom(pQueryGameServer->dwKindID, pQueryGameServer->dwUserID))

  0062e	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$13[ebp]
  00634	8b 08		 mov	 ecx, DWORD PTR [eax]
  00636	51		 push	 ecx
  00637	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _pQueryGameServer$13[ebp]
  0063d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00640	50		 push	 eax
  00641	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00644	83 c1 24	 add	 ecx, 36			; 00000024H
  00647	e8 00 00 00 00	 call	 ?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z ; CGlobalInfoManager::CanCreatePersonalRoom
  0064c	0f b6 c8	 movzx	 ecx, al
  0064f	85 c9		 test	 ecx, ecx
  00651	74 58		 je	 SHORT $LN22@OnTCPNetwo

; 696  : 			{
; 697  : 				//空闲桌子
; 698  : 				dwServerID = m_GlobalInfoManager.GetFreeServer(pQueryGameServer->dwUserID, pQueryGameServer->dwKindID, pQueryGameServer->cbIsJoinGame);

  00653	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$13[ebp]
  00659	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  0065d	51		 push	 ecx
  0065e	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _pQueryGameServer$13[ebp]
  00664	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00667	50		 push	 eax
  00668	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _pQueryGameServer$13[ebp]
  0066e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00670	52		 push	 edx
  00671	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00674	83 c1 24	 add	 ecx, 36			; 00000024H
  00677	e8 00 00 00 00	 call	 ?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z ; CGlobalInfoManager::GetFreeServer
  0067c	89 85 08 ff ff
	ff		 mov	 DWORD PTR _dwServerID$12[ebp], eax

; 699  : 				bCanCreateRoom = true;

  00682	c6 85 07 ff ff
	ff 01		 mov	 BYTE PTR _bCanCreateRoom$11[ebp], 1

; 700  : 
; 701  : 				if (dwServerID == 0)

  00689	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR _dwServerID$12[ebp], 0
  00690	75 17		 jne	 SHORT $LN24@OnTCPNetwo

; 702  : 				{
; 703  : 					lstrcpyn(QueryGameServerResult.szErrDescrybe, TEXT("房主必须参与游戏模式下只能创建一个房间，或游戏服务器创建私人房间已满！"),  sizeof(QueryGameServerResult.szErrDescrybe));

  00692	68 04 01 00 00	 push	 260			; 00000104H
  00697	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@JNADOHAP@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@
  0069c	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$10[ebp+13]
  006a2	50		 push	 eax
  006a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN24@OnTCPNetwo:

; 704  : 				}
; 705  : 			}
; 706  : 			else

  006a9	eb 17		 jmp	 SHORT $LN23@OnTCPNetwo
$LN22@OnTCPNetwo:

; 707  : 			{
; 708  : 				lstrcpyn(QueryGameServerResult.szErrDescrybe, TEXT("已经达到创建私人房间的最大数，不能再创建房间！"),  sizeof(QueryGameServerResult.szErrDescrybe));

  006ab	68 04 01 00 00	 push	 260			; 00000104H
  006b0	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LAAPCNIF@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?K?$LN?H?K?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@
  006b5	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$10[ebp+13]
  006bb	50		 push	 eax
  006bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN23@OnTCPNetwo:

; 709  : 			}
; 710  : 
; 711  : 			//构造数据
; 712  : 			QueryGameServerResult.dwSocketID = pQueryGameServer->dwSocketID;

  006c2	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$13[ebp]
  006c8	8b 48 09	 mov	 ecx, DWORD PTR [eax+9]
  006cb	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _QueryGameServerResult$10[ebp], ecx

; 713  : 			QueryGameServerResult.dwClientAddr = pQueryGameServer->dwClientAddr;

  006d1	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$13[ebp]
  006d7	8b 48 0d	 mov	 ecx, DWORD PTR [eax+13]
  006da	89 8d f4 fd ff
	ff		 mov	 DWORD PTR _QueryGameServerResult$10[ebp+4], ecx

; 714  : 			QueryGameServerResult.dwServerID = dwServerID;

  006e0	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _dwServerID$12[ebp]
  006e6	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _QueryGameServerResult$10[ebp+8], eax

; 715  : 			QueryGameServerResult.bCanCreateRoom= bCanCreateRoom;

  006ec	8a 85 07 ff ff
	ff		 mov	 al, BYTE PTR _bCanCreateRoom$11[ebp]
  006f2	88 85 fc fd ff
	ff		 mov	 BYTE PTR _QueryGameServerResult$10[ebp+12], al

; 716  : 
; 717  : 
; 718  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_QUERY_GAME_SERVER_RESULT, &QueryGameServerResult, sizeof(CMD_CS_S_QueryGameServerResult));

  006f8	68 11 01 00 00	 push	 273			; 00000111H
  006fd	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$10[ebp]
  00703	50		 push	 eax
  00704	68 86 00 00 00	 push	 134			; 00000086H
  00709	6a 02		 push	 2
  0070b	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0070e	51		 push	 ecx
  0070f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00712	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00718	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0071b	8b 10		 mov	 edx, DWORD PTR [eax]
  0071d	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00723	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00726	ff d0		 call	 eax

; 719  : 
; 720  : 			return true;

  00728	b0 01		 mov	 al, 1
  0072a	e9 f2 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN25@OnTCPNetwo:

; 721  : 		}
; 722  : 	case SUB_CS_C_CREATE_TABLE:		//创建桌子
; 723  : 		{
; 724  : 			//校验数据
; 725  : 			ASSERT(wDataSize == sizeof(CMD_CS_C_CreateTable));

  0072f	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00733	3d ef 00 00 00	 cmp	 eax, 239		; 000000efH
  00738	74 1c		 je	 SHORT $LN41@OnTCPNetwo
  0073a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00740	81 c1 d8 00 00
	00		 add	 ecx, 216		; 000000d8H
  00746	51		 push	 ecx
  00747	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0074c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00751	85 c0		 test	 eax, eax
  00753	74 01		 je	 SHORT $LN41@OnTCPNetwo
  00755	cc		 int	 3
$LN41@OnTCPNetwo:

; 726  : 			if(wDataSize != sizeof(CMD_CS_C_CreateTable)) return false;

  00756	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0075a	3d ef 00 00 00	 cmp	 eax, 239		; 000000efH
  0075f	74 07		 je	 SHORT $LN26@OnTCPNetwo
  00761	32 c0		 xor	 al, al
  00763	e9 b9 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN26@OnTCPNetwo:

; 727  : 
; 728  : 			CMD_CS_C_CreateTable* pCreateTable = (CMD_CS_C_CreateTable*)pData;

  00768	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0076b	89 85 ec fd ff
	ff		 mov	 DWORD PTR _pCreateTable$9[ebp], eax

; 729  : 
; 730  : 			//生成ID
; 731  : 			TCHAR szServerID[7] = TEXT("");

  00771	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00776	88 85 e4 fd ff
	ff		 mov	 BYTE PTR _szServerID$8[ebp], al
  0077c	33 c0		 xor	 eax, eax
  0077e	89 85 e5 fd ff
	ff		 mov	 DWORD PTR _szServerID$8[ebp+1], eax
  00784	66 89 85 e9 fd
	ff ff		 mov	 WORD PTR _szServerID$8[ebp+5], ax

; 732  : 			m_GlobalInfoManager.RandServerID(szServerID, 6);

  0078b	6a 06		 push	 6
  0078d	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szServerID$8[ebp]
  00793	50		 push	 eax
  00794	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00797	83 c1 24	 add	 ecx, 36			; 00000024H
  0079a	e8 00 00 00 00	 call	 ?RandServerID@CGlobalInfoManager@@QAEXPADG@Z ; CGlobalInfoManager::RandServerID

; 733  : 
; 734  : 			lstrcpyn(pCreateTable->PersonalTable.szRoomID, szServerID, CountArray(pCreateTable->PersonalTable.szRoomID));

  0079f	6a 07		 push	 7
  007a1	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szServerID$8[ebp]
  007a7	50		 push	 eax
  007a8	8b 8d ec fd ff
	ff		 mov	 ecx, DWORD PTR _pCreateTable$9[ebp]
  007ae	83 c1 42	 add	 ecx, 66			; 00000042H
  007b1	51		 push	 ecx
  007b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 735  : 			//汇总桌子
; 736  : 			m_GlobalInfoManager.AddServerTable(szServerID, pCreateTable->PersonalTable);

  007b8	8b b5 ec fd ff
	ff		 mov	 esi, DWORD PTR _pCreateTable$9[ebp]
  007be	83 c6 1e	 add	 esi, 30			; 0000001eH
  007c1	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  007c7	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  007cc	8b fc		 mov	 edi, esp
  007ce	f3 a5		 rep movsd
  007d0	a4		 movsb
  007d1	51		 push	 ecx
  007d2	8b cc		 mov	 ecx, esp
  007d4	89 a5 cc f7 ff
	ff		 mov	 DWORD PTR $T1[ebp], esp
  007da	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szServerID$8[ebp]
  007e0	50		 push	 eax
  007e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  007e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ea	83 c1 24	 add	 ecx, 36			; 00000024H
  007ed	e8 00 00 00 00	 call	 ?AddServerTable@CGlobalInfoManager@@QAE_NV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@UtagPersonalTableInfo@@@Z ; CGlobalInfoManager::AddServerTable

; 737  : 			m_GlobalInfoManager.RemoveFreeServerTable(pCreateTable->PersonalTable.dwServerID);

  007f2	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  007f8	8b 48 1e	 mov	 ecx, DWORD PTR [eax+30]
  007fb	51		 push	 ecx
  007fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	83 c1 24	 add	 ecx, 36			; 00000024H
  00802	e8 00 00 00 00	 call	 ?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::RemoveFreeServerTable

; 738  : 
; 739  : 			//构造数据
; 740  : 			CMD_CS_S_CreateTableResult CreateTableResult;
; 741  : 			ZeroMemory(&CreateTableResult, sizeof(CMD_CS_S_CreateTableResult));

  00807	68 ef 00 00 00	 push	 239			; 000000efH
  0080c	6a 00		 push	 0
  0080e	8d 85 f4 fc ff
	ff		 lea	 eax, DWORD PTR _CreateTableResult$7[ebp]
  00814	50		 push	 eax
  00815	e8 00 00 00 00	 call	 _memset
  0081a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 742  : 
; 743  : 			CreateTableResult.dwSocketID = pCreateTable->dwSocketID;

  0081d	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  00823	8b 08		 mov	 ecx, DWORD PTR [eax]
  00825	89 8d f4 fc ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp], ecx

; 744  : 			CreateTableResult.PersonalTable.dwTableID = pCreateTable->PersonalTable.dwTableID;

  0082b	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  00831	8b 48 26	 mov	 ecx, DWORD PTR [eax+38]
  00834	89 8d 1a fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+38], ecx

; 745  : 			CreateTableResult.PersonalTable.dwServerID = pCreateTable->PersonalTable.dwServerID;

  0083a	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  00840	8b 48 1e	 mov	 ecx, DWORD PTR [eax+30]
  00843	89 8d 12 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+30], ecx

; 746  : 			CreateTableResult.PersonalTable.dwKindID = pCreateTable->PersonalTable.dwKindID;

  00849	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  0084f	8b 48 22	 mov	 ecx, DWORD PTR [eax+34]
  00852	89 8d 16 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+34], ecx

; 747  : 			CreateTableResult.PersonalTable.dwUserID = pCreateTable->PersonalTable.dwUserID;

  00858	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  0085e	8b 48 2a	 mov	 ecx, DWORD PTR [eax+42]
  00861	89 8d 1e fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+42], ecx

; 748  : 			CreateTableResult.PersonalTable.lCellScore = pCreateTable->PersonalTable.lCellScore;

  00867	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  0086d	8b 48 36	 mov	 ecx, DWORD PTR [eax+54]
  00870	89 8d 2a fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+54], ecx
  00876	8b 50 3a	 mov	 edx, DWORD PTR [eax+58]
  00879	89 95 2e fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+58], edx

; 749  : 			CreateTableResult.PersonalTable.dwDrawTimeLimit = pCreateTable->PersonalTable.dwDrawTimeLimit;

  0087f	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  00885	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00888	89 8d 26 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+50], ecx

; 750  : 			CreateTableResult.PersonalTable.dwDrawCountLimit = pCreateTable->PersonalTable.dwDrawCountLimit;

  0088e	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  00894	8b 48 2e	 mov	 ecx, DWORD PTR [eax+46]
  00897	89 8d 22 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+46], ecx

; 751  : 			lstrcpyn(CreateTableResult.PersonalTable.szRoomID, szServerID, CountArray(CreateTableResult.PersonalTable.szRoomID));

  0089d	6a 07		 push	 7
  0089f	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szServerID$8[ebp]
  008a5	50		 push	 eax
  008a6	8d 8d 36 fd ff
	ff		 lea	 ecx, DWORD PTR _CreateTableResult$7[ebp+66]
  008ac	51		 push	 ecx
  008ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 752  : 			lstrcpyn(CreateTableResult.PersonalTable.szPassword, pCreateTable->PersonalTable.szPassword, CountArray(CreateTableResult.PersonalTable.szPassword));

  008b3	6a 21		 push	 33			; 00000021H
  008b5	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  008bb	83 c0 4f	 add	 eax, 79			; 0000004fH
  008be	50		 push	 eax
  008bf	8d 8d 43 fd ff
	ff		 lea	 ecx, DWORD PTR _CreateTableResult$7[ebp+79]
  008c5	51		 push	 ecx
  008c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 753  : 			lstrcpyn(CreateTableResult.szClientAddr, pCreateTable->szClientAddr, CountArray(CreateTableResult.szClientAddr));

  008cc	6a 10		 push	 16			; 00000010H
  008ce	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  008d4	83 c0 08	 add	 eax, 8
  008d7	50		 push	 eax
  008d8	8d 8d fc fc ff
	ff		 lea	 ecx, DWORD PTR _CreateTableResult$7[ebp+8]
  008de	51		 push	 ecx
  008df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 754  : 			CreateTableResult.PersonalTable.wJoinGamePeopleCount = pCreateTable->PersonalTable.wJoinGamePeopleCount;

  008e5	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  008eb	66 8b 48 4d	 mov	 cx, WORD PTR [eax+77]
  008ef	66 89 8d 41 fd
	ff ff		 mov	 WORD PTR _CreateTableResult$7[ebp+77], cx

; 755  : 			CreateTableResult.PersonalTable.dwRoomTax = pCreateTable->PersonalTable.dwRoomTax;

  008f6	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$9[ebp]
  008fc	8b 48 49	 mov	 ecx, DWORD PTR [eax+73]
  008ff	89 8d 3d fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$7[ebp+73], ecx

; 756  : 
; 757  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_CREATE_TABLE_RESULT, &CreateTableResult, sizeof(CMD_CS_S_CreateTableResult));

  00905	68 ef 00 00 00	 push	 239			; 000000efH
  0090a	8d 85 f4 fc ff
	ff		 lea	 eax, DWORD PTR _CreateTableResult$7[ebp]
  00910	50		 push	 eax
  00911	68 88 00 00 00	 push	 136			; 00000088H
  00916	6a 02		 push	 2
  00918	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0091b	51		 push	 ecx
  0091c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0091f	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00925	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00928	8b 10		 mov	 edx, DWORD PTR [eax]
  0092a	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00930	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00933	ff d0		 call	 eax

; 758  : 
; 759  : 
; 760  : 			return true;

  00935	b0 01		 mov	 al, 1
  00937	e9 e5 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN27@OnTCPNetwo:

; 761  : 		}
; 762  : 	case SUB_CS_C_DISMISS_TABLE:		//解散桌子
; 763  : 		{
; 764  : 			//校验数据
; 765  : 			ASSERT(wDataSize == sizeof(CMD_CS_C_DismissTable));

  0093c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00940	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00943	74 1c		 je	 SHORT $LN42@OnTCPNetwo
  00945	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0094b	81 c1 00 01 00
	00		 add	 ecx, 256		; 00000100H
  00951	51		 push	 ecx
  00952	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00957	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0095c	85 c0		 test	 eax, eax
  0095e	74 01		 je	 SHORT $LN42@OnTCPNetwo
  00960	cc		 int	 3
$LN42@OnTCPNetwo:

; 766  : 			if(wDataSize != sizeof(CMD_CS_C_DismissTable)) return false;

  00961	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00965	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00968	74 07		 je	 SHORT $LN28@OnTCPNetwo
  0096a	32 c0		 xor	 al, al
  0096c	e9 b0 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN28@OnTCPNetwo:

; 767  : 
; 768  : 			CMD_CS_C_DismissTable* pDismissTable = (CMD_CS_C_DismissTable*)pData;

  00971	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00974	89 85 f0 fc ff
	ff		 mov	 DWORD PTR _pDismissTable$6[ebp], eax

; 769  : 
; 770  : 			tagPersonalTableInfo * pPersonalTableInfo = m_GlobalInfoManager.SearchTableByTableIDAndServerID(pDismissTable->dwServerID, pDismissTable->dwTableID);

  0097a	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$6[ebp]
  00980	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00983	51		 push	 ecx
  00984	8b 95 f0 fc ff
	ff		 mov	 edx, DWORD PTR _pDismissTable$6[ebp]
  0098a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0098d	50		 push	 eax
  0098e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00991	83 c1 24	 add	 ecx, 36			; 00000024H
  00994	e8 00 00 00 00	 call	 ?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z ; CGlobalInfoManager::SearchTableByTableIDAndServerID
  00999	89 85 ec fc ff
	ff		 mov	 DWORD PTR _pPersonalTableInfo$5[ebp], eax

; 771  : 			if (pPersonalTableInfo == NULL)

  0099f	83 bd ec fc ff
	ff 00		 cmp	 DWORD PTR _pPersonalTableInfo$5[ebp], 0
  009a6	75 07		 jne	 SHORT $LN29@OnTCPNetwo

; 772  : 			{
; 773  : 				return true;

  009a8	b0 01		 mov	 al, 1
  009aa	e9 72 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN29@OnTCPNetwo:

; 774  : 			}
; 775  : 
; 776  : 			CMD_CS_C_DismissTableResult  DismissTableResult;

  009af	8d 8d 34 fa ff
	ff		 lea	 ecx, DWORD PTR _DismissTableResult$4[ebp]
  009b5	e8 00 00 00 00	 call	 ??0CMD_CS_C_DismissTableResult@@QAE@XZ

; 777  : 			DismissTableResult.dwSocketID = pDismissTable->dwSocketID;

  009ba	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$6[ebp]
  009c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  009c2	89 8d 34 fa ff
	ff		 mov	 DWORD PTR _DismissTableResult$4[ebp], ecx

; 778  : 			memcpy(&DismissTableResult.PersonalTableInfo, pPersonalTableInfo, sizeof(tagPersonalTableInfo));

  009c8	68 d1 00 00 00	 push	 209			; 000000d1H
  009cd	8b 85 ec fc ff
	ff		 mov	 eax, DWORD PTR _pPersonalTableInfo$5[ebp]
  009d3	50		 push	 eax
  009d4	8d 8d 38 fa ff
	ff		 lea	 ecx, DWORD PTR _DismissTableResult$4[ebp+4]
  009da	51		 push	 ecx
  009db	e8 00 00 00 00	 call	 _memcpy
  009e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 779  : 
; 780  : 			//汇总桌子
; 781  : 			m_GlobalInfoManager.RemoveServerTable(pDismissTable->dwServerID, pDismissTable->dwTableID);

  009e3	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$6[ebp]
  009e9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  009ec	51		 push	 ecx
  009ed	8b 95 f0 fc ff
	ff		 mov	 edx, DWORD PTR _pDismissTable$6[ebp]
  009f3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  009f6	50		 push	 eax
  009f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009fa	83 c1 24	 add	 ecx, 36			; 00000024H
  009fd	e8 00 00 00 00	 call	 ?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z ; CGlobalInfoManager::RemoveServerTable

; 782  : 			m_GlobalInfoManager.AddFreeServerTable(pDismissTable->dwServerID);

  00a02	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$6[ebp]
  00a08	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a0b	51		 push	 ecx
  00a0c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a0f	83 c1 24	 add	 ecx, 36			; 00000024H
  00a12	e8 00 00 00 00	 call	 ?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::AddFreeServerTable

; 783  : 
; 784  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_C_DISMISS_TABLE_RESULT, &DismissTableResult, sizeof(CMD_CS_C_DismissTableResult));

  00a17	68 b5 02 00 00	 push	 693			; 000002b5H
  00a1c	8d 85 34 fa ff
	ff		 lea	 eax, DWORD PTR _DismissTableResult$4[ebp]
  00a22	50		 push	 eax
  00a23	68 8a 00 00 00	 push	 138			; 0000008aH
  00a28	6a 02		 push	 2
  00a2a	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00a2d	51		 push	 ecx
  00a2e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00a31	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00a37	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a3a	8b 10		 mov	 edx, DWORD PTR [eax]
  00a3c	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00a42	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00a45	ff d0		 call	 eax

; 785  : 
; 786  : 			return true;

  00a47	b0 01		 mov	 al, 1
  00a49	e9 d3 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN30@OnTCPNetwo:

; 787  : 		}
; 788  : 	case SUB_CS_S_QUERY_PERSONAL_ROOM_LIST:		//请求房间列表
; 789  : 		{
; 790  : 			//校验数据
; 791  : 			ASSERT(wDataSize == sizeof(CMD_MB_SC_QeuryPersonalRoomList));

  00a4e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00a52	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00a55	74 1c		 je	 SHORT $LN43@OnTCPNetwo
  00a57	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00a5d	81 c1 1a 01 00
	00		 add	 ecx, 282		; 0000011aH
  00a63	51		 push	 ecx
  00a64	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00a69	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00a6e	85 c0		 test	 eax, eax
  00a70	74 01		 je	 SHORT $LN43@OnTCPNetwo
  00a72	cc		 int	 3
$LN43@OnTCPNetwo:

; 792  : 			if(wDataSize != sizeof(CMD_MB_SC_QeuryPersonalRoomList)) return false;

  00a73	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00a77	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00a7a	74 07		 je	 SHORT $LN31@OnTCPNetwo
  00a7c	32 c0		 xor	 al, al
  00a7e	e9 9e 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN31@OnTCPNetwo:

; 793  : 
; 794  : 			CMD_MB_SC_QeuryPersonalRoomList * QeuryPersonalRoomList = (CMD_MB_SC_QeuryPersonalRoomList * ) pData;

  00a83	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00a86	89 85 30 fa ff
	ff		 mov	 DWORD PTR _QeuryPersonalRoomList$3[ebp], eax

; 795  : 
; 796  : 			CMD_CS_C_HostCreatRoomInfo  cmdHostCreatRoomInfo;

  00a8c	8d 8d d0 f8 ff
	ff		 lea	 ecx, DWORD PTR _cmdHostCreatRoomInfo$2[ebp]
  00a92	e8 00 00 00 00	 call	 ??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ

; 797  : 			ZeroMemory(&cmdHostCreatRoomInfo,  sizeof(CMD_CS_C_HostCreatRoomInfo));

  00a97	68 60 01 00 00	 push	 352			; 00000160H
  00a9c	6a 00		 push	 0
  00a9e	8d 85 d0 f8 ff
	ff		 lea	 eax, DWORD PTR _cmdHostCreatRoomInfo$2[ebp]
  00aa4	50		 push	 eax
  00aa5	e8 00 00 00 00	 call	 _memset
  00aaa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 798  : 
; 799  : 			cmdHostCreatRoomInfo.wSocketID = QeuryPersonalRoomList->dwSocketID;

  00aad	8b 85 30 fa ff
	ff		 mov	 eax, DWORD PTR _QeuryPersonalRoomList$3[ebp]
  00ab3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ab6	89 8d d0 f8 ff
	ff		 mov	 DWORD PTR _cmdHostCreatRoomInfo$2[ebp], ecx

; 800  : 			cmdHostCreatRoomInfo.HostCreatRoomInfo.dwUserID = QeuryPersonalRoomList->dwUserID;

  00abc	8b 85 30 fa ff
	ff		 mov	 eax, DWORD PTR _QeuryPersonalRoomList$3[ebp]
  00ac2	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ac4	89 8d d4 f8 ff
	ff		 mov	 DWORD PTR _cmdHostCreatRoomInfo$2[ebp+4], ecx

; 801  : 			cmdHostCreatRoomInfo.HostCreatRoomInfo.dwKindID = QeuryPersonalRoomList->dwKindID;

  00aca	8b 85 30 fa ff
	ff		 mov	 eax, DWORD PTR _QeuryPersonalRoomList$3[ebp]
  00ad0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00ad3	89 8d d8 f8 ff
	ff		 mov	 DWORD PTR _cmdHostCreatRoomInfo$2[ebp+8], ecx

; 802  : 			m_GlobalInfoManager.GetHostCreatePersonalRoom(cmdHostCreatRoomInfo.HostCreatRoomInfo);

  00ad9	8d 85 d4 f8 ff
	ff		 lea	 eax, DWORD PTR _cmdHostCreatRoomInfo$2[ebp+4]
  00adf	50		 push	 eax
  00ae0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae3	83 c1 24	 add	 ecx, 36			; 00000024H
  00ae6	e8 00 00 00 00	 call	 ?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z ; CGlobalInfoManager::GetHostCreatePersonalRoom

; 803  : 
; 804  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_C_QUERY_PERSONAL_ROOM_LIST_RESULT, &cmdHostCreatRoomInfo, sizeof(CMD_CS_C_HostCreatRoomInfo));

  00aeb	68 60 01 00 00	 push	 352			; 00000160H
  00af0	8d 85 d0 f8 ff
	ff		 lea	 eax, DWORD PTR _cmdHostCreatRoomInfo$2[ebp]
  00af6	50		 push	 eax
  00af7	68 8d 00 00 00	 push	 141			; 0000008dH
  00afc	6a 02		 push	 2
  00afe	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00b01	51		 push	 ecx
  00b02	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00b05	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00b0b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0e	8b 10		 mov	 edx, DWORD PTR [eax]
  00b10	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00b16	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00b19	ff d0		 call	 eax

; 805  : 
; 806  : 			return true;

  00b1b	b0 01		 mov	 al, 1
  00b1d	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 807  : 		}
; 808  : 	}
; 809  : 
; 810  : 	return false;

  00b1f	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 811  : }

  00b21	5f		 pop	 edi
  00b22	5e		 pop	 esi
  00b23	5b		 pop	 ebx
  00b24	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b27	33 cd		 xor	 ecx, ebp
  00b29	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b2e	8b e5		 mov	 esp, ebp
  00b30	5d		 pop	 ebp
  00b31	c2 10 00	 ret	 16			; 00000010H
$LN46@OnTCPNetwo:
  00b34	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  00b38	00 00 00 00	 DD	 $LN8@OnTCPNetwo
  00b3c	00 00 00 00	 DD	 $LN12@OnTCPNetwo
  00b40	00 00 00 00	 DD	 $LN20@OnTCPNetwo
  00b44	00 00 00 00	 DD	 $LN25@OnTCPNetwo
  00b48	00 00 00 00	 DD	 $LN27@OnTCPNetwo
  00b4c	00 00 00 00	 DD	 $LN30@OnTCPNetwo
  00b50	00 00 00 00	 DD	 $LN16@OnTCPNetwo
  00b54	00 00 00 00	 DD	 $LN2@OnTCPNetwo
$LN45@OnTCPNetwo:
  00b58	00		 DB	 0
  00b59	01		 DB	 1
  00b5a	08		 DB	 8
  00b5b	08		 DB	 8
  00b5c	08		 DB	 8
  00b5d	08		 DB	 8
  00b5e	08		 DB	 8
  00b5f	08		 DB	 8
  00b60	08		 DB	 8
  00b61	08		 DB	 8
  00b62	08		 DB	 8
  00b63	08		 DB	 8
  00b64	08		 DB	 8
  00b65	08		 DB	 8
  00b66	08		 DB	 8
  00b67	08		 DB	 8
  00b68	08		 DB	 8
  00b69	08		 DB	 8
  00b6a	08		 DB	 8
  00b6b	08		 DB	 8
  00b6c	08		 DB	 8
  00b6d	08		 DB	 8
  00b6e	08		 DB	 8
  00b6f	08		 DB	 8
  00b70	08		 DB	 8
  00b71	08		 DB	 8
  00b72	08		 DB	 8
  00b73	08		 DB	 8
  00b74	08		 DB	 8
  00b75	08		 DB	 8
  00b76	08		 DB	 8
  00b77	08		 DB	 8
  00b78	08		 DB	 8
  00b79	08		 DB	 8
  00b7a	08		 DB	 8
  00b7b	08		 DB	 8
  00b7c	08		 DB	 8
  00b7d	08		 DB	 8
  00b7e	08		 DB	 8
  00b7f	08		 DB	 8
  00b80	08		 DB	 8
  00b81	08		 DB	 8
  00b82	08		 DB	 8
  00b83	08		 DB	 8
  00b84	08		 DB	 8
  00b85	08		 DB	 8
  00b86	08		 DB	 8
  00b87	08		 DB	 8
  00b88	08		 DB	 8
  00b89	08		 DB	 8
  00b8a	08		 DB	 8
  00b8b	08		 DB	 8
  00b8c	08		 DB	 8
  00b8d	08		 DB	 8
  00b8e	08		 DB	 8
  00b8f	08		 DB	 8
  00b90	08		 DB	 8
  00b91	08		 DB	 8
  00b92	08		 DB	 8
  00b93	08		 DB	 8
  00b94	08		 DB	 8
  00b95	08		 DB	 8
  00b96	08		 DB	 8
  00b97	08		 DB	 8
  00b98	08		 DB	 8
  00b99	08		 DB	 8
  00b9a	08		 DB	 8
  00b9b	08		 DB	 8
  00b9c	08		 DB	 8
  00b9d	08		 DB	 8
  00b9e	08		 DB	 8
  00b9f	08		 DB	 8
  00ba0	08		 DB	 8
  00ba1	08		 DB	 8
  00ba2	08		 DB	 8
  00ba3	08		 DB	 8
  00ba4	08		 DB	 8
  00ba5	08		 DB	 8
  00ba6	08		 DB	 8
  00ba7	08		 DB	 8
  00ba8	08		 DB	 8
  00ba9	08		 DB	 8
  00baa	08		 DB	 8
  00bab	08		 DB	 8
  00bac	08		 DB	 8
  00bad	08		 DB	 8
  00bae	08		 DB	 8
  00baf	08		 DB	 8
  00bb0	08		 DB	 8
  00bb1	08		 DB	 8
  00bb2	08		 DB	 8
  00bb3	08		 DB	 8
  00bb4	08		 DB	 8
  00bb5	08		 DB	 8
  00bb6	08		 DB	 8
  00bb7	08		 DB	 8
  00bb8	08		 DB	 8
  00bb9	08		 DB	 8
  00bba	08		 DB	 8
  00bbb	08		 DB	 8
  00bbc	08		 DB	 8
  00bbd	08		 DB	 8
  00bbe	08		 DB	 8
  00bbf	08		 DB	 8
  00bc0	08		 DB	 8
  00bc1	08		 DB	 8
  00bc2	08		 DB	 8
  00bc3	08		 DB	 8
  00bc4	08		 DB	 8
  00bc5	08		 DB	 8
  00bc6	08		 DB	 8
  00bc7	08		 DB	 8
  00bc8	08		 DB	 8
  00bc9	08		 DB	 8
  00bca	08		 DB	 8
  00bcb	08		 DB	 8
  00bcc	08		 DB	 8
  00bcd	08		 DB	 8
  00bce	08		 DB	 8
  00bcf	08		 DB	 8
  00bd0	08		 DB	 8
  00bd1	08		 DB	 8
  00bd2	08		 DB	 8
  00bd3	08		 DB	 8
  00bd4	08		 DB	 8
  00bd5	08		 DB	 8
  00bd6	08		 DB	 8
  00bd7	08		 DB	 8
  00bd8	08		 DB	 8
  00bd9	08		 DB	 8
  00bda	02		 DB	 2
  00bdb	08		 DB	 8
  00bdc	03		 DB	 3
  00bdd	08		 DB	 8
  00bde	04		 DB	 4
  00bdf	08		 DB	 8
  00be0	05		 DB	 5
  00be1	08		 DB	 8
  00be2	08		 DB	 8
  00be3	06		 DB	 6
  00be4	08		 DB	 8
  00be5	07		 DB	 7
?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -1392						; size = 4
_RegisterPersonal$1 = -1196				; size = 4
_ChatServer$2 = -1192					; size = 10
_wBindIndex$3 = -1180					; size = 2
_GameMatch$4 = -1176					; size = 640
_pGlobalServerItem$5 = -536				; size = 4
_pRegisterMatch$6 = -532				; size = 4
_GameServer$7 = -528					; size = 155
_wBindIndex$8 = -372					; size = 2
_wSendSize$9 = -368					; size = 2
_wStringSize$10 = -364					; size = 2
_RegisterFailure$11 = -360				; size = 132
_pRegisterServer$12 = -228				; size = 4
_GamePlaza$13 = -224					; size = 66
_wBindIndex$14 = -156					; size = 2
_wSendSize$15 = -152					; size = 2
_wStringSize$16 = -148					; size = 2
_RegisterFailure$17 = -144				; size = 132
_pRegisterPlaza$18 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainRegister, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 70 05 00
	00		 sub	 esp, 1392		; 00000570H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 275  : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 90 fa ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	8b 8d 90 fa ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00029	83 e9 64	 sub	 ecx, 100		; 00000064H
  0002c	89 8d 90 fa ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00032	83 bd 90 fa ff
	ff 04		 cmp	 DWORD PTR tv65[ebp], 4
  00039	0f 87 17 09 00
	00		 ja	 $LN2@OnTCPNetwo
  0003f	8b 95 90 fa ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00045	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN24@OnTCPNetwo[edx*4]
$LN4@OnTCPNetwo:

; 276  : 	{
; 277  : 	case SUB_CS_C_REGISTER_PLAZA:	//注册广场
; 278  : 		{
; 279  : 			//效验数据
; 280  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_RegisterPlaza));

  0004c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00050	83 f8 40	 cmp	 eax, 64			; 00000040H
  00053	74 19		 je	 SHORT $LN20@OnTCPNetwo
  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0005b	83 c1 06	 add	 ecx, 6
  0005e	51		 push	 ecx
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00064	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00069	85 c0		 test	 eax, eax
  0006b	74 01		 je	 SHORT $LN20@OnTCPNetwo
  0006d	cc		 int	 3
$LN20@OnTCPNetwo:

; 281  : 			if (wDataSize!=sizeof(CMD_CS_C_RegisterPlaza)) return false;

  0006e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00072	83 f8 40	 cmp	 eax, 64			; 00000040H
  00075	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00077	32 c0		 xor	 al, al
  00079	e9 da 08 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 282  : 
; 283  : 			//消息定义
; 284  : 			CMD_CS_C_RegisterPlaza * pRegisterPlaza=(CMD_CS_C_RegisterPlaza *)pData;

  0007e	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00081	89 45 f4	 mov	 DWORD PTR _pRegisterPlaza$18[ebp], eax

; 285  : 
; 286  : 			//有效判断
; 287  : 			if ((pRegisterPlaza->szServerName[0]==0)||(pRegisterPlaza->szServerAddr[0]==0))

  00084	b8 01 00 00 00	 mov	 eax, 1
  00089	6b c8 00	 imul	 ecx, eax, 0
  0008c	8b 55 f4	 mov	 edx, DWORD PTR _pRegisterPlaza$18[ebp]
  0008f	0f be 44 0a 20	 movsx	 eax, BYTE PTR [edx+ecx+32]
  00094	85 c0		 test	 eax, eax
  00096	74 17		 je	 SHORT $LN7@OnTCPNetwo
  00098	b8 01 00 00 00	 mov	 eax, 1
  0009d	6b c8 00	 imul	 ecx, eax, 0
  000a0	8b 55 f4	 mov	 edx, DWORD PTR _pRegisterPlaza$18[ebp]
  000a3	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  000a7	85 c0		 test	 eax, eax
  000a9	0f 85 b6 00 00
	00		 jne	 $LN6@OnTCPNetwo
$LN7@OnTCPNetwo:

; 288  : 			{
; 289  : 				//变量定义
; 290  : 				CMD_CS_S_RegisterFailure RegisterFailure;
; 291  : 				ZeroMemory(&RegisterFailure,sizeof(RegisterFailure));

  000af	68 84 00 00 00	 push	 132			; 00000084H
  000b4	6a 00		 push	 0
  000b6	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$17[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 _memset
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 292  : 
; 293  : 				//设置变量
; 294  : 				RegisterFailure.lErrorCode=0L;

  000c5	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _RegisterFailure$17[ebp], 0

; 295  : 				lstrcpyn(RegisterFailure.szDescribeString,TEXT("服务器注册失败，“服务地址”与“服务器名”不合法！"),CountArray(RegisterFailure.szDescribeString));

  000cf	68 80 00 00 00	 push	 128			; 00000080H
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@CHBPFBCE@?$LH?$PO?N?q?F?w?W?$KC?$LC?a?J?$KH?$LA?$NM?$KD?$KM?$KB?$LA?$LH?$PO?N?q?$LF?X?V?$LH?$KB?$LB?S?k?$KB@
  000d9	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$17[ebp+4]
  000df	50		 push	 eax
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 296  : 
; 297  : 				//发送消息
; 298  : 				WORD wStringSize=CountStringBuffer(RegisterFailure.szDescribeString);

  000e6	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$17[ebp+4]
  000ec	50		 push	 eax
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000f3	83 c0 01	 add	 eax, 1
  000f6	66 89 85 6c ff
	ff ff		 mov	 WORD PTR _wStringSize$16[ebp], ax

; 299  : 				WORD wSendSize=sizeof(RegisterFailure)-sizeof(RegisterFailure.szDescribeString)+wStringSize;

  000fd	0f b7 85 6c ff
	ff ff		 movzx	 eax, WORD PTR _wStringSize$16[ebp]
  00104	83 c0 04	 add	 eax, 4
  00107	66 89 85 68 ff
	ff ff		 mov	 WORD PTR _wSendSize$15[ebp], ax

; 300  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REGISTER,SUB_CS_S_REGISTER_FAILURE,&RegisterFailure,wSendSize);

  0010e	0f b7 85 68 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$15[ebp]
  00115	50		 push	 eax
  00116	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _RegisterFailure$17[ebp]
  0011c	51		 push	 ecx
  0011d	68 c8 00 00 00	 push	 200			; 000000c8H
  00122	6a 01		 push	 1
  00124	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00127	52		 push	 edx
  00128	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012b	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00131	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00134	8b 01		 mov	 eax, DWORD PTR [ecx]
  00136	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  0013c	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0013f	ff d2		 call	 edx

; 301  : 
; 302  : 				//中断网络
; 303  : 				m_pITCPNetworkEngine->ShutDownSocket(dwSocketID);

  00141	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00144	50		 push	 eax
  00145	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0014e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00151	8b 12		 mov	 edx, DWORD PTR [edx]
  00153	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00159	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0015c	ff d0		 call	 eax

; 304  : 
; 305  : 				return true;

  0015e	b0 01		 mov	 al, 1
  00160	e9 f3 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 306  : 			}
; 307  : 
; 308  : 			//设置绑定
; 309  : 			WORD wBindIndex=LOWORD(dwSocketID);

  00165	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00168	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0016d	66 89 85 64 ff
	ff ff		 mov	 WORD PTR _wBindIndex$14[ebp], ax

; 310  : 			(m_pBindParameter+wBindIndex)->wServiceID=wBindIndex;

  00174	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$14[ebp]
  0017b	6b c8 14	 imul	 ecx, eax, 20
  0017e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00181	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00184	66 8b 95 64 ff
	ff ff		 mov	 dx, WORD PTR _wBindIndex$14[ebp]
  0018b	66 89 54 08 0c	 mov	 WORD PTR [eax+ecx+12], dx

; 311  : 			(m_pBindParameter+wBindIndex)->ServiceKind=ServiceKind_Plaza;

  00190	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$14[ebp]
  00197	6b c8 14	 imul	 ecx, eax, 20
  0019a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0019d	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  001a0	c7 44 08 10 02
	00 00 00	 mov	 DWORD PTR [eax+ecx+16], 2

; 312  : 
; 313  : 			//变量定义
; 314  : 			tagGamePlaza GamePlaza;
; 315  : 			ZeroMemory(&GamePlaza,sizeof(GamePlaza));

  001a8	6a 42		 push	 66			; 00000042H
  001aa	6a 00		 push	 0
  001ac	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _GamePlaza$13[ebp]
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 _memset
  001b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 316  : 
; 317  : 			//构造数据
; 318  : 			GamePlaza.wPlazaID=wBindIndex;

  001bb	66 8b 85 64 ff
	ff ff		 mov	 ax, WORD PTR _wBindIndex$14[ebp]
  001c2	66 89 85 20 ff
	ff ff		 mov	 WORD PTR _GamePlaza$13[ebp], ax

; 319  : 			lstrcpyn(GamePlaza.szServerName,pRegisterPlaza->szServerName,CountArray(GamePlaza.szServerName));

  001c9	6a 20		 push	 32			; 00000020H
  001cb	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterPlaza$18[ebp]
  001ce	83 c0 20	 add	 eax, 32			; 00000020H
  001d1	50		 push	 eax
  001d2	8d 8d 42 ff ff
	ff		 lea	 ecx, DWORD PTR _GamePlaza$13[ebp+34]
  001d8	51		 push	 ecx
  001d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 320  : 			lstrcpyn(GamePlaza.szServerAddr,pRegisterPlaza->szServerAddr,CountArray(GamePlaza.szServerAddr));

  001df	6a 20		 push	 32			; 00000020H
  001e1	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterPlaza$18[ebp]
  001e4	50		 push	 eax
  001e5	8d 8d 22 ff ff
	ff		 lea	 ecx, DWORD PTR _GamePlaza$13[ebp+2]
  001eb	51		 push	 ecx
  001ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 321  : 
; 322  : 			//注册房间
; 323  : 			m_GlobalInfoManager.ActivePlazaItem(wBindIndex,GamePlaza);

  001f2	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _GamePlaza$13[ebp]
  001f8	50		 push	 eax
  001f9	0f b7 8d 64 ff
	ff ff		 movzx	 ecx, WORD PTR _wBindIndex$14[ebp]
  00200	51		 push	 ecx
  00201	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	83 c1 24	 add	 ecx, 36			; 00000024H
  00207	e8 00 00 00 00	 call	 ?ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z ; CGlobalInfoManager::ActivePlazaItem

; 324  : 
; 325  : 			//发送列表
; 326  : 			SendServerListItem(dwSocketID);

  0020c	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	e8 00 00 00 00	 call	 ?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendServerListItem

; 327  : 
; 328  : 			SendMatchListItem(dwSocketID);

  00218	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0021b	50		 push	 eax
  0021c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	e8 00 00 00 00	 call	 ?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendMatchListItem

; 329  : 
; 330  : 			//群发设置
; 331  : 			m_pITCPNetworkEngine->AllowBatchSend(dwSocketID,true,0L);

  00224	6a 00		 push	 0
  00226	6a 01		 push	 1
  00228	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0022b	50		 push	 eax
  0022c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00235	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00238	8b 12		 mov	 edx, DWORD PTR [edx]
  0023a	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00240	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00243	ff d0		 call	 eax

; 332  : 
; 333  : 			return true;

  00245	b0 01		 mov	 al, 1
  00247	e9 0c 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 334  : 		}
; 335  : 	case SUB_CS_C_REGISTER_SERVER:	//注册房间
; 336  : 		{
; 337  : 			//效验数据
; 338  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_RegisterServer));

  0024c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00250	3d 93 00 00 00	 cmp	 eax, 147		; 00000093H
  00255	74 19		 je	 SHORT $LN21@OnTCPNetwo
  00257	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0025d	83 c1 40	 add	 ecx, 64			; 00000040H
  00260	51		 push	 ecx
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00266	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0026b	85 c0		 test	 eax, eax
  0026d	74 01		 je	 SHORT $LN21@OnTCPNetwo
  0026f	cc		 int	 3
$LN21@OnTCPNetwo:

; 339  : 			if (wDataSize!=sizeof(CMD_CS_C_RegisterServer)) return false;

  00270	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00274	3d 93 00 00 00	 cmp	 eax, 147		; 00000093H
  00279	74 07		 je	 SHORT $LN9@OnTCPNetwo
  0027b	32 c0		 xor	 al, al
  0027d	e9 d6 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 340  : 
; 341  : 			//消息定义
; 342  : 			CMD_CS_C_RegisterServer * pRegisterServer=(CMD_CS_C_RegisterServer *)pData;

  00282	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00285	89 85 1c ff ff
	ff		 mov	 DWORD PTR _pRegisterServer$12[ebp], eax

; 343  : 
; 344  : 			//查找房间
; 345  : 			if (m_GlobalInfoManager.SearchServerItem(pRegisterServer->wServerID)!=NULL)

  0028b	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00291	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00295	51		 push	 ecx
  00296	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00299	83 c1 24	 add	 ecx, 36			; 00000024H
  0029c	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  002a1	85 c0		 test	 eax, eax
  002a3	0f 84 b6 00 00
	00		 je	 $LN10@OnTCPNetwo

; 346  : 			{
; 347  : 				//变量定义
; 348  : 				CMD_CS_S_RegisterFailure RegisterFailure;
; 349  : 				ZeroMemory(&RegisterFailure,sizeof(RegisterFailure));

  002a9	68 84 00 00 00	 push	 132			; 00000084H
  002ae	6a 00		 push	 0
  002b0	8d 85 98 fe ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$11[ebp]
  002b6	50		 push	 eax
  002b7	e8 00 00 00 00	 call	 _memset
  002bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 350  : 
; 351  : 				//设置变量
; 352  : 				RegisterFailure.lErrorCode=0L;

  002bf	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _RegisterFailure$11[ebp], 0

; 353  : 				lstrcpyn(RegisterFailure.szDescribeString,TEXT("已经存在相同标识的游戏房间服务，房间服务注册失败"),CountArray(RegisterFailure.szDescribeString));

  002c9	68 80 00 00 00	 push	 128			; 00000080H
  002ce	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@
  002d3	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$11[ebp+4]
  002d9	50		 push	 eax
  002da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 354  : 
; 355  : 				//发送消息
; 356  : 				WORD wStringSize=CountStringBuffer(RegisterFailure.szDescribeString);

  002e0	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$11[ebp+4]
  002e6	50		 push	 eax
  002e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  002ed	83 c0 01	 add	 eax, 1
  002f0	66 89 85 94 fe
	ff ff		 mov	 WORD PTR _wStringSize$10[ebp], ax

; 357  : 				WORD wSendSize=sizeof(RegisterFailure)-sizeof(RegisterFailure.szDescribeString)+wStringSize;

  002f7	0f b7 85 94 fe
	ff ff		 movzx	 eax, WORD PTR _wStringSize$10[ebp]
  002fe	83 c0 04	 add	 eax, 4
  00301	66 89 85 90 fe
	ff ff		 mov	 WORD PTR _wSendSize$9[ebp], ax

; 358  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REGISTER,SUB_CS_S_REGISTER_FAILURE,&RegisterFailure,wSendSize);

  00308	0f b7 85 90 fe
	ff ff		 movzx	 eax, WORD PTR _wSendSize$9[ebp]
  0030f	50		 push	 eax
  00310	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _RegisterFailure$11[ebp]
  00316	51		 push	 ecx
  00317	68 c8 00 00 00	 push	 200			; 000000c8H
  0031c	6a 01		 push	 1
  0031e	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00321	52		 push	 edx
  00322	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00325	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0032b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0032e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00330	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00336	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00339	ff d2		 call	 edx

; 359  : 
; 360  : 				//中断网络
; 361  : 				m_pITCPNetworkEngine->ShutDownSocket(dwSocketID);

  0033b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0033e	50		 push	 eax
  0033f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00342	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00348	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0034b	8b 12		 mov	 edx, DWORD PTR [edx]
  0034d	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00353	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00356	ff d0		 call	 eax

; 362  : 
; 363  : 				return true;

  00358	b0 01		 mov	 al, 1
  0035a	e9 f9 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 364  : 			}
; 365  : 
; 366  : 			//设置绑定
; 367  : 			WORD wBindIndex=LOWORD(dwSocketID);

  0035f	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00362	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00367	66 89 85 8c fe
	ff ff		 mov	 WORD PTR _wBindIndex$8[ebp], ax

; 368  : 			(m_pBindParameter+wBindIndex)->ServiceKind=ServiceKind_Game;

  0036e	0f b7 85 8c fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$8[ebp]
  00375	6b c8 14	 imul	 ecx, eax, 20
  00378	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0037b	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0037e	c7 44 08 10 01
	00 00 00	 mov	 DWORD PTR [eax+ecx+16], 1

; 369  : 			(m_pBindParameter+wBindIndex)->wServiceID=pRegisterServer->wServerID;

  00386	0f b7 85 8c fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$8[ebp]
  0038d	6b c8 14	 imul	 ecx, eax, 20
  00390	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00393	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00396	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR _pRegisterServer$12[ebp]
  0039c	66 8b 52 06	 mov	 dx, WORD PTR [edx+6]
  003a0	66 89 54 08 0c	 mov	 WORD PTR [eax+ecx+12], dx

; 370  : 
; 371  : 			//变量定义
; 372  : 			tagGameServer GameServer;
; 373  : 			ZeroMemory(&GameServer,sizeof(GameServer));

  003a5	68 9b 00 00 00	 push	 155			; 0000009bH
  003aa	6a 00		 push	 0
  003ac	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _GameServer$7[ebp]
  003b2	50		 push	 eax
  003b3	e8 00 00 00 00	 call	 _memset
  003b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 374  : 
; 375  : 			//构造数据
; 376  : 			GameServer.wKindID=pRegisterServer->wKindID;

  003bb	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  003c1	66 8b 08	 mov	 cx, WORD PTR [eax]
  003c4	66 89 8d f0 fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp], cx

; 377  : 			GameServer.wNodeID=pRegisterServer->wNodeID;

  003cb	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  003d1	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  003d5	66 89 8d f2 fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+2], cx

; 378  : 			GameServer.wSortID=pRegisterServer->wSortID;

  003dc	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  003e2	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  003e6	66 89 8d f4 fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+4], cx

; 379  : 			GameServer.wServerID=pRegisterServer->wServerID;

  003ed	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  003f3	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  003f7	66 89 8d f6 fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+6], cx

; 380  : 			GameServer.wServerKind=pRegisterServer->wServerKind;

  003fe	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00404	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00408	66 89 8d f8 fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+8], cx

; 381  : 			GameServer.wServerType=pRegisterServer->wServerType;

  0040f	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00415	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00419	66 89 8d fa fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+10], cx

; 382  : 			GameServer.wServerLevel=pRegisterServer->wServerLevel;

  00420	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00426	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  0042a	66 89 8d fc fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+12], cx

; 383  : 			GameServer.wServerPort=pRegisterServer->wServerPort;

  00431	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00437	66 8b 48 0e	 mov	 cx, WORD PTR [eax+14]
  0043b	66 89 8d fe fd
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+14], cx

; 384  : 			GameServer.lCellScore=pRegisterServer->lCellScore;

  00442	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00448	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0044b	89 8d 00 fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+16], ecx
  00451	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00454	89 95 04 fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+20], edx

; 385  : 			GameServer.cbEnterMember=pRegisterServer->cbEnterMember;

  0045a	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00460	8a 48 20	 mov	 cl, BYTE PTR [eax+32]
  00463	88 8d 08 fe ff
	ff		 mov	 BYTE PTR _GameServer$7[ebp+24], cl

; 386  : 			GameServer.lEnterScore=pRegisterServer->lEnterScore;

  00469	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  0046f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00472	89 8d 09 fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+25], ecx
  00478	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0047b	89 95 0d fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+29], edx

; 387  : 			GameServer.dwServerRule=pRegisterServer->dwServerRule;

  00481	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00487	8b 48 2b	 mov	 ecx, DWORD PTR [eax+43]
  0048a	89 8d 11 fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+33], ecx

; 388  : 			GameServer.dwOnLineCount=pRegisterServer->dwOnLineCount;

  00490	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00496	8b 48 21	 mov	 ecx, DWORD PTR [eax+33]
  00499	89 8d 15 fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+37], ecx

; 389  : 			GameServer.dwFullCount=pRegisterServer->dwFullCount;

  0049f	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  004a5	8b 48 25	 mov	 ecx, DWORD PTR [eax+37]
  004a8	89 8d 1d fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+45], ecx

; 390  : 			GameServer.wTableCount = pRegisterServer->wTableCount;

  004ae	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  004b4	66 8b 48 29	 mov	 cx, WORD PTR [eax+41]
  004b8	66 89 8d 65 fe
	ff ff		 mov	 WORD PTR _GameServer$7[ebp+117], cx

; 391  : 			GameServer.dwSetPlayerCount = pRegisterServer->dwSetPlayerCount;

  004bf	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  004c5	8b 48 6f	 mov	 ecx, DWORD PTR [eax+111]
  004c8	89 8d 67 fe ff
	ff		 mov	 DWORD PTR _GameServer$7[ebp+119], ecx

; 392  : 
; 393  : 			lstrcpyn(GameServer.szServerName,pRegisterServer->szServerName,CountArray(GameServer.szServerName));

  004ce	6a 20		 push	 32			; 00000020H
  004d0	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  004d6	83 c0 4f	 add	 eax, 79			; 0000004fH
  004d9	50		 push	 eax
  004da	8d 8d 41 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServer$7[ebp+81]
  004e0	51		 push	 ecx
  004e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 394  : 			lstrcpyn(GameServer.szServerAddr,pRegisterServer->szServerAddr,CountArray(GameServer.szServerAddr));

  004e7	6a 20		 push	 32			; 00000020H
  004e9	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  004ef	83 c0 2f	 add	 eax, 47			; 0000002fH
  004f2	50		 push	 eax
  004f3	8d 8d 21 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServer$7[ebp+49]
  004f9	51		 push	 ecx
  004fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 395  : 			lstrcpyn(GameServer.szGameInfomation, pRegisterServer->szGameInfomation, CountArray(GameServer.szGameInfomation));

  00500	6a 20		 push	 32			; 00000020H
  00502	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _pRegisterServer$12[ebp]
  00508	83 c0 73	 add	 eax, 115		; 00000073H
  0050b	50		 push	 eax
  0050c	8d 8d 6b fe ff
	ff		 lea	 ecx, DWORD PTR _GameServer$7[ebp+123]
  00512	51		 push	 ecx
  00513	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 396  : 			//注册房间
; 397  : 			m_GlobalInfoManager.ActiveServerItem(wBindIndex,GameServer);

  00519	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _GameServer$7[ebp]
  0051f	50		 push	 eax
  00520	0f b7 8d 8c fe
	ff ff		 movzx	 ecx, WORD PTR _wBindIndex$8[ebp]
  00527	51		 push	 ecx
  00528	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052b	83 c1 24	 add	 ecx, 36			; 00000024H
  0052e	e8 00 00 00 00	 call	 ?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z ; CGlobalInfoManager::ActiveServerItem

; 398  : 
; 399  : 			//群发房间
; 400  : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INSERT,&GameServer,sizeof(GameServer),0L);

  00533	6a 00		 push	 0
  00535	68 9b 00 00 00	 push	 155			; 0000009bH
  0053a	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _GameServer$7[ebp]
  00540	50		 push	 eax
  00541	6a 70		 push	 112			; 00000070H
  00543	6a 02		 push	 2
  00545	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00548	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0054e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00551	8b 12		 mov	 edx, DWORD PTR [edx]
  00553	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00559	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0055c	ff d0		 call	 eax

; 401  : 
; 402  : 			//发送列表
; 403  : 			SendServerListItem(dwSocketID);

  0055e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00561	50		 push	 eax
  00562	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00565	e8 00 00 00 00	 call	 ?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendServerListItem

; 404  : 
; 405  : 			SendMatchListItem(dwSocketID);

  0056a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0056d	50		 push	 eax
  0056e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00571	e8 00 00 00 00	 call	 ?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendMatchListItem

; 406  : 
; 407  : 			//群发设置
; 408  : 			m_pITCPNetworkEngine->AllowBatchSend(dwSocketID,true,0L);

  00576	6a 00		 push	 0
  00578	6a 01		 push	 1
  0057a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0057d	50		 push	 eax
  0057e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00581	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00587	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0058a	8b 12		 mov	 edx, DWORD PTR [edx]
  0058c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00592	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00595	ff d0		 call	 eax

; 409  : 
; 410  : 			//汇总通知
; 411  : 			if (m_wCollectItem==INVALID_WORD)

  00597	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0059a	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0059e	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  005a4	75 31		 jne	 SHORT $LN11@OnTCPNetwo

; 412  : 			{
; 413  : 				m_wCollectItem=wBindIndex;

  005a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005a9	66 8b 8d 8c fe
	ff ff		 mov	 cx, WORD PTR _wBindIndex$8[ebp]
  005b0	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 414  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_COLLECT_REQUEST);

  005b4	6a 64		 push	 100			; 00000064H
  005b6	6a 03		 push	 3
  005b8	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  005bb	50		 push	 eax
  005bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005bf	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  005c5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  005c8	8b 12		 mov	 edx, DWORD PTR [edx]
  005ca	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  005d0	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  005d3	ff d0		 call	 eax
  005d5	eb 12		 jmp	 SHORT $LN12@OnTCPNetwo
$LN11@OnTCPNetwo:

; 415  : 			}
; 416  : 			else m_WaitCollectItemArray.Add(wBindIndex);

  005d7	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR _wBindIndex$8[ebp]
  005dd	50		 push	 eax
  005de	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e1	83 c1 08	 add	 ecx, 8
  005e4	e8 00 00 00 00	 call	 ?Add@?$CWHArray@GABG@@QAEHABG@Z ; CWHArray<unsigned short,unsigned short const &>::Add
$LN12@OnTCPNetwo:

; 417  : 
; 418  : 			return true;

  005e9	b0 01		 mov	 al, 1
  005eb	e9 68 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN13@OnTCPNetwo:

; 419  : 		}	
; 420  : 	case SUB_CS_C_REGISTER_MATCH:	//注册比赛
; 421  : 		{
; 422  : 			//效验数据
; 423  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_RegisterMatch));

  005f0	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  005f4	3d b9 02 00 00	 cmp	 eax, 697		; 000002b9H
  005f9	74 1c		 je	 SHORT $LN22@OnTCPNetwo
  005fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00601	81 c1 95 00 00
	00		 add	 ecx, 149		; 00000095H
  00607	51		 push	 ecx
  00608	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0060d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00612	85 c0		 test	 eax, eax
  00614	74 01		 je	 SHORT $LN22@OnTCPNetwo
  00616	cc		 int	 3
$LN22@OnTCPNetwo:

; 424  : 			if (wDataSize!=sizeof(CMD_CS_C_RegisterMatch)) return false;

  00617	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0061b	3d b9 02 00 00	 cmp	 eax, 697		; 000002b9H
  00620	74 07		 je	 SHORT $LN14@OnTCPNetwo
  00622	32 c0		 xor	 al, al
  00624	e9 2f 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 425  : 
; 426  : 			//消息定义
; 427  : 			CMD_CS_C_RegisterMatch * pRegisterMatch=(CMD_CS_C_RegisterMatch *)pData;

  00629	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0062c	89 85 ec fd ff
	ff		 mov	 DWORD PTR _pRegisterMatch$6[ebp], eax

; 428  : 
; 429  : 			//查找房间
; 430  : 			CGlobalServerItem * pGlobalServerItem = m_GlobalInfoManager.SearchServerItem(pRegisterMatch->wServerID);

  00632	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00638	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0063b	51		 push	 ecx
  0063c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0063f	83 c1 24	 add	 ecx, 36			; 00000024H
  00642	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  00647	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$5[ebp], eax

; 431  : 			if(pGlobalServerItem==NULL) return true;

  0064d	83 bd e8 fd ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$5[ebp], 0
  00654	75 07		 jne	 SHORT $LN15@OnTCPNetwo
  00656	b0 01		 mov	 al, 1
  00658	e9 fb 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 432  : 
; 433  : 			//变量定义
; 434  : 			tagGameMatch GameMatch;
; 435  : 			ZeroMemory(&GameMatch,sizeof(GameMatch));

  0065d	68 80 02 00 00	 push	 640			; 00000280H
  00662	6a 00		 push	 0
  00664	8d 85 68 fb ff
	ff		 lea	 eax, DWORD PTR _GameMatch$4[ebp]
  0066a	50		 push	 eax
  0066b	e8 00 00 00 00	 call	 _memset
  00670	83 c4 0c	 add	 esp, 12			; 0000000cH

; 436  : 
; 437  : 			//构造数据
; 438  : 			GameMatch.wServerID = pRegisterMatch->wServerID;

  00673	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00679	66 8b 08	 mov	 cx, WORD PTR [eax]
  0067c	66 89 8d 68 fb
	ff ff		 mov	 WORD PTR _GameMatch$4[ebp], cx

; 439  : 			GameMatch.dwMatchID = pRegisterMatch->dwMatchID;

  00683	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00689	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  0068c	89 8d 6a fb ff
	ff		 mov	 DWORD PTR _GameMatch$4[ebp+2], ecx

; 440  : 			GameMatch.cbMatchType = pRegisterMatch->cbMatchType;

  00692	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00698	8a 48 0f	 mov	 cl, BYTE PTR [eax+15]
  0069b	88 8d 6e fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+6], cl

; 441  : 			lstrcpyn(GameMatch.szMatchName,pRegisterMatch->szMatchName,CountArray(GameMatch.szMatchName));

  006a1	6a 20		 push	 32			; 00000020H
  006a3	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  006a9	83 c0 10	 add	 eax, 16			; 00000010H
  006ac	50		 push	 eax
  006ad	8d 8d 6f fb ff
	ff		 lea	 ecx, DWORD PTR _GameMatch$4[ebp+7]
  006b3	51		 push	 ecx
  006b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 442  : 
; 443  : 			GameMatch.cbFeeType = pRegisterMatch->cbFeeType;

  006ba	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  006c0	8a 48 30	 mov	 cl, BYTE PTR [eax+48]
  006c3	88 8d 8f fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+39], cl

; 444  : 			GameMatch.cbDeductArea = pRegisterMatch->cbDeductArea;

  006c9	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  006cf	8a 48 31	 mov	 cl, BYTE PTR [eax+49]
  006d2	88 8d 90 fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+40], cl

; 445  : 			GameMatch.lSignupFee = pRegisterMatch->lSignupFee;

  006d8	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  006de	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  006e1	89 8d 91 fb ff
	ff		 mov	 DWORD PTR _GameMatch$4[ebp+41], ecx
  006e7	8b 50 36	 mov	 edx, DWORD PTR [eax+54]
  006ea	89 95 95 fb ff
	ff		 mov	 DWORD PTR _GameMatch$4[ebp+45], edx

; 446  : 			GameMatch.cbSignupMode = pRegisterMatch->cbSignupMode;

  006f0	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  006f6	8a 48 3a	 mov	 cl, BYTE PTR [eax+58]
  006f9	88 8d 99 fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+49], cl

; 447  : 			GameMatch.cbJoinCondition = pRegisterMatch->cbJoinCondition;

  006ff	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00705	8a 48 3b	 mov	 cl, BYTE PTR [eax+59]
  00708	88 8d 9a fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+50], cl

; 448  : 			GameMatch.cbMemberOrder = pRegisterMatch->cbMemberOrder;

  0070e	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00714	8a 48 3c	 mov	 cl, BYTE PTR [eax+60]
  00717	88 8d 9b fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+51], cl

; 449  : 			GameMatch.lExperience = pRegisterMatch->dwExperience;

  0071d	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00723	8b 48 3d	 mov	 ecx, DWORD PTR [eax+61]
  00726	89 8d 9c fb ff
	ff		 mov	 DWORD PTR _GameMatch$4[ebp+52], ecx

; 450  : 
; 451  : 			GameMatch.cbRankingMode = pRegisterMatch->cbRankingMode;

  0072c	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00732	8a 48 68	 mov	 cl, BYTE PTR [eax+104]
  00735	88 8d a0 fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+56], cl

; 452  : 			GameMatch.wCountInnings = pRegisterMatch->wCountInnings;

  0073b	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00741	66 8b 48 69	 mov	 cx, WORD PTR [eax+105]
  00745	66 89 8d a1 fb
	ff ff		 mov	 WORD PTR _GameMatch$4[ebp+57], cx

; 453  : 			GameMatch.cbFilterGradesMode = pRegisterMatch->cbFilterGradesMode;

  0074c	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00752	8a 48 6b	 mov	 cl, BYTE PTR [eax+107]
  00755	88 8d a3 fb ff
	ff		 mov	 BYTE PTR _GameMatch$4[ebp+59], cl

; 454  : 
; 455  : 			CopyMemory(&GameMatch.cbMatchRule,&pRegisterMatch->cbMatchRule,sizeof(GameMatch.cbMatchRule));

  0075b	68 00 02 00 00	 push	 512			; 00000200H
  00760	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00766	83 c0 75	 add	 eax, 117		; 00000075H
  00769	50		 push	 eax
  0076a	8d 8d e8 fb ff
	ff		 lea	 ecx, DWORD PTR _GameMatch$4[ebp+128]
  00770	51		 push	 ecx
  00771	e8 00 00 00 00	 call	 _memcpy
  00776	83 c4 0c	 add	 esp, 12			; 0000000cH

; 456  : 
; 457  : 			GameMatch.wRewardCount = pRegisterMatch->wRewardCount;

  00779	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  0077f	66 8b 88 75 02
	00 00		 mov	 cx, WORD PTR [eax+629]
  00786	66 89 8d a4 fb
	ff ff		 mov	 WORD PTR _GameMatch$4[ebp+60], cx

; 458  : 			CopyMemory(&GameMatch.MatchRewardInfo,pRegisterMatch->MatchRewardInfo,sizeof(GameMatch.MatchRewardInfo));

  0078d	6a 42		 push	 66			; 00000042H
  0078f	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pRegisterMatch$6[ebp]
  00795	05 77 02 00 00	 add	 eax, 631		; 00000277H
  0079a	50		 push	 eax
  0079b	8d 8d a6 fb ff
	ff		 lea	 ecx, DWORD PTR _GameMatch$4[ebp+62]
  007a1	51		 push	 ecx
  007a2	e8 00 00 00 00	 call	 _memcpy
  007a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 459  : 
; 460  : 			//拷贝数据
; 461  : 			CopyMemory(&pGlobalServerItem->m_GameMatch,&GameMatch,sizeof(pGlobalServerItem->m_GameMatch));

  007aa	68 80 02 00 00	 push	 640			; 00000280H
  007af	8d 85 68 fb ff
	ff		 lea	 eax, DWORD PTR _GameMatch$4[ebp]
  007b5	50		 push	 eax
  007b6	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$5[ebp]
  007bc	81 c1 a1 00 00
	00		 add	 ecx, 161		; 000000a1H
  007c2	51		 push	 ecx
  007c3	e8 00 00 00 00	 call	 _memcpy
  007c8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 462  : 
; 463  : 			//群发房间
; 464  : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_MATCH_INSERT,&GameMatch,sizeof(GameMatch),0L);

  007cb	6a 00		 push	 0
  007cd	68 80 02 00 00	 push	 640			; 00000280H
  007d2	8d 85 68 fb ff
	ff		 lea	 eax, DWORD PTR _GameMatch$4[ebp]
  007d8	50		 push	 eax
  007d9	6a 78		 push	 120			; 00000078H
  007db	6a 02		 push	 2
  007dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007e0	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  007e6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007e9	8b 12		 mov	 edx, DWORD PTR [edx]
  007eb	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  007f1	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  007f4	ff d0		 call	 eax

; 465  : 
; 466  : 			return true;

  007f6	b0 01		 mov	 al, 1
  007f8	e9 5b 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN16@OnTCPNetwo:

; 467  : 		}
; 468  : 	case SUB_CS_C_REGISTER_CHAT:	//注册聊天
; 469  : 		{		
; 470  : 			//设置绑定
; 471  : 			WORD wBindIndex=LOWORD(dwSocketID);

  007fd	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00800	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00805	66 89 85 64 fb
	ff ff		 mov	 WORD PTR _wBindIndex$3[ebp], ax

; 472  : 			(m_pBindParameter+wBindIndex)->wServiceID=wBindIndex;

  0080c	0f b7 85 64 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  00813	6b c8 14	 imul	 ecx, eax, 20
  00816	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00819	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0081c	66 8b 95 64 fb
	ff ff		 mov	 dx, WORD PTR _wBindIndex$3[ebp]
  00823	66 89 54 08 0c	 mov	 WORD PTR [eax+ecx+12], dx

; 473  : 			(m_pBindParameter+wBindIndex)->ServiceKind=ServiceKind_Chat;

  00828	0f b7 85 64 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  0082f	6b c8 14	 imul	 ecx, eax, 20
  00832	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00835	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00838	c7 44 08 10 03
	00 00 00	 mov	 DWORD PTR [eax+ecx+16], 3

; 474  : 
; 475  : 			tagChatServer ChatServer ;
; 476  : 			ChatServer.wChatID = wBindIndex;

  00840	66 8b 85 64 fb
	ff ff		 mov	 ax, WORD PTR _wBindIndex$3[ebp]
  00847	66 89 85 58 fb
	ff ff		 mov	 WORD PTR _ChatServer$2[ebp], ax

; 477  : 			ChatServer.dwClientAddr = (m_pBindParameter+wBindIndex)->dwClientAddr;

  0084e	0f b7 85 64 fb
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  00855	6b c8 14	 imul	 ecx, eax, 20
  00858	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0085b	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0085e	8b 4c 08 04	 mov	 ecx, DWORD PTR [eax+ecx+4]
  00862	89 8d 5e fb ff
	ff		 mov	 DWORD PTR _ChatServer$2[ebp+6], ecx

; 478  : 			ChatServer.dwSocketID = dwSocketID;

  00868	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0086b	89 85 5a fb ff
	ff		 mov	 DWORD PTR _ChatServer$2[ebp+2], eax

; 479  : 
; 480  : 			m_GlobalInfoManager.ActiveChatItem(wBindIndex,ChatServer);

  00871	8d 85 58 fb ff
	ff		 lea	 eax, DWORD PTR _ChatServer$2[ebp]
  00877	50		 push	 eax
  00878	0f b7 8d 64 fb
	ff ff		 movzx	 ecx, WORD PTR _wBindIndex$3[ebp]
  0087f	51		 push	 ecx
  00880	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00883	83 c1 24	 add	 ecx, 36			; 00000024H
  00886	e8 00 00 00 00	 call	 ?ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z ; CGlobalInfoManager::ActiveChatItem

; 481  : 
; 482  : 			//群发房间
; 483  : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_CHAT_INSERT,&ChatServer,sizeof(ChatServer),0L);

  0088b	6a 00		 push	 0
  0088d	6a 0a		 push	 10			; 0000000aH
  0088f	8d 85 58 fb ff
	ff		 lea	 eax, DWORD PTR _ChatServer$2[ebp]
  00895	50		 push	 eax
  00896	68 82 00 00 00	 push	 130			; 00000082H
  0089b	6a 02		 push	 2
  0089d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008a0	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  008a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008a9	8b 12		 mov	 edx, DWORD PTR [edx]
  008ab	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  008b1	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  008b4	ff d0		 call	 eax

; 484  : 
; 485  : 			//发送信息
; 486  : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_CHAT_INSERT);

  008b6	68 82 00 00 00	 push	 130			; 00000082H
  008bb	6a 02		 push	 2
  008bd	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  008c0	50		 push	 eax
  008c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008c4	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  008ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008cd	8b 12		 mov	 edx, DWORD PTR [edx]
  008cf	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  008d5	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  008d8	ff d0		 call	 eax

; 487  : 
; 488  : 			//群发设置
; 489  : 			m_pITCPNetworkEngine->AllowBatchSend(dwSocketID,true,0L);

  008da	6a 00		 push	 0
  008dc	6a 01		 push	 1
  008de	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  008e1	50		 push	 eax
  008e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008e5	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  008eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  008ee	8b 12		 mov	 edx, DWORD PTR [edx]
  008f0	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  008f6	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  008f9	ff d0		 call	 eax

; 490  : 
; 491  : 			return true;

  008fb	b0 01		 mov	 al, 1
  008fd	eb 59		 jmp	 SHORT $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 492  : 		}
; 493  : 	case SUB_CS_C_REGISTER_PERSONAL:
; 494  : 		{
; 495  : 			//效验数据
; 496  : 			ASSERT(wDataSize==sizeof(CMD_CS_S_RegisterPersonal));

  008ff	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00903	83 f8 08	 cmp	 eax, 8
  00906	74 1c		 je	 SHORT $LN23@OnTCPNetwo
  00908	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0090e	81 c1 de 00 00
	00		 add	 ecx, 222		; 000000deH
  00914	51		 push	 ecx
  00915	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0091a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0091f	85 c0		 test	 eax, eax
  00921	74 01		 je	 SHORT $LN23@OnTCPNetwo
  00923	cc		 int	 3
$LN23@OnTCPNetwo:

; 497  : 			if (wDataSize!=sizeof(CMD_CS_S_RegisterPersonal)) return false;

  00924	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00928	83 f8 08	 cmp	 eax, 8
  0092b	74 04		 je	 SHORT $LN18@OnTCPNetwo
  0092d	32 c0		 xor	 al, al
  0092f	eb 27		 jmp	 SHORT $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 498  : 			CMD_CS_S_RegisterPersonal * RegisterPersonal = (CMD_CS_S_RegisterPersonal *)pData;

  00931	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00934	89 85 54 fb ff
	ff		 mov	 DWORD PTR _RegisterPersonal$1[ebp], eax

; 499  : 			m_GlobalInfoManager.AddPersonalMaxCreate(* RegisterPersonal);

  0093a	8b 85 54 fb ff
	ff		 mov	 eax, DWORD PTR _RegisterPersonal$1[ebp]
  00940	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00943	51		 push	 ecx
  00944	8b 10		 mov	 edx, DWORD PTR [eax]
  00946	52		 push	 edx
  00947	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0094a	83 c1 24	 add	 ecx, 36			; 00000024H
  0094d	e8 00 00 00 00	 call	 ?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z ; CGlobalInfoManager::AddPersonalMaxCreate

; 500  : 			return true;

  00952	b0 01		 mov	 al, 1
  00954	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 501  : 		}
; 502  : 	}
; 503  : 
; 504  : 	return false;

  00956	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 505  : }

  00958	5f		 pop	 edi
  00959	5e		 pop	 esi
  0095a	5b		 pop	 ebx
  0095b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0095e	33 cd		 xor	 ecx, ebp
  00960	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00965	8b e5		 mov	 esp, ebp
  00967	5d		 pop	 ebp
  00968	c2 10 00	 ret	 16			; 00000010H
  0096b	90		 npad	 1
$LN24@OnTCPNetwo:
  0096c	00 00 00 00	 DD	 $LN4@OnTCPNetwo
  00970	00 00 00 00	 DD	 $LN8@OnTCPNetwo
  00974	00 00 00 00	 DD	 $LN13@OnTCPNetwo
  00978	00 00 00 00	 DD	 $LN16@OnTCPNetwo
  0097c	00 00 00 00	 DD	 $LN17@OnTCPNetwo
?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainRegister
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_Command$ = 8						; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkRead, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	switch (Command.wMainCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _Command$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  00016	83 e9 01	 sub	 ecx, 1
  00019	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0001c	83 7d b8 05	 cmp	 DWORD PTR tv65[ebp], 5
  00020	0f 87 b5 00 00
	00		 ja	 $LN2@OnEventTCP
  00026	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00029	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@OnEventTCP[edx*4]
$LN4@OnEventTCP:

; 131  : 	{
; 132  : 	case MDM_CS_REGISTER:		//服务注册
; 133  : 		{
; 134  : 			return OnTCPNetworkMainRegister(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00030	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00033	50		 push	 eax
  00034	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00038	51		 push	 ecx
  00039	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0003c	52		 push	 edx
  0003d	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00041	50		 push	 eax
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRegister
  0004a	e9 8e 00 00 00	 jmp	 $LN1@OnEventTCP
$LN5@OnEventTCP:

; 135  : 		}
; 136  : 	case MDM_CS_SERVICE_INFO:	//服务信息
; 137  : 		{
; 138  : 			return OnTCPNetworkMainServiceInfo(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  0004f	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00052	50		 push	 eax
  00053	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00057	51		 push	 ecx
  00058	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0005b	52		 push	 edx
  0005c	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00060	50		 push	 eax
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo
  00069	eb 72		 jmp	 SHORT $LN1@OnEventTCP
$LN6@OnEventTCP:

; 139  : 		}
; 140  : 	case MDM_CS_USER_COLLECT:	//用户命令
; 141  : 		{
; 142  : 			return OnTCPNetworkMainUserCollect(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  0006b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0006e	50		 push	 eax
  0006f	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00073	51		 push	 ecx
  00074	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00077	52		 push	 edx
  00078	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  0007c	50		 push	 eax
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainUserCollect
  00085	eb 56		 jmp	 SHORT $LN1@OnEventTCP
$LN7@OnEventTCP:

; 143  : 		}
; 144  : 	case MDM_CS_REMOTE_SERVICE:	//远程服务
; 145  : 		{
; 146  : 			return OnTCPNetworkMainRemoteService(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00087	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0008a	50		 push	 eax
  0008b	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0008f	51		 push	 ecx
  00090	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00093	52		 push	 edx
  00094	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00098	50		 push	 eax
  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRemoteService
  000a1	eb 3a		 jmp	 SHORT $LN1@OnEventTCP
$LN8@OnEventTCP:

; 147  : 		}
; 148  : 	case MDM_CS_MANAGER_SERVICE: //管理服务
; 149  : 		{
; 150  : 			return OnTCPNetworkMainManagerService(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  000a3	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000a6	50		 push	 eax
  000a7	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000ab	51		 push	 ecx
  000ac	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000af	52		 push	 edx
  000b0	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  000b4	50		 push	 eax
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainManagerService
  000bd	eb 1e		 jmp	 SHORT $LN1@OnEventTCP
$LN9@OnEventTCP:

; 151  : 		}
; 152  : 	case MDM_CS_ANDROID_SERVICE: //机器服务
; 153  : 		{
; 154  : 			return OnTCPNetworkMainAndroidService(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  000bf	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  000c2	50		 push	 eax
  000c3	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000c7	51		 push	 ecx
  000c8	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  000cb	52		 push	 edx
  000cc	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  000d0	50		 push	 eax
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	e8 00 00 00 00	 call	 ?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainAndroidService
  000d9	eb 02		 jmp	 SHORT $LN1@OnEventTCP
$LN2@OnEventTCP:

; 155  : 		}
; 156  : 	}
; 157  : 
; 158  : 	return false;

  000db	32 c0		 xor	 al, al
$LN1@OnEventTCP:

; 159  : }

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 10 00	 ret	 16			; 00000010H
  000e6	66 90		 npad	 2
$LN11@OnEventTCP:
  000e8	00 00 00 00	 DD	 $LN4@OnEventTCP
  000ec	00 00 00 00	 DD	 $LN5@OnEventTCP
  000f0	00 00 00 00	 DD	 $LN6@OnEventTCP
  000f4	00 00 00 00	 DD	 $LN7@OnEventTCP
  000f8	00 00 00 00	 DD	 $LN8@OnEventTCP
  000fc	00 00 00 00	 DD	 $LN9@OnEventTCP
?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
_TEXT	SEGMENT
_pBindParameter$1 = -48					; size = 4
_wBindIndex$2 = -44					; size = 2
_pBindParameter$3 = -40					; size = 4
_wBindIndex$4 = -36					; size = 2
_ServerRemove$5 = -32					; size = 2
_i$6 = -28						; size = 4
_dwSocketID$7 = -24					; size = 4
_nWaitCount$8 = -20					; size = 4
_wBindIndex$9 = -16					; size = 2
_pBindParameter$ = -12					; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_dwClientAddr$ = 8					; size = 4
_dwActiveTime$ = 12					; size = 4
_dwSocketID$ = 16					; size = 4
?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkShut, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  : 	//获取信息
; 165  : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 166  : 	tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	6b c8 14	 imul	 ecx, eax, 20
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00025	89 4d f4	 mov	 DWORD PTR _pBindParameter$[ebp], ecx

; 167  : 
; 168  : 	//游戏服务
; 169  : 	if (pBindParameter->ServiceKind==ServiceKind_Game)

  00028	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0002b	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  0002f	0f 85 55 01 00
	00		 jne	 $LN5@OnEventTCP

; 170  : 	{
; 171  : 		//变量定义
; 172  : 		WORD wBindIndex=LOWORD(dwSocketID);

  00035	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00038	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003d	66 89 45 f0	 mov	 WORD PTR _wBindIndex$9[ebp], ax

; 173  : 
; 174  : 		//汇总处理
; 175  : 		if (wBindIndex==m_wCollectItem)

  00041	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$9[ebp]
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0004c	3b c2		 cmp	 eax, edx
  0004e	0f 85 92 00 00
	00		 jne	 $LN6@OnEventTCP

; 176  : 		{
; 177  : 			//设置变量
; 178  : 			m_wCollectItem=INVALID_WORD;

  00054	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 179  : 
; 180  : 			//汇总切换
; 181  : 			if (m_WaitCollectItemArray.GetCount()>0)

  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 08	 add	 ecx, 8
  00066	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  0006b	85 c0		 test	 eax, eax
  0006d	7e 75		 jle	 SHORT $LN8@OnEventTCP

; 182  : 			{
; 183  : 				//提取变量
; 184  : 				INT_PTR nWaitCount=m_WaitCollectItemArray.GetCount();

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 08	 add	 ecx, 8
  00075	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  0007a	89 45 ec	 mov	 DWORD PTR _nWaitCount$8[ebp], eax

; 185  : 				m_wCollectItem=m_WaitCollectItemArray[nWaitCount-1];

  0007d	8b 45 ec	 mov	 eax, DWORD PTR _nWaitCount$8[ebp]
  00080	83 e8 01	 sub	 eax, 1
  00083	50		 push	 eax
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	83 c1 08	 add	 ecx, 8
  0008a	e8 00 00 00 00	 call	 ??A?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::operator[]
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	66 8b 10	 mov	 dx, WORD PTR [eax]
  00095	66 89 51 04	 mov	 WORD PTR [ecx+4], dx

; 186  : 
; 187  : 				//删除数组
; 188  : 				m_WaitCollectItemArray.RemoveAt(nWaitCount-1);

  00099	6a 01		 push	 1
  0009b	8b 45 ec	 mov	 eax, DWORD PTR _nWaitCount$8[ebp]
  0009e	83 e8 01	 sub	 eax, 1
  000a1	50		 push	 eax
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	83 c1 08	 add	 ecx, 8
  000a8	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ; CWHArray<unsigned short,unsigned short const &>::RemoveAt

; 189  : 
; 190  : 				//发送消息
; 191  : 				DWORD dwSocketID=(m_pBindParameter+m_wCollectItem)->dwSocketID;

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  000b4	6b d1 14	 imul	 edx, ecx, 20
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000bd	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  000c0	89 55 e8	 mov	 DWORD PTR _dwSocketID$7[ebp], edx

; 192  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_COLLECT_REQUEST);

  000c3	6a 64		 push	 100			; 00000064H
  000c5	6a 03		 push	 3
  000c7	8b 45 e8	 mov	 eax, DWORD PTR _dwSocketID$7[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 12		 mov	 edx, DWORD PTR [edx]
  000d9	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  000df	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000e2	ff d0		 call	 eax
$LN8@OnEventTCP:

; 193  : 			}
; 194  : 		}
; 195  : 		else

  000e4	eb 51		 jmp	 SHORT $LN7@OnEventTCP
$LN6@OnEventTCP:

; 196  : 		{
; 197  : 			//删除等待
; 198  : 			for (INT_PTR i=0;i<m_WaitCollectItemArray.GetCount();i++)

  000e6	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  000ed	eb 09		 jmp	 SHORT $LN4@OnEventTCP
$LN2@OnEventTCP:
  000ef	8b 45 e4	 mov	 eax, DWORD PTR _i$6[ebp]
  000f2	83 c0 01	 add	 eax, 1
  000f5	89 45 e4	 mov	 DWORD PTR _i$6[ebp], eax
$LN4@OnEventTCP:
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	83 c1 08	 add	 ecx, 8
  000fe	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  00103	39 45 e4	 cmp	 DWORD PTR _i$6[ebp], eax
  00106	7d 2f		 jge	 SHORT $LN7@OnEventTCP

; 199  : 			{
; 200  : 				if (wBindIndex==m_WaitCollectItemArray[i])

  00108	0f b7 75 f0	 movzx	 esi, WORD PTR _wBindIndex$9[ebp]
  0010c	8b 45 e4	 mov	 eax, DWORD PTR _i$6[ebp]
  0010f	50		 push	 eax
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	83 c1 08	 add	 ecx, 8
  00116	e8 00 00 00 00	 call	 ??A?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::operator[]
  0011b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0011e	3b f1		 cmp	 esi, ecx
  00120	75 13		 jne	 SHORT $LN9@OnEventTCP

; 201  : 				{
; 202  : 					m_WaitCollectItemArray.RemoveAt(i);

  00122	6a 01		 push	 1
  00124	8b 45 e4	 mov	 eax, DWORD PTR _i$6[ebp]
  00127	50		 push	 eax
  00128	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	83 c1 08	 add	 ecx, 8
  0012e	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ; CWHArray<unsigned short,unsigned short const &>::RemoveAt

; 203  : 					break;

  00133	eb 02		 jmp	 SHORT $LN7@OnEventTCP
$LN9@OnEventTCP:

; 204  : 				}
; 205  : 			}

  00135	eb b8		 jmp	 SHORT $LN2@OnEventTCP
$LN7@OnEventTCP:

; 206  : 		}
; 207  : 
; 208  : 		//变量定义
; 209  : 		CMD_CS_S_ServerRemove ServerRemove;
; 210  : 		ZeroMemory(&ServerRemove,sizeof(ServerRemove));

  00137	6a 02		 push	 2
  00139	6a 00		 push	 0
  0013b	8d 45 e0	 lea	 eax, DWORD PTR _ServerRemove$5[ebp]
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 _memset
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH

; 211  : 
; 212  : 		//删除通知
; 213  : 		ServerRemove.wServerID=pBindParameter->wServiceID;

  00147	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0014a	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  0014e	66 89 4d e0	 mov	 WORD PTR _ServerRemove$5[ebp], cx

; 214  : 		m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_REMOVE,&ServerRemove,sizeof(ServerRemove),0L);

  00152	6a 00		 push	 0
  00154	6a 02		 push	 2
  00156	8d 45 e0	 lea	 eax, DWORD PTR _ServerRemove$5[ebp]
  00159	50		 push	 eax
  0015a	6a 72		 push	 114			; 00000072H
  0015c	6a 02		 push	 2
  0015e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00167	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	8b 12		 mov	 edx, DWORD PTR [edx]
  0016c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00172	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00175	ff d0		 call	 eax

; 215  : 
; 216  : 		//注销房间
; 217  : 		m_GlobalInfoManager.DeleteServerItem(pBindParameter->wServiceID);

  00177	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0017a	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  0017e	51		 push	 ecx
  0017f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	83 c1 24	 add	 ecx, 36			; 00000024H
  00185	e8 00 00 00 00	 call	 ?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z ; CGlobalInfoManager::DeleteServerItem
$LN5@OnEventTCP:

; 218  : 	}
; 219  : 
; 220  : 	//广场服务
; 221  : 	if (pBindParameter->ServiceKind==ServiceKind_Plaza)

  0018a	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0018d	83 78 10 02	 cmp	 DWORD PTR [eax+16], 2
  00191	75 2f		 jne	 SHORT $LN10@OnEventTCP

; 222  : 	{
; 223  : 		//变量定义
; 224  : 		WORD wBindIndex=LOWORD(dwSocketID);

  00193	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00196	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0019b	66 89 45 dc	 mov	 WORD PTR _wBindIndex$4[ebp], ax

; 225  : 		tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  0019f	0f b7 45 dc	 movzx	 eax, WORD PTR _wBindIndex$4[ebp]
  001a3	6b c8 14	 imul	 ecx, eax, 20
  001a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a9	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  001ac	89 4d d8	 mov	 DWORD PTR _pBindParameter$3[ebp], ecx

; 226  : 
; 227  : 		//注销房间
; 228  : 		m_GlobalInfoManager.DeletePlazaItem(pBindParameter->wServiceID);

  001af	8b 45 d8	 mov	 eax, DWORD PTR _pBindParameter$3[ebp]
  001b2	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  001b6	51		 push	 ecx
  001b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 24	 add	 ecx, 36			; 00000024H
  001bd	e8 00 00 00 00	 call	 ?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z ; CGlobalInfoManager::DeletePlazaItem
$LN10@OnEventTCP:

; 229  : 	}
; 230  : 
; 231  : 	//聊天服务
; 232  : 	if (pBindParameter->ServiceKind==ServiceKind_Chat)

  001c2	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001c5	83 78 10 03	 cmp	 DWORD PTR [eax+16], 3
  001c9	75 2f		 jne	 SHORT $LN11@OnEventTCP

; 233  : 	{
; 234  : 		//变量定义
; 235  : 		WORD wBindIndex=LOWORD(dwSocketID);

  001cb	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001ce	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001d3	66 89 45 d4	 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 236  : 		tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  001d7	0f b7 45 d4	 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  001db	6b c8 14	 imul	 ecx, eax, 20
  001de	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001e1	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  001e4	89 4d d0	 mov	 DWORD PTR _pBindParameter$1[ebp], ecx

; 237  : 
; 238  : 		//注销房间
; 239  : 		m_GlobalInfoManager.DeleteChatItem(pBindParameter->wServiceID);

  001e7	8b 45 d0	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  001ea	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  001ee	51		 push	 ecx
  001ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	83 c1 24	 add	 ecx, 36			; 00000024H
  001f5	e8 00 00 00 00	 call	 ?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z ; CGlobalInfoManager::DeleteChatItem
$LN11@OnEventTCP:

; 240  : 	}
; 241  : 
; 242  : 	//清除信息
; 243  : 	ZeroMemory(pBindParameter,sizeof(tagBindParameter));

  001fa	6a 14		 push	 20			; 00000014H
  001fc	6a 00		 push	 0
  001fe	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00201	50		 push	 eax
  00202	e8 00 00 00 00	 call	 _memset
  00207	83 c4 0c	 add	 esp, 12			; 0000000cH

; 244  : 
; 245  : 	return false;

  0020a	32 c0		 xor	 al, al

; 246  : }

  0020c	5f		 pop	 edi
  0020d	5e		 pop	 esi
  0020e	5b		 pop	 ebx
  0020f	8b e5		 mov	 esp, ebp
  00211	5d		 pop	 ebp
  00212	c2 0c 00	 ret	 12			; 0000000cH
?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkShut
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z
_TEXT	SEGMENT
_pBindParameter$ = -12					; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_dwClientAddr$ = 8					; size = 4
_dwSocketID$ = 12					; size = 4
?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkBind, COMDAT
; _this$ = ecx

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 111  : 	//获取索引
; 112  : 	ASSERT(LOWORD(dwSocketID)<m_pInitParameter->m_wMaxConnect);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	0f b7 c8	 movzx	 ecx, ax
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0001d	0f b7 50 04	 movzx	 edx, WORD PTR [eax+4]
  00021	3b ca		 cmp	 ecx, edx
  00023	7c 18		 jl	 SHORT $LN4@OnEventTCP
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA
  0002a	83 c0 02	 add	 eax, 2
  0002d	50		 push	 eax
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN4@OnEventTCP
  0003c	cc		 int	 3
$LN4@OnEventTCP:

; 113  : 	if (LOWORD(dwSocketID)>=m_pInitParameter->m_wMaxConnect) return false;

  0003d	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00040	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00045	0f b7 c8	 movzx	 ecx, ax
  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0004e	0f b7 50 04	 movzx	 edx, WORD PTR [eax+4]
  00052	3b ca		 cmp	 ecx, edx
  00054	7c 04		 jl	 SHORT $LN2@OnEventTCP
  00056	32 c0		 xor	 al, al
  00058	eb 3f		 jmp	 SHORT $LN1@OnEventTCP
$LN2@OnEventTCP:

; 114  : 
; 115  : 	//变量定义
; 116  : 	WORD wBindIndex=LOWORD(dwSocketID);

  0005a	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0005d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00062	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 117  : 	tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00066	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0006a	6b c8 14	 imul	 ecx, eax, 20
  0006d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00070	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00073	89 4d f4	 mov	 DWORD PTR _pBindParameter$[ebp], ecx

; 118  : 
; 119  : 	//设置变量
; 120  : 	pBindParameter->dwSocketID=dwSocketID;

  00076	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00079	8b 4d 0c	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0007c	89 08		 mov	 DWORD PTR [eax], ecx

; 121  : 	pBindParameter->dwClientAddr=dwClientAddr;

  0007e	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _dwClientAddr$[ebp]
  00084	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 122  : 	pBindParameter->dwActiveTime=(DWORD)time(NULL);

  00087	6a 00		 push	 0
  00089	e8 00 00 00 00	 call	 _time
  0008e	83 c4 04	 add	 esp, 4
  00091	8b 4d f4	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  00094	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 123  : 
; 124  : 	return true;

  00097	b0 01		 mov	 al, 1
$LN1@OnEventTCP:

; 125  : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 08 00	 ret	 8
?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkBind
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_Command$ = 12						; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z PROC ; CAttemperEngineSink::OnEventTCPSocketRead, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : 	return true;

  0000c	b0 01		 mov	 al, 1

; 270  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_cbShutReason$ = 12					; size = 1
?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z PROC ; CAttemperEngineSink::OnEventTCPSocketShut, COMDAT
; _this$ = ecx

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 257  : 	return false;

  0000c	32 c0		 xor	 al, al

; 258  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketShut
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_nErrorCode$ = 12					; size = 4
?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z PROC ; CAttemperEngineSink::OnEventTCPSocketLink, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 263  : 	return false;

  0000c	32 c0		 xor	 al, al

; 264  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketLink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_dwContextID$ = 12					; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z PROC ; CAttemperEngineSink::OnEventDataBase, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  : 	return false;

  0000c	32 c0		 xor	 al, al

; 252  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z ENDP ; CAttemperEngineSink::OnEventDataBase
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwTimerID$ = 8						; size = 4
_wBindParam$ = 12					; size = 4
?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z PROC	; CAttemperEngineSink::OnEventTimer, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	//加载参数
; 97   : 	if(IDI_LOAD_PLATFORM_PARAMETER==dwTimerID)

  0000c	83 7d 08 01	 cmp	 DWORD PTR _dwTimerID$[ebp], 1
  00010	75 2a		 jne	 SHORT $LN2@OnEventTim

; 98   : 	{
; 99   : 		//发送通知
; 100  : 		m_pITCPNetworkEngine->SendDataBatch(MDM_CS_MANAGER_SERVICE,SUB_CS_S_PLATFORM_PARAMETER,0,0,0L);

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	68 2c 01 00 00	 push	 300			; 0000012cH
  0001d	6a 05		 push	 5
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002d	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00033	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00036	ff d2		 call	 edx

; 101  : 
; 102  : 		return true;

  00038	b0 01		 mov	 al, 1
  0003a	eb 02		 jmp	 SHORT $LN1@OnEventTim
$LN2@OnEventTim:

; 103  : 	}
; 104  : 
; 105  : 	return false;

  0003c	32 c0		 xor	 al, al
$LN1@OnEventTim:

; 106  : }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 08 00	 ret	 8
?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z ENDP	; CAttemperEngineSink::OnEventTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnEventAttemperData, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 90   : 	return false;

  0000c	32 c0		 xor	 al, al

; 91   : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnEventAttemperData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wIdentifier$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z PROC	; CAttemperEngineSink::OnEventControl, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 	return false;

  0000c	32 c0		 xor	 al, al

; 85   : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z ENDP	; CAttemperEngineSink::OnEventControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
$T2 = -88						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pIUnknownEx$ = 8					; size = 4
?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngineSink::OnAttemperEngineConclude, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 48	 sub	 esp, 72			; 00000048H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 	//状态变量
; 65   : 	m_wCollectItem=INVALID_WORD;

  0002f	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00034	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 66   : 	m_WaitCollectItemArray.RemoveAll();

  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	83 c1 08	 add	 ecx, 8
  00041	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@GABG@@QAEXXZ ; CWHArray<unsigned short,unsigned short const &>::RemoveAll

; 67   : 
; 68   : 	//设置变量
; 69   : 	m_pITimerEngine=NULL;

  00046	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+304], 0

; 70   : 	m_pITCPNetworkEngine=NULL;

  00053	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00056	c7 80 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+308], 0

; 71   : 
; 72   : 	//删除数据
; 73   : 	SafeDeleteArray(m_pBindParameter);

  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00067	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0006d	89 4d a8	 mov	 DWORD PTR $T2[ebp], ecx
  00070	8b 55 a8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00079	83 c4 04	 add	 esp, 4
  0007c	eb 23		 jmp	 SHORT $LN5@OnAttemper
__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$0:
  0007e	33 c0		 xor	 eax, eax
  00080	75 19		 jne	 SHORT $LN4@OnAttemper
  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  00088	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0008b	51		 push	 ecx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LBEABMGC@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00091	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00096	85 c0		 test	 eax, eax
  00098	74 01		 je	 SHORT $LN4@OnAttemper
  0009a	cc		 int	 3
$LN4@OnAttemper:
  0009b	b8 00 00 00 00	 mov	 eax, $LN8@OnAttemper
  000a0	c3		 ret	 0
$LN5@OnAttemper:
  000a1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000a8	eb 07		 jmp	 SHORT __tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$1
$LN8@OnAttemper:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$1:
  000b1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 74   : 
; 75   : 	//设置组件
; 76   : 	m_GlobalInfoManager.ResetData();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	83 c1 24	 add	 ecx, 36			; 00000024H
  000c1	e8 00 00 00 00	 call	 ?ResetData@CGlobalInfoManager@@QAEXXZ ; CGlobalInfoManager::ResetData

; 77   : 
; 78   : 	return true;

  000c6	b0 01		 mov	 al, 1

; 79   : }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngineSink::OnAttemperEngineConclude
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
$T1 = -72						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngineSink::OnAttemperEngineStart, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	//绑定参数
; 48   : 	m_pBindParameter=new tagBindParameter[m_pInitParameter->m_wMaxConnect];

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00012	0f b7 41 04	 movzx	 eax, WORD PTR [ecx+4]
  00016	33 c9		 xor	 ecx, ecx
  00018	ba 14 00 00 00	 mov	 edx, 20			; 00000014H
  0001d	f7 e2		 mul	 edx
  0001f	0f 90 c1	 seto	 cl
  00022	f7 d9		 neg	 ecx
  00024	0b c8		 or	 ecx, eax
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 b8	 mov	 DWORD PTR $T1[ebp], eax
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 4d b8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 49   : 	ZeroMemory(m_pBindParameter,sizeof(tagBindParameter)*m_pInitParameter->m_wMaxConnect);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00041	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00045	6b c2 14	 imul	 eax, edx, 20
  00048	50		 push	 eax
  00049	6a 00		 push	 0
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 50   : 
; 51   : 	//设置定时器
; 52   : #ifndef _DEBUG
; 53   : 	m_pITimerEngine->SetTimer(IDI_LOAD_PLATFORM_PARAMETER,TIME_LOAD_PLATFORM_PARAMETER,TIMES_INFINITY,0);
; 54   : #else
; 55   : 	m_pITimerEngine->SetTimer(IDI_LOAD_PLATFORM_PARAMETER,60000,TIMES_INFINITY,0);

  0005a	6a 00		 push	 0
  0005c	6a ff		 push	 -1
  0005e	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00063	6a 01		 push	 1
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 88 30 01 00
	00		 mov	 ecx, DWORD PTR [eax+304]
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00071	8b 01		 mov	 eax, DWORD PTR [ecx]
  00073	8b 8a 30 01 00
	00		 mov	 ecx, DWORD PTR [edx+304]
  00079	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0007c	ff d2		 call	 edx

; 56   : #endif
; 57   : 
; 58   : 	return true;

  0007e	b0 01		 mov	 al, 1

; 59   : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngineSink::OnAttemperEngineStart
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z PROC ; CAttemperEngineSink::QueryInterface, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	QUERYINTERFACE(IAttemperEngineSink,Guid,dwQueryVer);

  0000c	68 00 00 00 00	 push	 OFFSET ?IID_IAttemperEngineSink@@3U_GUID@@B
  00011	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _==
  0001a	83 c4 08	 add	 esp, 8
  0001d	0f b6 c8	 movzx	 ecx, al
  00020	85 c9		 test	 ecx, ecx
  00022	74 1d		 je	 SHORT $LN2@QueryInter
  00024	68 00 01 01 06	 push	 100729088		; 06010100H
  00029	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00032	83 c4 08	 add	 esp, 8
  00035	0f b6 c8	 movzx	 ecx, al
  00038	85 c9		 test	 ecx, ecx
  0003a	74 05		 je	 SHORT $LN2@QueryInter
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	eb 37		 jmp	 SHORT $LN1@QueryInter
$LN2@QueryInter:

; 40   : 	QUERYINTERFACE_IUNKNOWNEX(IAttemperEngineSink,Guid,dwQueryVer);

  00041	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00046	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _==
  0004f	83 c4 08	 add	 esp, 8
  00052	0f b6 c8	 movzx	 ecx, al
  00055	85 c9		 test	 ecx, ecx
  00057	74 1d		 je	 SHORT $LN3@QueryInter
  00059	68 00 01 01 06	 push	 100729088		; 06010100H
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00067	83 c4 08	 add	 esp, 8
  0006a	0f b6 c8	 movzx	 ecx, al
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 05		 je	 SHORT $LN3@QueryInter
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN3@QueryInter:

; 41   : 	return NULL;

  00076	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 42   : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ENDP ; CAttemperEngineSink::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.h
;	COMDAT ?Release@CAttemperEngineSink@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@CAttemperEngineSink@@UAEXXZ PROC		; CAttemperEngineSink::Release, COMDAT
; _this$ = ecx

; 75   : 	virtual VOID Release() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?Release@CAttemperEngineSink@@UAEXXZ ENDP		; CAttemperEngineSink::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ??1CAttemperEngineSink@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAttemperEngineSink@@UAE@XZ PROC			; CAttemperEngineSink::~CAttemperEngineSink, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngineSink@@6B@

; 34   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 24	 add	 ecx, 36			; 00000024H
  0001b	e8 00 00 00 00	 call	 ??1CGlobalInfoManager@@UAE@XZ ; CGlobalInfoManager::~CGlobalInfoManager
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 08	 add	 ecx, 8
  00026	e8 00 00 00 00	 call	 ??1?$CWHArray@GABG@@UAE@XZ ; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??1CAttemperEngineSink@@UAE@XZ ENDP			; CAttemperEngineSink::~CAttemperEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ??0CAttemperEngineSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CAttemperEngineSink@@QAE@XZ PROC			; CAttemperEngineSink::CAttemperEngineSink, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CAttemperEngineSink@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0IAttemperEngineSink@@QAE@XZ
  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngineSink@@6B@
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 08	 add	 ecx, 8
  00042	e8 00 00 00 00	 call	 ??0?$CWHArray@GABG@@QAE@XZ ; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 24	 add	 ecx, 36			; 00000024H
  00054	e8 00 00 00 00	 call	 ??0CGlobalInfoManager@@QAE@XZ ; CGlobalInfoManager::CGlobalInfoManager

; 17   : 	//状态变量
; 18   : 	m_wCollectItem=INVALID_WORD;

  00059	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 19   : 
; 20   : 	//设置变量
; 21   : 	m_pInitParameter=NULL;

  00065	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 22   : 	m_pBindParameter=NULL;

  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 23   : 
; 24   : 	//组件变量
; 25   : 	m_pITimerEngine=NULL;

  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+304], 0

; 26   : 	m_pITCPNetworkEngine=NULL;

  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 80 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+308], 0

; 27   : 
; 28   : 	return;
; 29   : }

  00093	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@GABG@@UAE@XZ ; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
__ehhandler$??0CAttemperEngineSink@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CAttemperEngineSink@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CAttemperEngineSink@@QAE@XZ ENDP			; CAttemperEngineSink::CAttemperEngineSink
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@GABG@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@GABG@@UAEPAXI@Z PROC			; CWHArray<unsigned short,unsigned short const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@GABG@@UAE@XZ ; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@GABG@@UAEPAXI@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@GABG@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@GABG@@QAEXH@Z PROC		; CWHArray<unsigned short,unsigned short const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e da 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	d1 e0		 shl	 eax, 1
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009d	83 c4 04	 add	 esp, 4
  000a0	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a3	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a6	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000af	d1 e1		 shl	 ecx, 1
  000b1	51		 push	 ecx
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b8	50		 push	 eax
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 _memcpy
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cb	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000ce	d1 e1		 shl	 ecx, 1
  000d0	51		 push	 ecx
  000d1	6a 00		 push	 0
  000d3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d6	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000dc	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  000df	52		 push	 edx
  000e0	e8 00 00 00 00	 call	 _memset
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ee	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f1	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fa	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  000fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00103	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00106	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@GABG@@QAEXH@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@GABG@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@GABG@@QAEAAGH@Z PROC			; CWHArray<unsigned short,unsigned short const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@GABG@@QAEAAGH@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@GABG@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@GABG@@QAEXXZ PROC			; CWHArray<unsigned short,unsigned short const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 43		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	d1 e1		 shl	 ecx, 1
  0003c	51		 push	 ecx
  0003d	6a 00		 push	 0
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?RemoveAll@?$CWHArray@GABG@@QAEXXZ ENDP			; CWHArray<unsigned short,unsigned short const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z PROC		; CWHArray<unsigned short,unsigned short const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2e		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	d1 e0		 shl	 eax, 1
  000b9	50		 push	 eax
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c0	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c3	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  000c6	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000c9	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
  000cc	50		 push	 eax
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d3	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d6	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 _memmove
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e8	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z PROC		; CWHArray<unsigned short,unsigned short const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@GABG@@QAEXH@Z ; CWHArray<unsigned short,unsigned short const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	66 8b 00	 mov	 ax, WORD PTR [eax]
  0005d	66 89 04 51	 mov	 WORD PTR [ecx+edx*2], ax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@GABG@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@GABG@@QAEXH@Z PROC			; CWHArray<unsigned short,unsigned short const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@GABG@@QAEXH@Z ; CWHArray<unsigned short,unsigned short const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
  00070	50		 push	 eax
  00071	6a 02		 push	 2
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4c		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 41		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	d1 e1		 shl	 ecx, 1
  000b6	51		 push	 ecx
  000b7	6a 00		 push	 0
  000b9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bc	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000bf	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c2	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 _memset
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d4	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?SetSize@?$CWHArray@GABG@@QAEXH@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z PROC		; CWHArray<unsigned short,unsigned short const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@GABG@@QAEHABG@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@GABG@@QAEHABG@Z PROC			; CWHArray<unsigned short,unsigned short const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z ; CWHArray<unsigned short,unsigned short const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@GABG@@QAEHABG@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@GABG@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@GABG@@QBEHXZ PROC			; CWHArray<unsigned short,unsigned short const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@GABG@@QBEHXZ ENDP			; CWHArray<unsigned short,unsigned short const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@GABG@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@GABG@@UAE@XZ PROC				; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@GABG@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@GABG@@UAE@XZ ENDP				; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@GABG@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@GABG@@QAE@XZ PROC				; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@GABG@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@GABG@@QAE@XZ ENDP				; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?IsMatchServer@CGlobalServerItem@@QAE_NXZ
_TEXT	SEGMENT
tv74 = -72						; size = 4
_this$ = -4						; size = 4
?IsMatchServer@CGlobalServerItem@@QAE_NXZ PROC		; CGlobalServerItem::IsMatchServer, COMDAT
; _this$ = ecx

; 202  : 	bool IsMatchServer() { return (m_GameMatch.wServerID==m_GameServer.wServerID) && m_GameMatch.dwMatchID!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a1 00
	00 00		 movzx	 ecx, WORD PTR [eax+161]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	0f b7 42 0c	 movzx	 eax, WORD PTR [edx+12]
  0001d	3b c8		 cmp	 ecx, eax
  0001f	75 15		 jne	 SHORT $LN3@IsMatchSer
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 b9 a3 00 00
	00 00		 cmp	 DWORD PTR [ecx+163], 0
  0002b	74 09		 je	 SHORT $LN3@IsMatchSer
  0002d	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv74[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@IsMatchSer
$LN3@IsMatchSer:
  00036	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@IsMatchSer:
  0003d	8a 45 b8	 mov	 al, BYTE PTR tv74[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsMatchServer@CGlobalServerItem@@QAE_NXZ ENDP		; CGlobalServerItem::IsMatchServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetServerID@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetServerID@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetServerID, COMDAT
; _this$ = ecx

; 196  : 	WORD GetServerID() { return m_GameServer.wServerID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 0c	 mov	 ax, WORD PTR [eax+12]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetServerID@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetServerID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetKindID@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetKindID@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetKindID, COMDAT
; _this$ = ecx

; 194  : 	WORD GetKindID() { return m_GameServer.wKindID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 06	 mov	 ax, WORD PTR [eax+6]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetKindID@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetKindID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetIndex@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIndex@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetIndex, COMDAT
; _this$ = ecx

; 192  : 	WORD GetIndex() { return m_wIndex; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 04	 mov	 ax, WORD PTR [eax+4]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetIndex@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetIndex
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ PROC ; CGlobalUserItem::GetUserInfo, COMDAT
; _this$ = ecx

; 121  : 	tagUserInfo* GetUserInfo() {return &m_UserInfo; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 2f	 add	 eax, 47			; 0000002fH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ENDP ; CGlobalUserItem::GetUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetMasterOrder@CGlobalUserItem@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMasterOrder@CGlobalUserItem@@QAEEXZ PROC		; CGlobalUserItem::GetMasterOrder, COMDAT
; _this$ = ecx

; 119  : 	BYTE GetMasterOrder() { return m_cbMasterOrder; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 2e	 mov	 al, BYTE PTR [eax+46]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetMasterOrder@CGlobalUserItem@@QAEEXZ ENDP		; CGlobalUserItem::GetMasterOrder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetMemberOrder@CGlobalUserItem@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMemberOrder@CGlobalUserItem@@QAEEXZ PROC		; CGlobalUserItem::GetMemberOrder, COMDAT
; _this$ = ecx

; 117  : 	BYTE GetMemberOrder() { return m_cbMemberOrder; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 2d	 mov	 al, BYTE PTR [eax+45]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetMemberOrder@CGlobalUserItem@@QAEEXZ ENDP		; CGlobalUserItem::GetMemberOrder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetGender@CGlobalUserItem@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGender@CGlobalUserItem@@QAEEXZ PROC			; CGlobalUserItem::GetGender, COMDAT
; _this$ = ecx

; 115  : 	BYTE GetGender() { return m_cbGender; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 2c	 mov	 al, BYTE PTR [eax+44]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGender@CGlobalUserItem@@QAEEXZ ENDP			; CGlobalUserItem::GetGender
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetNickName@CGlobalUserItem@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNickName@CGlobalUserItem@@QAEPBDXZ PROC		; CGlobalUserItem::GetNickName, COMDAT
; _this$ = ecx

; 110  : 	LPCTSTR GetNickName() { return m_szNickName; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetNickName@CGlobalUserItem@@QAEPBDXZ ENDP		; CGlobalUserItem::GetNickName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetGameID@CGlobalUserItem@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameID@CGlobalUserItem@@QAEKXZ PROC			; CGlobalUserItem::GetGameID, COMDAT
; _this$ = ecx

; 108  : 	DWORD GetGameID() { return m_dwGameID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGameID@CGlobalUserItem@@QAEKXZ ENDP			; CGlobalUserItem::GetGameID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\globalinfomanager.h
;	COMDAT ?GetUserID@CGlobalUserItem@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserID@CGlobalUserItem@@QAEKXZ PROC			; CGlobalUserItem::GetUserID, COMDAT
; _this$ = ecx

; 106  : 	DWORD GetUserID() { return m_dwUserID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserID@CGlobalUserItem@@QAEKXZ ENDP			; CGlobalUserItem::GetUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAttemperEngineSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAttemperEngineSink@@QAE@XZ PROC			; IAttemperEngineSink::IAttemperEngineSink, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAttemperEngineSink@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IAttemperEngineSink@@QAE@XZ ENDP			; IAttemperEngineSink::IAttemperEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ PROC		; CMD_CS_C_HostCreatRoomInfo::CMD_CS_C_HostCreatRoomInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ??0tagHostCreatRoomInfo@@QAE@XZ ; tagHostCreatRoomInfo::tagHostCreatRoomInfo
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ ENDP		; CMD_CS_C_HostCreatRoomInfo::CMD_CS_C_HostCreatRoomInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMD_CS_C_DismissTableResult@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_CS_C_DismissTableResult@@QAE@XZ PROC		; CMD_CS_C_DismissTableResult::CMD_CS_C_DismissTableResult, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0tagPersonalUserScoreInfo@@QAE@XZ ; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
  00011	6a 08		 push	 8
  00013	6a 3c		 push	 60			; 0000003cH
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0CMD_CS_C_DismissTableResult@@QAE@XZ ENDP		; CMD_CS_C_DismissTableResult::CMD_CS_C_DismissTableResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00012	83 c4 04	 add	 esp, 4
  00015	0f b6 f0	 movzx	 esi, al
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00021	83 c4 04	 add	 esp, 4
  00024	0f b6 d0	 movzx	 edx, al
  00027	3b f2		 cmp	 esi, edx
  00029	7e 04		 jle	 SHORT $LN2@InterfaceV
  0002b	32 c0		 xor	 al, al
  0002d	eb 74		 jmp	 SHORT $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00038	83 c4 04	 add	 esp, 4
  0003b	0f b6 f0	 movzx	 esi, al
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00047	83 c4 04	 add	 esp, 4
  0004a	0f b6 d0	 movzx	 edx, al
  0004d	3b f2		 cmp	 esi, edx
  0004f	74 04		 je	 SHORT $LN3@InterfaceV
  00051	32 c0		 xor	 al, al
  00053	eb 4e		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00055	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0005e	83 c4 04	 add	 esp, 4
  00061	0f b6 f0	 movzx	 esi, al
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 d0	 movzx	 edx, al
  00073	3b f2		 cmp	 esi, edx
  00075	74 04		 je	 SHORT $LN4@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 28		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 f0	 movzx	 esi, al
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00093	83 c4 04	 add	 esp, 4
  00096	0f b6 d0	 movzx	 edx, al
  00099	3b f2		 cmp	 esi, edx
  0009b	74 04		 je	 SHORT $LN5@InterfaceV
  0009d	32 c0		 xor	 al, al
  0009f	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000a1	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	d1 e0		 shl	 eax, 1
  00010	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 03	 imul	 ecx, eax, 3
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagPersonalUserScoreInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalUserScoreInfo@@QAE@XZ PROC		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo, COMDAT
; _this$ = ecx

; 1112 : 	tagPersonalUserScoreInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1113 : 	{
; 1114 : 		memset(this, 0, sizeof(tagPersonalUserScoreInfo));

  0000c	6a 3c		 push	 60			; 0000003cH
  0000e	6a 00		 push	 0
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1115 : 	}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0tagPersonalUserScoreInfo@@QAE@XZ ENDP		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagHostCreatRoomInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagHostCreatRoomInfo@@QAE@XZ PROC			; tagHostCreatRoomInfo::tagHostCreatRoomInfo, COMDAT
; _this$ = ecx

; 1093 : 	tagHostCreatRoomInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1094 : 	{
; 1095 : 		memset(szRoomID, 0, sizeof(TCHAR) * MAX_CREATE_PERSONAL_ROOM *ROOM_ID_LEN);

  0000c	68 8c 00 00 00	 push	 140			; 0000008cH
  00011	6a 00		 push	 0
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 08	 add	 eax, 8
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 _memset
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1096 : 		memset(&hRoomCreateInfo, 0, sizeof(tagRoomCreateInfo) * MAX_CREATE_PERSONAL_ROOM);

  00022	68 c8 00 00 00	 push	 200			; 000000c8H
  00027	6a 00		 push	 0
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	05 94 00 00 00	 add	 eax, 148		; 00000094H
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 _memset
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1097 : 	}

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0tagHostCreatRoomInfo@@QAE@XZ ENDP			; tagHostCreatRoomInfo::tagHostCreatRoomInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBNHGHMI@atlTraceString@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 00 02 00	 push	 131072			; 00020000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  :             return _time64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00013	83 c4 04	 add	 esp, 4

; 537  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\tchar.h
;	COMDAT __tcslwr
_TEXT	SEGMENT
__String$ = 8						; size = 4
__tcslwr PROC						; COMDAT

; 1918 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1919 : #pragma warning(push)
; 1920 : #pragma warning(disable:4996)
; 1921 :     return (char *)_mbslwr((unsigned char *)_String);

  00009	8b 45 08	 mov	 eax, DWORD PTR __String$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbslwr
  00013	83 c4 04	 add	 esp, 4

; 1922 : #pragma warning(pop)
; 1923 : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__tcslwr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv68 = -68						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _IsEqualGUID
  00016	83 c4 08	 add	 esp, 8
  00019	85 c0		 test	 eax, eax
  0001b	74 09		 je	 SHORT $LN3@
  0001d	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00026	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  0002d	8a 45 bc	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -68						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 _memcmp
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN3@IsEqualGUI
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\协调服务器\attemperenginesink.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
