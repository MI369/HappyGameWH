; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\聊天服务器\ServerUserManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??$HashKey@K@@YGIK@Z				; HashKey<unsigned long>
PUBLIC	?pow@@YANNH@Z					; pow
PUBLIC	??0Cltladistance@@QAE@XZ			; Cltladistance::Cltladistance
PUBLIC	??1Cltladistance@@UAE@XZ			; Cltladistance::~Cltladistance
PUBLIC	?GetRadian@Cltladistance@@QAENN@Z		; Cltladistance::GetRadian
PUBLIC	?GetRound@Cltladistance@@QAEKN@Z		; Cltladistance::GetRound
PUBLIC	?GetDistance@Cltladistance@@QAENNNNN@Z		; Cltladistance::GetDistance
PUBLIC	??_GCltladistance@@UAEPAXI@Z			; Cltladistance::`scalar deleting destructor'
PUBLIC	??0CServerUserItem@@IAE@W4enUserItemKind@@@Z	; CServerUserItem::CServerUserItem
PUBLIC	??1CServerUserItem@@MAE@XZ			; CServerUserItem::~CServerUserItem
PUBLIC	??_GCServerUserItem@@MAEPAXI@Z			; CServerUserItem::`scalar deleting destructor'
PUBLIC	??0CLocalUserItem@@IAE@XZ			; CLocalUserItem::CLocalUserItem
PUBLIC	??1CLocalUserItem@@MAE@XZ			; CLocalUserItem::~CLocalUserItem
PUBLIC	?GetUserInfo@CLocalUserItem@@UAEPAUtagFriendUserInfo@@XZ ; CLocalUserItem::GetUserInfo
PUBLIC	?GetGender@CLocalUserItem@@UAEEXZ		; CLocalUserItem::GetGender
PUBLIC	?GetUserID@CLocalUserItem@@UAEKXZ		; CLocalUserItem::GetUserID
PUBLIC	?GetGameID@CLocalUserItem@@UAEKXZ		; CLocalUserItem::GetGameID
PUBLIC	?GetNickName@CLocalUserItem@@UAEPBDXZ		; CLocalUserItem::GetNickName
PUBLIC	?SetMainStatus@CLocalUserItem@@UAEXE@Z		; CLocalUserItem::SetMainStatus
PUBLIC	?SetGameStatus@CLocalUserItem@@UAEXEGG@Z	; CLocalUserItem::SetGameStatus
PUBLIC	?GetSocketID@CLocalUserItem@@UAEKXZ		; CLocalUserItem::GetSocketID
PUBLIC	?GetServerID@CLocalUserItem@@UAEGXZ		; CLocalUserItem::GetServerID
PUBLIC	?GetTableID@CLocalUserItem@@UAEGXZ		; CLocalUserItem::GetTableID
PUBLIC	?GetMainStatus@CLocalUserItem@@UAEEXZ		; CLocalUserItem::GetMainStatus
PUBLIC	?GetGameStatus@CLocalUserItem@@UAEEXZ		; CLocalUserItem::GetGameStatus
PUBLIC	?GetClientAddr@CLocalUserItem@@UAEKXZ		; CLocalUserItem::GetClientAddr
PUBLIC	?ContrastNickName@CLocalUserItem@@UAE_NPBD@Z	; CLocalUserItem::ContrastNickName
PUBLIC	?ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z	; CLocalUserItem::ContrastLogonPass
PUBLIC	?ModifyLogonPassword@CLocalUserItem@@QAEXPBD@Z	; CLocalUserItem::ModifyLogonPassword
PUBLIC	?SetSocketID@CLocalUserItem@@UAEXK@Z		; CLocalUserItem::SetSocketID
PUBLIC	?GetLogonTime@CLocalUserItem@@UAEKXZ		; CLocalUserItem::GetLogonTime
PUBLIC	?SetLogonTime@CLocalUserItem@@UAEXK@Z		; CLocalUserItem::SetLogonTime
PUBLIC	?ResetUserItem@CLocalUserItem@@EAEXXZ		; CLocalUserItem::ResetUserItem
PUBLIC	??_GCLocalUserItem@@MAEPAXI@Z			; CLocalUserItem::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
PUBLIC	??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::~CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEHABQAUtagNearUserInfo@@@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetAtGrow
PUBLIC	?InsertAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::InsertAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`scalar deleting destructor'
PUBLIC	??0CNearUserManager@@QAE@XZ			; CNearUserManager::CNearUserManager
PUBLIC	??1CNearUserManager@@UAE@XZ			; CNearUserManager::~CNearUserManager
PUBLIC	?EnumUserItem@CNearUserManager@@UAEPAUtagNearUserInfo@@K@Z ; CNearUserManager::EnumUserItem
PUBLIC	?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z ; CNearUserManager::InsertNearUserItem
PUBLIC	?GetUserItemCount@CNearUserManager@@UAEKXZ	; CNearUserManager::GetUserItemCount
PUBLIC	??_GCNearUserManager@@UAEPAXI@Z			; CNearUserManager::`scalar deleting destructor'
PUBLIC	??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
PUBLIC	??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::operator[]
PUBLIC	?SetAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXKPAVCServerUserItem@@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::SetAt
PUBLIC	?RemoveKey@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCServerUserItem@@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetAssocAt
PUBLIC	??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
PUBLIC	?Serialize@?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::Serialize
PUBLIC	?Dump@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::Dump
PUBLIC	?AssertValid@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXXZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::AssertValid
PUBLIC	??_G?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEPAXI@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::CWHArray<CServerUserItem *,CServerUserItem * const &>
PUBLIC	??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABQAVCServerUserItem@@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Add
PUBLIC	?Append@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABV1@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHABQAVCServerUserItem@@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAEPAXI@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`scalar deleting destructor'
PUBLIC	??0CServerUserManager@@QAE@XZ			; CServerUserManager::CServerUserManager
PUBLIC	??1CServerUserManager@@UAE@XZ			; CServerUserManager::~CServerUserManager
PUBLIC	?EnumUserItem@CServerUserManager@@UAEPAVCServerUserItem@@G@Z ; CServerUserManager::EnumUserItem
PUBLIC	?SearchUserItem@CServerUserManager@@UAEPAVCServerUserItem@@K@Z ; CServerUserManager::SearchUserItem
PUBLIC	?GetUserItemCount@CServerUserManager@@UAEKXZ	; CServerUserManager::GetUserItemCount
PUBLIC	?DeleteUserItem@CServerUserManager@@UAE_NXZ	; CServerUserManager::DeleteUserItem
PUBLIC	?DeleteUserItem@CServerUserManager@@UAE_NK@Z	; CServerUserManager::DeleteUserItem
PUBLIC	?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z ; CServerUserManager::InsertLocalUserItem
PUBLIC	?GetNearUserItem@CServerUserManager@@UAEKKAAVCNearUserManager@@@Z ; CServerUserManager::GetNearUserItem
PUBLIC	?QueryNearUserItem@CServerUserManager@@UAEKKKAAVCNearUserManager@@@Z ; CServerUserManager::QueryNearUserItem
PUBLIC	??_GCServerUserManager@@UAEPAXI@Z		; CServerUserManager::`scalar deleting destructor'
PUBLIC	??0CUserFriendGroup@@QAE@XZ			; CUserFriendGroup::CUserFriendGroup
PUBLIC	??1CUserFriendGroup@@UAE@XZ			; CUserFriendGroup::~CUserFriendGroup
PUBLIC	?SetOwnerUserID@CUserFriendGroup@@QAEXK@Z	; CUserFriendGroup::SetOwnerUserID
PUBLIC	?GetOwnerUserID@CUserFriendGroup@@QAEKXZ	; CUserFriendGroup::GetOwnerUserID
PUBLIC	?GetGroupContent@CUserFriendGroup@@QAEGXZ	; CUserFriendGroup::GetGroupContent
PUBLIC	?InitFriendGroup@CUserFriendGroup@@QAE_NG@Z	; CUserFriendGroup::InitFriendGroup
PUBLIC	?AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z ; CUserFriendGroup::AppendFriendInfo
PUBLIC	?RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z	; CUserFriendGroup::RemoveFriendInfo
PUBLIC	?SearchFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@K@Z ; CUserFriendGroup::SearchFriendItem
PUBLIC	?EnumFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@G@Z ; CUserFriendGroup::EnumFriendItem
PUBLIC	?ResetFriendGroup@CUserFriendGroup@@QAEXXZ	; CUserFriendGroup::ResetFriendGroup
PUBLIC	?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z ; CUserFriendGroup::AllocateContent
PUBLIC	?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z	; CUserFriendGroup::ExtendGroupContent
PUBLIC	??_GCUserFriendGroup@@UAEPAXI@Z			; CUserFriendGroup::`scalar deleting destructor'
PUBLIC	??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
PUBLIC	??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::operator[]
PUBLIC	?SetAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXKPAVCUserFriendGroup@@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::SetAt
PUBLIC	?RemoveKey@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCUserFriendGroup@@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetAssocAt
PUBLIC	??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
PUBLIC	?Serialize@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::Serialize
PUBLIC	?Dump@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::Dump
PUBLIC	?AssertValid@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXXZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::AssertValid
PUBLIC	??_G?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEPAXI@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
PUBLIC	??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABQAVCUserFriendGroup@@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Add
PUBLIC	?Append@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABV1@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHABQAVCUserFriendGroup@@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAEPAXI@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`scalar deleting destructor'
PUBLIC	??0CFriendGroupManager@@QAE@XZ			; CFriendGroupManager::CFriendGroupManager
PUBLIC	??1CFriendGroupManager@@UAE@XZ			; CFriendGroupManager::~CFriendGroupManager
PUBLIC	?EnumGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@G@Z ; CFriendGroupManager::EnumGroupItem
PUBLIC	?SearchGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@K@Z ; CFriendGroupManager::SearchGroupItem
PUBLIC	?DeleteFriendGroup@CFriendGroupManager@@UAE_NXZ	; CFriendGroupManager::DeleteFriendGroup
PUBLIC	?DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z ; CFriendGroupManager::DeleteFriendGroup
PUBLIC	?InsertFriendGroup@CFriendGroupManager@@UAE_NKPAVCUserFriendGroup@@@Z ; CFriendGroupManager::InsertFriendGroup
PUBLIC	?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z ; CFriendGroupManager::ActiveFriendGroup
PUBLIC	??_GCFriendGroupManager@@UAEPAXI@Z		; CFriendGroupManager::`scalar deleting destructor'
PUBLIC	??0CPair@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CAssoc::CAssoc
PUBLIC	??$CompareElements@KK@@YGHPBK0@Z		; CompareElements<unsigned long,unsigned long>
PUBLIC	??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z	; SerializeElements<unsigned long>
PUBLIC	??$SerializeElements@PAVCServerUserItem@@@@YGXAAVCArchive@@PAPAVCServerUserItem@@H@Z ; SerializeElements<CServerUserItem *>
PUBLIC	??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z	; DumpElements<unsigned long>
PUBLIC	??$DumpElements@PAVCServerUserItem@@@@YGXAAVCDumpContext@@PBQAVCServerUserItem@@H@Z ; DumpElements<CServerUserItem *>
PUBLIC	??0CPair@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCUserFriendGroup@@@@YGXAAVCArchive@@PAPAVCUserFriendGroup@@H@Z ; SerializeElements<CUserFriendGroup *>
PUBLIC	??$DumpElements@PAVCUserFriendGroup@@@@YGXAAVCDumpContext@@PBQAVCUserFriendGroup@@H@Z ; DumpElements<CUserFriendGroup *>
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_7Cltladistance@@6B@				; Cltladistance::`vftable'
PUBLIC	??_7CServerUserItem@@6B@			; CServerUserItem::`vftable'
PUBLIC	??_7CLocalUserItem@@6B@				; CLocalUserItem::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`vftable'
PUBLIC	??_7CNearUserManager@@6B@			; CNearUserManager::`vftable'
PUBLIC	??_7?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@	; CWHArray<CServerUserItem *,CServerUserItem * const &>::`vftable'
PUBLIC	??_7CServerUserManager@@6B@			; CServerUserManager::`vftable'
PUBLIC	??_7CUserFriendGroup@@6B@			; CUserFriendGroup::`vftable'
PUBLIC	??_7?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`vftable'
PUBLIC	??_7CFriendGroupManager@@6B@			; CFriendGroupManager::`vftable'
PUBLIC	?__LINE__Var@?0??ContrastNickName@CLocalUserItem@@UAE_NPBD@Z@4JA ; `CLocalUserItem::ContrastNickName'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z@4JA ; `CLocalUserItem::ContrastLogonPass'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CUserFriendGroup@@UAE@XZ@4JA	; `CUserFriendGroup::~CUserFriendGroup'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z@4JA ; `CUserFriendGroup::AppendFriendInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z@4JA ; `CUserFriendGroup::RemoveFriendInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z@4JA ; `CUserFriendGroup::AllocateContent'::`1'::__LINE__Var
PUBLIC	__TI2PAD
PUBLIC	__CTA2PAD
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAD@84
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAX@84
PUBLIC	??_C@_0BP@FPJIDAGE@?O?$LF?M?$LD?D?Z?$LE?f?W?J?T?$LE?$LC?$LL?W?c?0?N?$NO?$LH?$KI?$LH?V?E?d?D?Z?$LE?f?$CB@ ; `string'
PUBLIC	?__LINE__Var@?0??ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z@4JA ; `CUserFriendGroup::ExtendGroupContent'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CServerUserManager@@UAE@XZ@4JA ; `CServerUserManager::~CServerUserManager'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteUserItem@CServerUserManager@@UAE_NK@Z@4JA ; `CServerUserManager::DeleteUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z@4JA ; `CServerUserManager::InsertLocalUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CFriendGroupManager@@UAE@XZ@4JA ; `CFriendGroupManager::~CFriendGroupManager'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z@4JA ; `CFriendGroupManager::DeleteFriendGroup'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z@4JA ; `CFriendGroupManager::ActiveFriendGroup'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CNearUserManager@@UAE@XZ@4JA	; `CNearUserManager::~CNearUserManager'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z@4JA ; `CNearUserManager::InsertNearUserItem'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_R4Cltladistance@@6B@				; Cltladistance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCltladistance@@@8			; Cltladistance `RTTI Type Descriptor'
PUBLIC	??_R3Cltladistance@@8				; Cltladistance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Cltladistance@@8				; Cltladistance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Cltladistance@@8			; Cltladistance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CServerUserItem@@6B@			; CServerUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServerUserItem@@@8			; CServerUserItem `RTTI Type Descriptor'
PUBLIC	??_R3CServerUserItem@@8				; CServerUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServerUserItem@@8				; CServerUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServerUserItem@@8		; CServerUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CServerUserManager@@6B@			; CServerUserManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServerUserManager@@@8			; CServerUserManager `RTTI Type Descriptor'
PUBLIC	??_R3CServerUserManager@@8			; CServerUserManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServerUserManager@@8			; CServerUserManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServerUserManager@@8		; CServerUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CLocalUserItem@@6B@			; CLocalUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLocalUserItem@@@8			; CLocalUserItem `RTTI Type Descriptor'
PUBLIC	??_R3CLocalUserItem@@8				; CLocalUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLocalUserItem@@8				; CLocalUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLocalUserItem@@8			; CLocalUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCServerUserItem@@ABQAV1@@@@8 ; CWHArray<CServerUserItem *,CServerUserItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8	; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8	; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8 ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KKPAVCServerUserItem@@PAV1@@@@8	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KKPAVCServerUserItem@@PAV1@@@8	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KKPAVCServerUserItem@@PAV1@@@8	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KKPAVCServerUserItem@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@@8 ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8 ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNearUserManager@@6B@			; CNearUserManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNearUserManager@@@8			; CNearUserManager `RTTI Type Descriptor'
PUBLIC	??_R3CNearUserManager@@8			; CNearUserManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNearUserManager@@8			; CNearUserManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNearUserManager@@8		; CNearUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CUserFriendGroup@@6B@			; CUserFriendGroup::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCUserFriendGroup@@@8			; CUserFriendGroup `RTTI Type Descriptor'
PUBLIC	??_R3CUserFriendGroup@@8			; CUserFriendGroup::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUserFriendGroup@@8			; CUserFriendGroup::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CUserFriendGroup@@8		; CUserFriendGroup::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CFriendGroupManager@@6B@			; CFriendGroupManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFriendGroupManager@@@8			; CFriendGroupManager `RTTI Type Descriptor'
PUBLIC	??_R3CFriendGroupManager@@8			; CFriendGroupManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFriendGroupManager@@8			; CFriendGroupManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFriendGroupManager@@8		; CFriendGroupManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@@8 ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8 ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KKPAVCUserFriendGroup@@PAV1@@@@8	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400921fb4d12d84a
PUBLIC	__real@4066800000000000
PUBLIC	__real@40b8ea23126e978d
PUBLIC	__real@416312d000000000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__CompareStringA@24:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	_asin:PROC
EXTRN	_cos:PROC
EXTRN	_pow:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp__floor:PROC
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??_ECltladistance@@UAEPAXI@Z:PROC		; Cltladistance::`vector deleting destructor'
EXTRN	??_ECServerUserItem@@MAEPAXI@Z:PROC		; CServerUserItem::`vector deleting destructor'
EXTRN	??_ECLocalUserItem@@MAEPAXI@Z:PROC		; CLocalUserItem::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`vector deleting destructor'
EXTRN	??_ECNearUserManager@@UAEPAXI@Z:PROC		; CNearUserManager::`vector deleting destructor'
EXTRN	??_E?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAEPAXI@Z:PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`vector deleting destructor'
EXTRN	??_ECServerUserManager@@UAEPAXI@Z:PROC		; CServerUserManager::`vector deleting destructor'
EXTRN	??_ECUserFriendGroup@@UAEPAXI@Z:PROC		; CUserFriendGroup::`vector deleting destructor'
EXTRN	??_E?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAEPAXI@Z:PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`vector deleting destructor'
EXTRN	??_ECFriendGroupManager@@UAEPAXI@Z:PROC		; CFriendGroupManager::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__dtoui3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@416312d000000000
CONST	SEGMENT
__real@416312d000000000 DQ 0416312d000000000r	; 1e+07
CONST	ENDS
;	COMDAT __real@40b8ea23126e978d
CONST	SEGMENT
__real@40b8ea23126e978d DQ 040b8ea23126e978dr	; 6378.14
CONST	ENDS
;	COMDAT __real@4066800000000000
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@400921fb4d12d84a
CONST	SEGMENT
__real@400921fb4d12d84a DQ 0400921fb4d12d84ar	; 3.14159
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@KKPAVCUserFriendGroup@@PAV1@@@@8 ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8 DD 00H	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KKPAVCUserFriendGroup@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KKPAVCUserFriendGroup@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KKPAVCUserFriendGroup@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@ DD 00H	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KKPAVCUserFriendGroup@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@KKPAVCUserFriendGroup@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@@8 ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8 ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8 DD 00H	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@ DD 00H ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFriendGroupManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFriendGroupManager@@8 DD FLAT:??_R0?AVCFriendGroupManager@@@8 ; CFriendGroupManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFriendGroupManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CFriendGroupManager@@8
rdata$r	SEGMENT
??_R2CFriendGroupManager@@8 DD FLAT:??_R1A@?0A@EA@CFriendGroupManager@@8 ; CFriendGroupManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFriendGroupManager@@8
rdata$r	SEGMENT
??_R3CFriendGroupManager@@8 DD 00H			; CFriendGroupManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFriendGroupManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFriendGroupManager@@@8
data$r	SEGMENT
??_R0?AVCFriendGroupManager@@@8 DD FLAT:??_7type_info@@6B@ ; CFriendGroupManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFriendGroupManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CFriendGroupManager@@6B@
rdata$r	SEGMENT
??_R4CFriendGroupManager@@6B@ DD 00H			; CFriendGroupManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFriendGroupManager@@@8
	DD	FLAT:??_R3CFriendGroupManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CUserFriendGroup@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUserFriendGroup@@8 DD FLAT:??_R0?AVCUserFriendGroup@@@8 ; CUserFriendGroup::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUserFriendGroup@@8
rdata$r	ENDS
;	COMDAT ??_R2CUserFriendGroup@@8
rdata$r	SEGMENT
??_R2CUserFriendGroup@@8 DD FLAT:??_R1A@?0A@EA@CUserFriendGroup@@8 ; CUserFriendGroup::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CUserFriendGroup@@8
rdata$r	SEGMENT
??_R3CUserFriendGroup@@8 DD 00H				; CUserFriendGroup::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CUserFriendGroup@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUserFriendGroup@@@8
data$r	SEGMENT
??_R0?AVCUserFriendGroup@@@8 DD FLAT:??_7type_info@@6B@	; CUserFriendGroup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCUserFriendGroup@@', 00H
data$r	ENDS
;	COMDAT ??_R4CUserFriendGroup@@6B@
rdata$r	SEGMENT
??_R4CUserFriendGroup@@6B@ DD 00H			; CUserFriendGroup::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCUserFriendGroup@@@8
	DD	FLAT:??_R3CUserFriendGroup@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNearUserManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNearUserManager@@8 DD FLAT:??_R0?AVCNearUserManager@@@8 ; CNearUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNearUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CNearUserManager@@8
rdata$r	SEGMENT
??_R2CNearUserManager@@8 DD FLAT:??_R1A@?0A@EA@CNearUserManager@@8 ; CNearUserManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CNearUserManager@@8
rdata$r	SEGMENT
??_R3CNearUserManager@@8 DD 00H				; CNearUserManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CNearUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNearUserManager@@@8
data$r	SEGMENT
??_R0?AVCNearUserManager@@@8 DD FLAT:??_7type_info@@6B@	; CNearUserManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNearUserManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CNearUserManager@@6B@
rdata$r	SEGMENT
??_R4CNearUserManager@@6B@ DD 00H			; CNearUserManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNearUserManager@@@8
	DD	FLAT:??_R3CNearUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@@8 ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8 ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8 DD 00H	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@ DD 00H	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KKPAVCServerUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KKPAVCServerUserItem@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@KKPAVCServerUserItem@@PAV1@@@@8 ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KKPAVCServerUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KKPAVCServerUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@KKPAVCServerUserItem@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KKPAVCServerUserItem@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KKPAVCServerUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@KKPAVCServerUserItem@@PAV1@@@8 DD 00H	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KKPAVCServerUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KKPAVCServerUserItem@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KKPAVCServerUserItem@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KKPAVCServerUserItem@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@ DD 00H	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KKPAVCServerUserItem@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@KKPAVCServerUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCServerUserItem@@ABQAV1@@@@8 ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8 ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8 DD 00H	; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCServerUserItem@@ABQAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCServerUserItem@@ABQAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<CServerUserItem *,CServerUserItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCServerUserItem@@ABQAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@ DD 00H	; CWHArray<CServerUserItem *,CServerUserItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCServerUserItem@@ABQAV1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCServerUserItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLocalUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLocalUserItem@@8 DD FLAT:??_R0?AVCLocalUserItem@@@8 ; CLocalUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLocalUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CLocalUserItem@@8
rdata$r	SEGMENT
??_R2CLocalUserItem@@8 DD FLAT:??_R1A@?0A@EA@CLocalUserItem@@8 ; CLocalUserItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CServerUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R3CLocalUserItem@@8
rdata$r	SEGMENT
??_R3CLocalUserItem@@8 DD 00H				; CLocalUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CLocalUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLocalUserItem@@@8
data$r	SEGMENT
??_R0?AVCLocalUserItem@@@8 DD FLAT:??_7type_info@@6B@	; CLocalUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLocalUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CLocalUserItem@@6B@
rdata$r	SEGMENT
??_R4CLocalUserItem@@6B@ DD 00H				; CLocalUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLocalUserItem@@@8
	DD	FLAT:??_R3CLocalUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CServerUserManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServerUserManager@@8 DD FLAT:??_R0?AVCServerUserManager@@@8 ; CServerUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServerUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CServerUserManager@@8
rdata$r	SEGMENT
??_R2CServerUserManager@@8 DD FLAT:??_R1A@?0A@EA@CServerUserManager@@8 ; CServerUserManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CServerUserManager@@8
rdata$r	SEGMENT
??_R3CServerUserManager@@8 DD 00H			; CServerUserManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CServerUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServerUserManager@@@8
data$r	SEGMENT
??_R0?AVCServerUserManager@@@8 DD FLAT:??_7type_info@@6B@ ; CServerUserManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServerUserManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServerUserManager@@6B@
rdata$r	SEGMENT
??_R4CServerUserManager@@6B@ DD 00H			; CServerUserManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServerUserManager@@@8
	DD	FLAT:??_R3CServerUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CServerUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServerUserItem@@8 DD FLAT:??_R0?AVCServerUserItem@@@8 ; CServerUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServerUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CServerUserItem@@8
rdata$r	SEGMENT
??_R2CServerUserItem@@8 DD FLAT:??_R1A@?0A@EA@CServerUserItem@@8 ; CServerUserItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CServerUserItem@@8
rdata$r	SEGMENT
??_R3CServerUserItem@@8 DD 00H				; CServerUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CServerUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServerUserItem@@@8
data$r	SEGMENT
??_R0?AVCServerUserItem@@@8 DD FLAT:??_7type_info@@6B@	; CServerUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServerUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServerUserItem@@6B@
rdata$r	SEGMENT
??_R4CServerUserItem@@6B@ DD 00H			; CServerUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServerUserItem@@@8
	DD	FLAT:??_R3CServerUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Cltladistance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Cltladistance@@8 DD FLAT:??_R0?AVCltladistance@@@8 ; Cltladistance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Cltladistance@@8
rdata$r	ENDS
;	COMDAT ??_R2Cltladistance@@8
rdata$r	SEGMENT
??_R2Cltladistance@@8 DD FLAT:??_R1A@?0A@EA@Cltladistance@@8 ; Cltladistance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Cltladistance@@8
rdata$r	SEGMENT
??_R3Cltladistance@@8 DD 00H				; Cltladistance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Cltladistance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCltladistance@@@8
data$r	SEGMENT
??_R0?AVCltladistance@@@8 DD FLAT:??_7type_info@@6B@	; Cltladistance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCltladistance@@', 00H
data$r	ENDS
;	COMDAT ??_R4Cltladistance@@6B@
rdata$r	SEGMENT
??_R4Cltladistance@@6B@ DD 00H				; Cltladistance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCltladistance@@@8
	DD	FLAT:??_R3Cltladistance@@8
rdata$r	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z@4JA DD 02a7H ; `CNearUserManager::InsertNearUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CNearUserManager@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CNearUserManager@@UAE@XZ@4JA DD 0294H ; `CNearUserManager::~CNearUserManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z@4JA DD 0266H ; `CFriendGroupManager::ActiveFriendGroup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z@4JA DD 023bH ; `CFriendGroupManager::DeleteFriendGroup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CFriendGroupManager@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CFriendGroupManager@@UAE@XZ@4JA DD 020aH ; `CFriendGroupManager::~CFriendGroupManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z@4JA DD 018dH ; `CServerUserManager::InsertLocalUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteUserItem@CServerUserManager@@UAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteUserItem@CServerUserManager@@UAE_NK@Z@4JA DD 016fH ; `CServerUserManager::DeleteUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CServerUserManager@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CServerUserManager@@UAE@XZ@4JA DD 013cH ; `CServerUserManager::~CServerUserManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z@4JA DD 010aH ; `CUserFriendGroup::ExtendGroupContent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BP@FPJIDAGE@?O?$LF?M?$LD?D?Z?$LE?f?W?J?T?$LE?$LC?$LL?W?c?0?N?$NO?$LH?$KI?$LH?V?E?d?D?Z?$LE?f?$CB@
CONST	SEGMENT
??_C@_0BP@FPJIDAGE@?O?$LF?M?$LD?D?Z?$LE?f?W?J?T?$LE?$LC?$LL?W?c?0?N?$NO?$LH?$KI?$LH?V?E?d?D?Z?$LE?f?$CB@ DB 0cfH
	DB	0b5H, 0cdH, 0b3H, 0c4H, 0daH, 0b4H, 0e6H, 0d7H, 0caH, 0d4H, 0b4H
	DB	0b2H, 0bbH, 0d7H, 0e3H, ',', 0ceH, 0deH, 0b7H, 0a8H, 0b7H, 0d6H
	DB	0c5H, 0e4H, 0c4H, 0daH, 0b4H, 0e6H, '!', 00H	; `string'
CONST	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAX@8
data$r	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
data$r	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __TI2PAD
xdata$x	SEGMENT
__TI2PAD DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?0??AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z@4JA DD 0f1H ; `CUserFriendGroup::AllocateContent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z@4JA DD 0c1H ; `CUserFriendGroup::RemoveFriendInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z@4JA DD 0b1H ; `CUserFriendGroup::AppendFriendInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CUserFriendGroup@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CUserFriendGroup@@UAE@XZ@4JA DD 09eH	; `CUserFriendGroup::~CUserFriendGroup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z@4JA DD 069H ; `CLocalUserItem::ContrastLogonPass'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c1H, 0c4H, 0ccH, 0ecH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H
	DB	0f7H, '\serverusermanager.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ContrastNickName@CLocalUserItem@@UAE_NPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ContrastNickName@CLocalUserItem@@UAE_NPBD@Z@4JA DD 057H ; `CLocalUserItem::ContrastNickName'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CFriendGroupManager@@6B@
CONST	SEGMENT
??_7CFriendGroupManager@@6B@ DD FLAT:??_R4CFriendGroupManager@@6B@ ; CFriendGroupManager::`vftable'
	DD	FLAT:??_ECFriendGroupManager@@UAEPAXI@Z
	DD	FLAT:?EnumGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@G@Z
	DD	FLAT:?SearchGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@K@Z
	DD	FLAT:?DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z
	DD	FLAT:?DeleteFriendGroup@CFriendGroupManager@@UAE_NXZ
	DD	FLAT:?InsertFriendGroup@CFriendGroupManager@@UAE_NKPAVCUserFriendGroup@@@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CUserFriendGroup@@6B@
CONST	SEGMENT
??_7CUserFriendGroup@@6B@ DD FLAT:??_R4CUserFriendGroup@@6B@ ; CUserFriendGroup::`vftable'
	DD	FLAT:??_ECUserFriendGroup@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CServerUserManager@@6B@
CONST	SEGMENT
??_7CServerUserManager@@6B@ DD FLAT:??_R4CServerUserManager@@6B@ ; CServerUserManager::`vftable'
	DD	FLAT:??_ECServerUserManager@@UAEPAXI@Z
	DD	FLAT:?EnumUserItem@CServerUserManager@@UAEPAVCServerUserItem@@G@Z
	DD	FLAT:?SearchUserItem@CServerUserManager@@UAEPAVCServerUserItem@@K@Z
	DD	FLAT:?GetUserItemCount@CServerUserManager@@UAEKXZ
	DD	FLAT:?DeleteUserItem@CServerUserManager@@UAE_NK@Z
	DD	FLAT:?DeleteUserItem@CServerUserManager@@UAE_NXZ
	DD	FLAT:?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z
	DD	FLAT:?GetNearUserItem@CServerUserManager@@UAEKKAAVCNearUserManager@@@Z
	DD	FLAT:?QueryNearUserItem@CServerUserManager@@UAEKKKAAVCNearUserManager@@@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CNearUserManager@@6B@
CONST	SEGMENT
??_7CNearUserManager@@6B@ DD FLAT:??_R4CNearUserManager@@6B@ ; CNearUserManager::`vftable'
	DD	FLAT:??_ECNearUserManager@@UAEPAXI@Z
	DD	FLAT:?EnumUserItem@CNearUserManager@@UAEPAUtagNearUserInfo@@K@Z
	DD	FLAT:?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z
	DD	FLAT:?GetUserItemCount@CNearUserManager@@UAEKXZ
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CLocalUserItem@@6B@
CONST	SEGMENT
??_7CLocalUserItem@@6B@ DD FLAT:??_R4CLocalUserItem@@6B@ ; CLocalUserItem::`vftable'
	DD	FLAT:??_ECLocalUserItem@@MAEPAXI@Z
	DD	FLAT:?GetUserID@CLocalUserItem@@UAEKXZ
	DD	FLAT:?SetMainStatus@CLocalUserItem@@UAEXE@Z
	DD	FLAT:?SetGameStatus@CLocalUserItem@@UAEXEGG@Z
	DD	FLAT:?GetMainStatus@CLocalUserItem@@UAEEXZ
	DD	FLAT:?GetGameStatus@CLocalUserItem@@UAEEXZ
	DD	FLAT:?GetServerID@CLocalUserItem@@UAEGXZ
	DD	FLAT:?GetTableID@CLocalUserItem@@UAEGXZ
	DD	FLAT:?GetClientAddr@CLocalUserItem@@UAEKXZ
	DD	FLAT:?ResetUserItem@CLocalUserItem@@EAEXXZ
	DD	FLAT:?GetUserInfo@CLocalUserItem@@UAEPAUtagFriendUserInfo@@XZ
	DD	FLAT:?GetGender@CLocalUserItem@@UAEEXZ
	DD	FLAT:?GetGameID@CLocalUserItem@@UAEKXZ
	DD	FLAT:?GetNickName@CLocalUserItem@@UAEPBDXZ
	DD	FLAT:?GetSocketID@CLocalUserItem@@UAEKXZ
	DD	FLAT:?ContrastNickName@CLocalUserItem@@UAE_NPBD@Z
	DD	FLAT:?ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z
	DD	FLAT:?SetSocketID@CLocalUserItem@@UAEXK@Z
	DD	FLAT:?GetLogonTime@CLocalUserItem@@UAEKXZ
	DD	FLAT:?SetLogonTime@CLocalUserItem@@UAEXK@Z
CONST	ENDS
;	COMDAT ??_7CServerUserItem@@6B@
CONST	SEGMENT
??_7CServerUserItem@@6B@ DD FLAT:??_R4CServerUserItem@@6B@ ; CServerUserItem::`vftable'
	DD	FLAT:??_ECServerUserItem@@MAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7Cltladistance@@6B@
CONST	SEGMENT
??_7Cltladistance@@6B@ DD FLAT:??_R4Cltladistance@@6B@	; Cltladistance::`vftable'
	DD	FLAT:??_ECltladistance@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z$0
__tryblocktable$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z$3
__unwindtable$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z
	DD	01H
	DD	FLAT:__tryblocktable$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CFriendGroupManager@@UAE@XZ$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CFriendGroupManager@@UAE@XZ$2
__catchsym$??1CFriendGroupManager@@UAE@XZ$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CFriendGroupManager@@UAE@XZ$0
__ehfuncinfo$??1CFriendGroupManager@@UAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??1CFriendGroupManager@@UAE@XZ
	DD	02H
	DD	FLAT:__tryblocktable$??1CFriendGroupManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__tryblocktable$??1CFriendGroupManager@@UAE@XZ DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??1CFriendGroupManager@@UAE@XZ$7
	DD	05H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$??1CFriendGroupManager@@UAE@XZ$8
__unwindtable$??1CFriendGroupManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFriendGroupManager@@UAE@XZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFriendGroupManager@@UAE@XZ$5
	DD	01H
	DD	FLAT:__unwindfunclet$??1CFriendGroupManager@@UAE@XZ$6
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	02H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFriendGroupManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFriendGroupManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CFriendGroupManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CFriendGroupManager@@QAE@XZ$2
__ehfuncinfo$??0CFriendGroupManager@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CFriendGroupManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$2
__catchsym$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$0
__unwindtable$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z
	DD	02H
	DD	FLAT:__tryblocktable$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$4
	DD	00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$0
__catchsym$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$1
__unwindtable$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z
	DD	02H
	DD	FLAT:__tryblocktable$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CUserFriendGroup@@UAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CUserFriendGroup@@UAE@XZ$0
__unwindtable$??1CUserFriendGroup@@UAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??1CUserFriendGroup@@UAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1CUserFriendGroup@@UAE@XZ$2
__ehfuncinfo$??1CUserFriendGroup@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CUserFriendGroup@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CUserFriendGroup@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z$0
__tryblocktable$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z$3
__unwindtable$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CServerUserManager@@UAE@XZ$9 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerUserManager@@UAE@XZ$2
__catchsym$??1CServerUserManager@@UAE@XZ$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerUserManager@@UAE@XZ$0
__ehfuncinfo$??1CServerUserManager@@UAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CServerUserManager@@UAE@XZ
	DD	02H
	DD	FLAT:__tryblocktable$??1CServerUserManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__tryblocktable$??1CServerUserManager@@UAE@XZ DD 04H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$??1CServerUserManager@@UAE@XZ$8
	DD	06H
	DD	06H
	DD	07H
	DD	01H
	DD	FLAT:__catchsym$??1CServerUserManager@@UAE@XZ$9
__unwindtable$??1CServerUserManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CServerUserManager@@UAE@XZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$??1CServerUserManager@@UAE@XZ$5
	DD	01H
	DD	FLAT:__unwindfunclet$??1CServerUserManager@@UAE@XZ$6
	DD	02H
	DD	FLAT:__unwindfunclet$??1CServerUserManager@@UAE@XZ$7
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	03H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CServerUserManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CServerUserManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CServerUserManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CServerUserManager@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CServerUserManager@@QAE@XZ$3
__ehfuncinfo$??0CServerUserManager@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CServerUserManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z$0
__unwindtable$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z$2
__ehfuncinfo$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CNearUserManager@@UAE@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CNearUserManager@@UAE@XZ$0
__tryblocktable$??1CNearUserManager@@UAE@XZ DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??1CNearUserManager@@UAE@XZ$3
__unwindtable$??1CNearUserManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CNearUserManager@@UAE@XZ$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??1CNearUserManager@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CNearUserManager@@UAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1CNearUserManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCUserFriendGroup@@@@YGXAAVCDumpContext@@PBQAVCUserFriendGroup@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCUserFriendGroup@@@@YGXAAVCDumpContext@@PBQAVCUserFriendGroup@@H@Z PROC ; DumpElements<CUserFriendGroup *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCUserFriendGroup@@@@YGXAAVCDumpContext@@PBQAVCUserFriendGroup@@H@Z ENDP ; DumpElements<CUserFriendGroup *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCUserFriendGroup@@@@YGXAAVCArchive@@PAPAVCUserFriendGroup@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCUserFriendGroup@@@@YGXAAVCArchive@@PAPAVCUserFriendGroup@@H@Z PROC ; SerializeElements<CUserFriendGroup *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCUserFriendGroup@@@@YGXAAVCArchive@@PAPAVCUserFriendGroup@@H@Z ENDP ; SerializeElements<CUserFriendGroup *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@K@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAE@K@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCServerUserItem@@@@YGXAAVCDumpContext@@PBQAVCServerUserItem@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCServerUserItem@@@@YGXAAVCDumpContext@@PBQAVCServerUserItem@@H@Z PROC ; DumpElements<CServerUserItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCServerUserItem@@@@YGXAAVCDumpContext@@PBQAVCServerUserItem@@H@Z ENDP ; DumpElements<CServerUserItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z PROC	; DumpElements<unsigned long>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ENDP	; DumpElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCServerUserItem@@@@YGXAAVCArchive@@PAPAVCServerUserItem@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCServerUserItem@@@@YGXAAVCArchive@@PAPAVCServerUserItem@@H@Z PROC ; SerializeElements<CServerUserItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCServerUserItem@@@@YGXAAVCArchive@@PAPAVCServerUserItem@@H@Z ENDP ; SerializeElements<CServerUserItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z PROC	; SerializeElements<unsigned long>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ENDP	; SerializeElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@KK@@YGHPBK0@Z
_TEXT	SEGMENT
tv128 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@KK@@YGHPBK0@Z PROC			; CompareElements<unsigned long,unsigned long>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 04		 push	 4
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 04		 push	 4
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement2$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a8	75 09		 jne	 SHORT $LN12@CompareEle
  000aa	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv128[ebp], 1
  000b1	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@CompareEle:
  000ba	8b 45 b8	 mov	 eax, DWORD PTR tv128[ebp]
$LN6@CompareEle:

; 157  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
??$CompareElements@KK@@YGHPBK0@Z ENDP			; CompareElements<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@K@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAE@K@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCFriendGroupManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFriendGroupManager@@UAEPAXI@Z PROC			; CFriendGroupManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CFriendGroupManager@@UAE@XZ ; CFriendGroupManager::~CFriendGroupManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 48		 push	 72			; 00000048H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCFriendGroupManager@@UAEPAXI@Z ENDP			; CFriendGroupManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z
_TEXT	SEGMENT
tv153 = -124						; size = 4
tv169 = -120						; size = 4
tv166 = -116						; size = 4
tv78 = -116						; size = 4
tv73 = -116						; size = 4
$T2 = -112						; size = 4
$T3 = -108						; size = 4
$T4 = -104						; size = 4
_nIndex$5 = -36						; size = 4
_nItemPostion$6 = -32					; size = 4
_wGroupContent$ = -28					; size = 2
_pUserFriendGroup$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_wFriendCount$ = 8					; size = 2
?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z PROC ; CFriendGroupManager::ActiveFriendGroup, COMDAT
; _this$ = ecx

; 614  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 615  : 	//变量定义
; 616  : 	CUserFriendGroup * pUserFriendGroup=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pUserFriendGroup$[ebp], 0

; 617  : 	WORD wGroupContent = __min(wFriendCount+wFriendCount/10,MAX_FRIEND_COUNT);

  00036	0f b7 45 08	 movzx	 eax, WORD PTR _wFriendCount$[ebp]
  0003a	99		 cdq
  0003b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00040	f7 f9		 idiv	 ecx
  00042	0f b7 55 08	 movzx	 edx, WORD PTR _wFriendCount$[ebp]
  00046	03 d0		 add	 edx, eax
  00048	81 fa e8 03 00
	00		 cmp	 edx, 1000		; 000003e8H
  0004e	7d 17		 jge	 SHORT $LN12@ActiveFrie
  00050	0f b7 45 08	 movzx	 eax, WORD PTR _wFriendCount$[ebp]
  00054	99		 cdq
  00055	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0005a	f7 f9		 idiv	 ecx
  0005c	0f b7 55 08	 movzx	 edx, WORD PTR _wFriendCount$[ebp]
  00060	03 d0		 add	 edx, eax
  00062	89 55 8c	 mov	 DWORD PTR tv73[ebp], edx
  00065	eb 07		 jmp	 SHORT $LN13@ActiveFrie
$LN12@ActiveFrie:
  00067	c7 45 8c e8 03
	00 00		 mov	 DWORD PTR tv73[ebp], 1000 ; 000003e8H
$LN13@ActiveFrie:
  0006e	66 8b 45 8c	 mov	 ax, WORD PTR tv73[ebp]
  00072	66 89 45 e4	 mov	 WORD PTR _wGroupContent$[ebp], ax

; 618  : 	wGroupContent = __max(MIN_FRIEND_CONTENT,wGroupContent);

  00076	0f b7 45 e4	 movzx	 eax, WORD PTR _wGroupContent$[ebp]
  0007a	83 f8 14	 cmp	 eax, 20			; 00000014H
  0007d	7d 09		 jge	 SHORT $LN14@ActiveFrie
  0007f	c7 45 8c 14 00
	00 00		 mov	 DWORD PTR tv78[ebp], 20	; 00000014H
  00086	eb 07		 jmp	 SHORT $LN15@ActiveFrie
$LN14@ActiveFrie:
  00088	0f b7 4d e4	 movzx	 ecx, WORD PTR _wGroupContent$[ebp]
  0008c	89 4d 8c	 mov	 DWORD PTR tv78[ebp], ecx
$LN15@ActiveFrie:
  0008f	66 8b 55 8c	 mov	 dx, WORD PTR tv78[ebp]
  00093	66 89 55 e4	 mov	 WORD PTR _wGroupContent$[ebp], dx

; 619  : 
; 620  : 	//获取指针
; 621  : 	if (m_UserFriendGroupStore.GetCount()>0)

  00097	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	83 c1 34	 add	 ecx, 52			; 00000034H
  0009d	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
  000a2	85 c0		 test	 eax, eax
  000a4	7e 6c		 jle	 SHORT $LN5@ActiveFrie

; 622  : 	{
; 623  : 		INT_PTR nItemPostion=m_UserFriendGroupStore.GetCount()-1;

  000a6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	83 c1 34	 add	 ecx, 52			; 00000034H
  000ac	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
  000b1	83 e8 01	 sub	 eax, 1
  000b4	89 45 e0	 mov	 DWORD PTR _nItemPostion$6[ebp], eax

; 624  : 		for(INT_PTR nIndex=nItemPostion;nIndex>=0;--nIndex)

  000b7	8b 45 e0	 mov	 eax, DWORD PTR _nItemPostion$6[ebp]
  000ba	89 45 dc	 mov	 DWORD PTR _nIndex$5[ebp], eax
  000bd	eb 09		 jmp	 SHORT $LN4@ActiveFrie
$LN2@ActiveFrie:
  000bf	8b 45 dc	 mov	 eax, DWORD PTR _nIndex$5[ebp]
  000c2	83 e8 01	 sub	 eax, 1
  000c5	89 45 dc	 mov	 DWORD PTR _nIndex$5[ebp], eax
$LN4@ActiveFrie:
  000c8	83 7d dc 00	 cmp	 DWORD PTR _nIndex$5[ebp], 0
  000cc	7c 44		 jl	 SHORT $LN5@ActiveFrie

; 625  : 		{
; 626  : 			pUserFriendGroup=(CUserFriendGroup *)m_UserFriendGroupStore[nIndex];

  000ce	8b 45 dc	 mov	 eax, DWORD PTR _nIndex$5[ebp]
  000d1	50		 push	 eax
  000d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	83 c1 34	 add	 ecx, 52			; 00000034H
  000d8	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
  000dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000df	89 4d e8	 mov	 DWORD PTR _pUserFriendGroup$[ebp], ecx

; 627  : 			if(pUserFriendGroup->GetGroupContent()>=wGroupContent)

  000e2	0f b7 75 e4	 movzx	 esi, WORD PTR _wGroupContent$[ebp]
  000e6	8b 4d e8	 mov	 ecx, DWORD PTR _pUserFriendGroup$[ebp]
  000e9	e8 00 00 00 00	 call	 ?GetGroupContent@CUserFriendGroup@@QAEGXZ ; CUserFriendGroup::GetGroupContent
  000ee	0f b7 c0	 movzx	 eax, ax
  000f1	3b c6		 cmp	 eax, esi
  000f3	7c 1b		 jl	 SHORT $LN6@ActiveFrie

; 628  : 			{
; 629  : 				pUserFriendGroup->ResetFriendGroup();

  000f5	8b 4d e8	 mov	 ecx, DWORD PTR _pUserFriendGroup$[ebp]
  000f8	e8 00 00 00 00	 call	 ?ResetFriendGroup@CUserFriendGroup@@QAEXXZ ; CUserFriendGroup::ResetFriendGroup

; 630  : 				m_UserFriendGroupStore.RemoveAt(nItemPostion);

  000fd	6a 01		 push	 1
  000ff	8b 45 e0	 mov	 eax, DWORD PTR _nItemPostion$6[ebp]
  00102	50		 push	 eax
  00103	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	83 c1 34	 add	 ecx, 52			; 00000034H
  00109	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAt

; 631  : 				break;

  0010e	eb 02		 jmp	 SHORT $LN5@ActiveFrie
$LN6@ActiveFrie:

; 632  : 			}
; 633  : 		}

  00110	eb ad		 jmp	 SHORT $LN2@ActiveFrie
$LN5@ActiveFrie:

; 634  : 	}
; 635  : 
; 636  : 	if(pUserFriendGroup==NULL || pUserFriendGroup->GetGroupContent()<wGroupContent)

  00112	83 7d e8 00	 cmp	 DWORD PTR _pUserFriendGroup$[ebp], 0
  00116	74 17		 je	 SHORT $LN8@ActiveFrie
  00118	0f b7 75 e4	 movzx	 esi, WORD PTR _wGroupContent$[ebp]
  0011c	8b 4d e8	 mov	 ecx, DWORD PTR _pUserFriendGroup$[ebp]
  0011f	e8 00 00 00 00	 call	 ?GetGroupContent@CUserFriendGroup@@QAEGXZ ; CUserFriendGroup::GetGroupContent
  00124	0f b7 c0	 movzx	 eax, ax
  00127	3b c6		 cmp	 eax, esi
  00129	0f 8d 93 00 00
	00		 jge	 $LN19@ActiveFrie
$LN8@ActiveFrie:

; 637  : 	{
; 638  : 		try

  0012f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 639  : 		{
; 640  : 			pUserFriendGroup=new CUserFriendGroup();

  00136	6a 10		 push	 16			; 00000010H
  00138	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0013d	83 c4 04	 add	 esp, 4
  00140	89 45 8c	 mov	 DWORD PTR tv166[ebp], eax
  00143	8b 45 8c	 mov	 eax, DWORD PTR tv166[ebp]
  00146	89 45 94	 mov	 DWORD PTR $T3[ebp], eax
  00149	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0014d	83 7d 94 00	 cmp	 DWORD PTR $T3[ebp], 0
  00151	74 13		 je	 SHORT $LN16@ActiveFrie
  00153	8b 4d 94	 mov	 ecx, DWORD PTR $T3[ebp]
  00156	e8 00 00 00 00	 call	 ??0CUserFriendGroup@@QAE@XZ ; CUserFriendGroup::CUserFriendGroup
  0015b	89 45 88	 mov	 DWORD PTR tv169[ebp], eax
  0015e	8b 4d 88	 mov	 ecx, DWORD PTR tv169[ebp]
  00161	89 4d 84	 mov	 DWORD PTR tv153[ebp], ecx
  00164	eb 07		 jmp	 SHORT $LN17@ActiveFrie
$LN16@ActiveFrie:
  00166	c7 45 84 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN17@ActiveFrie:
  0016d	8b 55 84	 mov	 edx, DWORD PTR tv153[ebp]
  00170	89 55 98	 mov	 DWORD PTR $T4[ebp], edx
  00173	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00177	8b 45 98	 mov	 eax, DWORD PTR $T4[ebp]
  0017a	89 45 e8	 mov	 DWORD PTR _pUserFriendGroup$[ebp], eax

; 641  : 			if(pUserFriendGroup!=NULL) pUserFriendGroup->InitFriendGroup(wGroupContent);

  0017d	83 7d e8 00	 cmp	 DWORD PTR _pUserFriendGroup$[ebp], 0
  00181	74 0d		 je	 SHORT $LN10@ActiveFrie
  00183	0f b7 45 e4	 movzx	 eax, WORD PTR _wGroupContent$[ebp]
  00187	50		 push	 eax
  00188	8b 4d e8	 mov	 ecx, DWORD PTR _pUserFriendGroup$[ebp]
  0018b	e8 00 00 00 00	 call	 ?InitFriendGroup@CUserFriendGroup@@QAE_NG@Z ; CUserFriendGroup::InitFriendGroup
$LN10@ActiveFrie:

; 642  : 		}

  00190	eb 30		 jmp	 SHORT $LN19@ActiveFrie
__catch$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z$0:

; 643  : 		catch (...)
; 644  : 		{
; 645  : 			ASSERT(FALSE);

  00192	33 c0		 xor	 eax, eax
  00194	75 19		 jne	 SHORT $LN18@ActiveFrie
  00196	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z@4JA
  0019c	83 c1 1f	 add	 ecx, 31			; 0000001fH
  0019f	51		 push	 ecx
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001a5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001aa	85 c0		 test	 eax, eax
  001ac	74 01		 je	 SHORT $LN18@ActiveFrie
  001ae	cc		 int	 3
$LN18@ActiveFrie:

; 646  : 			return false;

  001af	c7 45 90 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  001b6	b8 00 00 00 00	 mov	 eax, $LN23@ActiveFrie
  001bb	c3		 ret	 0

; 647  : 		}

  001bc	b8 00 00 00 00	 mov	 eax, $LN19@ActiveFrie
  001c1	c3		 ret	 0
$LN19@ActiveFrie:
  001c2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001c9	eb 0c		 jmp	 SHORT $LN22@ActiveFrie
$LN23@ActiveFrie:
  001cb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 646  : 			return false;

  001d2	8b 45 90	 mov	 eax, DWORD PTR $T2[ebp]
  001d5	eb 03		 jmp	 SHORT $LN1@ActiveFrie
$LN22@ActiveFrie:

; 648  : 	}
; 649  : 
; 650  : 	return pUserFriendGroup;

  001d7	8b 45 e8	 mov	 eax, DWORD PTR _pUserFriendGroup$[ebp]
$LN1@ActiveFrie:

; 651  : }

  001da	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001dd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e4	59		 pop	 ecx
  001e5	5f		 pop	 edi
  001e6	5e		 pop	 esi
  001e7	5b		 pop	 ebx
  001e8	8b e5		 mov	 esp, ebp
  001ea	5d		 pop	 ebp
  001eb	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z$2:
  00000	6a 10		 push	 16			; 00000010H
  00002	8b 45 94	 mov	 eax, DWORD PTR $T3[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ActiveFriendGroup@CFriendGroupManager@@QAEPAVCUserFriendGroup@@G@Z ENDP ; CFriendGroupManager::ActiveFriendGroup
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?InsertFriendGroup@CFriendGroupManager@@UAE_NKPAVCUserFriendGroup@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_pUserFriendGroup$ = 12					; size = 4
?InsertFriendGroup@CFriendGroupManager@@UAE_NKPAVCUserFriendGroup@@@Z PROC ; CFriendGroupManager::InsertFriendGroup, COMDAT
; _this$ = ecx

; 601  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 602  : 	//设置标识
; 603  : 	pUserFriendGroup->SetOwnerUserID(dwUserID);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserFriendGroup$[ebp]
  00013	e8 00 00 00 00	 call	 ?SetOwnerUserID@CUserFriendGroup@@QAEXK@Z ; CUserFriendGroup::SetOwnerUserID

; 604  : 
; 605  : 	//插入用户
; 606  : 	m_UserFriendGroupArray.Add(pUserFriendGroup);

  00018	8d 45 0c	 lea	 eax, DWORD PTR _pUserFriendGroup$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 20	 add	 ecx, 32			; 00000020H
  00022	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABQAVCUserFriendGroup@@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Add

; 607  : 	m_UserIDMap[dwUserID]=pUserFriendGroup;

  00027	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 04	 add	 ecx, 4
  00031	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::operator[]
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _pUserFriendGroup$[ebp]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 608  : 
; 609  : 	return true;

  0003b	b0 01		 mov	 al, 1

; 610  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
?InsertFriendGroup@CFriendGroupManager@@UAE_NKPAVCUserFriendGroup@@@Z ENDP ; CFriendGroupManager::InsertFriendGroup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_pTempFriendGroup$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z PROC	; CFriendGroupManager::DeleteFriendGroup, COMDAT
; _this$ = ecx

; 571  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 572  : 	//变量定义
; 573  : 	CUserFriendGroup * pTempFriendGroup=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pTempFriendGroup$[ebp], 0

; 574  : 
; 575  : 	//寻找对象
; 576  : 	for (INT_PTR i=0;i<m_UserFriendGroupArray.GetCount();i++)

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@DeleteFrie
$LN2@DeleteFrie:
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@DeleteFrie:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 20	 add	 ecx, 32			; 00000020H
  0002b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
  00030	39 45 f4	 cmp	 DWORD PTR _i$1[ebp], eax
  00033	7d 66		 jge	 SHORT $LN3@DeleteFrie

; 577  : 	{
; 578  : 		//获取用户
; 579  : 		pTempFriendGroup=m_UserFriendGroupArray[i];

  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 20	 add	 ecx, 32			; 00000020H
  0003f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 4d f8	 mov	 DWORD PTR _pTempFriendGroup$[ebp], ecx

; 580  : 		if (pTempFriendGroup==NULL || pTempFriendGroup->GetOwnerUserID()!=dwUserID) continue;

  00049	83 7d f8 00	 cmp	 DWORD PTR _pTempFriendGroup$[ebp], 0
  0004d	74 0d		 je	 SHORT $LN6@DeleteFrie
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _pTempFriendGroup$[ebp]
  00052	e8 00 00 00 00	 call	 ?GetOwnerUserID@CUserFriendGroup@@QAEKXZ ; CUserFriendGroup::GetOwnerUserID
  00057	3b 45 08	 cmp	 eax, DWORD PTR _dwUserID$[ebp]
  0005a	74 02		 je	 SHORT $LN5@DeleteFrie
$LN6@DeleteFrie:
  0005c	eb be		 jmp	 SHORT $LN2@DeleteFrie
$LN5@DeleteFrie:

; 581  : 
; 582  : 		//重置对象
; 583  : 		pTempFriendGroup->ResetFriendGroup();

  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _pTempFriendGroup$[ebp]
  00061	e8 00 00 00 00	 call	 ?ResetFriendGroup@CUserFriendGroup@@QAEXXZ ; CUserFriendGroup::ResetFriendGroup

; 584  : 
; 585  : 		//删除对象
; 586  : 		m_UserFriendGroupArray.RemoveAt(i);

  00066	6a 01		 push	 1
  00068	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 20	 add	 ecx, 32			; 00000020H
  00072	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAt

; 587  : 		m_UserIDMap.RemoveKey(dwUserID);

  00077	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	83 c1 04	 add	 ecx, 4
  00081	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveKey

; 588  : 		m_UserFriendGroupStore.Add(pTempFriendGroup);

  00086	8d 45 f8	 lea	 eax, DWORD PTR _pTempFriendGroup$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	83 c1 34	 add	 ecx, 52			; 00000034H
  00090	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABQAVCUserFriendGroup@@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Add

; 589  : 
; 590  : 		return true;

  00095	b0 01		 mov	 al, 1
  00097	eb 21		 jmp	 SHORT $LN1@DeleteFrie

; 591  : 	}

  00099	eb 81		 jmp	 SHORT $LN2@DeleteFrie
$LN3@DeleteFrie:

; 592  : 
; 593  : 	//错误断言
; 594  : 	ASSERT(FALSE);

  0009b	33 c0		 xor	 eax, eax
  0009d	75 19		 jne	 SHORT $LN8@DeleteFrie
  0009f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z@4JA
  000a5	83 c1 17	 add	 ecx, 23			; 00000017H
  000a8	51		 push	 ecx
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000ae	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b3	85 c0		 test	 eax, eax
  000b5	74 01		 je	 SHORT $LN8@DeleteFrie
  000b7	cc		 int	 3
$LN8@DeleteFrie:

; 595  : 
; 596  : 	return false;

  000b8	32 c0		 xor	 al, al
$LN1@DeleteFrie:

; 597  : }

  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
?DeleteFriendGroup@CFriendGroupManager@@UAE_NK@Z ENDP	; CFriendGroupManager::DeleteFriendGroup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?DeleteFriendGroup@CFriendGroupManager@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeleteFriendGroup@CFriendGroupManager@@UAE_NXZ PROC	; CFriendGroupManager::DeleteFriendGroup, COMDAT
; _this$ = ecx

; 558  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 559  : 	//存储对象
; 560  : 	m_UserFriendGroupStore.Append(m_UserFriendGroupArray);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 20	 add	 eax, 32			; 00000020H
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 34	 add	 ecx, 52			; 00000034H
  00019	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABV1@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Append

; 561  : 
; 562  : 	//删除对象
; 563  : 	m_UserIDMap.RemoveAll();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 04	 add	 ecx, 4
  00024	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll

; 564  : 	m_UserFriendGroupArray.RemoveAll();

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 20	 add	 ecx, 32			; 00000020H
  0002f	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAll

; 565  : 
; 566  : 	return true;

  00034	b0 01		 mov	 al, 1

; 567  : }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?DeleteFriendGroup@CFriendGroupManager@@UAE_NXZ ENDP	; CFriendGroupManager::DeleteFriendGroup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?SearchGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SearchGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@K@Z PROC ; CFriendGroupManager::SearchGroupItem, COMDAT
; _this$ = ecx

; 552  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 553  : 	return m_UserIDMap[dwUserID];

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 04	 add	 ecx, 4
  00016	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::operator[]
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]

; 554  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?SearchGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@K@Z ENDP ; CFriendGroupManager::SearchGroupItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?EnumGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wEnumIndex$ = 8					; size = 2
?EnumGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@G@Z PROC ; CFriendGroupManager::EnumGroupItem, COMDAT
; _this$ = ecx

; 545  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 546  : 	if (wEnumIndex>=m_UserFriendGroupArray.GetCount()) return NULL;

  0000c	0f b7 75 08	 movzx	 esi, WORD PTR _wEnumIndex$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 20	 add	 ecx, 32			; 00000020H
  00016	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
  0001b	3b f0		 cmp	 esi, eax
  0001d	7c 04		 jl	 SHORT $LN2@EnumGroupI
  0001f	33 c0		 xor	 eax, eax
  00021	eb 12		 jmp	 SHORT $LN1@EnumGroupI
$LN2@EnumGroupI:

; 547  : 	return m_UserFriendGroupArray[wEnumIndex];

  00023	0f b7 45 08	 movzx	 eax, WORD PTR _wEnumIndex$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 20	 add	 ecx, 32			; 00000020H
  0002e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
  00033	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@EnumGroupI:

; 548  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?EnumGroupItem@CFriendGroupManager@@UAEPAVCUserFriendGroup@@G@Z ENDP ; CFriendGroupManager::EnumGroupItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1CFriendGroupManager@@UAE@XZ
_TEXT	SEGMENT
tv141 = -120						; size = 4
tv86 = -120						; size = 4
$T2 = -116						; size = 4
$T3 = -112						; size = 4
$T4 = -108						; size = 4
$T5 = -104						; size = 4
_pUserFriendGroup$6 = -36				; size = 4
_i$7 = -32						; size = 4
_pUserFriendGroup$8 = -28				; size = 4
_i$9 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CFriendGroupManager@@UAE@XZ PROC			; CFriendGroupManager::~CFriendGroupManager, COMDAT
; _this$ = ecx

; 522  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CFriendGroupManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 68	 sub	 esp, 104		; 00000068H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CFriendGroupManager@@6B@
  00038	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2

; 523  : 	//释放用户
; 524  : 	for (INT_PTR i=0;i<m_UserFriendGroupArray.GetCount();i++)

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  00046	eb 09		 jmp	 SHORT $LN4@CFriendGro
$LN2@CFriendGro:
  00048	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  0004b	83 c0 01	 add	 eax, 1
  0004e	89 45 e8	 mov	 DWORD PTR _i$9[ebp], eax
$LN4@CFriendGro:
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 20	 add	 ecx, 32			; 00000020H
  00057	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
  0005c	39 45 e8	 cmp	 DWORD PTR _i$9[ebp], eax
  0005f	0f 8d 85 00 00
	00		 jge	 $LN3@CFriendGro

; 525  : 	{
; 526  : 		CUserFriendGroup * pUserFriendGroup = m_UserFriendGroupArray[i];

  00065	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  00068	50		 push	 eax
  00069	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	83 c1 20	 add	 ecx, 32			; 00000020H
  0006f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d e4	 mov	 DWORD PTR _pUserFriendGroup$8[ebp], ecx

; 527  : 		SafeDelete(pUserFriendGroup);

  00079	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  0007d	8b 45 e4	 mov	 eax, DWORD PTR _pUserFriendGroup$8[ebp]
  00080	89 45 94	 mov	 DWORD PTR $T4[ebp], eax
  00083	8b 4d 94	 mov	 ecx, DWORD PTR $T4[ebp]
  00086	89 4d 98	 mov	 DWORD PTR $T5[ebp], ecx
  00089	83 7d 98 00	 cmp	 DWORD PTR $T5[ebp], 0
  0008d	74 13		 je	 SHORT $LN11@CFriendGro
  0008f	6a 01		 push	 1
  00091	8b 55 98	 mov	 edx, DWORD PTR $T5[ebp]
  00094	8b 02		 mov	 eax, DWORD PTR [edx]
  00096	8b 4d 98	 mov	 ecx, DWORD PTR $T5[ebp]
  00099	8b 10		 mov	 edx, DWORD PTR [eax]
  0009b	ff d2		 call	 edx
  0009d	89 45 88	 mov	 DWORD PTR tv86[ebp], eax
  000a0	eb 07		 jmp	 SHORT $LN12@CFriendGro
$LN11@CFriendGro:
  000a2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN12@CFriendGro:
  000a9	eb 23		 jmp	 SHORT $LN17@CFriendGro
__catch$??1CFriendGroupManager@@UAE@XZ$0:
  000ab	33 c0		 xor	 eax, eax
  000ad	75 19		 jne	 SHORT $LN13@CFriendGro
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CFriendGroupManager@@UAE@XZ@4JA
  000b5	83 c1 05	 add	 ecx, 5
  000b8	51		 push	 ecx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000be	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c3	85 c0		 test	 eax, eax
  000c5	74 01		 je	 SHORT $LN13@CFriendGro
  000c7	cc		 int	 3
$LN13@CFriendGro:
  000c8	b8 00 00 00 00	 mov	 eax, $LN25@CFriendGro
  000cd	c3		 ret	 0
$LN17@CFriendGro:
  000ce	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  000d5	eb 07		 jmp	 SHORT __tryend$??1CFriendGroupManager@@UAE@XZ$1
$LN25@CFriendGro:
  000d7	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
__tryend$??1CFriendGroupManager@@UAE@XZ$1:
  000de	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pUserFriendGroup$8[ebp], 0

; 528  : 	}

  000e5	e9 5e ff ff ff	 jmp	 $LN2@CFriendGro
$LN3@CFriendGro:

; 529  : 
; 530  : 	//释放用户
; 531  : 	for (INT_PTR i=0;i<m_UserFriendGroupStore.GetCount();i++)

  000ea	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$7[ebp], 0
  000f1	eb 09		 jmp	 SHORT $LN7@CFriendGro
$LN5@CFriendGro:
  000f3	8b 45 e0	 mov	 eax, DWORD PTR _i$7[ebp]
  000f6	83 c0 01	 add	 eax, 1
  000f9	89 45 e0	 mov	 DWORD PTR _i$7[ebp], eax
$LN7@CFriendGro:
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	83 c1 34	 add	 ecx, 52			; 00000034H
  00102	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
  00107	39 45 e0	 cmp	 DWORD PTR _i$7[ebp], eax
  0010a	0f 8d 85 00 00
	00		 jge	 $LN6@CFriendGro

; 532  : 	{
; 533  : 		CUserFriendGroup * pUserFriendGroup = m_UserFriendGroupStore[i];

  00110	8b 45 e0	 mov	 eax, DWORD PTR _i$7[ebp]
  00113	50		 push	 eax
  00114	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	83 c1 34	 add	 ecx, 52			; 00000034H
  0011a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
  0011f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00121	89 4d dc	 mov	 DWORD PTR _pUserFriendGroup$6[ebp], ecx

; 534  : 		SafeDelete(pUserFriendGroup);

  00124	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
  00128	8b 45 dc	 mov	 eax, DWORD PTR _pUserFriendGroup$6[ebp]
  0012b	89 45 8c	 mov	 DWORD PTR $T2[ebp], eax
  0012e	8b 4d 8c	 mov	 ecx, DWORD PTR $T2[ebp]
  00131	89 4d 90	 mov	 DWORD PTR $T3[ebp], ecx
  00134	83 7d 90 00	 cmp	 DWORD PTR $T3[ebp], 0
  00138	74 13		 je	 SHORT $LN14@CFriendGro
  0013a	6a 01		 push	 1
  0013c	8b 55 90	 mov	 edx, DWORD PTR $T3[ebp]
  0013f	8b 02		 mov	 eax, DWORD PTR [edx]
  00141	8b 4d 90	 mov	 ecx, DWORD PTR $T3[ebp]
  00144	8b 10		 mov	 edx, DWORD PTR [eax]
  00146	ff d2		 call	 edx
  00148	89 45 88	 mov	 DWORD PTR tv141[ebp], eax
  0014b	eb 07		 jmp	 SHORT $LN15@CFriendGro
$LN14@CFriendGro:
  0014d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN15@CFriendGro:
  00154	eb 23		 jmp	 SHORT $LN19@CFriendGro
__catch$??1CFriendGroupManager@@UAE@XZ$2:
  00156	33 c0		 xor	 eax, eax
  00158	75 19		 jne	 SHORT $LN16@CFriendGro
  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CFriendGroupManager@@UAE@XZ@4JA
  00160	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00163	51		 push	 ecx
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00169	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0016e	85 c0		 test	 eax, eax
  00170	74 01		 je	 SHORT $LN16@CFriendGro
  00172	cc		 int	 3
$LN16@CFriendGro:
  00173	b8 00 00 00 00	 mov	 eax, $LN27@CFriendGro
  00178	c3		 ret	 0
$LN19@CFriendGro:
  00179	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  00180	eb 07		 jmp	 SHORT __tryend$??1CFriendGroupManager@@UAE@XZ$3
$LN27@CFriendGro:
  00182	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
__tryend$??1CFriendGroupManager@@UAE@XZ$3:
  00189	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pUserFriendGroup$6[ebp], 0

; 535  : 	}

  00190	e9 5e ff ff ff	 jmp	 $LN5@CFriendGro
$LN6@CFriendGro:

; 536  : 
; 537  : 	//删除数据
; 538  : 	m_UserIDMap.RemoveAll();

  00195	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	83 c1 04	 add	 ecx, 4
  0019b	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll

; 539  : 	m_UserFriendGroupStore.RemoveAll();

  001a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a3	83 c1 34	 add	 ecx, 52			; 00000034H
  001a6	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAll

; 540  : 	m_UserFriendGroupArray.RemoveAll();

  001ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001ae	83 c1 20	 add	 ecx, 32			; 00000020H
  001b1	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAll

; 541  : }

  001b6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  001ba	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	83 c1 34	 add	 ecx, 52			; 00000034H
  001c0	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
  001c5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  001c9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001cc	83 c1 20	 add	 ecx, 32			; 00000020H
  001cf	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
  001d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001db	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	83 c1 04	 add	 ecx, 4
  001e1	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
  001e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f0	59		 pop	 ecx
  001f1	5f		 pop	 edi
  001f2	5e		 pop	 esi
  001f3	5b		 pop	 ebx
  001f4	8b e5		 mov	 esp, ebp
  001f6	5d		 pop	 ebp
  001f7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFriendGroupManager@@UAE@XZ$4:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
__unwindfunclet$??1CFriendGroupManager@@UAE@XZ$5:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
__unwindfunclet$??1CFriendGroupManager@@UAE@XZ$6:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 34	 add	 ecx, 52			; 00000034H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
__ehhandler$??1CFriendGroupManager@@UAE@XZ:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CFriendGroupManager@@UAE@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CFriendGroupManager@@UAE@XZ ENDP			; CFriendGroupManager::~CFriendGroupManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0CFriendGroupManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFriendGroupManager@@QAE@XZ PROC			; CFriendGroupManager::CFriendGroupManager, COMDAT
; _this$ = ecx

; 515  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CFriendGroupManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CFriendGroupManager@@6B@
  00034	6a 0a		 push	 10			; 0000000aH
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 20	 add	 ecx, 32			; 00000020H
  0004e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
  00053	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	83 c1 34	 add	 ecx, 52			; 00000034H
  0005d	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
  00062	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 516  : 	//设置质数
; 517  : 	m_UserIDMap.InitHashTable(PRIME_PLATFORM_USER);

  00066	6a 01		 push	 1
  00068	68 a3 86 01 00	 push	 100003			; 000186a3H
  0006d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	83 c1 04	 add	 ecx, 4
  00073	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::InitHashTable

; 518  : }

  00078	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFriendGroupManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
__unwindfunclet$??0CFriendGroupManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
__unwindfunclet$??0CFriendGroupManager@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 34	 add	 ecx, 52			; 00000034H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
__ehhandler$??0CFriendGroupManager@@QAE@XZ:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CFriendGroupManager@@QAE@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CFriendGroupManager@@QAE@XZ ENDP			; CFriendGroupManager::CFriendGroupManager
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAEPAXI@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAEPAXI@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXXZ ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHH@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHH@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHABQAVCUserFriendGroup@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHABQAVCUserFriendGroup@@@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHABQAVCUserFriendGroup@@@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEAAPAVCUserFriendGroup@@H@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABV1@@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXH@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABV1@@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABQAVCUserFriendGroup@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABQAVCUserFriendGroup@@@Z PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEXHABQAVCUserFriendGroup@@@Z ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAEHABQAVCUserFriendGroup@@@Z ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ PROC ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QBEHXZ ENDP ; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ PROC	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@UAE@XZ ENDP	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::~CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAE@XZ PROC	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCUserFriendGroup@@ABQAV1@@@QAE@XZ ENDP	; CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>::CWHArray<CUserFriendGroup *,CUserFriendGroup * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEPAXI@Z PROC	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEPAXI@Z ENDP	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXXZ PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCUserFriendGroup@@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCUserFriendGroup@@@@YGXAAVCDumpContext@@PBQAVCUserFriendGroup@@H@Z ; DumpElements<CUserFriendGroup *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCUserFriendGroup@@@@YGXAAVCArchive@@PAPAVCUserFriendGroup@@H@Z ; SerializeElements<CUserFriendGroup *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCUserFriendGroup@@@@YGXAAVCArchive@@PAPAVCUserFriendGroup@@H@Z ; SerializeElements<CUserFriendGroup *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXKPAVCUserFriendGroup@@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ PROC	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KKPAVCUserFriendGroup@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::~CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEPAVCAssoc@1@K@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEPAVCAssoc@1@K@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCUserFriendGroup@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCUserFriendGroup@@@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCUserFriendGroup@@@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEHK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEHK@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 83 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00038	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00041	33 d2		 xor	 edx, edx
  00043	f7 71 08	 div	 DWORD PTR [ecx+8]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0004f	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005a	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00065	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00069	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00071	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00074	75 2f		 jne	 SHORT $LN6@RemoveKey
  00076	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00083	85 c0		 test	 eax, eax
  00085	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00087	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00090	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::FreeAssoc

; 1630 : 			return TRUE;

  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000ae	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b0	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?RemoveKey@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEHK@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXKPAVCUserFriendGroup@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXKPAVCUserFriendGroup@@@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	89 08		 mov	 DWORD PTR [eax], ecx
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXKPAVCUserFriendGroup@@@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z PROC ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KKPAVCUserFriendGroup@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAEAAPAVCUserFriendGroup@@K@Z ENDP ; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCUserFriendGroup@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KKPAVCUserFriendGroup@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>::CMap<unsigned long,unsigned long,CUserFriendGroup *,CUserFriendGroup *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCUserFriendGroup@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCUserFriendGroup@@UAEPAXI@Z PROC			; CUserFriendGroup::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CUserFriendGroup@@UAE@XZ ; CUserFriendGroup::~CUserFriendGroup
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 10		 push	 16			; 00000010H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCUserFriendGroup@@UAEPAXI@Z ENDP			; CUserFriendGroup::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z
_TEXT	SEGMENT
tv131 = -100						; size = 4
$T2 = -93						; size = 1
$T3 = -92						; size = 4
_pFriendInfo$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_wExtendCount$ = 8					; size = 2
?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z PROC	; CUserFriendGroup::ExtendGroupContent, COMDAT
; _this$ = ecx

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 267  : 	//设置变量
; 268  : 	tagServerFriendInfo * pFriendInfo = AllocateContent(m_wGroupContent+wExtendCount);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _wExtendCount$[ebp]
  00033	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  0003a	03 d0		 add	 edx, eax
  0003c	52		 push	 edx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z ; CUserFriendGroup::AllocateContent
  00045	89 45 e8	 mov	 DWORD PTR _pFriendInfo$[ebp], eax

; 269  : 	if(pFriendInfo==NULL) return false;

  00048	83 7d e8 00	 cmp	 DWORD PTR _pFriendInfo$[ebp], 0
  0004c	75 07		 jne	 SHORT $LN2@ExtendGrou
  0004e	32 c0		 xor	 al, al
  00050	e9 c8 00 00 00	 jmp	 $LN1@ExtendGrou
$LN2@ExtendGrou:

; 270  : 
; 271  : 	try

  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 272  : 	{
; 273  : 		//移动数据
; 274  : 		MoveMemory(pFriendInfo,m_pFriendInfo,m_wGroupContent*sizeof(tagServerFriendInfo));

  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00063	6b d1 07	 imul	 edx, ecx, 7
  00066	52		 push	 edx
  00067	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0006d	51		 push	 ecx
  0006e	8b 55 e8	 mov	 edx, DWORD PTR _pFriendInfo$[ebp]
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 _memmove
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH

; 275  : 
; 276  : 		//释放内存
; 277  : 		SafeDeleteArray(m_pFriendInfo);

  0007a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0007e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00084	89 4d a4	 mov	 DWORD PTR $T3[ebp], ecx
  00087	8b 55 a4	 mov	 edx, DWORD PTR $T3[ebp]
  0008a	52		 push	 edx
  0008b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00090	83 c4 04	 add	 esp, 4
  00093	eb 28		 jmp	 SHORT $LN8@ExtendGrou
__catch$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$0:
  00095	33 c0		 xor	 eax, eax
  00097	75 1e		 jne	 SHORT $LN6@ExtendGrou
  00099	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z@4JA
  0009f	83 c1 0b	 add	 ecx, 11			; 0000000bH
  000a2	51		 push	 ecx
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ad	89 45 9c	 mov	 DWORD PTR tv131[ebp], eax
  000b0	83 7d 9c 00	 cmp	 DWORD PTR tv131[ebp], 0
  000b4	74 01		 je	 SHORT $LN6@ExtendGrou
  000b6	cc		 int	 3
$LN6@ExtendGrou:
  000b7	b8 00 00 00 00	 mov	 eax, $LN12@ExtendGrou
  000bc	c3		 ret	 0
$LN8@ExtendGrou:
  000bd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000c4	eb 07		 jmp	 SHORT __tryend$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$1
$LN12@ExtendGrou:
  000c6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$1:
  000cd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 278  : 
; 279  : 		//设置变量
; 280  : 		m_pFriendInfo=pFriendInfo;

  000d7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 4d e8	 mov	 ecx, DWORD PTR _pFriendInfo$[ebp]
  000dd	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 281  : 		m_wGroupContent += wExtendCount;

  000e0	0f b7 45 08	 movzx	 eax, WORD PTR _wExtendCount$[ebp]
  000e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  000eb	03 d0		 add	 edx, eax
  000ed	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 282  : 	}

  000f4	eb 10		 jmp	 SHORT $LN7@ExtendGrou
__catch$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z$2:

; 283  : 	catch(...)
; 284  : 	{
; 285  : 		return false;

  000f6	c6 45 a3 00	 mov	 BYTE PTR $T2[ebp], 0
  000fa	b8 00 00 00 00	 mov	 eax, $LN14@ExtendGrou
  000ff	c3		 ret	 0

; 286  : 	}

  00100	b8 00 00 00 00	 mov	 eax, $LN7@ExtendGrou
  00105	c3		 ret	 0
$LN7@ExtendGrou:
  00106	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0010d	eb 0c		 jmp	 SHORT $LN13@ExtendGrou
$LN14@ExtendGrou:
  0010f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 283  : 	catch(...)
; 284  : 	{
; 285  : 		return false;

  00116	8a 45 a3	 mov	 al, BYTE PTR $T2[ebp]
  00119	eb 02		 jmp	 SHORT $LN1@ExtendGrou
$LN13@ExtendGrou:

; 287  : 
; 288  : 	return true;

  0011b	b0 01		 mov	 al, 1
$LN1@ExtendGrou:

; 289  : }

  0011d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00120	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00127	59		 pop	 ecx
  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z ENDP	; CUserFriendGroup::ExtendGroupContent
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z
_TEXT	SEGMENT
tv133 = -104						; size = 4
tv132 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
$T4 = -92						; size = 4
_pFriendInfo$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_wGroupContent$ = 8					; size = 2
?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z PROC ; CUserFriendGroup::AllocateContent, COMDAT
; _this$ = ecx

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 58	 sub	 esp, 88			; 00000058H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : 	//变量定义
; 243  : 	tagServerFriendInfo * pFriendInfo=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pFriendInfo$[ebp], 0

; 244  : 
; 245  : 	//分配类型
; 246  : 	try

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 247  : 	{
; 248  : 		pFriendInfo = new tagServerFriendInfo[wGroupContent];

  0003d	0f b7 45 08	 movzx	 eax, WORD PTR _wGroupContent$[ebp]
  00041	33 c9		 xor	 ecx, ecx
  00043	ba 07 00 00 00	 mov	 edx, 7
  00048	f7 e2		 mul	 edx
  0004a	0f 90 c1	 seto	 cl
  0004d	f7 d9		 neg	 ecx
  0004f	0b c8		 or	 ecx, eax
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00057	83 c4 04	 add	 esp, 4
  0005a	89 45 98	 mov	 DWORD PTR tv132[ebp], eax
  0005d	8b 45 98	 mov	 eax, DWORD PTR tv132[ebp]
  00060	89 45 a4	 mov	 DWORD PTR $T4[ebp], eax
  00063	8b 4d a4	 mov	 ecx, DWORD PTR $T4[ebp]
  00066	89 4d e8	 mov	 DWORD PTR _pFriendInfo$[ebp], ecx

; 249  : 		ASSERT(pFriendInfo!=NULL);

  00069	83 7d e8 00	 cmp	 DWORD PTR _pFriendInfo$[ebp], 0
  0006d	75 1d		 jne	 SHORT $LN6@AllocateCo
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z@4JA
  00074	83 c0 08	 add	 eax, 8
  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0007d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00082	89 45 98	 mov	 DWORD PTR tv133[ebp], eax
  00085	83 7d 98 00	 cmp	 DWORD PTR tv133[ebp], 0
  00089	74 01		 je	 SHORT $LN6@AllocateCo
  0008b	cc		 int	 3
$LN6@AllocateCo:

; 250  : 		if(pFriendInfo==NULL) throw(TEXT("系统内存资源不足,无法分配内存!"));

  0008c	83 7d e8 00	 cmp	 DWORD PTR _pFriendInfo$[ebp], 0
  00090	75 15		 jne	 SHORT $LN3@AllocateCo
  00092	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], OFFSET ??_C@_0BP@FPJIDAGE@?O?$LF?M?$LD?D?Z?$LE?f?W?J?T?$LE?$LC?$LL?W?c?0?N?$NO?$LH?$KI?$LH?V?E?d?D?Z?$LE?f?$CB@
  00099	68 00 00 00 00	 push	 OFFSET __TI2PAD
  0009e	8d 45 a0	 lea	 eax, DWORD PTR $T3[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@AllocateCo:

; 251  : 
; 252  : 		//初始化内存
; 253  : 		ZeroMemory(pFriendInfo,wGroupContent*sizeof(tagServerFriendInfo));

  000a7	0f b7 45 08	 movzx	 eax, WORD PTR _wGroupContent$[ebp]
  000ab	6b c8 07	 imul	 ecx, eax, 7
  000ae	51		 push	 ecx
  000af	6a 00		 push	 0
  000b1	8b 55 e8	 mov	 edx, DWORD PTR _pFriendInfo$[ebp]
  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 _memset
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 254  : 	}

  000bd	eb 62		 jmp	 SHORT $LN8@AllocateCo
__catch$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$0:

; 255  : 	catch(...)
; 256  : 	{

  000bf	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 257  : 		SafeDeleteArray(pFriendInfo);

  000c2	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  000c6	8b 45 e8	 mov	 eax, DWORD PTR _pFriendInfo$[ebp]
  000c9	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
  000cc	8b 4d 9c	 mov	 ecx, DWORD PTR $T2[ebp]
  000cf	51		 push	 ecx
  000d0	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000d5	83 c4 04	 add	 esp, 4
  000d8	eb 23		 jmp	 SHORT $LN10@AllocateCo
__catch$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$1:
  000da	33 c0		 xor	 eax, eax
  000dc	75 19		 jne	 SHORT $LN7@AllocateCo
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z@4JA
  000e4	83 c1 10	 add	 ecx, 16			; 00000010H
  000e7	51		 push	 ecx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000ed	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000f2	85 c0		 test	 eax, eax
  000f4	74 01		 je	 SHORT $LN7@AllocateCo
  000f6	cc		 int	 3
$LN7@AllocateCo:
  000f7	b8 00 00 00 00	 mov	 eax, $LN13@AllocateCo
  000fc	c3		 ret	 0
$LN10@AllocateCo:
  000fd	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00104	eb 07		 jmp	 SHORT __tryend$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$2
$LN13@AllocateCo:
  00106	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$2:
  0010d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pFriendInfo$[ebp], 0

; 258  : 		pFriendInfo=NULL;

  00114	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pFriendInfo$[ebp], 0

; 259  : 	}

  0011b	b8 00 00 00 00	 mov	 eax, $LN15@AllocateCo
  00120	c3		 ret	 0
$LN8@AllocateCo:
  00121	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00128	eb 07		 jmp	 SHORT __tryend$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$3
$LN15@AllocateCo:
  0012a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z$3:

; 260  : 
; 261  : 	return pFriendInfo;

  00131	8b 45 e8	 mov	 eax, DWORD PTR _pFriendInfo$[ebp]
$LN5@AllocateCo:

; 262  : }

  00134	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013e	59		 pop	 ecx
  0013f	5f		 pop	 edi
  00140	5e		 pop	 esi
  00141	5b		 pop	 ebx
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 94	 mov	 ecx, DWORD PTR [edx-108]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z ENDP ; CUserFriendGroup::AllocateContent
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ResetFriendGroup@CUserFriendGroup@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetFriendGroup@CUserFriendGroup@@QAEXXZ PROC		; CUserFriendGroup::ResetFriendGroup, COMDAT
; _this$ = ecx

; 293  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 	//设置变量	
; 295  : 	m_wFriendCount=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax

; 296  : 	m_dwOwnerUserID=0;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 297  : 	if(m_pFriendInfo!=NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 1c		 je	 SHORT $LN1@ResetFrien

; 298  : 	{
; 299  : 		ZeroMemory(m_pFriendInfo,m_wGroupContent*sizeof(tagServerFriendInfo));

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0002f	6b d1 07	 imul	 edx, ecx, 7
  00032	52		 push	 edx
  00033	6a 00		 push	 0
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 _memset
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@ResetFrien:

; 300  : 	}
; 301  : }

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?ResetFriendGroup@CUserFriendGroup@@QAEXXZ ENDP		; CUserFriendGroup::ResetFriendGroup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?EnumFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wEnumIndex$ = 8					; size = 2
?EnumFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@G@Z PROC ; CUserFriendGroup::EnumFriendItem, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	//参数校验
; 234  : 	if(wEnumIndex>=m_wFriendCount) return NULL;

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wEnumIndex$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00017	3b c2		 cmp	 eax, edx
  00019	7c 04		 jl	 SHORT $LN2@EnumFriend
  0001b	33 c0		 xor	 eax, eax
  0001d	eb 0d		 jmp	 SHORT $LN1@EnumFriend
$LN2@EnumFriend:

; 235  : 
; 236  : 	return (tagServerFriendInfo *)(m_pFriendInfo+wEnumIndex);

  0001f	0f b7 45 08	 movzx	 eax, WORD PTR _wEnumIndex$[ebp]
  00023	6b c0 07	 imul	 eax, eax, 7
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	03 41 0c	 add	 eax, DWORD PTR [ecx+12]
$LN1@EnumFriend:

; 237  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?EnumFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@G@Z ENDP ; CUserFriendGroup::EnumFriendItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?SearchFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@K@Z
_TEXT	SEGMENT
_wIndex$1 = -12						; size = 2
_pFriendInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SearchFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@K@Z PROC ; CUserFriendGroup::SearchFriendItem, COMDAT
; _this$ = ecx

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 	//变量定义
; 218  : 	tagServerFriendInfo * pFriendInfo=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pFriendInfo$[ebp], 0

; 219  : 
; 220  : 	//查找好友
; 221  : 	for(WORD wIndex=0;wIndex<m_wFriendCount;++wIndex)

  00013	33 c0		 xor	 eax, eax
  00015	66 89 45 f4	 mov	 WORD PTR _wIndex$1[ebp], ax
  00019	eb 0c		 jmp	 SHORT $LN4@SearchFrie
$LN2@SearchFrie:
  0001b	66 8b 45 f4	 mov	 ax, WORD PTR _wIndex$1[ebp]
  0001f	66 83 c0 01	 add	 ax, 1
  00023	66 89 45 f4	 mov	 WORD PTR _wIndex$1[ebp], ax
$LN4@SearchFrie:
  00027	0f b7 45 f4	 movzx	 eax, WORD PTR _wIndex$1[ebp]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	0f b7 51 0a	 movzx	 edx, WORD PTR [ecx+10]
  00032	3b c2		 cmp	 eax, edx
  00034	7d 21		 jge	 SHORT $LN3@SearchFrie

; 222  : 	{
; 223  : 		pFriendInfo = (tagServerFriendInfo *)(m_pFriendInfo+wIndex);

  00036	0f b7 45 f4	 movzx	 eax, WORD PTR _wIndex$1[ebp]
  0003a	6b c8 07	 imul	 ecx, eax, 7
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00040	03 4a 0c	 add	 ecx, DWORD PTR [edx+12]
  00043	89 4d f8	 mov	 DWORD PTR _pFriendInfo$[ebp], ecx

; 224  : 		if(pFriendInfo->dwUserID==dwUserID) return pFriendInfo;

  00046	8b 45 f8	 mov	 eax, DWORD PTR _pFriendInfo$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	3b 4d 08	 cmp	 ecx, DWORD PTR _dwUserID$[ebp]
  0004e	75 05		 jne	 SHORT $LN5@SearchFrie
  00050	8b 45 f8	 mov	 eax, DWORD PTR _pFriendInfo$[ebp]
  00053	eb 04		 jmp	 SHORT $LN1@SearchFrie
$LN5@SearchFrie:

; 225  : 	}

  00055	eb c4		 jmp	 SHORT $LN2@SearchFrie
$LN3@SearchFrie:

; 226  : 
; 227  : 	return NULL;

  00057	33 c0		 xor	 eax, eax
$LN1@SearchFrie:

; 228  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?SearchFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@K@Z ENDP ; CUserFriendGroup::SearchFriendItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z
_TEXT	SEGMENT
_pFriendInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z PROC	; CUserFriendGroup::RemoveFriendInfo, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 194  : 	//指针校验
; 195  : 	ASSERT(m_pFriendInfo!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 19		 jne	 SHORT $LN6@RemoveFrie
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN6@RemoveFrie
  0002d	cc		 int	 3
$LN6@RemoveFrie:

; 196  : 	if(m_pFriendInfo==NULL) return false;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00035	75 04		 jne	 SHORT $LN2@RemoveFrie
  00037	32 c0		 xor	 al, al
  00039	eb 51		 jmp	 SHORT $LN1@RemoveFrie
$LN2@RemoveFrie:

; 197  : 
; 198  : 	//变量定义
; 199  : 	tagServerFriendInfo * pFriendInfo=SearchFriendItem(dwUserID);

  0003b	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?SearchFriendItem@CUserFriendGroup@@QAEPAUtagServerFriendInfo@@K@Z ; CUserFriendGroup::SearchFriendItem
  00047	89 45 f8	 mov	 DWORD PTR _pFriendInfo$[ebp], eax

; 200  : 
; 201  : 	//移动内存
; 202  : 	if(pFriendInfo!=NULL) 

  0004a	83 7d f8 00	 cmp	 DWORD PTR _pFriendInfo$[ebp], 0
  0004e	74 3a		 je	 SHORT $LN3@RemoveFrie

; 203  : 	{
; 204  : 		--m_wFriendCount;

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00057	66 83 e9 01	 sub	 cx, 1
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	66 89 4a 0a	 mov	 WORD PTR [edx+10], cx

; 205  : 		if(pFriendInfo!=(tagServerFriendInfo *)(m_pFriendInfo+m_wGroupContent-1))

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00069	6b d1 07	 imul	 edx, ecx, 7
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	8d 54 11 f9	 lea	 edx, DWORD PTR [ecx+edx-7]
  00076	39 55 f8	 cmp	 DWORD PTR _pFriendInfo$[ebp], edx
  00079	74 0f		 je	 SHORT $LN3@RemoveFrie

; 206  : 		{
; 207  : 			pFriendInfo = pFriendInfo++;

  0007b	8b 45 f8	 mov	 eax, DWORD PTR _pFriendInfo$[ebp]
  0007e	89 45 f8	 mov	 DWORD PTR _pFriendInfo$[ebp], eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _pFriendInfo$[ebp]
  00084	83 c1 07	 add	 ecx, 7
  00087	89 4d f8	 mov	 DWORD PTR _pFriendInfo$[ebp], ecx
$LN3@RemoveFrie:

; 208  : 		}		
; 209  : 	}
; 210  : 
; 211  : 	return true;

  0008a	b0 01		 mov	 al, 1
$LN1@RemoveFrie:

; 212  : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?RemoveFriendInfo@CUserFriendGroup@@QAE_NK@Z ENDP	; CUserFriendGroup::RemoveFriendInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z
_TEXT	SEGMENT
tv85 = -72						; size = 4
_this$ = -4						; size = 4
_FriendInfo$ = 8					; size = 4
?AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z PROC ; CUserFriendGroup::AppendFriendInfo, COMDAT
; _this$ = ecx

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 178  : 	//指针校验
; 179  : 	ASSERT(m_pFriendInfo!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 19		 jne	 SHORT $LN5@AppendFrie
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN5@AppendFrie
  0002d	cc		 int	 3
$LN5@AppendFrie:

; 180  : 	if(m_pFriendInfo==NULL) return false;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00035	75 04		 jne	 SHORT $LN2@AppendFrie
  00037	32 c0		 xor	 al, al
  00039	eb 63		 jmp	 SHORT $LN1@AppendFrie
$LN2@AppendFrie:

; 181  : 
; 182  : 	//拷贝数据
; 183  : 	CopyMemory((m_pFriendInfo+m_wFriendCount++),&FriendInfo,sizeof(tagServerFriendInfo));

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00042	6b d1 07	 imul	 edx, ecx, 7
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  0004b	89 55 b8	 mov	 DWORD PTR tv85[ebp], edx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	66 8b 51 0a	 mov	 dx, WORD PTR [ecx+10]
  00055	66 83 c2 01	 add	 dx, 1
  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	66 89 50 0a	 mov	 WORD PTR [eax+10], dx
  00060	6a 07		 push	 7
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _FriendInfo$[ebp]
  00065	51		 push	 ecx
  00066	8b 55 b8	 mov	 edx, DWORD PTR tv85[ebp]
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 _memcpy
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 184  : 
; 185  : 	//扩展容量
; 186  : 	if(m_wFriendCount==m_wGroupContent) ExtendGroupContent(m_wFriendCount/10);

  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	0f b7 48 0a	 movzx	 ecx, WORD PTR [eax+10]
  00079	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007c	0f b7 42 08	 movzx	 eax, WORD PTR [edx+8]
  00080	3b c8		 cmp	 ecx, eax
  00082	75 18		 jne	 SHORT $LN3@AppendFrie
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	0f b7 40 0a	 movzx	 eax, WORD PTR [eax+10]
  0008b	99		 cdq
  0008c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00091	f7 f9		 idiv	 ecx
  00093	50		 push	 eax
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	e8 00 00 00 00	 call	 ?ExtendGroupContent@CUserFriendGroup@@AAE_NG@Z ; CUserFriendGroup::ExtendGroupContent
$LN3@AppendFrie:

; 187  : 
; 188  : 	return true;

  0009c	b0 01		 mov	 al, 1
$LN1@AppendFrie:

; 189  : }

  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
?AppendFriendInfo@CUserFriendGroup@@QAE_NAAUtagServerFriendInfo@@@Z ENDP ; CUserFriendGroup::AppendFriendInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?InitFriendGroup@CUserFriendGroup@@QAE_NG@Z
_TEXT	SEGMENT
tv72 = -72						; size = 4
_this$ = -4						; size = 4
_wGroupContent$ = 8					; size = 2
?InitFriendGroup@CUserFriendGroup@@QAE_NG@Z PROC	; CUserFriendGroup::InitFriendGroup, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 166  : 	//设置变量
; 167  : 	m_wGroupContent = wGroupContent;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _wGroupContent$[ebp]
  00013	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 168  : 
; 169  : 	//分配容量
; 170  : 	m_pFriendInfo = AllocateContent(m_wGroupContent);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  0001e	51		 push	 ecx
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?AllocateContent@CUserFriendGroup@@AAEPAUtagServerFriendInfo@@G@Z ; CUserFriendGroup::AllocateContent
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 171  : 
; 172  : 	return m_pFriendInfo!=NULL;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00034	74 09		 je	 SHORT $LN3@InitFriend
  00036	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  0003d	eb 07		 jmp	 SHORT $LN4@InitFriend
$LN3@InitFriend:
  0003f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN4@InitFriend:
  00046	8a 45 b8	 mov	 al, BYTE PTR tv72[ebp]

; 173  : }

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?InitFriendGroup@CUserFriendGroup@@QAE_NG@Z ENDP	; CUserFriendGroup::InitFriendGroup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetGroupContent@CUserFriendGroup@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroupContent@CUserFriendGroup@@QAEGXZ PROC		; CUserFriendGroup::GetGroupContent, COMDAT
; _this$ = ecx

; 291  : 	WORD GetGroupContent() { return m_wGroupContent; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetGroupContent@CUserFriendGroup@@QAEGXZ ENDP		; CUserFriendGroup::GetGroupContent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetOwnerUserID@CUserFriendGroup@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwnerUserID@CUserFriendGroup@@QAEKXZ PROC		; CUserFriendGroup::GetOwnerUserID, COMDAT
; _this$ = ecx

; 289  : 	DWORD GetOwnerUserID() { return m_dwOwnerUserID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetOwnerUserID@CUserFriendGroup@@QAEKXZ ENDP		; CUserFriendGroup::GetOwnerUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?SetOwnerUserID@CUserFriendGroup@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SetOwnerUserID@CUserFriendGroup@@QAEXK@Z PROC		; CUserFriendGroup::SetOwnerUserID, COMDAT
; _this$ = ecx

; 287  : 	VOID SetOwnerUserID(DWORD dwUserID) { m_dwOwnerUserID=dwUserID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  00012	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetOwnerUserID@CUserFriendGroup@@QAEXK@Z ENDP		; CUserFriendGroup::SetOwnerUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1CUserFriendGroup@@UAE@XZ
_TEXT	SEGMENT
$T2 = -88						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CUserFriendGroup@@UAE@XZ PROC			; CUserFriendGroup::~CUserFriendGroup, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CUserFriendGroup@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 48	 sub	 esp, 72			; 00000048H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CUserFriendGroup@@6B@

; 159  : 	//释放资源
; 160  : 	if(m_pFriendInfo!=NULL)	SafeDeleteArray(m_pFriendInfo);

  00038	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0003f	74 5b		 je	 SHORT $LN4@CUserFrien
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00048	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004e	89 4d a8	 mov	 DWORD PTR $T2[ebp], ecx
  00051	8b 55 a8	 mov	 edx, DWORD PTR $T2[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0005a	83 c4 04	 add	 esp, 4
  0005d	eb 23		 jmp	 SHORT $LN6@CUserFrien
__catch$??1CUserFriendGroup@@UAE@XZ$0:
  0005f	33 c0		 xor	 eax, eax
  00061	75 19		 jne	 SHORT $LN5@CUserFrien
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CUserFriendGroup@@UAE@XZ@4JA
  00069	83 c1 02	 add	 ecx, 2
  0006c	51		 push	 ecx
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00072	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00077	85 c0		 test	 eax, eax
  00079	74 01		 je	 SHORT $LN5@CUserFrien
  0007b	cc		 int	 3
$LN5@CUserFrien:
  0007c	b8 00 00 00 00	 mov	 eax, $LN9@CUserFrien
  00081	c3		 ret	 0
$LN6@CUserFrien:
  00082	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00089	eb 07		 jmp	 SHORT __tryend$??1CUserFriendGroup@@UAE@XZ$1
$LN9@CUserFrien:
  0008b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??1CUserFriendGroup@@UAE@XZ$1:
  00092	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN4@CUserFrien:

; 161  : }

  0009c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0009f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a6	59		 pop	 ecx
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CUserFriendGroup@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CUserFriendGroup@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CUserFriendGroup@@UAE@XZ ENDP			; CUserFriendGroup::~CUserFriendGroup
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0CUserFriendGroup@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CUserFriendGroup@@QAE@XZ PROC			; CUserFriendGroup::CUserFriendGroup, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CUserFriendGroup@@6B@

; 149  : 	//变量定义
; 150  : 	m_dwOwnerUserID=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 151  : 	m_wFriendCount=0;	

  0001f	33 c0		 xor	 eax, eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax

; 152  : 	m_wGroupContent=0;

  00028	33 c0		 xor	 eax, eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 153  : 	m_pFriendInfo=NULL;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 154  : }

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??0CUserFriendGroup@@QAE@XZ ENDP			; CUserFriendGroup::CUserFriendGroup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCServerUserManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCServerUserManager@@UAEPAXI@Z PROC			; CServerUserManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CServerUserManager@@UAE@XZ ; CServerUserManager::~CServerUserManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 4c		 push	 76			; 0000004cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCServerUserManager@@UAEPAXI@Z ENDP			; CServerUserManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?QueryNearUserItem@CServerUserManager@@UAEKKKAAVCNearUserManager@@@Z
_TEXT	SEGMENT
tv261 = -248						; size = 8
tv259 = -240						; size = 4
tv256 = -234						; size = 2
_NearUserInfo$1 = -168					; size = 142
_pUserInfo$2 = -24					; size = 4
_pNearUserItem$ = -20					; size = 4
_pUserItem$ = -16					; size = 4
_dwCount$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwUserID$ = 8						; size = 4
_dwNearUserID$ = 12					; size = 4
_NearUserManager$ = 16					; size = 4
?QueryNearUserItem@CServerUserManager@@UAEKKKAAVCNearUserManager@@@Z PROC ; CServerUserManager::QueryNearUserItem, COMDAT
; _this$ = ecx

; 475  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f8 00 00
	00		 sub	 esp, 248		; 000000f8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 	DWORD dwCount = 0;

  00019	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwCount$[ebp], 0

; 477  : 	CLocalUserItem *pUserItem = (CLocalUserItem *)SearchUserItem(dwUserID);

  00020	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  00023	50		 push	 eax
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002f	ff d0		 call	 eax
  00031	89 45 f0	 mov	 DWORD PTR _pUserItem$[ebp], eax

; 478  : 	CLocalUserItem *pNearUserItem = (CLocalUserItem *)SearchUserItem(dwNearUserID);

  00034	8b 45 0c	 mov	 eax, DWORD PTR _dwNearUserID$[ebp]
  00037	50		 push	 eax
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00043	ff d0		 call	 eax
  00045	89 45 ec	 mov	 DWORD PTR _pNearUserItem$[ebp], eax

; 479  : 	if (pNearUserItem != NULL)

  00048	83 7d ec 00	 cmp	 DWORD PTR _pNearUserItem$[ebp], 0
  0004c	0f 84 95 01 00
	00		 je	 $LN2@QueryNearU

; 480  : 	{
; 481  : 		tagFriendUserInfo *pUserInfo = &(pNearUserItem->m_UserInfo);

  00052	8b 45 ec	 mov	 eax, DWORD PTR _pNearUserItem$[ebp]
  00055	83 c0 08	 add	 eax, 8
  00058	89 45 e8	 mov	 DWORD PTR _pUserInfo$2[ebp], eax

; 482  : 		{
; 483  : 			tagNearUserInfo NearUserInfo;
; 484  : 			ZeroMemory(&NearUserInfo,sizeof(NearUserInfo));

  0005b	68 8e 00 00 00	 push	 142			; 0000008eH
  00060	6a 00		 push	 0
  00062	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _NearUserInfo$1[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 _memset
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 485  : 			NearUserInfo.dwUserID = pUserInfo->dwUserID;

  00071	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _NearUserInfo$1[ebp], ecx

; 486  : 			NearUserInfo.dwGameID = pUserInfo->dwGameID;

  0007c	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  0007f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00082	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _NearUserInfo$1[ebp+4], ecx

; 487  : 			NearUserInfo.dwFaceID = pUserInfo->dwFaceID;

  00088	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  0008b	8b 48 49	 mov	 ecx, DWORD PTR [eax+73]
  0008e	89 4d 80	 mov	 DWORD PTR _NearUserInfo$1[ebp+40], ecx

; 488  : 			NearUserInfo.dwCustomID = pUserInfo->dwCustomID;

  00091	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  00094	8b 48 4d	 mov	 ecx, DWORD PTR [eax+77]
  00097	89 4d 84	 mov	 DWORD PTR _NearUserInfo$1[ebp+44], ecx

; 489  : 			NearUserInfo.cbGender = pUserInfo->cbGender;

  0009a	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  0009d	8a 48 51	 mov	 cl, BYTE PTR [eax+81]
  000a0	88 4d 88	 mov	 BYTE PTR _NearUserInfo$1[ebp+48], cl

; 490  : 			NearUserInfo.wMemberOrder = pUserInfo->wMemberOrder;

  000a3	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  000a6	66 8b 48 52	 mov	 cx, WORD PTR [eax+82]
  000aa	66 89 4d 89	 mov	 WORD PTR _NearUserInfo$1[ebp+49], cx

; 491  : 			NearUserInfo.wGrowLevel = pUserInfo->wGrowLevel;

  000ae	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  000b1	66 8b 48 54	 mov	 cx, WORD PTR [eax+84]
  000b5	66 89 4d 8b	 mov	 WORD PTR _NearUserInfo$1[ebp+51], cx

; 492  : 			NearUserInfo.dLongitude = pUserInfo->dLongitude;

  000b9	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  000bc	f2 0f 10 80 b0
	01 00 00	 movsd	 xmm0, QWORD PTR [eax+432]
  000c4	f2 0f 11 45 ad	 movsd	 QWORD PTR _NearUserInfo$1[ebp+85], xmm0

; 493  : 			NearUserInfo.dLatitude = pUserInfo->dLatitude;

  000c9	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  000cc	f2 0f 10 80 b8
	01 00 00	 movsd	 xmm0, QWORD PTR [eax+440]
  000d4	f2 0f 11 45 b5	 movsd	 QWORD PTR _NearUserInfo$1[ebp+93], xmm0

; 494  : 			NearUserInfo.dwClientAddr = pUserInfo->dwClientAddr;

  000d9	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  000dc	8b 88 ab 01 00
	00		 mov	 ecx, DWORD PTR [eax+427]
  000e2	89 4d e2	 mov	 DWORD PTR _NearUserInfo$1[ebp+138], ecx

; 495  : 			lstrcpyn(NearUserInfo.szNickName,pUserInfo->szNickName,CountArray(NearUserInfo.szNickName));

  000e5	6a 20		 push	 32			; 00000020H
  000e7	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  000ea	83 c0 08	 add	 eax, 8
  000ed	50		 push	 eax
  000ee	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _NearUserInfo$1[ebp+8]
  000f4	51		 push	 ecx
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 496  : 			lstrcpyn(NearUserInfo.szUnderWrite,pUserInfo->szUnderWrite,CountArray(NearUserInfo.szUnderWrite));

  000fb	6a 20		 push	 32			; 00000020H
  000fd	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  00100	83 c0 56	 add	 eax, 86			; 00000056H
  00103	50		 push	 eax
  00104	8d 4d 8d	 lea	 ecx, DWORD PTR _NearUserInfo$1[ebp+53]
  00107	51		 push	 ecx
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 497  : 			lstrcpyn(NearUserInfo.szPlaceName, pUserInfo->szPlaceName, CountArray(NearUserInfo.szPlaceName));

  0010e	6a 21		 push	 33			; 00000021H
  00110	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  00113	05 c0 01 00 00	 add	 eax, 448		; 000001c0H
  00118	50		 push	 eax
  00119	8d 4d c1	 lea	 ecx, DWORD PTR _NearUserInfo$1[ebp+105]
  0011c	51		 push	 ecx
  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 498  : 			if (pUserItem->m_UserInfo.cbCoordinate == 1 && pUserInfo->cbCoordinate ==1)

  00123	8b 45 f0	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  00126	0f b6 88 b7 01
	00 00		 movzx	 ecx, BYTE PTR [eax+439]
  0012d	83 f9 01	 cmp	 ecx, 1
  00130	0f 85 8d 00 00
	00		 jne	 $LN3@QueryNearU
  00136	8b 45 e8	 mov	 eax, DWORD PTR _pUserInfo$2[ebp]
  00139	0f b6 88 af 01
	00 00		 movzx	 ecx, BYTE PTR [eax+431]
  00140	83 f9 01	 cmp	 ecx, 1
  00143	75 7e		 jne	 SHORT $LN3@QueryNearU

; 499  : 			{
; 500  : 				NearUserInfo.dwDistance =(DWORD)(m_ltladistance.GetDistance(NearUserInfo.dLatitude,NearUserInfo.dLongitude,pUserItem->m_UserInfo.dLatitude,pUserItem->m_UserInfo.dLongitude));

  00145	8b 45 f0	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  00148	83 ec 08	 sub	 esp, 8
  0014b	f2 0f 10 80 b8
	01 00 00	 movsd	 xmm0, QWORD PTR [eax+440]
  00153	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00158	8b 4d f0	 mov	 ecx, DWORD PTR _pUserItem$[ebp]
  0015b	83 ec 08	 sub	 esp, 8
  0015e	f2 0f 10 81 c0
	01 00 00	 movsd	 xmm0, QWORD PTR [ecx+448]
  00166	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0016b	83 ec 08	 sub	 esp, 8
  0016e	f2 0f 10 45 ad	 movsd	 xmm0, QWORD PTR _NearUserInfo$1[ebp+85]
  00173	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00178	83 ec 08	 sub	 esp, 8
  0017b	f2 0f 10 45 b5	 movsd	 xmm0, QWORD PTR _NearUserInfo$1[ebp+93]
  00180	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00185	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	83 c1 48	 add	 ecx, 72			; 00000048H
  0018b	e8 00 00 00 00	 call	 ?GetDistance@Cltladistance@@QAENNNNN@Z ; Cltladistance::GetDistance
  00190	d9 bd 16 ff ff
	ff		 fnstcw	 WORD PTR tv256[ebp]
  00196	0f b7 85 16 ff
	ff ff		 movzx	 eax, WORD PTR tv256[ebp]
  0019d	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001a2	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv259[ebp], eax
  001a8	d9 ad 10 ff ff
	ff		 fldcw	 WORD PTR tv259[ebp]
  001ae	df bd 08 ff ff
	ff		 fistp	 QWORD PTR tv261[ebp]
  001b4	d9 ad 16 ff ff
	ff		 fldcw	 WORD PTR tv256[ebp]
  001ba	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR tv261[ebp]
  001c0	89 55 bd	 mov	 DWORD PTR _NearUserInfo$1[ebp+101], edx
$LN3@QueryNearU:

; 501  : 			}
; 502  : 			NearUserManager.InsertNearUserItem(NearUserInfo);

  001c3	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _NearUserInfo$1[ebp]
  001c9	50		 push	 eax
  001ca	8b 4d 10	 mov	 ecx, DWORD PTR _NearUserManager$[ebp]
  001cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  001cf	8b 4d 10	 mov	 ecx, DWORD PTR _NearUserManager$[ebp]
  001d2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001d5	ff d0		 call	 eax

; 503  : 			dwCount=NearUserManager.GetUserItemCount();

  001d7	8b 45 10	 mov	 eax, DWORD PTR _NearUserManager$[ebp]
  001da	8b 10		 mov	 edx, DWORD PTR [eax]
  001dc	8b 4d 10	 mov	 ecx, DWORD PTR _NearUserManager$[ebp]
  001df	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  001e2	ff d0		 call	 eax
  001e4	89 45 f4	 mov	 DWORD PTR _dwCount$[ebp], eax
$LN2@QueryNearU:

; 504  : 		}
; 505  : 
; 506  : 	}
; 507  : 
; 508  : 	return dwCount;

  001e7	8b 45 f4	 mov	 eax, DWORD PTR _dwCount$[ebp]

; 509  : }

  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	5b		 pop	 ebx
  001ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f0	33 cd		 xor	 ecx, ebp
  001f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 0c 00	 ret	 12			; 0000000cH
?QueryNearUserItem@CServerUserManager@@UAEKKKAAVCNearUserManager@@@Z ENDP ; CServerUserManager::QueryNearUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?GetNearUserItem@CServerUserManager@@UAEKKAAVCNearUserManager@@@Z
_TEXT	SEGMENT
tv266 = -256						; size = 8
tv264 = -248						; size = 4
tv261 = -242						; size = 2
_pUserInfo$1 = -176					; size = 4
_pServerUserItem$2 = -172				; size = 4
_i$3 = -168						; size = 2
_NearUserInfo$ = -164					; size = 142
_pUserItem$ = -20					; size = 4
_dwCurrCount$ = -16					; size = 4
_dwCount$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwUserID$ = 8						; size = 4
_NearUserManager$ = 12					; size = 4
?GetNearUserItem@CServerUserManager@@UAEKKAAVCNearUserManager@@@Z PROC ; CServerUserManager::GetNearUserItem, COMDAT
; _this$ = ecx

; 439  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 440  : 	DWORD dwCount =GetUserItemCount();

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 10		 mov	 edx, DWORD PTR [eax]
  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00024	ff d0		 call	 eax
  00026	89 45 f4	 mov	 DWORD PTR _dwCount$[ebp], eax

; 441  : 	DWORD dwCurrCount = 0;

  00029	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwCurrCount$[ebp], 0

; 442  : 	CLocalUserItem *pUserItem = (CLocalUserItem *)SearchUserItem(dwUserID);

  00030	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 11		 mov	 edx, DWORD PTR [ecx]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003f	ff d0		 call	 eax
  00041	89 45 ec	 mov	 DWORD PTR _pUserItem$[ebp], eax

; 443  : 	tagNearUserInfo NearUserInfo;
; 444  : 	for (WORD i = 0;i<dwCount;i++)

  00044	33 c0		 xor	 eax, eax
  00046	66 89 85 58 ff
	ff ff		 mov	 WORD PTR _i$3[ebp], ax
  0004d	eb 12		 jmp	 SHORT $LN4@GetNearUse
$LN2@GetNearUse:
  0004f	66 8b 85 58 ff
	ff ff		 mov	 ax, WORD PTR _i$3[ebp]
  00056	66 83 c0 01	 add	 ax, 1
  0005a	66 89 85 58 ff
	ff ff		 mov	 WORD PTR _i$3[ebp], ax
$LN4@GetNearUse:
  00061	0f b7 85 58 ff
	ff ff		 movzx	 eax, WORD PTR _i$3[ebp]
  00068	3b 45 f4	 cmp	 eax, DWORD PTR _dwCount$[ebp]
  0006b	0f 83 ca 01 00
	00		 jae	 $LN3@GetNearUse

; 445  : 	{
; 446  : 
; 447  : 		CLocalUserItem * pServerUserItem = (CLocalUserItem *)	EnumUserItem(i);

  00071	0f b7 85 58 ff
	ff ff		 movzx	 eax, WORD PTR _i$3[ebp]
  00078	50		 push	 eax
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00084	ff d0		 call	 eax
  00086	89 85 54 ff ff
	ff		 mov	 DWORD PTR _pServerUserItem$2[ebp], eax

; 448  : 		tagFriendUserInfo *pUserInfo = &(pServerUserItem->m_UserInfo);

  0008c	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _pServerUserItem$2[ebp]
  00092	83 c0 08	 add	 eax, 8
  00095	89 85 50 ff ff
	ff		 mov	 DWORD PTR _pUserInfo$1[ebp], eax

; 449  : 		if (pUserInfo->cbCoordinate ==1 && pUserItem->m_UserInfo.cbCoordinate == 1)

  0009b	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  000a1	0f b6 88 af 01
	00 00		 movzx	 ecx, BYTE PTR [eax+431]
  000a8	83 f9 01	 cmp	 ecx, 1
  000ab	0f 85 85 01 00
	00		 jne	 $LN5@GetNearUse
  000b1	8b 45 ec	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  000b4	0f b6 88 b7 01
	00 00		 movzx	 ecx, BYTE PTR [eax+439]
  000bb	83 f9 01	 cmp	 ecx, 1
  000be	0f 85 72 01 00
	00		 jne	 $LN5@GetNearUse

; 450  : 		{
; 451  : 			dwCurrCount++;

  000c4	8b 45 f0	 mov	 eax, DWORD PTR _dwCurrCount$[ebp]
  000c7	83 c0 01	 add	 eax, 1
  000ca	89 45 f0	 mov	 DWORD PTR _dwCurrCount$[ebp], eax

; 452  : 			ZeroMemory(&NearUserInfo,sizeof(NearUserInfo));

  000cd	68 8e 00 00 00	 push	 142			; 0000008eH
  000d2	6a 00		 push	 0
  000d4	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _NearUserInfo$[ebp]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 _memset
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 453  : 			NearUserInfo.dwUserID = pUserInfo->dwUserID;

  000e3	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  000e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000eb	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _NearUserInfo$[ebp], ecx

; 454  : 			NearUserInfo.dwGameID = pUserInfo->dwGameID;

  000f1	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  000f7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000fa	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _NearUserInfo$[ebp+4], ecx

; 455  : 			NearUserInfo.dwFaceID = pUserInfo->dwFaceID;

  00100	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00106	8b 48 49	 mov	 ecx, DWORD PTR [eax+73]
  00109	89 4d 84	 mov	 DWORD PTR _NearUserInfo$[ebp+40], ecx

; 456  : 			NearUserInfo.dwCustomID = pUserInfo->dwCustomID;

  0010c	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00112	8b 48 4d	 mov	 ecx, DWORD PTR [eax+77]
  00115	89 4d 88	 mov	 DWORD PTR _NearUserInfo$[ebp+44], ecx

; 457  : 			NearUserInfo.cbGender = pUserInfo->cbGender;

  00118	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  0011e	8a 48 51	 mov	 cl, BYTE PTR [eax+81]
  00121	88 4d 8c	 mov	 BYTE PTR _NearUserInfo$[ebp+48], cl

; 458  : 			NearUserInfo.wMemberOrder = pUserInfo->wMemberOrder;

  00124	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  0012a	66 8b 48 52	 mov	 cx, WORD PTR [eax+82]
  0012e	66 89 4d 8d	 mov	 WORD PTR _NearUserInfo$[ebp+49], cx

; 459  : 			NearUserInfo.wGrowLevel = pUserInfo->wGrowLevel;

  00132	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00138	66 8b 48 54	 mov	 cx, WORD PTR [eax+84]
  0013c	66 89 4d 8f	 mov	 WORD PTR _NearUserInfo$[ebp+51], cx

; 460  : 			NearUserInfo.dLongitude = pUserInfo->dLongitude;

  00140	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00146	f2 0f 10 80 b0
	01 00 00	 movsd	 xmm0, QWORD PTR [eax+432]
  0014e	f2 0f 11 45 b1	 movsd	 QWORD PTR _NearUserInfo$[ebp+85], xmm0

; 461  : 			NearUserInfo.dLatitude = pUserInfo->dLatitude;

  00153	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00159	f2 0f 10 80 b8
	01 00 00	 movsd	 xmm0, QWORD PTR [eax+440]
  00161	f2 0f 11 45 b9	 movsd	 QWORD PTR _NearUserInfo$[ebp+93], xmm0

; 462  : 			NearUserInfo.dwClientAddr = pUserInfo->dwClientAddr;

  00166	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  0016c	8b 88 ab 01 00
	00		 mov	 ecx, DWORD PTR [eax+427]
  00172	89 4d e6	 mov	 DWORD PTR _NearUserInfo$[ebp+138], ecx

; 463  : 			lstrcpyn(NearUserInfo.szNickName,pUserInfo->szNickName,CountArray(NearUserInfo.szNickName));

  00175	6a 20		 push	 32			; 00000020H
  00177	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  0017d	83 c0 08	 add	 eax, 8
  00180	50		 push	 eax
  00181	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _NearUserInfo$[ebp+8]
  00187	51		 push	 ecx
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 464  : 			lstrcpyn(NearUserInfo.szUnderWrite,pUserInfo->szUnderWrite,CountArray(NearUserInfo.szUnderWrite));

  0018e	6a 20		 push	 32			; 00000020H
  00190	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$1[ebp]
  00196	83 c0 56	 add	 eax, 86			; 00000056H
  00199	50		 push	 eax
  0019a	8d 4d 91	 lea	 ecx, DWORD PTR _NearUserInfo$[ebp+53]
  0019d	51		 push	 ecx
  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 465  : 			NearUserInfo.dwDistance =(DWORD)(m_ltladistance.GetDistance(NearUserInfo.dLatitude,NearUserInfo.dLongitude,pUserItem->m_UserInfo.dLatitude,pUserItem->m_UserInfo.dLongitude));

  001a4	8b 45 ec	 mov	 eax, DWORD PTR _pUserItem$[ebp]
  001a7	83 ec 08	 sub	 esp, 8
  001aa	f2 0f 10 80 b8
	01 00 00	 movsd	 xmm0, QWORD PTR [eax+440]
  001b2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001b7	8b 4d ec	 mov	 ecx, DWORD PTR _pUserItem$[ebp]
  001ba	83 ec 08	 sub	 esp, 8
  001bd	f2 0f 10 81 c0
	01 00 00	 movsd	 xmm0, QWORD PTR [ecx+448]
  001c5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001ca	83 ec 08	 sub	 esp, 8
  001cd	f2 0f 10 45 b1	 movsd	 xmm0, QWORD PTR _NearUserInfo$[ebp+85]
  001d2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001d7	83 ec 08	 sub	 esp, 8
  001da	f2 0f 10 45 b9	 movsd	 xmm0, QWORD PTR _NearUserInfo$[ebp+93]
  001df	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e7	83 c1 48	 add	 ecx, 72			; 00000048H
  001ea	e8 00 00 00 00	 call	 ?GetDistance@Cltladistance@@QAENNNNN@Z ; Cltladistance::GetDistance
  001ef	d9 bd 0e ff ff
	ff		 fnstcw	 WORD PTR tv261[ebp]
  001f5	0f b7 85 0e ff
	ff ff		 movzx	 eax, WORD PTR tv261[ebp]
  001fc	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00201	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv264[ebp], eax
  00207	d9 ad 08 ff ff
	ff		 fldcw	 WORD PTR tv264[ebp]
  0020d	df bd 00 ff ff
	ff		 fistp	 QWORD PTR tv266[ebp]
  00213	d9 ad 0e ff ff
	ff		 fldcw	 WORD PTR tv261[ebp]
  00219	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR tv266[ebp]
  0021f	89 55 c1	 mov	 DWORD PTR _NearUserInfo$[ebp+101], edx

; 466  : 			NearUserManager.InsertNearUserItem(NearUserInfo);

  00222	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _NearUserInfo$[ebp]
  00228	50		 push	 eax
  00229	8b 4d 0c	 mov	 ecx, DWORD PTR _NearUserManager$[ebp]
  0022c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0022e	8b 4d 0c	 mov	 ecx, DWORD PTR _NearUserManager$[ebp]
  00231	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00234	ff d0		 call	 eax
$LN5@GetNearUse:

; 467  : 		}
; 468  : 		
; 469  : 	}

  00236	e9 14 fe ff ff	 jmp	 $LN2@GetNearUse
$LN3@GetNearUse:

; 470  : 
; 471  : 	return dwCurrCount;

  0023b	8b 45 f0	 mov	 eax, DWORD PTR _dwCurrCount$[ebp]

; 472  : }

  0023e	5f		 pop	 edi
  0023f	5e		 pop	 esi
  00240	5b		 pop	 ebx
  00241	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00244	33 cd		 xor	 ecx, ebp
  00246	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024b	8b e5		 mov	 esp, ebp
  0024d	5d		 pop	 ebp
  0024e	c2 08 00	 ret	 8
?GetNearUserItem@CServerUserManager@@UAEKKAAVCNearUserManager@@@Z ENDP ; CServerUserManager::GetNearUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z
_TEXT	SEGMENT
tv95 = -120						; size = 4
tv174 = -116						; size = 4
tv171 = -112						; size = 4
$T2 = -108						; size = 4
$T3 = -101						; size = 1
$T4 = -100						; size = 4
$T5 = -96						; size = 4
_nItemPostion$6 = -28					; size = 4
_pServerUserItem$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_InsertLocalUserInfo$ = 8				; size = 4
_UserInfo$ = 12						; size = 4
_pszPassword$ = 16					; size = 4
?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z PROC ; CServerUserManager::InsertLocalUserItem, COMDAT
; _this$ = ecx

; 397  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 68	 sub	 esp, 104		; 00000068H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 398  : 	//变量定义
; 399  : 	CLocalUserItem * pServerUserItem=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pServerUserItem$[ebp], 0

; 400  : 
; 401  : 	//获取指针
; 402  : 	if (m_UserItemStore.GetCount()>0)

  00036	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 34	 add	 ecx, 52			; 00000034H
  0003c	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  00041	85 c0		 test	 eax, eax
  00043	7e 3b		 jle	 SHORT $LN2@InsertLoca

; 403  : 	{
; 404  : 		INT_PTR nItemPostion=m_UserItemStore.GetCount()-1;

  00045	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 34	 add	 ecx, 52			; 00000034H
  0004b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  00050	83 e8 01	 sub	 eax, 1
  00053	89 45 e4	 mov	 DWORD PTR _nItemPostion$6[ebp], eax

; 405  : 		pServerUserItem=(CLocalUserItem *)m_UserItemStore[nItemPostion];

  00056	8b 45 e4	 mov	 eax, DWORD PTR _nItemPostion$6[ebp]
  00059	50		 push	 eax
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 34	 add	 ecx, 52			; 00000034H
  00060	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	89 4d e8	 mov	 DWORD PTR _pServerUserItem$[ebp], ecx

; 406  : 		m_UserItemStore.RemoveAt(nItemPostion);

  0006a	6a 01		 push	 1
  0006c	8b 45 e4	 mov	 eax, DWORD PTR _nItemPostion$6[ebp]
  0006f	50		 push	 eax
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 34	 add	 ecx, 52			; 00000034H
  00076	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAt

; 407  : 	}
; 408  : 	else

  0007b	e9 80 00 00 00	 jmp	 $LN9@InsertLoca
$LN2@InsertLoca:

; 409  : 	{
; 410  : 		try

  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 411  : 		{
; 412  : 			pServerUserItem=new CLocalUserItem;

  00087	68 1c 02 00 00	 push	 540			; 0000021cH
  0008c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00091	83 c4 04	 add	 esp, 4
  00094	89 45 90	 mov	 DWORD PTR tv171[ebp], eax
  00097	8b 45 90	 mov	 eax, DWORD PTR tv171[ebp]
  0009a	89 45 9c	 mov	 DWORD PTR $T4[ebp], eax
  0009d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000a1	83 7d 9c 00	 cmp	 DWORD PTR $T4[ebp], 0
  000a5	74 13		 je	 SHORT $LN6@InsertLoca
  000a7	8b 4d 9c	 mov	 ecx, DWORD PTR $T4[ebp]
  000aa	e8 00 00 00 00	 call	 ??0CLocalUserItem@@IAE@XZ ; CLocalUserItem::CLocalUserItem
  000af	89 45 8c	 mov	 DWORD PTR tv174[ebp], eax
  000b2	8b 4d 8c	 mov	 ecx, DWORD PTR tv174[ebp]
  000b5	89 4d 88	 mov	 DWORD PTR tv95[ebp], ecx
  000b8	eb 07		 jmp	 SHORT $LN7@InsertLoca
$LN6@InsertLoca:
  000ba	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN7@InsertLoca:
  000c1	8b 55 88	 mov	 edx, DWORD PTR tv95[ebp]
  000c4	89 55 a0	 mov	 DWORD PTR $T5[ebp], edx
  000c7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000cb	8b 45 a0	 mov	 eax, DWORD PTR $T5[ebp]
  000ce	89 45 e8	 mov	 DWORD PTR _pServerUserItem$[ebp], eax

; 413  : 		}

  000d1	eb 2d		 jmp	 SHORT $LN9@InsertLoca
__catch$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z$0:

; 414  : 		catch (...)
; 415  : 		{
; 416  : 			ASSERT(FALSE);

  000d3	33 c0		 xor	 eax, eax
  000d5	75 19		 jne	 SHORT $LN8@InsertLoca
  000d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z@4JA
  000dd	83 c1 13	 add	 ecx, 19			; 00000013H
  000e0	51		 push	 ecx
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000e6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000eb	85 c0		 test	 eax, eax
  000ed	74 01		 je	 SHORT $LN8@InsertLoca
  000ef	cc		 int	 3
$LN8@InsertLoca:

; 417  : 			return false;

  000f0	c6 45 9b 00	 mov	 BYTE PTR $T3[ebp], 0
  000f4	b8 00 00 00 00	 mov	 eax, $LN13@InsertLoca
  000f9	c3		 ret	 0

; 418  : 		}

  000fa	b8 00 00 00 00	 mov	 eax, $LN9@InsertLoca
  000ff	c3		 ret	 0
$LN9@InsertLoca:
  00100	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00107	eb 0f		 jmp	 SHORT $LN12@InsertLoca
$LN13@InsertLoca:
  00109	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 417  : 			return false;

  00110	8a 45 9b	 mov	 al, BYTE PTR $T3[ebp]
  00113	e9 82 00 00 00	 jmp	 $LN1@InsertLoca
$LN12@InsertLoca:

; 419  : 	}
; 420  : 
; 421  : 	//属性变量
; 422  : 	CopyMemory(&pServerUserItem->m_UserInfo,&UserInfo,sizeof(UserInfo));

  00118	68 e1 01 00 00	 push	 481			; 000001e1H
  0011d	8b 45 0c	 mov	 eax, DWORD PTR _UserInfo$[ebp]
  00120	50		 push	 eax
  00121	8b 4d e8	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00124	83 c1 08	 add	 ecx, 8
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 _memcpy
  0012d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 423  : 
; 424  : 	//辅助变量
; 425  : 	lstrcpyn(pServerUserItem->m_szLogonPass,pszPassword,CountArray(pServerUserItem->m_szLogonPass));

  00130	6a 21		 push	 33			; 00000021H
  00132	8b 45 10	 mov	 eax, DWORD PTR _pszPassword$[ebp]
  00135	50		 push	 eax
  00136	8b 4d e8	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00139	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  0013f	51		 push	 ecx
  00140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 426  : 
; 427  : 	//插入用户
; 428  : 	m_UserItemArray.Add(pServerUserItem);

  00146	8b 45 e8	 mov	 eax, DWORD PTR _pServerUserItem$[ebp]
  00149	89 45 94	 mov	 DWORD PTR $T2[ebp], eax
  0014c	8d 4d 94	 lea	 ecx, DWORD PTR $T2[ebp]
  0014f	51		 push	 ecx
  00150	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00153	83 c1 20	 add	 ecx, 32			; 00000020H
  00156	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABQAVCServerUserItem@@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Add

; 429  : 	m_UserIDMap[UserInfo.dwUserID]=pServerUserItem;

  0015b	8b 45 0c	 mov	 eax, DWORD PTR _UserInfo$[ebp]
  0015e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00160	51		 push	 ecx
  00161	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	83 c1 04	 add	 ecx, 4
  00167	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::operator[]
  0016c	8b 55 e8	 mov	 edx, DWORD PTR _pServerUserItem$[ebp]
  0016f	89 10		 mov	 DWORD PTR [eax], edx

; 430  : 
; 431  : 	//设置变量
; 432  : 	pServerUserItem->SetLogonTime(InsertLocalUserInfo.dwLogonTime);

  00171	8b 45 08	 mov	 eax, DWORD PTR _InsertLocalUserInfo$[ebp]
  00174	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00177	51		 push	 ecx
  00178	8b 55 e8	 mov	 edx, DWORD PTR _pServerUserItem$[ebp]
  0017b	8b 02		 mov	 eax, DWORD PTR [edx]
  0017d	8b 4d e8	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00180	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  00183	ff d2		 call	 edx

; 433  : 	pServerUserItem->SetSocketID(InsertLocalUserInfo.dwSocketID);

  00185	8b 45 08	 mov	 eax, DWORD PTR _InsertLocalUserInfo$[ebp]
  00188	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018a	51		 push	 ecx
  0018b	8b 55 e8	 mov	 edx, DWORD PTR _pServerUserItem$[ebp]
  0018e	8b 02		 mov	 eax, DWORD PTR [edx]
  00190	8b 4d e8	 mov	 ecx, DWORD PTR _pServerUserItem$[ebp]
  00193	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  00196	ff d2		 call	 edx

; 434  : 
; 435  : 	return true;

  00198	b0 01		 mov	 al, 1
$LN1@InsertLoca:

; 436  : }

  0019a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a4	59		 pop	 ecx
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z$2:
  00000	68 1c 02 00 00	 push	 540			; 0000021cH
  00005	8b 45 9c	 mov	 eax, DWORD PTR $T4[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertLocalUserItem@CServerUserManager@@UAE_NAAUtagInsertLocalUserInfo@@AAUtagFriendUserInfo@@PBD@Z ENDP ; CServerUserManager::InsertLocalUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?DeleteUserItem@CServerUserManager@@UAE_NK@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_pTempUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?DeleteUserItem@CServerUserManager@@UAE_NK@Z PROC	; CServerUserManager::DeleteUserItem, COMDAT
; _this$ = ecx

; 367  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 368  : 	//变量定义
; 369  : 	CServerUserItem * pTempUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pTempUserItem$[ebp], 0

; 370  : 
; 371  : 	//寻找对象
; 372  : 	for (INT_PTR i=0;i<m_UserItemArray.GetCount();i++)

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@DeleteUser
$LN2@DeleteUser:
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@DeleteUser:
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 20	 add	 ecx, 32			; 00000020H
  0002b	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  00030	39 45 f4	 cmp	 DWORD PTR _i$1[ebp], eax
  00033	7d 6d		 jge	 SHORT $LN3@DeleteUser

; 373  : 	{
; 374  : 		//获取用户
; 375  : 		pTempUserItem=m_UserItemArray[i];

  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	50		 push	 eax
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 20	 add	 ecx, 32			; 00000020H
  0003f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 4d f8	 mov	 DWORD PTR _pTempUserItem$[ebp], ecx

; 376  : 		if (pTempUserItem->GetUserID()!=dwUserID) continue;

  00049	8b 45 f8	 mov	 eax, DWORD PTR _pTempUserItem$[ebp]
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _pTempUserItem$[ebp]
  00051	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00054	ff d0		 call	 eax
  00056	3b 45 08	 cmp	 eax, DWORD PTR _dwUserID$[ebp]
  00059	74 02		 je	 SHORT $LN5@DeleteUser
  0005b	eb bf		 jmp	 SHORT $LN2@DeleteUser
$LN5@DeleteUser:

; 377  : 
; 378  : 		//重置对象
; 379  : 		pTempUserItem->ResetUserItem();

  0005d	8b 45 f8	 mov	 eax, DWORD PTR _pTempUserItem$[ebp]
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _pTempUserItem$[ebp]
  00065	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00068	ff d0		 call	 eax

; 380  : 
; 381  : 		//删除对象
; 382  : 		m_UserItemArray.RemoveAt(i);

  0006a	6a 01		 push	 1
  0006c	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0006f	50		 push	 eax
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 20	 add	 ecx, 32			; 00000020H
  00076	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAt

; 383  : 		m_UserIDMap.RemoveKey(dwUserID);

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0007e	50		 push	 eax
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	83 c1 04	 add	 ecx, 4
  00085	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveKey

; 384  : 		m_UserItemStore.Add(pTempUserItem);

  0008a	8d 45 f8	 lea	 eax, DWORD PTR _pTempUserItem$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	83 c1 34	 add	 ecx, 52			; 00000034H
  00094	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABQAVCServerUserItem@@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Add

; 385  : 
; 386  : 		return true;

  00099	b0 01		 mov	 al, 1
  0009b	eb 24		 jmp	 SHORT $LN1@DeleteUser

; 387  : 	}

  0009d	e9 7a ff ff ff	 jmp	 $LN2@DeleteUser
$LN3@DeleteUser:

; 388  : 
; 389  : 	//错误断言
; 390  : 	ASSERT(FALSE);

  000a2	33 c0		 xor	 eax, eax
  000a4	75 19		 jne	 SHORT $LN7@DeleteUser
  000a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteUserItem@CServerUserManager@@UAE_NK@Z@4JA
  000ac	83 c1 17	 add	 ecx, 23			; 00000017H
  000af	51		 push	 ecx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ba	85 c0		 test	 eax, eax
  000bc	74 01		 je	 SHORT $LN7@DeleteUser
  000be	cc		 int	 3
$LN7@DeleteUser:

; 391  : 
; 392  : 	return false;

  000bf	32 c0		 xor	 al, al
$LN1@DeleteUser:

; 393  : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
?DeleteUserItem@CServerUserManager@@UAE_NK@Z ENDP	; CServerUserManager::DeleteUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?DeleteUserItem@CServerUserManager@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeleteUserItem@CServerUserManager@@UAE_NXZ PROC	; CServerUserManager::DeleteUserItem, COMDAT
; _this$ = ecx

; 354  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 355  : 	//存储对象
; 356  : 	m_UserItemStore.Append(m_UserItemArray);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 20	 add	 eax, 32			; 00000020H
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 34	 add	 ecx, 52			; 00000034H
  00019	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABV1@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Append

; 357  : 
; 358  : 	//删除对象
; 359  : 	m_UserIDMap.RemoveAll();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 04	 add	 ecx, 4
  00024	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll

; 360  : 	m_UserItemArray.RemoveAll();

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 20	 add	 ecx, 32			; 00000020H
  0002f	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAll

; 361  : 
; 362  : 	return true;

  00034	b0 01		 mov	 al, 1

; 363  : }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?DeleteUserItem@CServerUserManager@@UAE_NXZ ENDP	; CServerUserManager::DeleteUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetUserItemCount@CServerUserManager@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserItemCount@CServerUserManager@@UAEKXZ PROC	; CServerUserManager::GetUserItemCount, COMDAT
; _this$ = ecx

; 241  : 	virtual DWORD GetUserItemCount() { return (DWORD)m_UserItemArray.GetCount(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 20	 add	 ecx, 32			; 00000020H
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetUserItemCount@CServerUserManager@@UAEKXZ ENDP	; CServerUserManager::GetUserItemCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?SearchUserItem@CServerUserManager@@UAEPAVCServerUserItem@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SearchUserItem@CServerUserManager@@UAEPAVCServerUserItem@@K@Z PROC ; CServerUserManager::SearchUserItem, COMDAT
; _this$ = ecx

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 349  : 	return m_UserIDMap[dwUserID];

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 04	 add	 ecx, 4
  00016	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::operator[]
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]

; 350  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?SearchUserItem@CServerUserManager@@UAEPAVCServerUserItem@@K@Z ENDP ; CServerUserManager::SearchUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?EnumUserItem@CServerUserManager@@UAEPAVCServerUserItem@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wEnumIndex$ = 8					; size = 2
?EnumUserItem@CServerUserManager@@UAEPAVCServerUserItem@@G@Z PROC ; CServerUserManager::EnumUserItem, COMDAT
; _this$ = ecx

; 341  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 342  : 	if (wEnumIndex>=m_UserItemArray.GetCount()) return NULL;

  0000c	0f b7 75 08	 movzx	 esi, WORD PTR _wEnumIndex$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 20	 add	 ecx, 32			; 00000020H
  00016	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  0001b	3b f0		 cmp	 esi, eax
  0001d	7c 04		 jl	 SHORT $LN2@EnumUserIt
  0001f	33 c0		 xor	 eax, eax
  00021	eb 12		 jmp	 SHORT $LN1@EnumUserIt
$LN2@EnumUserIt:

; 343  : 	return m_UserItemArray[wEnumIndex];

  00023	0f b7 45 08	 movzx	 eax, WORD PTR _wEnumIndex$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 20	 add	 ecx, 32			; 00000020H
  0002e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
  00033	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@EnumUserIt:

; 344  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?EnumUserItem@CServerUserManager@@UAEPAVCServerUserItem@@G@Z ENDP ; CServerUserManager::EnumUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1CServerUserManager@@UAE@XZ
_TEXT	SEGMENT
tv143 = -120						; size = 4
tv88 = -120						; size = 4
$T2 = -116						; size = 4
$T3 = -112						; size = 4
$T4 = -108						; size = 4
$T5 = -104						; size = 4
_pServerUserItem$6 = -36				; size = 4
_i$7 = -32						; size = 4
_pServerUserItem$8 = -28				; size = 4
_i$9 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CServerUserManager@@UAE@XZ PROC			; CServerUserManager::~CServerUserManager, COMDAT
; _this$ = ecx

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CServerUserManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 68	 sub	 esp, 104		; 00000068H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerUserManager@@6B@
  00038	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3

; 317  : 	//释放用户
; 318  : 	for (INT_PTR i=0;i<m_UserItemStore.GetCount();i++)

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  00046	eb 09		 jmp	 SHORT $LN4@CServerUse
$LN2@CServerUse:
  00048	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  0004b	83 c0 01	 add	 eax, 1
  0004e	89 45 e8	 mov	 DWORD PTR _i$9[ebp], eax
$LN4@CServerUse:
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 34	 add	 ecx, 52			; 00000034H
  00057	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  0005c	39 45 e8	 cmp	 DWORD PTR _i$9[ebp], eax
  0005f	0f 8d 85 00 00
	00		 jge	 $LN3@CServerUse

; 319  : 	{
; 320  : 		CServerUserItem * pServerUserItem = m_UserItemStore[i];

  00065	8b 45 e8	 mov	 eax, DWORD PTR _i$9[ebp]
  00068	50		 push	 eax
  00069	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	83 c1 34	 add	 ecx, 52			; 00000034H
  0006f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d e4	 mov	 DWORD PTR _pServerUserItem$8[ebp], ecx

; 321  : 		SafeDelete(pServerUserItem);

  00079	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4
  0007d	8b 45 e4	 mov	 eax, DWORD PTR _pServerUserItem$8[ebp]
  00080	89 45 94	 mov	 DWORD PTR $T4[ebp], eax
  00083	8b 4d 94	 mov	 ecx, DWORD PTR $T4[ebp]
  00086	89 4d 98	 mov	 DWORD PTR $T5[ebp], ecx
  00089	83 7d 98 00	 cmp	 DWORD PTR $T5[ebp], 0
  0008d	74 13		 je	 SHORT $LN11@CServerUse
  0008f	6a 01		 push	 1
  00091	8b 55 98	 mov	 edx, DWORD PTR $T5[ebp]
  00094	8b 02		 mov	 eax, DWORD PTR [edx]
  00096	8b 4d 98	 mov	 ecx, DWORD PTR $T5[ebp]
  00099	8b 10		 mov	 edx, DWORD PTR [eax]
  0009b	ff d2		 call	 edx
  0009d	89 45 88	 mov	 DWORD PTR tv88[ebp], eax
  000a0	eb 07		 jmp	 SHORT $LN12@CServerUse
$LN11@CServerUse:
  000a2	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@CServerUse:
  000a9	eb 23		 jmp	 SHORT $LN17@CServerUse
__catch$??1CServerUserManager@@UAE@XZ$0:
  000ab	33 c0		 xor	 eax, eax
  000ad	75 19		 jne	 SHORT $LN13@CServerUse
  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerUserManager@@UAE@XZ@4JA
  000b5	83 c1 05	 add	 ecx, 5
  000b8	51		 push	 ecx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000be	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c3	85 c0		 test	 eax, eax
  000c5	74 01		 je	 SHORT $LN13@CServerUse
  000c7	cc		 int	 3
$LN13@CServerUse:
  000c8	b8 00 00 00 00	 mov	 eax, $LN26@CServerUse
  000cd	c3		 ret	 0
$LN17@CServerUse:
  000ce	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3
  000d5	eb 07		 jmp	 SHORT __tryend$??1CServerUserManager@@UAE@XZ$1
$LN26@CServerUse:
  000d7	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3
__tryend$??1CServerUserManager@@UAE@XZ$1:
  000de	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pServerUserItem$8[ebp], 0

; 322  : 	}

  000e5	e9 5e ff ff ff	 jmp	 $LN2@CServerUse
$LN3@CServerUse:

; 323  : 
; 324  : 	//释放用户
; 325  : 	for (INT_PTR i=0;i<m_UserItemArray.GetCount();i++)

  000ea	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$7[ebp], 0
  000f1	eb 09		 jmp	 SHORT $LN7@CServerUse
$LN5@CServerUse:
  000f3	8b 45 e0	 mov	 eax, DWORD PTR _i$7[ebp]
  000f6	83 c0 01	 add	 eax, 1
  000f9	89 45 e0	 mov	 DWORD PTR _i$7[ebp], eax
$LN7@CServerUse:
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	83 c1 20	 add	 ecx, 32			; 00000020H
  00102	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
  00107	39 45 e0	 cmp	 DWORD PTR _i$7[ebp], eax
  0010a	0f 8d 85 00 00
	00		 jge	 $LN6@CServerUse

; 326  : 	{
; 327  : 		CServerUserItem * pServerUserItem = m_UserItemArray[i];

  00110	8b 45 e0	 mov	 eax, DWORD PTR _i$7[ebp]
  00113	50		 push	 eax
  00114	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	83 c1 20	 add	 ecx, 32			; 00000020H
  0011a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
  0011f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00121	89 4d dc	 mov	 DWORD PTR _pServerUserItem$6[ebp], ecx

; 328  : 		SafeDelete(pServerUserItem);

  00124	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+12], 6
  00128	8b 45 dc	 mov	 eax, DWORD PTR _pServerUserItem$6[ebp]
  0012b	89 45 8c	 mov	 DWORD PTR $T2[ebp], eax
  0012e	8b 4d 8c	 mov	 ecx, DWORD PTR $T2[ebp]
  00131	89 4d 90	 mov	 DWORD PTR $T3[ebp], ecx
  00134	83 7d 90 00	 cmp	 DWORD PTR $T3[ebp], 0
  00138	74 13		 je	 SHORT $LN14@CServerUse
  0013a	6a 01		 push	 1
  0013c	8b 55 90	 mov	 edx, DWORD PTR $T3[ebp]
  0013f	8b 02		 mov	 eax, DWORD PTR [edx]
  00141	8b 4d 90	 mov	 ecx, DWORD PTR $T3[ebp]
  00144	8b 10		 mov	 edx, DWORD PTR [eax]
  00146	ff d2		 call	 edx
  00148	89 45 88	 mov	 DWORD PTR tv143[ebp], eax
  0014b	eb 07		 jmp	 SHORT $LN15@CServerUse
$LN14@CServerUse:
  0014d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN15@CServerUse:
  00154	eb 23		 jmp	 SHORT $LN19@CServerUse
__catch$??1CServerUserManager@@UAE@XZ$2:
  00156	33 c0		 xor	 eax, eax
  00158	75 19		 jne	 SHORT $LN16@CServerUse
  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerUserManager@@UAE@XZ@4JA
  00160	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00163	51		 push	 ecx
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00169	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0016e	85 c0		 test	 eax, eax
  00170	74 01		 je	 SHORT $LN16@CServerUse
  00172	cc		 int	 3
$LN16@CServerUse:
  00173	b8 00 00 00 00	 mov	 eax, $LN28@CServerUse
  00178	c3		 ret	 0
$LN19@CServerUse:
  00179	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3
  00180	eb 07		 jmp	 SHORT __tryend$??1CServerUserManager@@UAE@XZ$3
$LN28@CServerUse:
  00182	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3
__tryend$??1CServerUserManager@@UAE@XZ$3:
  00189	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pServerUserItem$6[ebp], 0

; 329  : 	}

  00190	e9 5e ff ff ff	 jmp	 $LN5@CServerUse
$LN6@CServerUse:

; 330  : 
; 331  : 	//删除数据
; 332  : 	m_UserIDMap.RemoveAll();

  00195	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	83 c1 04	 add	 ecx, 4
  0019b	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll

; 333  : 	m_UserItemStore.RemoveAll();

  001a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a3	83 c1 34	 add	 ecx, 52			; 00000034H
  001a6	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAll

; 334  : 	m_UserItemArray.RemoveAll();

  001ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001ae	83 c1 20	 add	 ecx, 32			; 00000020H
  001b1	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAll

; 335  : 
; 336  : 	return;
; 337  : }

  001b6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  001ba	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	83 c1 48	 add	 ecx, 72			; 00000048H
  001c0	e8 00 00 00 00	 call	 ??1Cltladistance@@UAE@XZ ; Cltladistance::~Cltladistance
  001c5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  001c9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001cc	83 c1 34	 add	 ecx, 52			; 00000034H
  001cf	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
  001d4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  001d8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001db	83 c1 20	 add	 ecx, 32			; 00000020H
  001de	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
  001e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	83 c1 04	 add	 ecx, 4
  001f0	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
  001f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ff	59		 pop	 ecx
  00200	5f		 pop	 edi
  00201	5e		 pop	 esi
  00202	5b		 pop	 ebx
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CServerUserManager@@UAE@XZ$4:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
__unwindfunclet$??1CServerUserManager@@UAE@XZ$5:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
__unwindfunclet$??1CServerUserManager@@UAE@XZ$6:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 34	 add	 ecx, 52			; 00000034H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
__unwindfunclet$??1CServerUserManager@@UAE@XZ$7:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 48	 add	 ecx, 72			; 00000048H
  00027	e9 00 00 00 00	 jmp	 ??1Cltladistance@@UAE@XZ ; Cltladistance::~Cltladistance
__ehhandler$??1CServerUserManager@@UAE@XZ:
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  00036	33 c8		 xor	 ecx, eax
  00038	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CServerUserManager@@UAE@XZ
  00042	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CServerUserManager@@UAE@XZ ENDP			; CServerUserManager::~CServerUserManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0CServerUserManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CServerUserManager@@QAE@XZ PROC			; CServerUserManager::CServerUserManager, COMDAT
; _this$ = ecx

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CServerUserManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerUserManager@@6B@
  00034	6a 0a		 push	 10			; 0000000aH
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 20	 add	 ecx, 32			; 00000020H
  0004e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::CWHArray<CServerUserItem *,CServerUserItem * const &>
  00053	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	83 c1 34	 add	 ecx, 52			; 00000034H
  0005d	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::CWHArray<CServerUserItem *,CServerUserItem * const &>
  00062	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00066	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	83 c1 48	 add	 ecx, 72			; 00000048H
  0006c	e8 00 00 00 00	 call	 ??0Cltladistance@@QAE@XZ ; Cltladistance::Cltladistance
  00071	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 308  : 	//设置质数
; 309  : 	m_UserIDMap.InitHashTable(PRIME_PLATFORM_USER);

  00075	6a 01		 push	 1
  00077	68 a3 86 01 00	 push	 100003			; 000186a3H
  0007c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	83 c1 04	 add	 ecx, 4
  00082	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::InitHashTable

; 310  : 
; 311  : 	return;
; 312  : }

  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009b	59		 pop	 ecx
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CServerUserManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
__unwindfunclet$??0CServerUserManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
__unwindfunclet$??0CServerUserManager@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 34	 add	 ecx, 52			; 00000034H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
__unwindfunclet$??0CServerUserManager@@QAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 48	 add	 ecx, 72			; 00000048H
  00027	e9 00 00 00 00	 jmp	 ??1Cltladistance@@UAE@XZ ; Cltladistance::~Cltladistance
__ehhandler$??0CServerUserManager@@QAE@XZ:
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00036	33 c8		 xor	 ecx, eax
  00038	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CServerUserManager@@QAE@XZ
  00042	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CServerUserManager@@QAE@XZ ENDP			; CServerUserManager::CServerUserManager
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAEPAXI@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAEPAXI@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXXZ ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHH@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHH@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHABQAVCServerUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHABQAVCServerUserItem@@@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHABQAVCServerUserItem@@@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEAAPAVCServerUserItem@@H@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABV1@@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABV1@@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABQAVCServerUserItem@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABQAVCServerUserItem@@@Z PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEXHABQAVCServerUserItem@@@Z ; CWHArray<CServerUserItem *,CServerUserItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAEHABQAVCServerUserItem@@@Z ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ PROC ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QBEHXZ ENDP ; CWHArray<CServerUserItem *,CServerUserItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ PROC	; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCServerUserItem@@ABQAV1@@@UAE@XZ ENDP	; CWHArray<CServerUserItem *,CServerUserItem * const &>::~CWHArray<CServerUserItem *,CServerUserItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAE@XZ PROC	; CWHArray<CServerUserItem *,CServerUserItem * const &>::CWHArray<CServerUserItem *,CServerUserItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCServerUserItem@@ABQAV1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCServerUserItem@@ABQAV1@@@QAE@XZ ENDP	; CWHArray<CServerUserItem *,CServerUserItem * const &>::CWHArray<CServerUserItem *,CServerUserItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEPAXI@Z PROC	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEPAXI@Z ENDP	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXXZ PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCServerUserItem@@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCServerUserItem@@@@YGXAAVCDumpContext@@PBQAVCServerUserItem@@H@Z ; DumpElements<CServerUserItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KKPAVCServerUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCServerUserItem@@@@YGXAAVCArchive@@PAPAVCServerUserItem@@H@Z ; SerializeElements<CServerUserItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCServerUserItem@@@@YGXAAVCArchive@@PAPAVCServerUserItem@@H@Z ; SerializeElements<CServerUserItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXKPAVCServerUserItem@@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KKPAVCServerUserItem@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ PROC	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KKPAVCServerUserItem@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::~CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCServerUserItem@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCServerUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCServerUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KKPAVCServerUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEHK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEHK@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 83 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00038	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00041	33 d2		 xor	 edx, edx
  00043	f7 71 08	 div	 DWORD PTR [ecx+8]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0004f	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005a	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00065	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00069	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00071	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00074	75 2f		 jne	 SHORT $LN6@RemoveKey
  00076	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00083	85 c0		 test	 eax, eax
  00085	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00087	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00090	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::FreeAssoc

; 1630 : 			return TRUE;

  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000ae	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b0	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?RemoveKey@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEHK@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXKPAVCServerUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXKPAVCServerUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	89 08		 mov	 DWORD PTR [eax], ecx
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXKPAVCServerUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z PROC ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAVCServerUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KKPAVCServerUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KKPAVCServerUserItem@@PAV1@@@QAEAAPAVCServerUserItem@@K@Z ENDP ; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCServerUserItem@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KKPAVCServerUserItem@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>::CMap<unsigned long,unsigned long,CServerUserItem *,CServerUserItem *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCNearUserManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCNearUserManager@@UAEPAXI@Z PROC			; CNearUserManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CNearUserManager@@UAE@XZ ; CNearUserManager::~CNearUserManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 18		 push	 24			; 00000018H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCNearUserManager@@UAEPAXI@Z ENDP			; CNearUserManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetUserItemCount@CNearUserManager@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserItemCount@CNearUserManager@@UAEKXZ PROC		; CNearUserManager::GetUserItemCount, COMDAT
; _this$ = ecx

; 211  : 	virtual DWORD GetUserItemCount() { return (DWORD)m_UserItemArray.GetCount(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::GetCount
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetUserItemCount@CNearUserManager@@UAEKXZ ENDP		; CNearUserManager::GetUserItemCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z
_TEXT	SEGMENT
tv139 = -116						; size = 4
$T2 = -109						; size = 1
$T3 = -108						; size = 4
_pNextNearUserInfo$4 = -40				; size = 4
_i$5 = -36						; size = 2
_bInsert$ = -29						; size = 1
_dwCount$ = -28						; size = 4
_pNearUserItem$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_NearUserItem$ = 8					; size = 4
?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z PROC ; CNearUserManager::InsertNearUserItem, COMDAT
; _this$ = ecx

; 679  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 64	 sub	 esp, 100		; 00000064H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 680  : 	//变量定义
; 681  : 	tagNearUserInfo * pNearUserItem=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pNearUserItem$[ebp], 0

; 682  : 
; 683  : 	try

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 684  : 	{
; 685  : 		pNearUserItem=new tagNearUserInfo;

  0003d	68 8e 00 00 00	 push	 142			; 0000008eH
  00042	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00047	83 c4 04	 add	 esp, 4
  0004a	89 45 8c	 mov	 DWORD PTR tv139[ebp], eax
  0004d	8b 45 8c	 mov	 eax, DWORD PTR tv139[ebp]
  00050	89 45 94	 mov	 DWORD PTR $T3[ebp], eax
  00053	8b 4d 94	 mov	 ecx, DWORD PTR $T3[ebp]
  00056	89 4d e8	 mov	 DWORD PTR _pNearUserItem$[ebp], ecx

; 686  : 	}

  00059	eb 2d		 jmp	 SHORT $LN10@InsertNear
__catch$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z$0:

; 687  : 	catch (...)
; 688  : 	{
; 689  : 		ASSERT(FALSE);

  0005b	33 c0		 xor	 eax, eax
  0005d	75 19		 jne	 SHORT $LN9@InsertNear
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z@4JA
  00065	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00068	51		 push	 ecx
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0006e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00073	85 c0		 test	 eax, eax
  00075	74 01		 je	 SHORT $LN9@InsertNear
  00077	cc		 int	 3
$LN9@InsertNear:

; 690  : 		return false;

  00078	c6 45 93 00	 mov	 BYTE PTR $T2[ebp], 0
  0007c	b8 00 00 00 00	 mov	 eax, $LN13@InsertNear
  00081	c3		 ret	 0

; 691  : 	}

  00082	b8 00 00 00 00	 mov	 eax, $LN10@InsertNear
  00087	c3		 ret	 0
$LN10@InsertNear:
  00088	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0008f	eb 0f		 jmp	 SHORT $LN12@InsertNear
$LN13@InsertNear:
  00091	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 690  : 		return false;

  00098	8a 45 93	 mov	 al, BYTE PTR $T2[ebp]
  0009b	e9 a0 00 00 00	 jmp	 $LN1@InsertNear
$LN12@InsertNear:

; 692  : 
; 693  : 	//属性变量
; 694  : 	CopyMemory(pNearUserItem,&NearUserItem,sizeof(NearUserItem));

  000a0	68 8e 00 00 00	 push	 142			; 0000008eH
  000a5	8b 45 08	 mov	 eax, DWORD PTR _NearUserItem$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d e8	 mov	 ecx, DWORD PTR _pNearUserItem$[ebp]
  000ac	51		 push	 ecx
  000ad	e8 00 00 00 00	 call	 _memcpy
  000b2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 695  : 
; 696  : 	//插入用户
; 697  : 	DWORD dwCount =GetUserItemCount();

  000b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	8b 10		 mov	 edx, DWORD PTR [eax]
  000ba	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000c0	ff d0		 call	 eax
  000c2	89 45 e4	 mov	 DWORD PTR _dwCount$[ebp], eax

; 698  : 	bool bInsert = false;

  000c5	c6 45 e3 00	 mov	 BYTE PTR _bInsert$[ebp], 0

; 699  : 	for (WORD i = 0;i<dwCount;i++)

  000c9	33 c0		 xor	 eax, eax
  000cb	66 89 45 dc	 mov	 WORD PTR _i$5[ebp], ax
  000cf	eb 0c		 jmp	 SHORT $LN4@InsertNear
$LN2@InsertNear:
  000d1	66 8b 45 dc	 mov	 ax, WORD PTR _i$5[ebp]
  000d5	66 83 c0 01	 add	 ax, 1
  000d9	66 89 45 dc	 mov	 WORD PTR _i$5[ebp], ax
$LN4@InsertNear:
  000dd	0f b7 45 dc	 movzx	 eax, WORD PTR _i$5[ebp]
  000e1	3b 45 e4	 cmp	 eax, DWORD PTR _dwCount$[ebp]
  000e4	73 41		 jae	 SHORT $LN3@InsertNear

; 700  : 	{
; 701  : 		tagNearUserInfo * pNextNearUserInfo =	EnumUserItem(i);

  000e6	0f b7 45 dc	 movzx	 eax, WORD PTR _i$5[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000f6	ff d0		 call	 eax
  000f8	89 45 d8	 mov	 DWORD PTR _pNextNearUserInfo$4[ebp], eax

; 702  : 		if (pNextNearUserInfo->dwDistance>pNearUserItem->dwDistance)

  000fb	8b 45 d8	 mov	 eax, DWORD PTR _pNextNearUserInfo$4[ebp]
  000fe	8b 4d e8	 mov	 ecx, DWORD PTR _pNearUserItem$[ebp]
  00101	8b 50 65	 mov	 edx, DWORD PTR [eax+101]
  00104	3b 51 65	 cmp	 edx, DWORD PTR [ecx+101]
  00107	76 1c		 jbe	 SHORT $LN6@InsertNear

; 703  : 		{
; 704  : 			m_UserItemArray.InsertAt(i,pNearUserItem);

  00109	6a 01		 push	 1
  0010b	8d 45 e8	 lea	 eax, DWORD PTR _pNearUserItem$[ebp]
  0010e	50		 push	 eax
  0010f	0f b7 4d dc	 movzx	 ecx, WORD PTR _i$5[ebp]
  00113	51		 push	 ecx
  00114	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	83 c1 04	 add	 ecx, 4
  0011a	e8 00 00 00 00	 call	 ?InsertAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::InsertAt

; 705  : 			bInsert =true;

  0011f	c6 45 e3 01	 mov	 BYTE PTR _bInsert$[ebp], 1

; 706  : 			break;

  00123	eb 02		 jmp	 SHORT $LN3@InsertNear
$LN6@InsertNear:

; 707  : 		}
; 708  : 	}

  00125	eb aa		 jmp	 SHORT $LN2@InsertNear
$LN3@InsertNear:

; 709  : 	if (!bInsert)

  00127	0f b6 45 e3	 movzx	 eax, BYTE PTR _bInsert$[ebp]
  0012b	85 c0		 test	 eax, eax
  0012d	75 0f		 jne	 SHORT $LN7@InsertNear

; 710  : 	{
; 711  : 		m_UserItemArray.Add(pNearUserItem);

  0012f	8d 45 e8	 lea	 eax, DWORD PTR _pNearUserItem$[ebp]
  00132	50		 push	 eax
  00133	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	83 c1 04	 add	 ecx, 4
  00139	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEHABQAUtagNearUserInfo@@@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::Add
$LN7@InsertNear:

; 712  : 	}
; 713  : 	return true;

  0013e	b0 01		 mov	 al, 1
$LN1@InsertNear:

; 714  : }

  00140	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00143	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0014a	59		 pop	 ecx
  0014b	5f		 pop	 edi
  0014c	5e		 pop	 esi
  0014d	5b		 pop	 ebx
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertNearUserItem@CNearUserManager@@UAE_NAAUtagNearUserInfo@@@Z ENDP ; CNearUserManager::InsertNearUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?EnumUserItem@CNearUserManager@@UAEPAUtagNearUserInfo@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwEnumIndex$ = 8					; size = 4
?EnumUserItem@CNearUserManager@@UAEPAUtagNearUserInfo@@K@Z PROC ; CNearUserManager::EnumUserItem, COMDAT
; _this$ = ecx

; 673  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 674  : 	if (dwEnumIndex>=(DWORD)m_UserItemArray.GetCount()) return NULL;

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::GetCount
  00017	39 45 08	 cmp	 DWORD PTR _dwEnumIndex$[ebp], eax
  0001a	72 04		 jb	 SHORT $LN2@EnumUserIt
  0001c	33 c0		 xor	 eax, eax
  0001e	eb 11		 jmp	 SHORT $LN1@EnumUserIt
$LN2@EnumUserIt:

; 675  : 	return m_UserItemArray[dwEnumIndex];

  00020	8b 45 08	 mov	 eax, DWORD PTR _dwEnumIndex$[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 04	 add	 ecx, 4
  0002a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::operator[]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@EnumUserIt:

; 676  : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?EnumUserItem@CNearUserManager@@UAEPAUtagNearUserInfo@@K@Z ENDP ; CNearUserManager::EnumUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1CNearUserManager@@UAE@XZ
_TEXT	SEGMENT
$T2 = -96						; size = 4
_pServerUserItem$3 = -28				; size = 4
_i$4 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CNearUserManager@@UAE@XZ PROC			; CNearUserManager::~CNearUserManager, COMDAT
; _this$ = ecx

; 660  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNearUserManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 50	 sub	 esp, 80			; 00000050H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNearUserManager@@6B@
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 661  : 	//释放用户
; 662  : 	for (INT_PTR i=0;i<m_UserItemArray.GetCount();i++)

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00046	eb 09		 jmp	 SHORT $LN4@CNearUserM
$LN2@CNearUserM:
  00048	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  0004b	83 c0 01	 add	 eax, 1
  0004e	89 45 e8	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@CNearUserM:
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 04	 add	 ecx, 4
  00057	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::GetCount
  0005c	39 45 e8	 cmp	 DWORD PTR _i$4[ebp], eax
  0005f	7d 70		 jge	 SHORT $LN3@CNearUserM

; 663  : 	{
; 664  : 		tagNearUserInfo * pServerUserItem = m_UserItemArray[i];

  00061	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  00064	50		 push	 eax
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	83 c1 04	 add	 ecx, 4
  0006b	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::operator[]
  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	89 4d e4	 mov	 DWORD PTR _pServerUserItem$3[ebp], ecx

; 665  : 		SafeDelete(pServerUserItem);

  00075	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00079	8b 45 e4	 mov	 eax, DWORD PTR _pServerUserItem$3[ebp]
  0007c	89 45 a0	 mov	 DWORD PTR $T2[ebp], eax
  0007f	68 8e 00 00 00	 push	 142			; 0000008eH
  00084	8b 4d a0	 mov	 ecx, DWORD PTR $T2[ebp]
  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008d	83 c4 08	 add	 esp, 8
  00090	eb 23		 jmp	 SHORT $LN8@CNearUserM
__catch$??1CNearUserManager@@UAE@XZ$0:
  00092	33 c0		 xor	 eax, eax
  00094	75 19		 jne	 SHORT $LN7@CNearUserM
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CNearUserManager@@UAE@XZ@4JA
  0009c	83 c1 05	 add	 ecx, 5
  0009f	51		 push	 ecx
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000aa	85 c0		 test	 eax, eax
  000ac	74 01		 je	 SHORT $LN7@CNearUserM
  000ae	cc		 int	 3
$LN7@CNearUserM:
  000af	b8 00 00 00 00	 mov	 eax, $LN12@CNearUserM
  000b4	c3		 ret	 0
$LN8@CNearUserM:
  000b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000bc	eb 07		 jmp	 SHORT __tryend$??1CNearUserManager@@UAE@XZ$1
$LN12@CNearUserM:
  000be	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
__tryend$??1CNearUserManager@@UAE@XZ$1:
  000c5	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pServerUserItem$3[ebp], 0

; 666  : 	}

  000cc	e9 77 ff ff ff	 jmp	 $LN2@CNearUserM
$LN3@CNearUserM:

; 667  : 
; 668  : 	//删除数据
; 669  : 	m_UserItemArray.RemoveAll();

  000d1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	83 c1 04	 add	 ecx, 4
  000d7	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXXZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::RemoveAll

; 670  : }

  000dc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	83 c1 04	 add	 ecx, 4
  000e9	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::~CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CNearUserManager@@UAE@XZ$2:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::~CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
__ehhandler$??1CNearUserManager@@UAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNearUserManager@@UAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNearUserManager@@UAE@XZ ENDP			; CNearUserManager::~CNearUserManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0CNearUserManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CNearUserManager@@QAE@XZ PROC			; CNearUserManager::CNearUserManager, COMDAT
; _this$ = ecx

; 655  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNearUserManager@@6B@
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 04	 add	 ecx, 4
  0001b	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAE@XZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>

; 656  : 
; 657  : }

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??0CNearUserManager@@QAE@XZ ENDP			; CNearUserManager::CNearUserManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::~CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?InsertAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@H@Z
_TEXT	SEGMENT
tv170 = -92						; size = 4
tv153 = -92						; size = 4
$T1 = -88						; size = 4
$T2 = -84						; size = 4
_i$3 = -16						; size = 4
_i$4 = -12						; size = 4
_nOldCount$5 = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
_nCount$ = 16						; size = 4
?InsertAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@H@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::InsertAt, COMDAT
; _this$ = ecx

; 332  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 333  : 	//效验参数
; 334  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN15@InsertAt
  00012	68 4e 01 00 00	 push	 334			; 0000014eH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN15@InsertAt
  00025	cc		 int	 3
$LN15@InsertAt:

; 335  : 	ASSERT(nCount>0);

  00026	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7f 14		 jg	 SHORT $LN16@InsertAt
  0002c	68 4f 01 00 00	 push	 335			; 0000014fH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN16@InsertAt
  0003f	cc		 int	 3
$LN16@InsertAt:

; 336  : 	if ((nIndex<0)||(nCount<=0)) AfxThrowInvalidArgException();

  00040	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00044	7c 06		 jl	 SHORT $LN11@InsertAt
  00046	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0004a	7f 05		 jg	 SHORT $LN10@InsertAt
$LN11@InsertAt:
  0004c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN10@InsertAt:

; 337  : 
; 338  : 	//申请数组
; 339  : 	if (nIndex<m_nElementCount)

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00057	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0005a	0f 8d f5 00 00
	00		 jge	 $LN12@InsertAt

; 340  : 	{
; 341  : 		INT_PTR nOldCount=m_nElementCount;

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00066	89 4d f8	 mov	 DWORD PTR _nOldCount$5[ebp], ecx

; 342  : 		SetSize(m_nElementCount+nCount);

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006f	03 4d 10	 add	 ecx, DWORD PTR _nCount$[ebp]
  00072	51		 push	 ecx
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetSize

; 343  : 		for (INT_PTR i=0;i<nCount;i++) (m_pData+nOldCount+i)->~TYPE();

  0007b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00082	eb 09		 jmp	 SHORT $LN4@InsertAt
$LN2@InsertAt:
  00084	8b 45 f4	 mov	 eax, DWORD PTR _i$4[ebp]
  00087	83 c0 01	 add	 eax, 1
  0008a	89 45 f4	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@InsertAt:
  0008d	8b 45 f4	 mov	 eax, DWORD PTR _i$4[ebp]
  00090	3b 45 10	 cmp	 eax, DWORD PTR _nCount$[ebp]
  00093	7d 02		 jge	 SHORT $LN3@InsertAt
  00095	eb ed		 jmp	 SHORT $LN2@InsertAt
$LN3@InsertAt:

; 344  : 		memmove(m_pData+nIndex+nCount,m_pData+nIndex,(nOldCount-nIndex)*sizeof(TYPE));

  00097	8b 45 f8	 mov	 eax, DWORD PTR _nOldCount$5[ebp]
  0009a	2b 45 08	 sub	 eax, DWORD PTR _nIndex$[ebp]
  0009d	c1 e0 02	 shl	 eax, 2
  000a0	50		 push	 eax
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a7	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000aa	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000ad	51		 push	 ecx
  000ae	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  000b7	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000ba	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000bd	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c0	51		 push	 ecx
  000c1	e8 00 00 00 00	 call	 _memmove
  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 345  : 		memset(m_pData+nIndex,0,nCount*sizeof(TYPE));

  000c9	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000cc	c1 e0 02	 shl	 eax, 2
  000cf	50		 push	 eax
  000d0	6a 00		 push	 0
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d8	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000db	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000de	51		 push	 ecx
  000df	e8 00 00 00 00	 call	 _memset
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : 		for (INT_PTR i=0;i<nCount;i++) new (m_pData+nIndex+i) TYPE();

  000e7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000ee	eb 09		 jmp	 SHORT $LN7@InsertAt
$LN5@InsertAt:
  000f0	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  000f3	83 c0 01	 add	 eax, 1
  000f6	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
$LN7@InsertAt:
  000f9	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  000fc	3b 45 10	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000ff	7d 52		 jge	 SHORT $LN6@InsertAt
  00101	c7 45 ac 04 00
	00 00		 mov	 DWORD PTR $T2[ebp], 4
  00108	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010e	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00111	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00114	8b 4d f0	 mov	 ecx, DWORD PTR _i$3[ebp]
  00117	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0011a	52		 push	 edx
  0011b	8b 45 ac	 mov	 eax, DWORD PTR $T2[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00124	83 c4 08	 add	 esp, 8
  00127	89 45 a8	 mov	 DWORD PTR $T1[ebp], eax
  0012a	83 7d a8 00	 cmp	 DWORD PTR $T1[ebp], 0
  0012e	74 1a		 je	 SHORT $LN17@InsertAt
  00130	8b 4d ac	 mov	 ecx, DWORD PTR $T2[ebp]
  00133	51		 push	 ecx
  00134	6a 00		 push	 0
  00136	8b 55 a8	 mov	 edx, DWORD PTR $T1[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 _memset
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00142	8b 45 a8	 mov	 eax, DWORD PTR $T1[ebp]
  00145	89 45 a4	 mov	 DWORD PTR tv153[ebp], eax
  00148	eb 07		 jmp	 SHORT $LN18@InsertAt
$LN17@InsertAt:
  0014a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv153[ebp], 0
$LN18@InsertAt:
  00151	eb 9d		 jmp	 SHORT $LN5@InsertAt
$LN6@InsertAt:

; 347  : 	}
; 348  : 	else SetSize(nIndex+nCount);

  00153	eb 0f		 jmp	 SHORT $LN13@InsertAt
$LN12@InsertAt:
  00155	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00158	03 45 10	 add	 eax, DWORD PTR _nCount$[ebp]
  0015b	50		 push	 eax
  0015c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015f	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetSize
$LN13@InsertAt:

; 349  : 
; 350  : 	//拷贝数组
; 351  : 	ASSERT((nIndex+nCount)<=m_nElementCount);

  00164	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00167	03 45 10	 add	 eax, DWORD PTR _nCount$[ebp]
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00170	7e 14		 jle	 SHORT $LN8@InsertAt
  00172	68 5f 01 00 00	 push	 351			; 0000015fH
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0017c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00181	85 c0		 test	 eax, eax
  00183	74 01		 je	 SHORT $LN8@InsertAt
  00185	cc		 int	 3
$LN8@InsertAt:

; 352  : 	while (nCount--) m_pData[nIndex++]=newElement;

  00186	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  00189	89 45 a4	 mov	 DWORD PTR tv170[ebp], eax
  0018c	8b 4d 10	 mov	 ecx, DWORD PTR _nCount$[ebp]
  0018f	83 e9 01	 sub	 ecx, 1
  00192	89 4d 10	 mov	 DWORD PTR _nCount$[ebp], ecx
  00195	83 7d a4 00	 cmp	 DWORD PTR tv170[ebp], 0
  00199	74 1c		 je	 SHORT $LN14@InsertAt
  0019b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0019e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001a1	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  001a4	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  001a7	8b 00		 mov	 eax, DWORD PTR [eax]
  001a9	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
  001ac	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  001af	83 c1 01	 add	 ecx, 1
  001b2	89 4d 08	 mov	 DWORD PTR _nIndex$[ebp], ecx
  001b5	eb cf		 jmp	 SHORT $LN8@InsertAt
$LN14@InsertAt:

; 353  : 
; 354  : 	return;
; 355  : }

  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c2 0c 00	 ret	 12			; 0000000cH
?InsertAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@H@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::InsertAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEAAPAUtagNearUserInfo@@H@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEHABQAUtagNearUserInfo@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEHABQAUtagNearUserInfo@@@Z PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEXHABQAUtagNearUserInfo@@@Z ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAEHABQAUtagNearUserInfo@@@Z ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ PROC	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::~CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@UAE@XZ ENDP	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::~CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAE@XZ PROC	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagNearUserInfo@@ABQAU1@@@QAE@XZ ENDP	; CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>::CWHArray<tagNearUserInfo *,tagNearUserInfo * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCLocalUserItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCLocalUserItem@@MAEPAXI@Z PROC			; CLocalUserItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CLocalUserItem@@MAE@XZ ; CLocalUserItem::~CLocalUserItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 1c 02 00 00	 push	 540			; 0000021cH
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCLocalUserItem@@MAEPAXI@Z ENDP			; CLocalUserItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ResetUserItem@CLocalUserItem@@EAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetUserItem@CLocalUserItem@@EAEXXZ PROC		; CLocalUserItem::ResetUserItem, COMDAT
; _this$ = ecx

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 	//设置变量
; 125  : 	m_dwSocketID=0L;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 80 ec 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+492], 0

; 126  : 
; 127  : 	//辅助变量
; 128  : 	ZeroMemory(m_szLogonPass,sizeof(m_szLogonPass));

  00019	6a 21		 push	 33			; 00000021H
  0001b	6a 00		 push	 0
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _memset
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 129  : 
; 130  : 	//属性变量
; 131  : 	ZeroMemory(&m_UserInfo,sizeof(m_UserInfo));

  0002e	68 e1 01 00 00	 push	 481			; 000001e1H
  00033	6a 00		 push	 0
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 c0 08	 add	 eax, 8
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 _memset
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 132  : 
; 133  : 	return;
; 134  : }

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?ResetUserItem@CLocalUserItem@@EAEXXZ ENDP		; CLocalUserItem::ResetUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?SetLogonTime@CLocalUserItem@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwLogonTime$ = 8					; size = 4
?SetLogonTime@CLocalUserItem@@UAEXK@Z PROC		; CLocalUserItem::SetLogonTime, COMDAT
; _this$ = ecx

; 176  : 	virtual VOID SetLogonTime(DWORD dwLogonTime) { m_dwLogonTime=dwLogonTime; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _dwLogonTime$[ebp]
  00012	89 88 18 02 00
	00		 mov	 DWORD PTR [eax+536], ecx
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetLogonTime@CLocalUserItem@@UAEXK@Z ENDP		; CLocalUserItem::SetLogonTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetLogonTime@CLocalUserItem@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLogonTime@CLocalUserItem@@UAEKXZ PROC		; CLocalUserItem::GetLogonTime, COMDAT
; _this$ = ecx

; 174  : 	virtual DWORD GetLogonTime() { return m_dwLogonTime; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 18 02 00
	00		 mov	 eax, DWORD PTR [eax+536]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetLogonTime@CLocalUserItem@@UAEKXZ ENDP		; CLocalUserItem::GetLogonTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?SetSocketID@CLocalUserItem@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwSocketID$ = 8					; size = 4
?SetSocketID@CLocalUserItem@@UAEXK@Z PROC		; CLocalUserItem::SetSocketID, COMDAT
; _this$ = ecx

; 169  : 	virtual VOID SetSocketID(DWORD dwSocketID) { m_dwSocketID=dwSocketID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00012	89 88 ec 01 00
	00		 mov	 DWORD PTR [eax+492], ecx
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetSocketID@CLocalUserItem@@UAEXK@Z ENDP		; CLocalUserItem::SetSocketID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ModifyLogonPassword@CLocalUserItem@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszPassword$ = 8					; size = 4
?ModifyLogonPassword@CLocalUserItem@@QAEXPBD@Z PROC	; CLocalUserItem::ModifyLogonPassword, COMDAT
; _this$ = ecx

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 139  : 	//拷贝字符
; 140  : 	lstrcpyn(m_szLogonPass,pszPassword,CountArray(m_szLogonPass));

  0000c	6a 21		 push	 33			; 00000021H
  0000e	8b 45 08	 mov	 eax, DWORD PTR _pszPassword$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  0001b	51		 push	 ecx
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 141  : 
; 142  : 	return;
; 143  : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?ModifyLogonPassword@CLocalUserItem@@QAEXPBD@Z ENDP	; CLocalUserItem::ModifyLogonPassword
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z
_TEXT	SEGMENT
_nSourceLen$ = -12					; size = 4
_nTargetLen$ = -8					; size = 4
_this$ = -4						; size = 4
_pszPassword$ = 8					; size = 4
?ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z PROC	; CLocalUserItem::ContrastLogonPass, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	//效验参数
; 107  : 	ASSERT(pszPassword!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pszPassword$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@ContrastLo
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN6@ContrastLo
  00029	cc		 int	 3
$LN6@ContrastLo:

; 108  : 	if (pszPassword==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pszPassword$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@ContrastLo
  00030	32 c0		 xor	 al, al
  00032	eb 59		 jmp	 SHORT $LN1@ContrastLo
$LN2@ContrastLo:

; 109  : 
; 110  : 	//长度对比
; 111  : 	INT nTargetLen=lstrlen(pszPassword);

  00034	8b 45 08	 mov	 eax, DWORD PTR _pszPassword$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0003e	89 45 f8	 mov	 DWORD PTR _nTargetLen$[ebp], eax

; 112  : 	INT nSourceLen=lstrlen(m_szLogonPass);

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  00049	50		 push	 eax
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00050	89 45 f4	 mov	 DWORD PTR _nSourceLen$[ebp], eax

; 113  : 
; 114  : 	//密码对比
; 115  : 	if (nTargetLen!=nSourceLen) return false;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _nTargetLen$[ebp]
  00056	3b 45 f4	 cmp	 eax, DWORD PTR _nSourceLen$[ebp]
  00059	74 04		 je	 SHORT $LN3@ContrastLo
  0005b	32 c0		 xor	 al, al
  0005d	eb 2e		 jmp	 SHORT $LN1@ContrastLo
$LN3@ContrastLo:

; 116  : 	if (CompareString(LOCALE_SYSTEM_DEFAULT,NORM_IGNORECASE,pszPassword,nTargetLen,m_szLogonPass,nSourceLen)!=CSTR_EQUAL) return false;

  0005f	8b 45 f4	 mov	 eax, DWORD PTR _nSourceLen$[ebp]
  00062	50		 push	 eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  0006c	51		 push	 ecx
  0006d	8b 55 f8	 mov	 edx, DWORD PTR _nTargetLen$[ebp]
  00070	52		 push	 edx
  00071	8b 45 08	 mov	 eax, DWORD PTR _pszPassword$[ebp]
  00074	50		 push	 eax
  00075	6a 01		 push	 1
  00077	68 00 08 00 00	 push	 2048			; 00000800H
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CompareStringA@24
  00082	83 f8 02	 cmp	 eax, 2
  00085	74 04		 je	 SHORT $LN4@ContrastLo
  00087	32 c0		 xor	 al, al
  00089	eb 02		 jmp	 SHORT $LN1@ContrastLo
$LN4@ContrastLo:

; 117  : 
; 118  : 	return true;

  0008b	b0 01		 mov	 al, 1
$LN1@ContrastLo:

; 119  : }

  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 04 00	 ret	 4
?ContrastLogonPass@CLocalUserItem@@UAE_NPBD@Z ENDP	; CLocalUserItem::ContrastLogonPass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?ContrastNickName@CLocalUserItem@@UAE_NPBD@Z
_TEXT	SEGMENT
_nSourceLen$ = -12					; size = 4
_nContrastLen$ = -8					; size = 4
_this$ = -4						; size = 4
_pszNickName$ = 8					; size = 4
?ContrastNickName@CLocalUserItem@@UAE_NPBD@Z PROC	; CLocalUserItem::ContrastNickName, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 88   : 	//效验参数
; 89   : 	ASSERT(pszNickName!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pszNickName$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@ContrastNi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ContrastNickName@CLocalUserItem@@UAE_NPBD@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@EOCLIAPL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN6@ContrastNi
  00029	cc		 int	 3
$LN6@ContrastNi:

; 90   : 	if (pszNickName==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pszNickName$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@ContrastNi
  00030	32 c0		 xor	 al, al
  00032	eb 54		 jmp	 SHORT $LN1@ContrastNi
$LN2@ContrastNi:

; 91   : 
; 92   : 	//长度对比
; 93   : 	INT nContrastLen=lstrlen(pszNickName);

  00034	8b 45 08	 mov	 eax, DWORD PTR _pszNickName$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0003e	89 45 f8	 mov	 DWORD PTR _nContrastLen$[ebp], eax

; 94   : 	INT nSourceLen=lstrlen(m_UserInfo.szNickName);

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 10	 add	 eax, 16			; 00000010H
  00047	50		 push	 eax
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0004e	89 45 f4	 mov	 DWORD PTR _nSourceLen$[ebp], eax

; 95   : 
; 96   : 	//字符对比
; 97   : 	if (nContrastLen!=nSourceLen) return false;

  00051	8b 45 f8	 mov	 eax, DWORD PTR _nContrastLen$[ebp]
  00054	3b 45 f4	 cmp	 eax, DWORD PTR _nSourceLen$[ebp]
  00057	74 04		 je	 SHORT $LN3@ContrastNi
  00059	32 c0		 xor	 al, al
  0005b	eb 2b		 jmp	 SHORT $LN1@ContrastNi
$LN3@ContrastNi:

; 98   : 	if (CompareString(LOCALE_SYSTEM_DEFAULT,NORM_IGNORECASE,pszNickName,nContrastLen,m_UserInfo.szNickName,nSourceLen)!=CSTR_EQUAL) return false;

  0005d	8b 45 f4	 mov	 eax, DWORD PTR _nSourceLen$[ebp]
  00060	50		 push	 eax
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 10	 add	 ecx, 16			; 00000010H
  00067	51		 push	 ecx
  00068	8b 55 f8	 mov	 edx, DWORD PTR _nContrastLen$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 08	 mov	 eax, DWORD PTR _pszNickName$[ebp]
  0006f	50		 push	 eax
  00070	6a 01		 push	 1
  00072	68 00 08 00 00	 push	 2048			; 00000800H
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CompareStringA@24
  0007d	83 f8 02	 cmp	 eax, 2
  00080	74 04		 je	 SHORT $LN4@ContrastNi
  00082	32 c0		 xor	 al, al
  00084	eb 02		 jmp	 SHORT $LN1@ContrastNi
$LN4@ContrastNi:

; 99   : 
; 100  : 	return true;

  00086	b0 01		 mov	 al, 1
$LN1@ContrastNi:

; 101  : }

  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?ContrastNickName@CLocalUserItem@@UAE_NPBD@Z ENDP	; CLocalUserItem::ContrastNickName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetClientAddr@CLocalUserItem@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClientAddr@CLocalUserItem@@UAEKXZ PROC		; CLocalUserItem::GetClientAddr, COMDAT
; _this$ = ecx

; 155  : 	virtual DWORD GetClientAddr() { return m_UserInfo.dwClientAddr; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 b3 01 00
	00		 mov	 eax, DWORD PTR [eax+435]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetClientAddr@CLocalUserItem@@UAEKXZ ENDP		; CLocalUserItem::GetClientAddr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetGameStatus@CLocalUserItem@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameStatus@CLocalUserItem@@UAEEXZ PROC		; CLocalUserItem::GetGameStatus, COMDAT
; _this$ = ecx

; 153  : 	virtual BYTE GetGameStatus() { return m_UserInfo.cbGameStatus; }	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 75 01 00
	00		 mov	 al, BYTE PTR [eax+373]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameStatus@CLocalUserItem@@UAEEXZ ENDP		; CLocalUserItem::GetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetMainStatus@CLocalUserItem@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMainStatus@CLocalUserItem@@UAEEXZ PROC		; CLocalUserItem::GetMainStatus, COMDAT
; _this$ = ecx

; 151  : 	virtual BYTE GetMainStatus() { return m_UserInfo.cbMainStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 80 74 01 00
	00		 mov	 al, BYTE PTR [eax+372]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetMainStatus@CLocalUserItem@@UAEEXZ ENDP		; CLocalUserItem::GetMainStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetTableID@CLocalUserItem@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTableID@CLocalUserItem@@UAEGXZ PROC			; CLocalUserItem::GetTableID, COMDAT
; _this$ = ecx

; 149  : 	virtual WORD GetTableID() { return m_wTableID; }	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 80 f2 01
	00 00		 mov	 ax, WORD PTR [eax+498]
  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?GetTableID@CLocalUserItem@@UAEGXZ ENDP			; CLocalUserItem::GetTableID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetServerID@CLocalUserItem@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetServerID@CLocalUserItem@@UAEGXZ PROC		; CLocalUserItem::GetServerID, COMDAT
; _this$ = ecx

; 147  : 	virtual WORD GetServerID() { return m_wServerID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 80 f0 01
	00 00		 mov	 ax, WORD PTR [eax+496]
  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?GetServerID@CLocalUserItem@@UAEGXZ ENDP		; CLocalUserItem::GetServerID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetSocketID@CLocalUserItem@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSocketID@CLocalUserItem@@UAEKXZ PROC		; CLocalUserItem::GetSocketID, COMDAT
; _this$ = ecx

; 145  : 	virtual DWORD GetSocketID() { return m_dwSocketID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 ec 01 00
	00		 mov	 eax, DWORD PTR [eax+492]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSocketID@CLocalUserItem@@UAEKXZ ENDP		; CLocalUserItem::GetSocketID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?SetGameStatus@CLocalUserItem@@UAEXEGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbGameStatus$ = 8					; size = 1
_wServerID$ = 12					; size = 2
_wTableID$ = 16						; size = 2
?SetGameStatus@CLocalUserItem@@UAEXEGG@Z PROC		; CLocalUserItem::SetGameStatus, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 79   : 	//设置变量
; 80   : 	m_UserInfo.cbGameStatus = cbGameStatus;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbGameStatus$[ebp]
  00012	88 88 75 01 00
	00		 mov	 BYTE PTR [eax+373], cl

; 81   : 	m_wServerID = wServerID;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	66 8b 4d 0c	 mov	 cx, WORD PTR _wServerID$[ebp]
  0001f	66 89 88 f0 01
	00 00		 mov	 WORD PTR [eax+496], cx

; 82   : 	m_wTableID = wTableID;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	66 8b 4d 10	 mov	 cx, WORD PTR _wTableID$[ebp]
  0002d	66 89 88 f2 01
	00 00		 mov	 WORD PTR [eax+498], cx

; 83   : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
?SetGameStatus@CLocalUserItem@@UAEXEGG@Z ENDP		; CLocalUserItem::SetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?SetMainStatus@CLocalUserItem@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbMainStatus$ = 8					; size = 1
?SetMainStatus@CLocalUserItem@@UAEXE@Z PROC		; CLocalUserItem::SetMainStatus, COMDAT
; _this$ = ecx

; 141  : 	virtual VOID SetMainStatus(BYTE cbMainStatus) { m_UserInfo.cbMainStatus=cbMainStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbMainStatus$[ebp]
  00012	88 88 74 01 00
	00		 mov	 BYTE PTR [eax+372], cl
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetMainStatus@CLocalUserItem@@UAEXE@Z ENDP		; CLocalUserItem::SetMainStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetNickName@CLocalUserItem@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNickName@CLocalUserItem@@UAEPBDXZ PROC		; CLocalUserItem::GetNickName, COMDAT
; _this$ = ecx

; 136  : 	virtual LPCTSTR GetNickName() { return m_UserInfo.szNickName; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 10	 add	 eax, 16			; 00000010H
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetNickName@CLocalUserItem@@UAEPBDXZ ENDP		; CLocalUserItem::GetNickName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetGameID@CLocalUserItem@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameID@CLocalUserItem@@UAEKXZ PROC			; CLocalUserItem::GetGameID, COMDAT
; _this$ = ecx

; 134  : 	virtual DWORD GetGameID() { return m_UserInfo.dwGameID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGameID@CLocalUserItem@@UAEKXZ ENDP			; CLocalUserItem::GetGameID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetUserID@CLocalUserItem@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserID@CLocalUserItem@@UAEKXZ PROC			; CLocalUserItem::GetUserID, COMDAT
; _this$ = ecx

; 132  : 	virtual DWORD GetUserID() { return m_UserInfo.dwUserID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserID@CLocalUserItem@@UAEKXZ ENDP			; CLocalUserItem::GetUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetGender@CLocalUserItem@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGender@CLocalUserItem@@UAEEXZ PROC			; CLocalUserItem::GetGender, COMDAT
; _this$ = ecx

; 130  : 	virtual BYTE GetGender() { return m_UserInfo.cbGender; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 59	 mov	 al, BYTE PTR [eax+89]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGender@CLocalUserItem@@UAEEXZ ENDP			; CLocalUserItem::GetGender
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.h
;	COMDAT ?GetUserInfo@CLocalUserItem@@UAEPAUtagFriendUserInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserInfo@CLocalUserItem@@UAEPAUtagFriendUserInfo@@XZ PROC ; CLocalUserItem::GetUserInfo, COMDAT
; _this$ = ecx

; 125  : 	virtual tagFriendUserInfo * GetUserInfo() { return &m_UserInfo; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserInfo@CLocalUserItem@@UAEPAUtagFriendUserInfo@@XZ ENDP ; CLocalUserItem::GetUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1CLocalUserItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLocalUserItem@@MAE@XZ PROC				; CLocalUserItem::~CLocalUserItem, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CLocalUserItem@@6B@

; 74   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??1CServerUserItem@@MAE@XZ ; CServerUserItem::~CServerUserItem
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CLocalUserItem@@MAE@XZ ENDP				; CLocalUserItem::~CLocalUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0CLocalUserItem@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLocalUserItem@@IAE@XZ PROC				; CLocalUserItem::CLocalUserItem, COMDAT
; _this$ = ecx

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 54   : CLocalUserItem::CLocalUserItem():CServerUserItem(enLocalKind)

  0000c	6a 01		 push	 1
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CServerUserItem@@IAE@W4enUserItemKind@@@Z ; CServerUserItem::CServerUserItem

; 55   : {

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CLocalUserItem@@6B@

; 56   : 	//设置变量
; 57   : 	m_dwSocketID=0L;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 80 ec 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+492], 0

; 58   : 	m_dwLogonTime=0;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 80 18 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+536], 0

; 59   : 	m_wServerID = FRIEND_INVALID_SERVERID;

  00039	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	66 89 81 f0 01
	00 00		 mov	 WORD PTR [ecx+496], ax

; 60   : 	m_wTableID = FRIEND_INVALID_TABLEID;

  00048	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	66 89 81 f2 01
	00 00		 mov	 WORD PTR [ecx+498], ax

; 61   : 
; 62   : 	//辅助变量
; 63   : 	ZeroMemory(m_szLogonPass,sizeof(m_szLogonPass));

  00057	6a 21		 push	 33			; 00000021H
  00059	6a 00		 push	 0
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _memset
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH

; 64   : 
; 65   : 	//属性变量
; 66   : 	ZeroMemory(&m_UserInfo,sizeof(m_UserInfo));

  0006c	68 e1 01 00 00	 push	 481			; 000001e1H
  00071	6a 00		 push	 0
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	83 c0 08	 add	 eax, 8
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 _memset
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 67   : 
; 68   : 	return;
; 69   : }

  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
??0CLocalUserItem@@IAE@XZ ENDP				; CLocalUserItem::CLocalUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCServerUserItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCServerUserItem@@MAEPAXI@Z PROC			; CServerUserItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CServerUserItem@@MAE@XZ ; CServerUserItem::~CServerUserItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 08		 push	 8
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCServerUserItem@@MAEPAXI@Z ENDP			; CServerUserItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1CServerUserItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CServerUserItem@@MAE@XZ PROC				; CServerUserItem::~CServerUserItem, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerUserItem@@6B@

; 49   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CServerUserItem@@MAE@XZ ENDP				; CServerUserItem::~CServerUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0CServerUserItem@@IAE@W4enUserItemKind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_enUserKind$ = 8					; size = 4
??0CServerUserItem@@IAE@W4enUserItemKind@@@Z PROC	; CServerUserItem::CServerUserItem, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerUserItem@@6B@

; 42   : CServerUserItem::CServerUserItem(enUserItemKind enUserKind):m_enUserKind(enUserKind)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _enUserKind$[ebp]
  0001b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 44   : }

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
??0CServerUserItem@@IAE@W4enUserItemKind@@@Z ENDP	; CServerUserItem::CServerUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCltladistance@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCltladistance@@UAEPAXI@Z PROC			; Cltladistance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1Cltladistance@@UAE@XZ ; Cltladistance::~Cltladistance
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 04		 push	 4
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCltladistance@@UAEPAXI@Z ENDP			; Cltladistance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?GetDistance@Cltladistance@@QAENNNNN@Z
_TEXT	SEGMENT
tv212 = -180						; size = 8
tv207 = -172						; size = 8
tv201 = -164						; size = 8
tv235 = -156						; size = 8
tv191 = -148						; size = 8
tv233 = -140						; size = 8
tv185 = -132						; size = 8
tv169 = -132						; size = 8
tv231 = -124						; size = 8
tv229 = -124						; size = 8
tv179 = -116						; size = 8
tv163 = -116						; size = 8
tv223 = -112						; size = 4
_dst$ = -44						; size = 8
_b$ = -36						; size = 8
_a$ = -28						; size = 8
_radLat2$ = -20						; size = 8
_radLat1$ = -12						; size = 8
_this$ = -4						; size = 4
_lat1$ = 8						; size = 8
_lng1$ = 16						; size = 8
_lat2$ = 24						; size = 8
_lng2$ = 32						; size = 8
?GetDistance@Cltladistance@@QAENNNNN@Z PROC		; Cltladistance::GetDistance, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	double radLat1 = GetRadian(lat1);

  0000f	83 ec 08	 sub	 esp, 8
  00012	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _lat1$[ebp]
  00017	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetRadian@Cltladistance@@QAENN@Z ; Cltladistance::GetRadian
  00024	dd 5d f4	 fstp	 QWORD PTR _radLat1$[ebp]

; 29   : 	double radLat2 = GetRadian(lat2);

  00027	83 ec 08	 sub	 esp, 8
  0002a	f2 0f 10 45 18	 movsd	 xmm0, QWORD PTR _lat2$[ebp]
  0002f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?GetRadian@Cltladistance@@QAENN@Z ; Cltladistance::GetRadian
  0003c	dd 5d ec	 fstp	 QWORD PTR _radLat2$[ebp]

; 30   : 	double a = radLat1 - radLat2;

  0003f	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _radLat1$[ebp]
  00044	f2 0f 5c 45 ec	 subsd	 xmm0, QWORD PTR _radLat2$[ebp]
  00049	f2 0f 11 45 e4	 movsd	 QWORD PTR _a$[ebp], xmm0

; 31   : 	double b = GetRadian(lng1) - GetRadian(lng2);

  0004e	83 ec 08	 sub	 esp, 8
  00051	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _lng1$[ebp]
  00056	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?GetRadian@Cltladistance@@QAENN@Z ; Cltladistance::GetRadian
  00063	dd 5d 8c	 fstp	 QWORD PTR tv163[ebp]
  00066	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv163[ebp]
  0006b	83 ec 08	 sub	 esp, 8
  0006e	f2 0f 10 4d 20	 movsd	 xmm1, QWORD PTR _lng2$[ebp]
  00073	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	f2 0f 11 45 84	 movsd	 QWORD PTR tv229[ebp], xmm0
  00080	e8 00 00 00 00	 call	 ?GetRadian@Cltladistance@@QAENN@Z ; Cltladistance::GetRadian
  00085	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv169[ebp]
  0008b	f2 0f 10 45 84	 movsd	 xmm0, QWORD PTR tv229[ebp]
  00090	f2 0f 5c 85 7c
	ff ff ff	 subsd	 xmm0, QWORD PTR tv169[ebp]
  00098	f2 0f 11 45 dc	 movsd	 QWORD PTR _b$[ebp], xmm0

; 32   : 
; 33   : 	double dst = 2 * asin((sqrt(pow(sin(a / 2), 2) + cos(radLat1) * cos(radLat2) * pow(sin(b / 2), 2) )));

  0009d	6a 02		 push	 2
  0009f	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR _a$[ebp]
  000a4	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  000ac	83 ec 08	 sub	 esp, 8
  000af	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b4	e8 00 00 00 00	 call	 _sin
  000b9	dd 1c 24	 fstp	 QWORD PTR [esp]
  000bc	e8 00 00 00 00	 call	 ?pow@@YANNH@Z		; pow
  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c4	dd 5d 8c	 fstp	 QWORD PTR tv179[ebp]
  000c7	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv179[ebp]
  000cc	83 ec 08	 sub	 esp, 8
  000cf	f2 0f 10 4d f4	 movsd	 xmm1, QWORD PTR _radLat1$[ebp]
  000d4	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  000d9	f2 0f 11 45 84	 movsd	 QWORD PTR tv231[ebp], xmm0
  000de	e8 00 00 00 00	 call	 _cos
  000e3	83 c4 08	 add	 esp, 8
  000e6	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv185[ebp]
  000ec	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv185[ebp]
  000f4	83 ec 08	 sub	 esp, 8
  000f7	f2 0f 10 4d ec	 movsd	 xmm1, QWORD PTR _radLat2$[ebp]
  000fc	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  00101	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv233[ebp], xmm0
  00109	e8 00 00 00 00	 call	 _cos
  0010e	83 c4 08	 add	 esp, 8
  00111	dd 9d 6c ff ff
	ff		 fstp	 QWORD PTR tv191[ebp]
  00117	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv233[ebp]
  0011f	f2 0f 59 85 6c
	ff ff ff	 mulsd	 xmm0, QWORD PTR tv191[ebp]
  00127	6a 02		 push	 2
  00129	f2 0f 10 4d dc	 movsd	 xmm1, QWORD PTR _b$[ebp]
  0012e	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  00136	83 ec 08	 sub	 esp, 8
  00139	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  0013e	f2 0f 11 85 64
	ff ff ff	 movsd	 QWORD PTR tv235[ebp], xmm0
  00146	e8 00 00 00 00	 call	 _sin
  0014b	dd 1c 24	 fstp	 QWORD PTR [esp]
  0014e	e8 00 00 00 00	 call	 ?pow@@YANNH@Z		; pow
  00153	83 c4 0c	 add	 esp, 12			; 0000000cH
  00156	dd 9d 5c ff ff
	ff		 fstp	 QWORD PTR tv201[ebp]
  0015c	f2 0f 10 85 64
	ff ff ff	 movsd	 xmm0, QWORD PTR tv235[ebp]
  00164	f2 0f 59 85 5c
	ff ff ff	 mulsd	 xmm0, QWORD PTR tv201[ebp]
  0016c	f2 0f 10 4d 84	 movsd	 xmm1, QWORD PTR tv231[ebp]
  00171	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00175	83 ec 08	 sub	 esp, 8
  00178	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  0017d	e8 00 00 00 00	 call	 _sqrt
  00182	83 c4 08	 add	 esp, 8
  00185	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv207[ebp]
  0018b	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv207[ebp]
  00193	83 ec 08	 sub	 esp, 8
  00196	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0019b	e8 00 00 00 00	 call	 _asin
  001a0	83 c4 08	 add	 esp, 8
  001a3	dd 9d 4c ff ff
	ff		 fstp	 QWORD PTR tv212[ebp]
  001a9	f2 0f 10 85 4c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv212[ebp]
  001b1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  001b9	f2 0f 11 45 d4	 movsd	 QWORD PTR _dst$[ebp], xmm0

; 34   : 
; 35   : 	dst = dst * EARTH_RADIUS;

  001be	f2 0f 10 45 d4	 movsd	 xmm0, QWORD PTR _dst$[ebp]
  001c3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40b8ea23126e978d
  001cb	f2 0f 11 45 d4	 movsd	 QWORD PTR _dst$[ebp], xmm0

; 36   : 	dst= GetRound(dst * 10000000) / 10000;

  001d0	f2 0f 10 45 d4	 movsd	 xmm0, QWORD PTR _dst$[ebp]
  001d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@416312d000000000
  001dd	83 ec 08	 sub	 esp, 8
  001e0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001e5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001e8	e8 00 00 00 00	 call	 ?GetRound@Cltladistance@@QAEKN@Z ; Cltladistance::GetRound
  001ed	33 d2		 xor	 edx, edx
  001ef	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  001f4	f7 f1		 div	 ecx
  001f6	89 45 90	 mov	 DWORD PTR tv223[ebp], eax
  001f9	f2 0f 2a 45 90	 cvtsi2sd xmm0, DWORD PTR tv223[ebp]
  001fe	8b 55 90	 mov	 edx, DWORD PTR tv223[ebp]
  00201	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00204	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0020d	f2 0f 11 45 d4	 movsd	 QWORD PTR _dst$[ebp], xmm0

; 37   : 	return dst;

  00212	dd 45 d4	 fld	 QWORD PTR _dst$[ebp]

; 38   : }

  00215	5f		 pop	 edi
  00216	5e		 pop	 esi
  00217	5b		 pop	 ebx
  00218	8b e5		 mov	 esp, ebp
  0021a	5d		 pop	 ebp
  0021b	c2 20 00	 ret	 32			; 00000020H
?GetDistance@Cltladistance@@QAENNNNN@Z ENDP		; Cltladistance::GetDistance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?GetRound@Cltladistance@@QAEKN@Z
_TEXT	SEGMENT
tv71 = -76						; size = 8
_this$ = -4						; size = 4
_number$ = 8						; size = 8
?GetRound@Cltladistance@@QAEKN@Z PROC			; Cltladistance::GetRound, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	return (DWORD)((number > 0.0) ? floor(number + 0.5) : ceil(number - 0.5));

  0000c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _number$[ebp]
  00011	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00019	76 23		 jbe	 SHORT $LN3@GetRound
  0001b	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _number$[ebp]
  00020	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00028	83 ec 08	 sub	 esp, 8
  0002b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__floor
  00036	83 c4 08	 add	 esp, 8
  00039	dd 5d b4	 fstp	 QWORD PTR tv71[ebp]
  0003c	eb 21		 jmp	 SHORT $LN4@GetRound
$LN3@GetRound:
  0003e	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _number$[ebp]
  00043	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0004b	83 ec 08	 sub	 esp, 8
  0004e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  00059	83 c4 08	 add	 esp, 8
  0005c	dd 5d b4	 fstp	 QWORD PTR tv71[ebp]
$LN4@GetRound:
  0005f	f2 0f 10 45 b4	 movsd	 xmm0, QWORD PTR tv71[ebp]
  00064	e8 00 00 00 00	 call	 __dtoui3

; 24   : }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 08 00	 ret	 8
?GetRound@Cltladistance@@QAEKN@Z ENDP			; Cltladistance::GetRound
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?GetRadian@Cltladistance@@QAENN@Z
_TEXT	SEGMENT
tv68 = -76						; size = 8
_this$ = -4						; size = 4
_d$ = 8							; size = 8
?GetRadian@Cltladistance@@QAENN@Z PROC			; Cltladistance::GetRadian, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 18   : 	return d * PI / 180.0;

  0000c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _d$[ebp]
  00011	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400921fb4d12d84a
  00019	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4066800000000000
  00021	f2 0f 11 45 b4	 movsd	 QWORD PTR tv68[ebp], xmm0
  00026	dd 45 b4	 fld	 QWORD PTR tv68[ebp]

; 19   : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?GetRadian@Cltladistance@@QAENN@Z ENDP			; Cltladistance::GetRadian
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??1Cltladistance@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Cltladistance@@UAE@XZ PROC				; Cltladistance::~Cltladistance, COMDAT
; _this$ = ecx

; 12   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Cltladistance@@6B@

; 13   : 
; 14   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1Cltladistance@@UAE@XZ ENDP				; Cltladistance::~Cltladistance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ??0Cltladistance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Cltladistance@@QAE@XZ PROC				; Cltladistance::Cltladistance, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Cltladistance@@6B@

; 8    : 
; 9    : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0Cltladistance@@QAE@XZ ENDP				; Cltladistance::Cltladistance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?pow@@YANNH@Z
_TEXT	SEGMENT
tv74 = -72						; size = 8
__Xx$ = 8						; size = 8
__Yx$ = 16						; size = 4
?pow@@YANNH@Z PROC					; pow, COMDAT

; 18   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 19   : 	if (_Yx == 2)

  00009	83 7d 10 02	 cmp	 DWORD PTR __Yx$[ebp], 2
  0000d	75 14		 jne	 SHORT $LN2@pow

; 20   : 		return (_Xx * _Xx);

  0000f	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR __Xx$[ebp]
  00014	f2 0f 59 45 08	 mulsd	 xmm0, QWORD PTR __Xx$[ebp]
  00019	f2 0f 11 45 b8	 movsd	 QWORD PTR tv74[ebp], xmm0
  0001e	dd 45 b8	 fld	 QWORD PTR tv74[ebp]
  00021	eb 22		 jmp	 SHORT $LN1@pow
$LN2@pow:

; 21   : 
; 22   : 	return (_CSTD pow(_Xx, static_cast<double>(_Yx)));

  00023	f2 0f 2a 45 10	 cvtsi2sd xmm0, DWORD PTR __Yx$[ebp]
  00028	83 ec 08	 sub	 esp, 8
  0002b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00030	83 ec 08	 sub	 esp, 8
  00033	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR __Xx$[ebp]
  00038	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003d	e8 00 00 00 00	 call	 _pow
  00042	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@pow:

; 23   : 	}

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?pow@@YANNH@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@K@@YGIK@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 4
??$HashKey@K@@YGIK@Z PROC				; HashKey<unsigned long>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00018	83 c4 08	 add	 esp, 8
  0001b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001e	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00021	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00024	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00027	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002a	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002d	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00034	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003b	2b c1		 sub	 eax, ecx
  0003d	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00040	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00045	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004a	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??$HashKey@K@@YGIK@Z ENDP				; HashKey<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\聊天服务器\serverusermanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
