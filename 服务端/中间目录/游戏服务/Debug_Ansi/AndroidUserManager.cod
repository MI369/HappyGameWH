; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\游戏服务\AndroidUserManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
?IID_IAndroidUserManager@@3U_GUID@@B DD 0ba43054dH	; IID_IAndroidUserManager
	DW	0924bH
	DW	04013H
	DB	0b2H
	DB	06dH
	DB	0a6H
	DB	091H
	DB	0b6H
	DB	020H
	DB	023H
	DB	0b2H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_IsEqualGUID
PUBLIC	_==
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	_wmemcpy
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??$HashKey@K@@YGIK@Z				; HashKey<unsigned long>
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??0IUnknownEx@@QAE@XZ				; IUnknownEx::IUnknownEx
PUBLIC	??0IUnknownEx@@QAE@ABU0@@Z			; IUnknownEx::IUnknownEx
PUBLIC	??4IUnknownEx@@QAEAAU0@ABU0@@Z			; IUnknownEx::operator=
PUBLIC	?GetProductVer@@YAEK@Z				; GetProductVer
PUBLIC	?GetMainVer@@YAEK@Z				; GetMainVer
PUBLIC	?GetSubVer@@YAEK@Z				; GetSubVer
PUBLIC	?GetBuildVer@@YAEK@Z				; GetBuildVer
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	?IsAllowAndroidAttend@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidAttend
PUBLIC	?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z	; CServerRule::IsAllowAndroidSimulate
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0IAndroidUserItem@@QAE@ABU0@@Z		; IAndroidUserItem::IAndroidUserItem
PUBLIC	??4IAndroidUserItem@@QAEAAU0@ABU0@@Z		; IAndroidUserItem::operator=
PUBLIC	??0IAndroidUserManager@@QAE@XZ			; IAndroidUserManager::IAndroidUserManager
PUBLIC	??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ	; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
PUBLIC	??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
PUBLIC	??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`scalar deleting destructor'
PUBLIC	?Release@CAndroidUserItem@@UAEXXZ		; CAndroidUserItem::Release
PUBLIC	?GetGameStatus@CAndroidUserItem@@UAEEXZ		; CAndroidUserItem::GetGameStatus
PUBLIC	?SetGameStatus@CAndroidUserItem@@UAEXE@Z	; CAndroidUserItem::SetGameStatus
PUBLIC	?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ ; CAndroidUserItem::GetAndroidService
PUBLIC	?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ ; CAndroidUserItem::GetAndroidParameter
PUBLIC	??0CAndroidUserItem@@QAE@ABV0@@Z		; CAndroidUserItem::CAndroidUserItem
PUBLIC	??4CAndroidUserItem@@QAEAAV0@ABV0@@Z		; CAndroidUserItem::operator=
PUBLIC	??_GCAndroidUserItem@@UAEPAXI@Z			; CAndroidUserItem::`scalar deleting destructor'
PUBLIC	??_ECAndroidUserItem@@UAEPAXI@Z			; CAndroidUserItem::`vector deleting destructor'
PUBLIC	??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
PUBLIC	?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetCount
PUBLIC	?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Lookup
PUBLIC	??A?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEAAPAVCAndroidUserItem@@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::operator[]
PUBLIC	?SetAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXKPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::SetAt
PUBLIC	?RemoveKey@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetAssocAt
PUBLIC	??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::~CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
PUBLIC	?Serialize@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Serialize
PUBLIC	?Dump@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Dump
PUBLIC	?AssertValid@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::AssertValid
PUBLIC	??_G?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEPAXI@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAE@XZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
PUBLIC	??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::~CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEHABQAUtagAndroidParameterEx@@@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXHABQAUtagAndroidParameterEx@@@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetAtGrow
PUBLIC	?RemoveAll@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
PUBLIC	??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEHABQAVCAndroidUserItem@@@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHABQAVCAndroidUserItem@@@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAEPAXI@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`scalar deleting destructor'
PUBLIC	??0CAndroidUserManager@@QAE@XZ			; CAndroidUserManager::CAndroidUserManager
PUBLIC	??1CAndroidUserManager@@UAE@XZ			; CAndroidUserManager::~CAndroidUserManager
PUBLIC	?Release@CAndroidUserManager@@UAEXXZ		; CAndroidUserManager::Release
PUBLIC	?QueryInterface@CAndroidUserManager@@UAEPAXABU_GUID@@K@Z ; CAndroidUserManager::QueryInterface
PUBLIC	?StartService@CAndroidUserManager@@UAE_NXZ	; CAndroidUserManager::StartService
PUBLIC	?ConcludeService@CAndroidUserManager@@UAE_NXZ	; CAndroidUserManager::ConcludeService
PUBLIC	?InitAndroidUser@CAndroidUserManager@@UAE_NAAUtagAndroidUserParameter@@@Z ; CAndroidUserManager::InitAndroidUser
PUBLIC	?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z ; CAndroidUserManager::RemoveAndroidParameter
PUBLIC	?AddAndroidParameter@CAndroidUserManager@@UAE_NQAUtagAndroidParameter@@G@Z ; CAndroidUserManager::AddAndroidParameter
PUBLIC	?InsertAndroidInfo@CAndroidUserManager@@UAE_NQAUtagAndroidAccountsInfo@@GK@Z ; CAndroidUserManager::InsertAndroidInfo
PUBLIC	?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z ; CAndroidUserManager::DeleteAndroidUserItem
PUBLIC	?SearchAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@KK@Z ; CAndroidUserManager::SearchAndroidUserItem
PUBLIC	?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z ; CAndroidUserManager::CreateAndroidUserItem
PUBLIC	?SetMainServiceFrame@CAndroidUserManager@@QAEXPAUIMainServiceFrame@@@Z ; CAndroidUserManager::SetMainServiceFrame
PUBLIC	?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z ; CAndroidUserManager::OnEventTimerPulse
PUBLIC	?GetAndroidCount@CAndroidUserManager@@UAEGXZ	; CAndroidUserManager::GetAndroidCount
PUBLIC	?GetAndroidStock@CAndroidUserManager@@UAEGXZ	; CAndroidUserManager::GetAndroidStock
PUBLIC	?GetAndroidLoadInfo@CAndroidUserManager@@UAE_NAAK0@Z ; CAndroidUserManager::GetAndroidLoadInfo
PUBLIC	?GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z ; CAndroidUserManager::GetAndroidUserInfo
PUBLIC	?GetGameServiceOption@CAndroidUserManager@@UAEPAUtagGameServiceOption@@XZ ; CAndroidUserManager::GetGameServiceOption
PUBLIC	?GetGameServiceAttrib@CAndroidUserManager@@UAEPAUtagGameServiceAttrib@@XZ ; CAndroidUserManager::GetGameServiceAttrib
PUBLIC	?GetGameMatchOption@CAndroidUserManager@@UAEPAUtagGameMatchOption@@XZ ; CAndroidUserManager::GetGameMatchOption
PUBLIC	?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z ; CAndroidUserManager::SendDataToClient
PUBLIC	?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z ; CAndroidUserManager::SendDataToClient
PUBLIC	?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z ; CAndroidUserManager::SendDataToServer
PUBLIC	?FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z ; CAndroidUserManager::FreeAndroidUserItem
PUBLIC	?GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z ; CAndroidUserManager::GetAndroidUserItem
PUBLIC	?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z ; CAndroidUserManager::ActiveAndroidUserItem
PUBLIC	?ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z ; CAndroidUserManager::ForceAndroidUserItemStandup
PUBLIC	?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z ; CAndroidUserManager::GetAndroidParameter
PUBLIC	?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z ; CAndroidUserManager::GetAndroidParameterIndex
PUBLIC	?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ; CAndroidUserManager::GetTodayTickCount
PUBLIC	?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ; CAndroidUserManager::BatchServiceRemaindTime
PUBLIC	?BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ; CAndroidUserManager::BatchServiceAwaitTime
PUBLIC	??_GCAndroidUserManager@@UAEPAXI@Z		; CAndroidUserManager::`scalar deleting destructor'
PUBLIC	??_ECAndroidUserManager@@UAEPAXI@Z		; CAndroidUserManager::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	??0CPair@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CAssoc::CAssoc
PUBLIC	??$CompareElements@KK@@YGHPBK0@Z		; CompareElements<unsigned long,unsigned long>
PUBLIC	??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z	; SerializeElements<unsigned long>
PUBLIC	??$SerializeElements@PAVCAndroidUserItem@@@@YGXAAVCArchive@@PAPAVCAndroidUserItem@@H@Z ; SerializeElements<CAndroidUserItem *>
PUBLIC	??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z	; DumpElements<unsigned long>
PUBLIC	??$DumpElements@PAVCAndroidUserItem@@@@YGXAAVCDumpContext@@PBQAVCAndroidUserItem@@H@Z ; DumpElements<CAndroidUserItem *>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_7IAndroidUserItem@@6B@			; IAndroidUserItem::`vftable'
PUBLIC	??_7IAndroidUserManager@@6B@			; IAndroidUserManager::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`vftable'
PUBLIC	??_7CAndroidUserItem@@6B@			; CAndroidUserItem::`vftable'
PUBLIC	??_7?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`vftable'
PUBLIC	??_7CAndroidUserManager@@6B@			; CAndroidUserManager::`vftable'
PUBLIC	?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA ; `CAndroidUserManager::~CAndroidUserManager'::`1'::__LINE__Var
PUBLIC	??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??ConcludeService@CAndroidUserManager@@UAE_NXZ@4JA ; `CAndroidUserManager::ConcludeService'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z@4JA ; `CAndroidUserManager::RemoveAndroidParameter'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z@4JA ; `CAndroidUserManager::DeleteAndroidUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA ; `CAndroidUserManager::CreateAndroidUserItem'::`1'::__LINE__Var
PUBLIC	__TI1H
PUBLIC	__CTA1H
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
PUBLIC	__CT??_R0H@84
PUBLIC	?__LINE__Var@?0??OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z@4JA ; `CAndroidUserManager::OnEventTimerPulse'::`1'::__LINE__Var
PUBLIC	??_C@_0CA@JNJPKGKJ@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?$LP?$KK?J?$LM?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@ ; `string'
PUBLIC	??_C@_0CP@DGHJFLOD@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?$LI?C?E?z?$LE?N?$LN?$KL?$LB?$LL@ ; `string'
PUBLIC	??_C@_0CA@OJFILKJK@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA ; `CAndroidUserManager::GetAndroidUserInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z@4JA ; `CAndroidUserManager::SendDataToClient'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA ; `CAndroidUserManager::SendDataToClient'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA ; `CAndroidUserManager::SendDataToServer'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@PMKCNPKJ@SendDataToServer?3?5MainID?$DN?$CFd?0Sub@ ; `string'
PUBLIC	?__LINE__Var@?0??GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z@4JA ; `CAndroidUserManager::GetAndroidUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z@4JA ; `CAndroidUserManager::FreeAndroidUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA ; `CAndroidUserManager::BatchServiceRemaindTime'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA ; `CAndroidUserManager::BatchServiceAwaitTime'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA ; `CAndroidUserManager::ActiveAndroidUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z@4JA ; `CAndroidUserManager::ForceAndroidUserItemStandup'::`1'::__LINE__Var
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAndroidUserItem@@6B@			; IAndroidUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAndroidUserItem@@@8			; IAndroidUserItem `RTTI Type Descriptor'
PUBLIC	??_R3IAndroidUserItem@@8			; IAndroidUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAndroidUserItem@@8			; IAndroidUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAndroidUserItem@@8		; IAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAndroidUserManager@@6B@			; IAndroidUserManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAndroidUserManager@@@8			; IAndroidUserManager `RTTI Type Descriptor'
PUBLIC	??_R3IAndroidUserManager@@8			; IAndroidUserManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAndroidUserManager@@8			; IAndroidUserManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAndroidUserManager@@8		; IAndroidUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8	; CWHArray<tagTimerItem *,tagTimerItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAndroidUserItem@@6B@			; CAndroidUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAndroidUserItem@@@8			; CAndroidUserItem `RTTI Type Descriptor'
PUBLIC	??_R3CAndroidUserItem@@8			; CAndroidUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAndroidUserItem@@8			; CAndroidUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAndroidUserItem@@8		; CAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAndroidUserManager@@6B@			; CAndroidUserManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAndroidUserManager@@@8			; CAndroidUserManager `RTTI Type Descriptor'
PUBLIC	??_R3CAndroidUserManager@@8			; CAndroidUserManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAndroidUserManager@@8			; CAndroidUserManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAndroidUserManager@@8		; CAndroidUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@@8 ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8 ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@@8 ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KKPAVCAndroidUserItem@@PAV1@@@@8	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??_E?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`vector deleting destructor'
EXTRN	??0CAndroidUserItem@@QAE@XZ:PROC		; CAndroidUserItem::CAndroidUserItem
EXTRN	??1CAndroidUserItem@@UAE@XZ:PROC		; CAndroidUserItem::~CAndroidUserItem
EXTRN	?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z:PROC ; CAndroidUserItem::QueryInterface
EXTRN	?GetUserID@CAndroidUserItem@@UAEKXZ:PROC	; CAndroidUserItem::GetUserID
EXTRN	?GetTableID@CAndroidUserItem@@UAEGXZ:PROC	; CAndroidUserItem::GetTableID
EXTRN	?GetChairID@CAndroidUserItem@@UAEGXZ:PROC	; CAndroidUserItem::GetChairID
EXTRN	?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ:PROC ; CAndroidUserItem::GetMeUserItem
EXTRN	?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z:PROC ; CAndroidUserItem::GetTableUserItem
EXTRN	?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z:PROC ; CAndroidUserItem::PerformSaveScore
EXTRN	?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z:PROC ; CAndroidUserItem::PerformTakeScore
EXTRN	?SendSocketData@CAndroidUserItem@@UAE_NG@Z:PROC	; CAndroidUserItem::SendSocketData
EXTRN	?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z:PROC ; CAndroidUserItem::SendSocketData
EXTRN	?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z:PROC ; CAndroidUserItem::JudgeAndroidActionAndRemove
EXTRN	?KillGameTimer@CAndroidUserItem@@UAE_NI@Z:PROC	; CAndroidUserItem::KillGameTimer
EXTRN	?SetGameTimer@CAndroidUserItem@@UAE_NII@Z:PROC	; CAndroidUserItem::SetGameTimer
EXTRN	?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z:PROC ; CAndroidUserItem::SendUserReady
EXTRN	?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z:PROC ; CAndroidUserItem::SendChatMessage
EXTRN	?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z:PROC	; CAndroidUserItem::OnTimerPulse
EXTRN	?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z:PROC ; CAndroidUserItem::OnSocketRead
EXTRN	?RepositUserItem@CAndroidUserItem@@QAEXXZ:PROC	; CAndroidUserItem::RepositUserItem
EXTRN	??_E?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAEPAXI@Z:PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@KKPAVCAndroidUserItem@@PAV1@@@@8 ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8 DD 00H	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KKPAVCAndroidUserItem@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KKPAVCAndroidUserItem@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KKPAVCAndroidUserItem@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@ DD 00H	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KKPAVCAndroidUserItem@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@KKPAVCAndroidUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@@8 ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8 DD 00H ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@@8 ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8 ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8 DD 00H	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@ DD 00H ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAndroidUserManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAndroidUserManager@@8 DD FLAT:??_R0?AVCAndroidUserManager@@@8 ; CAndroidUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAndroidUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CAndroidUserManager@@8
rdata$r	SEGMENT
??_R2CAndroidUserManager@@8 DD FLAT:??_R1A@?0A@EA@CAndroidUserManager@@8 ; CAndroidUserManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAndroidUserManager@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAndroidUserManager@@8
rdata$r	SEGMENT
??_R3CAndroidUserManager@@8 DD 00H			; CAndroidUserManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CAndroidUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAndroidUserManager@@@8
data$r	SEGMENT
??_R0?AVCAndroidUserManager@@@8 DD FLAT:??_7type_info@@6B@ ; CAndroidUserManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAndroidUserManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAndroidUserManager@@6B@
rdata$r	SEGMENT
??_R4CAndroidUserManager@@6B@ DD 00H			; CAndroidUserManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAndroidUserManager@@@8
	DD	FLAT:??_R3CAndroidUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAndroidUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAndroidUserItem@@8 DD FLAT:??_R0?AVCAndroidUserItem@@@8 ; CAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CAndroidUserItem@@8
rdata$r	SEGMENT
??_R2CAndroidUserItem@@8 DD FLAT:??_R1A@?0A@EA@CAndroidUserItem@@8 ; CAndroidUserItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAndroidUserItem@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAndroidUserItem@@8
rdata$r	SEGMENT
??_R3CAndroidUserItem@@8 DD 00H				; CAndroidUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAndroidUserItem@@@8
data$r	SEGMENT
??_R0?AVCAndroidUserItem@@@8 DD FLAT:??_7type_info@@6B@	; CAndroidUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAndroidUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAndroidUserItem@@6B@
rdata$r	SEGMENT
??_R4CAndroidUserItem@@6B@ DD 00H			; CAndroidUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAndroidUserItem@@@8
	DD	FLAT:??_R3CAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8 ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 DD 00H	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagTimerItem *,tagTimerItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@ DD 00H	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAndroidUserManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAndroidUserManager@@8 DD FLAT:??_R0?AUIAndroidUserManager@@@8 ; IAndroidUserManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAndroidUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R2IAndroidUserManager@@8
rdata$r	SEGMENT
??_R2IAndroidUserManager@@8 DD FLAT:??_R1A@?0A@EA@IAndroidUserManager@@8 ; IAndroidUserManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAndroidUserManager@@8
rdata$r	SEGMENT
??_R3IAndroidUserManager@@8 DD 00H			; IAndroidUserManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAndroidUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAndroidUserManager@@@8
data$r	SEGMENT
??_R0?AUIAndroidUserManager@@@8 DD FLAT:??_7type_info@@6B@ ; IAndroidUserManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAndroidUserManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAndroidUserManager@@6B@
rdata$r	SEGMENT
??_R4IAndroidUserManager@@6B@ DD 00H			; IAndroidUserManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAndroidUserManager@@@8
	DD	FLAT:??_R3IAndroidUserManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAndroidUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAndroidUserItem@@8 DD FLAT:??_R0?AUIAndroidUserItem@@@8 ; IAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2IAndroidUserItem@@8
rdata$r	SEGMENT
??_R2IAndroidUserItem@@8 DD FLAT:??_R1A@?0A@EA@IAndroidUserItem@@8 ; IAndroidUserItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAndroidUserItem@@8
rdata$r	SEGMENT
??_R3IAndroidUserItem@@8 DD 00H				; IAndroidUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAndroidUserItem@@@8
data$r	SEGMENT
??_R0?AUIAndroidUserItem@@@8 DD FLAT:??_7type_info@@6B@	; IAndroidUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAndroidUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAndroidUserItem@@6B@
rdata$r	SEGMENT
??_R4IAndroidUserItem@@6B@ DD 00H			; IAndroidUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAndroidUserItem@@@8
	DD	FLAT:??_R3IAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z@4JA DD 04dbH ; `CAndroidUserManager::ForceAndroidUserItemStandup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA DD 045cH ; `CAndroidUserManager::ActiveAndroidUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA DD 043aH ; `CAndroidUserManager::BatchServiceAwaitTime'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA DD 040cH ; `CAndroidUserManager::BatchServiceRemaindTime'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z@4JA DD 03c8H ; `CAndroidUserManager::FreeAndroidUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z@4JA DD 03b6H ; `CAndroidUserManager::GetAndroidUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@PMKCNPKJ@SendDataToServer?3?5MainID?$DN?$CFd?0Sub@
CONST	SEGMENT
??_C@_0CF@PMKCNPKJ@SendDataToServer?3?5MainID?$DN?$CFd?0Sub@ DB 'SendData'
	DB	'ToServer: MainID=%d,SubID=%d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA DD 0399H ; `CAndroidUserManager::SendDataToServer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA DD 037cH ; `CAndroidUserManager::SendDataToClient'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z@4JA DD 0358H ; `CAndroidUserManager::SendDataToClient'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA DD 030cH ; `CAndroidUserManager::GetAndroidUserInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@OJFILKJK@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@
CONST	SEGMENT
??_C@_0CA@OJFILKJK@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@ DB 0b1H
	DB	0beH, 0c5H, 0faH, 0b4H, 0ceH, 0bbH, 0faH, 0c6H, 0f7H, 0c8H, 0cbH
	DB	0c8H, 0abH, 0b2H, 0bfH, 0cdH, 0cbH, 0b3H, 0f6H, ', ', 0c5H, 0faH
	DB	0b4H, 0ceH, 'ID=%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DGHJFLOD@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?$LI?C?E?z?$LE?N?$LN?$KL?$LB?$LL@
CONST	SEGMENT
??_C@_0CP@DGHJFLOD@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?$LI?C?E?z?$LE?N?$LN?$KL?$LB?$LL@ DB 0b1H
	DB	0beH, 0c5H, 0faH, 0b4H, 0ceH, 0bbH, 0faH, 0c6H, 0f7H, 0c8H, 0cbH
	DB	0c8H, 0abH, 0b2H, 0bfH, 0cdH, 0cbH, 0b3H, 0f6H, ',', 0b8H, 0c3H
	DB	0c5H, 0faH, 0b4H, 0ceH, 0bdH, 0abH, 0b1H, 0bbH, 0c9H, 0beH, 0b3H
	DB	0fdH, ', ', 0c5H, 0faH, 0b4H, 0ceH, 'ID=%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JNJPKGKJ@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?$LP?$KK?J?$LM?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@
CONST	SEGMENT
??_C@_0CA@JNJPKGKJ@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?$LP?$KK?J?$LM?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@ DB 0b1H
	DB	0beH, 0c5H, 0faH, 0b4H, 0ceH, 0bbH, 0faH, 0c6H, 0f7H, 0c8H, 0cbH
	DB	0bfH, 0aaH, 0caH, 0bcH, 0cdH, 0cbH, 0b3H, 0f6H, ', ', 0c5H, 0faH
	DB	0b4H, 0ceH, 'ID=%d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z@4JA DD 01c4H ; `CAndroidUserManager::OnEventTimerPulse'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT __CT??_R0H@84
xdata$x	SEGMENT
__CT??_R0H@84 DD 01H
	DD	FLAT:??_R0H@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0H@8
data$r	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
data$r	ENDS
;	COMDAT __CTA1H
xdata$x	SEGMENT
__CTA1H	DD	01H
	DD	FLAT:__CT??_R0H@84
xdata$x	ENDS
;	COMDAT __TI1H
xdata$x	SEGMENT
__TI1H	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1H
xdata$x	ENDS
;	COMDAT ?__LINE__Var@?0??CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA DD 0170H ; `CAndroidUserManager::CreateAndroidUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z@4JA DD 0139H ; `CAndroidUserManager::DeleteAndroidUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z@4JA DD 09cH ; `CAndroidUserManager::RemoveAndroidParameter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ConcludeService@CAndroidUserManager@@UAE_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ConcludeService@CAndroidUserManager@@UAE_NXZ@4JA DD 068H ; `CAndroidUserManager::ConcludeService'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH, 0f1H, '\a'
	DB	'ndroidusermanager.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA DD 03dH ; `CAndroidUserManager::~CAndroidUserManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CAndroidUserManager@@6B@
CONST	SEGMENT
??_7CAndroidUserManager@@6B@ DD FLAT:??_R4CAndroidUserManager@@6B@ ; CAndroidUserManager::`vftable'
	DD	FLAT:?Release@CAndroidUserManager@@UAEXXZ
	DD	FLAT:?QueryInterface@CAndroidUserManager@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?StartService@CAndroidUserManager@@UAE_NXZ
	DD	FLAT:?ConcludeService@CAndroidUserManager@@UAE_NXZ
	DD	FLAT:?InitAndroidUser@CAndroidUserManager@@UAE_NAAUtagAndroidUserParameter@@@Z
	DD	FLAT:?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z
	DD	FLAT:?AddAndroidParameter@CAndroidUserManager@@UAE_NQAUtagAndroidParameter@@G@Z
	DD	FLAT:?InsertAndroidInfo@CAndroidUserManager@@UAE_NQAUtagAndroidAccountsInfo@@GK@Z
	DD	FLAT:?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z
	DD	FLAT:?SearchAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@KK@Z
	DD	FLAT:?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
	DD	FLAT:?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z
	DD	FLAT:?GetAndroidCount@CAndroidUserManager@@UAEGXZ
	DD	FLAT:?GetAndroidLoadInfo@CAndroidUserManager@@UAE_NAAK0@Z
	DD	FLAT:?GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z
	DD	FLAT:?GetGameServiceOption@CAndroidUserManager@@UAEPAUtagGameServiceOption@@XZ
	DD	FLAT:?GetGameServiceAttrib@CAndroidUserManager@@UAEPAUtagGameServiceAttrib@@XZ
	DD	FLAT:?GetGameMatchOption@CAndroidUserManager@@UAEPAUtagGameMatchOption@@XZ
	DD	FLAT:?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z
	DD	FLAT:?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z
	DD	FLAT:?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z
	DD	FLAT:??_ECAndroidUserManager@@UAEPAXI@Z
	DD	FLAT:?GetAndroidStock@CAndroidUserManager@@UAEGXZ
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CAndroidUserItem@@6B@
CONST	SEGMENT
??_7CAndroidUserItem@@6B@ DD FLAT:??_R4CAndroidUserItem@@6B@ ; CAndroidUserItem::`vftable'
	DD	FLAT:?Release@CAndroidUserItem@@UAEXXZ
	DD	FLAT:?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?GetUserID@CAndroidUserItem@@UAEKXZ
	DD	FLAT:?GetTableID@CAndroidUserItem@@UAEGXZ
	DD	FLAT:?GetChairID@CAndroidUserItem@@UAEGXZ
	DD	FLAT:?GetGameStatus@CAndroidUserItem@@UAEEXZ
	DD	FLAT:?SetGameStatus@CAndroidUserItem@@UAEXE@Z
	DD	FLAT:?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ
	DD	FLAT:?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ
	DD	FLAT:?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ
	DD	FLAT:?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z
	DD	FLAT:?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z
	DD	FLAT:?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z
	DD	FLAT:?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z
	DD	FLAT:?SendSocketData@CAndroidUserItem@@UAE_NG@Z
	DD	FLAT:?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z
	DD	FLAT:?KillGameTimer@CAndroidUserItem@@UAE_NI@Z
	DD	FLAT:?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
	DD	FLAT:?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z
	DD	FLAT:?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z
	DD	FLAT:??_ECAndroidUserItem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7IAndroidUserManager@@6B@
CONST	SEGMENT
??_7IAndroidUserManager@@6B@ DD FLAT:??_R4IAndroidUserManager@@6B@ ; IAndroidUserManager::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IAndroidUserItem@@6B@
CONST	SEGMENT
??_7IAndroidUserItem@@6B@ DD FLAT:??_R4IAndroidUserItem@@6B@ ; IAndroidUserItem::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECAndroidUserManager@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$2
__catchsym$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$0
__ehfuncinfo$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z DD 01H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$5
	DD	00H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$6
__unwindtable$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$4
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$0
__tryblocktable$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$3
__unwindtable$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$2
__ehfuncinfo$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z$0
__unwindtable$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z$2
__ehfuncinfo$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z$0
__unwindtable$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z$2
__ehfuncinfo$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$2
__catchsym$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$0
__ehfuncinfo$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z
	DD	02H
	DD	FLAT:__tryblocktable$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$7
	DD	05H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$8
__unwindtable$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$4
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$6
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$2
__catchsym$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$0
__unwindtable$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z$0
__unwindtable$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z$2
__ehfuncinfo$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z$0
__unwindtable$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z$2
__ehfuncinfo$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z
	DD	01H
	DD	FLAT:__tryblocktable$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?ConcludeService@CAndroidUserManager@@UAE_NXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ConcludeService@CAndroidUserManager@@UAE_NXZ$0
__unwindtable$?ConcludeService@CAndroidUserManager@@UAE_NXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?ConcludeService@CAndroidUserManager@@UAE_NXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?ConcludeService@CAndroidUserManager@@UAE_NXZ$2
__ehfuncinfo$?ConcludeService@CAndroidUserManager@@UAE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ConcludeService@CAndroidUserManager@@UAE_NXZ
	DD	01H
	DD	FLAT:__tryblocktable$?ConcludeService@CAndroidUserManager@@UAE_NXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAndroidUserManager@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CAndroidUserManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$3
__ehfuncinfo$??0CAndroidUserManager@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CAndroidUserManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECAndroidUserItem@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCAndroidUserItem@@@@YGXAAVCDumpContext@@PBQAVCAndroidUserItem@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCAndroidUserItem@@@@YGXAAVCDumpContext@@PBQAVCAndroidUserItem@@H@Z PROC ; DumpElements<CAndroidUserItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCAndroidUserItem@@@@YGXAAVCDumpContext@@PBQAVCAndroidUserItem@@H@Z ENDP ; DumpElements<CAndroidUserItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z PROC	; DumpElements<unsigned long>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ENDP	; DumpElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCAndroidUserItem@@@@YGXAAVCArchive@@PAPAVCAndroidUserItem@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCAndroidUserItem@@@@YGXAAVCArchive@@PAPAVCAndroidUserItem@@H@Z PROC ; SerializeElements<CAndroidUserItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCAndroidUserItem@@@@YGXAAVCArchive@@PAPAVCAndroidUserItem@@H@Z ENDP ; SerializeElements<CAndroidUserItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z PROC	; SerializeElements<unsigned long>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ENDP	; SerializeElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@KK@@YGHPBK0@Z
_TEXT	SEGMENT
tv128 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@KK@@YGHPBK0@Z PROC			; CompareElements<unsigned long,unsigned long>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 04		 push	 4
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 04		 push	 4
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement2$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a8	75 09		 jne	 SHORT $LN12@CompareEle
  000aa	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv128[ebp], 1
  000b1	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@CompareEle:
  000ba	8b 45 b8	 mov	 eax, DWORD PTR tv128[ebp]
$LN6@CompareEle:

; 157  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
??$CompareElements@KK@@YGHPBK0@Z ENDP			; CompareElements<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@K@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAE@K@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECAndroidUserManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECAndroidUserManager@@UAEPAXI@Z PROC			; CAndroidUserManager::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECAndroidUserManager@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 47		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CAndroidUserManager@@UAE@XZ ; CAndroidUserManager::~CAndroidUserManager
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 94 60 01 00	 push	 90260			; 00016094H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1d		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	69 48 fc 94 60
	01 00		 imul	 ecx, DWORD PTR [eax-4], 90260
  0005f	83 c1 04	 add	 ecx, 4
  00062	51		 push	 ecx
  00063	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 ea 04	 sub	 edx, 4
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	83 c4 08	 add	 esp, 8
$LN3@vector:
  00072	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 e8 04	 sub	 eax, 4
  00078	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CAndroidUserManager@@UAE@XZ ; CAndroidUserManager::~CAndroidUserManager
  00082	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00085	83 e0 01	 and	 eax, 1
  00088	74 11		 je	 SHORT $LN4@vector
  0008a	68 94 60 01 00	 push	 90260			; 00016094H
  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00098	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECAndroidUserManager@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECAndroidUserManager@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECAndroidUserManager@@UAEPAXI@Z ENDP			; CAndroidUserManager::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCAndroidUserManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAndroidUserManager@@UAEPAXI@Z PROC			; CAndroidUserManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CAndroidUserManager@@UAE@XZ ; CAndroidUserManager::~CAndroidUserManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 94 60 01 00	 push	 90260			; 00016094H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCAndroidUserManager@@UAEPAXI@Z ENDP			; CAndroidUserManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z
_TEXT	SEGMENT
_dwLeaveTime$ = -12					; size = 4
_dwEnterTime$ = -8					; size = 4
_this$ = -4						; size = 4
_pAndroidParameter$ = 8					; size = 4
_dwTodayTickCount$ = 12					; size = 4
?BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z PROC ; CAndroidUserManager::BatchServiceAwaitTime, COMDAT
; _this$ = ecx

; 1082 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1083 : 	//参数校验
; 1084 : 	ASSERT(pAndroidParameter!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  00010	75 18		 jne	 SHORT $LN9@BatchServi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN9@BatchServi
  00029	cc		 int	 3
$LN9@BatchServi:

; 1085 : 	if(pAndroidParameter==NULL) return 0;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@BatchServi
  00030	33 c0		 xor	 eax, eax
  00032	eb 56		 jmp	 SHORT $LN1@BatchServi
$LN2@BatchServi:

; 1086 : 	if(((tagAndroidParameterEx *)pAndroidParameter)->bIsLoadAndroid==false) return -1;

  00034	8b 45 08	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00037	0f b6 48 55	 movzx	 ecx, BYTE PTR [eax+85]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 05		 jne	 SHORT $LN3@BatchServi
  0003f	83 c8 ff	 or	 eax, -1
  00042	eb 46		 jmp	 SHORT $LN1@BatchServi
$LN3@BatchServi:

; 1087 : 
; 1088 : 	//变量定义
; 1089 : 	DWORD dwEnterTime,dwLeaveTime;
; 1090 : 
; 1091 : 	//设置变量
; 1092 : 	dwEnterTime=pAndroidParameter->dwEnterTime;

  00044	8b 45 08	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00047	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004a	89 4d f8	 mov	 DWORD PTR _dwEnterTime$[ebp], ecx

; 1093 : 	dwLeaveTime=pAndroidParameter->dwLeaveTime;

  0004d	8b 45 08	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00050	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00053	89 4d f4	 mov	 DWORD PTR _dwLeaveTime$[ebp], ecx

; 1094 : 
; 1095 : 	//计算时间
; 1096 : 	if(dwEnterTime<dwLeaveTime)

  00056	8b 45 f8	 mov	 eax, DWORD PTR _dwEnterTime$[ebp]
  00059	3b 45 f4	 cmp	 eax, DWORD PTR _dwLeaveTime$[ebp]
  0005c	73 12		 jae	 SHORT $LN4@BatchServi

; 1097 : 	{
; 1098 : 		if(dwTodayTickCount<dwEnterTime)

  0005e	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  00061	3b 45 f8	 cmp	 eax, DWORD PTR _dwEnterTime$[ebp]
  00064	73 08		 jae	 SHORT $LN6@BatchServi

; 1099 : 		{
; 1100 : 			return dwEnterTime-dwTodayTickCount;

  00066	8b 45 f8	 mov	 eax, DWORD PTR _dwEnterTime$[ebp]
  00069	2b 45 0c	 sub	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0006c	eb 1c		 jmp	 SHORT $LN1@BatchServi
$LN6@BatchServi:

; 1101 : 		}
; 1102 : 	}
; 1103 : 	else

  0006e	eb 18		 jmp	 SHORT $LN5@BatchServi
$LN4@BatchServi:

; 1104 : 	{
; 1105 : 		if(dwTodayTickCount<dwEnterTime && dwTodayTickCount>dwLeaveTime)

  00070	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  00073	3b 45 f8	 cmp	 eax, DWORD PTR _dwEnterTime$[ebp]
  00076	73 10		 jae	 SHORT $LN5@BatchServi
  00078	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0007b	3b 45 f4	 cmp	 eax, DWORD PTR _dwLeaveTime$[ebp]
  0007e	76 08		 jbe	 SHORT $LN5@BatchServi

; 1106 : 		{
; 1107 : 			return dwEnterTime-dwTodayTickCount;

  00080	8b 45 f8	 mov	 eax, DWORD PTR _dwEnterTime$[ebp]
  00083	2b 45 0c	 sub	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  00086	eb 02		 jmp	 SHORT $LN1@BatchServi
$LN5@BatchServi:

; 1108 : 		}
; 1109 : 	}
; 1110 : 
; 1111 : 	return 0;

  00088	33 c0		 xor	 eax, eax
$LN1@BatchServi:

; 1112 : }

  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
?BatchServiceAwaitTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ENDP ; CAndroidUserManager::BatchServiceAwaitTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z
_TEXT	SEGMENT
_dwRemaindTime$ = -16					; size = 4
_dwLeaveTime$ = -12					; size = 4
_dwEnterTime$ = -8					; size = 4
_this$ = -4						; size = 4
_pAndroidParameter$ = 8					; size = 4
_dwTodayTickCount$ = 12					; size = 4
?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z PROC ; CAndroidUserManager::BatchServiceRemaindTime, COMDAT
; _this$ = ecx

; 1036 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1037 : 	//参数校验
; 1038 : 	ASSERT(pAndroidParameter!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  00010	75 18		 jne	 SHORT $LN10@BatchServi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN10@BatchServi
  00029	cc		 int	 3
$LN10@BatchServi:

; 1039 : 	if(pAndroidParameter==NULL) return 0;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@BatchServi
  00030	33 c0		 xor	 eax, eax
  00032	eb 6e		 jmp	 SHORT $LN1@BatchServi
$LN2@BatchServi:

; 1040 : 
; 1041 : 	//变量定义
; 1042 : 	DWORD dwEnterTime,dwLeaveTime;
; 1043 : 	DWORD dwRemaindTime=0;

  00034	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _dwRemaindTime$[ebp], 0

; 1044 : 
; 1045 : 	//设置变量
; 1046 : 	dwEnterTime=pAndroidParameter->dwEnterTime;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	89 4d f8	 mov	 DWORD PTR _dwEnterTime$[ebp], ecx

; 1047 : 	dwLeaveTime=pAndroidParameter->dwLeaveTime;

  00044	8b 45 08	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00047	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004a	89 4d f4	 mov	 DWORD PTR _dwLeaveTime$[ebp], ecx

; 1048 : 
; 1049 : 	// 计算时间
; 1050 : 	// 进入时间和离开时间在同一天
; 1051 : 	// 进入时间，离开时间都在同一天的 00:00:00 ~ 23:59:59 (0~86399)
; 1052 : 	if(dwLeaveTime>dwEnterTime)

  0004d	8b 45 f4	 mov	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00050	3b 45 f8	 cmp	 eax, DWORD PTR _dwEnterTime$[ebp]
  00053	76 1b		 jbe	 SHORT $LN3@BatchServi

; 1053 : 	{
; 1054 : 		if(dwTodayTickCount>=dwEnterTime && dwTodayTickCount<=dwLeaveTime)

  00055	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  00058	3b 45 f8	 cmp	 eax, DWORD PTR _dwEnterTime$[ebp]
  0005b	72 11		 jb	 SHORT $LN5@BatchServi
  0005d	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  00060	3b 45 f4	 cmp	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00063	77 09		 ja	 SHORT $LN5@BatchServi

; 1055 : 		{
; 1056 : 			dwRemaindTime=dwLeaveTime-dwTodayTickCount;

  00065	8b 45 f4	 mov	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00068	2b 45 0c	 sub	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0006b	89 45 f0	 mov	 DWORD PTR _dwRemaindTime$[ebp], eax
$LN5@BatchServi:

; 1057 : 		}
; 1058 : 	}

  0006e	eb 2f		 jmp	 SHORT $LN4@BatchServi
$LN3@BatchServi:

; 1059 : 	// 进入时间和离开时间不在同一天
; 1060 : 	// 进入时间在第一天12:00:01 ~ 23:59:59 (43201~86399)
; 1061 : 	// 离开时间在第二天 00:00:00 ~ 12:00:00 (0~43200)
; 1062 : 	else if(dwLeaveTime<dwEnterTime)

  00070	8b 45 f4	 mov	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00073	3b 45 f8	 cmp	 eax, DWORD PTR _dwEnterTime$[ebp]
  00076	73 27		 jae	 SHORT $LN4@BatchServi

; 1063 : 	{
; 1064 : 		//第一天
; 1065 : 		if(dwTodayTickCount>=dwEnterTime)

  00078	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0007b	3b 45 f8	 cmp	 eax, DWORD PTR _dwEnterTime$[ebp]
  0007e	72 0e		 jb	 SHORT $LN7@BatchServi

; 1066 : 		{
; 1067 : 			dwRemaindTime = dwLeaveTime+24*3600-dwTodayTickCount;

  00080	8b 45 f4	 mov	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00083	05 80 51 01 00	 add	 eax, 86400		; 00015180H
  00088	2b 45 0c	 sub	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0008b	89 45 f0	 mov	 DWORD PTR _dwRemaindTime$[ebp], eax
$LN7@BatchServi:

; 1068 : 		}
; 1069 : 
; 1070 : 		//第二天
; 1071 : 		if(dwTodayTickCount< dwLeaveTime)

  0008e	8b 45 0c	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  00091	3b 45 f4	 cmp	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00094	73 09		 jae	 SHORT $LN4@BatchServi

; 1072 : 		{
; 1073 : 			dwRemaindTime = dwLeaveTime-dwTodayTickCount;

  00096	8b 45 f4	 mov	 eax, DWORD PTR _dwLeaveTime$[ebp]
  00099	2b 45 0c	 sub	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0009c	89 45 f0	 mov	 DWORD PTR _dwRemaindTime$[ebp], eax
$LN4@BatchServi:

; 1074 : 		}
; 1075 : 	}
; 1076 : 
; 1077 : 	return dwRemaindTime;

  0009f	8b 45 f0	 mov	 eax, DWORD PTR _dwRemaindTime$[ebp]
$LN1@BatchServi:

; 1078 : }

  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 08 00	 ret	 8
?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ENDP ; CAndroidUserManager::BatchServiceRemaindTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_SystemTime$ = 8					; size = 4
?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z PROC ; CAndroidUserManager::GetTodayTickCount, COMDAT
; _this$ = ecx

; 1030 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1031 : 	return SystemTime.wHour*3600+SystemTime.wMinute*60+SystemTime.wSecond;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _SystemTime$[ebp]
  0000f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00013	69 c1 10 0e 00
	00		 imul	 eax, ecx, 3600
  00019	8b 55 08	 mov	 edx, DWORD PTR _SystemTime$[ebp]
  0001c	0f b7 4a 0a	 movzx	 ecx, WORD PTR [edx+10]
  00020	6b d1 3c	 imul	 edx, ecx, 60
  00023	03 c2		 add	 eax, edx
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _SystemTime$[ebp]
  00028	0f b7 51 0c	 movzx	 edx, WORD PTR [ecx+12]
  0002c	03 c2		 add	 eax, edx

; 1032 : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ENDP ; CAndroidUserManager::GetTodayTickCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z
_TEXT	SEGMENT
_nIndex$1 = -8						; size = 4
_this$ = -4						; size = 4
_pAndroidParameter$ = 8					; size = 4
?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z PROC ; CAndroidUserManager::GetAndroidParameterIndex, COMDAT
; _this$ = ecx

; 1012 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1013 : 	//参数校验
; 1014 : 	if(pAndroidParameter==NULL) return INVALID_WORD; 

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  00010	75 07		 jne	 SHORT $LN5@GetAndroid
  00012	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00017	eb 4b		 jmp	 SHORT $LN1@GetAndroid
$LN5@GetAndroid:

; 1015 : 
; 1016 : 	//查找数组
; 1017 : 	for(INT_PTR nIndex=0;nIndex<m_AndroidParameterArray.GetCount();nIndex++)

  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nIndex$1[ebp], 0
  00020	eb 09		 jmp	 SHORT $LN4@GetAndroid
$LN2@GetAndroid:
  00022	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00025	83 c0 01	 add	 eax, 1
  00028	89 45 f8	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@GetAndroid:
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00034	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  00039	39 45 f8	 cmp	 DWORD PTR _nIndex$1[ebp], eax
  0003c	7d 21		 jge	 SHORT $LN3@GetAndroid

; 1018 : 	{
; 1019 : 		if(m_AndroidParameterArray[nIndex]==pAndroidParameter)

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00041	50		 push	 eax
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  0004b	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	3b 4d 08	 cmp	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  00055	75 06		 jne	 SHORT $LN6@GetAndroid

; 1020 : 		{
; 1021 : 			return (WORD)nIndex;

  00057	66 8b 45 f8	 mov	 ax, WORD PTR _nIndex$1[ebp]
  0005b	eb 07		 jmp	 SHORT $LN1@GetAndroid
$LN6@GetAndroid:

; 1022 : 		}
; 1023 : 	}

  0005d	eb c3		 jmp	 SHORT $LN2@GetAndroid
$LN3@GetAndroid:

; 1024 : 
; 1025 : 	return INVALID_WORD;

  0005f	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
$LN1@GetAndroid:

; 1026 : }

  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z ENDP ; CAndroidUserManager::GetAndroidParameterIndex
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z
_TEXT	SEGMENT
_nIndex$1 = -8						; size = 4
_this$ = -4						; size = 4
_dwBatchID$ = 8						; size = 4
?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z PROC ; CAndroidUserManager::GetAndroidParameter, COMDAT
; _this$ = ecx

; 996  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 997  : 	//查找数组
; 998  : 	for(INT_PTR nIndex=0;nIndex<m_AndroidParameterArray.GetCount();nIndex++)

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nIndex$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@GetAndroid
$LN2@GetAndroid:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@GetAndroid:
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00027	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  0002c	39 45 f8	 cmp	 DWORD PTR _nIndex$1[ebp], eax
  0002f	7d 4c		 jge	 SHORT $LN3@GetAndroid

; 999  : 	{
; 1000 : 		if(m_AndroidParameterArray[nIndex]==NULL) continue;

  00031	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  0003e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  00043	83 38 00	 cmp	 DWORD PTR [eax], 0
  00046	75 02		 jne	 SHORT $LN5@GetAndroid
  00048	eb cb		 jmp	 SHORT $LN2@GetAndroid
$LN5@GetAndroid:

; 1001 : 		if(m_AndroidParameterArray[nIndex]->AndroidParameter.dwBatchID==dwBatchID)

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00057	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00060	3b 55 08	 cmp	 edx, DWORD PTR _dwBatchID$[ebp]
  00063	75 16		 jne	 SHORT $LN6@GetAndroid

; 1002 : 		{
; 1003 : 			return m_AndroidParameterArray[nIndex];

  00065	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  00068	50		 push	 eax
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00072	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  00077	8b 00		 mov	 eax, DWORD PTR [eax]
  00079	eb 04		 jmp	 SHORT $LN1@GetAndroid
$LN6@GetAndroid:

; 1004 : 		}
; 1005 : 	}

  0007b	eb 98		 jmp	 SHORT $LN2@GetAndroid
$LN3@GetAndroid:

; 1006 : 
; 1007 : 	return NULL;

  0007d	33 c0		 xor	 eax, eax
$LN1@GetAndroid:

; 1008 : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z ENDP ; CAndroidUserManager::GetAndroidParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z
_TEXT	SEGMENT
_UserStandUp$ = -20					; size = 5
_wAndroidIndex$ = -12					; size = 2
_wRoundID$ = -8						; size = 2
_this$ = -4						; size = 4
_pAndroidUserItem$ = 8					; size = 4
?ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z PROC ; CAndroidUserManager::ForceAndroidUserItemStandup, COMDAT
; _this$ = ecx

; 1243 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1244 : 	//校验参数
; 1245 : 	ASSERT(pAndroidUserItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@ForceAndro
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@ForceAndro
  00029	cc		 int	 3
$LN4@ForceAndro:

; 1246 : 	if(pAndroidUserItem==NULL) return;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  0002e	75 02		 jne	 SHORT $LN2@ForceAndro
  00030	eb 7e		 jmp	 SHORT $LN1@ForceAndro
$LN2@ForceAndro:

; 1247 : 
; 1248 : 	//属性变量
; 1249 : 	WORD wRoundID=pAndroidUserItem->m_wRoundID;

  00032	8b 45 08	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00035	66 8b 48 4c	 mov	 cx, WORD PTR [eax+76]
  00039	66 89 4d f8	 mov	 WORD PTR _wRoundID$[ebp], cx

; 1250 : 	WORD wAndroidIndex=pAndroidUserItem->m_wAndroidIndex;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00040	66 8b 48 4e	 mov	 cx, WORD PTR [eax+78]
  00044	66 89 4d f4	 mov	 WORD PTR _wAndroidIndex$[ebp], cx

; 1251 : 
; 1252 : 	//构造结构
; 1253 : 	CMD_GR_UserStandUp UserStandUp;
; 1254 : 	UserStandUp.cbForceLeave=true;

  00048	c6 45 f0 01	 mov	 BYTE PTR _UserStandUp$[ebp+4], 1

; 1255 : 	UserStandUp.wTableID=pAndroidUserItem->m_pIServerUserItem->GetTableID();

  0004c	8b 45 08	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  0004f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00052	8b 55 08	 mov	 edx, DWORD PTR _pAndroidUserItem$[ebp]
  00055	8b 01		 mov	 eax, DWORD PTR [ecx]
  00057	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0005a	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0005d	ff d2		 call	 edx
  0005f	66 89 45 ec	 mov	 WORD PTR _UserStandUp$[ebp], ax

; 1256 : 	UserStandUp.wChairID=pAndroidUserItem->m_pIServerUserItem->GetChairID();	

  00063	8b 45 08	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00066	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00069	8b 55 08	 mov	 edx, DWORD PTR _pAndroidUserItem$[ebp]
  0006c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0006e	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00071	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00074	ff d2		 call	 edx
  00076	66 89 45 ee	 mov	 WORD PTR _UserStandUp$[ebp+2], ax

; 1257 : 
; 1258 : 	//发送数据
; 1259 : 	SendDataToServer(MAKELONG(wAndroidIndex,wRoundID),MDM_GR_USER,SUB_GR_USER_STANDUP,&UserStandUp,sizeof(UserStandUp));

  0007a	6a 05		 push	 5
  0007c	8d 45 ec	 lea	 eax, DWORD PTR _UserStandUp$[ebp]
  0007f	50		 push	 eax
  00080	6a 04		 push	 4
  00082	6a 03		 push	 3
  00084	0f b7 4d f4	 movzx	 ecx, WORD PTR _wAndroidIndex$[ebp]
  00088	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0008e	0f b7 d1	 movzx	 edx, cx
  00091	0f b7 45 f8	 movzx	 eax, WORD PTR _wRoundID$[ebp]
  00095	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0009a	0f b7 c8	 movzx	 ecx, ax
  0009d	c1 e1 10	 shl	 ecx, 16			; 00000010H
  000a0	0b d1		 or	 edx, ecx
  000a2	52		 push	 edx
  000a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	8b 02		 mov	 eax, DWORD PTR [edx]
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  000ae	ff d2		 call	 edx
$LN1@ForceAndro:

; 1260 : 
; 1261 : 	return;
; 1262 : }

  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
?ForceAndroidUserItemStandup@CAndroidUserManager@@IAEXPAVCAndroidUserItem@@@Z ENDP ; CAndroidUserManager::ForceAndroidUserItemStandup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
_TEXT	SEGMENT
tv148 = -136						; size = 4
tv295 = -132						; size = 4
tv302 = -128						; size = 4
tv300 = -128						; size = 4
tv299 = -128						; size = 4
tv297 = -128						; size = 4
tv296 = -128						; size = 4
tv292 = -128						; size = 4
tv291 = -128						; size = 4
tv298 = -125						; size = 1
tv290 = -125						; size = 1
$T2 = -124						; size = 4
$T3 = -120						; size = 4
$T4 = -116						; size = 4
_dwSwitchMaxInnings$5 = -48				; size = 4
_dwSwitchMinInnings$6 = -44				; size = 4
_wCurrentIndex$7 = -40					; size = 2
_pIAndroidUserItemSink$8 = -36				; size = 4
_nItemPostion$9 = -32					; size = 4
_nFreeItemCount$ = -28					; size = 4
_pAndroidUserItem$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_AndroidItemConfig$ = 8					; size = 4
?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z PROC ; CAndroidUserManager::ActiveAndroidUserItem, COMDAT
; _this$ = ecx

; 1116 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 78	 sub	 esp, 120		; 00000078H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1117 : 	//变量定义
; 1118 : 	CAndroidUserItem * pAndroidUserItem=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$[ebp], 0

; 1119 : 	INT_PTR nFreeItemCount=m_AndroidUserItemBuffer.GetCount();

  00036	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  0003f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  00044	89 45 e4	 mov	 DWORD PTR _nFreeItemCount$[ebp], eax

; 1120 : 
; 1121 : 	//获取对象
; 1122 : 	if (nFreeItemCount>0)

  00047	83 7d e4 00	 cmp	 DWORD PTR _nFreeItemCount$[ebp], 0
  0004b	7e 34		 jle	 SHORT $LN2@ActiveAndr

; 1123 : 	{
; 1124 : 		//获取对象
; 1125 : 		INT_PTR nItemPostion=nFreeItemCount-1;

  0004d	8b 45 e4	 mov	 eax, DWORD PTR _nFreeItemCount$[ebp]
  00050	83 e8 01	 sub	 eax, 1
  00053	89 45 e0	 mov	 DWORD PTR _nItemPostion$9[ebp], eax

; 1126 : 		pAndroidUserItem=m_AndroidUserItemBuffer[nItemPostion];

  00056	8b 45 e0	 mov	 eax, DWORD PTR _nItemPostion$9[ebp]
  00059	50		 push	 eax
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  00063	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	89 4d e8	 mov	 DWORD PTR _pAndroidUserItem$[ebp], ecx

; 1127 : 
; 1128 : 		//删除数组
; 1129 : 		m_AndroidUserItemBuffer.RemoveAt(nItemPostion);

  0006d	6a 01		 push	 1
  0006f	8b 45 e0	 mov	 eax, DWORD PTR _nItemPostion$9[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  0007c	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAt
$LN2@ActiveAndr:

; 1130 : 	}
; 1131 : 
; 1132 : 	//创建对象
; 1133 : 	if (pAndroidUserItem==NULL)

  00081	83 7d e8 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  00085	0f 85 c1 02 00
	00		 jne	 $LN27@ActiveAndr

; 1134 : 	{
; 1135 : 		//数目判断
; 1136 : 		if (m_AndroidUserItemArray.GetCount()>=MAX_ANDROID)

  0008b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00094	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  00099	3d 00 08 00 00	 cmp	 eax, 2048		; 00000800H
  0009e	7c 24		 jl	 SHORT $LN4@ActiveAndr

; 1137 : 		{
; 1138 : 			ASSERT(FALSE);

  000a0	33 c0		 xor	 eax, eax
  000a2	75 19		 jne	 SHORT $LN20@ActiveAndr
  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  000aa	83 c1 16	 add	 ecx, 22			; 00000016H
  000ad	51		 push	 ecx
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b8	85 c0		 test	 eax, eax
  000ba	74 01		 je	 SHORT $LN20@ActiveAndr
  000bc	cc		 int	 3
$LN20@ActiveAndr:

; 1139 : 			return NULL;

  000bd	33 c0		 xor	 eax, eax
  000bf	e9 58 03 00 00	 jmp	 $LN1@ActiveAndr
$LN4@ActiveAndr:

; 1140 : 		}
; 1141 : 
; 1142 : 		try

  000c4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1143 : 		{
; 1144 : 			//变量定义
; 1145 : 			IAndroidUserItemSink * pIAndroidUserItemSink=NULL;

  000cb	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0

; 1146 : 			
; 1147 : 			//创建陪玩
; 1148 : 			if (CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule)==true)

  000d2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d5	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  000db	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  000e4	83 c4 04	 add	 esp, 4
  000e7	88 45 83	 mov	 BYTE PTR tv290[ebp], al
  000ea	0f b6 45 83	 movzx	 eax, BYTE PTR tv290[ebp]
  000ee	83 f8 01	 cmp	 eax, 1
  000f1	75 2c		 jne	 SHORT $LN6@ActiveAndr

; 1149 : 			{
; 1150 : 				pIAndroidUserItemSink=(IAndroidUserItemSink *)m_pIGameServiceManager->CreateAndroidUserItemSink(IID_IAndroidUserItemSink,VER_IAndroidUserItemSink);

  000f3	68 00 01 01 06	 push	 100729088		; 06010100H
  000f8	68 00 00 00 00	 push	 OFFSET ?IID_IAndroidUserItemSink@@3U_GUID@@B
  000fd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	8b 91 10 60 01
	00		 mov	 edx, DWORD PTR [ecx+90128]
  00109	8b 12		 mov	 edx, DWORD PTR [edx]
  0010b	8b 88 10 60 01
	00		 mov	 ecx, DWORD PTR [eax+90128]
  00111	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00114	ff d0		 call	 eax
  00116	89 45 80	 mov	 DWORD PTR tv291[ebp], eax
  00119	8b 4d 80	 mov	 ecx, DWORD PTR tv291[ebp]
  0011c	89 4d dc	 mov	 DWORD PTR _pIAndroidUserItemSink$8[ebp], ecx
$LN6@ActiveAndr:

; 1151 : 			}
; 1152 : 
; 1153 : 			//创建对象
; 1154 : 			try

  0011f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 1155 : 			{
; 1156 : 				pAndroidUserItem=new CAndroidUserItem;

  00123	68 80 00 00 00	 push	 128			; 00000080H
  00128	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0012d	83 c4 04	 add	 esp, 4
  00130	89 45 80	 mov	 DWORD PTR tv292[ebp], eax
  00133	8b 45 80	 mov	 eax, DWORD PTR tv292[ebp]
  00136	89 45 88	 mov	 DWORD PTR $T3[ebp], eax
  00139	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0013d	83 7d 88 00	 cmp	 DWORD PTR $T3[ebp], 0
  00141	74 1c		 je	 SHORT $LN21@ActiveAndr
  00143	8b 4d 88	 mov	 ecx, DWORD PTR $T3[ebp]
  00146	e8 00 00 00 00	 call	 ??0CAndroidUserItem@@QAE@XZ ; CAndroidUserItem::CAndroidUserItem
  0014b	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv295[ebp], eax
  00151	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv295[ebp]
  00157	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv148[ebp], ecx
  0015d	eb 0a		 jmp	 SHORT $LN22@ActiveAndr
$LN21@ActiveAndr:
  0015f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN22@ActiveAndr:
  00169	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv148[ebp]
  0016f	89 55 8c	 mov	 DWORD PTR $T4[ebp], edx
  00172	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00176	8b 45 8c	 mov	 eax, DWORD PTR $T4[ebp]
  00179	89 45 e8	 mov	 DWORD PTR _pAndroidUserItem$[ebp], eax

; 1157 : 			}

  0017c	eb 41		 jmp	 SHORT $LN28@ActiveAndr
__catch$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$0:

; 1158 : 			catch (...)
; 1159 : 			{
; 1160 : 				//错误断言
; 1161 : 				ASSERT(FALSE);

  0017e	33 c0		 xor	 eax, eax
  00180	75 1e		 jne	 SHORT $LN23@ActiveAndr
  00182	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  00188	83 c1 2d	 add	 ecx, 45			; 0000002dH
  0018b	51		 push	 ecx
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00191	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00196	89 45 80	 mov	 DWORD PTR tv296[ebp], eax
  00199	83 7d 80 00	 cmp	 DWORD PTR tv296[ebp], 0
  0019d	74 01		 je	 SHORT $LN23@ActiveAndr
  0019f	cc		 int	 3
$LN23@ActiveAndr:

; 1162 : 
; 1163 : 				//删除对象
; 1164 : 				SafeRelease(pIAndroidUserItemSink);

  001a0	83 7d dc 00	 cmp	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
  001a4	74 13		 je	 SHORT $LN8@ActiveAndr
  001a6	8b 45 dc	 mov	 eax, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  001a9	8b 10		 mov	 edx, DWORD PTR [eax]
  001ab	8b 4d dc	 mov	 ecx, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  001ae	8b 02		 mov	 eax, DWORD PTR [edx]
  001b0	ff d0		 call	 eax
  001b2	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
$LN8@ActiveAndr:

; 1165 : 			}

  001b9	b8 00 00 00 00	 mov	 eax, $LN33@ActiveAndr
  001be	c3		 ret	 0
$LN28@ActiveAndr:
  001bf	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  001c6	eb 07		 jmp	 SHORT __tryend$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$1
$LN33@ActiveAndr:
  001c8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$1:

; 1166 : 
; 1167 : 			//错误判断
; 1168 : 			if (pAndroidUserItem==NULL)

  001cf	83 7d e8 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  001d3	75 42		 jne	 SHORT $LN9@ActiveAndr

; 1169 : 			{
; 1170 : 				//错误断言
; 1171 : 				ASSERT(FALSE);

  001d5	33 c0		 xor	 eax, eax
  001d7	75 1e		 jne	 SHORT $LN24@ActiveAndr
  001d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  001df	83 c1 37	 add	 ecx, 55			; 00000037H
  001e2	51		 push	 ecx
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001e8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001ed	89 45 80	 mov	 DWORD PTR tv297[ebp], eax
  001f0	83 7d 80 00	 cmp	 DWORD PTR tv297[ebp], 0
  001f4	74 01		 je	 SHORT $LN24@ActiveAndr
  001f6	cc		 int	 3
$LN24@ActiveAndr:

; 1172 : 
; 1173 : 				//删除对象
; 1174 : 				SafeRelease(pIAndroidUserItemSink);

  001f7	83 7d dc 00	 cmp	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
  001fb	74 13		 je	 SHORT $LN10@ActiveAndr
  001fd	8b 45 dc	 mov	 eax, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  00200	8b 10		 mov	 edx, DWORD PTR [eax]
  00202	8b 4d dc	 mov	 ecx, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  00205	8b 02		 mov	 eax, DWORD PTR [edx]
  00207	ff d0		 call	 eax
  00209	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
$LN10@ActiveAndr:

; 1175 : 
; 1176 : 				return NULL;

  00210	33 c0		 xor	 eax, eax
  00212	e9 05 02 00 00	 jmp	 $LN1@ActiveAndr
$LN9@ActiveAndr:

; 1177 : 			}
; 1178 : 
; 1179 : 			//设置用户
; 1180 : 			if ((pIAndroidUserItemSink!=NULL)&&(pIAndroidUserItemSink->Initialization(pAndroidUserItem)==false))

  00217	83 7d dc 00	 cmp	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
  0021b	74 77		 je	 SHORT $LN11@ActiveAndr
  0021d	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00220	50		 push	 eax
  00221	8b 4d dc	 mov	 ecx, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  00224	8b 11		 mov	 edx, DWORD PTR [ecx]
  00226	8b 4d dc	 mov	 ecx, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  00229	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0022c	ff d0		 call	 eax
  0022e	88 45 83	 mov	 BYTE PTR tv298[ebp], al
  00231	0f b6 4d 83	 movzx	 ecx, BYTE PTR tv298[ebp]
  00235	85 c9		 test	 ecx, ecx
  00237	75 5b		 jne	 SHORT $LN11@ActiveAndr

; 1181 : 			{
; 1182 : 				//错误断言
; 1183 : 				ASSERT(FALSE);

  00239	33 c0		 xor	 eax, eax
  0023b	75 1e		 jne	 SHORT $LN25@ActiveAndr
  0023d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  00243	83 c1 43	 add	 ecx, 67			; 00000043H
  00246	51		 push	 ecx
  00247	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0024c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00251	89 45 80	 mov	 DWORD PTR tv299[ebp], eax
  00254	83 7d 80 00	 cmp	 DWORD PTR tv299[ebp], 0
  00258	74 01		 je	 SHORT $LN25@ActiveAndr
  0025a	cc		 int	 3
$LN25@ActiveAndr:

; 1184 : 
; 1185 : 				//删除对象
; 1186 : 				SafeRelease(pAndroidUserItem);

  0025b	83 7d e8 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  0025f	74 13		 je	 SHORT $LN12@ActiveAndr
  00261	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00264	8b 10		 mov	 edx, DWORD PTR [eax]
  00266	8b 4d e8	 mov	 ecx, DWORD PTR _pAndroidUserItem$[ebp]
  00269	8b 02		 mov	 eax, DWORD PTR [edx]
  0026b	ff d0		 call	 eax
  0026d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$[ebp], 0
$LN12@ActiveAndr:

; 1187 : 				SafeRelease(pIAndroidUserItemSink);

  00274	83 7d dc 00	 cmp	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
  00278	74 13		 je	 SHORT $LN13@ActiveAndr
  0027a	8b 45 dc	 mov	 eax, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  0027d	8b 10		 mov	 edx, DWORD PTR [eax]
  0027f	8b 4d dc	 mov	 ecx, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  00282	8b 02		 mov	 eax, DWORD PTR [edx]
  00284	ff d0		 call	 eax
  00286	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pIAndroidUserItemSink$8[ebp], 0
$LN13@ActiveAndr:

; 1188 : 
; 1189 : 				return NULL;

  0028d	33 c0		 xor	 eax, eax
  0028f	e9 88 01 00 00	 jmp	 $LN1@ActiveAndr
$LN11@ActiveAndr:

; 1190 : 			}
; 1191 : 
; 1192 : 			//设置数组
; 1193 : 			WORD wCurrentIndex=(WORD)m_AndroidUserItemArray.Add(pAndroidUserItem);

  00294	8d 45 e8	 lea	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00297	50		 push	 eax
  00298	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  002a1	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEHABQAVCAndroidUserItem@@@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::Add
  002a6	89 45 80	 mov	 DWORD PTR tv300[ebp], eax
  002a9	66 8b 4d 80	 mov	 cx, WORD PTR tv300[ebp]
  002ad	66 89 4d d8	 mov	 WORD PTR _wCurrentIndex$7[ebp], cx

; 1194 : 
; 1195 : 			//配置变量
; 1196 : 			pAndroidUserItem->m_dwMinSitInterval=m_dwMinSitInterval;

  002b1	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  002b4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002b7	8b 91 24 60 01
	00		 mov	 edx, DWORD PTR [ecx+90148]
  002bd	89 50 64	 mov	 DWORD PTR [eax+100], edx

; 1197 : 			pAndroidUserItem->m_dwMaxSitInterval=m_dwMaxSitInterval;

  002c0	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  002c3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002c6	8b 91 28 60 01
	00		 mov	 edx, DWORD PTR [ecx+90152]
  002cc	89 50 68	 mov	 DWORD PTR [eax+104], edx

; 1198 : 
; 1199 : 			//设置接口
; 1200 : 			pAndroidUserItem->m_wAndroidIndex=wCurrentIndex+INDEX_ANDROID;

  002cf	0f b7 45 d8	 movzx	 eax, WORD PTR _wCurrentIndex$7[ebp]
  002d3	05 00 20 00 00	 add	 eax, 8192		; 00002000H
  002d8	8b 4d e8	 mov	 ecx, DWORD PTR _pAndroidUserItem$[ebp]
  002db	66 89 41 4e	 mov	 WORD PTR [ecx+78], ax

; 1201 : 			pAndroidUserItem->m_pIServerUserManager=m_pIServerUserManager;

  002df	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  002e2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002e5	8b 91 0c 60 01
	00		 mov	 edx, DWORD PTR [ecx+90124]
  002eb	89 50 74	 mov	 DWORD PTR [eax+116], edx

; 1202 : 			pAndroidUserItem->m_pIAndroidUserItemSink=pIAndroidUserItemSink;

  002ee	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  002f1	8b 4d dc	 mov	 ecx, DWORD PTR _pIAndroidUserItemSink$8[ebp]
  002f4	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 1203 : 			pAndroidUserItem->m_pIAndroidUserManager=QUERY_ME_INTERFACE(IAndroidUserManager);

  002f7	68 00 01 01 06	 push	 100729088		; 06010100H
  002fc	68 00 00 00 00	 push	 OFFSET ?IID_IAndroidUserManager@@3U_GUID@@B
  00301	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00304	8b 10		 mov	 edx, DWORD PTR [eax]
  00306	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00309	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0030c	ff d0		 call	 eax
  0030e	89 45 80	 mov	 DWORD PTR tv302[ebp], eax
  00311	8b 4d e8	 mov	 ecx, DWORD PTR _pAndroidUserItem$[ebp]
  00314	8b 55 80	 mov	 edx, DWORD PTR tv302[ebp]
  00317	89 51 78	 mov	 DWORD PTR [ecx+120], edx

; 1204 : 		}

  0031a	eb 30		 jmp	 SHORT $LN27@ActiveAndr
__catch$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$2:

; 1205 : 		catch (...) 
; 1206 : 		{ 
; 1207 : 			ASSERT(FALSE);

  0031c	33 c0		 xor	 eax, eax
  0031e	75 19		 jne	 SHORT $LN26@ActiveAndr
  00320	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  00326	83 c1 5b	 add	 ecx, 91			; 0000005bH
  00329	51		 push	 ecx
  0032a	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0032f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00334	85 c0		 test	 eax, eax
  00336	74 01		 je	 SHORT $LN26@ActiveAndr
  00338	cc		 int	 3
$LN26@ActiveAndr:

; 1208 : 			return NULL; 

  00339	c7 45 84 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00340	b8 00 00 00 00	 mov	 eax, $LN35@ActiveAndr
  00345	c3		 ret	 0

; 1209 : 		}

  00346	b8 00 00 00 00	 mov	 eax, $LN27@ActiveAndr
  0034b	c3		 ret	 0
$LN27@ActiveAndr:
  0034c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00353	eb 0f		 jmp	 SHORT $LN34@ActiveAndr
$LN35@ActiveAndr:
  00355	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 1208 : 			return NULL; 

  0035c	8b 45 84	 mov	 eax, DWORD PTR $T2[ebp]
  0035f	e9 b8 00 00 00	 jmp	 $LN1@ActiveAndr
$LN34@ActiveAndr:

; 1210 : 	}
; 1211 : 
; 1212 : 	//游戏局数
; 1213 : 	if((AndroidItemConfig.pAndroidParameter->dwSwitchMinInnings!=0L)&&(AndroidItemConfig.pAndroidParameter->dwSwitchMaxInnings!=0L))

  00364	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00367	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0036a	83 79 34 00	 cmp	 DWORD PTR [ecx+52], 0
  0036e	74 52		 je	 SHORT $LN14@ActiveAndr
  00370	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00373	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00376	83 79 38 00	 cmp	 DWORD PTR [ecx+56], 0
  0037a	74 46		 je	 SHORT $LN14@ActiveAndr

; 1214 : 	{
; 1215 : 		//变量定义
; 1216 : 		DWORD dwSwitchMinInnings=AndroidItemConfig.pAndroidParameter->dwSwitchMinInnings;

  0037c	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  0037f	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00382	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00385	89 55 d4	 mov	 DWORD PTR _dwSwitchMinInnings$6[ebp], edx

; 1217 : 		DWORD dwSwitchMaxInnings=AndroidItemConfig.pAndroidParameter->dwSwitchMaxInnings;

  00388	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  0038b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0038e	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00391	89 55 d0	 mov	 DWORD PTR _dwSwitchMaxInnings$5[ebp], edx

; 1218 : 
; 1219 : 		//调整局数
; 1220 : 		if ((dwSwitchMaxInnings-dwSwitchMinInnings)>0L)

  00394	8b 45 d0	 mov	 eax, DWORD PTR _dwSwitchMaxInnings$5[ebp]
  00397	2b 45 d4	 sub	 eax, DWORD PTR _dwSwitchMinInnings$6[ebp]
  0039a	74 1b		 je	 SHORT $LN16@ActiveAndr

; 1221 : 			pAndroidUserItem->m_AndroidService.dwSwitchTableInnings=dwSwitchMinInnings+rand()%(dwSwitchMaxInnings-dwSwitchMinInnings);

  0039c	8b 75 d0	 mov	 esi, DWORD PTR _dwSwitchMaxInnings$5[ebp]
  0039f	2b 75 d4	 sub	 esi, DWORD PTR _dwSwitchMinInnings$6[ebp]
  003a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  003a8	33 d2		 xor	 edx, edx
  003aa	f7 f6		 div	 esi
  003ac	03 55 d4	 add	 edx, DWORD PTR _dwSwitchMinInnings$6[ebp]
  003af	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  003b2	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 1222 : 		else

  003b5	eb 09		 jmp	 SHORT $LN17@ActiveAndr
$LN16@ActiveAndr:

; 1223 : 			pAndroidUserItem->m_AndroidService.dwSwitchTableInnings=dwSwitchMinInnings;

  003b7	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  003ba	8b 4d d4	 mov	 ecx, DWORD PTR _dwSwitchMinInnings$6[ebp]
  003bd	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN17@ActiveAndr:

; 1224 : 	}
; 1225 : 	else

  003c0	eb 0a		 jmp	 SHORT $LN15@ActiveAndr
$LN14@ActiveAndr:

; 1226 : 		pAndroidUserItem->m_AndroidService.dwSwitchTableInnings=0;

  003c2	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  003c5	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN15@ActiveAndr:

; 1227 : 
; 1228 : 	//服务类型
; 1229 : 	if(pAndroidUserItem->m_pIAndroidUserItemSink==NULL && (AndroidItemConfig.pAndroidParameter->dwServiceMode&ANDROID_SIMULATE)!=0)

  003cc	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  003cf	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  003d3	75 1b		 jne	 SHORT $LN18@ActiveAndr
  003d5	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  003d8	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  003db	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  003de	83 e2 01	 and	 edx, 1
  003e1	74 0d		 je	 SHORT $LN18@ActiveAndr

; 1230 : 		AndroidItemConfig.pAndroidParameter->dwServiceMode=ANDROID_SIMULATE;		

  003e3	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  003e6	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  003e9	c7 41 04 01 00
	00 00		 mov	 DWORD PTR [ecx+4], 1
$LN18@ActiveAndr:

; 1231 : 
; 1232 : 	//设置变量
; 1233 : 	pAndroidUserItem->m_AndroidItemConfig=AndroidItemConfig;

  003f0	8b 7d e8	 mov	 edi, DWORD PTR _pAndroidUserItem$[ebp]
  003f3	83 c7 20	 add	 edi, 32			; 00000020H
  003f6	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  003fb	8b 75 08	 mov	 esi, DWORD PTR _AndroidItemConfig$[ebp]
  003fe	f3 a5		 rep movsd

; 1234 : 
; 1235 : 	//设置索引
; 1236 : 	m_AndroidUserItemMap[AndroidItemConfig.AndroidAccountsInfo.dwUserID]=pAndroidUserItem;

  00400	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00403	8b 08		 mov	 ecx, DWORD PTR [eax]
  00405	51		 push	 ecx
  00406	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00409	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0040f	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEAAPAVCAndroidUserItem@@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::operator[]
  00414	8b 55 e8	 mov	 edx, DWORD PTR _pAndroidUserItem$[ebp]
  00417	89 10		 mov	 DWORD PTR [eax], edx

; 1237 : 
; 1238 : 	return pAndroidUserItem;

  00419	8b 45 e8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
$LN1@ActiveAndr:

; 1239 : }

  0041c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0041f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00426	59		 pop	 ecx
  00427	5f		 pop	 edi
  00428	5e		 pop	 esi
  00429	5b		 pop	 ebx
  0042a	8b e5		 mov	 esp, ebp
  0042c	5d		 pop	 ebp
  0042d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$4:
  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	8b 45 88	 mov	 eax, DWORD PTR $T3[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 74 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-140]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z ENDP ; CAndroidUserManager::ActiveAndroidUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z
_TEXT	SEGMENT
_pAndroidUserItem$ = -12				; size = 4
_wBufferIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_wIndex$ = 8						; size = 2
?GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z PROC ; CAndroidUserManager::GetAndroidUserItem, COMDAT
; _this$ = ecx

; 950  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 951  : 	//效验索引
; 952  : 	ASSERT(wIndex>=INDEX_ANDROID);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  00010	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00015	7d 19		 jge	 SHORT $LN5@GetAndroid
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z@4JA
  0001d	83 c1 02	 add	 ecx, 2
  00020	51		 push	 ecx
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00026	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002b	85 c0		 test	 eax, eax
  0002d	74 01		 je	 SHORT $LN5@GetAndroid
  0002f	cc		 int	 3
$LN5@GetAndroid:

; 953  : 	if (wIndex<INDEX_ANDROID) return NULL;

  00030	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  00034	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  00039	7d 04		 jge	 SHORT $LN2@GetAndroid
  0003b	33 c0		 xor	 eax, eax
  0003d	eb 7c		 jmp	 SHORT $LN1@GetAndroid
$LN2@GetAndroid:

; 954  : 
; 955  : 	//效验索引
; 956  : 	ASSERT((wIndex-INDEX_ANDROID)<m_AndroidUserItemArray.GetCount());

  0003f	0f b7 75 08	 movzx	 esi, WORD PTR _wIndex$[ebp]
  00043	81 ee 00 20 00
	00		 sub	 esi, 8192		; 00002000H
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00052	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  00057	3b f0		 cmp	 esi, eax
  00059	7c 18		 jl	 SHORT $LN6@GetAndroid
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z@4JA
  00060	83 c0 06	 add	 eax, 6
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00069	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006e	85 c0		 test	 eax, eax
  00070	74 01		 je	 SHORT $LN6@GetAndroid
  00072	cc		 int	 3
$LN6@GetAndroid:

; 957  : 	if (((wIndex-INDEX_ANDROID)>=m_AndroidUserItemArray.GetCount())) return NULL;

  00073	0f b7 75 08	 movzx	 esi, WORD PTR _wIndex$[ebp]
  00077	81 ee 00 20 00
	00		 sub	 esi, 8192		; 00002000H
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00086	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  0008b	3b f0		 cmp	 esi, eax
  0008d	7c 04		 jl	 SHORT $LN3@GetAndroid
  0008f	33 c0		 xor	 eax, eax
  00091	eb 28		 jmp	 SHORT $LN1@GetAndroid
$LN3@GetAndroid:

; 958  : 
; 959  : 	//获取对象
; 960  : 	WORD wBufferIndex=wIndex-INDEX_ANDROID;

  00093	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  00097	2d 00 20 00 00	 sub	 eax, 8192		; 00002000H
  0009c	66 89 45 f8	 mov	 WORD PTR _wBufferIndex$[ebp], ax

; 961  : 	CAndroidUserItem * pAndroidUserItem=m_AndroidUserItemArray[wBufferIndex];

  000a0	0f b7 45 f8	 movzx	 eax, WORD PTR _wBufferIndex$[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  000ae	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	89 4d f4	 mov	 DWORD PTR _pAndroidUserItem$[ebp], ecx

; 962  : 
; 963  : 	return pAndroidUserItem;

  000b8	8b 45 f4	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
$LN1@GetAndroid:

; 964  : }

  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 04 00	 ret	 4
?GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z ENDP ; CAndroidUserManager::GetAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z
_TEXT	SEGMENT
_pAndroidUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z PROC	; CAndroidUserManager::FreeAndroidUserItem, COMDAT
; _this$ = ecx

; 968  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 969  : 	//效验参数
; 970  : 	ASSERT(dwUserID!=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _dwUserID$[ebp], 0
  00010	75 18		 jne	 SHORT $LN5@FreeAndroi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN5@FreeAndroi
  00029	cc		 int	 3
$LN5@FreeAndroi:

; 971  : 	if (dwUserID==0) return;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _dwUserID$[ebp], 0
  0002e	75 02		 jne	 SHORT $LN2@FreeAndroi
  00030	eb 6e		 jmp	 SHORT $LN1@FreeAndroi
$LN2@FreeAndroi:

; 972  : 
; 973  : 	//变量定义
; 974  : 	CAndroidUserItem * pAndroidUserItem=NULL;

  00032	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$[ebp], 0

; 975  : 	m_AndroidUserItemMap.Lookup(dwUserID,pAndroidUserItem);

  00039	8d 45 f8	 lea	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0004a	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Lookup

; 976  : 
; 977  : 	//对象判断
; 978  : 	if (pAndroidUserItem==NULL)

  0004f	83 7d f8 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  00053	75 1f		 jne	 SHORT $LN3@FreeAndroi

; 979  : 	{
; 980  : 		ASSERT(FALSE);

  00055	33 c0		 xor	 eax, eax
  00057	75 19		 jne	 SHORT $LN6@FreeAndroi
  00059	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z@4JA
  0005f	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00062	51		 push	 ecx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00068	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006d	85 c0		 test	 eax, eax
  0006f	74 01		 je	 SHORT $LN6@FreeAndroi
  00071	cc		 int	 3
$LN6@FreeAndroi:

; 981  : 		return;

  00072	eb 2c		 jmp	 SHORT $LN1@FreeAndroi
$LN3@FreeAndroi:

; 982  : 	}
; 983  : 
; 984  : 	//复位对象
; 985  : 	pAndroidUserItem->RepositUserItem();

  00074	8b 4d f8	 mov	 ecx, DWORD PTR _pAndroidUserItem$[ebp]
  00077	e8 00 00 00 00	 call	 ?RepositUserItem@CAndroidUserItem@@QAEXXZ ; CAndroidUserItem::RepositUserItem

; 986  : 
; 987  : 	//设置索引
; 988  : 	m_AndroidUserItemMap.RemoveKey(dwUserID);

  0007c	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00089	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveKey

; 989  : 	m_AndroidUserItemBuffer.Add(pAndroidUserItem);

  0008e	8d 45 f8	 lea	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00091	50		 push	 eax
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  0009b	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEHABQAVCAndroidUserItem@@@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::Add
$LN1@FreeAndroi:

; 990  : 
; 991  : 	return;
; 992  : }

  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 04 00	 ret	 4
?FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z ENDP	; CAndroidUserManager::FreeAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z
_TEXT	SEGMENT
tv147 = -97						; size = 1
$T2 = -96						; size = 4
_str$3 = -28						; size = 4
_Command$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_dwAndroidID$ = 8					; size = 4
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z PROC ; CAndroidUserManager::SendDataToServer, COMDAT
; _this$ = ecx

; 921  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 922  : 	//构造数据
; 923  : 	TCP_Command Command;
; 924  : 	Command.wSubCmdID=wSubCmdID;

  0002f	66 8b 45 10	 mov	 ax, WORD PTR _wSubCmdID$[ebp]
  00033	66 89 45 ea	 mov	 WORD PTR _Command$[ebp+2], ax

; 925  : 	Command.wMainCmdID=wMainCmdID;

  00037	66 8b 45 0c	 mov	 ax, WORD PTR _wMainCmdID$[ebp]
  0003b	66 89 45 e8	 mov	 WORD PTR _Command$[ebp], ax

; 926  : 
; 927  : 	//消息处理
; 928  : 	try

  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 929  : 	{
; 930  : 		if (m_pITCPNetworkEngineEvent->OnEventTCPNetworkRead(dwAndroidID,Command,pData,wDataSize)==false)

  00046	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 55 e8	 mov	 edx, DWORD PTR _Command$[ebp]
  00052	52		 push	 edx
  00053	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00056	50		 push	 eax
  00057	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 82 18 60 01
	00		 mov	 eax, DWORD PTR [edx+90136]
  00063	8b 10		 mov	 edx, DWORD PTR [eax]
  00065	8b 89 18 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90136]
  0006b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0006e	ff d0		 call	 eax
  00070	88 45 9f	 mov	 BYTE PTR tv147[ebp], al
  00073	0f b6 4d 9f	 movzx	 ecx, BYTE PTR tv147[ebp]
  00077	85 c9		 test	 ecx, ecx
  00079	75 15		 jne	 SHORT $LN3@SendDataTo

; 931  : 		{
; 932  : 			throw 0;

  0007b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00082	68 00 00 00 00	 push	 OFFSET __TI1H
  00087	8d 45 a0	 lea	 eax, DWORD PTR $T2[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@SendDataTo:

; 933  : 		}
; 934  : 	}

  00090	e9 81 00 00 00	 jmp	 $LN6@SendDataTo
__catch$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$0:

; 935  : 	catch (...) 
; 936  : 	{
; 937  : 		CString str;

  00095	8d 4d e4	 lea	 ecx, DWORD PTR _str$3[ebp]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0009e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 938  : 		str.Format(TEXT("SendDataToServer: MainID=%d,SubID=%d"),Command.wMainCmdID,Command.wSubCmdID);

  000a2	0f b7 45 ea	 movzx	 eax, WORD PTR _Command$[ebp+2]
  000a6	50		 push	 eax
  000a7	0f b7 4d e8	 movzx	 ecx, WORD PTR _Command$[ebp]
  000ab	51		 push	 ecx
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@PMKCNPKJ@SendDataToServer?3?5MainID?$DN?$CFd?0Sub@
  000b1	8d 55 e4	 lea	 edx, DWORD PTR _str$3[ebp]
  000b4	52		 push	 edx
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000bb	83 c4 10	 add	 esp, 16			; 00000010H

; 939  : 		CTraceService::TraceString(str,TraceLevel_Exception);

  000be	6a 03		 push	 3
  000c0	8d 4d e4	 lea	 ecx, DWORD PTR _str$3[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  000c9	50		 push	 eax
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  000d0	83 c4 08	 add	 esp, 8

; 940  : 
; 941  : 		ASSERT(FALSE);

  000d3	33 c0		 xor	 eax, eax
  000d5	75 19		 jne	 SHORT $LN5@SendDataTo
  000d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA
  000dd	83 c1 14	 add	 ecx, 20			; 00000014H
  000e0	51		 push	 ecx
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000e6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000eb	85 c0		 test	 eax, eax
  000ed	74 01		 je	 SHORT $LN5@SendDataTo
  000ef	cc		 int	 3
$LN5@SendDataTo:

; 942  : 		DeleteAndroidUserItem(dwAndroidID,true);

  000f0	6a 01		 push	 1
  000f2	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00101	ff d0		 call	 eax

; 943  : 	}

  00103	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00107	8d 4d e4	 lea	 ecx, DWORD PTR _str$3[ebp]
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00110	b8 00 00 00 00	 mov	 eax, $LN10@SendDataTo
  00115	c3		 ret	 0
$LN6@SendDataTo:
  00116	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0011d	eb 07		 jmp	 SHORT __tryend$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$1
$LN10@SendDataTo:
  0011f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$1:

; 944  : 
; 945  : 	return true;

  00126	b0 01		 mov	 al, 1
$LN4@SendDataTo:

; 946  : }

  00128	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0012b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00132	59		 pop	 ecx
  00133	5f		 pop	 edi
  00134	5e		 pop	 esi
  00135	5b		 pop	 ebx
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z$2:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _str$3[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SendDataToServer@CAndroidUserManager@@UAE_NKGGPAXG@Z ENDP ; CAndroidUserManager::SendDataToServer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z
_TEXT	SEGMENT
tv144 = -100						; size = 4
tv143 = -97						; size = 1
$T2 = -96						; size = 4
_pAndroidUserItem$ = -28				; size = 4
_wIndex$ = -24						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_dwAndroidID$ = 8					; size = 4
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z PROC ; CAndroidUserManager::SendDataToClient, COMDAT
; _this$ = ecx

; 892  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 893  : 	//获取对象
; 894  : 	WORD wIndex=LOWORD(dwAndroidID);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00032	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00037	66 89 45 e8	 mov	 WORD PTR _wIndex$[ebp], ax

; 895  : 	CAndroidUserItem * pAndroidUserItem=GetAndroidUserItem(wIndex);

  0003b	0f b7 45 e8	 movzx	 eax, WORD PTR _wIndex$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z ; CAndroidUserManager::GetAndroidUserItem
  00048	89 45 e4	 mov	 DWORD PTR _pAndroidUserItem$[ebp], eax

; 896  : 
; 897  : 	//对象效验
; 898  : 	//ASSERT((pAndroidUserItem!=NULL)&&(pAndroidUserItem->m_wRoundID==HIWORD(dwAndroidID)));
; 899  : 	if ((pAndroidUserItem==NULL)||(pAndroidUserItem->m_wRoundID!=HIWORD(dwAndroidID))) return false;

  0004b	83 7d e4 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  0004f	74 19		 je	 SHORT $LN3@SendDataTo
  00051	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00054	c1 e8 10	 shr	 eax, 16			; 00000010H
  00057	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0005c	0f b7 c8	 movzx	 ecx, ax
  0005f	8b 55 e4	 mov	 edx, DWORD PTR _pAndroidUserItem$[ebp]
  00062	0f b7 42 4c	 movzx	 eax, WORD PTR [edx+76]
  00066	3b c1		 cmp	 eax, ecx
  00068	74 07		 je	 SHORT $LN2@SendDataTo
$LN3@SendDataTo:
  0006a	32 c0		 xor	 al, al
  0006c	e9 ae 00 00 00	 jmp	 $LN6@SendDataTo
$LN2@SendDataTo:

; 900  : 
; 901  : 	//消息处理
; 902  : 	try

  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 903  : 	{
; 904  : 		if (pAndroidUserItem->OnSocketRead(wMainCmdID,wSubCmdID,pData,wDataSize)==false)

  00078	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0007c	50		 push	 eax
  0007d	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00080	51		 push	 ecx
  00081	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00085	52		 push	 edx
  00086	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d e4	 mov	 ecx, DWORD PTR _pAndroidUserItem$[ebp]
  0008e	e8 00 00 00 00	 call	 ?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z ; CAndroidUserItem::OnSocketRead
  00093	88 45 9f	 mov	 BYTE PTR tv143[ebp], al
  00096	0f b6 4d 9f	 movzx	 ecx, BYTE PTR tv143[ebp]
  0009a	85 c9		 test	 ecx, ecx
  0009c	75 37		 jne	 SHORT $LN5@SendDataTo

; 905  : 		{
; 906  : 			ASSERT(FALSE);

  0009e	33 c0		 xor	 eax, eax
  000a0	75 1e		 jne	 SHORT $LN7@SendDataTo
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA
  000a8	83 c1 0e	 add	 ecx, 14			; 0000000eH
  000ab	51		 push	 ecx
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b6	89 45 9c	 mov	 DWORD PTR tv144[ebp], eax
  000b9	83 7d 9c 00	 cmp	 DWORD PTR tv144[ebp], 0
  000bd	74 01		 je	 SHORT $LN7@SendDataTo
  000bf	cc		 int	 3
$LN7@SendDataTo:

; 907  : 			throw 0;

  000c0	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  000c7	68 00 00 00 00	 push	 OFFSET __TI1H
  000cc	8d 45 a0	 lea	 eax, DWORD PTR $T2[ebp]
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN5@SendDataTo:

; 908  : 		}
; 909  : 	}

  000d5	eb 36		 jmp	 SHORT $LN9@SendDataTo
__catch$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z$0:

; 910  : 	catch (...) 
; 911  : 	{
; 912  : 		ASSERT(FALSE);

  000d7	33 c0		 xor	 eax, eax
  000d9	75 19		 jne	 SHORT $LN8@SendDataTo
  000db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z@4JA
  000e1	83 c1 14	 add	 ecx, 20			; 00000014H
  000e4	51		 push	 ecx
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000ea	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ef	85 c0		 test	 eax, eax
  000f1	74 01		 je	 SHORT $LN8@SendDataTo
  000f3	cc		 int	 3
$LN8@SendDataTo:

; 913  : 		DeleteAndroidUserItem(dwAndroidID,true);

  000f4	6a 01		 push	 1
  000f6	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  000f9	50		 push	 eax
  000fa	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ff	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00105	ff d0		 call	 eax

; 914  : 	}

  00107	b8 00 00 00 00	 mov	 eax, $LN12@SendDataTo
  0010c	c3		 ret	 0
$LN9@SendDataTo:
  0010d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00114	eb 07		 jmp	 SHORT __tryend$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z$1
$LN12@SendDataTo:
  00116	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z$1:

; 915  : 
; 916  : 	return true;

  0011d	b0 01		 mov	 al, 1
$LN6@SendDataTo:

; 917  : }

  0011f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00122	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00129	59		 pop	 ecx
  0012a	5f		 pop	 edi
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SendDataToClient@CAndroidUserManager@@UAE_NKGGPAXG@Z ENDP ; CAndroidUserManager::SendDataToClient
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z
_TEXT	SEGMENT
tv150 = -105						; size = 1
$T2 = -104						; size = 4
_wAndroidIndex$3 = -36					; size = 2
_wRoundID$4 = -32					; size = 2
_pAndroidUserItem$5 = -28				; size = 4
_i$6 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_wMainCmdID$ = 8					; size = 2
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z PROC ; CAndroidUserManager::SendDataToClient, COMDAT
; _this$ = ecx

; 856  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 857  : 	//发送数据
; 858  : 	for (INT_PTR i=0;i<m_AndroidUserItemArray.GetCount();i++)

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  00036	eb 09		 jmp	 SHORT $LN4@SendDataTo
$LN2@SendDataTo:
  00038	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 e8	 mov	 DWORD PTR _i$6[ebp], eax
$LN4@SendDataTo:
  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  0004a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  0004f	39 45 e8	 cmp	 DWORD PTR _i$6[ebp], eax
  00052	0f 8d ed 00 00
	00		 jge	 $LN3@SendDataTo

; 859  : 	{
; 860  : 		//获取对象
; 861  : 		CAndroidUserItem * pAndroidUserItem=m_AndroidUserItemArray[i];

  00058	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00065	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d e4	 mov	 DWORD PTR _pAndroidUserItem$5[ebp], ecx

; 862  : 
; 863  : 		//状态判断
; 864  : 		if (pAndroidUserItem->m_pIServerUserItem==NULL) continue;

  0006f	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$5[ebp]
  00072	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00076	75 02		 jne	 SHORT $LN5@SendDataTo
  00078	eb be		 jmp	 SHORT $LN2@SendDataTo
$LN5@SendDataTo:

; 865  : 		if (pAndroidUserItem->m_AndroidItemConfig.AndroidAccountsInfo.dwUserID==0L) continue;

  0007a	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$5[ebp]
  0007d	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00081	75 02		 jne	 SHORT $LN6@SendDataTo
  00083	eb b3		 jmp	 SHORT $LN2@SendDataTo
$LN6@SendDataTo:

; 866  : 
; 867  : 		//消息处理
; 868  : 		try

  00085	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 869  : 		{
; 870  : 			if (pAndroidUserItem->OnSocketRead(wMainCmdID,wSubCmdID,pData,wDataSize)==false)

  0008c	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00090	50		 push	 eax
  00091	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00094	51		 push	 ecx
  00095	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00099	52		 push	 edx
  0009a	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0009e	50		 push	 eax
  0009f	8b 4d e4	 mov	 ecx, DWORD PTR _pAndroidUserItem$5[ebp]
  000a2	e8 00 00 00 00	 call	 ?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z ; CAndroidUserItem::OnSocketRead
  000a7	88 45 97	 mov	 BYTE PTR tv150[ebp], al
  000aa	0f b6 4d 97	 movzx	 ecx, BYTE PTR tv150[ebp]
  000ae	85 c9		 test	 ecx, ecx
  000b0	75 15		 jne	 SHORT $LN8@SendDataTo

; 871  : 			{
; 872  : 				throw 0;

  000b2	c7 45 98 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  000b9	68 00 00 00 00	 push	 OFFSET __TI1H
  000be	8d 45 98	 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN8@SendDataTo:

; 873  : 			}
; 874  : 		}

  000c7	eb 67		 jmp	 SHORT $LN11@SendDataTo
__catch$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z$0:

; 875  : 		catch (...) 
; 876  : 		{
; 877  : 			//错误断言
; 878  : 			ASSERT(FALSE);

  000c9	33 c0		 xor	 eax, eax
  000cb	75 19		 jne	 SHORT $LN10@SendDataTo
  000cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z@4JA
  000d3	83 c1 16	 add	 ecx, 22			; 00000016H
  000d6	51		 push	 ecx
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000dc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000e1	85 c0		 test	 eax, eax
  000e3	74 01		 je	 SHORT $LN10@SendDataTo
  000e5	cc		 int	 3
$LN10@SendDataTo:

; 879  : 
; 880  : 			//断开用户
; 881  : 			WORD wRoundID=pAndroidUserItem->m_wRoundID;

  000e6	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$5[ebp]
  000e9	66 8b 48 4c	 mov	 cx, WORD PTR [eax+76]
  000ed	66 89 4d e0	 mov	 WORD PTR _wRoundID$4[ebp], cx

; 882  : 			WORD wAndroidIndex=pAndroidUserItem->m_wAndroidIndex;

  000f1	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$5[ebp]
  000f4	66 8b 48 4e	 mov	 cx, WORD PTR [eax+78]
  000f8	66 89 4d dc	 mov	 WORD PTR _wAndroidIndex$3[ebp], cx

; 883  : 			DeleteAndroidUserItem(MAKELONG(wAndroidIndex,wRoundID),true);

  000fc	6a 01		 push	 1
  000fe	0f b7 45 e0	 movzx	 eax, WORD PTR _wRoundID$4[ebp]
  00102	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00107	0f b7 c8	 movzx	 ecx, ax
  0010a	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0010d	0f b7 55 dc	 movzx	 edx, WORD PTR _wAndroidIndex$3[ebp]
  00111	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00117	0f b7 c2	 movzx	 eax, dx
  0011a	0b c1		 or	 eax, ecx
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	8b 11		 mov	 edx, DWORD PTR [ecx]
  00122	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00128	ff d0		 call	 eax

; 884  : 		}

  0012a	b8 00 00 00 00	 mov	 eax, $LN14@SendDataTo
  0012f	c3		 ret	 0
$LN11@SendDataTo:
  00130	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00137	eb 07		 jmp	 SHORT __tryend$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z$1
$LN14@SendDataTo:
  00139	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z$1:

; 885  : 	}

  00140	e9 f3 fe ff ff	 jmp	 $LN2@SendDataTo
$LN3@SendDataTo:

; 886  : 
; 887  : 	return true;

  00145	b0 01		 mov	 al, 1
$LN9@SendDataTo:

; 888  : }

  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 90	 mov	 ecx, DWORD PTR [edx-112]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SendDataToClient@CAndroidUserManager@@UAE_NGGPAXG@Z ENDP ; CAndroidUserManager::SendDataToClient
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.h
;	COMDAT ?GetGameMatchOption@CAndroidUserManager@@UAEPAUtagGameMatchOption@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameMatchOption@CAndroidUserManager@@UAEPAUtagGameMatchOption@@XZ PROC ; CAndroidUserManager::GetGameMatchOption, COMDAT
; _this$ = ecx

; 136  : 	virtual tagGameMatchOption* GetGameMatchOption() { return m_pGameMatchOption; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 38 60 01
	00		 mov	 eax, DWORD PTR [eax+90168]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameMatchOption@CAndroidUserManager@@UAEPAUtagGameMatchOption@@XZ ENDP ; CAndroidUserManager::GetGameMatchOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.h
;	COMDAT ?GetGameServiceAttrib@CAndroidUserManager@@UAEPAUtagGameServiceAttrib@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameServiceAttrib@CAndroidUserManager@@UAEPAUtagGameServiceAttrib@@XZ PROC ; CAndroidUserManager::GetGameServiceAttrib, COMDAT
; _this$ = ecx

; 134  : 	virtual tagGameServiceAttrib* GetGameServiceAttrib() { return m_pGameServiceAttrib; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 30 60 01
	00		 mov	 eax, DWORD PTR [eax+90160]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameServiceAttrib@CAndroidUserManager@@UAEPAUtagGameServiceAttrib@@XZ ENDP ; CAndroidUserManager::GetGameServiceAttrib
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.h
;	COMDAT ?GetGameServiceOption@CAndroidUserManager@@UAEPAUtagGameServiceOption@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameServiceOption@CAndroidUserManager@@UAEPAUtagGameServiceOption@@XZ PROC ; CAndroidUserManager::GetGameServiceOption, COMDAT
; _this$ = ecx

; 132  : 	virtual tagGameServiceOption* GetGameServiceOption() { return m_pGameServiceOption; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 34 60 01
	00		 mov	 eax, DWORD PTR [eax+90164]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetGameServiceOption@CAndroidUserManager@@UAEPAUtagGameServiceOption@@XZ ENDP ; CAndroidUserManager::GetGameServiceOption
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z
_TEXT	SEGMENT
tv161 = -124						; size = 4
_dwCurrTime$1 = -56					; size = 4
_pAndroidParameter$2 = -52				; size = 4
_pIServerUserItem$3 = -48				; size = 4
_pAndroidUserItem$4 = -44				; size = 4
_dwUserID$5 = -40					; size = 4
_Position$ = -36					; size = 4
_dwTimeMask$ = -32					; size = 4
_dwTodayTickCount$ = -28				; size = 4
_SystemTime$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_AndroidUserInfo$ = 8					; size = 4
_dwServiceMode$ = 12					; size = 4
?GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z PROC ; CAndroidUserManager::GetAndroidUserInfo, COMDAT
; _this$ = ecx

; 780  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 781  : 	//获取时间
; 782  : 	SYSTEMTIME SystemTime;
; 783  : 	GetLocalTime(&SystemTime);

  00016	8d 45 e8	 lea	 eax, DWORD PTR _SystemTime$[ebp]
  00019	50		 push	 eax
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 784  : 	DWORD dwTodayTickCount= GetTodayTickCount(SystemTime);	

  00020	8d 45 e8	 lea	 eax, DWORD PTR _SystemTime$[ebp]
  00023	50		 push	 eax
  00024	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ; CAndroidUserManager::GetTodayTickCount
  0002c	89 45 e4	 mov	 DWORD PTR _dwTodayTickCount$[ebp], eax

; 785  : 
; 786  : 	//设置变量
; 787  : 	ZeroMemory(&AndroidUserInfo,sizeof(AndroidUserInfo));

  0002f	68 08 60 00 00	 push	 24584			; 00006008H
  00034	6a 00		 push	 0
  00036	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 _memset
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 788  : 
; 789  : 	//变量定义
; 790  : 	DWORD dwTimeMask=(1L<<SystemTime.wHour);

  00042	0f b7 4d f0	 movzx	 ecx, WORD PTR _SystemTime$[ebp+8]
  00046	b8 01 00 00 00	 mov	 eax, 1
  0004b	d3 e0		 shl	 eax, cl
  0004d	89 45 e0	 mov	 DWORD PTR _dwTimeMask$[ebp], eax

; 791  : 	POSITION Position=m_AndroidUserItemMap.GetStartPosition();

  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00059	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition
  0005e	89 45 dc	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@GetAndroid:

; 792  : 
; 793  : 	//枚举对象
; 794  : 	while (Position!=NULL)

  00061	83 7d dc 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00065	0f 84 0a 02 00
	00		 je	 $LN3@GetAndroid

; 795  : 	{
; 796  : 		//获取对象
; 797  : 		DWORD dwUserID=0L;

  0006b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _dwUserID$5[ebp], 0

; 798  : 		CAndroidUserItem * pAndroidUserItem=NULL;

  00072	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$4[ebp], 0

; 799  : 		m_AndroidUserItemMap.GetNextAssoc(Position,dwUserID,pAndroidUserItem);

  00079	8d 45 d4	 lea	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  0007c	50		 push	 eax
  0007d	8d 4d d8	 lea	 ecx, DWORD PTR _dwUserID$5[ebp]
  00080	51		 push	 ecx
  00081	8d 55 dc	 lea	 edx, DWORD PTR _Position$[ebp]
  00084	52		 push	 edx
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0008e	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc

; 800  : 
; 801  : 		//效验参数
; 802  : 		ASSERT((dwUserID!=0L)&&(pAndroidUserItem!=NULL));

  00093	83 7d d8 00	 cmp	 DWORD PTR _dwUserID$5[ebp], 0
  00097	74 06		 je	 SHORT $LN17@GetAndroid
  00099	83 7d d4 00	 cmp	 DWORD PTR _pAndroidUserItem$4[ebp], 0
  0009d	75 18		 jne	 SHORT $LN18@GetAndroid
$LN17@GetAndroid:
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA
  000a4	83 c0 16	 add	 eax, 22			; 00000016H
  000a7	50		 push	 eax
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000ad	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b2	85 c0		 test	 eax, eax
  000b4	74 01		 je	 SHORT $LN18@GetAndroid
  000b6	cc		 int	 3
$LN18@GetAndroid:

; 803  : 		if ((dwUserID==0L)||(pAndroidUserItem==NULL)) break;

  000b7	83 7d d8 00	 cmp	 DWORD PTR _dwUserID$5[ebp], 0
  000bb	74 06		 je	 SHORT $LN7@GetAndroid
  000bd	83 7d d4 00	 cmp	 DWORD PTR _pAndroidUserItem$4[ebp], 0
  000c1	75 05		 jne	 SHORT $LN6@GetAndroid
$LN7@GetAndroid:
  000c3	e9 ad 01 00 00	 jmp	 $LN3@GetAndroid
$LN6@GetAndroid:

; 804  : 
; 805  : 		//绑定判断
; 806  : 		if(pAndroidUserItem->m_pIServerUserItem==NULL) continue;

  000c8	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  000cb	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  000cf	75 02		 jne	 SHORT $LN8@GetAndroid
  000d1	eb 8e		 jmp	 SHORT $LN2@GetAndroid
$LN8@GetAndroid:

; 807  : 
; 808  : 		//变量定义
; 809  : 		IServerUserItem * pIServerUserItem=pAndroidUserItem->m_pIServerUserItem;

  000d3	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  000d6	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000d9	89 4d d0	 mov	 DWORD PTR _pIServerUserItem$3[ebp], ecx

; 810  : 		tagAndroidParameter * pAndroidParameter=pAndroidUserItem->GetAndroidParameter();

  000dc	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  000df	8b 10		 mov	 edx, DWORD PTR [eax]
  000e1	8b 4d d4	 mov	 ecx, DWORD PTR _pAndroidUserItem$4[ebp]
  000e4	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000e7	ff d0		 call	 eax
  000e9	89 45 cc	 mov	 DWORD PTR _pAndroidParameter$2[ebp], eax

; 811  : 
; 812  : 		//离开判断
; 813  : 		if (pAndroidUserItem->m_bWaitLeave) continue;

  000ec	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  000ef	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  000f3	85 c9		 test	 ecx, ecx
  000f5	74 05		 je	 SHORT $LN9@GetAndroid
  000f7	e9 65 ff ff ff	 jmp	 $LN2@GetAndroid
$LN9@GetAndroid:

; 814  : 
; 815  : 		//模式判断
; 816  : 		if ((pAndroidParameter->dwServiceMode&dwServiceMode)==0L) continue;		

  000fc	8b 45 cc	 mov	 eax, DWORD PTR _pAndroidParameter$2[ebp]
  000ff	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00102	23 4d 0c	 and	 ecx, DWORD PTR _dwServiceMode$[ebp]
  00105	75 05		 jne	 SHORT $LN10@GetAndroid
  00107	e9 55 ff ff ff	 jmp	 $LN2@GetAndroid
$LN10@GetAndroid:

; 817  : 
; 818  : 		//离开判断
; 819  : 		if (!m_bServiceContinue && BatchServiceRemaindTime(pAndroidParameter,dwTodayTickCount)==0) continue;

  0010c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	0f b6 88 20 60
	01 00		 movzx	 ecx, BYTE PTR [eax+90144]
  00116	85 c9		 test	 ecx, ecx
  00118	75 19		 jne	 SHORT $LN11@GetAndroid
  0011a	8b 45 e4	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  0011d	50		 push	 eax
  0011e	8b 4d cc	 mov	 ecx, DWORD PTR _pAndroidParameter$2[ebp]
  00121	51		 push	 ecx
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ; CAndroidUserManager::BatchServiceRemaindTime
  0012a	85 c0		 test	 eax, eax
  0012c	75 05		 jne	 SHORT $LN11@GetAndroid
  0012e	e9 2e ff ff ff	 jmp	 $LN2@GetAndroid
$LN11@GetAndroid:

; 820  : 
; 821  : 		//休息时间
; 822  : 		DWORD dwCurrTime=(DWORD)time(NULL);

  00133	6a 00		 push	 0
  00135	e8 00 00 00 00	 call	 _time
  0013a	83 c4 04	 add	 esp, 4
  0013d	89 45 c8	 mov	 DWORD PTR _dwCurrTime$1[ebp], eax

; 823  : 		if((pAndroidUserItem->m_dwStandupTickCount+pAndroidUserItem->m_dwReposeTickCount)>dwCurrTime) continue;

  00140	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  00143	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  00146	8b 55 d4	 mov	 edx, DWORD PTR _pAndroidUserItem$4[ebp]
  00149	03 4a 70	 add	 ecx, DWORD PTR [edx+112]
  0014c	3b 4d c8	 cmp	 ecx, DWORD PTR _dwCurrTime$1[ebp]
  0014f	76 05		 jbe	 SHORT $LN12@GetAndroid
  00151	e9 0b ff ff ff	 jmp	 $LN2@GetAndroid
$LN12@GetAndroid:

; 824  : 
; 825  : 		//状态判断
; 826  : 		switch (pIServerUserItem->GetUserStatus())

  00156	8b 45 d0	 mov	 eax, DWORD PTR _pIServerUserItem$3[ebp]
  00159	8b 10		 mov	 edx, DWORD PTR [eax]
  0015b	8b 4d d0	 mov	 ecx, DWORD PTR _pIServerUserItem$3[ebp]
  0015e	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00161	ff d0		 call	 eax
  00163	0f b6 c8	 movzx	 ecx, al
  00166	89 4d 84	 mov	 DWORD PTR tv161[ebp], ecx
  00169	8b 55 84	 mov	 edx, DWORD PTR tv161[ebp]
  0016c	83 ea 01	 sub	 edx, 1
  0016f	89 55 84	 mov	 DWORD PTR tv161[ebp], edx
  00172	83 7d 84 05	 cmp	 DWORD PTR tv161[ebp], 5
  00176	0f 87 f4 00 00
	00		 ja	 $LN4@GetAndroid
  0017c	8b 45 84	 mov	 eax, DWORD PTR tv161[ebp]
  0017f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN27@GetAndroid[eax*4]
$LN13@GetAndroid:

; 827  : 		{
; 828  : 		case US_FREE:
; 829  : 			{
; 830  : 				ASSERT(AndroidUserInfo.wFreeUserCount<CountArray(AndroidUserInfo.pIAndroidUserFree));

  00186	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  00189	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0018c	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  00192	72 19		 jb	 SHORT $LN19@GetAndroid
  00194	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA
  0019a	83 c2 32	 add	 edx, 50			; 00000032H
  0019d	52		 push	 edx
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001a3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001a8	85 c0		 test	 eax, eax
  001aa	74 01		 je	 SHORT $LN19@GetAndroid
  001ac	cc		 int	 3
$LN19@GetAndroid:

; 831  : 				AndroidUserInfo.pIAndroidUserFree[AndroidUserInfo.wFreeUserCount++]=pAndroidUserItem;

  001ad	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  001b0	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001b3	8b 55 08	 mov	 edx, DWORD PTR _AndroidUserInfo$[ebp]
  001b6	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  001b9	89 44 8a 08	 mov	 DWORD PTR [edx+ecx*4+8], eax
  001bd	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserInfo$[ebp]
  001c0	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001c3	66 83 c2 01	 add	 dx, 1
  001c7	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  001ca	66 89 10	 mov	 WORD PTR [eax], dx

; 832  : 				break;

  001cd	e9 9e 00 00 00	 jmp	 $LN4@GetAndroid
$LN14@GetAndroid:

; 833  : 			}
; 834  : 		case US_SIT:
; 835  : 		case US_READY:
; 836  : 			{
; 837  : 				ASSERT(AndroidUserInfo.wSitdownUserCount<CountArray(AndroidUserInfo.pIAndroidUserSitdown));

  001d2	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  001d5	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  001d9	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  001df	72 19		 jb	 SHORT $LN20@GetAndroid
  001e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA
  001e7	83 c2 39	 add	 edx, 57			; 00000039H
  001ea	52		 push	 edx
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001f0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001f5	85 c0		 test	 eax, eax
  001f7	74 01		 je	 SHORT $LN20@GetAndroid
  001f9	cc		 int	 3
$LN20@GetAndroid:

; 838  : 				AndroidUserInfo.pIAndroidUserSitdown[AndroidUserInfo.wSitdownUserCount++]=pAndroidUserItem;

  001fa	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  001fd	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00201	8b 55 08	 mov	 edx, DWORD PTR _AndroidUserInfo$[ebp]
  00204	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  00207	89 84 8a 08 40
	00 00		 mov	 DWORD PTR [edx+ecx*4+16392], eax
  0020e	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserInfo$[ebp]
  00211	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  00215	66 83 c2 01	 add	 dx, 1
  00219	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  0021c	66 89 50 04	 mov	 WORD PTR [eax+4], dx

; 839  : 				break;

  00220	eb 4e		 jmp	 SHORT $LN4@GetAndroid
$LN15@GetAndroid:

; 840  : 			}
; 841  : 		case US_PLAYING:
; 842  : 		case US_OFFLINE:
; 843  : 			{
; 844  : 				ASSERT(AndroidUserInfo.wPlayUserCount<CountArray(AndroidUserInfo.pIAndroidUserPlay));

  00222	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  00225	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00229	81 f9 00 08 00
	00		 cmp	 ecx, 2048		; 00000800H
  0022f	72 19		 jb	 SHORT $LN21@GetAndroid
  00231	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z@4JA
  00237	83 c2 40	 add	 edx, 64			; 00000040H
  0023a	52		 push	 edx
  0023b	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00240	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00245	85 c0		 test	 eax, eax
  00247	74 01		 je	 SHORT $LN21@GetAndroid
  00249	cc		 int	 3
$LN21@GetAndroid:

; 845  : 				AndroidUserInfo.pIAndroidUserPlay[AndroidUserInfo.wPlayUserCount++]=pAndroidUserItem;

  0024a	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  0024d	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00251	8b 55 08	 mov	 edx, DWORD PTR _AndroidUserInfo$[ebp]
  00254	8b 45 d4	 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  00257	89 84 8a 08 20
	00 00		 mov	 DWORD PTR [edx+ecx*4+8200], eax
  0025e	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserInfo$[ebp]
  00261	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  00265	66 83 c2 01	 add	 dx, 1
  00269	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  0026c	66 89 50 02	 mov	 WORD PTR [eax+2], dx
$LN4@GetAndroid:

; 846  : 				break;
; 847  : 			}
; 848  : 		}
; 849  : 	};

  00270	e9 ec fd ff ff	 jmp	 $LN2@GetAndroid
$LN3@GetAndroid:

; 850  : 
; 851  : 	return AndroidUserInfo.wFreeUserCount+AndroidUserInfo.wPlayUserCount+AndroidUserInfo.wSitdownUserCount;

  00275	8b 45 08	 mov	 eax, DWORD PTR _AndroidUserInfo$[ebp]
  00278	0f b7 00	 movzx	 eax, WORD PTR [eax]
  0027b	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserInfo$[ebp]
  0027e	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00282	03 c2		 add	 eax, edx
  00284	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserInfo$[ebp]
  00287	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0028b	03 c2		 add	 eax, edx

; 852  : }

  0028d	5f		 pop	 edi
  0028e	5e		 pop	 esi
  0028f	5b		 pop	 ebx
  00290	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00293	33 cd		 xor	 ecx, ebp
  00295	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0029a	8b e5		 mov	 esp, ebp
  0029c	5d		 pop	 ebp
  0029d	c2 08 00	 ret	 8
$LN27@GetAndroid:
  002a0	00 00 00 00	 DD	 $LN13@GetAndroid
  002a4	00 00 00 00	 DD	 $LN14@GetAndroid
  002a8	00 00 00 00	 DD	 $LN14@GetAndroid
  002ac	00 00 00 00	 DD	 $LN4@GetAndroid
  002b0	00 00 00 00	 DD	 $LN15@GetAndroid
  002b4	00 00 00 00	 DD	 $LN15@GetAndroid
?GetAndroidUserInfo@CAndroidUserManager@@UAEGAAUtagAndroidUserInfo@@K@Z ENDP ; CAndroidUserManager::GetAndroidUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?GetAndroidLoadInfo@CAndroidUserManager@@UAE_NAAK0@Z
_TEXT	SEGMENT
tv137 = -108						; size = 4
_nIndex$1 = -40						; size = 4
_dwRemaindTime$ = -36					; size = 4
_pAndroidParameter$ = -32				; size = 4
_dwTodayTickCount$ = -28				; size = 4
_SystemTime$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwBatchID$ = 8						; size = 4
_dwLoadCount$ = 12					; size = 4
?GetAndroidLoadInfo@CAndroidUserManager@@UAE_NAAK0@Z PROC ; CAndroidUserManager::GetAndroidLoadInfo, COMDAT
; _this$ = ecx

; 734  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 735  : 	//数目判断
; 736  : 	if(m_AndroidParameterArray.GetCount()==0) return false;

  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  0001f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  00024	85 c0		 test	 eax, eax
  00026	75 07		 jne	 SHORT $LN5@GetAndroid
  00028	32 c0		 xor	 al, al
  0002a	e9 ef 00 00 00	 jmp	 $LN1@GetAndroid
$LN5@GetAndroid:

; 737  : 	
; 738  : 	//获取时间
; 739  : 	SYSTEMTIME SystemTime;
; 740  : 	GetLocalTime(&SystemTime);

  0002f	8d 45 e8	 lea	 eax, DWORD PTR _SystemTime$[ebp]
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 741  : 	DWORD dwTodayTickCount= GetTodayTickCount(SystemTime);

  00039	8d 45 e8	 lea	 eax, DWORD PTR _SystemTime$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ; CAndroidUserManager::GetTodayTickCount
  00045	89 45 e4	 mov	 DWORD PTR _dwTodayTickCount$[ebp], eax

; 742  : 
; 743  : 	//变量定义
; 744  : 	tagAndroidParameterEx * pAndroidParameter=NULL;

  00048	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pAndroidParameter$[ebp], 0

; 745  : 	DWORD dwRemaindTime;
; 746  : 
; 747  : 	//退出处理
; 748  : 	for(INT_PTR nIndex=0;nIndex<m_AndroidParameterArray.GetCount();nIndex++)

  0004f	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _nIndex$1[ebp], 0
  00056	eb 09		 jmp	 SHORT $LN4@GetAndroid
$LN2@GetAndroid:
  00058	8b 45 d8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0005b	83 c0 01	 add	 eax, 1
  0005e	89 45 d8	 mov	 DWORD PTR _nIndex$1[ebp], eax
$LN4@GetAndroid:
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  0006a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  0006f	39 45 d8	 cmp	 DWORD PTR _nIndex$1[ebp], eax
  00072	0f 8d a4 00 00
	00		 jge	 $LN3@GetAndroid

; 749  : 	{
; 750  : 		//获取对象		
; 751  : 		pAndroidParameter = m_AndroidParameterArray[nIndex];

  00078	8b 45 d8	 mov	 eax, DWORD PTR _nIndex$1[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00085	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  0008a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008c	89 4d e0	 mov	 DWORD PTR _pAndroidParameter$[ebp], ecx

; 752  : 		if(pAndroidParameter==NULL) continue;

  0008f	83 7d e0 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  00093	75 02		 jne	 SHORT $LN6@GetAndroid
  00095	eb c1		 jmp	 SHORT $LN2@GetAndroid
$LN6@GetAndroid:

; 753  : 
; 754  : 		//加载判断
; 755  : 		if(pAndroidParameter->bIsLoadAndroid==true) continue;

  00097	8b 45 e0	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  0009a	0f b6 48 55	 movzx	 ecx, BYTE PTR [eax+85]
  0009e	83 f9 01	 cmp	 ecx, 1
  000a1	75 02		 jne	 SHORT $LN7@GetAndroid
  000a3	eb b3		 jmp	 SHORT $LN2@GetAndroid
$LN7@GetAndroid:

; 756  : 
; 757  : 		//剩余时间
; 758  : 		dwRemaindTime=BatchServiceRemaindTime(&pAndroidParameter->AndroidParameter,dwTodayTickCount);

  000a5	8b 45 e4	 mov	 eax, DWORD PTR _dwTodayTickCount$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d e0	 mov	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  000ac	51		 push	 ecx
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ; CAndroidUserManager::BatchServiceRemaindTime
  000b5	89 45 dc	 mov	 DWORD PTR _dwRemaindTime$[ebp], eax

; 759  : 
; 760  : 		//加载机器
; 761  : 		if(dwRemaindTime>ANDROID_UNLOAD_TIME)

  000b8	81 7d dc 08 07
	00 00		 cmp	 DWORD PTR _dwRemaindTime$[ebp], 1800 ; 00000708H
  000bf	76 56		 jbe	 SHORT $LN8@GetAndroid

; 762  : 		{
; 763  : 			//设置标识
; 764  : 			pAndroidParameter->bIsLoadAndroid=true;

  000c1	8b 45 e0	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  000c4	c6 40 55 01	 mov	 BYTE PTR [eax+85], 1

; 765  : 
; 766  : 			//设置参数
; 767  : 			dwBatchID = pAndroidParameter->AndroidParameter.dwBatchID;

  000c8	8b 45 08	 mov	 eax, DWORD PTR _dwBatchID$[ebp]
  000cb	8b 4d e0	 mov	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  000ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d0	89 10		 mov	 DWORD PTR [eax], edx

; 768  : 			dwLoadCount = __min(pAndroidParameter->AndroidParameter.dwAndroidCount,dwRemaindTime/pAndroidParameter->AndroidParameter.dwEnterMaxInterval);	

  000d2	8b 4d e0	 mov	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  000d5	8b 45 dc	 mov	 eax, DWORD PTR _dwRemaindTime$[ebp]
  000d8	33 d2		 xor	 edx, edx
  000da	f7 71 28	 div	 DWORD PTR [ecx+40]
  000dd	8b 55 e0	 mov	 edx, DWORD PTR _pAndroidParameter$[ebp]
  000e0	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  000e3	73 0b		 jae	 SHORT $LN11@GetAndroid
  000e5	8b 45 e0	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  000e8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000eb	89 4d 94	 mov	 DWORD PTR tv137[ebp], ecx
  000ee	eb 0e		 jmp	 SHORT $LN12@GetAndroid
$LN11@GetAndroid:
  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  000f3	8b 45 dc	 mov	 eax, DWORD PTR _dwRemaindTime$[ebp]
  000f6	33 d2		 xor	 edx, edx
  000f8	f7 71 28	 div	 DWORD PTR [ecx+40]
  000fb	89 45 94	 mov	 DWORD PTR tv137[ebp], eax
$LN12@GetAndroid:
  000fe	8b 55 0c	 mov	 edx, DWORD PTR _dwLoadCount$[ebp]
  00101	8b 45 94	 mov	 eax, DWORD PTR tv137[ebp]
  00104	89 02		 mov	 DWORD PTR [edx], eax

; 769  : 			if (dwLoadCount==0) continue;

  00106	8b 45 0c	 mov	 eax, DWORD PTR _dwLoadCount$[ebp]
  00109	83 38 00	 cmp	 DWORD PTR [eax], 0
  0010c	75 05		 jne	 SHORT $LN9@GetAndroid
  0010e	e9 45 ff ff ff	 jmp	 $LN2@GetAndroid
$LN9@GetAndroid:

; 770  : 
; 771  : 			return true;

  00113	b0 01		 mov	 al, 1
  00115	eb 07		 jmp	 SHORT $LN1@GetAndroid
$LN8@GetAndroid:

; 772  : 		}
; 773  : 	}

  00117	e9 3c ff ff ff	 jmp	 $LN2@GetAndroid
$LN3@GetAndroid:

; 774  : 
; 775  : 	return false;

  0011c	32 c0		 xor	 al, al
$LN1@GetAndroid:

; 776  : }

  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00124	33 cd		 xor	 ecx, ebp
  00126	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 08 00	 ret	 8
?GetAndroidLoadInfo@CAndroidUserManager@@UAE_NAAK0@Z ENDP ; CAndroidUserManager::GetAndroidLoadInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.h
;	COMDAT ?GetAndroidStock@CAndroidUserManager@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAndroidStock@CAndroidUserManager@@UAEGXZ PROC	; CAndroidUserManager::GetAndroidStock, COMDAT
; _this$ = ecx

; 126  : 	virtual WORD GetAndroidStock() { return m_wStockCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 06	 mov	 ax, WORD PTR [eax+6]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetAndroidStock@CAndroidUserManager@@UAEGXZ ENDP	; CAndroidUserManager::GetAndroidStock
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.h
;	COMDAT ?GetAndroidCount@CAndroidUserManager@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAndroidCount@CAndroidUserManager@@UAEGXZ PROC	; CAndroidUserManager::GetAndroidCount, COMDAT
; _this$ = ecx

; 124  : 	virtual WORD GetAndroidCount() { return (WORD)m_AndroidUserItemMap.GetCount(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00015	e8 00 00 00 00	 call	 ?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetCount
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetAndroidCount@CAndroidUserManager@@UAEGXZ ENDP	; CAndroidUserManager::GetAndroidCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z
_TEXT	SEGMENT
tv227 = -232						; size = 4
$T2 = -228						; size = 4
_Position$3 = -160					; size = 4
_pAndroidUserItem$4 = -156				; size = 4
_dwUserID$5 = -152					; size = 4
_str$6 = -148						; size = 4
_str$7 = -144						; size = 4
_wParameterIndex$8 = -140				; size = 2
_dwElapse$9 = -136					; size = 4
_wAndroidIndex$10 = -132				; size = 2
_wRoundID$11 = -128					; size = 2
_wTableID$12 = -124					; size = 2
_cbMatchStatus$13 = -118				; size = 1
_cbUserStatus$14 = -117					; size = 1
_pIServerUserItem$15 = -116				; size = 4
_pAndroidUserItem$16 = -112				; size = 4
_bLogoutFinished$17 = -106				; size = 1
_bLogoutMarked$18 = -105				; size = 1
_pAndroidParameter$19 = -104				; size = 4
_dwTodayTickCount$20 = -100				; size = 4
_SystemTime$21 = -96					; size = 16
_Position$22 = -80					; size = 4
_nActiveCount$23 = -76					; size = 4
_dwUserID$24 = -72					; size = 4
_str$25 = -68						; size = 4
_dwRemaindTime$26 = -64					; size = 4
_dwElapse$27 = -60					; size = 4
_i$28 = -56						; size = 2
_bLogonSuccessed$29 = -51				; size = 1
_bAllowAndroidSimulate$30 = -50				; size = 1
_bAllowAndroidAttend$31 = -49				; size = 1
_pAndroidParameter$32 = -48				; size = 4
_dwTodayTickCount$33 = -44				; size = 4
_SystemTime$34 = -40					; size = 16
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwTimerID$ = 8						; size = 4
_dwBindParameter$ = 12					; size = 4
?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z PROC	; CAndroidUserManager::OnEventTimerPulse, COMDAT
; _this$ = ecx

; 452  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 453  : 	//进入处理
; 454  : 	if(dwTimerID>=IDI_ANDROID_IN && dwTimerID<IDI_ANDROID_IN+MAX_BATCH)			

  00035	83 7d 08 64	 cmp	 DWORD PTR _dwTimerID$[ebp], 100 ; 00000064H
  00039	0f 82 ba 02 00
	00		 jb	 $LN9@OnEventTim
  0003f	81 7d 08 94 00
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 148 ; 00000094H
  00046	0f 83 ad 02 00
	00		 jae	 $LN9@OnEventTim

; 455  : 	{
; 456  : 		//获取时间
; 457  : 		SYSTEMTIME SystemTime;
; 458  : 		GetLocalTime(&SystemTime);

  0004c	8d 45 d8	 lea	 eax, DWORD PTR _SystemTime$34[ebp]
  0004f	50		 push	 eax
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 459  : 		DWORD dwTodayTickCount= GetTodayTickCount(SystemTime);

  00056	8d 45 d8	 lea	 eax, DWORD PTR _SystemTime$34[ebp]
  00059	50		 push	 eax
  0005a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	e8 00 00 00 00	 call	 ?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ; CAndroidUserManager::GetTodayTickCount
  00062	89 45 d4	 mov	 DWORD PTR _dwTodayTickCount$33[ebp], eax

; 460  : 
; 461  : 		//获取参数
; 462  : 		tagAndroidParameter * pAndroidParameter=(tagAndroidParameter *)dwBindParameter;

  00065	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  00068	89 45 d0	 mov	 DWORD PTR _pAndroidParameter$32[ebp], eax

; 463  : 		if(pAndroidParameter==NULL)

  0006b	83 7d d0 00	 cmp	 DWORD PTR _pAndroidParameter$32[ebp], 0
  0006f	75 24		 jne	 SHORT $LN10@OnEventTim

; 464  : 		{
; 465  : 			//关闭定时器
; 466  : 			m_pITimerEngine->KillTimer(dwTimerID);

  00071	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  00074	50		 push	 eax
  00075	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	8b 82 08 60 01
	00		 mov	 eax, DWORD PTR [edx+90120]
  00081	8b 10		 mov	 edx, DWORD PTR [eax]
  00083	8b 89 08 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90120]
  00089	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0008c	ff d0		 call	 eax

; 467  : 
; 468  : 			return true;

  0008e	b0 01		 mov	 al, 1
  00090	e9 80 08 00 00	 jmp	 $LN1@OnEventTim
$LN10@OnEventTim:

; 469  : 		}
; 470  : 
; 471  : 		//变量定义
; 472  : 		bool bAllowAndroidAttend=CServerRule::IsAllowAndroidAttend(m_pGameServiceOption->dwServerRule);

  00095	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  0009e	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidAttend
  000a7	83 c4 04	 add	 esp, 4
  000aa	88 45 cf	 mov	 BYTE PTR _bAllowAndroidAttend$31[ebp], al

; 473  : 		bool bAllowAndroidSimulate=CServerRule::IsAllowAndroidSimulate(m_pGameServiceOption->dwServerRule);

  000ad	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  000b6	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000b9	52		 push	 edx
  000ba	e8 00 00 00 00	 call	 ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ; CServerRule::IsAllowAndroidSimulate
  000bf	83 c4 04	 add	 esp, 4
  000c2	88 45 ce	 mov	 BYTE PTR _bAllowAndroidSimulate$30[ebp], al

; 474  : 
; 475  : 		//成功标识
; 476  : 		bool bLogonSuccessed=false;

  000c5	c6 45 cd 00	 mov	 BYTE PTR _bLogonSuccessed$29[ebp], 0

; 477  : 
; 478  : 		//登录处理
; 479  : 		if ((bAllowAndroidAttend==true)||(bAllowAndroidSimulate==true))

  000c9	0f b6 45 cf	 movzx	 eax, BYTE PTR _bAllowAndroidAttend$31[ebp]
  000cd	83 f8 01	 cmp	 eax, 1
  000d0	74 0d		 je	 SHORT $LN12@OnEventTim
  000d2	0f b6 45 ce	 movzx	 eax, BYTE PTR _bAllowAndroidSimulate$30[ebp]
  000d6	83 f8 01	 cmp	 eax, 1
  000d9	0f 85 d4 00 00
	00		 jne	 $LN11@OnEventTim
$LN12@OnEventTim:

; 480  : 		{
; 481  : 			//寻找机器
; 482  : 			for (WORD i=0;i<m_wStockCount;i++)

  000df	33 c0		 xor	 eax, eax
  000e1	66 89 45 c8	 mov	 WORD PTR _i$28[ebp], ax
  000e5	eb 0c		 jmp	 SHORT $LN4@OnEventTim
$LN2@OnEventTim:
  000e7	66 8b 45 c8	 mov	 ax, WORD PTR _i$28[ebp]
  000eb	66 83 c0 01	 add	 ax, 1
  000ef	66 89 45 c8	 mov	 WORD PTR _i$28[ebp], ax
$LN4@OnEventTim:
  000f3	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f6	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  000fa	0f b7 55 c8	 movzx	 edx, WORD PTR _i$28[ebp]
  000fe	3b d1		 cmp	 edx, ecx
  00100	0f 8d ad 00 00
	00		 jge	 $LN11@OnEventTim

; 483  : 			{
; 484  : 				//批次判断
; 485  : 				if(m_AndroidItemConfig[i].pAndroidParameter!=pAndroidParameter) continue;

  00106	0f b7 45 c8	 movzx	 eax, WORD PTR _i$28[ebp]
  0010a	6b c8 2c	 imul	 ecx, eax, 44
  0010d	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00110	8b 44 0a 30	 mov	 eax, DWORD PTR [edx+ecx+48]
  00114	3b 45 d0	 cmp	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  00117	74 02		 je	 SHORT $LN13@OnEventTim
  00119	eb cc		 jmp	 SHORT $LN2@OnEventTim
$LN13@OnEventTim:

; 486  : 
; 487  : 				//模拟判断
; 488  : 				if((m_pGameServiceOption->wServerType&GAME_GENRE_MATCH)
; 489  : 					&& (pAndroidParameter->dwServiceMode&ANDROID_SIMULATE)!=0
; 490  : 					&& (pAndroidParameter->dwServiceMode&ANDROID_PASSIVITY)==0
; 491  : 					&& (pAndroidParameter->dwServiceMode&ANDROID_INITIATIVE)==0)

  0011b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  00124	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00128	83 e2 04	 and	 edx, 4
  0012b	74 23		 je	 SHORT $LN14@OnEventTim
  0012d	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  00130	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00133	83 e1 01	 and	 ecx, 1
  00136	74 18		 je	 SHORT $LN14@OnEventTim
  00138	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  0013b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0013e	83 e1 02	 and	 ecx, 2
  00141	75 0d		 jne	 SHORT $LN14@OnEventTim
  00143	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  00146	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00149	83 e1 04	 and	 ecx, 4
  0014c	75 02		 jne	 SHORT $LN14@OnEventTim

; 492  : 				{
; 493  : 					continue;

  0014e	eb 97		 jmp	 SHORT $LN2@OnEventTim
$LN14@OnEventTim:

; 494  : 				}
; 495  : 
; 496  : 				//创建机器
; 497  : 				if (CreateAndroidUserItem(m_AndroidItemConfig[i])!=NULL)

  00150	0f b7 45 c8	 movzx	 eax, WORD PTR _i$28[ebp]
  00154	6b c8 2c	 imul	 ecx, eax, 44
  00157	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0015a	8d 44 0a 08	 lea	 eax, DWORD PTR [edx+ecx+8]
  0015e	50		 push	 eax
  0015f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	8b 11		 mov	 edx, DWORD PTR [ecx]
  00164	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0016a	ff d0		 call	 eax
  0016c	85 c0		 test	 eax, eax
  0016e	74 3e		 je	 SHORT $LN15@OnEventTim

; 498  : 				{
; 499  : 					//删除存存
; 500  : 					m_wStockCount--;

  00170	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00173	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  00177	66 83 e9 01	 sub	 cx, 1
  0017b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0017e	66 89 4a 06	 mov	 WORD PTR [edx+6], cx

; 501  : 					bLogonSuccessed=true;

  00182	c6 45 cd 01	 mov	 BYTE PTR _bLogonSuccessed$29[ebp], 1

; 502  : 					m_AndroidItemConfig[i]=m_AndroidItemConfig[m_wStockCount];

  00186	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00189	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  0018d	6b d1 2c	 imul	 edx, ecx, 44
  00190	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00193	8d 74 10 08	 lea	 esi, DWORD PTR [eax+edx+8]
  00197	0f b7 4d c8	 movzx	 ecx, WORD PTR _i$28[ebp]
  0019b	6b d1 2c	 imul	 edx, ecx, 44
  0019e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001a1	8d 7c 10 08	 lea	 edi, DWORD PTR [eax+edx+8]
  001a5	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  001aa	f3 a5		 rep movsd

; 503  : 
; 504  : 					break;

  001ac	eb 05		 jmp	 SHORT $LN11@OnEventTim
$LN15@OnEventTim:

; 505  : 				}
; 506  : 			}

  001ae	e9 34 ff ff ff	 jmp	 $LN2@OnEventTim
$LN11@OnEventTim:

; 507  : 		}
; 508  : 
; 509  : 		//关闭定时器
; 510  : 		m_pITimerEngine->KillTimer(dwTimerID);

  001b3	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  001b6	50		 push	 eax
  001b7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  001bd	8b 82 08 60 01
	00		 mov	 eax, DWORD PTR [edx+90120]
  001c3	8b 10		 mov	 edx, DWORD PTR [eax]
  001c5	8b 89 08 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90120]
  001cb	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  001ce	ff d0		 call	 eax

; 511  : 
; 512  : 		//定时器处理
; 513  : 		if(bLogonSuccessed==true)

  001d0	0f b6 45 cd	 movzx	 eax, BYTE PTR _bLogonSuccessed$29[ebp]
  001d4	83 f8 01	 cmp	 eax, 1
  001d7	75 5b		 jne	 SHORT $LN16@OnEventTim

; 514  : 		{
; 515  : 			//计算流逝时间
; 516  : 			DWORD dwElapse = pAndroidParameter->dwEnterMinInterval+rand()%(pAndroidParameter->dwEnterMaxInterval-pAndroidParameter->dwEnterMinInterval+1);

  001d9	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  001dc	8b 4d d0	 mov	 ecx, DWORD PTR _pAndroidParameter$32[ebp]
  001df	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  001e2	2b 71 24	 sub	 esi, DWORD PTR [ecx+36]
  001e5	83 c6 01	 add	 esi, 1
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  001ee	33 d2		 xor	 edx, edx
  001f0	f7 f6		 div	 esi
  001f2	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  001f5	03 50 24	 add	 edx, DWORD PTR [eax+36]
  001f8	89 55 c4	 mov	 DWORD PTR _dwElapse$27[ebp], edx

; 517  : 			if(dwElapse==0) dwElapse=TIME_ANDROID_INOUT;

  001fb	75 07		 jne	 SHORT $LN18@OnEventTim
  001fd	c7 45 c4 0f 00
	00 00		 mov	 DWORD PTR _dwElapse$27[ebp], 15 ; 0000000fH
$LN18@OnEventTim:

; 518  : 
; 519  : 			//设置定时器
; 520  : 			m_pITimerEngine->SetTimer(dwTimerID,dwElapse*1000L,TIMES_INFINITY,dwBindParameter);

  00204	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  00207	50		 push	 eax
  00208	6a ff		 push	 -1
  0020a	69 4d c4 e8 03
	00 00		 imul	 ecx, DWORD PTR _dwElapse$27[ebp], 1000
  00211	51		 push	 ecx
  00212	8b 55 08	 mov	 edx, DWORD PTR _dwTimerID$[ebp]
  00215	52		 push	 edx
  00216	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00219	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021c	8b 91 08 60 01
	00		 mov	 edx, DWORD PTR [ecx+90120]
  00222	8b 12		 mov	 edx, DWORD PTR [edx]
  00224	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  0022a	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0022d	ff d0		 call	 eax

; 521  : 		}
; 522  : 		else

  0022f	e9 be 00 00 00	 jmp	 $LN17@OnEventTim
$LN16@OnEventTim:

; 523  : 		{
; 524  : 			//剩余时间
; 525  : 			DWORD dwRemaindTime = BatchServiceRemaindTime(pAndroidParameter,dwTodayTickCount);

  00234	8b 45 d4	 mov	 eax, DWORD PTR _dwTodayTickCount$33[ebp]
  00237	50		 push	 eax
  00238	8b 4d d0	 mov	 ecx, DWORD PTR _pAndroidParameter$32[ebp]
  0023b	51		 push	 ecx
  0023c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	e8 00 00 00 00	 call	 ?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ; CAndroidUserManager::BatchServiceRemaindTime
  00244	89 45 c0	 mov	 DWORD PTR _dwRemaindTime$26[ebp], eax

; 526  : 			if(dwRemaindTime<=ANDROID_UNIN_TIME)

  00247	81 7d c0 58 02
	00 00		 cmp	 DWORD PTR _dwRemaindTime$26[ebp], 600 ; 00000258H
  0024e	77 7a		 ja	 SHORT $LN19@OnEventTim

; 527  : 			{
; 528  : 				//设置定时器
; 529  : 				m_pITimerEngine->SetTimer(IDI_ANDROID_OUT+(dwTimerID-IDI_ANDROID_IN),TIME_ANDROID_INOUT*1000L,TIMES_INFINITY,dwBindParameter);

  00250	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  00253	50		 push	 eax
  00254	6a ff		 push	 -1
  00256	68 98 3a 00 00	 push	 15000			; 00003a98H
  0025b	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  0025e	83 c1 30	 add	 ecx, 48			; 00000030H
  00261	51		 push	 ecx
  00262	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00265	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00268	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  0026e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00270	8b 8a 08 60 01
	00		 mov	 ecx, DWORD PTR [edx+90120]
  00276	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00279	ff d2		 call	 edx

; 530  : 
; 531  : 				CString str;

  0027b	8d 4d bc	 lea	 ecx, DWORD PTR _str$25[ebp]
  0027e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00284	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 532  : 				str.Format(TEXT("本批次机器人开始退出, 批次ID=%d"),pAndroidParameter->dwBatchID);

  0028b	8b 45 d0	 mov	 eax, DWORD PTR _pAndroidParameter$32[ebp]
  0028e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00290	51		 push	 ecx
  00291	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JNJPKGKJ@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?$LP?$KK?J?$LM?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@
  00296	8d 55 bc	 lea	 edx, DWORD PTR _str$25[ebp]
  00299	52		 push	 edx
  0029a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  002a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 533  : 				CTraceService::TraceString(str,TraceLevel_Info);

  002a3	6a 00		 push	 0
  002a5	8d 4d bc	 lea	 ecx, DWORD PTR _str$25[ebp]
  002a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  002ae	50		 push	 eax
  002af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  002b5	83 c4 08	 add	 esp, 8

; 534  : 			}

  002b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002bf	8d 4d bc	 lea	 ecx, DWORD PTR _str$25[ebp]
  002c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ

; 535  : 			else

  002c8	eb 28		 jmp	 SHORT $LN17@OnEventTim
$LN19@OnEventTim:

; 536  : 			{
; 537  : 				//设置定时器
; 538  : 				m_pITimerEngine->SetTimer(dwTimerID,TIME_ANDROID_INOUT*1000L,TIMES_INFINITY,dwBindParameter);				

  002ca	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  002cd	50		 push	 eax
  002ce	6a ff		 push	 -1
  002d0	68 98 3a 00 00	 push	 15000			; 00003a98H
  002d5	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  002d8	51		 push	 ecx
  002d9	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  002dc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002df	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  002e5	8b 01		 mov	 eax, DWORD PTR [ecx]
  002e7	8b 8a 08 60 01
	00		 mov	 ecx, DWORD PTR [edx+90120]
  002ed	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  002f0	ff d2		 call	 edx
$LN17@OnEventTim:

; 539  : 			}
; 540  : 		}
; 541  : 
; 542  : 		return true;

  002f2	b0 01		 mov	 al, 1
  002f4	e9 1c 06 00 00	 jmp	 $LN1@OnEventTim
$LN9@OnEventTim:

; 543  : 	}
; 544  : 
; 545  : 	//退出处理
; 546  : 	if(dwTimerID>=IDI_ANDROID_OUT && dwTimerID<IDI_ANDROID_OUT+MAX_BATCH)

  002f9	81 7d 08 94 00
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 148 ; 00000094H
  00300	0f 82 06 05 00
	00		 jb	 $LN21@OnEventTim
  00306	81 7d 08 c4 00
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 196 ; 000000c4H
  0030d	0f 83 f9 04 00
	00		 jae	 $LN21@OnEventTim

; 547  : 	{
; 548  : 		//变量定义
; 549  : 		DWORD dwUserID=0L;

  00313	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _dwUserID$24[ebp], 0

; 550  : 		INT_PTR nActiveCount=m_AndroidUserItemMap.GetCount();

  0031a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0031d	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00323	e8 00 00 00 00	 call	 ?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetCount
  00328	89 45 b4	 mov	 DWORD PTR _nActiveCount$23[ebp], eax

; 551  : 		POSITION Position=m_AndroidUserItemMap.GetStartPosition();

  0032b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0032e	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00334	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition
  00339	89 45 b0	 mov	 DWORD PTR _Position$22[ebp], eax

; 552  : 
; 553  : 		//获取时间
; 554  : 		SYSTEMTIME SystemTime;
; 555  : 		GetLocalTime(&SystemTime);

  0033c	8d 45 a0	 lea	 eax, DWORD PTR _SystemTime$21[ebp]
  0033f	50		 push	 eax
  00340	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 556  : 		DWORD dwTodayTickCount= GetTodayTickCount(SystemTime);	

  00346	8d 45 a0	 lea	 eax, DWORD PTR _SystemTime$21[ebp]
  00349	50		 push	 eax
  0034a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0034d	e8 00 00 00 00	 call	 ?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ; CAndroidUserManager::GetTodayTickCount
  00352	89 45 9c	 mov	 DWORD PTR _dwTodayTickCount$20[ebp], eax

; 557  : 
; 558  : 		//获取参数
; 559  : 		tagAndroidParameterEx * pAndroidParameter=(tagAndroidParameterEx *)dwBindParameter;

  00355	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  00358	89 45 98	 mov	 DWORD PTR _pAndroidParameter$19[ebp], eax

; 560  : 		if(pAndroidParameter==NULL)

  0035b	83 7d 98 00	 cmp	 DWORD PTR _pAndroidParameter$19[ebp], 0
  0035f	75 24		 jne	 SHORT $LN22@OnEventTim

; 561  : 		{
; 562  : 			//关闭定时器
; 563  : 			m_pITimerEngine->KillTimer(dwTimerID);

  00361	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  00364	50		 push	 eax
  00365	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00368	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0036b	8b 82 08 60 01
	00		 mov	 eax, DWORD PTR [edx+90120]
  00371	8b 10		 mov	 edx, DWORD PTR [eax]
  00373	8b 89 08 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90120]
  00379	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0037c	ff d0		 call	 eax

; 564  : 
; 565  : 			return true;

  0037e	b0 01		 mov	 al, 1
  00380	e9 90 05 00 00	 jmp	 $LN1@OnEventTim
$LN22@OnEventTim:

; 566  : 		}
; 567  : 
; 568  : 		//时间判断
; 569  : 		if (BatchServiceRemaindTime(&pAndroidParameter->AndroidParameter,dwTodayTickCount)>0) 

  00385	8b 45 9c	 mov	 eax, DWORD PTR _dwTodayTickCount$20[ebp]
  00388	50		 push	 eax
  00389	8b 4d 98	 mov	 ecx, DWORD PTR _pAndroidParameter$19[ebp]
  0038c	51		 push	 ecx
  0038d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00390	e8 00 00 00 00	 call	 ?BatchServiceRemaindTime@CAndroidUserManager@@IAEKPAUtagAndroidParameter@@K@Z ; CAndroidUserManager::BatchServiceRemaindTime
  00395	85 c0		 test	 eax, eax
  00397	76 07		 jbe	 SHORT $LN23@OnEventTim

; 570  : 		{			
; 571  : 			return true;

  00399	b0 01		 mov	 al, 1
  0039b	e9 75 05 00 00	 jmp	 $LN1@OnEventTim
$LN23@OnEventTim:

; 572  : 		}
; 573  : 
; 574  : 		//变量定义
; 575  : 		bool bLogoutMarked=false;

  003a0	c6 45 97 00	 mov	 BYTE PTR _bLogoutMarked$18[ebp], 0

; 576  : 		bool bLogoutFinished=true;		

  003a4	c6 45 96 01	 mov	 BYTE PTR _bLogoutFinished$17[ebp], 1
$LN5@OnEventTim:

; 577  : 
; 578  : 		//退出处理		
; 579  : 		while (Position!=NULL)

  003a8	83 7d b0 00	 cmp	 DWORD PTR _Position$22[ebp], 0
  003ac	0f 84 aa 01 00
	00		 je	 $LN6@OnEventTim

; 580  : 		{
; 581  : 			//获取对象
; 582  : 			CAndroidUserItem * pAndroidUserItem=NULL;

  003b2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$16[ebp], 0

; 583  : 			m_AndroidUserItemMap.GetNextAssoc(Position,dwUserID,pAndroidUserItem);

  003b9	8d 45 90	 lea	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  003bc	50		 push	 eax
  003bd	8d 4d b8	 lea	 ecx, DWORD PTR _dwUserID$24[ebp]
  003c0	51		 push	 ecx
  003c1	8d 55 b0	 lea	 edx, DWORD PTR _Position$22[ebp]
  003c4	52		 push	 edx
  003c5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c8	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  003ce	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc

; 584  : 
; 585  : 			//退出判断
; 586  : 			if (pAndroidUserItem->GetAndroidParameter()==&pAndroidParameter->AndroidParameter)

  003d3	8b 75 98	 mov	 esi, DWORD PTR _pAndroidParameter$19[ebp]
  003d6	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  003d9	8b 10		 mov	 edx, DWORD PTR [eax]
  003db	8b 4d 90	 mov	 ecx, DWORD PTR _pAndroidUserItem$16[ebp]
  003de	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  003e1	ff d0		 call	 eax
  003e3	3b c6		 cmp	 eax, esi
  003e5	0f 85 6c 01 00
	00		 jne	 $LN24@OnEventTim

; 587  : 			{
; 588  : 				//设置变量
; 589  : 				bLogoutFinished=false;

  003eb	c6 45 96 00	 mov	 BYTE PTR _bLogoutFinished$17[ebp], 0

; 590  : 
; 591  : 				//变量定义
; 592  : 				IServerUserItem * pIServerUserItem=pAndroidUserItem->m_pIServerUserItem;

  003ef	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  003f2	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  003f5	89 4d 8c	 mov	 DWORD PTR _pIServerUserItem$15[ebp], ecx

; 593  : 				if(pIServerUserItem!=NULL)

  003f8	83 7d 8c 00	 cmp	 DWORD PTR _pIServerUserItem$15[ebp], 0
  003fc	0f 84 03 01 00
	00		 je	 $LN25@OnEventTim

; 594  : 				{
; 595  : 					//服务状态
; 596  : 					BYTE cbUserStatus=pIServerUserItem->GetUserStatus();

  00402	8b 45 8c	 mov	 eax, DWORD PTR _pIServerUserItem$15[ebp]
  00405	8b 10		 mov	 edx, DWORD PTR [eax]
  00407	8b 4d 8c	 mov	 ecx, DWORD PTR _pIServerUserItem$15[ebp]
  0040a	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0040d	ff d0		 call	 eax
  0040f	88 45 8b	 mov	 BYTE PTR _cbUserStatus$14[ebp], al

; 597  : 					BYTE cbMatchStatus=pIServerUserItem->GetUserMatchStatus();

  00412	8b 45 8c	 mov	 eax, DWORD PTR _pIServerUserItem$15[ebp]
  00415	8b 10		 mov	 edx, DWORD PTR [eax]
  00417	8b 4d 8c	 mov	 ecx, DWORD PTR _pIServerUserItem$15[ebp]
  0041a	8b 82 e8 00 00
	00		 mov	 eax, DWORD PTR [edx+232]
  00420	ff d0		 call	 eax
  00422	88 45 8a	 mov	 BYTE PTR _cbMatchStatus$13[ebp], al

; 598  : 					if ((cbUserStatus!=US_FREE)&&(cbUserStatus!=US_SIT))

  00425	0f b6 45 8b	 movzx	 eax, BYTE PTR _cbUserStatus$14[ebp]
  00429	83 f8 01	 cmp	 eax, 1
  0042c	74 78		 je	 SHORT $LN26@OnEventTim
  0042e	0f b6 45 8b	 movzx	 eax, BYTE PTR _cbUserStatus$14[ebp]
  00432	83 f8 02	 cmp	 eax, 2
  00435	74 6f		 je	 SHORT $LN26@OnEventTim

; 599  : 					{
; 600  : 						if (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  00437	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0043a	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  00440	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  00444	83 fa 04	 cmp	 edx, 4
  00447	75 2e		 jne	 SHORT $LN28@OnEventTim
  00449	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0044c	8b 88 38 60 01
	00		 mov	 ecx, DWORD PTR [eax+90168]
  00452	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  00456	83 fa 01	 cmp	 edx, 1
  00459	75 1c		 jne	 SHORT $LN28@OnEventTim

; 601  : 						{
; 602  : 							//防止中途换桌时UserStatus变为US_FREE导致卡赛，此时使用SignUpStatus判断可否被踢出
; 603  : 							if(cbMatchStatus!=MUS_NULL && pAndroidUserItem->m_bWaitLeave==false)

  0045b	0f b6 45 8a	 movzx	 eax, BYTE PTR _cbMatchStatus$13[ebp]
  0045f	85 c0		 test	 eax, eax
  00461	74 12		 je	 SHORT $LN30@OnEventTim
  00463	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  00466	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0046a	85 c9		 test	 ecx, ecx
  0046c	75 07		 jne	 SHORT $LN30@OnEventTim

; 604  : 							{
; 605  : 								pAndroidUserItem->m_bWaitLeave=true;

  0046e	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  00471	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
$LN30@OnEventTim:

; 606  : 							}
; 607  : 						}
; 608  : 						else

  00475	eb 28		 jmp	 SHORT $LN29@OnEventTim
$LN28@OnEventTim:

; 609  : 						{
; 610  : 							//标记动作
; 611  : 							if(bLogoutMarked==false && pAndroidUserItem->m_wAndroidAction==0)

  00477	0f b6 45 97	 movzx	 eax, BYTE PTR _bLogoutMarked$18[ebp]
  0047b	85 c0		 test	 eax, eax
  0047d	75 20		 jne	 SHORT $LN29@OnEventTim
  0047f	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  00482	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00486	85 c9		 test	 ecx, ecx
  00488	75 15		 jne	 SHORT $LN29@OnEventTim

; 612  : 							{
; 613  : 								bLogoutMarked=true;

  0048a	c6 45 97 01	 mov	 BYTE PTR _bLogoutMarked$18[ebp], 1

; 614  : 								pAndroidUserItem->m_wAndroidAction|=ANDROID_WAITLEAVE;

  0048e	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  00491	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00495	83 c9 02	 or	 ecx, 2
  00498	8b 55 90	 mov	 edx, DWORD PTR _pAndroidUserItem$16[ebp]
  0049b	66 89 4a 08	 mov	 WORD PTR [edx+8], cx
$LN29@OnEventTim:

; 615  : 							}
; 616  : 						}
; 617  : 						continue;

  0049f	e9 04 ff ff ff	 jmp	 $LN5@OnEventTim

; 618  : 					}
; 619  : 					else

  004a4	eb 5f		 jmp	 SHORT $LN25@OnEventTim
$LN26@OnEventTim:

; 620  : 					{
; 621  : 						if (m_pGameServiceOption->wServerType==GAME_GENRE_MATCH && m_pGameMatchOption->cbMatchType==MATCH_TYPE_IMMEDIATE)

  004a6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004a9	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  004af	0f b7 51 4c	 movzx	 edx, WORD PTR [ecx+76]
  004b3	83 fa 04	 cmp	 edx, 4
  004b6	75 4d		 jne	 SHORT $LN25@OnEventTim
  004b8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004bb	8b 88 38 60 01
	00		 mov	 ecx, DWORD PTR [eax+90168]
  004c1	0f b6 51 11	 movzx	 edx, BYTE PTR [ecx+17]
  004c5	83 fa 01	 cmp	 edx, 1
  004c8	75 3b		 jne	 SHORT $LN25@OnEventTim

; 622  : 						{
; 623  : 							WORD wTableID = pIServerUserItem->GetTableID();

  004ca	8b 45 8c	 mov	 eax, DWORD PTR _pIServerUserItem$15[ebp]
  004cd	8b 10		 mov	 edx, DWORD PTR [eax]
  004cf	8b 4d 8c	 mov	 ecx, DWORD PTR _pIServerUserItem$15[ebp]
  004d2	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  004d5	ff d0		 call	 eax
  004d7	66 89 45 84	 mov	 WORD PTR _wTableID$12[ebp], ax

; 624  : 							if((cbMatchStatus!=MUS_NULL ||  pAndroidUserItem->m_bWaitLeave==false) && wTableID != INVALID_TABLE)

  004db	0f b6 45 8a	 movzx	 eax, BYTE PTR _cbMatchStatus$13[ebp]
  004df	85 c0		 test	 eax, eax
  004e1	75 0b		 jne	 SHORT $LN34@OnEventTim
  004e3	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  004e6	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  004ea	85 c9		 test	 ecx, ecx
  004ec	75 17		 jne	 SHORT $LN25@OnEventTim
$LN34@OnEventTim:
  004ee	0f b7 45 84	 movzx	 eax, WORD PTR _wTableID$12[ebp]
  004f2	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  004f7	74 0c		 je	 SHORT $LN25@OnEventTim

; 625  : 							{
; 626  : 								pAndroidUserItem->m_bWaitLeave=true;

  004f9	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  004fc	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 627  : 								continue;

  00500	e9 a3 fe ff ff	 jmp	 $LN5@OnEventTim
$LN25@OnEventTim:

; 628  : 							}
; 629  : 						}
; 630  : 					}
; 631  : 				}
; 632  : 
; 633  : 				//删除用户
; 634  : 				WORD wRoundID=pAndroidUserItem->m_wRoundID;

  00505	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  00508	66 8b 48 4c	 mov	 cx, WORD PTR [eax+76]
  0050c	66 89 4d 80	 mov	 WORD PTR _wRoundID$11[ebp], cx

; 635  : 				WORD wAndroidIndex=pAndroidUserItem->m_wAndroidIndex;

  00510	8b 45 90	 mov	 eax, DWORD PTR _pAndroidUserItem$16[ebp]
  00513	66 8b 48 4e	 mov	 cx, WORD PTR [eax+78]
  00517	66 89 8d 7c ff
	ff ff		 mov	 WORD PTR _wAndroidIndex$10[ebp], cx

; 636  : 				DeleteAndroidUserItem(MAKELONG(wAndroidIndex,wRoundID),false);

  0051e	6a 00		 push	 0
  00520	0f b7 45 80	 movzx	 eax, WORD PTR _wRoundID$11[ebp]
  00524	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00529	0f b7 c8	 movzx	 ecx, ax
  0052c	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0052f	0f b7 95 7c ff
	ff ff		 movzx	 edx, WORD PTR _wAndroidIndex$10[ebp]
  00536	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0053c	0f b7 c2	 movzx	 eax, dx
  0053f	0b c1		 or	 eax, ecx
  00541	50		 push	 eax
  00542	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00545	8b 11		 mov	 edx, DWORD PTR [ecx]
  00547	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0054a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0054d	ff d0		 call	 eax

; 637  : 
; 638  : 				//设置标识
; 639  : 				if(pIServerUserItem!=NULL) break;

  0054f	83 7d 8c 00	 cmp	 DWORD PTR _pIServerUserItem$15[ebp], 0
  00553	74 02		 je	 SHORT $LN24@OnEventTim
  00555	eb 05		 jmp	 SHORT $LN6@OnEventTim
$LN24@OnEventTim:

; 640  : 			}			
; 641  : 		}

  00557	e9 4c fe ff ff	 jmp	 $LN5@OnEventTim
$LN6@OnEventTim:

; 642  : 
; 643  : 		//关闭定时器
; 644  : 		m_pITimerEngine->KillTimer(dwTimerID);

  0055c	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  0055f	50		 push	 eax
  00560	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00563	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00566	8b 82 08 60 01
	00		 mov	 eax, DWORD PTR [edx+90120]
  0056c	8b 10		 mov	 edx, DWORD PTR [eax]
  0056e	8b 89 08 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90120]
  00574	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00577	ff d0		 call	 eax

; 645  : 
; 646  : 		//定时器处理
; 647  : 		if(bLogoutFinished==false)

  00579	0f b6 45 96	 movzx	 eax, BYTE PTR _bLogoutFinished$17[ebp]
  0057d	85 c0		 test	 eax, eax
  0057f	75 64		 jne	 SHORT $LN36@OnEventTim

; 648  : 		{
; 649  : 			//计算流逝时间
; 650  : 			DWORD dwElapse = pAndroidParameter->AndroidParameter.dwLeaveMinInterval+rand()%(pAndroidParameter->AndroidParameter.dwLeaveMaxInterval-pAndroidParameter->AndroidParameter.dwLeaveMinInterval+1);

  00581	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  00584	8b 4d 98	 mov	 ecx, DWORD PTR _pAndroidParameter$19[ebp]
  00587	8b 70 30	 mov	 esi, DWORD PTR [eax+48]
  0058a	2b 71 2c	 sub	 esi, DWORD PTR [ecx+44]
  0058d	83 c6 01	 add	 esi, 1
  00590	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00596	33 d2		 xor	 edx, edx
  00598	f7 f6		 div	 esi
  0059a	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  0059d	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  005a0	89 95 78 ff ff
	ff		 mov	 DWORD PTR _dwElapse$9[ebp], edx

; 651  : 			if(dwElapse==0) dwElapse=TIME_ANDROID_INOUT;

  005a6	75 0a		 jne	 SHORT $LN38@OnEventTim
  005a8	c7 85 78 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _dwElapse$9[ebp], 15 ; 0000000fH
$LN38@OnEventTim:

; 652  : 
; 653  : 			//设置定时器
; 654  : 			m_pITimerEngine->SetTimer(dwTimerID,dwElapse*1000L,TIMES_INFINITY,dwBindParameter);

  005b2	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  005b5	50		 push	 eax
  005b6	6a ff		 push	 -1
  005b8	69 8d 78 ff ff
	ff e8 03 00 00	 imul	 ecx, DWORD PTR _dwElapse$9[ebp], 1000
  005c2	51		 push	 ecx
  005c3	8b 55 08	 mov	 edx, DWORD PTR _dwTimerID$[ebp]
  005c6	52		 push	 edx
  005c7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  005ca	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005cd	8b 91 08 60 01
	00		 mov	 edx, DWORD PTR [ecx+90120]
  005d3	8b 12		 mov	 edx, DWORD PTR [edx]
  005d5	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  005db	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  005de	ff d0		 call	 eax

; 655  : 		}
; 656  : 		else

  005e0	e9 20 02 00 00	 jmp	 $LN37@OnEventTim
$LN36@OnEventTim:

; 657  : 		{
; 658  : 			if(pAndroidParameter->bIsValided==false)

  005e5	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  005e8	0f b6 48 54	 movzx	 ecx, BYTE PTR [eax+84]
  005ec	85 c9		 test	 ecx, ecx
  005ee	0f 85 77 01 00
	00		 jne	 $LN39@OnEventTim

; 659  : 			{
; 660  : 				//计算索引
; 661  : 				WORD wParameterIndex=(WORD)(dwTimerID-IDI_ANDROID_OUT);

  005f4	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  005f7	2d 94 00 00 00	 sub	 eax, 148		; 00000094H
  005fc	66 89 85 74 ff
	ff ff		 mov	 WORD PTR _wParameterIndex$8[ebp], ax

; 662  : 				if(wParameterIndex==GetAndroidParameterIndex(pAndroidParameter))

  00603	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  00606	50		 push	 eax
  00607	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0060a	e8 00 00 00 00	 call	 ?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z ; CAndroidUserManager::GetAndroidParameterIndex
  0060f	0f b7 c8	 movzx	 ecx, ax
  00612	0f b7 95 74 ff
	ff ff		 movzx	 edx, WORD PTR _wParameterIndex$8[ebp]
  00619	3b d1		 cmp	 edx, ecx
  0061b	0f 85 45 01 00
	00		 jne	 $LN41@OnEventTim

; 663  : 				{
; 664  : 					//释放资源
; 665  : 					SafeDelete(m_AndroidParameterArray[wParameterIndex]);

  00621	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00628	0f b7 85 74 ff
	ff ff		 movzx	 eax, WORD PTR _wParameterIndex$8[ebp]
  0062f	50		 push	 eax
  00630	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00633	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00639	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  0063e	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv227[ebp], eax
  00644	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv227[ebp]
  0064a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0064c	89 95 1c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00652	6a 56		 push	 86			; 00000056H
  00654	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0065a	50		 push	 eax
  0065b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00660	83 c4 08	 add	 esp, 8
  00663	eb 26		 jmp	 SHORT $LN51@OnEventTim
__catch$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$0:
  00665	33 c0		 xor	 eax, eax
  00667	75 1c		 jne	 SHORT $LN49@OnEventTim
  00669	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z@4JA
  0066f	81 c1 d5 00 00
	00		 add	 ecx, 213		; 000000d5H
  00675	51		 push	 ecx
  00676	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0067b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00680	85 c0		 test	 eax, eax
  00682	74 01		 je	 SHORT $LN49@OnEventTim
  00684	cc		 int	 3
$LN49@OnEventTim:
  00685	b8 00 00 00 00	 mov	 eax, $LN59@OnEventTim
  0068a	c3		 ret	 0
$LN51@OnEventTim:
  0068b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00692	eb 07		 jmp	 SHORT __tryend$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$1
$LN59@OnEventTim:
  00694	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$1:
  0069b	0f b7 85 74 ff
	ff ff		 movzx	 eax, WORD PTR _wParameterIndex$8[ebp]
  006a2	50		 push	 eax
  006a3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  006a6	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  006ac	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  006b1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 666  : 					m_AndroidParameterArray[wParameterIndex]=NULL;

  006b7	0f b7 85 74 ff
	ff ff		 movzx	 eax, WORD PTR _wParameterIndex$8[ebp]
  006be	50		 push	 eax
  006bf	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  006c2	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  006c8	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 667  : 
; 668  : 					CString str;

  006d3	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _str$7[ebp]
  006d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  006df	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3

; 669  : 					str.Format(TEXT("本批次机器人全部退出,该批次将被删除, 批次ID=%d"),pAndroidParameter->AndroidParameter.dwBatchID);

  006e6	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  006e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  006eb	51		 push	 ecx
  006ec	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@DGHJFLOD@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?$LI?C?E?z?$LE?N?$LN?$KL?$LB?$LL@
  006f1	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _str$7[ebp]
  006f7	52		 push	 edx
  006f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  006fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 670  : 					CTraceService::TraceString(str,TraceLevel_Info);

  00701	6a 00		 push	 0
  00703	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _str$7[ebp]
  00709	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0070f	50		 push	 eax
  00710	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  00716	83 c4 08	 add	 esp, 8

; 671  : 
; 672  : 					//解锁机器人
; 673  : 					if (m_pIMainServiceFrame!=NULL)

  00719	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0071c	83 b8 1c 60 01
	00 00		 cmp	 DWORD PTR [eax+90140], 0
  00723	74 2e		 je	 SHORT $LN43@OnEventTim

; 674  : 					{
; 675  : 						m_pIMainServiceFrame->UnLockAndroidUser(m_pGameServiceOption->wServerID,(WORD)pAndroidParameter->AndroidParameter.dwBatchID);

  00725	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  00728	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0072b	51		 push	 ecx
  0072c	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0072f	8b 82 34 60 01
	00		 mov	 eax, DWORD PTR [edx+90164]
  00735	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00739	51		 push	 ecx
  0073a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0073d	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00740	8b 88 1c 60 01
	00		 mov	 ecx, DWORD PTR [eax+90140]
  00746	8b 01		 mov	 eax, DWORD PTR [ecx]
  00748	8b 8a 1c 60 01
	00		 mov	 ecx, DWORD PTR [edx+90140]
  0074e	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00751	ff d2		 call	 edx
$LN43@OnEventTim:

; 676  : 					}
; 677  : 				}

  00753	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0075a	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _str$7[ebp]
  00760	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN41@OnEventTim:

; 678  : 			}
; 679  : 			else

  00766	e9 9a 00 00 00	 jmp	 $LN37@OnEventTim
$LN39@OnEventTim:

; 680  : 			{
; 681  : 				//恢复标识
; 682  : 				pAndroidParameter->bIsLoadAndroid=false;

  0076b	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  0076e	c6 40 55 00	 mov	 BYTE PTR [eax+85], 0

; 683  : 				
; 684  : 				CString str;

  00772	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _str$6[ebp]
  00778	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0077e	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 4

; 685  : 				str.Format(TEXT("本批次机器人全部退出, 批次ID=%d"),pAndroidParameter->AndroidParameter.dwBatchID);

  00785	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  00788	8b 08		 mov	 ecx, DWORD PTR [eax]
  0078a	51		 push	 ecx
  0078b	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@OJFILKJK@?$LB?$LO?E?z?$LE?N?$LL?z?F?w?H?K?H?$KL?$LC?$LP?M?K?$LD?v?0?5?E?z?$LE?NID?$DN?$CFd@
  00790	8d 95 6c ff ff
	ff		 lea	 edx, DWORD PTR _str$6[ebp]
  00796	52		 push	 edx
  00797	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  0079d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 686  : 				CTraceService::TraceString(str,TraceLevel_Info);

  007a0	6a 00		 push	 0
  007a2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _str$6[ebp]
  007a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  007ae	50		 push	 eax
  007af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  007b5	83 c4 08	 add	 esp, 8

; 687  : 
; 688  : 				//解锁机器人
; 689  : 				if (m_pIMainServiceFrame!=NULL)

  007b8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  007bb	83 b8 1c 60 01
	00 00		 cmp	 DWORD PTR [eax+90140], 0
  007c2	74 2e		 je	 SHORT $LN44@OnEventTim

; 690  : 				{
; 691  : 					m_pIMainServiceFrame->UnLockAndroidUser(m_pGameServiceOption->wServerID,(WORD)pAndroidParameter->AndroidParameter.dwBatchID);

  007c4	8b 45 98	 mov	 eax, DWORD PTR _pAndroidParameter$19[ebp]
  007c7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  007ca	51		 push	 ecx
  007cb	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  007ce	8b 82 34 60 01
	00		 mov	 eax, DWORD PTR [edx+90164]
  007d4	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  007d8	51		 push	 ecx
  007d9	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  007dc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  007df	8b 88 1c 60 01
	00		 mov	 ecx, DWORD PTR [eax+90140]
  007e5	8b 01		 mov	 eax, DWORD PTR [ecx]
  007e7	8b 8a 1c 60 01
	00		 mov	 ecx, DWORD PTR [edx+90140]
  007ed	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  007f0	ff d2		 call	 edx
$LN44@OnEventTim:

; 692  : 				}
; 693  : 			}

  007f2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  007f9	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _str$6[ebp]
  007ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
$LN37@OnEventTim:

; 694  : 		}
; 695  : 
; 696  : 		return true;

  00805	b0 01		 mov	 al, 1
  00807	e9 09 01 00 00	 jmp	 $LN1@OnEventTim
$LN21@OnEventTim:

; 697  : 	}
; 698  : 
; 699  : 	//用户脉冲
; 700  : 	if(dwTimerID==IDI_ANDROID_PULSE)		

  0080c	81 7d 08 c4 00
	00 00		 cmp	 DWORD PTR _dwTimerID$[ebp], 196 ; 000000c4H
  00813	0f 85 fa 00 00
	00		 jne	 $LN45@OnEventTim

; 701  : 	{
; 702  : 		//变量定义
; 703  : 		DWORD dwUserID=0L;

  00819	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwUserID$5[ebp], 0

; 704  : 		CAndroidUserItem * pAndroidUserItem=NULL;

  00823	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _pAndroidUserItem$4[ebp], 0

; 705  : 		POSITION Position=m_AndroidUserItemMap.GetStartPosition();

  0082d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00830	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00836	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition
  0083b	89 85 60 ff ff
	ff		 mov	 DWORD PTR _Position$3[ebp], eax
$LN7@OnEventTim:

; 706  : 
; 707  : 		//用户处理
; 708  : 		while (Position!=NULL)

  00841	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR _Position$3[ebp], 0
  00848	0f 84 c1 00 00
	00		 je	 $LN8@OnEventTim

; 709  : 		{
; 710  : 			//获取对象
; 711  : 			m_AndroidUserItemMap.GetNextAssoc(Position,dwUserID,pAndroidUserItem);

  0084e	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  00854	50		 push	 eax
  00855	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _dwUserID$5[ebp]
  0085b	51		 push	 ecx
  0085c	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR _Position$3[ebp]
  00862	52		 push	 edx
  00863	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00866	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0086c	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc

; 712  : 
; 713  : 			//时间处理
; 714  : 			try

  00871	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 5

; 715  : 			{
; 716  : 				//ASSERT(pAndroidUserItem!=NULL);
; 717  : 				if (pAndroidUserItem->m_pIServerUserItem!=NULL) pAndroidUserItem->OnTimerPulse(dwTimerID,dwBindParameter);

  00878	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  0087e	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00882	74 13		 je	 SHORT $LN47@OnEventTim
  00884	8b 45 0c	 mov	 eax, DWORD PTR _dwBindParameter$[ebp]
  00887	50		 push	 eax
  00888	8b 4d 08	 mov	 ecx, DWORD PTR _dwTimerID$[ebp]
  0088b	51		 push	 ecx
  0088c	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _pAndroidUserItem$4[ebp]
  00892	e8 00 00 00 00	 call	 ?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z ; CAndroidUserItem::OnTimerPulse
$LN47@OnEventTim:

; 718  : 			}

  00897	eb 61		 jmp	 SHORT $LN53@OnEventTim
__catch$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$2:

; 719  : 			catch (...)
; 720  : 			{
; 721  : 				ASSERT(FALSE);

  00899	33 c0		 xor	 eax, eax
  0089b	75 1c		 jne	 SHORT $LN50@OnEventTim
  0089d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z@4JA
  008a3	81 c1 0d 01 00
	00		 add	 ecx, 269		; 0000010dH
  008a9	51		 push	 ecx
  008aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  008af	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  008b4	85 c0		 test	 eax, eax
  008b6	74 01		 je	 SHORT $LN50@OnEventTim
  008b8	cc		 int	 3
$LN50@OnEventTim:

; 722  : 				DeleteAndroidUserItem(MAKELONG(pAndroidUserItem->m_wAndroidIndex,pAndroidUserItem->m_wRoundID),true);

  008b9	6a 01		 push	 1
  008bb	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  008c1	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  008c5	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  008cb	0f b7 d1	 movzx	 edx, cx
  008ce	c1 e2 10	 shl	 edx, 16			; 00000010H
  008d1	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _pAndroidUserItem$4[ebp]
  008d7	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  008db	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  008e1	0f b7 c1	 movzx	 eax, cx
  008e4	0b c2		 or	 eax, edx
  008e6	50		 push	 eax
  008e7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  008ea	8b 11		 mov	 edx, DWORD PTR [ecx]
  008ec	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  008ef	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  008f2	ff d0		 call	 eax

; 723  : 			}

  008f4	b8 00 00 00 00	 mov	 eax, $LN61@OnEventTim
  008f9	c3		 ret	 0
$LN53@OnEventTim:
  008fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00901	eb 07		 jmp	 SHORT __tryend$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$3
$LN61@OnEventTim:
  00903	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$3:

; 724  : 		}

  0090a	e9 32 ff ff ff	 jmp	 $LN7@OnEventTim
$LN8@OnEventTim:

; 725  : 
; 726  : 		return true;

  0090f	b0 01		 mov	 al, 1
  00911	eb 02		 jmp	 SHORT $LN1@OnEventTim
$LN45@OnEventTim:

; 727  : 	}
; 728  : 
; 729  : 	return false;

  00913	32 c0		 xor	 al, al
$LN1@OnEventTim:

; 730  : }

  00915	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00918	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0091f	59		 pop	 ecx
  00920	5f		 pop	 edi
  00921	5e		 pop	 esi
  00922	5b		 pop	 ebx
  00923	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00926	33 cd		 xor	 ecx, ebp
  00928	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0092d	8b e5		 mov	 esp, ebp
  0092f	5d		 pop	 ebp
  00930	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$4:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR _str$25[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$5:
  00009	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _str$7[ebp]
  0000f	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z$6:
  00015	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _str$6[ebp]
  0001b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 8a 14 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-236]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00038	33 c8		 xor	 ecx, eax
  0003a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z
  00044	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTimerPulse@CAndroidUserManager@@UAE_NKI@Z ENDP	; CAndroidUserManager::OnEventTimerPulse
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?SetMainServiceFrame@CAndroidUserManager@@QAEXPAUIMainServiceFrame@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIMainServiceFrame$ = 8				; size = 4
?SetMainServiceFrame@CAndroidUserManager@@QAEXPAUIMainServiceFrame@@@Z PROC ; CAndroidUserManager::SetMainServiceFrame, COMDAT
; _this$ = ecx

; 444  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 445  : 	m_pIMainServiceFrame=pIMainServiceFrame;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _pIMainServiceFrame$[ebp]
  00012	89 88 1c 60 01
	00		 mov	 DWORD PTR [eax+90140], ecx

; 446  : 
; 447  : 	return;
; 448  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?SetMainServiceFrame@CAndroidUserManager@@QAEXPAUIMainServiceFrame@@@Z ENDP ; CAndroidUserManager::SetMainServiceFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
_TEXT	SEGMENT
tv222 = -241						; size = 1
tv221 = -241						; size = 1
$T2 = -240						; size = 4
$T3 = -236						; size = 4
$T4 = -232						; size = 4
$T5 = -228						; size = 4
_Command$ = -160					; size = 4
_LogonUserID$ = -156					; size = 117
_wAndroidIndex$ = -36					; size = 2
_wRoundID$ = -32					; size = 2
_pAndroidUserItem$ = -28				; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_AndroidItemConfig$ = 8					; size = 4
?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z PROC ; CAndroidUserManager::CreateAndroidUserItem, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	53		 push	 ebx
  00023	56		 push	 esi
  00024	57		 push	 edi
  00025	50		 push	 eax
  00026	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00029	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002f	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00032	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 369  : 	//效验参数
; 370  : 	ASSERT(AndroidItemConfig.AndroidAccountsInfo.dwUserID!=0L);

  00035	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00038	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003b	75 19		 jne	 SHORT $LN9@CreateAndr
  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  00043	83 c1 02	 add	 ecx, 2
  00046	51		 push	 ecx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN9@CreateAndr
  00055	cc		 int	 3
$LN9@CreateAndr:

; 371  : 	if (AndroidItemConfig.AndroidAccountsInfo.dwUserID==0L) return NULL;

  00056	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00059	83 38 00	 cmp	 DWORD PTR [eax], 0
  0005c	75 07		 jne	 SHORT $LN2@CreateAndr
  0005e	33 c0		 xor	 eax, eax
  00060	e9 79 02 00 00	 jmp	 $LN8@CreateAndr
$LN2@CreateAndr:

; 372  : 
; 373  : 	//创建对象
; 374  : 	CAndroidUserItem * pAndroidUserItem=ActiveAndroidUserItem(AndroidItemConfig);

  00065	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00068	50		 push	 eax
  00069	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?ActiveAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@AAUtagAndroidItemConfig@@@Z ; CAndroidUserManager::ActiveAndroidUserItem
  00071	89 45 e4	 mov	 DWORD PTR _pAndroidUserItem$[ebp], eax

; 375  : 	if (pAndroidUserItem==NULL) return NULL;

  00074	83 7d e4 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  00078	75 07		 jne	 SHORT $LN3@CreateAndr
  0007a	33 c0		 xor	 eax, eax
  0007c	e9 5d 02 00 00	 jmp	 $LN8@CreateAndr
$LN3@CreateAndr:

; 376  : 
; 377  : 	//属性变量
; 378  : 	WORD wRoundID=pAndroidUserItem->m_wRoundID;

  00081	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00084	66 8b 48 4c	 mov	 cx, WORD PTR [eax+76]
  00088	66 89 4d e0	 mov	 WORD PTR _wRoundID$[ebp], cx

; 379  : 	WORD wAndroidIndex=pAndroidUserItem->m_wAndroidIndex;

  0008c	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  0008f	66 8b 48 4e	 mov	 cx, WORD PTR [eax+78]
  00093	66 89 4d dc	 mov	 WORD PTR _wAndroidIndex$[ebp], cx

; 380  : 
; 381  : 	//连接模拟
; 382  : 	try

  00097	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 383  : 	{
; 384  : 		if (m_pITCPNetworkEngineEvent->OnEventTCPNetworkBind(MAKELONG(wAndroidIndex,wRoundID),0L)==false)

  0009e	6a 00		 push	 0
  000a0	0f b7 45 e0	 movzx	 eax, WORD PTR _wRoundID$[ebp]
  000a4	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000a9	0f b7 c8	 movzx	 ecx, ax
  000ac	c1 e1 10	 shl	 ecx, 16			; 00000010H
  000af	0f b7 55 dc	 movzx	 edx, WORD PTR _wAndroidIndex$[ebp]
  000b3	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  000b9	0f b7 c2	 movzx	 eax, dx
  000bc	0b c1		 or	 eax, ecx
  000be	50		 push	 eax
  000bf	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000c5	8b 82 18 60 01
	00		 mov	 eax, DWORD PTR [edx+90136]
  000cb	8b 10		 mov	 edx, DWORD PTR [eax]
  000cd	8b 89 18 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90136]
  000d3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000d6	ff d0		 call	 eax
  000d8	88 85 0f ff ff
	ff		 mov	 BYTE PTR tv221[ebp], al
  000de	0f b6 8d 0f ff
	ff ff		 movzx	 ecx, BYTE PTR tv221[ebp]
  000e5	85 c9		 test	 ecx, ecx
  000e7	75 1b		 jne	 SHORT $LN5@CreateAndr

; 385  : 		{
; 386  : 			throw 0;

  000e9	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp], 0
  000f3	68 00 00 00 00	 push	 OFFSET __TI1H
  000f8	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN5@CreateAndr:

; 387  : 		}
; 388  : 	}

  00104	eb 41		 jmp	 SHORT $LN12@CreateAndr
__catch$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$0:

; 389  : 	catch (...)
; 390  : 	{
; 391  : 		//错误断言
; 392  : 		ASSERT(FALSE);

  00106	33 c0		 xor	 eax, eax
  00108	75 19		 jne	 SHORT $LN10@CreateAndr
  0010a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  00110	83 c1 18	 add	 ecx, 24			; 00000018H
  00113	51		 push	 ecx
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00119	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0011e	85 c0		 test	 eax, eax
  00120	74 01		 je	 SHORT $LN10@CreateAndr
  00122	cc		 int	 3
$LN10@CreateAndr:

; 393  : 
; 394  : 		//释放用户
; 395  : 		FreeAndroidUserItem(AndroidItemConfig.AndroidAccountsInfo.dwUserID);

  00123	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  00126	8b 08		 mov	 ecx, DWORD PTR [eax]
  00128	51		 push	 ecx
  00129	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	e8 00 00 00 00	 call	 ?FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z ; CAndroidUserManager::FreeAndroidUserItem

; 396  : 
; 397  : 		return NULL;

  00131	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp], 0
  0013b	b8 00 00 00 00	 mov	 eax, $LN17@CreateAndr
  00140	c3		 ret	 0

; 398  : 	}

  00141	b8 00 00 00 00	 mov	 eax, $LN12@CreateAndr
  00146	c3		 ret	 0
$LN12@CreateAndr:
  00147	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0014e	eb 12		 jmp	 SHORT $LN16@CreateAndr
$LN17@CreateAndr:
  00150	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 396  : 
; 397  : 		return NULL;

  00157	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  0015d	e9 7c 01 00 00	 jmp	 $LN8@CreateAndr
$LN16@CreateAndr:

; 399  : 
; 400  : 	//变量定义
; 401  : 	CMD_GR_LogonUserID LogonUserID;
; 402  : 	ZeroMemory(&LogonUserID,sizeof(LogonUserID));

  00162	6a 75		 push	 117			; 00000075H
  00164	6a 00		 push	 0
  00166	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _LogonUserID$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 _memset
  00172	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 
; 404  : 	//版本信息
; 405  : 	LogonUserID.dwPlazaVersion=VERSION_PLAZA;

  00175	c7 85 64 ff ff
	ff 01 00 00 06	 mov	 DWORD PTR _LogonUserID$[ebp], 100663297 ; 06000001H

; 406  : 	LogonUserID.dwFrameVersion=VERSION_FRAME;

  0017f	c7 85 68 ff ff
	ff 01 00 00 06	 mov	 DWORD PTR _LogonUserID$[ebp+4], 100663297 ; 06000001H

; 407  : 	LogonUserID.dwProcessVersion=m_pGameServiceAttrib->dwClientVersion;

  00189	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0018c	8b 88 30 60 01
	00		 mov	 ecx, DWORD PTR [eax+90160]
  00192	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00195	89 95 6c ff ff
	ff		 mov	 DWORD PTR _LogonUserID$[ebp+8], edx

; 408  : 
; 409  : 	//用户信息
; 410  : 	LogonUserID.dwUserID=AndroidItemConfig.AndroidAccountsInfo.dwUserID;

  0019b	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  0019e	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a0	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _LogonUserID$[ebp+12], ecx

; 411  : 	lstrcpyn(LogonUserID.szPassword,AndroidItemConfig.AndroidAccountsInfo.szPassword,CountArray(LogonUserID.szPassword));

  001a6	6a 21		 push	 33			; 00000021H
  001a8	8b 45 08	 mov	 eax, DWORD PTR _AndroidItemConfig$[ebp]
  001ab	83 c0 04	 add	 eax, 4
  001ae	50		 push	 eax
  001af	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _LogonUserID$[ebp+16]
  001b5	51		 push	 ecx
  001b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 412  : 	LogonUserID.wKindID=m_pGameServiceOption->wKindID;

  001bc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001bf	8b 88 34 60 01
	00		 mov	 ecx, DWORD PTR [eax+90164]
  001c5	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001c8	66 89 55 d7	 mov	 WORD PTR _LogonUserID$[ebp+115], dx

; 413  : 
; 414  : 	//构造数据
; 415  : 	TCP_Command Command;
; 416  : 	Command.wMainCmdID=MDM_GR_LOGON;

  001cc	b8 01 00 00 00	 mov	 eax, 1
  001d1	66 89 85 60 ff
	ff ff		 mov	 WORD PTR _Command$[ebp], ax

; 417  : 	Command.wSubCmdID=SUB_GR_LOGON_USERID;

  001d8	b8 01 00 00 00	 mov	 eax, 1
  001dd	66 89 85 62 ff
	ff ff		 mov	 WORD PTR _Command$[ebp+2], ax

; 418  : 
; 419  : 	//消息处理
; 420  : 	try

  001e4	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2

; 421  : 	{
; 422  : 		//发送数据
; 423  : 		if (m_pITCPNetworkEngineEvent->OnEventTCPNetworkRead(MAKELONG(wAndroidIndex,wRoundID),Command,&LogonUserID,sizeof(LogonUserID))==false)

  001eb	6a 75		 push	 117			; 00000075H
  001ed	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _LogonUserID$[ebp]
  001f3	50		 push	 eax
  001f4	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _Command$[ebp]
  001fa	51		 push	 ecx
  001fb	0f b7 55 e0	 movzx	 edx, WORD PTR _wRoundID$[ebp]
  001ff	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00205	0f b7 c2	 movzx	 eax, dx
  00208	c1 e0 10	 shl	 eax, 16			; 00000010H
  0020b	0f b7 4d dc	 movzx	 ecx, WORD PTR _wAndroidIndex$[ebp]
  0020f	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00215	0f b7 d1	 movzx	 edx, cx
  00218	0b d0		 or	 edx, eax
  0021a	52		 push	 edx
  0021b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0021e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00221	8b 91 18 60 01
	00		 mov	 edx, DWORD PTR [ecx+90136]
  00227	8b 12		 mov	 edx, DWORD PTR [edx]
  00229	8b 88 18 60 01
	00		 mov	 ecx, DWORD PTR [eax+90136]
  0022f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00232	ff d0		 call	 eax
  00234	88 85 0f ff ff
	ff		 mov	 BYTE PTR tv222[ebp], al
  0023a	0f b6 8d 0f ff
	ff ff		 movzx	 ecx, BYTE PTR tv222[ebp]
  00241	85 c9		 test	 ecx, ecx
  00243	75 1b		 jne	 SHORT $LN7@CreateAndr

; 424  : 		{
; 425  : 			throw 0;

  00245	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp], 0
  0024f	68 00 00 00 00	 push	 OFFSET __TI1H
  00254	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN7@CreateAndr:

; 426  : 		}
; 427  : 	}

  00260	eb 61		 jmp	 SHORT $LN14@CreateAndr
__catch$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z$2:

; 428  : 	catch (...) 
; 429  : 	{
; 430  : 		//错误断言
; 431  : 		ASSERT(FALSE);

  00262	33 c0		 xor	 eax, eax
  00264	75 19		 jne	 SHORT $LN11@CreateAndr
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z@4JA
  0026c	83 c1 3f	 add	 ecx, 63			; 0000003fH
  0026f	51		 push	 ecx
  00270	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00275	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0027a	85 c0		 test	 eax, eax
  0027c	74 01		 je	 SHORT $LN11@CreateAndr
  0027e	cc		 int	 3
$LN11@CreateAndr:

; 432  : 
; 433  : 		//删除机器
; 434  : 		DeleteAndroidUserItem(MAKELONG(wAndroidIndex,wRoundID),false);

  0027f	6a 00		 push	 0
  00281	0f b7 45 e0	 movzx	 eax, WORD PTR _wRoundID$[ebp]
  00285	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0028a	0f b7 c8	 movzx	 ecx, ax
  0028d	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00290	0f b7 55 dc	 movzx	 edx, WORD PTR _wAndroidIndex$[ebp]
  00294	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0029a	0f b7 c2	 movzx	 eax, dx
  0029d	0b c1		 or	 eax, ecx
  0029f	50		 push	 eax
  002a0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a8	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  002ab	ff d0		 call	 eax

; 435  : 
; 436  : 		return NULL;

  002ad	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  002b7	b8 00 00 00 00	 mov	 eax, $LN19@CreateAndr
  002bc	c3		 ret	 0

; 437  : 	}

  002bd	b8 00 00 00 00	 mov	 eax, $LN14@CreateAndr
  002c2	c3		 ret	 0
$LN14@CreateAndr:
  002c3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002ca	eb 0f		 jmp	 SHORT $LN18@CreateAndr
$LN19@CreateAndr:
  002cc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 435  : 
; 436  : 		return NULL;

  002d3	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  002d9	eb 03		 jmp	 SHORT $LN8@CreateAndr
$LN18@CreateAndr:

; 438  : 
; 439  : 	return pAndroidUserItem;

  002db	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
$LN8@CreateAndr:

; 440  : }

  002de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  002e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002e8	59		 pop	 ecx
  002e9	5f		 pop	 edi
  002ea	5e		 pop	 esi
  002eb	5b		 pop	 ebx
  002ec	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ef	33 cd		 xor	 ecx, ebp
  002f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f6	8b e5		 mov	 esp, ebp
  002f8	5d		 pop	 ebp
  002f9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@AAUtagAndroidItemConfig@@@Z ENDP ; CAndroidUserManager::CreateAndroidUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?SearchAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@KK@Z
_TEXT	SEGMENT
_wAndroidIndex$1 = -16					; size = 2
_wRoundID$2 = -12					; size = 2
_pAndroidUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_dwContextID$ = 12					; size = 4
?SearchAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@KK@Z PROC ; CAndroidUserManager::SearchAndroidUserItem, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 351  : 	//查找机器
; 352  : 	CAndroidUserItem * pAndroidUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$[ebp], 0

; 353  : 	m_AndroidUserItemMap.Lookup(dwUserID,pAndroidUserItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00024	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Lookup

; 354  : 
; 355  : 	//机器判断
; 356  : 	if (pAndroidUserItem!=NULL)

  00029	83 7d f8 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  0002d	74 3e		 je	 SHORT $LN2@SearchAndr

; 357  : 	{
; 358  : 		WORD wRoundID=pAndroidUserItem->m_wRoundID;

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  00032	66 8b 48 4c	 mov	 cx, WORD PTR [eax+76]
  00036	66 89 4d f4	 mov	 WORD PTR _wRoundID$2[ebp], cx

; 359  : 		WORD wAndroidIndex=pAndroidUserItem->m_wAndroidIndex;

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  0003d	66 8b 48 4e	 mov	 cx, WORD PTR [eax+78]
  00041	66 89 4d f0	 mov	 WORD PTR _wAndroidIndex$1[ebp], cx

; 360  : 		if (MAKELONG(wAndroidIndex,wRoundID)==dwContextID) return pAndroidUserItem;

  00045	0f b7 45 f0	 movzx	 eax, WORD PTR _wAndroidIndex$1[ebp]
  00049	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004e	0f b7 c8	 movzx	 ecx, ax
  00051	0f b7 55 f4	 movzx	 edx, WORD PTR _wRoundID$2[ebp]
  00055	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0005b	0f b7 c2	 movzx	 eax, dx
  0005e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00061	0b c8		 or	 ecx, eax
  00063	3b 4d 0c	 cmp	 ecx, DWORD PTR _dwContextID$[ebp]
  00066	75 05		 jne	 SHORT $LN2@SearchAndr
  00068	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  0006b	eb 02		 jmp	 SHORT $LN1@SearchAndr
$LN2@SearchAndr:

; 361  : 	}
; 362  : 
; 363  : 	return NULL;

  0006d	33 c0		 xor	 eax, eax
$LN1@SearchAndr:

; 364  : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?SearchAndroidUserItem@CAndroidUserManager@@UAEPAUIAndroidUserItem@@KK@Z ENDP ; CAndroidUserManager::SearchAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z
_TEXT	SEGMENT
_AndroidItemConfig$ = -76				; size = 44
_pAndroidUserItem$ = -32				; size = 4
_wIndex$ = -28						; size = 2
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwAndroidID$ = 8					; size = 4
_bStockRetrieve$ = 12					; size = 1
?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z PROC ; CAndroidUserManager::DeleteAndroidUserItem, COMDAT
; _this$ = ecx

; 313  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 314  : 	//获取对象
; 315  : 	WORD wIndex=LOWORD(dwAndroidID);

  00032	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00035	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003a	66 89 45 e4	 mov	 WORD PTR _wIndex$[ebp], ax

; 316  : 	CAndroidUserItem * pAndroidUserItem=GetAndroidUserItem(wIndex);

  0003e	0f b7 45 e4	 movzx	 eax, WORD PTR _wIndex$[ebp]
  00042	50		 push	 eax
  00043	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?GetAndroidUserItem@CAndroidUserManager@@IAEPAVCAndroidUserItem@@G@Z ; CAndroidUserManager::GetAndroidUserItem
  0004b	89 45 e0	 mov	 DWORD PTR _pAndroidUserItem$[ebp], eax

; 317  : 
; 318  : 	//对象效验
; 319  : 	//ASSERT((pAndroidUserItem!=NULL)&&(pAndroidUserItem->m_wRoundID==HIWORD(dwAndroidID)));
; 320  : 	if ((pAndroidUserItem==NULL)||(pAndroidUserItem->m_wRoundID!=HIWORD(dwAndroidID))) return false;

  0004e	83 7d e0 00	 cmp	 DWORD PTR _pAndroidUserItem$[ebp], 0
  00052	74 19		 je	 SHORT $LN3@DeleteAndr
  00054	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00057	c1 e8 10	 shr	 eax, 16			; 00000010H
  0005a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0005f	0f b7 c8	 movzx	 ecx, ax
  00062	8b 55 e0	 mov	 edx, DWORD PTR _pAndroidUserItem$[ebp]
  00065	0f b7 42 4c	 movzx	 eax, WORD PTR [edx+76]
  00069	3b c1		 cmp	 eax, ecx
  0006b	74 07		 je	 SHORT $LN2@DeleteAndr
$LN3@DeleteAndr:
  0006d	32 c0		 xor	 al, al
  0006f	e9 85 00 00 00	 jmp	 $LN1@DeleteAndr
$LN2@DeleteAndr:

; 321  : 
; 322  : 	//关闭事件
; 323  : 	try

  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 324  : 	{
; 325  : 		m_pITCPNetworkEngineEvent->OnEventTCPNetworkShut(dwAndroidID,0,0L);

  0007b	6a 00		 push	 0
  0007d	6a 00		 push	 0
  0007f	8b 45 08	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00082	50		 push	 eax
  00083	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 82 18 60 01
	00		 mov	 eax, DWORD PTR [edx+90136]
  0008f	8b 10		 mov	 edx, DWORD PTR [eax]
  00091	8b 89 18 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90136]
  00097	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0009a	ff d0		 call	 eax

; 326  : 	}

  0009c	eb 23		 jmp	 SHORT $LN7@DeleteAndr
__catch$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z$0:

; 327  : 	catch (...)
; 328  : 	{
; 329  : 		//错误断言
; 330  : 		ASSERT(FALSE);

  0009e	33 c0		 xor	 eax, eax
  000a0	75 19		 jne	 SHORT $LN6@DeleteAndr
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z@4JA
  000a8	83 c1 11	 add	 ecx, 17			; 00000011H
  000ab	51		 push	 ecx
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b6	85 c0		 test	 eax, eax
  000b8	74 01		 je	 SHORT $LN6@DeleteAndr
  000ba	cc		 int	 3
$LN6@DeleteAndr:

; 331  : 	}

  000bb	b8 00 00 00 00	 mov	 eax, $LN10@DeleteAndr
  000c0	c3		 ret	 0
$LN7@DeleteAndr:
  000c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c8	eb 07		 jmp	 SHORT __tryend$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z$1
$LN10@DeleteAndr:
  000ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z$1:

; 332  : 
; 333  : 	//机器配置
; 334  : 	tagAndroidItemConfig AndroidItemConfig = pAndroidUserItem->m_AndroidItemConfig;

  000d1	8b 75 e0	 mov	 esi, DWORD PTR _pAndroidUserItem$[ebp]
  000d4	83 c6 20	 add	 esi, 32			; 00000020H
  000d7	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  000dc	8d 7d b4	 lea	 edi, DWORD PTR _AndroidItemConfig$[ebp]
  000df	f3 a5		 rep movsd

; 335  : 
; 336  : 	//删除对象
; 337  : 	FreeAndroidUserItem(pAndroidUserItem->GetUserID());

  000e1	8b 45 e0	 mov	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  000e4	8b 10		 mov	 edx, DWORD PTR [eax]
  000e6	8b 4d e0	 mov	 ecx, DWORD PTR _pAndroidUserItem$[ebp]
  000e9	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ec	ff d0		 call	 eax
  000ee	50		 push	 eax
  000ef	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?FreeAndroidUserItem@CAndroidUserManager@@IAEXK@Z ; CAndroidUserManager::FreeAndroidUserItem

; 338  : 
; 339  : 	////库存回收
; 340  : 	//if(bStockRetrieve==true)
; 341  : 	//{		
; 342  : 	//	InsertAndroidInfo(&AndroidItemConfig.AndroidAccountsInfo,1,AndroidItemConfig.pAndroidParameter->dwBatchID);
; 343  : 	//}
; 344  : 
; 345  : 	return true;

  000f7	b0 01		 mov	 al, 1
$LN1@DeleteAndr:

; 346  : }

  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00103	59		 pop	 ecx
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010a	33 cd		 xor	 ecx, ebp
  0010c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 70 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-144]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeleteAndroidUserItem@CAndroidUserManager@@UAE_NK_N@Z ENDP ; CAndroidUserManager::DeleteAndroidUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?InsertAndroidInfo@CAndroidUserManager@@UAE_NQAUtagAndroidAccountsInfo@@GK@Z
_TEXT	SEGMENT
_wParameterIndex$ = -32					; size = 2
_wItem$1 = -28						; size = 2
_wIndex$2 = -24						; size = 2
_bAndroidExist$ = -17					; size = 1
_wStockCount$ = -16					; size = 2
_pAndroidUserItem$ = -12				; size = 4
_pAndroidParameter$ = -8				; size = 4
_this$ = -4						; size = 4
_AndroidAccountsInfo$ = 8				; size = 4
_wAndroidCount$ = 12					; size = 2
_dwBatchID$ = 16					; size = 4
?InsertAndroidInfo@CAndroidUserManager@@UAE_NQAUtagAndroidAccountsInfo@@GK@Z PROC ; CAndroidUserManager::InsertAndroidInfo, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 258  : 	//获取参数
; 259  : 	tagAndroidParameterEx * pAndroidParameter = GetAndroidParameter(dwBatchID);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _dwBatchID$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z ; CAndroidUserManager::GetAndroidParameter
  00018	89 45 f8	 mov	 DWORD PTR _pAndroidParameter$[ebp], eax

; 260  : 	if(pAndroidParameter==NULL) return false;

  0001b	83 7d f8 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  0001f	75 07		 jne	 SHORT $LN8@InsertAndr
  00021	32 c0		 xor	 al, al
  00023	e9 73 01 00 00	 jmp	 $LN1@InsertAndr
$LN8@InsertAndr:

; 261  : 
; 262  : 	//记录库存	
; 263  : 	CAndroidUserItem * pAndroidUserItem=NULL;

  00028	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pAndroidUserItem$[ebp], 0

; 264  : 	WORD wStockCount=m_wStockCount;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  00036	66 89 4d f0	 mov	 WORD PTR _wStockCount$[ebp], cx

; 265  : 	bool bAndroidExist=false;

  0003a	c6 45 ef 00	 mov	 BYTE PTR _bAndroidExist$[ebp], 0

; 266  : 
; 267  : 	//添加新机器
; 268  : 	for(WORD wIndex=0;wIndex<wAndroidCount;wIndex++)

  0003e	33 c0		 xor	 eax, eax
  00040	66 89 45 e8	 mov	 WORD PTR _wIndex$2[ebp], ax
  00044	eb 0c		 jmp	 SHORT $LN4@InsertAndr
$LN2@InsertAndr:
  00046	66 8b 45 e8	 mov	 ax, WORD PTR _wIndex$2[ebp]
  0004a	66 83 c0 01	 add	 ax, 1
  0004e	66 89 45 e8	 mov	 WORD PTR _wIndex$2[ebp], ax
$LN4@InsertAndr:
  00052	0f b7 45 e8	 movzx	 eax, WORD PTR _wIndex$2[ebp]
  00056	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wAndroidCount$[ebp]
  0005a	3b c1		 cmp	 eax, ecx
  0005c	0f 8d cb 00 00
	00		 jge	 $LN3@InsertAndr

; 269  : 	{
; 270  : 		//设置变量
; 271  : 		bAndroidExist=false;

  00062	c6 45 ef 00	 mov	 BYTE PTR _bAndroidExist$[ebp], 0

; 272  : 
; 273  : 		//从库存中查找
; 274  : 		for(WORD wItem=0;wItem<wStockCount;wItem++)

  00066	33 c0		 xor	 eax, eax
  00068	66 89 45 e4	 mov	 WORD PTR _wItem$1[ebp], ax
  0006c	eb 0c		 jmp	 SHORT $LN7@InsertAndr
$LN5@InsertAndr:
  0006e	66 8b 45 e4	 mov	 ax, WORD PTR _wItem$1[ebp]
  00072	66 83 c0 01	 add	 ax, 1
  00076	66 89 45 e4	 mov	 WORD PTR _wItem$1[ebp], ax
$LN7@InsertAndr:
  0007a	0f b7 45 e4	 movzx	 eax, WORD PTR _wItem$1[ebp]
  0007e	0f b7 4d f0	 movzx	 ecx, WORD PTR _wStockCount$[ebp]
  00082	3b c1		 cmp	 eax, ecx
  00084	7d 25		 jge	 SHORT $LN6@InsertAndr

; 275  : 		{
; 276  : 			if(m_AndroidItemConfig[wItem].AndroidAccountsInfo.dwUserID==AndroidAccountsInfo[wIndex].dwUserID)

  00086	0f b7 45 e4	 movzx	 eax, WORD PTR _wItem$1[ebp]
  0008a	6b c8 2c	 imul	 ecx, eax, 44
  0008d	0f b7 55 e8	 movzx	 edx, WORD PTR _wIndex$2[ebp]
  00091	6b c2 28	 imul	 eax, edx, 40
  00094	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 75 08	 mov	 esi, DWORD PTR _AndroidAccountsInfo$[ebp]
  0009a	8b 4c 0a 08	 mov	 ecx, DWORD PTR [edx+ecx+8]
  0009e	3b 0c 06	 cmp	 ecx, DWORD PTR [esi+eax]
  000a1	75 06		 jne	 SHORT $LN9@InsertAndr

; 277  : 			{
; 278  : 				bAndroidExist=true;

  000a3	c6 45 ef 01	 mov	 BYTE PTR _bAndroidExist$[ebp], 1

; 279  : 				break;

  000a7	eb 02		 jmp	 SHORT $LN6@InsertAndr
$LN9@InsertAndr:

; 280  : 			}
; 281  : 		}

  000a9	eb c3		 jmp	 SHORT $LN5@InsertAndr
$LN6@InsertAndr:

; 282  : 
; 283  : 		//存在判断
; 284  : 		if(bAndroidExist==true) continue;

  000ab	0f b6 45 ef	 movzx	 eax, BYTE PTR _bAndroidExist$[ebp]
  000af	83 f8 01	 cmp	 eax, 1
  000b2	75 02		 jne	 SHORT $LN10@InsertAndr
  000b4	eb 90		 jmp	 SHORT $LN2@InsertAndr
$LN10@InsertAndr:

; 285  : 
; 286  : 		//从映射中查找
; 287  : 		if(m_AndroidUserItemMap.Lookup(AndroidAccountsInfo[wIndex].dwUserID,pAndroidUserItem)==TRUE)

  000b6	8d 45 f4	 lea	 eax, DWORD PTR _pAndroidUserItem$[ebp]
  000b9	50		 push	 eax
  000ba	0f b7 4d e8	 movzx	 ecx, WORD PTR _wIndex$2[ebp]
  000be	6b d1 28	 imul	 edx, ecx, 40
  000c1	8b 45 08	 mov	 eax, DWORD PTR _AndroidAccountsInfo$[ebp]
  000c4	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  000c7	51		 push	 ecx
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  000d1	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Lookup
  000d6	83 f8 01	 cmp	 eax, 1
  000d9	75 05		 jne	 SHORT $LN11@InsertAndr

; 288  : 		{
; 289  : 			continue;

  000db	e9 66 ff ff ff	 jmp	 $LN2@InsertAndr
$LN11@InsertAndr:

; 290  : 		}
; 291  : 
; 292  : 		//添加机器
; 293  : 		m_AndroidItemConfig[m_wStockCount].AndroidAccountsInfo=AndroidAccountsInfo[wIndex];

  000e0	0f b7 45 e8	 movzx	 eax, WORD PTR _wIndex$2[ebp]
  000e4	6b f0 28	 imul	 esi, eax, 40
  000e7	03 75 08	 add	 esi, DWORD PTR _AndroidAccountsInfo$[ebp]
  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  000f1	6b c2 2c	 imul	 eax, edx, 44
  000f4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	8d 7c 01 08	 lea	 edi, DWORD PTR [ecx+eax+8]
  000fb	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00100	f3 a5		 rep movsd

; 294  : 		m_AndroidItemConfig[m_wStockCount].pAndroidParameter=&pAndroidParameter->AndroidParameter;

  00102	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0010c	6b ca 2c	 imul	 ecx, edx, 44
  0010f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00112	89 44 0a 30	 mov	 DWORD PTR [edx+ecx+48], eax

; 295  : 
; 296  : 		//增加库存
; 297  : 		m_wStockCount++;

  00116	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00119	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  0011d	66 83 c1 01	 add	 cx, 1
  00121	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00124	66 89 4a 06	 mov	 WORD PTR [edx+6], cx

; 298  :     }

  00128	e9 19 ff ff ff	 jmp	 $LN2@InsertAndr
$LN3@InsertAndr:

; 299  : 
; 300  : 	//获取索引
; 301  : 	WORD wParameterIndex=GetAndroidParameterIndex(pAndroidParameter);

  0012d	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00130	50		 push	 eax
  00131	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	e8 00 00 00 00	 call	 ?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z ; CAndroidUserManager::GetAndroidParameterIndex
  00139	66 89 45 e0	 mov	 WORD PTR _wParameterIndex$[ebp], ax

; 302  : 	if(wParameterIndex==INVALID_WORD) return true;

  0013d	0f b7 45 e0	 movzx	 eax, WORD PTR _wParameterIndex$[ebp]
  00141	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00146	75 04		 jne	 SHORT $LN12@InsertAndr
  00148	b0 01		 mov	 al, 1
  0014a	eb 4f		 jmp	 SHORT $LN1@InsertAndr
$LN12@InsertAndr:

; 303  : 
; 304  : 	//开启定时器
; 305  : 	m_pITimerEngine->KillTimer(IDI_ANDROID_IN+wParameterIndex);

  0014c	0f b7 45 e0	 movzx	 eax, WORD PTR _wParameterIndex$[ebp]
  00150	83 c0 64	 add	 eax, 100		; 00000064H
  00153	50		 push	 eax
  00154	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00157	8b 91 08 60 01
	00		 mov	 edx, DWORD PTR [ecx+90120]
  0015d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00160	8b 12		 mov	 edx, DWORD PTR [edx]
  00162	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  00168	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0016b	ff d0		 call	 eax

; 306  : 	m_pITimerEngine->SetTimer(IDI_ANDROID_IN+wParameterIndex,TIME_ANDROID_INOUT*1000L,TIMES_INFINITY,(WPARAM)pAndroidParameter);

  0016d	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00170	50		 push	 eax
  00171	6a ff		 push	 -1
  00173	68 98 3a 00 00	 push	 15000			; 00003a98H
  00178	0f b7 4d e0	 movzx	 ecx, WORD PTR _wParameterIndex$[ebp]
  0017c	83 c1 64	 add	 ecx, 100		; 00000064H
  0017f	51		 push	 ecx
  00180	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00183	8b 82 08 60 01
	00		 mov	 eax, DWORD PTR [edx+90120]
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018c	8b 10		 mov	 edx, DWORD PTR [eax]
  0018e	8b 89 08 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90120]
  00194	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00197	ff d0		 call	 eax

; 307  : 
; 308  : 	return true;

  00199	b0 01		 mov	 al, 1
$LN1@InsertAndr:

; 309  : }

  0019b	5f		 pop	 edi
  0019c	5e		 pop	 esi
  0019d	5b		 pop	 ebx
  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c2 0c 00	 ret	 12			; 0000000cH
?InsertAndroidInfo@CAndroidUserManager@@UAE_NQAUtagAndroidAccountsInfo@@GK@Z ENDP ; CAndroidUserManager::InsertAndroidInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?AddAndroidParameter@CAndroidUserManager@@UAE_NQAUtagAndroidParameter@@G@Z
_TEXT	SEGMENT
tv86 = -92						; size = 4
$T1 = -88						; size = 4
_nIndex$2 = -20						; size = 4
_bVacancyExist$3 = -13					; size = 1
_wIndex$4 = -12						; size = 2
_pAndroidParameter$ = -8				; size = 4
_this$ = -4						; size = 4
_AndroidParameter$ = 8					; size = 4
_wParameterCount$ = 12					; size = 2
?AddAndroidParameter@CAndroidUserManager@@UAE_NQAUtagAndroidParameter@@G@Z PROC ; CAndroidUserManager::AddAndroidParameter, COMDAT
; _this$ = ecx

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 207  : 	//变量定义
; 208  : 	tagAndroidParameterEx * pAndroidParameter=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pAndroidParameter$[ebp], 0

; 209  : 
; 210  : 	for(WORD wIndex=0;wIndex<wParameterCount;wIndex++)

  00013	33 c0		 xor	 eax, eax
  00015	66 89 45 f4	 mov	 WORD PTR _wIndex$4[ebp], ax
  00019	eb 0c		 jmp	 SHORT $LN4@AddAndroid
$LN2@AddAndroid:
  0001b	66 8b 45 f4	 mov	 ax, WORD PTR _wIndex$4[ebp]
  0001f	66 83 c0 01	 add	 ax, 1
  00023	66 89 45 f4	 mov	 WORD PTR _wIndex$4[ebp], ax
$LN4@AddAndroid:
  00027	0f b7 45 f4	 movzx	 eax, WORD PTR _wIndex$4[ebp]
  0002b	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wParameterCount$[ebp]
  0002f	3b c1		 cmp	 eax, ecx
  00031	0f 8d 25 01 00
	00		 jge	 $LN3@AddAndroid

; 211  : 	{
; 212  : 		//数目限制
; 213  : 		if(m_AndroidParameterArray.GetCount()>=MAX_BATCH) break;

  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00040	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  00045	83 f8 30	 cmp	 eax, 48			; 00000030H
  00048	7c 05		 jl	 SHORT $LN8@AddAndroid
  0004a	e9 0d 01 00 00	 jmp	 $LN3@AddAndroid
$LN8@AddAndroid:

; 214  : 
; 215  : 		//设置资源
; 216  : 		pAndroidParameter = GetAndroidParameter(AndroidParameter[wIndex].dwBatchID);

  0004f	0f b7 45 f4	 movzx	 eax, WORD PTR _wIndex$4[ebp]
  00053	6b c8 54	 imul	 ecx, eax, 84
  00056	8b 55 08	 mov	 edx, DWORD PTR _AndroidParameter$[ebp]
  00059	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  0005c	50		 push	 eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z ; CAndroidUserManager::GetAndroidParameter
  00065	89 45 f8	 mov	 DWORD PTR _pAndroidParameter$[ebp], eax

; 217  : 		if(pAndroidParameter==NULL)

  00068	83 7d f8 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  0006c	0f 85 cc 00 00
	00		 jne	 $LN9@AddAndroid

; 218  : 		{
; 219  : 			//申请资源
; 220  : 			pAndroidParameter = new tagAndroidParameterEx();

  00072	6a 56		 push	 86			; 00000056H
  00074	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00079	83 c4 04	 add	 esp, 4
  0007c	89 45 a8	 mov	 DWORD PTR $T1[ebp], eax
  0007f	83 7d a8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00083	74 18		 je	 SHORT $LN14@AddAndroid
  00085	6a 56		 push	 86			; 00000056H
  00087	6a 00		 push	 0
  00089	8b 45 a8	 mov	 eax, DWORD PTR $T1[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _memset
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH
  00095	8b 4d a8	 mov	 ecx, DWORD PTR $T1[ebp]
  00098	89 4d a4	 mov	 DWORD PTR tv86[ebp], ecx
  0009b	eb 07		 jmp	 SHORT $LN15@AddAndroid
$LN14@AddAndroid:
  0009d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN15@AddAndroid:
  000a4	8b 55 a4	 mov	 edx, DWORD PTR tv86[ebp]
  000a7	89 55 f8	 mov	 DWORD PTR _pAndroidParameter$[ebp], edx

; 221  : 			if(pAndroidParameter==NULL) return false;

  000aa	83 7d f8 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  000ae	75 07		 jne	 SHORT $LN10@AddAndroid
  000b0	32 c0		 xor	 al, al
  000b2	e9 a7 00 00 00	 jmp	 $LN1@AddAndroid
$LN10@AddAndroid:

; 222  : 
; 223  : 			//设置变量
; 224  : 			pAndroidParameter->bIsValided=true;

  000b7	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  000ba	c6 40 54 01	 mov	 BYTE PTR [eax+84], 1

; 225  : 			pAndroidParameter->bIsLoadAndroid=false;

  000be	8b 45 f8	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  000c1	c6 40 55 00	 mov	 BYTE PTR [eax+85], 0

; 226  : 
; 227  : 			//变量定义
; 228  : 			bool bVacancyExist=false;

  000c5	c6 45 f3 00	 mov	 BYTE PTR _bVacancyExist$3[ebp], 0

; 229  : 
; 230  : 			//查找空缺
; 231  : 			for(INT_PTR nIndex=0;nIndex<m_AndroidParameterArray.GetCount();nIndex++)

  000c9	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nIndex$2[ebp], 0
  000d0	eb 09		 jmp	 SHORT $LN7@AddAndroid
$LN5@AddAndroid:
  000d2	8b 45 ec	 mov	 eax, DWORD PTR _nIndex$2[ebp]
  000d5	83 c0 01	 add	 eax, 1
  000d8	89 45 ec	 mov	 DWORD PTR _nIndex$2[ebp], eax
$LN7@AddAndroid:
  000db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  000e4	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  000e9	39 45 ec	 cmp	 DWORD PTR _nIndex$2[ebp], eax
  000ec	7d 36		 jge	 SHORT $LN6@AddAndroid

; 232  : 			{
; 233  : 				if(m_AndroidParameterArray[nIndex]==NULL)

  000ee	8b 45 ec	 mov	 eax, DWORD PTR _nIndex$2[ebp]
  000f1	50		 push	 eax
  000f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  000fb	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  00100	83 38 00	 cmp	 DWORD PTR [eax], 0
  00103	75 1d		 jne	 SHORT $LN11@AddAndroid

; 234  : 				{
; 235  : 					bVacancyExist=true;

  00105	c6 45 f3 01	 mov	 BYTE PTR _bVacancyExist$3[ebp], 1

; 236  : 					m_AndroidParameterArray[nIndex]=pAndroidParameter;

  00109	8b 45 ec	 mov	 eax, DWORD PTR _nIndex$2[ebp]
  0010c	50		 push	 eax
  0010d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00116	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  0011b	8b 4d f8	 mov	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  0011e	89 08		 mov	 DWORD PTR [eax], ecx

; 237  : 					break;

  00120	eb 02		 jmp	 SHORT $LN6@AddAndroid
$LN11@AddAndroid:

; 238  : 				}
; 239  : 			}

  00122	eb ae		 jmp	 SHORT $LN5@AddAndroid
$LN6@AddAndroid:

; 240  : 
; 241  : 			//不存在空缺
; 242  : 			if(bVacancyExist==false)

  00124	0f b6 45 f3	 movzx	 eax, BYTE PTR _bVacancyExist$3[ebp]
  00128	85 c0		 test	 eax, eax
  0012a	75 12		 jne	 SHORT $LN9@AddAndroid

; 243  : 			{
; 244  : 				m_AndroidParameterArray.Add(pAndroidParameter);

  0012c	8d 45 f8	 lea	 eax, DWORD PTR _pAndroidParameter$[ebp]
  0012f	50		 push	 eax
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00139	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEHABQAUtagAndroidParameterEx@@@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::Add
$LN9@AddAndroid:

; 245  : 			}
; 246  : 		}
; 247  : 
; 248  : 		//拷贝数据
; 249  : 		CopyMemory(pAndroidParameter,&AndroidParameter[wIndex],sizeof(tagAndroidParameter));

  0013e	6a 54		 push	 84			; 00000054H
  00140	0f b7 45 f4	 movzx	 eax, WORD PTR _wIndex$4[ebp]
  00144	6b c8 54	 imul	 ecx, eax, 84
  00147	03 4d 08	 add	 ecx, DWORD PTR _AndroidParameter$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 55 f8	 mov	 edx, DWORD PTR _pAndroidParameter$[ebp]
  0014e	52		 push	 edx
  0014f	e8 00 00 00 00	 call	 _memcpy
  00154	83 c4 0c	 add	 esp, 12			; 0000000cH

; 250  : 	}

  00157	e9 bf fe ff ff	 jmp	 $LN2@AddAndroid
$LN3@AddAndroid:

; 251  : 
; 252  : 	return true;

  0015c	b0 01		 mov	 al, 1
$LN1@AddAndroid:

; 253  : }

  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 08 00	 ret	 8
?AddAndroidParameter@CAndroidUserManager@@UAE_NQAUtagAndroidParameter@@G@Z ENDP ; CAndroidUserManager::AddAndroidParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z
_TEXT	SEGMENT
$T2 = -124						; size = 4
_i$3 = -56						; size = 4
_wParameterIndex$ = -52					; size = 2
_dwTodayTickCount$ = -48				; size = 4
_SystemTime$ = -44					; size = 16
_pAndroidParameter$ = -28				; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_dwBatchID$ = 8						; size = 4
?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z PROC ; CAndroidUserManager::RemoveAndroidParameter, COMDAT
; _this$ = ecx

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 157  : 	//获取参数
; 158  : 	tagAndroidParameterEx * pAndroidParameter = GetAndroidParameter(dwBatchID);

  00032	8b 45 08	 mov	 eax, DWORD PTR _dwBatchID$[ebp]
  00035	50		 push	 eax
  00036	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?GetAndroidParameter@CAndroidUserManager@@QAEPAUtagAndroidParameterEx@@K@Z ; CAndroidUserManager::GetAndroidParameter
  0003e	89 45 e4	 mov	 DWORD PTR _pAndroidParameter$[ebp], eax

; 159  : 	if(pAndroidParameter==NULL) return false;

  00041	83 7d e4 00	 cmp	 DWORD PTR _pAndroidParameter$[ebp], 0
  00045	75 07		 jne	 SHORT $LN5@RemoveAndr
  00047	32 c0		 xor	 al, al
  00049	e9 83 01 00 00	 jmp	 $LN1@RemoveAndr
$LN5@RemoveAndr:

; 160  : 
; 161  : 	//获取时间
; 162  : 	SYSTEMTIME SystemTime;
; 163  : 	GetLocalTime(&SystemTime);

  0004e	8d 45 d4	 lea	 eax, DWORD PTR _SystemTime$[ebp]
  00051	50		 push	 eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 164  : 	DWORD dwTodayTickCount= GetTodayTickCount(SystemTime);

  00058	8d 45 d4	 lea	 eax, DWORD PTR _SystemTime$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?GetTodayTickCount@CAndroidUserManager@@IAEKAAU_SYSTEMTIME@@@Z ; CAndroidUserManager::GetTodayTickCount
  00064	89 45 d0	 mov	 DWORD PTR _dwTodayTickCount$[ebp], eax

; 165  : 
; 166  : 	//调整参数
; 167  : 	pAndroidParameter->bIsValided=false;

  00067	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  0006a	c6 40 54 00	 mov	 BYTE PTR [eax+84], 0

; 168  : 	pAndroidParameter->AndroidParameter.dwLeaveTime=dwTodayTickCount;

  0006e	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00071	8b 4d d0	 mov	 ecx, DWORD PTR _dwTodayTickCount$[ebp]
  00074	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 169  : 
; 170  : 	//获取索引
; 171  : 	WORD wParameterIndex=GetAndroidParameterIndex(pAndroidParameter);

  00077	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?GetAndroidParameterIndex@CAndroidUserManager@@IAEGPAUtagAndroidParameterEx@@@Z ; CAndroidUserManager::GetAndroidParameterIndex
  00083	66 89 45 cc	 mov	 WORD PTR _wParameterIndex$[ebp], ax

; 172  : 	if(wParameterIndex==INVALID_WORD) return true;

  00087	0f b7 45 cc	 movzx	 eax, WORD PTR _wParameterIndex$[ebp]
  0008b	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00090	75 07		 jne	 SHORT $LN6@RemoveAndr
  00092	b0 01		 mov	 al, 1
  00094	e9 38 01 00 00	 jmp	 $LN1@RemoveAndr
$LN6@RemoveAndr:

; 173  : 
; 174  : 	//关闭定时器
; 175  : 	m_pITimerEngine->KillTimer(IDI_ANDROID_IN+wParameterIndex);

  00099	0f b7 45 cc	 movzx	 eax, WORD PTR _wParameterIndex$[ebp]
  0009d	83 c0 64	 add	 eax, 100		; 00000064H
  000a0	50		 push	 eax
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	8b 91 08 60 01
	00		 mov	 edx, DWORD PTR [ecx+90120]
  000aa	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 12		 mov	 edx, DWORD PTR [edx]
  000af	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  000b5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  000b8	ff d0		 call	 eax

; 176  : 
; 177  : 	//删掉库存
; 178  : 	for (int i=m_wStockCount-1;i>=0;i--)

  000ba	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  000c1	83 e9 01	 sub	 ecx, 1
  000c4	89 4d c8	 mov	 DWORD PTR _i$3[ebp], ecx
  000c7	eb 09		 jmp	 SHORT $LN4@RemoveAndr
$LN2@RemoveAndr:
  000c9	8b 45 c8	 mov	 eax, DWORD PTR _i$3[ebp]
  000cc	83 e8 01	 sub	 eax, 1
  000cf	89 45 c8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@RemoveAndr:
  000d2	83 7d c8 00	 cmp	 DWORD PTR _i$3[ebp], 0
  000d6	7c 49		 jl	 SHORT $LN3@RemoveAndr

; 179  : 	{
; 180  : 		//批次判断
; 181  : 		if(m_AndroidItemConfig[i].pAndroidParameter!=&pAndroidParameter->AndroidParameter) continue;

  000d8	6b 45 c8 2c	 imul	 eax, DWORD PTR _i$3[ebp], 44
  000dc	8b 4d e4	 mov	 ecx, DWORD PTR _pAndroidParameter$[ebp]
  000df	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	39 4c 02 30	 cmp	 DWORD PTR [edx+eax+48], ecx
  000e6	74 02		 je	 SHORT $LN7@RemoveAndr
  000e8	eb df		 jmp	 SHORT $LN2@RemoveAndr
$LN7@RemoveAndr:

; 182  : 
; 183  : 		//删除存存
; 184  : 		m_wStockCount--;

  000ea	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  000f1	66 83 e9 01	 sub	 cx, 1
  000f5	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000f8	66 89 4a 06	 mov	 WORD PTR [edx+6], cx

; 185  : 		m_AndroidItemConfig[i]=m_AndroidItemConfig[m_wStockCount];

  000fc	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000ff	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00103	6b d1 2c	 imul	 edx, ecx, 44
  00106	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8d 74 10 08	 lea	 esi, DWORD PTR [eax+edx+8]
  0010d	6b 4d c8 2c	 imul	 ecx, DWORD PTR _i$3[ebp], 44
  00111	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00114	8d 7c 0a 08	 lea	 edi, DWORD PTR [edx+ecx+8]
  00118	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0011d	f3 a5		 rep movsd

; 186  : 	}

  0011f	eb a8		 jmp	 SHORT $LN2@RemoveAndr
$LN3@RemoveAndr:

; 187  : 
; 188  : 	//加载判断
; 189  : 	if(pAndroidParameter->bIsLoadAndroid==false)

  00121	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00124	0f b6 48 55	 movzx	 ecx, BYTE PTR [eax+85]
  00128	85 c9		 test	 ecx, ecx
  0012a	75 74		 jne	 SHORT $LN8@RemoveAndr

; 190  : 	{
; 191  : 		//释放资源
; 192  : 		SafeDelete(pAndroidParameter);

  0012c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00133	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  00136	89 45 84	 mov	 DWORD PTR $T2[ebp], eax
  00139	6a 56		 push	 86			; 00000056H
  0013b	8b 4d 84	 mov	 ecx, DWORD PTR $T2[ebp]
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00144	83 c4 08	 add	 esp, 8
  00147	eb 23		 jmp	 SHORT $LN12@RemoveAndr
__catch$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z$0:
  00149	33 c0		 xor	 eax, eax
  0014b	75 19		 jne	 SHORT $LN11@RemoveAndr
  0014d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z@4JA
  00153	83 c1 24	 add	 ecx, 36			; 00000024H
  00156	51		 push	 ecx
  00157	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0015c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00161	85 c0		 test	 eax, eax
  00163	74 01		 je	 SHORT $LN11@RemoveAndr
  00165	cc		 int	 3
$LN11@RemoveAndr:
  00166	b8 00 00 00 00	 mov	 eax, $LN15@RemoveAndr
  0016b	c3		 ret	 0
$LN12@RemoveAndr:
  0016c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00173	eb 07		 jmp	 SHORT __tryend$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z$1
$LN15@RemoveAndr:
  00175	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z$1:
  0017c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pAndroidParameter$[ebp], 0

; 193  : 		m_AndroidParameterArray[wParameterIndex]=NULL;

  00183	0f b7 45 cc	 movzx	 eax, WORD PTR _wParameterIndex$[ebp]
  00187	50		 push	 eax
  00188	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00191	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  00196	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 
; 195  : 		return true;

  0019c	b0 01		 mov	 al, 1
  0019e	eb 31		 jmp	 SHORT $LN1@RemoveAndr
$LN8@RemoveAndr:

; 196  : 	}
; 197  : 
; 198  : 	//开启定时器
; 199  : 	m_pITimerEngine->SetTimer(IDI_ANDROID_OUT+wParameterIndex,TIME_ANDROID_INOUT*1000L,TIMES_INFINITY,(WPARAM)pAndroidParameter);

  001a0	8b 45 e4	 mov	 eax, DWORD PTR _pAndroidParameter$[ebp]
  001a3	50		 push	 eax
  001a4	6a ff		 push	 -1
  001a6	68 98 3a 00 00	 push	 15000			; 00003a98H
  001ab	0f b7 4d cc	 movzx	 ecx, WORD PTR _wParameterIndex$[ebp]
  001af	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  001b5	51		 push	 ecx
  001b6	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  001b9	8b 82 08 60 01
	00		 mov	 eax, DWORD PTR [edx+90120]
  001bf	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	8b 89 08 60 01
	00		 mov	 ecx, DWORD PTR [ecx+90120]
  001ca	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  001cd	ff d0		 call	 eax

; 200  : 
; 201  : 	return true;

  001cf	b0 01		 mov	 al, 1
$LN1@RemoveAndr:

; 202  : }

  001d1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001d4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001db	59		 pop	 ecx
  001dc	5f		 pop	 edi
  001dd	5e		 pop	 esi
  001de	5b		 pop	 ebx
  001df	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e2	33 cd		 xor	 ecx, ebp
  001e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e9	8b e5		 mov	 esp, ebp
  001eb	5d		 pop	 ebp
  001ec	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveAndroidParameter@CAndroidUserManager@@UAE_NK@Z ENDP ; CAndroidUserManager::RemoveAndroidParameter
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?InitAndroidUser@CAndroidUserManager@@UAE_NAAUtagAndroidUserParameter@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_AndroidUserParameter$ = 8				; size = 4
?InitAndroidUser@CAndroidUserManager@@UAE_NAAUtagAndroidUserParameter@@@Z PROC ; CAndroidUserManager::InitAndroidUser, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : 	//服务配置
; 134  : 	m_bServiceContinue=AndroidUserParameter.bServiceContinue;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  00012	8a 11		 mov	 dl, BYTE PTR [ecx]
  00014	88 90 20 60 01
	00		 mov	 BYTE PTR [eax+90144], dl

; 135  : 	m_dwMinSitInterval=AndroidUserParameter.dwMinSitInterval;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  00020	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00023	89 90 24 60 01
	00		 mov	 DWORD PTR [eax+90148], edx

; 136  : 	m_dwMaxSitInterval=AndroidUserParameter.dwMaxSitInterval;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	89 90 28 60 01
	00		 mov	 DWORD PTR [eax+90152], edx

; 137  : 
; 138  : 	//设置变量
; 139  : 	m_pGameParameter=AndroidUserParameter.pGameParameter;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  0003e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00041	89 90 2c 60 01
	00		 mov	 DWORD PTR [eax+90156], edx

; 140  : 	m_pGameServiceAttrib=AndroidUserParameter.pGameServiceAttrib;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  0004d	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00050	89 90 30 60 01
	00		 mov	 DWORD PTR [eax+90160], edx

; 141  : 	m_pGameServiceOption=AndroidUserParameter.pGameServiceOption;

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  0005c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0005f	89 90 34 60 01
	00		 mov	 DWORD PTR [eax+90164], edx

; 142  : 	m_pGameMatchOption=AndroidUserParameter.pGameMatchOption;

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  0006b	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0006e	89 90 38 60 01
	00		 mov	 DWORD PTR [eax+90168], edx

; 143  : 
; 144  : 	//组件接口
; 145  : 	m_pITimerEngine=AndroidUserParameter.pITimerEngine;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  0007a	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0007d	89 90 08 60 01
	00		 mov	 DWORD PTR [eax+90120], edx

; 146  : 	m_pIServerUserManager=AndroidUserParameter.pIServerUserManager;

  00083	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  00089	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0008c	89 90 0c 60 01
	00		 mov	 DWORD PTR [eax+90124], edx

; 147  : 	m_pIGameServiceManager=AndroidUserParameter.pIGameServiceManager;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  00098	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0009b	89 90 10 60 01
	00		 mov	 DWORD PTR [eax+90128], edx

; 148  : 	m_pIGameServiceSustomTime=AndroidUserParameter.pIGameServiceSustomTime;

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  000a7	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  000aa	89 90 14 60 01
	00		 mov	 DWORD PTR [eax+90132], edx

; 149  : 	m_pITCPNetworkEngineEvent=AndroidUserParameter.pITCPNetworkEngineEvent;

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _AndroidUserParameter$[ebp]
  000b6	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  000b9	89 90 18 60 01
	00		 mov	 DWORD PTR [eax+90136], edx

; 150  : 
; 151  : 	return true;

  000bf	b0 01		 mov	 al, 1

; 152  : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
?InitAndroidUser@CAndroidUserManager@@UAE_NAAUtagAndroidUserParameter@@@Z ENDP ; CAndroidUserManager::InitAndroidUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?ConcludeService@CAndroidUserManager@@UAE_NXZ
_TEXT	SEGMENT
tv159 = -100						; size = 4
tv84 = -100						; size = 4
$T2 = -96						; size = 4
_i$3 = -28						; size = 4
_i$4 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?ConcludeService@CAndroidUserManager@@UAE_NXZ PROC	; CAndroidUserManager::ConcludeService, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ConcludeService@CAndroidUserManager@@UAE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 105  : 	//删除存储
; 106  : 	for (INT_PTR i=0;i<m_AndroidUserItemArray.GetCount();i++)

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  00036	eb 09		 jmp	 SHORT $LN4@ConcludeSe
$LN2@ConcludeSe:
  00038	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 e8	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@ConcludeSe:
  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  0004a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  0004f	39 45 e8	 cmp	 DWORD PTR _i$4[ebp], eax
  00052	7d 54		 jge	 SHORT $LN3@ConcludeSe

; 107  : 	{
; 108  : 		SafeRelease(m_AndroidUserItemArray[i]);

  00054	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  00057	50		 push	 eax
  00058	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00061	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
  00066	83 38 00	 cmp	 DWORD PTR [eax], 0
  00069	74 3b		 je	 SHORT $LN8@ConcludeSe
  0006b	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00078	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	89 4d 9c	 mov	 DWORD PTR tv84[ebp], ecx
  00082	8b 55 9c	 mov	 edx, DWORD PTR tv84[ebp]
  00085	8b 02		 mov	 eax, DWORD PTR [edx]
  00087	8b 4d 9c	 mov	 ecx, DWORD PTR tv84[ebp]
  0008a	8b 10		 mov	 edx, DWORD PTR [eax]
  0008c	ff d2		 call	 edx
  0008e	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  00091	50		 push	 eax
  00092	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  0009b	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
  000a0	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN8@ConcludeSe:

; 109  : 	}

  000a6	eb 90		 jmp	 SHORT $LN2@ConcludeSe
$LN3@ConcludeSe:

; 110  : 
; 111  : 	//删除存储
; 112  : 	for (INT_PTR i=0;i<m_AndroidParameterArray.GetCount();i++)

  000a8	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000af	eb 09		 jmp	 SHORT $LN7@ConcludeSe
$LN5@ConcludeSe:
  000b1	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  000b4	83 c0 01	 add	 eax, 1
  000b7	89 45 e4	 mov	 DWORD PTR _i$3[ebp], eax
$LN7@ConcludeSe:
  000ba	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  000c3	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  000c8	39 45 e4	 cmp	 DWORD PTR _i$3[ebp], eax
  000cb	0f 8d 84 00 00
	00		 jge	 $LN6@ConcludeSe

; 113  : 	{
; 114  : 		SafeDelete(m_AndroidParameterArray[i]);

  000d1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000d8	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  000db	50		 push	 eax
  000dc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  000e5	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  000ea	89 45 9c	 mov	 DWORD PTR tv159[ebp], eax
  000ed	8b 4d 9c	 mov	 ecx, DWORD PTR tv159[ebp]
  000f0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f2	89 55 a0	 mov	 DWORD PTR $T2[ebp], edx
  000f5	6a 56		 push	 86			; 00000056H
  000f7	8b 45 a0	 mov	 eax, DWORD PTR $T2[ebp]
  000fa	50		 push	 eax
  000fb	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00100	83 c4 08	 add	 esp, 8
  00103	eb 23		 jmp	 SHORT $LN12@ConcludeSe
__catch$?ConcludeService@CAndroidUserManager@@UAE_NXZ$0:
  00105	33 c0		 xor	 eax, eax
  00107	75 19		 jne	 SHORT $LN11@ConcludeSe
  00109	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ConcludeService@CAndroidUserManager@@UAE_NXZ@4JA
  0010f	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00112	51		 push	 ecx
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00118	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0011d	85 c0		 test	 eax, eax
  0011f	74 01		 je	 SHORT $LN11@ConcludeSe
  00121	cc		 int	 3
$LN11@ConcludeSe:
  00122	b8 00 00 00 00	 mov	 eax, $LN15@ConcludeSe
  00127	c3		 ret	 0
$LN12@ConcludeSe:
  00128	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0012f	eb 07		 jmp	 SHORT __tryend$?ConcludeService@CAndroidUserManager@@UAE_NXZ$1
$LN15@ConcludeSe:
  00131	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?ConcludeService@CAndroidUserManager@@UAE_NXZ$1:
  00138	8b 45 e4	 mov	 eax, DWORD PTR _i$3[ebp]
  0013b	50		 push	 eax
  0013c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0013f	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00145	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
  0014a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 115  : 	}

  00150	e9 5c ff ff ff	 jmp	 $LN5@ConcludeSe
$LN6@ConcludeSe:

; 116  : 
; 117  : 	//清理数组
; 118  : 	m_AndroidUserItemMap.RemoveAll();

  00155	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00158	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0015e	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll

; 119  : 	m_AndroidParameterArray.RemoveAll();

  00163	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  0016c	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::RemoveAll

; 120  : 	m_AndroidUserItemArray.RemoveAll();

  00171	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  0017a	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAll

; 121  : 	m_AndroidUserItemBuffer.RemoveAll();

  0017f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  00188	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAll

; 122  : 
; 123  : 	//库存用户
; 124  : 	m_wStockCount=0;

  0018d	33 c0		 xor	 eax, eax
  0018f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 125  : 	ZeroMemory(&m_AndroidItemConfig,sizeof(m_AndroidItemConfig));

  00196	68 00 60 01 00	 push	 90112			; 00016000H
  0019b	6a 00		 push	 0
  0019d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001a0	83 c0 08	 add	 eax, 8
  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 _memset
  001a9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 126  : 
; 127  : 	return true;

  001ac	b0 01		 mov	 al, 1

; 128  : }

  001ae	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001b1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b8	59		 pop	 ecx
  001b9	5f		 pop	 edi
  001ba	5e		 pop	 esi
  001bb	5b		 pop	 ebx
  001bc	8b e5		 mov	 esp, ebp
  001be	5d		 pop	 ebp
  001bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ConcludeService@CAndroidUserManager@@UAE_NXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ConcludeService@CAndroidUserManager@@UAE_NXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ConcludeService@CAndroidUserManager@@UAE_NXZ ENDP	; CAndroidUserManager::ConcludeService
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?StartService@CAndroidUserManager@@UAE_NXZ
_TEXT	SEGMENT
_dwElapse$ = -12					; size = 4
_dwTimeCell$ = -8					; size = 4
_this$ = -4						; size = 4
?StartService@CAndroidUserManager@@UAE_NXZ PROC		; CAndroidUserManager::StartService, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	//时间间隔
; 83   : 	DWORD dwTimeCell=TIME_CELL;

  0000c	c7 45 f8 c8 00
	00 00		 mov	 DWORD PTR _dwTimeCell$[ebp], 200 ; 000000c8H

; 84   : 	DWORD dwElapse=TIME_ANDROID_PULSE*1000L;

  00013	c7 45 f4 e8 03
	00 00		 mov	 DWORD PTR _dwElapse$[ebp], 1000 ; 000003e8H

; 85   : 
; 86   : 	//调整时间
; 87   : 	if (m_pIGameServiceSustomTime!=NULL)

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 b8 14 60 01
	00 00		 cmp	 DWORD PTR [eax+90132], 0
  00024	74 56		 je	 SHORT $LN2@StartServi

; 88   : 	{		
; 89   : 		dwTimeCell=m_pIGameServiceSustomTime->GetTimerEngineTimeCell();

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 88 14 60 01
	00		 mov	 ecx, DWORD PTR [eax+90132]
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	8b 8a 14 60 01
	00		 mov	 ecx, DWORD PTR [edx+90132]
  0003a	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0003d	ff d2		 call	 edx
  0003f	89 45 f8	 mov	 DWORD PTR _dwTimeCell$[ebp], eax

; 90   : 		if (dwTimeCell>TIME_CELL) dwTimeCell=TIME_CELL;

  00042	81 7d f8 c8 00
	00 00		 cmp	 DWORD PTR _dwTimeCell$[ebp], 200 ; 000000c8H
  00049	76 07		 jbe	 SHORT $LN3@StartServi
  0004b	c7 45 f8 c8 00
	00 00		 mov	 DWORD PTR _dwTimeCell$[ebp], 200 ; 000000c8H
$LN3@StartServi:

; 91   : 
; 92   : 		dwElapse=m_pIGameServiceSustomTime->GetAndroidTimerPulse();		

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 88 14 60 01
	00		 mov	 ecx, DWORD PTR [eax+90132]
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00060	8b 8a 14 60 01
	00		 mov	 ecx, DWORD PTR [edx+90132]
  00066	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00069	ff d2		 call	 edx
  0006b	89 45 f4	 mov	 DWORD PTR _dwElapse$[ebp], eax

; 93   : 		if (dwElapse<dwTimeCell) dwElapse=dwTimeCell;

  0006e	8b 45 f4	 mov	 eax, DWORD PTR _dwElapse$[ebp]
  00071	3b 45 f8	 cmp	 eax, DWORD PTR _dwTimeCell$[ebp]
  00074	73 06		 jae	 SHORT $LN2@StartServi
  00076	8b 45 f8	 mov	 eax, DWORD PTR _dwTimeCell$[ebp]
  00079	89 45 f4	 mov	 DWORD PTR _dwElapse$[ebp], eax
$LN2@StartServi:

; 94   : 	}
; 95   : 
; 96   : 	//启动时间
; 97   : 	m_pITimerEngine->SetTimer(IDI_ANDROID_PULSE,dwElapse,TIMES_INFINITY,0);

  0007c	6a 00		 push	 0
  0007e	6a ff		 push	 -1
  00080	8b 45 f4	 mov	 eax, DWORD PTR _dwElapse$[ebp]
  00083	50		 push	 eax
  00084	68 c4 00 00 00	 push	 196			; 000000c4H
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	8b 91 08 60 01
	00		 mov	 edx, DWORD PTR [ecx+90120]
  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 12		 mov	 edx, DWORD PTR [edx]
  00097	8b 88 08 60 01
	00		 mov	 ecx, DWORD PTR [eax+90120]
  0009d	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000a0	ff d0		 call	 eax

; 98   : 
; 99   : 	return true;

  000a2	b0 01		 mov	 al, 1

; 100  : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
?StartService@CAndroidUserManager@@UAE_NXZ ENDP		; CAndroidUserManager::StartService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?QueryInterface@CAndroidUserManager@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CAndroidUserManager@@UAEPAXABU_GUID@@K@Z PROC ; CAndroidUserManager::QueryInterface, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   : 	QUERYINTERFACE(IAndroidUserManager,Guid,dwQueryVer);

  0000c	68 00 00 00 00	 push	 OFFSET ?IID_IAndroidUserManager@@3U_GUID@@B
  00011	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _==
  0001a	83 c4 08	 add	 esp, 8
  0001d	0f b6 c8	 movzx	 ecx, al
  00020	85 c9		 test	 ecx, ecx
  00022	74 1d		 je	 SHORT $LN2@QueryInter
  00024	68 00 01 01 06	 push	 100729088		; 06010100H
  00029	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00032	83 c4 08	 add	 esp, 8
  00035	0f b6 c8	 movzx	 ecx, al
  00038	85 c9		 test	 ecx, ecx
  0003a	74 05		 je	 SHORT $LN2@QueryInter
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	eb 37		 jmp	 SHORT $LN1@QueryInter
$LN2@QueryInter:

; 75   : 	QUERYINTERFACE_IUNKNOWNEX(IAndroidUserManager,Guid,dwQueryVer);

  00041	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00046	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _==
  0004f	83 c4 08	 add	 esp, 8
  00052	0f b6 c8	 movzx	 ecx, al
  00055	85 c9		 test	 ecx, ecx
  00057	74 1d		 je	 SHORT $LN3@QueryInter
  00059	68 00 01 01 06	 push	 100729088		; 06010100H
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00067	83 c4 08	 add	 esp, 8
  0006a	0f b6 c8	 movzx	 ecx, al
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 05		 je	 SHORT $LN3@QueryInter
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN3@QueryInter:

; 76   : 	return NULL;

  00076	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 77   : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?QueryInterface@CAndroidUserManager@@UAEPAXABU_GUID@@K@Z ENDP ; CAndroidUserManager::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.h
;	COMDAT ?Release@CAndroidUserManager@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@CAndroidUserManager@@UAEXXZ PROC		; CAndroidUserManager::Release, COMDAT
; _this$ = ecx

; 83   : 	virtual VOID Release() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?Release@CAndroidUserManager@@UAEXXZ ENDP		; CAndroidUserManager::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ??1CAndroidUserManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAndroidUserManager@@UAE@XZ PROC			; CAndroidUserManager::~CAndroidUserManager, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAndroidUserManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAndroidUserManager@@6B@

; 62   : 	//清理断言
; 63   : 	ASSERT(m_AndroidUserItemMap.GetCount()==0L);

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0003d	e8 00 00 00 00	 call	 ?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetCount
  00042	85 c0		 test	 eax, eax
  00044	74 18		 je	 SHORT $LN3@CAndroidUs
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA
  0004b	83 c0 02	 add	 eax, 2
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00054	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00059	85 c0		 test	 eax, eax
  0005b	74 01		 je	 SHORT $LN3@CAndroidUs
  0005d	cc		 int	 3
$LN3@CAndroidUs:

; 64   : 	ASSERT(m_AndroidParameterArray.GetCount()==0L);

  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00067	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
  0006c	85 c0		 test	 eax, eax
  0006e	74 18		 je	 SHORT $LN4@CAndroidUs
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA
  00075	83 c0 03	 add	 eax, 3
  00078	50		 push	 eax
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0007e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00083	85 c0		 test	 eax, eax
  00085	74 01		 je	 SHORT $LN4@CAndroidUs
  00087	cc		 int	 3
$LN4@CAndroidUs:

; 65   : 	ASSERT(m_AndroidUserItemArray.GetCount()==0L);

  00088	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00091	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  00096	85 c0		 test	 eax, eax
  00098	74 18		 je	 SHORT $LN5@CAndroidUs
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA
  0009f	83 c0 04	 add	 eax, 4
  000a2	50		 push	 eax
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a8	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ad	85 c0		 test	 eax, eax
  000af	74 01		 je	 SHORT $LN5@CAndroidUs
  000b1	cc		 int	 3
$LN5@CAndroidUs:

; 66   : 	ASSERT(m_AndroidUserItemBuffer.GetCount()==0L);

  000b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  000bb	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
  000c0	85 c0		 test	 eax, eax
  000c2	74 18		 je	 SHORT $LN1@CAndroidUs
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0???1CAndroidUserManager@@UAE@XZ@4JA
  000c9	83 c0 05	 add	 eax, 5
  000cc	50		 push	 eax
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@BBPJKEPN@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000d2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d7	85 c0		 test	 eax, eax
  000d9	74 01		 je	 SHORT $LN1@CAndroidUs
  000db	cc		 int	 3
$LN1@CAndroidUs:

; 67   : 
; 68   : 	return;
; 69   : }

  000dc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  000e5	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  000f3	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00101	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::~CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
  00106	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0010f	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::~CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
  00114	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00117	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011e	59		 pop	 ecx
  0011f	5f		 pop	 edi
  00120	5e		 pop	 esi
  00121	5b		 pop	 ebx
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAndroidUserManager@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAndroidUserManager@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAndroidUserManager@@UAE@XZ ENDP			; CAndroidUserManager::~CAndroidUserManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ??0CAndroidUserManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CAndroidUserManager@@QAE@XZ PROC			; CAndroidUserManager::CAndroidUserManager, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CAndroidUserManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0IAndroidUserManager@@QAE@XZ
  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAndroidUserManager@@6B@
  0003c	6a 0a		 push	 10			; 0000000aH
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00047	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  0005c	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAE@XZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  0006e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
  00073	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  00080	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
  00085	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 28   : 	//系统参数
; 29   : 	m_pGameParameter=NULL;

  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	c7 80 2c 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90156], 0

; 30   : 	m_pGameServiceAttrib=NULL;

  00096	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c7 80 30 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90160], 0

; 31   : 	m_pGameServiceOption=NULL;

  000a3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	c7 80 34 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90164], 0

; 32   : 	m_pGameMatchOption=NULL;

  000b0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	c7 80 38 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90168], 0

; 33   : 
; 34   : 	//组件接口
; 35   : 	m_pITimerEngine=NULL;

  000bd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	c7 80 08 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90120], 0

; 36   : 	m_pIServerUserManager=NULL;

  000ca	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	c7 80 0c 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90124], 0

; 37   : 	m_pIGameServiceManager=NULL;

  000d7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000da	c7 80 10 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90128], 0

; 38   : 	m_pIGameServiceSustomTime=NULL;

  000e4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	c7 80 14 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90132], 0

; 39   : 	m_pITCPNetworkEngineEvent=NULL;

  000f1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	c7 80 18 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90136], 0

; 40   : 	m_pIMainServiceFrame=NULL;

  000fe	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00101	c7 80 1c 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90140], 0

; 41   : 
; 42   : 	//配置变量	
; 43   : 	m_dwMinSitInterval=0;

  0010b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010e	c7 80 24 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90148], 0

; 44   : 	m_dwMaxSitInterval=0;

  00118	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	c7 80 28 60 01
	00 00 00 00 00	 mov	 DWORD PTR [eax+90152], 0

; 45   : 	m_bServiceContinue=false;

  00125	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00128	c6 80 20 60 01
	00 00		 mov	 BYTE PTR [eax+90144], 0

; 46   : 	m_wAutoAndroidCount=ANDROID_LOGON_COUNT;

  0012f	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00134	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 47   : 
; 48   : 	//库存变量
; 49   : 	m_wStockCount=0;

  0013b	33 c0		 xor	 eax, eax
  0013d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 50   : 	ZeroMemory(&m_AndroidItemConfig,sizeof(m_AndroidItemConfig));

  00144	68 00 60 01 00	 push	 90112			; 00016000H
  00149	6a 00		 push	 0
  0014b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	83 c0 08	 add	 eax, 8
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 _memset
  00157	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 
; 52   : 	//设置索引
; 53   : 	m_AndroidUserItemMap.InitHashTable(PRIME_ANDROID_USER);

  0015a	6a 01		 push	 1
  0015c	68 f7 01 00 00	 push	 503			; 000001f7H
  00161	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  0016a	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::InitHashTable

; 54   : 	m_AndroidUserItemMap.RemoveAll();

  0016f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00172	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00178	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll

; 55   : 
; 56   : 	return;
; 57   : }

  0017d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00184	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00187	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0018a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00191	59		 pop	 ecx
  00192	5f		 pop	 edi
  00193	5e		 pop	 esi
  00194	5b		 pop	 ebx
  00195	8b e5		 mov	 esp, ebp
  00197	5d		 pop	 ebp
  00198	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 3c 60 01
	00		 add	 ecx, 90172		; 0001603cH
  00009	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::~CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$1:
  0000e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	81 c1 58 60 01
	00		 add	 ecx, 90200		; 00016058H
  00017	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::~CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$2:
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	81 c1 6c 60 01
	00		 add	 ecx, 90220		; 0001606cH
  00025	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
__unwindfunclet$??0CAndroidUserManager@@QAE@XZ$3:
  0002a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	81 c1 80 60 01
	00		 add	 ecx, 90240		; 00016080H
  00033	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
__ehhandler$??0CAndroidUserManager@@QAE@XZ:
  00038	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00042	33 c8		 xor	 ecx, eax
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CAndroidUserManager@@QAE@XZ
  0004e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CAndroidUserManager@@QAE@XZ ENDP			; CAndroidUserManager::CAndroidUserManager
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAEPAXI@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAEPAXI@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXXZ PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXXZ ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHH@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHH@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHABQAVCAndroidUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHABQAVCAndroidUserItem@@@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHABQAVCAndroidUserItem@@@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEAAPAVCAndroidUserItem@@H@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEHABQAVCAndroidUserItem@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEHABQAVCAndroidUserItem@@@Z PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEXHABQAVCAndroidUserItem@@@Z ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAEHABQAVCAndroidUserItem@@@Z ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ PROC ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QBEHXZ ENDP ; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ PROC	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@UAE@XZ ENDP	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::~CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAE@XZ PROC	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCAndroidUserItem@@ABQAV1@@@QAE@XZ ENDP	; CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>::CWHArray<CAndroidUserItem *,CAndroidUserItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::~CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXHABQAUtagAndroidParameterEx@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXHABQAUtagAndroidParameterEx@@@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXHABQAUtagAndroidParameterEx@@@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEAAPAUtagAndroidParameterEx@@H@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEHABQAUtagAndroidParameterEx@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEHABQAUtagAndroidParameterEx@@@Z PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEXHABQAUtagAndroidParameterEx@@@Z ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAEHABQAUtagAndroidParameterEx@@@Z ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::~CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::~CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagAndroidParameterEx@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>::CWHArray<tagAndroidParameterEx *,tagAndroidParameterEx * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEPAXI@Z PROC	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::~CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEPAXI@Z ENDP	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXXZ PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCAndroidUserItem@@@@YGXAAVCDumpContext@@PBQAVCAndroidUserItem@@H@Z ; DumpElements<CAndroidUserItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCAndroidUserItem@@@@YGXAAVCArchive@@PAPAVCAndroidUserItem@@H@Z ; SerializeElements<CAndroidUserItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCAndroidUserItem@@@@YGXAAVCArchive@@PAPAVCAndroidUserItem@@H@Z ; SerializeElements<CAndroidUserItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXKPAVCAndroidUserItem@@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ PROC	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::~CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KKPAVCAndroidUserItem@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::~CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCAndroidUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEHK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEHK@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 83 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00038	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00041	33 d2		 xor	 edx, edx
  00043	f7 71 08	 div	 DWORD PTR [ecx+8]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0004f	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005a	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00065	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00069	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00071	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00074	75 2f		 jne	 SHORT $LN6@RemoveKey
  00076	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00083	85 c0		 test	 eax, eax
  00085	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00087	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00090	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::FreeAssoc

; 1630 : 			return TRUE;

  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000ae	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b0	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?RemoveKey@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEHK@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXKPAVCAndroidUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXKPAVCAndroidUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEAAPAVCAndroidUserItem@@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	89 08		 mov	 DWORD PTR [eax], ecx
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXKPAVCAndroidUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEAAPAVCAndroidUserItem@@K@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEAAPAVCAndroidUserItem@@K@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAEAAPAVCAndroidUserItem@@K@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_rValue$ = 12						; size = 4
?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00046	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00049	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?Lookup@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHKAAPAVCAndroidUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ PROC ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetCount, COMDAT
; _this$ = ecx

; 1338 : 	{ return m_nCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QBEHXZ ENDP ; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCAndroidUserItem@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KKPAVCAndroidUserItem@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>::CMap<unsigned long,unsigned long,CAndroidUserItem *,CAndroidUserItem *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECAndroidUserItem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECAndroidUserItem@@UAEPAXI@Z PROC			; CAndroidUserItem::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECAndroidUserItem@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 46		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CAndroidUserItem@@UAE@XZ ; CAndroidUserItem::~CAndroidUserItem
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 80 00 00 00	 push	 128			; 00000080H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1c		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0005b	c1 e1 07	 shl	 ecx, 7
  0005e	83 c1 04	 add	 ecx, 4
  00061	51		 push	 ecx
  00062	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00065	83 ea 04	 sub	 edx, 4
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006e	83 c4 08	 add	 esp, 8
$LN3@vector:
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	83 e8 04	 sub	 eax, 4
  00077	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00079	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ??1CAndroidUserItem@@UAE@XZ ; CAndroidUserItem::~CAndroidUserItem
  00081	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00084	83 e0 01	 and	 eax, 1
  00087	74 11		 je	 SHORT $LN4@vector
  00089	68 80 00 00 00	 push	 128			; 00000080H
  0008e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00097	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECAndroidUserItem@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECAndroidUserItem@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECAndroidUserItem@@UAEPAXI@Z ENDP			; CAndroidUserItem::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCAndroidUserItem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAndroidUserItem@@UAEPAXI@Z PROC			; CAndroidUserItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CAndroidUserItem@@UAE@XZ ; CAndroidUserItem::~CAndroidUserItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 80 00 00 00	 push	 128			; 00000080H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCAndroidUserItem@@UAEPAXI@Z ENDP			; CAndroidUserItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CAndroidUserItem@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CAndroidUserItem@@QAEAAV0@ABV0@@Z PROC		; CAndroidUserItem::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??4IAndroidUserItem@@QAEAAU0@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00021	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  0002d	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00039	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00042	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00046	66 89 50 08	 mov	 WORD PTR [eax+8], dx
  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00050	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00053	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00056	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00059	83 c0 10	 add	 eax, 16			; 00000010H
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	83 c1 10	 add	 ecx, 16			; 00000010H
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	89 11		 mov	 DWORD PTR [ecx], edx
  00066	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00069	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00072	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00075	89 50 18	 mov	 DWORD PTR [eax+24], edx
  00078	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0007b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  00084	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00087	83 c6 20	 add	 esi, 32			; 00000020H
  0008a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0008d	83 c7 20	 add	 edi, 32			; 00000020H
  00090	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00095	f3 a5		 rep movsd
  00097	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0009d	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  000a1	66 89 50 4c	 mov	 WORD PTR [eax+76], dx
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000ab	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  000af	66 89 50 4e	 mov	 WORD PTR [eax+78], dx
  000b3	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  000b6	83 c0 50	 add	 eax, 80			; 00000050H
  000b9	50		 push	 eax
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	83 c1 50	 add	 ecx, 80			; 00000050H
  000c0	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z
  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000cb	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  000ce	89 50 64	 mov	 DWORD PTR [eax+100], edx
  000d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000d7	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  000da	89 50 68	 mov	 DWORD PTR [eax+104], edx
  000dd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000e3	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  000e6	89 50 6c	 mov	 DWORD PTR [eax+108], edx
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000ef	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  000f2	89 50 70	 mov	 DWORD PTR [eax+112], edx
  000f5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000fb	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  000fe	89 50 74	 mov	 DWORD PTR [eax+116], edx
  00101	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00107	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  0010a	89 50 78	 mov	 DWORD PTR [eax+120], edx
  0010d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00110	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00113	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00116	89 50 7c	 mov	 DWORD PTR [eax+124], edx
  00119	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 04 00	 ret	 4
??4CAndroidUserItem@@QAEAAV0@ABV0@@Z ENDP		; CAndroidUserItem::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CAndroidUserItem@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CAndroidUserItem@@QAE@ABV0@@Z PROC			; CAndroidUserItem::CAndroidUserItem, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0IAndroidUserItem@@QAE@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAndroidUserItem@@6B@
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  0002a	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00036	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00042	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0004b	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  0004f	66 89 50 08	 mov	 WORD PTR [eax+8], dx
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00059	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0005c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0005f	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00062	83 c0 10	 add	 eax, 16			; 00000010H
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	83 c1 10	 add	 ecx, 16			; 00000010H
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	89 11		 mov	 DWORD PTR [ecx], edx
  0006f	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00072	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0007b	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0007e	89 50 18	 mov	 DWORD PTR [eax+24], edx
  00081	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00084	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  0008d	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00090	83 c6 20	 add	 esi, 32			; 00000020H
  00093	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00096	83 c7 20	 add	 edi, 32			; 00000020H
  00099	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0009e	f3 a5		 rep movsd
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000a6	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  000aa	66 89 50 4c	 mov	 WORD PTR [eax+76], dx
  000ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000b4	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  000b8	66 89 50 4e	 mov	 WORD PTR [eax+78], dx
  000bc	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  000bf	83 c0 50	 add	 eax, 80			; 00000050H
  000c2	50		 push	 eax
  000c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	83 c1 50	 add	 ecx, 80			; 00000050H
  000c9	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000d4	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  000d7	89 50 64	 mov	 DWORD PTR [eax+100], edx
  000da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000e0	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  000e3	89 50 68	 mov	 DWORD PTR [eax+104], edx
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000ec	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  000ef	89 50 6c	 mov	 DWORD PTR [eax+108], edx
  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000f8	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  000fb	89 50 70	 mov	 DWORD PTR [eax+112], edx
  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00101	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00104	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  00107	89 50 74	 mov	 DWORD PTR [eax+116], edx
  0010a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00110	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  00113	89 50 78	 mov	 DWORD PTR [eax+120], edx
  00116	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00119	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0011c	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  0011f	89 50 7c	 mov	 DWORD PTR [eax+124], edx
  00122	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00125	5f		 pop	 edi
  00126	5e		 pop	 esi
  00127	5b		 pop	 ebx
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 04 00	 ret	 4
??0CAndroidUserItem@@QAE@ABV0@@Z ENDP			; CAndroidUserItem::CAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ PROC ; CAndroidUserItem::GetAndroidParameter, COMDAT
; _this$ = ecx

; 104  : 	virtual tagAndroidParameter * GetAndroidParameter() { return m_AndroidItemConfig.pAndroidParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ ENDP ; CAndroidUserItem::GetAndroidParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ PROC ; CAndroidUserItem::GetAndroidService, COMDAT
; _this$ = ecx

; 102  : 	virtual tagAndroidService * GetAndroidService() { return &m_AndroidService; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 1c	 add	 eax, 28			; 0000001cH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ ENDP ; CAndroidUserItem::GetAndroidService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?SetGameStatus@CAndroidUserItem@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbGameStatus$ = 8					; size = 1
?SetGameStatus@CAndroidUserItem@@UAEXE@Z PROC		; CAndroidUserItem::SetGameStatus, COMDAT
; _this$ = ecx

; 97   : 	virtual VOID SetGameStatus(BYTE cbGameStatus) { m_cbGameStatus=cbGameStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbGameStatus$[ebp]
  00012	88 48 06	 mov	 BYTE PTR [eax+6], cl
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetGameStatus@CAndroidUserItem@@UAEXE@Z ENDP		; CAndroidUserItem::SetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?GetGameStatus@CAndroidUserItem@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameStatus@CAndroidUserItem@@UAEEXZ PROC		; CAndroidUserItem::GetGameStatus, COMDAT
; _this$ = ecx

; 95   : 	virtual BYTE GetGameStatus() { return m_cbGameStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 06	 mov	 al, BYTE PTR [eax+6]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGameStatus@CAndroidUserItem@@UAEEXZ ENDP		; CAndroidUserItem::GetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?Release@CAndroidUserItem@@UAEXXZ
_TEXT	SEGMENT
tv70 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
?Release@CAndroidUserItem@@UAEXXZ PROC			; CAndroidUserItem::Release, COMDAT
; _this$ = ecx

; 79   : 	virtual VOID Release() { delete this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  00012	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  00015	89 4d b8	 mov	 DWORD PTR $T2[ebp], ecx
  00018	83 7d b8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0001c	74 14		 je	 SHORT $LN3@Release
  0001e	6a 01		 push	 1
  00020	8b 55 b8	 mov	 edx, DWORD PTR $T2[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	8b 4d b8	 mov	 ecx, DWORD PTR $T2[ebp]
  00028	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  0002b	ff d2		 call	 edx
  0002d	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00030	eb 07		 jmp	 SHORT $LN1@Release
$LN3@Release:
  00032	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN1@Release:
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?Release@CAndroidUserItem@@UAEXXZ ENDP			; CAndroidUserItem::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z PROC	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z ENDP	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ PROC	; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ ENDP	; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAndroidUserManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAndroidUserManager@@QAE@XZ PROC			; IAndroidUserManager::IAndroidUserManager, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAndroidUserManager@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IAndroidUserManager@@QAE@XZ ENDP			; IAndroidUserManager::IAndroidUserManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4IAndroidUserItem@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4IAndroidUserItem@@QAEAAU0@ABU0@@Z PROC		; IAndroidUserItem::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??4IUnknownEx@@QAEAAU0@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??4IAndroidUserItem@@QAEAAU0@ABU0@@Z ENDP		; IAndroidUserItem::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAndroidUserItem@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0IAndroidUserItem@@QAE@ABU0@@Z PROC			; IAndroidUserItem::IAndroidUserItem, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAndroidUserItem@@6B@
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0IAndroidUserItem@@QAE@ABU0@@Z ENDP			; IAndroidUserItem::IAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z PROC	; CServerRule::IsAllowAndroidSimulate, COMDAT

; 110  : 	static bool IsAllowAndroidSimulate(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_SIMULATE)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 80 00	 and	 eax, 8388608		; 00800000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidSimulate@CServerRule@@SA_NK@Z ENDP	; CServerRule::IsAllowAndroidSimulate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\serverrule.h
;	COMDAT ?IsAllowAndroidAttend@CServerRule@@SA_NK@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_dwServerRule$ = 8					; size = 4
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z PROC		; CServerRule::IsAllowAndroidAttend, COMDAT

; 108  : 	static bool IsAllowAndroidAttend(DWORD dwServerRule) { return (dwServerRule&SR_ALLOW_ANDROID_ATTEND)!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 45 08	 mov	 eax, DWORD PTR _dwServerRule$[ebp]
  0000c	25 00 00 40 00	 and	 eax, 4194304		; 00400000H
  00011	74 09		 je	 SHORT $LN3@IsAllowAnd
  00013	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001a	eb 07		 jmp	 SHORT $LN4@IsAllowAnd
$LN3@IsAllowAnd:
  0001c	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN4@IsAllowAnd:
  00023	8a 45 bc	 mov	 al, BYTE PTR tv66[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?IsAllowAndroidAttend@CServerRule@@SA_NK@Z ENDP		; CServerRule::IsAllowAndroidAttend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00012	83 c4 04	 add	 esp, 4
  00015	0f b6 f0	 movzx	 esi, al
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00021	83 c4 04	 add	 esp, 4
  00024	0f b6 d0	 movzx	 edx, al
  00027	3b f2		 cmp	 esi, edx
  00029	7e 04		 jle	 SHORT $LN2@InterfaceV
  0002b	32 c0		 xor	 al, al
  0002d	eb 74		 jmp	 SHORT $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00038	83 c4 04	 add	 esp, 4
  0003b	0f b6 f0	 movzx	 esi, al
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00047	83 c4 04	 add	 esp, 4
  0004a	0f b6 d0	 movzx	 edx, al
  0004d	3b f2		 cmp	 esi, edx
  0004f	74 04		 je	 SHORT $LN3@InterfaceV
  00051	32 c0		 xor	 al, al
  00053	eb 4e		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00055	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0005e	83 c4 04	 add	 esp, 4
  00061	0f b6 f0	 movzx	 esi, al
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 d0	 movzx	 edx, al
  00073	3b f2		 cmp	 esi, edx
  00075	74 04		 je	 SHORT $LN4@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 28		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 f0	 movzx	 esi, al
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00093	83 c4 04	 add	 esp, 4
  00096	0f b6 d0	 movzx	 edx, al
  00099	3b f2		 cmp	 esi, edx
  0009b	74 04		 je	 SHORT $LN5@InterfaceV
  0009d	32 c0		 xor	 al, al
  0009f	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000a1	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	d1 e0		 shl	 eax, 1
  00010	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 03	 imul	 ecx, eax, 3
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4IUnknownEx@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4IUnknownEx@@QAEAAU0@ABU0@@Z PROC			; IUnknownEx::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4IUnknownEx@@QAEAAU0@ABU0@@Z ENDP			; IUnknownEx::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0IUnknownEx@@QAE@ABU0@@Z PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0IUnknownEx@@QAE@ABU0@@Z ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@K@@YGIK@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 4
??$HashKey@K@@YGIK@Z PROC				; HashKey<unsigned long>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00018	83 c4 08	 add	 esp, 8
  0001b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001e	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00021	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00024	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00027	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002a	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002d	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00034	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003b	2b c1		 sub	 eax, ecx
  0003d	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00040	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00045	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004a	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??$HashKey@K@@YGIK@Z ENDP				; HashKey<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  :             return _time64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00013	83 c4 04	 add	 esp, 4

; 537  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv68 = -68						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _IsEqualGUID
  00016	83 c4 08	 add	 esp, 8
  00019	85 c0		 test	 eax, eax
  0001b	74 09		 je	 SHORT $LN3@
  0001d	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00026	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  0002d	8a 45 bc	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -68						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 _memcmp
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN3@IsEqualGUI
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androidusermanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
