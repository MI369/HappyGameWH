; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\游戏服务\AndroidUserItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IGameServiceManager@@3U_GUID@@B DD 04b2b9d8fH	; IID_IGameServiceManager
	DW	0ce1bH
	DW	044f3H
	DB	0a5H
	DB	022H
	DB	065H
	DB	01aH
	DB	065H
	DB	0c9H
	DB	0aH
	DB	025H
?IID_IAndroidUserItem@@3U_GUID@@B DD 0b1faa2f4H		; IID_IAndroidUserItem
	DW	09804H
	DW	04c6fH
	DB	09dH
	DB	0fcH
	DB	0b1H
	DB	0aH
	DB	08H
	DB	08aH
	DB	022H
	DB	069H
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 01e8a1918H	; IID_IAndroidUserItemSink
	DW	0572bH
	DW	0453bH
	DB	0bcH
	DB	0bH
	DB	06bH
	DB	061H
	DB	070H
	DB	0a3H
	DB	03cH
	DB	0caH
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_IsEqualGUID
PUBLIC	_==
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	_wmemcpy
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??0IUnknownEx@@QAE@XZ				; IUnknownEx::IUnknownEx
PUBLIC	??0IUnknownEx@@QAE@ABU0@@Z			; IUnknownEx::IUnknownEx
PUBLIC	??4IUnknownEx@@QAEAAU0@ABU0@@Z			; IUnknownEx::operator=
PUBLIC	?GetProductVer@@YAEK@Z				; GetProductVer
PUBLIC	?GetMainVer@@YAEK@Z				; GetMainVer
PUBLIC	?GetSubVer@@YAEK@Z				; GetSubVer
PUBLIC	?GetBuildVer@@YAEK@Z				; GetBuildVer
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0IAndroidUserItem@@QAE@XZ			; IAndroidUserItem::IAndroidUserItem
PUBLIC	??0IAndroidUserItem@@QAE@ABU0@@Z		; IAndroidUserItem::IAndroidUserItem
PUBLIC	??4IAndroidUserItem@@QAEAAU0@ABU0@@Z		; IAndroidUserItem::operator=
PUBLIC	??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@XZ	; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
PUBLIC	??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ	; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add
PUBLIC	?Append@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Append
PUBLIC	?ElementAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::AllocMemory
PUBLIC	??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
PUBLIC	??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator=
PUBLIC	??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`scalar deleting destructor'
PUBLIC	??0CAndroidUserItem@@QAE@XZ			; CAndroidUserItem::CAndroidUserItem
PUBLIC	??1CAndroidUserItem@@UAE@XZ			; CAndroidUserItem::~CAndroidUserItem
PUBLIC	?Release@CAndroidUserItem@@UAEXXZ		; CAndroidUserItem::Release
PUBLIC	?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z ; CAndroidUserItem::QueryInterface
PUBLIC	?GetUserID@CAndroidUserItem@@UAEKXZ		; CAndroidUserItem::GetUserID
PUBLIC	?GetTableID@CAndroidUserItem@@UAEGXZ		; CAndroidUserItem::GetTableID
PUBLIC	?GetChairID@CAndroidUserItem@@UAEGXZ		; CAndroidUserItem::GetChairID
PUBLIC	?GetGameStatus@CAndroidUserItem@@UAEEXZ		; CAndroidUserItem::GetGameStatus
PUBLIC	?SetGameStatus@CAndroidUserItem@@UAEXE@Z	; CAndroidUserItem::SetGameStatus
PUBLIC	?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ ; CAndroidUserItem::GetAndroidService
PUBLIC	?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ ; CAndroidUserItem::GetAndroidParameter
PUBLIC	?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ ; CAndroidUserItem::GetMeUserItem
PUBLIC	?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z ; CAndroidUserItem::GetTableUserItem
PUBLIC	?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z	; CAndroidUserItem::PerformSaveScore
PUBLIC	?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z	; CAndroidUserItem::PerformTakeScore
PUBLIC	?SendSocketData@CAndroidUserItem@@UAE_NG@Z	; CAndroidUserItem::SendSocketData
PUBLIC	?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z	; CAndroidUserItem::SendSocketData
PUBLIC	?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z ; CAndroidUserItem::JudgeAndroidActionAndRemove
PUBLIC	?KillGameTimer@CAndroidUserItem@@UAE_NI@Z	; CAndroidUserItem::KillGameTimer
PUBLIC	?SetGameTimer@CAndroidUserItem@@UAE_NII@Z	; CAndroidUserItem::SetGameTimer
PUBLIC	?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z	; CAndroidUserItem::SendUserReady
PUBLIC	?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z	; CAndroidUserItem::SendChatMessage
PUBLIC	?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z	; CAndroidUserItem::OnTimerPulse
PUBLIC	?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z	; CAndroidUserItem::OnSocketRead
PUBLIC	?OnSocketSubLogonFailure@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubLogonFailure
PUBLIC	?OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubLogonFinish
PUBLIC	?OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubUserStatus
PUBLIC	?OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubSystemMessage
PUBLIC	?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z ; CAndroidUserItem::OnSocketGameMessage
PUBLIC	?StartGameClient@CAndroidUserItem@@IAEXXZ	; CAndroidUserItem::StartGameClient
PUBLIC	?CloseGameClient@CAndroidUserItem@@IAEXXZ	; CAndroidUserItem::CloseGameClient
PUBLIC	?RepositUserItem@CAndroidUserItem@@QAEXXZ	; CAndroidUserItem::RepositUserItem
PUBLIC	??0CAndroidUserItem@@QAE@ABV0@@Z		; CAndroidUserItem::CAndroidUserItem
PUBLIC	??4CAndroidUserItem@@QAEAAV0@ABV0@@Z		; CAndroidUserItem::operator=
PUBLIC	??_GCAndroidUserItem@@UAEPAXI@Z			; CAndroidUserItem::`scalar deleting destructor'
PUBLIC	??_ECAndroidUserItem@@UAEPAXI@Z			; CAndroidUserItem::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_7IAndroidUserItem@@6B@			; IAndroidUserItem::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`vftable'
PUBLIC	?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
PUBLIC	??_7CAndroidUserItem@@6B@			; CAndroidUserItem::`vftable'
PUBLIC	?__LINE__Var@?0??GetTableID@CAndroidUserItem@@UAEGXZ@4JA ; `CAndroidUserItem::GetTableID'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??GetChairID@CAndroidUserItem@@UAEGXZ@4JA ; `CAndroidUserItem::GetChairID'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NG@Z@4JA ; `CAndroidUserItem::SendSocketData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z@4JA ; `CAndroidUserItem::PerformSaveScore'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z@4JA ; `CAndroidUserItem::PerformTakeScore'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z@4JA ; `CAndroidUserItem::SendSocketData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetGameTimer@CAndroidUserItem@@UAE_NII@Z@4JA ; `CAndroidUserItem::SetGameTimer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z@4JA ; `CAndroidUserItem::SendChatMessage'::`1'::__LINE__Var
PUBLIC	??_C@_0BJ@GNAGLFEA@OnTimerPulse?3?5TimerID?$DN?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z@4JA ; `CAndroidUserItem::OnSocketGameMessage'::`1'::__LINE__Var
PUBLIC	??_C@_0CI@JLNELCNK@OnSocketGameMessage?3?5MainID?$DN?$CFd?7@ ; `string'
PUBLIC	?__LINE__Var@?0??OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z@4JA ; `CAndroidUserItem::OnSocketSubLogonFinish'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z@4JA ; `CAndroidUserItem::OnSocketSubUserStatus'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z@4JA ; `CAndroidUserItem::OnSocketSubSystemMessage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??StartGameClient@CAndroidUserItem@@IAEXXZ@4JA ; `CAndroidUserItem::StartGameClient'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??CloseGameClient@CAndroidUserItem@@IAEXXZ@4JA ; `CAndroidUserItem::CloseGameClient'::`1'::__LINE__Var
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAndroidUserItem@@6B@			; IAndroidUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAndroidUserItem@@@8			; IAndroidUserItem `RTTI Type Descriptor'
PUBLIC	??_R3IAndroidUserItem@@8			; IAndroidUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAndroidUserItem@@8			; IAndroidUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAndroidUserItem@@8		; IAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8	; CWHArray<tagTimerItem *,tagTimerItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAndroidUserItem@@6B@			; CAndroidUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAndroidUserItem@@@8			; CAndroidUserItem `RTTI Type Descriptor'
PUBLIC	??_R3CAndroidUserItem@@8			; CAndroidUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAndroidUserItem@@8			; CAndroidUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAndroidUserItem@@8		; CAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z:PROC
EXTRN	??_E?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
_BSS	SEGMENT
?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A DB 014H DUP (?) ; CAndroidUserItem::m_TimerItemBuffer
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CAndroidUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAndroidUserItem@@8 DD FLAT:??_R0?AVCAndroidUserItem@@@8 ; CAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CAndroidUserItem@@8
rdata$r	SEGMENT
??_R2CAndroidUserItem@@8 DD FLAT:??_R1A@?0A@EA@CAndroidUserItem@@8 ; CAndroidUserItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAndroidUserItem@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAndroidUserItem@@8
rdata$r	SEGMENT
??_R3CAndroidUserItem@@8 DD 00H				; CAndroidUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAndroidUserItem@@@8
data$r	SEGMENT
??_R0?AVCAndroidUserItem@@@8 DD FLAT:??_7type_info@@6B@	; CAndroidUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAndroidUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAndroidUserItem@@6B@
rdata$r	SEGMENT
??_R4CAndroidUserItem@@6B@ DD 00H			; CAndroidUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAndroidUserItem@@@8
	DD	FLAT:??_R3CAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8 ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8 DD 00H	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagTimerItem *,tagTimerItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@ DD 00H	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagTimerItem@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagTimerItem@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAndroidUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAndroidUserItem@@8 DD FLAT:??_R0?AUIAndroidUserItem@@@8 ; IAndroidUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2IAndroidUserItem@@8
rdata$r	SEGMENT
??_R2IAndroidUserItem@@8 DD FLAT:??_R1A@?0A@EA@IAndroidUserItem@@8 ; IAndroidUserItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAndroidUserItem@@8
rdata$r	SEGMENT
??_R3IAndroidUserItem@@8 DD 00H				; IAndroidUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAndroidUserItem@@@8
data$r	SEGMENT
??_R0?AUIAndroidUserItem@@@8 DD FLAT:??_7type_info@@6B@	; IAndroidUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAndroidUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAndroidUserItem@@6B@
rdata$r	SEGMENT
??_R4IAndroidUserItem@@6B@ DD 00H			; IAndroidUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAndroidUserItem@@@8
	DD	FLAT:??_R3IAndroidUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??CloseGameClient@CAndroidUserItem@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CloseGameClient@CAndroidUserItem@@IAEXXZ@4JA DD 0285H ; `CAndroidUserItem::CloseGameClient'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??StartGameClient@CAndroidUserItem@@IAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??StartGameClient@CAndroidUserItem@@IAEXXZ@4JA DD 026bH ; `CAndroidUserItem::StartGameClient'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z@4JA DD 0255H ; `CAndroidUserItem::OnSocketSubSystemMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z@4JA DD 0208H ; `CAndroidUserItem::OnSocketSubUserStatus'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z@4JA DD 01e3H ; `CAndroidUserItem::OnSocketSubLogonFinish'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CI@JLNELCNK@OnSocketGameMessage?3?5MainID?$DN?$CFd?7@
CONST	SEGMENT
??_C@_0CI@JLNELCNK@OnSocketGameMessage?3?5MainID?$DN?$CFd?7@ DB 'OnSocket'
	DB	'GameMessage: MainID=%d', 09H, 'SubID=%d', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z@4JA DD 0191H ; `CAndroidUserItem::OnSocketGameMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BJ@GNAGLFEA@OnTimerPulse?3?5TimerID?$DN?$CFd@
CONST	SEGMENT
??_C@_0BJ@GNAGLFEA@OnTimerPulse?3?5TimerID?$DN?$CFd@ DB 'OnTimerPulse: Ti'
	DB	'merID=%d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z@4JA DD 012bH ; `CAndroidUserItem::SendChatMessage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetGameTimer@CAndroidUserItem@@UAE_NII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetGameTimer@CAndroidUserItem@@UAE_NII@Z@4JA DD 0e3H ; `CAndroidUserItem::SetGameTimer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z@4JA DD 0a4H ; `CAndroidUserItem::SendSocketData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z@4JA DD 093H ; `CAndroidUserItem::PerformTakeScore'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z@4JA DD 07eH ; `CAndroidUserItem::PerformSaveScore'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NG@Z@4JA DD 070H ; `CAndroidUserItem::SendSocketData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetChairID@CAndroidUserItem@@UAEGXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetChairID@CAndroidUserItem@@UAEGXZ@4JA DD 059H ; `CAndroidUserItem::GetChairID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0d3H, 0ceH, 0cfH, 0b7H, 0b7H, 0feH, 0ceH, 0f1H, '\a'
	DB	'ndroiduseritem.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetTableID@CAndroidUserItem@@UAEGXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetTableID@CAndroidUserItem@@UAEGXZ@4JA DD 04fH ; `CAndroidUserItem::GetTableID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CAndroidUserItem@@6B@
CONST	SEGMENT
??_7CAndroidUserItem@@6B@ DD FLAT:??_R4CAndroidUserItem@@6B@ ; CAndroidUserItem::`vftable'
	DD	FLAT:?Release@CAndroidUserItem@@UAEXXZ
	DD	FLAT:?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?GetUserID@CAndroidUserItem@@UAEKXZ
	DD	FLAT:?GetTableID@CAndroidUserItem@@UAEGXZ
	DD	FLAT:?GetChairID@CAndroidUserItem@@UAEGXZ
	DD	FLAT:?GetGameStatus@CAndroidUserItem@@UAEEXZ
	DD	FLAT:?SetGameStatus@CAndroidUserItem@@UAEXE@Z
	DD	FLAT:?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ
	DD	FLAT:?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ
	DD	FLAT:?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ
	DD	FLAT:?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z
	DD	FLAT:?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z
	DD	FLAT:?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z
	DD	FLAT:?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z
	DD	FLAT:?SendSocketData@CAndroidUserItem@@UAE_NG@Z
	DD	FLAT:?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z
	DD	FLAT:?KillGameTimer@CAndroidUserItem@@UAE_NI@Z
	DD	FLAT:?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
	DD	FLAT:?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z
	DD	FLAT:?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z
	DD	FLAT:??_ECAndroidUserItem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7IAndroidUserItem@@6B@
CONST	SEGMENT
??_7IAndroidUserItem@@6B@ DD FLAT:??_R4IAndroidUserItem@@6B@ ; IAndroidUserItem::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA DD 061H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECAndroidUserItem@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$0
__tryblocktable$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$3
__unwindtable$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$2
__ehfuncinfo$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z
	DD	01H
	DD	FLAT:__tryblocktable$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$0
__tryblocktable$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z DD 00H
	DD	00H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$3
__unwindtable$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$2
__ehfuncinfo$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z$0
__unwindtable$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z$2
__ehfuncinfo$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAndroidUserItem@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
??m_TimerItemBuffer$initializer$@CAndroidUserItem@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ ; ??m_TimerItemBuffer$initializer$@CAndroidUserItem@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptrnext$1 = -12					; size = 4
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _strlen
  00012	83 c4 04	 add	 esp, 4
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  0001b	68 9c 02 00 00	 push	 668			; 0000029cH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00025	6a 02		 push	 2
  00027	6a 01		 push	 1
  00029	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00039	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0003d	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0003f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00047	89 45 f4	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0004a	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004f	83 e8 01	 sub	 eax, 1
  00052	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __Ptrnext$1[ebp]
  00058	83 c1 01	 add	 ecx, 1
  0005b	89 4d f4	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  0005e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00061	83 c2 01	 add	 edx, 1
  00064	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
$LN4@Maklocstr:
  00067	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0006b	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00073	8a 11		 mov	 dl, BYTE PTR [ecx]
  00075	88 10		 mov	 BYTE PTR [eax], dl
  00077	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00079	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__F?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ
text$yd	SEGMENT
??__F?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CAndroidUserItem::m_TimerItemBuffer'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  0000e	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__F?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CAndroidUserItem::m_TimerItemBuffer''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ??__E?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ
text$di	SEGMENT
??__E?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ PROC ; `dynamic initializer for 'CAndroidUserItem::m_TimerItemBuffer'', COMDAT

; 7    : CTimerItemArray CAndroidUserItem::m_TimerItemBuffer;					//库存数组

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  0000e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@XZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
  00013	68 00 00 00 00	 push	 OFFSET ??__F?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ ; `dynamic atexit destructor for 'CAndroidUserItem::m_TimerItemBuffer''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__E?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CAndroidUserItem::m_TimerItemBuffer''
text$di	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECAndroidUserItem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECAndroidUserItem@@UAEPAXI@Z PROC			; CAndroidUserItem::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECAndroidUserItem@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 02	 and	 eax, 2
  00031	74 46		 je	 SHORT $LN2@vector
  00033	68 00 00 00 00	 push	 OFFSET ??1CAndroidUserItem@@UAE@XZ ; CAndroidUserItem::~CAndroidUserItem
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0003e	51		 push	 ecx
  0003f	68 80 00 00 00	 push	 128			; 00000080H
  00044	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00050	83 e0 01	 and	 eax, 1
  00053	74 1c		 je	 SHORT $LN3@vector
  00055	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  0005b	c1 e1 07	 shl	 ecx, 7
  0005e	83 c1 04	 add	 ecx, 4
  00061	51		 push	 ecx
  00062	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00065	83 ea 04	 sub	 edx, 4
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006e	83 c4 08	 add	 esp, 8
$LN3@vector:
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	83 e8 04	 sub	 eax, 4
  00077	eb 24		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00079	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ??1CAndroidUserItem@@UAE@XZ ; CAndroidUserItem::~CAndroidUserItem
  00081	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00084	83 e0 01	 and	 eax, 1
  00087	74 11		 je	 SHORT $LN4@vector
  00089	68 80 00 00 00	 push	 128			; 00000080H
  0008e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00097	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECAndroidUserItem@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECAndroidUserItem@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECAndroidUserItem@@UAEPAXI@Z ENDP			; CAndroidUserItem::`vector deleting destructor'
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCAndroidUserItem@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAndroidUserItem@@UAEPAXI@Z PROC			; CAndroidUserItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CAndroidUserItem@@UAE@XZ ; CAndroidUserItem::~CAndroidUserItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 80 00 00 00	 push	 128			; 00000080H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCAndroidUserItem@@UAEPAXI@Z ENDP			; CAndroidUserItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CAndroidUserItem@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CAndroidUserItem@@QAEAAV0@ABV0@@Z PROC		; CAndroidUserItem::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??4IAndroidUserItem@@QAEAAU0@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00021	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  0002d	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00039	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00042	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00046	66 89 50 08	 mov	 WORD PTR [eax+8], dx
  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00050	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00053	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00056	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00059	83 c0 10	 add	 eax, 16			; 00000010H
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	83 c1 10	 add	 ecx, 16			; 00000010H
  00062	8b 10		 mov	 edx, DWORD PTR [eax]
  00064	89 11		 mov	 DWORD PTR [ecx], edx
  00066	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00069	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00072	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00075	89 50 18	 mov	 DWORD PTR [eax+24], edx
  00078	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0007b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00081	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  00084	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00087	83 c6 20	 add	 esi, 32			; 00000020H
  0008a	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  0008d	83 c7 20	 add	 edi, 32			; 00000020H
  00090	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00095	f3 a5		 rep movsd
  00097	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0009d	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  000a1	66 89 50 4c	 mov	 WORD PTR [eax+76], dx
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000ab	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  000af	66 89 50 4e	 mov	 WORD PTR [eax+78], dx
  000b3	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  000b6	83 c0 50	 add	 eax, 80			; 00000050H
  000b9	50		 push	 eax
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	83 c1 50	 add	 ecx, 80			; 00000050H
  000c0	e8 00 00 00 00	 call	 ??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z
  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000cb	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  000ce	89 50 64	 mov	 DWORD PTR [eax+100], edx
  000d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000d7	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  000da	89 50 68	 mov	 DWORD PTR [eax+104], edx
  000dd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000e3	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  000e6	89 50 6c	 mov	 DWORD PTR [eax+108], edx
  000e9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000ef	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  000f2	89 50 70	 mov	 DWORD PTR [eax+112], edx
  000f5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000fb	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  000fe	89 50 74	 mov	 DWORD PTR [eax+116], edx
  00101	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00107	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  0010a	89 50 78	 mov	 DWORD PTR [eax+120], edx
  0010d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00110	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00113	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00116	89 50 7c	 mov	 DWORD PTR [eax+124], edx
  00119	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 04 00	 ret	 4
??4CAndroidUserItem@@QAEAAV0@ABV0@@Z ENDP		; CAndroidUserItem::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CAndroidUserItem@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CAndroidUserItem@@QAE@ABV0@@Z PROC			; CAndroidUserItem::CAndroidUserItem, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0IAndroidUserItem@@QAE@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAndroidUserItem@@6B@
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  0002a	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00036	88 50 05	 mov	 BYTE PTR [eax+5], dl
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8a 51 06	 mov	 dl, BYTE PTR [ecx+6]
  00042	88 50 06	 mov	 BYTE PTR [eax+6], dl
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0004b	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  0004f	66 89 50 08	 mov	 WORD PTR [eax+8], dx
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00059	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0005c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0005f	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00062	83 c0 10	 add	 eax, 16			; 00000010H
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	83 c1 10	 add	 ecx, 16			; 00000010H
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	89 11		 mov	 DWORD PTR [ecx], edx
  0006f	8a 40 04	 mov	 al, BYTE PTR [eax+4]
  00072	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0007b	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0007e	89 50 18	 mov	 DWORD PTR [eax+24], edx
  00081	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00084	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00087	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008a	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  0008d	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00090	83 c6 20	 add	 esi, 32			; 00000020H
  00093	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00096	83 c7 20	 add	 edi, 32			; 00000020H
  00099	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0009e	f3 a5		 rep movsd
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000a6	66 8b 51 4c	 mov	 dx, WORD PTR [ecx+76]
  000aa	66 89 50 4c	 mov	 WORD PTR [eax+76], dx
  000ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000b4	66 8b 51 4e	 mov	 dx, WORD PTR [ecx+78]
  000b8	66 89 50 4e	 mov	 WORD PTR [eax+78], dx
  000bc	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  000bf	83 c0 50	 add	 eax, 80			; 00000050H
  000c2	50		 push	 eax
  000c3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	83 c1 50	 add	 ecx, 80			; 00000050H
  000c9	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z
  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000d4	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  000d7	89 50 64	 mov	 DWORD PTR [eax+100], edx
  000da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000e0	8b 51 68	 mov	 edx, DWORD PTR [ecx+104]
  000e3	89 50 68	 mov	 DWORD PTR [eax+104], edx
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000ec	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  000ef	89 50 6c	 mov	 DWORD PTR [eax+108], edx
  000f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  000f8	8b 51 70	 mov	 edx, DWORD PTR [ecx+112]
  000fb	89 50 70	 mov	 DWORD PTR [eax+112], edx
  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00101	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00104	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  00107	89 50 74	 mov	 DWORD PTR [eax+116], edx
  0010a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00110	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  00113	89 50 78	 mov	 DWORD PTR [eax+120], edx
  00116	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00119	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0011c	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  0011f	89 50 7c	 mov	 DWORD PTR [eax+124], edx
  00122	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00125	5f		 pop	 edi
  00126	5e		 pop	 esi
  00127	5b		 pop	 ebx
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 04 00	 ret	 4
??0CAndroidUserItem@@QAE@ABV0@@Z ENDP			; CAndroidUserItem::CAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?RepositUserItem@CAndroidUserItem@@QAEXXZ
_TEXT	SEGMENT
tv133 = -72						; size = 4
_this$ = -4						; size = 4
?RepositUserItem@CAndroidUserItem@@QAEXXZ PROC		; CAndroidUserItem::RepositUserItem, COMDAT
; _this$ = ecx

; 668  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 669  : 	//状态变量
; 670  : 	m_bWaitLeave=false;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 671  : 	m_bStartClient=false;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c6 40 05 00	 mov	 BYTE PTR [eax+5], 0

; 672  : 	m_wAndroidAction=0;

  0001a	33 c0		 xor	 eax, eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 673  : 	m_dwPlayInnings=0;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 674  : 	m_cbGameStatus=GAME_STATUS_FREE;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0

; 675  : 
; 676  : 	//用户状态
; 677  : 	m_CurrentUserStatus.cbUserStatus=US_NULL;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 678  : 	m_CurrentUserStatus.wChairID=INVALID_CHAIR;

  0003b	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	66 89 41 12	 mov	 WORD PTR [ecx+18], ax

; 679  : 	m_CurrentUserStatus.wTableID=INVALID_TABLE;

  00047	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	66 89 41 10	 mov	 WORD PTR [ecx+16], ax

; 680  : 
; 681  : 	//绑定变量
; 682  : 	m_pIServerUserItem=NULL;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 683  : 
; 684  : 	//时间变量
; 685  : 	m_dwMinSitInterval=0;

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 686  : 	m_dwMaxSitInterval=0;

  00067	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [eax+104], 0

; 687  : 	m_dwStandupTickCount=0;

  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 6c 00 00
	00 00		 mov	 DWORD PTR [eax+108], 0

; 688  : 	m_dwReposeTickCount=0;

  0007b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], 0

; 689  : 
; 690  : 	//状态信息
; 691  : 	ZeroMemory(&m_AndroidService,sizeof(m_AndroidService));

  00085	6a 04		 push	 4
  00087	6a 00		 push	 0
  00089	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	83 c0 1c	 add	 eax, 28			; 0000001cH
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 _memset
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 692  : 	ZeroMemory(&m_AndroidItemConfig,sizeof(m_AndroidItemConfig));

  00098	6a 2c		 push	 44			; 0000002cH
  0009a	6a 00		 push	 0
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	83 c0 20	 add	 eax, 32			; 00000020H
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _memset
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 693  : 
; 694  : 	//删除时间
; 695  : 	m_TimerItemBuffer.Append(m_TimerItemActive);

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	83 c0 50	 add	 eax, 80			; 00000050H
  000b1	50		 push	 eax
  000b2	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  000b7	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Append

; 696  : 	m_TimerItemActive.RemoveAll();

  000bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	83 c1 50	 add	 ecx, 80			; 00000050H
  000c2	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAll

; 697  : 
; 698  : 	//索引变量
; 699  : 	m_wRoundID=__max(1,m_wRoundID+1);

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  000ce	83 c1 01	 add	 ecx, 1
  000d1	83 f9 01	 cmp	 ecx, 1
  000d4	7d 09		 jge	 SHORT $LN4@RepositUse
  000d6	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000dd	eb 0d		 jmp	 SHORT $LN5@RepositUse
$LN4@RepositUse:
  000df	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	0f b7 42 4c	 movzx	 eax, WORD PTR [edx+76]
  000e6	83 c0 01	 add	 eax, 1
  000e9	89 45 b8	 mov	 DWORD PTR tv133[ebp], eax
$LN5@RepositUse:
  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	66 8b 55 b8	 mov	 dx, WORD PTR tv133[ebp]
  000f3	66 89 51 4c	 mov	 WORD PTR [ecx+76], dx

; 700  : 
; 701  : 	//复位游戏
; 702  : 	if (m_pIAndroidUserItemSink!=NULL)

  000f7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  000fe	74 13		 je	 SHORT $LN1@RepositUse

; 703  : 	{
; 704  : 		m_pIAndroidUserItemSink->RepositionSink();

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00106	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00109	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010b	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  0010e	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00111	ff d2		 call	 edx
$LN1@RepositUse:

; 705  : 	}
; 706  : 
; 707  : 	return;
; 708  : }

  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c3		 ret	 0
?RepositUserItem@CAndroidUserItem@@QAEXXZ ENDP		; CAndroidUserItem::RepositUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?CloseGameClient@CAndroidUserItem@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseGameClient@CAndroidUserItem@@IAEXXZ PROC		; CAndroidUserItem::CloseGameClient, COMDAT
; _this$ = ecx

; 645  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 646  : 	//状态判断
; 647  : 	ASSERT((m_bStartClient==true)&&(m_pIServerUserItem!=NULL));

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00013	83 f9 01	 cmp	 ecx, 1
  00016	75 09		 jne	 SHORT $LN4@CloseGameC
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  0001f	75 18		 jne	 SHORT $LN5@CloseGameC
$LN4@CloseGameC:
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??CloseGameClient@CAndroidUserItem@@IAEXXZ@4JA
  00026	83 c0 02	 add	 eax, 2
  00029	50		 push	 eax
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0002f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00034	85 c0		 test	 eax, eax
  00036	74 01		 je	 SHORT $LN5@CloseGameC
  00038	cc		 int	 3
$LN5@CloseGameC:

; 648  : 	ASSERT((m_pIServerUserItem->GetTableID()==INVALID_TABLE)&&(m_pIServerUserItem->GetChairID()==INVALID_CHAIR));

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 01		 mov	 eax, DWORD PTR [ecx]
  00044	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00047	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0004a	ff d2		 call	 edx
  0004c	0f b7 c0	 movzx	 eax, ax
  0004f	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00054	75 1e		 jne	 SHORT $LN6@CloseGameC
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 12		 mov	 edx, DWORD PTR [edx]
  00061	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00064	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00067	ff d0		 call	 eax
  00069	0f b7 c8	 movzx	 ecx, ax
  0006c	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00072	74 19		 je	 SHORT $LN7@CloseGameC
$LN6@CloseGameC:
  00074	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??CloseGameClient@CAndroidUserItem@@IAEXXZ@4JA
  0007a	83 c2 03	 add	 edx, 3
  0007d	52		 push	 edx
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00083	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00088	85 c0		 test	 eax, eax
  0008a	74 01		 je	 SHORT $LN7@CloseGameC
  0008c	cc		 int	 3
$LN7@CloseGameC:

; 649  : 
; 650  : 	//删除时间
; 651  : 	KillGameTimer(0);

  0008d	6a 00		 push	 0
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 10		 mov	 edx, DWORD PTR [eax]
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0009a	ff d0		 call	 eax

; 652  : 
; 653  : 	//设置变量
; 654  : 	m_bStartClient=false;

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	c6 40 05 00	 mov	 BYTE PTR [eax+5], 0

; 655  : 	m_cbGameStatus=GAME_STATUS_FREE;

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0

; 656  : 
; 657  : 	//游戏复位
; 658  : 	if (m_pIAndroidUserItemSink!=NULL)

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  000b1	74 13		 je	 SHORT $LN1@CloseGameC

; 659  : 	{
; 660  : 		m_pIAndroidUserItemSink->RepositionSink();

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000b9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bc	8b 01		 mov	 eax, DWORD PTR [ecx]
  000be	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  000c1	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000c4	ff d2		 call	 edx
$LN1@CloseGameC:

; 661  : 	}
; 662  : 
; 663  : 	return;
; 664  : }

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
?CloseGameClient@CAndroidUserItem@@IAEXXZ ENDP		; CAndroidUserItem::CloseGameClient
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?StartGameClient@CAndroidUserItem@@IAEXXZ
_TEXT	SEGMENT
_dwAndroidID$ = -24					; size = 4
_GameOption$ = -20					; size = 9
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?StartGameClient@CAndroidUserItem@@IAEXXZ PROC		; CAndroidUserItem::StartGameClient, COMDAT
; _this$ = ecx

; 619  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 620  : 	//状态判断
; 621  : 	ASSERT((m_bStartClient==false)&&(m_pIServerUserItem!=NULL));

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0001d	85 c9		 test	 ecx, ecx
  0001f	75 09		 jne	 SHORT $LN3@StartGameC
  00021	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00024	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  00028	75 18		 jne	 SHORT $LN4@StartGameC
$LN3@StartGameC:
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??StartGameClient@CAndroidUserItem@@IAEXXZ@4JA
  0002f	83 c0 02	 add	 eax, 2
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN4@StartGameC
  00041	cc		 int	 3
$LN4@StartGameC:

; 622  : 	ASSERT((m_pIServerUserItem->GetTableID()!=INVALID_TABLE)&&(m_pIServerUserItem->GetChairID()!=INVALID_CHAIR));

  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00050	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  00053	ff d2		 call	 edx
  00055	0f b7 c0	 movzx	 eax, ax
  00058	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0005d	74 1e		 je	 SHORT $LN5@StartGameC
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00065	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 12		 mov	 edx, DWORD PTR [edx]
  0006a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006d	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00070	ff d0		 call	 eax
  00072	0f b7 c8	 movzx	 ecx, ax
  00075	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0007b	75 19		 jne	 SHORT $LN6@StartGameC
$LN5@StartGameC:
  0007d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??StartGameClient@CAndroidUserItem@@IAEXXZ@4JA
  00083	83 c2 03	 add	 edx, 3
  00086	52		 push	 edx
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00091	85 c0		 test	 eax, eax
  00093	74 01		 je	 SHORT $LN6@StartGameC
  00095	cc		 int	 3
$LN6@StartGameC:

; 623  : 
; 624  : 	//设置变量
; 625  : 	m_bStartClient=true;

  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c6 40 05 01	 mov	 BYTE PTR [eax+5], 1

; 626  : 
; 627  : 	//变量定义
; 628  : 	CMD_GF_GameOption GameOption;
; 629  : 	ZeroMemory(&GameOption,sizeof(GameOption));

  0009d	6a 09		 push	 9
  0009f	6a 00		 push	 0
  000a1	8d 45 ec	 lea	 eax, DWORD PTR _GameOption$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 _memset
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 630  : 
; 631  : 	//构造数据
; 632  : 	GameOption.cbAllowLookon=FALSE;

  000ad	c6 45 ec 00	 mov	 BYTE PTR _GameOption$[ebp], 0

; 633  : 	GameOption.dwFrameVersion=INVALID_DWORD;

  000b1	c7 45 ed ff ff
	ff ff		 mov	 DWORD PTR _GameOption$[ebp+1], -1

; 634  : 	GameOption.dwClientVersion=INVALID_DWORD;

  000b8	c7 45 f1 ff ff
	ff ff		 mov	 DWORD PTR _GameOption$[ebp+5], -1

; 635  : 
; 636  : 	//发送数据
; 637  : 	DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  000bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  000c6	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000cc	0f b7 d1	 movzx	 edx, cx
  000cf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  000d6	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000dc	0f b7 c1	 movzx	 eax, cx
  000df	c1 e0 10	 shl	 eax, 16			; 00000010H
  000e2	0b d0		 or	 edx, eax
  000e4	89 55 e8	 mov	 DWORD PTR _dwAndroidID$[ebp], edx

; 638  : 	m_pIAndroidUserManager->SendDataToServer(dwAndroidID,MDM_GF_FRAME,SUB_GF_GAME_OPTION,&GameOption,sizeof(GameOption));

  000e7	6a 09		 push	 9
  000e9	8d 45 ec	 lea	 eax, DWORD PTR _GameOption$[ebp]
  000ec	50		 push	 eax
  000ed	6a 01		 push	 1
  000ef	6a 64		 push	 100			; 00000064H
  000f1	8b 4d e8	 mov	 ecx, DWORD PTR _dwAndroidID$[ebp]
  000f4	51		 push	 ecx
  000f5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f8	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  000fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	8b 10		 mov	 edx, DWORD PTR [eax]
  00100	8b 49 78	 mov	 ecx, DWORD PTR [ecx+120]
  00103	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00106	ff d0		 call	 eax

; 639  : 
; 640  : 	return;
; 641  : }

  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010e	33 cd		 xor	 ecx, ebp
  00110	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
?StartGameClient@CAndroidUserItem@@IAEXXZ ENDP		; CAndroidUserItem::StartGameClient
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z
_TEXT	SEGMENT
tv139 = -108						; size = 4
tv235 = -104						; size = 4
tv232 = -104						; size = 4
tv82 = -104						; size = 4
tv238 = -101						; size = 1
tv237 = -101						; size = 1
tv236 = -101						; size = 1
tv234 = -101						; size = 1
tv233 = -101						; size = 1
tv231 = -101						; size = 1
_strMessage$2 = -36					; size = 4
_pIServerUserItem$3 = -32				; size = 4
_bLookonUser$4 = -25					; size = 1
_pGameStatus$5 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_wMainCmdID$ = 8					; size = 2
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z PROC ; CAndroidUserItem::OnSocketGameMessage, COMDAT
; _this$ = ecx

; 401  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 402  : 	try

  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	{
; 404  : 	//游戏处理
; 405  : 	if ((wMainCmdID==MDM_GF_GAME)&&(m_pIAndroidUserItemSink!=NULL))

  00036	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0003a	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  0003f	75 35		 jne	 SHORT $LN5@OnSocketGa
  00041	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  00048	74 2c		 je	 SHORT $LN5@OnSocketGa

; 406  : 	{
; 407  : 		return m_pIAndroidUserItemSink->OnEventGameMessage(wSubCmdID,pData,wDataSize);

  0004a	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00052	51		 push	 ecx
  00053	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00057	52		 push	 edx
  00058	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00061	8b 12		 mov	 edx, DWORD PTR [edx]
  00063	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00066	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00069	ff d0		 call	 eax
  0006b	88 45 9b	 mov	 BYTE PTR tv231[ebp], al
  0006e	8a 45 9b	 mov	 al, BYTE PTR tv231[ebp]
  00071	e9 0e 02 00 00	 jmp	 $LN1@OnSocketGa
$LN5@OnSocketGa:

; 408  : 	}
; 409  : 
; 410  : 	//框架处理
; 411  : 	if (wMainCmdID==MDM_GF_FRAME)

  00076	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0007a	83 f8 64	 cmp	 eax, 100		; 00000064H
  0007d	0f 85 9c 01 00
	00		 jne	 $LN6@OnSocketGa

; 412  : 	{
; 413  : 		//默认处理
; 414  : 		switch (wSubCmdID)

  00083	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00087	89 45 98	 mov	 DWORD PTR tv82[ebp], eax
  0008a	83 7d 98 02	 cmp	 DWORD PTR tv82[ebp], 2
  0008e	0f 84 1b 01 00
	00		 je	 $LN13@OnSocketGa
  00094	83 7d 98 64	 cmp	 DWORD PTR tv82[ebp], 100 ; 00000064H
  00098	74 0b		 je	 SHORT $LN7@OnSocketGa
  0009a	83 7d 98 65	 cmp	 DWORD PTR tv82[ebp], 101 ; 00000065H
  0009e	74 54		 je	 SHORT $LN9@OnSocketGa
  000a0	e9 48 01 00 00	 jmp	 $LN15@OnSocketGa
$LN7@OnSocketGa:

; 415  : 		{
; 416  : 		case SUB_GF_GAME_STATUS:		//游戏状态
; 417  : 			{
; 418  : 				//效验参数
; 419  : 				ASSERT(wDataSize==sizeof(CMD_GF_GameStatus));

  000a5	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000a9	83 f8 02	 cmp	 eax, 2
  000ac	74 1e		 je	 SHORT $LN18@OnSocketGa
  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z@4JA
  000b4	83 c1 12	 add	 ecx, 18			; 00000012H
  000b7	51		 push	 ecx
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000bd	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c2	89 45 98	 mov	 DWORD PTR tv232[ebp], eax
  000c5	83 7d 98 00	 cmp	 DWORD PTR tv232[ebp], 0
  000c9	74 01		 je	 SHORT $LN18@OnSocketGa
  000cb	cc		 int	 3
$LN18@OnSocketGa:

; 420  : 				if (wDataSize!=sizeof(CMD_GF_GameStatus)) return false;

  000cc	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000d0	83 f8 02	 cmp	 eax, 2
  000d3	74 07		 je	 SHORT $LN8@OnSocketGa
  000d5	32 c0		 xor	 al, al
  000d7	e9 a8 01 00 00	 jmp	 $LN1@OnSocketGa
$LN8@OnSocketGa:

; 421  : 
; 422  : 				//消息处理
; 423  : 				CMD_GF_GameStatus * pGameStatus=(CMD_GF_GameStatus *)pData;

  000dc	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  000df	89 45 e8	 mov	 DWORD PTR _pGameStatus$5[ebp], eax

; 424  : 
; 425  : 				//设置变量
; 426  : 				m_cbGameStatus=pGameStatus->cbGameStatus;

  000e2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _pGameStatus$5[ebp]
  000e8	8a 11		 mov	 dl, BYTE PTR [ecx]
  000ea	88 50 06	 mov	 BYTE PTR [eax+6], dl

; 427  : 
; 428  : 				return true;

  000ed	b0 01		 mov	 al, 1
  000ef	e9 90 01 00 00	 jmp	 $LN1@OnSocketGa
$LN9@OnSocketGa:

; 429  : 			}
; 430  : 		case SUB_GF_GAME_SCENE:			//游戏场景
; 431  : 			{
; 432  : 				//游戏处理
; 433  : 				if (m_pIAndroidUserItemSink!=NULL)

  000f4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  000fb	74 6b		 je	 SHORT $LN10@OnSocketGa

; 434  : 				{
; 435  : 					bool bLookonUser=(m_pIServerUserItem->GetUserStatus()==US_LOOKON);

  000fd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00106	8b 12		 mov	 edx, DWORD PTR [edx]
  00108	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0010b	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0010e	ff d0		 call	 eax
  00110	88 45 9b	 mov	 BYTE PTR tv233[ebp], al
  00113	0f b6 4d 9b	 movzx	 ecx, BYTE PTR tv233[ebp]
  00117	83 f9 04	 cmp	 ecx, 4
  0011a	75 09		 jne	 SHORT $LN19@OnSocketGa
  0011c	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  00123	eb 07		 jmp	 SHORT $LN20@OnSocketGa
$LN19@OnSocketGa:
  00125	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN20@OnSocketGa:
  0012c	8a 55 94	 mov	 dl, BYTE PTR tv139[ebp]
  0012f	88 55 e7	 mov	 BYTE PTR _bLookonUser$4[ebp], dl

; 436  : 					return m_pIAndroidUserItemSink->OnEventSceneMessage(m_cbGameStatus,bLookonUser,pData,wDataSize);

  00132	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00136	50		 push	 eax
  00137	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0013a	51		 push	 ecx
  0013b	0f b6 55 e7	 movzx	 edx, BYTE PTR _bLookonUser$4[ebp]
  0013f	52		 push	 edx
  00140	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00143	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00147	51		 push	 ecx
  00148	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0014b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  00156	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00159	ff d2		 call	 edx
  0015b	88 45 9b	 mov	 BYTE PTR tv234[ebp], al
  0015e	8a 45 9b	 mov	 al, BYTE PTR tv234[ebp]
  00161	e9 1e 01 00 00	 jmp	 $LN1@OnSocketGa

; 437  : 				}
; 438  : 				else

  00166	eb 40		 jmp	 SHORT $LN11@OnSocketGa
$LN10@OnSocketGa:

; 439  : 				{
; 440  : 					//发送开始
; 441  : 					IServerUserItem * pIServerUserItem=GetMeUserItem();

  00168	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016b	8b 10		 mov	 edx, DWORD PTR [eax]
  0016d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00170	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00173	ff d0		 call	 eax
  00175	89 45 98	 mov	 DWORD PTR tv235[ebp], eax
  00178	8b 4d 98	 mov	 ecx, DWORD PTR tv235[ebp]
  0017b	89 4d e0	 mov	 DWORD PTR _pIServerUserItem$3[ebp], ecx

; 442  : 					if (pIServerUserItem->GetUserStatus()!=US_READY) SendUserReady(NULL,0);

  0017e	8b 45 e0	 mov	 eax, DWORD PTR _pIServerUserItem$3[ebp]
  00181	8b 10		 mov	 edx, DWORD PTR [eax]
  00183	8b 4d e0	 mov	 ecx, DWORD PTR _pIServerUserItem$3[ebp]
  00186	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  00189	ff d0		 call	 eax
  0018b	88 45 9b	 mov	 BYTE PTR tv236[ebp], al
  0018e	0f b6 4d 9b	 movzx	 ecx, BYTE PTR tv236[ebp]
  00192	83 f9 03	 cmp	 ecx, 3
  00195	74 11		 je	 SHORT $LN11@OnSocketGa
  00197	6a 00		 push	 0
  00199	6a 00		 push	 0
  0019b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0019e	8b 10		 mov	 edx, DWORD PTR [eax]
  001a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a3	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  001a6	ff d0		 call	 eax
$LN11@OnSocketGa:

; 443  : 				}
; 444  : 
; 445  : 				return true;

  001a8	b0 01		 mov	 al, 1
  001aa	e9 d5 00 00 00	 jmp	 $LN1@OnSocketGa
$LN13@OnSocketGa:

; 446  : 			}
; 447  : 		case SUB_GF_USER_READY:			//用户准备
; 448  : 			{
; 449  : 				if(m_pIServerUserItem->GetUserStatus()>=US_READY)

  001af	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  001b8	8b 12		 mov	 edx, DWORD PTR [edx]
  001ba	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001bd	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  001c0	ff d0		 call	 eax
  001c2	88 45 9b	 mov	 BYTE PTR tv237[ebp], al
  001c5	0f b6 4d 9b	 movzx	 ecx, BYTE PTR tv237[ebp]
  001c9	83 f9 03	 cmp	 ecx, 3
  001cc	7c 07		 jl	 SHORT $LN14@OnSocketGa

; 450  : 					return true;

  001ce	b0 01		 mov	 al, 1
  001d0	e9 af 00 00 00	 jmp	 $LN1@OnSocketGa
$LN14@OnSocketGa:

; 451  : 
; 452  : 				//发送开始
; 453  : 				SendUserReady(NULL,0);

  001d5	6a 00		 push	 0
  001d7	6a 00		 push	 0
  001d9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001dc	8b 10		 mov	 edx, DWORD PTR [eax]
  001de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001e1	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  001e4	ff d0		 call	 eax

; 454  : 				return true;

  001e6	b0 01		 mov	 al, 1
  001e8	e9 97 00 00 00	 jmp	 $LN1@OnSocketGa
$LN15@OnSocketGa:

; 455  : 			}
; 456  : 		default:
; 457  : 			{
; 458  : 				if (m_pIAndroidUserItemSink!=NULL)

  001ed	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001f0	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  001f4	74 29		 je	 SHORT $LN6@OnSocketGa

; 459  : 					return m_pIAndroidUserItemSink->OnEventFrameMessage(wSubCmdID,pData,wDataSize);

  001f6	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  001fa	50		 push	 eax
  001fb	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  001fe	51		 push	 ecx
  001ff	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00203	52		 push	 edx
  00204	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00207	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0020a	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  0020d	8b 12		 mov	 edx, DWORD PTR [edx]
  0020f	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00212	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00215	ff d0		 call	 eax
  00217	88 45 9b	 mov	 BYTE PTR tv238[ebp], al
  0021a	8a 45 9b	 mov	 al, BYTE PTR tv238[ebp]
  0021d	eb 65		 jmp	 SHORT $LN1@OnSocketGa
$LN6@OnSocketGa:

; 460  : 				break;
; 461  : 			}
; 462  : 		}
; 463  : 	}
; 464  : 	}

  0021f	eb 51		 jmp	 SHORT $LN21@OnSocketGa
__catch$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$0:

; 465  : 	catch(...)
; 466  : 	{
; 467  : 		CString strMessage;

  00221	8d 4d dc	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0022a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 468  : 		strMessage.Format(TEXT("OnSocketGameMessage: MainID=%d\tSubID=%d"),wMainCmdID,wSubCmdID);

  0022e	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00232	50		 push	 eax
  00233	0f b7 4d 08	 movzx	 ecx, WORD PTR _wMainCmdID$[ebp]
  00237	51		 push	 ecx
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@JLNELCNK@OnSocketGameMessage?3?5MainID?$DN?$CFd?7@
  0023d	8d 55 dc	 lea	 edx, DWORD PTR _strMessage$2[ebp]
  00240	52		 push	 edx
  00241	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  00247	83 c4 10	 add	 esp, 16			; 00000010H

; 469  : 		CTraceService::TraceString(strMessage,TraceLevel_Exception);

  0024a	6a 03		 push	 3
  0024c	8d 4d dc	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00255	50		 push	 eax
  00256	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  0025c	83 c4 08	 add	 esp, 8

; 470  : 	}

  0025f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00263	8d 4d dc	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  00266	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0026c	b8 00 00 00 00	 mov	 eax, $LN25@OnSocketGa
  00271	c3		 ret	 0
$LN21@OnSocketGa:
  00272	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00279	eb 07		 jmp	 SHORT __tryend$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$1
$LN25@OnSocketGa:
  0027b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$1:

; 471  : 
; 472  : 	return true;

  00282	b0 01		 mov	 al, 1
$LN1@OnSocketGa:

; 473  : }

  00284	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00287	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0028e	59		 pop	 ecx
  0028f	5f		 pop	 edi
  00290	5e		 pop	 esi
  00291	5b		 pop	 ebx
  00292	8b e5		 mov	 esp, ebp
  00294	5d		 pop	 ebp
  00295	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z$2:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a 90	 mov	 ecx, DWORD PTR [edx-112]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z ENDP ; CAndroidUserItem::OnSocketGameMessage
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z
_TEXT	SEGMENT
_dwAndroidID$1 = -16					; size = 4
_wHeadSize$ = -12					; size = 2
_pSystemMessage$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
?OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z PROC ; CAndroidUserItem::OnSocketSubSystemMessage, COMDAT
; _this$ = ecx

; 597  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 598  : 	//变量定义
; 599  : 	CMD_CM_SystemMessage * pSystemMessage=(CMD_CM_SystemMessage *)pData;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR _pSystemMessage$[ebp], eax

; 600  : 	WORD wHeadSize=sizeof(CMD_CM_SystemMessage)-sizeof(pSystemMessage->szString);

  00012	b8 04 00 00 00	 mov	 eax, 4
  00017	66 89 45 f4	 mov	 WORD PTR _wHeadSize$[ebp], ax

; 601  : 
; 602  : 	//效验参数
; 603  : 	ASSERT((wDataSize>wHeadSize)&&(wDataSize==(wHeadSize+pSystemMessage->wLength*sizeof(TCHAR))));

  0001b	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0001f	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	7e 15		 jle	 SHORT $LN6@OnSocketSu
  00027	0f b7 55 0c	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0002b	0f b7 45 f4	 movzx	 eax, WORD PTR _wHeadSize$[ebp]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _pSystemMessage$[ebp]
  00032	0f b7 49 02	 movzx	 ecx, WORD PTR [ecx+2]
  00036	03 c1		 add	 eax, ecx
  00038	3b d0		 cmp	 edx, eax
  0003a	74 19		 je	 SHORT $LN7@OnSocketSu
$LN6@OnSocketSu:
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z@4JA
  00042	83 c2 06	 add	 edx, 6
  00045	52		 push	 edx
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0004b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00050	85 c0		 test	 eax, eax
  00052	74 01		 je	 SHORT $LN7@OnSocketSu
  00054	cc		 int	 3
$LN7@OnSocketSu:

; 604  : 	if ((wDataSize<=wHeadSize)||(wDataSize!=(wHeadSize+pSystemMessage->wLength*sizeof(TCHAR)))) return false;

  00055	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00059	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  0005d	3b c1		 cmp	 eax, ecx
  0005f	7e 15		 jle	 SHORT $LN3@OnSocketSu
  00061	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00065	0f b7 4d f4	 movzx	 ecx, WORD PTR _wHeadSize$[ebp]
  00069	8b 55 f8	 mov	 edx, DWORD PTR _pSystemMessage$[ebp]
  0006c	0f b7 52 02	 movzx	 edx, WORD PTR [edx+2]
  00070	03 ca		 add	 ecx, edx
  00072	3b c1		 cmp	 eax, ecx
  00074	74 04		 je	 SHORT $LN2@OnSocketSu
$LN3@OnSocketSu:
  00076	32 c0		 xor	 al, al
  00078	eb 51		 jmp	 SHORT $LN1@OnSocketSu
$LN2@OnSocketSu:

; 605  : 
; 606  : 	//关闭处理
; 607  : 	if ((pSystemMessage->wType&(SMT_CLOSE_ROOM|SMT_CLOSE_LINK))!=0)

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pSystemMessage$[ebp]
  0007d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00080	81 e1 00 05 00
	00		 and	 ecx, 1280		; 00000500H
  00086	74 41		 je	 SHORT $LN4@OnSocketSu

; 608  : 	{
; 609  : 		//关闭处理
; 610  : 		DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  0008f	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00095	0f b7 d1	 movzx	 edx, cx
  00098	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  0009f	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000a5	0f b7 c1	 movzx	 eax, cx
  000a8	c1 e0 10	 shl	 eax, 16			; 00000010H
  000ab	0b d0		 or	 edx, eax
  000ad	89 55 f0	 mov	 DWORD PTR _dwAndroidID$1[ebp], edx

; 611  : 		m_pIAndroidUserManager->DeleteAndroidUserItem(dwAndroidID,true);

  000b0	6a 01		 push	 1
  000b2	8b 45 f0	 mov	 eax, DWORD PTR _dwAndroidID$1[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 12		 mov	 edx, DWORD PTR [edx]
  000c1	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  000c4	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000c7	ff d0		 call	 eax
$LN4@OnSocketSu:

; 612  : 	}
; 613  : 
; 614  : 	return true;

  000c9	b0 01		 mov	 al, 1
$LN1@OnSocketSu:

; 615  : }

  000cb	5f		 pop	 edi
  000cc	5e		 pop	 esi
  000cd	5b		 pop	 ebx
  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c2 08 00	 ret	 8
?OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z ENDP ; CAndroidUserItem::OnSocketSubSystemMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z
_TEXT	SEGMENT
tv146 = -84						; size = 4
_LastUserStatus$ = -16					; size = 5
_pUserStatus$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
?OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z PROC ; CAndroidUserItem::OnSocketSubUserStatus, COMDAT
; _this$ = ecx

; 520  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 521  : 	//效验参数
; 522  : 	ASSERT(wDataSize==sizeof(CMD_GR_UserStatus));

  0000c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00010	83 f8 09	 cmp	 eax, 9
  00013	74 19		 je	 SHORT $LN12@OnSocketSu
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN12@OnSocketSu
  0002d	cc		 int	 3
$LN12@OnSocketSu:

; 523  : 	if (wDataSize<sizeof(CMD_GR_UserStatus)) return false;

  0002e	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00032	83 f8 09	 cmp	 eax, 9
  00035	73 07		 jae	 SHORT $LN2@OnSocketSu
  00037	32 c0		 xor	 al, al
  00039	e9 5e 01 00 00	 jmp	 $LN1@OnSocketSu
$LN2@OnSocketSu:

; 524  : 
; 525  : 	//变量定义
; 526  : 	CMD_GR_UserStatus * pUserStatus=(CMD_GR_UserStatus *)pData;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00041	89 45 f8	 mov	 DWORD PTR _pUserStatus$[ebp], eax

; 527  : 
; 528  : 	//玩家判断
; 529  : 	if (pUserStatus->dwUserID!=m_AndroidItemConfig.AndroidAccountsInfo.dwUserID)

  00044	8b 45 f8	 mov	 eax, DWORD PTR _pUserStatus$[ebp]
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 10		 mov	 edx, DWORD PTR [eax]
  0004c	3b 51 20	 cmp	 edx, DWORD PTR [ecx+32]
  0004f	74 07		 je	 SHORT $LN3@OnSocketSu

; 530  : 	{
; 531  : 		return true;

  00051	b0 01		 mov	 al, 1
  00053	e9 44 01 00 00	 jmp	 $LN1@OnSocketSu
$LN3@OnSocketSu:

; 532  : 	}
; 533  : 
; 534  : 	//用户状态
; 535  : 	tagUserStatus LastUserStatus;
; 536  : 	CopyMemory(&LastUserStatus,&m_CurrentUserStatus,sizeof(LastUserStatus));

  00058	6a 05		 push	 5
  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 c0 10	 add	 eax, 16			; 00000010H
  00060	50		 push	 eax
  00061	8d 4d f0	 lea	 ecx, DWORD PTR _LastUserStatus$[ebp]
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 _memcpy
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 537  : 	CopyMemory(&m_CurrentUserStatus,&pUserStatus->UserStatus,sizeof(m_CurrentUserStatus));

  0006d	6a 05		 push	 5
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _pUserStatus$[ebp]
  00072	83 c0 04	 add	 eax, 4
  00075	50		 push	 eax
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	83 c1 10	 add	 ecx, 16			; 00000010H
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 _memcpy
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH

; 538  : 
; 539  : 	//开始切换
; 540  : 	if ((LastUserStatus.cbUserStatus!=US_READY)&&(m_CurrentUserStatus.cbUserStatus==US_READY))
; 541  : 	{
; 542  : 	}
; 543  : 
; 544  : 	//机器起立
; 545  : 	if(m_CurrentUserStatus.cbUserStatus==US_FREE)

  00085	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00088	0f b6 48 14	 movzx	 ecx, BYTE PTR [eax+20]
  0008c	83 f9 01	 cmp	 ecx, 1
  0008f	75 63		 jne	 SHORT $LN5@OnSocketSu

; 546  : 	{
; 547  : 		//设置局数
; 548  : 		m_dwPlayInnings=0;

  00091	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00094	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 549  : 		m_wAndroidAction=0;

  0009b	33 c0		 xor	 eax, eax
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 550  : 
; 551  : 		//设置时间
; 552  : 		m_dwStandupTickCount=(DWORD)time(NULL);

  000a4	6a 00		 push	 0
  000a6	e8 00 00 00 00	 call	 _time
  000ab	83 c4 04	 add	 esp, 4
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	89 41 6c	 mov	 DWORD PTR [ecx+108], eax

; 553  : 		m_dwReposeTickCount=m_dwMinSitInterval+rand()%(__max(m_dwMaxSitInterval-m_dwMinSitInterval,1));

  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  000bd	2b 51 64	 sub	 edx, DWORD PTR [ecx+100]
  000c0	83 fa 01	 cmp	 edx, 1
  000c3	76 11		 jbe	 SHORT $LN13@OnSocketSu
  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cb	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  000ce	2b 51 64	 sub	 edx, DWORD PTR [ecx+100]
  000d1	89 55 ac	 mov	 DWORD PTR tv146[ebp], edx
  000d4	eb 07		 jmp	 SHORT $LN14@OnSocketSu
$LN13@OnSocketSu:
  000d6	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv146[ebp], 1
$LN14@OnSocketSu:
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  000e3	33 d2		 xor	 edx, edx
  000e5	f7 75 ac	 div	 DWORD PTR tv146[ebp]
  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	03 50 64	 add	 edx, DWORD PTR [eax+100]
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	89 51 70	 mov	 DWORD PTR [ecx+112], edx
$LN5@OnSocketSu:

; 554  : 	}
; 555  : 
; 556  : 	//游戏开始
; 557  : 	if(m_CurrentUserStatus.cbUserStatus==US_PLAYING)

  000f4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	0f b6 48 14	 movzx	 ecx, BYTE PTR [eax+20]
  000fb	83 f9 05	 cmp	 ecx, 5
  000fe	75 0f		 jne	 SHORT $LN6@OnSocketSu

; 558  : 	{
; 559  : 		m_dwPlayInnings++;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00106	83 c1 01	 add	 ecx, 1
  00109	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010c	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
$LN6@OnSocketSu:

; 560  : 	}
; 561  : 
; 562  : 	//坐下状态
; 563  : 	if(m_CurrentUserStatus.cbUserStatus==US_SIT)

  0010f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00112	0f b6 48 14	 movzx	 ecx, BYTE PTR [eax+20]
  00116	83 f9 02	 cmp	 ecx, 2
  00119	75 32		 jne	 SHORT $LN7@OnSocketSu

; 564  : 	{
; 565  : 		if(m_AndroidService.dwSwitchTableInnings > 0 &&

  0011b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00122	76 29		 jbe	 SHORT $LN7@OnSocketSu
  00124	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0012d	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00130	77 1b		 ja	 SHORT $LN7@OnSocketSu

; 566  : 		m_AndroidService.dwSwitchTableInnings<=m_dwPlayInnings)
; 567  : 		{
; 568  : 			//设置动作
; 569  : 			m_dwPlayInnings=0;

  00132	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00135	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 570  : 			m_wAndroidAction|=ANDROID_WAITSTANDUP;

  0013c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0013f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00143	83 c9 01	 or	 ecx, 1
  00146	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00149	66 89 4a 08	 mov	 WORD PTR [edx+8], cx
$LN7@OnSocketSu:

; 571  : 		}
; 572  : 	}
; 573  : 
; 574  : 	//关闭判断
; 575  : 	if ((m_bStartClient==true)&&(m_CurrentUserStatus.wTableID==INVALID_TABLE))

  0014d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00150	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00154	83 f9 01	 cmp	 ecx, 1
  00157	75 1b		 jne	 SHORT $LN9@OnSocketSu
  00159	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0015c	0f b7 48 10	 movzx	 ecx, WORD PTR [eax+16]
  00160	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00166	75 0c		 jne	 SHORT $LN9@OnSocketSu

; 576  : 	{
; 577  : 		//关闭游戏
; 578  : 		CloseGameClient();

  00168	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	e8 00 00 00 00	 call	 ?CloseGameClient@CAndroidUserItem@@IAEXXZ ; CAndroidUserItem::CloseGameClient

; 579  : 
; 580  : 		return true;

  00170	b0 01		 mov	 al, 1
  00172	eb 28		 jmp	 SHORT $LN1@OnSocketSu
$LN9@OnSocketSu:

; 581  : 	}
; 582  : 
; 583  : 	//启动判断
; 584  : 	if ((m_bStartClient==false)&&(m_CurrentUserStatus.wTableID!=INVALID_TABLE))

  00174	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00177	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0017b	85 c9		 test	 ecx, ecx
  0017d	75 1b		 jne	 SHORT $LN10@OnSocketSu
  0017f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00182	0f b7 48 10	 movzx	 ecx, WORD PTR [eax+16]
  00186	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  0018c	74 0c		 je	 SHORT $LN10@OnSocketSu

; 585  : 	{
; 586  : 		//启动游戏
; 587  : 		StartGameClient();

  0018e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	e8 00 00 00 00	 call	 ?StartGameClient@CAndroidUserItem@@IAEXXZ ; CAndroidUserItem::StartGameClient

; 588  : 
; 589  : 		return true;

  00196	b0 01		 mov	 al, 1
  00198	eb 02		 jmp	 SHORT $LN1@OnSocketSu
$LN10@OnSocketSu:

; 590  : 	}
; 591  : 
; 592  : 	return true;

  0019a	b0 01		 mov	 al, 1
$LN1@OnSocketSu:

; 593  : }

  0019c	5f		 pop	 edi
  0019d	5e		 pop	 esi
  0019e	5b		 pop	 ebx
  0019f	8b e5		 mov	 esp, ebp
  001a1	5d		 pop	 ebp
  001a2	c2 08 00	 ret	 8
?OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z ENDP ; CAndroidUserItem::OnSocketSubUserStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z
_TEXT	SEGMENT
tv191 = -96						; size = 4
_dwAndroidID$ = -28					; size = 4
_UserRule$ = -24					; size = 13
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
?OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z PROC ; CAndroidUserItem::OnSocketSubLogonFinish, COMDAT
; _this$ = ecx

; 483  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 484  : 	//设置变量
; 485  : 	m_cbGameStatus=GAME_STATUS_FREE;

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0

; 486  : 	m_pIServerUserItem=m_pIServerUserManager->SearchUserItem(m_AndroidItemConfig.AndroidAccountsInfo.dwUserID);

  0001d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00023	51		 push	 ecx
  00024	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 74	 mov	 eax, DWORD PTR [edx+116]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b 49 74	 mov	 ecx, DWORD PTR [ecx+116]
  00032	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00035	ff d0		 call	 eax
  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 487  : 
; 488  : 	//状态效验
; 489  : 	ASSERT(m_pIServerUserItem!=NULL);

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00040	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00044	75 19		 jne	 SHORT $LN5@OnSocketSu
  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z@4JA
  0004c	83 c1 06	 add	 ecx, 6
  0004f	51		 push	 ecx
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00055	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005a	85 c0		 test	 eax, eax
  0005c	74 01		 je	 SHORT $LN5@OnSocketSu
  0005e	cc		 int	 3
$LN5@OnSocketSu:

; 490  : 	if (m_pIServerUserItem==NULL) return false;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00062	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00066	75 07		 jne	 SHORT $LN2@OnSocketSu
  00068	32 c0		 xor	 al, al
  0006a	e9 1d 01 00 00	 jmp	 $LN1@OnSocketSu
$LN2@OnSocketSu:

; 491  : 
; 492  : 	//用户状态
; 493  : 	m_CurrentUserStatus.wChairID=m_pIServerUserItem->GetChairID();

  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00075	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00078	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007a	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0007d	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00080	ff d2		 call	 edx
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	66 89 41 12	 mov	 WORD PTR [ecx+18], ax

; 494  : 	m_CurrentUserStatus.wTableID=m_pIServerUserItem->GetTableID();

  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0008f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00092	8b 01		 mov	 eax, DWORD PTR [ecx]
  00094	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00097	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0009a	ff d2		 call	 edx
  0009c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	66 89 41 10	 mov	 WORD PTR [ecx+16], ax

; 495  : 	m_CurrentUserStatus.cbUserStatus=m_pIServerUserItem->GetUserStatus();

  000a3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000a9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ae	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  000b1	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  000b4	ff d2		 call	 edx
  000b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	88 41 14	 mov	 BYTE PTR [ecx+20], al

; 496  : 
; 497  : 	//规则变量
; 498  : 	CMD_GR_UserRule UserRule;
; 499  : 	ZeroMemory(&UserRule,sizeof(UserRule));

  000bc	6a 0d		 push	 13			; 0000000dH
  000be	6a 00		 push	 0
  000c0	8d 45 e8	 lea	 eax, DWORD PTR _UserRule$[ebp]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 _memset
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 500  : 
; 501  : 	//发送规则
; 502  : 	DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  000cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  000d3	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000d9	0f b7 d1	 movzx	 edx, cx
  000dc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000df	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  000e3	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000e9	0f b7 c1	 movzx	 eax, cx
  000ec	c1 e0 10	 shl	 eax, 16			; 00000010H
  000ef	0b d0		 or	 edx, eax
  000f1	89 55 e4	 mov	 DWORD PTR _dwAndroidID$[ebp], edx

; 503  : 	m_pIAndroidUserManager->SendDataToServer(dwAndroidID,MDM_GR_USER,SUB_GR_USER_RULE,&UserRule,sizeof(UserRule));

  000f4	6a 0d		 push	 13			; 0000000dH
  000f6	8d 45 e8	 lea	 eax, DWORD PTR _UserRule$[ebp]
  000f9	50		 push	 eax
  000fa	6a 01		 push	 1
  000fc	6a 03		 push	 3
  000fe	8b 4d e4	 mov	 ecx, DWORD PTR _dwAndroidID$[ebp]
  00101	51		 push	 ecx
  00102	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00105	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 10		 mov	 edx, DWORD PTR [eax]
  0010d	8b 49 78	 mov	 ecx, DWORD PTR [ecx+120]
  00110	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00113	ff d0		 call	 eax

; 504  : 
; 505  : 	//设置时间
; 506  : 	m_dwStandupTickCount=(DWORD)time(NULL);

  00115	6a 00		 push	 0
  00117	e8 00 00 00 00	 call	 _time
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	89 41 6c	 mov	 DWORD PTR [ecx+108], eax

; 507  : 	m_dwReposeTickCount=m_dwMinSitInterval+rand()%(__max(m_dwMaxSitInterval-m_dwMinSitInterval,1));

  00125	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00128	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0012e	2b 51 64	 sub	 edx, DWORD PTR [ecx+100]
  00131	83 fa 01	 cmp	 edx, 1
  00134	76 11		 jbe	 SHORT $LN6@OnSocketSu
  00136	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00139	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0013f	2b 51 64	 sub	 edx, DWORD PTR [ecx+100]
  00142	89 55 a0	 mov	 DWORD PTR tv191[ebp], edx
  00145	eb 07		 jmp	 SHORT $LN7@OnSocketSu
$LN6@OnSocketSu:
  00147	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv191[ebp], 1
$LN7@OnSocketSu:
  0014e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00154	33 d2		 xor	 edx, edx
  00156	f7 75 a0	 div	 DWORD PTR tv191[ebp]
  00159	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015c	03 50 64	 add	 edx, DWORD PTR [eax+100]
  0015f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	89 51 70	 mov	 DWORD PTR [ecx+112], edx

; 508  : 
; 509  : 	//重入判断
; 510  : 	if (m_pIServerUserItem->GetTableID()!=INVALID_TABLE)

  00165	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00168	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0016b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0016e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00170	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00173	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  00176	ff d2		 call	 edx
  00178	0f b7 c0	 movzx	 eax, ax
  0017b	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00180	74 08		 je	 SHORT $LN3@OnSocketSu

; 511  : 	{
; 512  : 		StartGameClient();

  00182	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00185	e8 00 00 00 00	 call	 ?StartGameClient@CAndroidUserItem@@IAEXXZ ; CAndroidUserItem::StartGameClient
$LN3@OnSocketSu:

; 513  : 	}
; 514  : 
; 515  : 	return true;

  0018a	b0 01		 mov	 al, 1
$LN1@OnSocketSu:

; 516  : }

  0018c	5f		 pop	 edi
  0018d	5e		 pop	 esi
  0018e	5b		 pop	 ebx
  0018f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00192	33 cd		 xor	 ecx, ebp
  00194	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00199	8b e5		 mov	 esp, ebp
  0019b	5d		 pop	 ebp
  0019c	c2 08 00	 ret	 8
?OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z ENDP ; CAndroidUserItem::OnSocketSubLogonFinish
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnSocketSubLogonFailure@CAndroidUserItem@@IAE_NPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
?OnSocketSubLogonFailure@CAndroidUserItem@@IAE_NPAXG@Z PROC ; CAndroidUserItem::OnSocketSubLogonFailure, COMDAT
; _this$ = ecx

; 477  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 478  : 	return true;

  0000c	b0 01		 mov	 al, 1

; 479  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?OnSocketSubLogonFailure@CAndroidUserItem@@IAE_NPAXG@Z ENDP ; CAndroidUserItem::OnSocketSubLogonFailure
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wMainCmdID$ = 8					; size = 2
_wSubCmdID$ = 12					; size = 2
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z PROC	; CAndroidUserItem::OnSocketRead, COMDAT
; _this$ = ecx

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 366  : 	//登录失败
; 367  : 	if ((wMainCmdID==MDM_GR_LOGON)&&(wSubCmdID==SUB_GR_LOGON_FAILURE))

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00010	83 f8 01	 cmp	 eax, 1
  00013	75 1f		 jne	 SHORT $LN2@OnSocketRe
  00015	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00019	83 f8 65	 cmp	 eax, 101		; 00000065H
  0001c	75 16		 jne	 SHORT $LN2@OnSocketRe

; 368  : 	{
; 369  : 		return OnSocketSubLogonFailure(pData,wDataSize);

  0001e	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00022	50		 push	 eax
  00023	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00026	51		 push	 ecx
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?OnSocketSubLogonFailure@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubLogonFailure
  0002f	e9 a4 00 00 00	 jmp	 $LN1@OnSocketRe
$LN2@OnSocketRe:

; 370  : 	}
; 371  : 
; 372  : 	//登录完成
; 373  : 	if ((wMainCmdID==MDM_GR_LOGON)&&(wSubCmdID==SUB_GR_LOGON_FINISH))

  00034	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00038	83 f8 01	 cmp	 eax, 1
  0003b	75 1c		 jne	 SHORT $LN3@OnSocketRe
  0003d	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00041	83 f8 66	 cmp	 eax, 102		; 00000066H
  00044	75 13		 jne	 SHORT $LN3@OnSocketRe

; 374  : 	{
; 375  : 		return OnSocketSubLogonFinish(pData,wDataSize);

  00046	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?OnSocketSubLogonFinish@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubLogonFinish
  00057	eb 7f		 jmp	 SHORT $LN1@OnSocketRe
$LN3@OnSocketRe:

; 376  : 	}
; 377  : 
; 378  : 	//用户状态
; 379  : 	if ((wMainCmdID==MDM_GR_USER)&&(wSubCmdID==SUB_GR_USER_STATUS))

  00059	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0005d	83 f8 03	 cmp	 eax, 3
  00060	75 1c		 jne	 SHORT $LN4@OnSocketRe
  00062	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00066	83 f8 66	 cmp	 eax, 102		; 00000066H
  00069	75 13		 jne	 SHORT $LN4@OnSocketRe

; 380  : 	{
; 381  : 		return OnSocketSubUserStatus(pData,wDataSize);

  0006b	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  00073	51		 push	 ecx
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?OnSocketSubUserStatus@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubUserStatus
  0007c	eb 5a		 jmp	 SHORT $LN1@OnSocketRe
$LN4@OnSocketRe:

; 382  : 	}
; 383  : 
; 384  : 	//游戏消息
; 385  : 	if ((wMainCmdID==MDM_GF_GAME)||(wMainCmdID==MDM_GF_FRAME))

  0007e	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  00082	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  00087	74 09		 je	 SHORT $LN6@OnSocketRe
  00089	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0008d	83 f8 64	 cmp	 eax, 100		; 00000064H
  00090	75 1d		 jne	 SHORT $LN5@OnSocketRe
$LN6@OnSocketRe:

; 386  : 	{
; 387  : 		return OnSocketGameMessage(wMainCmdID,wSubCmdID,pData,wDataSize);

  00092	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00096	50		 push	 eax
  00097	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  0009a	51		 push	 ecx
  0009b	0f b7 55 0c	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0009f	52		 push	 edx
  000a0	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?OnSocketGameMessage@CAndroidUserItem@@IAE_NGGPAXG@Z ; CAndroidUserItem::OnSocketGameMessage
  000ad	eb 29		 jmp	 SHORT $LN1@OnSocketRe
$LN5@OnSocketRe:

; 388  : 	}
; 389  : 
; 390  : 	//系统消息
; 391  : 	if ((wMainCmdID==MDM_CM_SYSTEM)&&(wSubCmdID==SUB_CM_SYSTEM_MESSAGE))

  000af	0f b7 45 08	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  000b3	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  000b8	75 1c		 jne	 SHORT $LN7@OnSocketRe
  000ba	0f b7 45 0c	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  000be	83 f8 01	 cmp	 eax, 1
  000c1	75 13		 jne	 SHORT $LN7@OnSocketRe

; 392  : 	{
; 393  : 		return OnSocketSubSystemMessage(pData,wDataSize);

  000c3	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000c7	50		 push	 eax
  000c8	8b 4d 10	 mov	 ecx, DWORD PTR _pData$[ebp]
  000cb	51		 push	 ecx
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	e8 00 00 00 00	 call	 ?OnSocketSubSystemMessage@CAndroidUserItem@@IAE_NPAXG@Z ; CAndroidUserItem::OnSocketSubSystemMessage
  000d4	eb 02		 jmp	 SHORT $LN1@OnSocketRe
$LN7@OnSocketRe:

; 394  : 	}
; 395  : 
; 396  : 	return true;

  000d6	b0 01		 mov	 al, 1
$LN1@OnSocketRe:

; 397  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 10 00	 ret	 16			; 00000010H
?OnSocketRead@CAndroidUserItem@@QAE_NGGPAXG@Z ENDP	; CAndroidUserItem::OnSocketRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z
_TEXT	SEGMENT
_strMessage$2 = -32					; size = 4
_pTimerItem$3 = -28					; size = 4
_i$4 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_dwTimerID$ = 8						; size = 4
_dwBindParameter$ = 12					; size = 4
?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z PROC		; CAndroidUserItem::OnTimerPulse, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 50	 sub	 esp, 80			; 00000050H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 324  : 	//寻找子项
; 325  : 	for (INT_PTR i=m_TimerItemActive.GetCount()-1;i>=0;i--)

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 50	 add	 ecx, 80			; 00000050H
  00035	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount
  0003a	83 e8 01	 sub	 eax, 1
  0003d	89 45 e8	 mov	 DWORD PTR _i$4[ebp], eax
  00040	eb 09		 jmp	 SHORT $LN4@OnTimerPul
$LN2@OnTimerPul:
  00042	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  00045	83 e8 01	 sub	 eax, 1
  00048	89 45 e8	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@OnTimerPul:
  0004b	83 7d e8 00	 cmp	 DWORD PTR _i$4[ebp], 0
  0004f	0f 8c de 00 00
	00		 jl	 $LN3@OnTimerPul

; 326  : 	{
; 327  : 		//变量定义
; 328  : 		tagTimerItem * pTimerItem=m_TimerItemActive[i];

  00055	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  00058	50		 push	 eax
  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	83 c1 50	 add	 ecx, 80			; 00000050H
  0005f	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	89 4d e4	 mov	 DWORD PTR _pTimerItem$3[ebp], ecx

; 329  : 
; 330  : 		//时间处理
; 331  : 		if (pTimerItem->nTimeLeave<=1L)

  00069	8b 45 e4	 mov	 eax, DWORD PTR _pTimerItem$3[ebp]
  0006c	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  00070	0f 87 a9 00 00
	00		 ja	 $LN5@OnTimerPul

; 332  : 		{
; 333  : 			//设置数组
; 334  : 			m_TimerItemActive.RemoveAt(i);

  00076	6a 01		 push	 1
  00078	8b 45 e8	 mov	 eax, DWORD PTR _i$4[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	83 c1 50	 add	 ecx, 80			; 00000050H
  00082	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAt

; 335  : 			m_TimerItemBuffer.Add(pTimerItem);

  00087	8d 45 e4	 lea	 eax, DWORD PTR _pTimerItem$3[ebp]
  0008a	50		 push	 eax
  0008b	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  00090	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add

; 336  : 
; 337  : 			try

  00095	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 338  : 			{
; 339  : 			//时间通知
; 340  : 			if (m_pIAndroidUserItemSink!=NULL)

  0009c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  000a3	74 19		 je	 SHORT $LN8@OnTimerPul

; 341  : 			{
; 342  : 				m_pIAndroidUserItemSink->OnEventTimer(pTimerItem->nTimerID);

  000a5	8b 45 e4	 mov	 eax, DWORD PTR _pTimerItem$3[ebp]
  000a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000aa	51		 push	 ecx
  000ab	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ae	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b1	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000b4	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b6	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  000b9	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000bc	ff d2		 call	 edx
$LN8@OnTimerPul:

; 343  : 			}
; 344  : 			}

  000be	eb 4d		 jmp	 SHORT $LN10@OnTimerPul
__catch$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$0:

; 345  : 			catch(...)
; 346  : 			{
; 347  : 				CString strMessage;

  000c0	8d 4d e0	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000c9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2

; 348  : 				strMessage.Format(TEXT("OnTimerPulse: TimerID=%d"),pTimerItem->nTimerID);

  000cd	8b 45 e4	 mov	 eax, DWORD PTR _pTimerItem$3[ebp]
  000d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d2	51		 push	 ecx
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GNAGLFEA@OnTimerPulse?3?5TimerID?$DN?$CFd@
  000d8	8d 55 e0	 lea	 edx, DWORD PTR _strMessage$2[ebp]
  000db	52		 push	 edx
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 349  : 				CTraceService::TraceString(strMessage,TraceLevel_Exception);

  000e5	6a 03		 push	 3
  000e7	8d 4d e0	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  000f0	50		 push	 eax
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
  000f7	83 c4 08	 add	 esp, 8

; 350  : 			}

  000fa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000fe	8d 4d e0	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00107	b8 00 00 00 00	 mov	 eax, $LN14@OnTimerPul
  0010c	c3		 ret	 0
$LN10@OnTimerPul:
  0010d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00114	eb 07		 jmp	 SHORT __tryend$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$1
$LN14@OnTimerPul:
  00116	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$1:

; 351  : 		}
; 352  : 		else

  0011d	eb 0f		 jmp	 SHORT $LN6@OnTimerPul
$LN5@OnTimerPul:

; 353  : 		{
; 354  : 			//设置变量
; 355  : 			pTimerItem->nTimeLeave--;

  0011f	8b 45 e4	 mov	 eax, DWORD PTR _pTimerItem$3[ebp]
  00122	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00125	83 e9 01	 sub	 ecx, 1
  00128	8b 55 e4	 mov	 edx, DWORD PTR _pTimerItem$3[ebp]
  0012b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN6@OnTimerPul:

; 356  : 		}
; 357  : 	}

  0012e	e9 0f ff ff ff	 jmp	 $LN2@OnTimerPul
$LN3@OnTimerPul:

; 358  : 
; 359  : 
; 360  : 	return true;

  00133	b0 01		 mov	 al, 1

; 361  : }

  00135	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00138	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0013f	59		 pop	 ecx
  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _strMessage$2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTimerPulse@CAndroidUserItem@@QAE_NKI@Z ENDP		; CAndroidUserItem::OnTimerPulse
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z
_TEXT	SEGMENT
_wSendSize$ = -156					; size = 2
_dwAndroidID$ = -152					; size = 4
_UserChat$ = -148					; size = 138
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwTargetUserID$ = 8					; size = 4
_pszChatString$ = 12					; size = 4
_crColor$ = 16						; size = 4
?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z PROC	; CAndroidUserItem::SendChatMessage, COMDAT
; _this$ = ecx

; 299  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 300  : 	//效验用户
; 301  : 	ASSERT(m_pIServerUserItem!=NULL);

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00020	75 19		 jne	 SHORT $LN4@SendChatMe
  00022	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z@4JA
  00028	83 c1 02	 add	 ecx, 2
  0002b	51		 push	 ecx
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN4@SendChatMe
  0003a	cc		 int	 3
$LN4@SendChatMe:

; 302  : 	if (m_pIServerUserItem==NULL) return false;

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00042	75 07		 jne	 SHORT $LN2@SendChatMe
  00044	32 c0		 xor	 al, al
  00046	e9 aa 00 00 00	 jmp	 $LN1@SendChatMe
$LN2@SendChatMe:

; 303  : 
; 304  : 	//构造信息
; 305  : 	CMD_GF_C_UserChat UserChat;
; 306  : 	lstrcpyn(UserChat.szChatString,pszChatString,CountArray(UserChat.szChatString));

  0004b	68 80 00 00 00	 push	 128			; 00000080H
  00050	8b 45 0c	 mov	 eax, DWORD PTR _pszChatString$[ebp]
  00053	50		 push	 eax
  00054	8d 8d 76 ff ff
	ff		 lea	 ecx, DWORD PTR _UserChat$[ebp+10]
  0005a	51		 push	 ecx
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 307  : 
; 308  : 	//构造数据
; 309  : 	UserChat.dwChatColor=crColor;

  00061	8b 45 10	 mov	 eax, DWORD PTR _crColor$[ebp]
  00064	89 85 6e ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+2], eax

; 310  : 	UserChat.dwTargetUserID=dwTargetUserID;

  0006a	8b 45 08	 mov	 eax, DWORD PTR _dwTargetUserID$[ebp]
  0006d	89 85 72 ff ff
	ff		 mov	 DWORD PTR _UserChat$[ebp+6], eax

; 311  : 	UserChat.wChatLength=CountStringBuffer(UserChat.szChatString);

  00073	8d 85 76 ff ff
	ff		 lea	 eax, DWORD PTR _UserChat$[ebp+10]
  00079	50		 push	 eax
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00080	83 c0 01	 add	 eax, 1
  00083	66 89 85 6c ff
	ff ff		 mov	 WORD PTR _UserChat$[ebp], ax

; 312  : 
; 313  : 	//发送命令
; 314  : 	DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  0008a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  00091	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00097	0f b7 d1	 movzx	 edx, cx
  0009a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  000a1	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000a7	0f b7 c1	 movzx	 eax, cx
  000aa	c1 e0 10	 shl	 eax, 16			; 00000010H
  000ad	0b d0		 or	 edx, eax
  000af	89 95 68 ff ff
	ff		 mov	 DWORD PTR _dwAndroidID$[ebp], edx

; 315  : 	WORD wSendSize=sizeof(UserChat)-sizeof(UserChat.szChatString)+UserChat.wChatLength*sizeof(TCHAR);

  000b5	0f b7 85 6c ff
	ff ff		 movzx	 eax, WORD PTR _UserChat$[ebp]
  000bc	83 c0 0a	 add	 eax, 10			; 0000000aH
  000bf	66 89 85 64 ff
	ff ff		 mov	 WORD PTR _wSendSize$[ebp], ax

; 316  : 	m_pIAndroidUserManager->SendDataToServer(dwAndroidID,MDM_GF_FRAME,SUB_GF_USER_CHAT,&UserChat,wSendSize);

  000c6	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$[ebp]
  000cd	50		 push	 eax
  000ce	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _UserChat$[ebp]
  000d4	51		 push	 ecx
  000d5	6a 0a		 push	 10			; 0000000aH
  000d7	6a 64		 push	 100			; 00000064H
  000d9	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _dwAndroidID$[ebp]
  000df	52		 push	 edx
  000e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  000e6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e9	8b 01		 mov	 eax, DWORD PTR [ecx]
  000eb	8b 4a 78	 mov	 ecx, DWORD PTR [edx+120]
  000ee	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  000f1	ff d2		 call	 edx

; 317  : 
; 318  : 	return true;

  000f3	b0 01		 mov	 al, 1
$LN1@SendChatMe:

; 319  : }

  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5b		 pop	 ebx
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fb	33 cd		 xor	 ecx, ebp
  000fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 0c 00	 ret	 12			; 0000000cH
?SendChatMessage@CAndroidUserItem@@UAE_NKPBDK@Z ENDP	; CAndroidUserItem::SendChatMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z
_TEXT	SEGMENT
_dwAndroidID$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_wDataSize$ = 12					; size = 2
?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z PROC	; CAndroidUserItem::SendUserReady, COMDAT
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 	//状态效验
; 287  : //	ASSERT((m_pIServerUserItem!=NULL)&&(m_pIServerUserItem->GetUserStatus()==US_SIT));
; 288  : 	if ((m_pIServerUserItem==NULL)||(m_pIServerUserItem->GetUserStatus()!=US_SIT)) return false;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00013	74 1b		 je	 SHORT $LN3@SendUserRe
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00023	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  00026	ff d2		 call	 edx
  00028	0f b6 c0	 movzx	 eax, al
  0002b	83 f8 02	 cmp	 eax, 2
  0002e	74 04		 je	 SHORT $LN2@SendUserRe
$LN3@SendUserRe:
  00030	32 c0		 xor	 al, al
  00032	eb 4e		 jmp	 SHORT $LN1@SendUserRe
$LN2@SendUserRe:

; 289  : 
; 290  : 	//发送准备
; 291  : 	DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  0003b	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00041	0f b7 d1	 movzx	 edx, cx
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  0004b	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00051	0f b7 c1	 movzx	 eax, cx
  00054	c1 e0 10	 shl	 eax, 16			; 00000010H
  00057	0b d0		 or	 edx, eax
  00059	89 55 f8	 mov	 DWORD PTR _dwAndroidID$[ebp], edx

; 292  : 	m_pIAndroidUserManager->SendDataToServer(dwAndroidID,MDM_GF_FRAME,SUB_GF_USER_READY,pData,wDataSize);

  0005c	0f b7 45 0c	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00060	50		 push	 eax
  00061	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00064	51		 push	 ecx
  00065	6a 02		 push	 2
  00067	6a 64		 push	 100			; 00000064H
  00069	8b 55 f8	 mov	 edx, DWORD PTR _dwAndroidID$[ebp]
  0006c	52		 push	 edx
  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 01		 mov	 eax, DWORD PTR [ecx]
  00078	8b 4a 78	 mov	 ecx, DWORD PTR [edx+120]
  0007b	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  0007e	ff d2		 call	 edx

; 293  : 
; 294  : 	return true;

  00080	b0 01		 mov	 al, 1
$LN1@SendUserRe:

; 295  : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 08 00	 ret	 8
?SendUserReady@CAndroidUserItem@@UAE_NPAXG@Z ENDP	; CAndroidUserItem::SendUserReady
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
_TEXT	SEGMENT
tv146 = -112						; size = 4
$T2 = -105						; size = 1
$T3 = -104						; size = 4
_wStorageCount$ = -36					; size = 2
_pTimerItem$ = -32					; size = 4
_pTimerItem$4 = -28					; size = 4
_i$5 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_nTimerID$ = 8						; size = 4
_nElapse$ = 12						; size = 4
?SetGameTimer@CAndroidUserItem@@UAE_NII@Z PROC		; CAndroidUserItem::SetGameTimer, COMDAT
; _this$ = ecx

; 227  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 60	 sub	 esp, 96			; 00000060H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 228  : 	//寻找子项
; 229  : 	for (INT_PTR i=0;i<m_TimerItemActive.GetCount();i++)

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  00036	eb 09		 jmp	 SHORT $LN4@SetGameTim
$LN2@SetGameTim:
  00038	8b 45 e8	 mov	 eax, DWORD PTR _i$5[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 e8	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@SetGameTim:
  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 50	 add	 ecx, 80			; 00000050H
  00047	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount
  0004c	39 45 e8	 cmp	 DWORD PTR _i$5[ebp], eax
  0004f	7d 30		 jge	 SHORT $LN3@SetGameTim

; 230  : 	{
; 231  : 		//获取时间
; 232  : 		tagTimerItem * pTimerItem=m_TimerItemActive[i];

  00051	8b 45 e8	 mov	 eax, DWORD PTR _i$5[ebp]
  00054	50		 push	 eax
  00055	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 50	 add	 ecx, 80			; 00000050H
  0005b	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	89 4d e4	 mov	 DWORD PTR _pTimerItem$4[ebp], ecx

; 233  : 
; 234  : 		//设置判断
; 235  : 		if (pTimerItem->nTimerID==nTimerID)

  00065	8b 45 e4	 mov	 eax, DWORD PTR _pTimerItem$4[ebp]
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	3b 4d 08	 cmp	 ecx, DWORD PTR _nTimerID$[ebp]
  0006d	75 10		 jne	 SHORT $LN5@SetGameTim

; 236  : 		{
; 237  : 			pTimerItem->nTimeLeave=nElapse;

  0006f	8b 45 e4	 mov	 eax, DWORD PTR _pTimerItem$4[ebp]
  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _nElapse$[ebp]
  00075	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 238  : 			return true;

  00078	b0 01		 mov	 al, 1
  0007a	e9 ef 00 00 00	 jmp	 $LN1@SetGameTim
$LN5@SetGameTim:

; 239  : 		}
; 240  : 	}

  0007f	eb b7		 jmp	 SHORT $LN2@SetGameTim
$LN3@SetGameTim:

; 241  : 
; 242  : 	//变量定义
; 243  : 	tagTimerItem * pTimerItem=NULL;

  00081	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pTimerItem$[ebp], 0

; 244  : 	WORD wStorageCount=(WORD)m_TimerItemBuffer.GetCount();

  00088	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  0008d	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount
  00092	66 89 45 dc	 mov	 WORD PTR _wStorageCount$[ebp], ax

; 245  : 
; 246  : 	//库存子项
; 247  : 	if (wStorageCount>0)

  00096	0f b7 45 dc	 movzx	 eax, WORD PTR _wStorageCount$[ebp]
  0009a	85 c0		 test	 eax, eax
  0009c	7e 3a		 jle	 SHORT $LN6@SetGameTim

; 248  : 	{
; 249  : 		//获取对象
; 250  : 		pTimerItem=m_TimerItemBuffer[wStorageCount-1];

  0009e	0f b7 45 dc	 movzx	 eax, WORD PTR _wStorageCount$[ebp]
  000a2	83 e8 01	 sub	 eax, 1
  000a5	50		 push	 eax
  000a6	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  000ab	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	89 4d e0	 mov	 DWORD PTR _pTimerItem$[ebp], ecx

; 251  : 
; 252  : 		//加入数组
; 253  : 		m_TimerItemActive.Add(pTimerItem);

  000b5	8d 45 e0	 lea	 eax, DWORD PTR _pTimerItem$[ebp]
  000b8	50		 push	 eax
  000b9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	83 c1 50	 add	 ecx, 80			; 00000050H
  000bf	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add

; 254  : 		m_TimerItemBuffer.RemoveAt(wStorageCount-1);

  000c4	6a 01		 push	 1
  000c6	0f b7 45 dc	 movzx	 eax, WORD PTR _wStorageCount$[ebp]
  000ca	83 e8 01	 sub	 eax, 1
  000cd	50		 push	 eax
  000ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  000d3	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAt
$LN6@SetGameTim:

; 255  : 	}
; 256  : 
; 257  : 	//创建子项
; 258  : 	if (pTimerItem==NULL)

  000d8	83 7d e0 00	 cmp	 DWORD PTR _pTimerItem$[ebp], 0
  000dc	75 68		 jne	 SHORT $LN12@SetGameTim

; 259  : 	{
; 260  : 		try

  000de	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 261  : 		{
; 262  : 			//创建对象
; 263  : 			pTimerItem=new tagTimerItem;

  000e5	6a 08		 push	 8
  000e7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ec	83 c4 04	 add	 esp, 4
  000ef	89 45 90	 mov	 DWORD PTR tv146[ebp], eax
  000f2	8b 45 90	 mov	 eax, DWORD PTR tv146[ebp]
  000f5	89 45 98	 mov	 DWORD PTR $T3[ebp], eax
  000f8	8b 4d 98	 mov	 ecx, DWORD PTR $T3[ebp]
  000fb	89 4d e0	 mov	 DWORD PTR _pTimerItem$[ebp], ecx

; 264  : 			if (pTimerItem==NULL) return false;

  000fe	83 7d e0 00	 cmp	 DWORD PTR _pTimerItem$[ebp], 0
  00102	75 04		 jne	 SHORT $LN9@SetGameTim
  00104	32 c0		 xor	 al, al
  00106	eb 66		 jmp	 SHORT $LN1@SetGameTim
$LN9@SetGameTim:

; 265  : 
; 266  : 			//加入数组
; 267  : 			m_TimerItemActive.Add(pTimerItem);

  00108	8d 45 e0	 lea	 eax, DWORD PTR _pTimerItem$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	83 c1 50	 add	 ecx, 80			; 00000050H
  00112	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add

; 268  : 		}

  00117	eb 2d		 jmp	 SHORT $LN12@SetGameTim
__catch$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z$0:

; 269  : 		catch (...)
; 270  : 		{
; 271  : 			ASSERT(FALSE);

  00119	33 c0		 xor	 eax, eax
  0011b	75 19		 jne	 SHORT $LN11@SetGameTim
  0011d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SetGameTimer@CAndroidUserItem@@UAE_NII@Z@4JA
  00123	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00126	51		 push	 ecx
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0012c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00131	85 c0		 test	 eax, eax
  00133	74 01		 je	 SHORT $LN11@SetGameTim
  00135	cc		 int	 3
$LN11@SetGameTim:

; 272  : 			return false;

  00136	c6 45 97 00	 mov	 BYTE PTR $T2[ebp], 0
  0013a	b8 00 00 00 00	 mov	 eax, $LN15@SetGameTim
  0013f	c3		 ret	 0

; 273  : 		}

  00140	b8 00 00 00 00	 mov	 eax, $LN12@SetGameTim
  00145	c3		 ret	 0
$LN12@SetGameTim:
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0014d	eb 0c		 jmp	 SHORT $LN14@SetGameTim
$LN15@SetGameTim:
  0014f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 272  : 			return false;

  00156	8a 45 97	 mov	 al, BYTE PTR $T2[ebp]
  00159	eb 13		 jmp	 SHORT $LN1@SetGameTim
$LN14@SetGameTim:

; 274  : 	}
; 275  : 
; 276  : 	//设置变量
; 277  : 	pTimerItem->nTimerID=nTimerID;

  0015b	8b 45 e0	 mov	 eax, DWORD PTR _pTimerItem$[ebp]
  0015e	8b 4d 08	 mov	 ecx, DWORD PTR _nTimerID$[ebp]
  00161	89 08		 mov	 DWORD PTR [eax], ecx

; 278  : 	pTimerItem->nTimeLeave=nElapse;

  00163	8b 45 e0	 mov	 eax, DWORD PTR _pTimerItem$[ebp]
  00166	8b 4d 0c	 mov	 ecx, DWORD PTR _nElapse$[ebp]
  00169	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 279  : 
; 280  : 	return true;

  0016c	b0 01		 mov	 al, 1
$LN1@SetGameTim:

; 281  : }

  0016e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00171	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00178	59		 pop	 ecx
  00179	5f		 pop	 edi
  0017a	5e		 pop	 esi
  0017b	5b		 pop	 ebx
  0017c	8b e5		 mov	 esp, ebp
  0017e	5d		 pop	 ebp
  0017f	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetGameTimer@CAndroidUserItem@@UAE_NII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetGameTimer@CAndroidUserItem@@UAE_NII@Z ENDP		; CAndroidUserItem::SetGameTimer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?KillGameTimer@CAndroidUserItem@@UAE_NI@Z
_TEXT	SEGMENT
_pTimerItem$1 = -12					; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_nTimerID$ = 8						; size = 4
?KillGameTimer@CAndroidUserItem@@UAE_NI@Z PROC		; CAndroidUserItem::KillGameTimer, COMDAT
; _this$ = ecx

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 197  : 	//删除时间
; 198  : 	if (nTimerID!=0)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nTimerID$[ebp], 0
  00010	74 67		 je	 SHORT $LN5@KillGameTi

; 199  : 	{
; 200  : 		//寻找子项
; 201  : 		for (INT_PTR i=0;i<m_TimerItemActive.GetCount();i++)

  00012	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00019	eb 09		 jmp	 SHORT $LN4@KillGameTi
$LN2@KillGameTi:
  0001b	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0001e	83 c0 01	 add	 eax, 1
  00021	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@KillGameTi:
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 50	 add	 ecx, 80			; 00000050H
  0002a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount
  0002f	39 45 f8	 cmp	 DWORD PTR _i$2[ebp], eax
  00032	7d 43		 jge	 SHORT $LN3@KillGameTi

; 202  : 		{
; 203  : 			//获取时间
; 204  : 			tagTimerItem * pTimerItem=m_TimerItemActive[i];

  00034	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00037	50		 push	 eax
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	83 c1 50	 add	 ecx, 80			; 00000050H
  0003e	e8 00 00 00 00	 call	 ??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	89 4d f4	 mov	 DWORD PTR _pTimerItem$1[ebp], ecx

; 205  : 
; 206  : 			//删除判断
; 207  : 			if (pTimerItem->nTimerID==nTimerID)

  00048	8b 45 f4	 mov	 eax, DWORD PTR _pTimerItem$1[ebp]
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	3b 4d 08	 cmp	 ecx, DWORD PTR _nTimerID$[ebp]
  00050	75 23		 jne	 SHORT $LN7@KillGameTi

; 208  : 			{
; 209  : 				m_TimerItemActive.RemoveAt(i);

  00052	6a 01		 push	 1
  00054	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00057	50		 push	 eax
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 50	 add	 ecx, 80			; 00000050H
  0005e	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAt

; 210  : 				m_TimerItemBuffer.Add(pTimerItem);

  00063	8d 45 f4	 lea	 eax, DWORD PTR _pTimerItem$1[ebp]
  00066	50		 push	 eax
  00067	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  0006c	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add

; 211  : 
; 212  : 				return true;

  00071	b0 01		 mov	 al, 1
  00073	eb 22		 jmp	 SHORT $LN1@KillGameTi
$LN7@KillGameTi:

; 213  : 			}
; 214  : 		}

  00075	eb a4		 jmp	 SHORT $LN2@KillGameTi
$LN3@KillGameTi:

; 215  : 	}
; 216  : 	else

  00077	eb 1c		 jmp	 SHORT $LN6@KillGameTi
$LN5@KillGameTi:

; 217  : 	{
; 218  : 		m_TimerItemBuffer.Append(m_TimerItemActive);

  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	83 c0 50	 add	 eax, 80			; 00000050H
  0007f	50		 push	 eax
  00080	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_TimerItemBuffer@CAndroidUserItem@@1V?$CWHArray@PAUtagTimerItem@@ABQAU1@@@A ; CAndroidUserItem::m_TimerItemBuffer
  00085	e8 00 00 00 00	 call	 ?Append@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABV1@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Append

; 219  : 		m_TimerItemActive.RemoveAll();

  0008a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	83 c1 50	 add	 ecx, 80			; 00000050H
  00090	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXXZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAll
$LN6@KillGameTi:

; 220  : 	}
; 221  : 
; 222  : 	return false;

  00095	32 c0		 xor	 al, al
$LN1@KillGameTi:

; 223  : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
?KillGameTimer@CAndroidUserItem@@UAE_NI@Z ENDP		; CAndroidUserItem::KillGameTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z
_TEXT	SEGMENT
tv69 = -76						; size = 4
_bResult$ = -5						; size = 1
_this$ = -4						; size = 4
_wAction$ = 8						; size = 2
?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z PROC ; CAndroidUserItem::JudgeAndroidActionAndRemove, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 179  : 	//变量定义
; 180  : 	bool bResult = (m_wAndroidAction&wAction)!=0;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 48 08	 movzx	 ecx, WORD PTR [eax+8]
  00013	0f b7 55 08	 movzx	 edx, WORD PTR _wAction$[ebp]
  00017	23 ca		 and	 ecx, edx
  00019	74 09		 je	 SHORT $LN5@JudgeAndro
  0001b	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN6@JudgeAndro
$LN5@JudgeAndro:
  00024	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN6@JudgeAndro:
  0002b	8a 45 b4	 mov	 al, BYTE PTR tv69[ebp]
  0002e	88 45 fb	 mov	 BYTE PTR _bResult$[ebp], al

; 181  : 	
; 182  : 	//移除动作
; 183  :     if(bResult==true)

  00031	0f b6 45 fb	 movzx	 eax, BYTE PTR _bResult$[ebp]
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 26		 jne	 SHORT $LN2@JudgeAndro

; 184  : 	{
; 185  : 		m_wAndroidAction &= ~wAction;

  0003a	0f b7 45 08	 movzx	 eax, WORD PTR _wAction$[ebp]
  0003e	f7 d0		 not	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	0f b7 51 08	 movzx	 edx, WORD PTR [ecx+8]
  00047	23 d0		 and	 edx, eax
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 186  : 
; 187  : 		//离开标识
; 188  : 		if(wAction==ANDROID_WAITLEAVE) m_bWaitLeave=true;

  00050	0f b7 45 08	 movzx	 eax, WORD PTR _wAction$[ebp]
  00054	83 f8 02	 cmp	 eax, 2
  00057	75 07		 jne	 SHORT $LN2@JudgeAndro
  00059	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
$LN2@JudgeAndro:

; 189  : 	}	
; 190  : 
; 191  : 	return bResult;

  00060	8a 45 fb	 mov	 al, BYTE PTR _bResult$[ebp]

; 192  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?JudgeAndroidActionAndRemove@CAndroidUserItem@@UAE_NG@Z ENDP ; CAndroidUserItem::JudgeAndroidActionAndRemove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_dwAndroidID$ = -8					; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z PROC	; CAndroidUserItem::SendSocketData, COMDAT
; _this$ = ecx

; 164  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 165  : 	//状态效验
; 166  : 	ASSERT(m_pIServerUserItem!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00013	75 19		 jne	 SHORT $LN4@SendSocket
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN4@SendSocket
  0002d	cc		 int	 3
$LN4@SendSocket:

; 167  : 	if (m_pIServerUserItem==NULL) return false;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00035	75 04		 jne	 SHORT $LN2@SendSocket
  00037	32 c0		 xor	 al, al
  00039	eb 54		 jmp	 SHORT $LN1@SendSocket
$LN2@SendSocket:

; 168  : 
; 169  : 	//发送数据
; 170  : 	DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  00042	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00048	0f b7 d1	 movzx	 edx, cx
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  00052	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00058	0f b7 c1	 movzx	 eax, cx
  0005b	c1 e0 10	 shl	 eax, 16			; 00000010H
  0005e	0b d0		 or	 edx, eax
  00060	89 55 f8	 mov	 DWORD PTR _dwAndroidID$[ebp], edx

; 171  : 	m_pIAndroidUserManager->SendDataToServer(dwAndroidID,MDM_GF_GAME,wSubCmdID,pData,wDataSize);

  00063	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00067	50		 push	 eax
  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0006b	51		 push	 ecx
  0006c	0f b7 55 08	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  00070	52		 push	 edx
  00071	68 c8 00 00 00	 push	 200			; 000000c8H
  00076	8b 45 f8	 mov	 eax, DWORD PTR _dwAndroidID$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  00080	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 12		 mov	 edx, DWORD PTR [edx]
  00085	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00088	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  0008b	ff d0		 call	 eax

; 172  : 
; 173  : 	return true;

  0008d	b0 01		 mov	 al, 1
$LN1@SendSocket:

; 174  : }

  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
?SendSocketData@CAndroidUserItem@@UAE_NGPAXG@Z ENDP	; CAndroidUserItem::SendSocketData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?SendSocketData@CAndroidUserItem@@UAE_NG@Z
_TEXT	SEGMENT
_dwAndroidID$ = -8					; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
?SendSocketData@CAndroidUserItem@@UAE_NG@Z PROC		; CAndroidUserItem::SendSocketData, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 	//状态效验
; 114  : 	ASSERT(m_pIServerUserItem!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00013	75 19		 jne	 SHORT $LN4@SendSocket
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??SendSocketData@CAndroidUserItem@@UAE_NG@Z@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN4@SendSocket
  0002d	cc		 int	 3
$LN4@SendSocket:

; 115  : 	if (m_pIServerUserItem==NULL) return false;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00035	75 04		 jne	 SHORT $LN2@SendSocket
  00037	32 c0		 xor	 al, al
  00039	eb 4f		 jmp	 SHORT $LN1@SendSocket
$LN2@SendSocket:

; 116  : 
; 117  : 	//发送数据
; 118  : 	DWORD dwAndroidID=MAKELONG(m_wAndroidIndex,m_wRoundID);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	0f b7 48 4e	 movzx	 ecx, WORD PTR [eax+78]
  00042	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00048	0f b7 d1	 movzx	 edx, cx
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	0f b7 48 4c	 movzx	 ecx, WORD PTR [eax+76]
  00052	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00058	0f b7 c1	 movzx	 eax, cx
  0005b	c1 e0 10	 shl	 eax, 16			; 00000010H
  0005e	0b d0		 or	 edx, eax
  00060	89 55 f8	 mov	 DWORD PTR _dwAndroidID$[ebp], edx

; 119  : 	m_pIAndroidUserManager->SendDataToServer(dwAndroidID,MDM_GF_GAME,wSubCmdID,NULL,0);

  00063	6a 00		 push	 0
  00065	6a 00		 push	 0
  00067	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0006b	50		 push	 eax
  0006c	68 c8 00 00 00	 push	 200			; 000000c8H
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _dwAndroidID$[ebp]
  00074	51		 push	 ecx
  00075	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00078	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	8b 10		 mov	 edx, DWORD PTR [eax]
  00080	8b 49 78	 mov	 ecx, DWORD PTR [ecx+120]
  00083	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00086	ff d0		 call	 eax

; 120  : 
; 121  : 	return true;

  00088	b0 01		 mov	 al, 1
$LN1@SendSocket:

; 122  : }

  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 04 00	 ret	 4
?SendSocketData@CAndroidUserItem@@UAE_NG@Z ENDP		; CAndroidUserItem::SendSocketData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lScore$ = 8						; size = 8
?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z PROC	; CAndroidUserItem::PerformTakeScore, COMDAT
; _this$ = ecx

; 147  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 	ASSERT(m_pIAndroidUserManager!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00013	75 19		 jne	 SHORT $LN5@PerformTak
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z@4JA
  0001b	83 c1 01	 add	 ecx, 1
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN5@PerformTak
  0002d	cc		 int	 3
$LN5@PerformTak:

; 149  : 	if (m_pIAndroidUserManager->GetGameServiceOption()->wServerType==GAME_GENRE_MATCH)

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 4a 78	 mov	 ecx, DWORD PTR [edx+120]
  0003c	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0003f	ff d2		 call	 edx
  00041	0f b7 40 4c	 movzx	 eax, WORD PTR [eax+76]
  00045	83 f8 04	 cmp	 eax, 4
  00048	75 04		 jne	 SHORT $LN2@PerformTak

; 150  : 		return true;

  0004a	b0 01		 mov	 al, 1
  0004c	eb 57		 jmp	 SHORT $LN1@PerformTak
$LN2@PerformTak:

; 151  : 
; 152  : 	//状态效验
; 153  : 	ASSERT(m_pIServerUserItem!=NULL);

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00055	75 19		 jne	 SHORT $LN6@PerformTak
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z@4JA
  0005d	83 c1 06	 add	 ecx, 6
  00060	51		 push	 ecx
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00066	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006b	85 c0		 test	 eax, eax
  0006d	74 01		 je	 SHORT $LN6@PerformTak
  0006f	cc		 int	 3
$LN6@PerformTak:

; 154  : 	if (m_pIServerUserItem==NULL) return false;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00077	75 04		 jne	 SHORT $LN3@PerformTak
  00079	32 c0		 xor	 al, al
  0007b	eb 28		 jmp	 SHORT $LN1@PerformTak
$LN3@PerformTak:

; 155  : 
; 156  : 	//修改游戏币
; 157  : 	m_pIServerUserItem->ModifyUserInsure(lScore,0L,0L);

  0007d	6a 00		 push	 0
  0007f	6a 00		 push	 0
  00081	6a 00		 push	 0
  00083	6a 00		 push	 0
  00085	8b 45 0c	 mov	 eax, DWORD PTR _lScore$[ebp+4]
  00088	50		 push	 eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR _lScore$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00090	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 10		 mov	 edx, DWORD PTR [eax]
  00098	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0009b	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  000a1	ff d0		 call	 eax

; 158  : 
; 159  : 	return true;

  000a3	b0 01		 mov	 al, 1
$LN1@PerformTak:

; 160  : }

  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 08 00	 ret	 8
?PerformTakeScore@CAndroidUserItem@@UAE_N_J@Z ENDP	; CAndroidUserItem::PerformTakeScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z
_TEXT	SEGMENT
tv205 = -76						; size = 8
tv187 = -76						; size = 8
_this$ = -4						; size = 4
_lScore$ = 8						; size = 8
?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z PROC	; CAndroidUserItem::PerformSaveScore, COMDAT
; _this$ = ecx

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 	ASSERT(m_pIAndroidUserManager!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00013	75 19		 jne	 SHORT $LN6@PerformSav
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z@4JA
  0001b	83 c1 01	 add	 ecx, 1
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN6@PerformSav
  0002d	cc		 int	 3
$LN6@PerformSav:

; 128  : 	if (m_pIAndroidUserManager->GetGameServiceOption()->wServerType==GAME_GENRE_MATCH)

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	8b 01		 mov	 eax, DWORD PTR [ecx]
  00039	8b 4a 78	 mov	 ecx, DWORD PTR [edx+120]
  0003c	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0003f	ff d2		 call	 edx
  00041	0f b7 40 4c	 movzx	 eax, WORD PTR [eax+76]
  00045	83 f8 04	 cmp	 eax, 4
  00048	75 07		 jne	 SHORT $LN2@PerformSav

; 129  : 		return true;

  0004a	b0 01		 mov	 al, 1
  0004c	e9 da 00 00 00	 jmp	 $LN1@PerformSav
$LN2@PerformSav:

; 130  : 
; 131  : 	//状态效验
; 132  : 	ASSERT(m_pIServerUserItem!=NULL);

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00058	75 19		 jne	 SHORT $LN7@PerformSav
  0005a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z@4JA
  00060	83 c1 06	 add	 ecx, 6
  00063	51		 push	 ecx
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00069	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006e	85 c0		 test	 eax, eax
  00070	74 01		 je	 SHORT $LN7@PerformSav
  00072	cc		 int	 3
$LN7@PerformSav:

; 133  : 	if (m_pIServerUserItem==NULL) return false;

  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0007a	75 07		 jne	 SHORT $LN3@PerformSav
  0007c	32 c0		 xor	 al, al
  0007e	e9 a8 00 00 00	 jmp	 $LN1@PerformSav
$LN3@PerformSav:

; 134  : 
; 135  : 	//效验游戏币
; 136  : 	ASSERT(m_pIServerUserItem->GetUserScore()>=lScore);

  00083	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00089	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008e	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00091	8b 90 88 00 00
	00		 mov	 edx, DWORD PTR [eax+136]
  00097	ff d2		 call	 edx
  00099	89 45 b4	 mov	 DWORD PTR tv187[ebp], eax
  0009c	89 55 b8	 mov	 DWORD PTR tv187[ebp+4], edx
  0009f	8b 45 b8	 mov	 eax, DWORD PTR tv187[ebp+4]
  000a2	3b 45 0c	 cmp	 eax, DWORD PTR _lScore$[ebp+4]
  000a5	7f 23		 jg	 SHORT $LN8@PerformSav
  000a7	7c 08		 jl	 SHORT $LN9@PerformSav
  000a9	8b 4d b4	 mov	 ecx, DWORD PTR tv187[ebp]
  000ac	3b 4d 08	 cmp	 ecx, DWORD PTR _lScore$[ebp]
  000af	73 19		 jae	 SHORT $LN8@PerformSav
$LN9@PerformSav:
  000b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z@4JA
  000b7	83 c2 0a	 add	 edx, 10			; 0000000aH
  000ba	52		 push	 edx
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000c0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c5	85 c0		 test	 eax, eax
  000c7	74 01		 je	 SHORT $LN8@PerformSav
  000c9	cc		 int	 3
$LN8@PerformSav:

; 137  : 	if (m_pIServerUserItem->GetUserScore()<lScore) return false;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000d0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d3	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d5	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  000d8	8b 90 88 00 00
	00		 mov	 edx, DWORD PTR [eax+136]
  000de	ff d2		 call	 edx
  000e0	89 45 b4	 mov	 DWORD PTR tv205[ebp], eax
  000e3	89 55 b8	 mov	 DWORD PTR tv205[ebp+4], edx
  000e6	8b 45 b8	 mov	 eax, DWORD PTR tv205[ebp+4]
  000e9	3b 45 0c	 cmp	 eax, DWORD PTR _lScore$[ebp+4]
  000ec	7f 0e		 jg	 SHORT $LN4@PerformSav
  000ee	7c 08		 jl	 SHORT $LN10@PerformSav
  000f0	8b 4d b4	 mov	 ecx, DWORD PTR tv205[ebp]
  000f3	3b 4d 08	 cmp	 ecx, DWORD PTR _lScore$[ebp]
  000f6	73 04		 jae	 SHORT $LN4@PerformSav
$LN10@PerformSav:
  000f8	32 c0		 xor	 al, al
  000fa	eb 2f		 jmp	 SHORT $LN1@PerformSav
$LN4@PerformSav:

; 138  : 
; 139  : 	//修改游戏币
; 140  : 	m_pIServerUserItem->ModifyUserInsure(-lScore,0L,0L);

  000fc	6a 00		 push	 0
  000fe	6a 00		 push	 0
  00100	6a 00		 push	 0
  00102	6a 00		 push	 0
  00104	8b 45 08	 mov	 eax, DWORD PTR _lScore$[ebp]
  00107	f7 d8		 neg	 eax
  00109	8b 4d 0c	 mov	 ecx, DWORD PTR _lScore$[ebp+4]
  0010c	83 d1 00	 adc	 ecx, 0
  0010f	f7 d9		 neg	 ecx
  00111	51		 push	 ecx
  00112	50		 push	 eax
  00113	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00116	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	8b 10		 mov	 edx, DWORD PTR [eax]
  0011e	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00121	8b 82 1c 01 00
	00		 mov	 eax, DWORD PTR [edx+284]
  00127	ff d0		 call	 eax

; 141  : 
; 142  : 	return true;

  00129	b0 01		 mov	 al, 1
$LN1@PerformSav:

; 143  : }

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 08 00	 ret	 8
?PerformSaveScore@CAndroidUserItem@@UAE_N_J@Z ENDP	; CAndroidUserItem::PerformSaveScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wChariID$ = 8						; size = 2
?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z PROC ; CAndroidUserItem::GetTableUserItem, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	return NULL;

  0000c	33 c0		 xor	 eax, eax

; 108  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetTableUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@G@Z ENDP ; CAndroidUserItem::GetTableUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ PROC ; CAndroidUserItem::GetMeUserItem, COMDAT
; _this$ = ecx

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 	return m_pIServerUserItem;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 18	 mov	 eax, DWORD PTR [eax+24]

; 102  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetMeUserItem@CAndroidUserItem@@UAEPAUIServerUserItem@@XZ ENDP ; CAndroidUserItem::GetMeUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ PROC ; CAndroidUserItem::GetAndroidParameter, COMDAT
; _this$ = ecx

; 104  : 	virtual tagAndroidParameter * GetAndroidParameter() { return m_AndroidItemConfig.pAndroidParameter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAndroidParameter@CAndroidUserItem@@UAEPAUtagAndroidParameter@@XZ ENDP ; CAndroidUserItem::GetAndroidParameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ PROC ; CAndroidUserItem::GetAndroidService, COMDAT
; _this$ = ecx

; 102  : 	virtual tagAndroidService * GetAndroidService() { return &m_AndroidService; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 1c	 add	 eax, 28			; 0000001cH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetAndroidService@CAndroidUserItem@@UAEPAUtagAndroidService@@XZ ENDP ; CAndroidUserItem::GetAndroidService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?SetGameStatus@CAndroidUserItem@@UAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cbGameStatus$ = 8					; size = 1
?SetGameStatus@CAndroidUserItem@@UAEXE@Z PROC		; CAndroidUserItem::SetGameStatus, COMDAT
; _this$ = ecx

; 97   : 	virtual VOID SetGameStatus(BYTE cbGameStatus) { m_cbGameStatus=cbGameStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 4d 08	 mov	 cl, BYTE PTR _cbGameStatus$[ebp]
  00012	88 48 06	 mov	 BYTE PTR [eax+6], cl
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetGameStatus@CAndroidUserItem@@UAEXE@Z ENDP		; CAndroidUserItem::SetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?GetGameStatus@CAndroidUserItem@@UAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameStatus@CAndroidUserItem@@UAEEXZ PROC		; CAndroidUserItem::GetGameStatus, COMDAT
; _this$ = ecx

; 95   : 	virtual BYTE GetGameStatus() { return m_cbGameStatus; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 06	 mov	 al, BYTE PTR [eax+6]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGameStatus@CAndroidUserItem@@UAEEXZ ENDP		; CAndroidUserItem::GetGameStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?GetChairID@CAndroidUserItem@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetChairID@CAndroidUserItem@@UAEGXZ PROC		; CAndroidUserItem::GetChairID, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 90   : 	//效验状态
; 91   : 	ASSERT(m_pIServerUserItem!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00013	75 19		 jne	 SHORT $LN4@GetChairID
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetChairID@CAndroidUserItem@@UAEGXZ@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN4@GetChairID
  0002d	cc		 int	 3
$LN4@GetChairID:

; 92   : 	if (m_pIServerUserItem==NULL) return INVALID_CHAIR;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00035	75 07		 jne	 SHORT $LN2@GetChairID
  00037	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0003c	eb 13		 jmp	 SHORT $LN1@GetChairID
$LN2@GetChairID:

; 93   : 
; 94   : 	return m_pIServerUserItem->GetChairID();

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	8b 01		 mov	 eax, DWORD PTR [ecx]
  00049	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0004c	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  0004f	ff d2		 call	 edx
$LN1@GetChairID:

; 95   : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?GetChairID@CAndroidUserItem@@UAEGXZ ENDP		; CAndroidUserItem::GetChairID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?GetTableID@CAndroidUserItem@@UAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTableID@CAndroidUserItem@@UAEGXZ PROC		; CAndroidUserItem::GetTableID, COMDAT
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : 	//效验状态
; 81   : 	ASSERT(m_pIServerUserItem!=NULL);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00013	75 19		 jne	 SHORT $LN4@GetTableID
  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??GetTableID@CAndroidUserItem@@UAEGXZ@4JA
  0001b	83 c1 02	 add	 ecx, 2
  0001e	51		 push	 ecx
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@EHEJDFPF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00024	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00029	85 c0		 test	 eax, eax
  0002b	74 01		 je	 SHORT $LN4@GetTableID
  0002d	cc		 int	 3
$LN4@GetTableID:

; 82   : 	if (m_pIServerUserItem==NULL) return INVALID_TABLE;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00035	75 07		 jne	 SHORT $LN2@GetTableID
  00037	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0003c	eb 13		 jmp	 SHORT $LN1@GetTableID
$LN2@GetTableID:

; 83   : 
; 84   : 	return m_pIServerUserItem->GetTableID();

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	8b 01		 mov	 eax, DWORD PTR [ecx]
  00049	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0004c	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0004f	ff d2		 call	 edx
$LN1@GetTableID:

; 85   : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
?GetTableID@CAndroidUserItem@@UAEGXZ ENDP		; CAndroidUserItem::GetTableID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?GetUserID@CAndroidUserItem@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserID@CAndroidUserItem@@UAEKXZ PROC		; CAndroidUserItem::GetUserID, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 74   : 	return m_AndroidItemConfig.AndroidAccountsInfo.dwUserID;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 20	 mov	 eax, DWORD PTR [eax+32]

; 75   : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserID@CAndroidUserItem@@UAEKXZ ENDP		; CAndroidUserItem::GetUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z PROC ; CAndroidUserItem::QueryInterface, COMDAT
; _this$ = ecx

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 66   : 	QUERYINTERFACE(IAndroidUserItem,Guid,dwQueryVer);

  0000c	68 00 00 00 00	 push	 OFFSET ?IID_IAndroidUserItem@@3U_GUID@@B
  00011	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _==
  0001a	83 c4 08	 add	 esp, 8
  0001d	0f b6 c8	 movzx	 ecx, al
  00020	85 c9		 test	 ecx, ecx
  00022	74 1d		 je	 SHORT $LN2@QueryInter
  00024	68 00 01 01 06	 push	 100729088		; 06010100H
  00029	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00032	83 c4 08	 add	 esp, 8
  00035	0f b6 c8	 movzx	 ecx, al
  00038	85 c9		 test	 ecx, ecx
  0003a	74 05		 je	 SHORT $LN2@QueryInter
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	eb 37		 jmp	 SHORT $LN1@QueryInter
$LN2@QueryInter:

; 67   : 	QUERYINTERFACE_IUNKNOWNEX(IAndroidUserItem,Guid,dwQueryVer);

  00041	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00046	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _==
  0004f	83 c4 08	 add	 esp, 8
  00052	0f b6 c8	 movzx	 ecx, al
  00055	85 c9		 test	 ecx, ecx
  00057	74 1d		 je	 SHORT $LN3@QueryInter
  00059	68 00 01 01 06	 push	 100729088		; 06010100H
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00067	83 c4 08	 add	 esp, 8
  0006a	0f b6 c8	 movzx	 ecx, al
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 05		 je	 SHORT $LN3@QueryInter
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN3@QueryInter:

; 68   : 	return NULL;

  00076	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 69   : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?QueryInterface@CAndroidUserItem@@UAEPAXABU_GUID@@K@Z ENDP ; CAndroidUserItem::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.h
;	COMDAT ?Release@CAndroidUserItem@@UAEXXZ
_TEXT	SEGMENT
tv70 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
?Release@CAndroidUserItem@@UAEXXZ PROC			; CAndroidUserItem::Release, COMDAT
; _this$ = ecx

; 79   : 	virtual VOID Release() { delete this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  00012	8b 4d b4	 mov	 ecx, DWORD PTR $T1[ebp]
  00015	89 4d b8	 mov	 DWORD PTR $T2[ebp], ecx
  00018	83 7d b8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0001c	74 14		 je	 SHORT $LN3@Release
  0001e	6a 01		 push	 1
  00020	8b 55 b8	 mov	 edx, DWORD PTR $T2[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	8b 4d b8	 mov	 ecx, DWORD PTR $T2[ebp]
  00028	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  0002b	ff d2		 call	 edx
  0002d	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00030	eb 07		 jmp	 SHORT $LN1@Release
$LN3@Release:
  00032	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN1@Release:
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?Release@CAndroidUserItem@@UAEXXZ ENDP			; CAndroidUserItem::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ??1CAndroidUserItem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAndroidUserItem@@UAE@XZ PROC			; CAndroidUserItem::~CAndroidUserItem, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAndroidUserItem@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAndroidUserItem@@6B@

; 54   : 	//删除时间
; 55   : 	KillGameTimer(0);

  00034	6a 00		 push	 0
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?KillGameTimer@CAndroidUserItem@@UAE_NI@Z ; CAndroidUserItem::KillGameTimer

; 56   : 
; 57   : 	//释放对象
; 58   : 	SafeRelease(m_pIAndroidUserItemSink);

  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  00045	74 1c		 je	 SHORT $LN1@CAndroidUs
  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0004d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00050	8b 01		 mov	 eax, DWORD PTR [ecx]
  00052	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	ff d2		 call	 edx
  00059	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], 0
$LN1@CAndroidUs:

; 59   : 
; 60   : 	return;
; 61   : }

  00063	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 50	 add	 ecx, 80			; 00000050H
  00069	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
  0006e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00071	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00078	59		 pop	 ecx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAndroidUserItem@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAndroidUserItem@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAndroidUserItem@@UAE@XZ ENDP			; CAndroidUserItem::~CAndroidUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ??0CAndroidUserItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAndroidUserItem@@QAE@XZ PROC			; CAndroidUserItem::CAndroidUserItem, COMDAT
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IAndroidUserItem@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAndroidUserItem@@6B@
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 50	 add	 ecx, 80			; 00000050H
  00023	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@XZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>

; 14   : 	//索引变量
; 15   : 	m_wRoundID=1;

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	66 89 41 4c	 mov	 WORD PTR [ecx+76], ax

; 16   : 	m_wAndroidIndex=INVALID_WORD;

  00034	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	66 89 41 4e	 mov	 WORD PTR [ecx+78], ax

; 17   : 
; 18   : 	//接口变量
; 19   : 	m_pIServerUserManager=NULL;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], 0

; 20   : 	m_pIAndroidUserManager=NULL;

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [eax+120], 0

; 21   : 	m_pIAndroidUserItemSink=NULL;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], 0

; 22   : 
; 23   : 	//状态变量
; 24   : 	m_bWaitLeave=false;

  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 25   : 	m_bStartClient=false;

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c6 40 05 00	 mov	 BYTE PTR [eax+5], 0

; 26   : 	m_wAndroidAction=0;

  0006c	33 c0		 xor	 eax, eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 27   : 	m_dwPlayInnings=0;

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 28   : 	m_cbGameStatus=GAME_STATUS_FREE;

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0

; 29   : 
; 30   : 	//用户状态
; 31   : 	m_CurrentUserStatus.cbUserStatus=US_NULL;

  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 32   : 	m_CurrentUserStatus.wChairID=INVALID_CHAIR;

  0008d	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	66 89 41 12	 mov	 WORD PTR [ecx+18], ax

; 33   : 	m_CurrentUserStatus.wTableID=INVALID_TABLE;

  00099	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	66 89 41 10	 mov	 WORD PTR [ecx+16], ax

; 34   : 
; 35   : 	//绑定变量
; 36   : 	m_pIServerUserItem=NULL;

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 37   : 
; 38   : 	//时间变量
; 39   : 	m_dwMinSitInterval=0;

  000af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 40   : 	m_dwMaxSitInterval=0;

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [eax+104], 0

; 41   : 	m_dwStandupTickCount=0;

  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	c7 40 6c 00 00
	00 00		 mov	 DWORD PTR [eax+108], 0

; 42   : 	m_dwReposeTickCount=0;

  000cd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], 0

; 43   : 
; 44   : 	//状态信息
; 45   : 	ZeroMemory(&m_AndroidService,sizeof(m_AndroidService));

  000d7	6a 04		 push	 4
  000d9	6a 00		 push	 0
  000db	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000de	83 c0 1c	 add	 eax, 28			; 0000001cH
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 _memset
  000e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 46   : 	ZeroMemory(&m_AndroidItemConfig,sizeof(m_AndroidItemConfig));

  000ea	6a 2c		 push	 44			; 0000002cH
  000ec	6a 00		 push	 0
  000ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	83 c0 20	 add	 eax, 32			; 00000020H
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 _memset
  000fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 47   : 
; 48   : 	return;
; 49   : }

  000fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
??0CAndroidUserItem@@QAE@XZ ENDP			; CAndroidUserItem::CAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z PROC	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ ; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAEPAXI@Z ENDP	; CWHArray<tagTimerItem *,tagTimerItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00012	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00015	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0002d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00036	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00039	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAV0@ABV0@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@ABV0@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHABQAUtagTimerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHABQAUtagTimerItem@@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHABQAUtagTimerItem@@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEAAPAUtagTimerItem@@H@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Append@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABV1@@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nOldCount$2 = -8					; size = 4
_this$ = -4						; size = 4
_Src$ = 8						; size = 4
?Append@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABV1@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Append, COMDAT
; _this$ = ecx

; 192  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 193  : 	//效验参数
; 194  : 	ASSERT(this!=&Src);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  00012	75 14		 jne	 SHORT $LN8@Append
  00014	68 c2 00 00 00	 push	 194			; 000000c2H
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00023	85 c0		 test	 eax, eax
  00025	74 01		 je	 SHORT $LN8@Append
  00027	cc		 int	 3
$LN8@Append:

; 195  : 	if (this==&Src) AfxThrowInvalidArgException();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	3b 45 08	 cmp	 eax, DWORD PTR _Src$[ebp]
  0002e	75 05		 jne	 SHORT $LN5@Append
  00030	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@Append:

; 196  : 
; 197  : 	//拷贝数组
; 198  : 	if (Src.m_nElementCount>0)

  00035	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00038	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0003c	7e 6d		 jle	 SHORT $LN6@Append

; 199  : 	{
; 200  : 		INT_PTR nOldCount=m_nElementCount;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00044	89 4d f8	 mov	 DWORD PTR _nOldCount$2[ebp], ecx

; 201  : 		AllocMemory(m_nElementCount+Src.m_nElementCount);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  00050	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXH@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::AllocMemory

; 202  : 		for (INT_PTR i=0;i<Src.m_nElementCount;i++)	m_pData[m_nElementCount+i]=Src.m_pData[i];

  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@Append
$LN2@Append:
  00065	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Append:
  0006e	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _i$1[ebp]
  00074	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00077	7d 20		 jge	 SHORT $LN3@Append
  00079	8b 45 08	 mov	 eax, DWORD PTR _Src$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00085	03 45 f4	 add	 eax, DWORD PTR _i$1[ebp]
  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0008e	8b 75 f4	 mov	 esi, DWORD PTR _i$1[ebp]
  00091	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00094	89 0c 82	 mov	 DWORD PTR [edx+eax*4], ecx
  00097	eb cc		 jmp	 SHORT $LN2@Append
$LN3@Append:

; 203  : 		m_nElementCount+=Src.m_nElementCount;

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	8b 55 08	 mov	 edx, DWORD PTR _Src$[ebp]
  000a2	03 4a 10	 add	 ecx, DWORD PTR [edx+16]
  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN6@Append:

; 204  : 	}
; 205  : 
; 206  : 	return m_nElementCount;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
$LN7@Append:

; 207  : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
?Append@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABV1@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Append
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEXHABQAUtagTimerItem@@@Z ; CWHArray<tagTimerItem *,tagTimerItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAEHABQAUtagTimerItem@@@Z ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagTimerItem *,tagTimerItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ PROC	; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagTimerItem@@ABQAU1@@@UAE@XZ ENDP	; CWHArray<tagTimerItem *,tagTimerItem * const &>::~CWHArray<tagTimerItem *,tagTimerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@XZ PROC	; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagTimerItem@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagTimerItem@@ABQAU1@@@QAE@XZ ENDP	; CWHArray<tagTimerItem *,tagTimerItem * const &>::CWHArray<tagTimerItem *,tagTimerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4IAndroidUserItem@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4IAndroidUserItem@@QAEAAU0@ABU0@@Z PROC		; IAndroidUserItem::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??4IUnknownEx@@QAEAAU0@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??4IAndroidUserItem@@QAEAAU0@ABU0@@Z ENDP		; IAndroidUserItem::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAndroidUserItem@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0IAndroidUserItem@@QAE@ABU0@@Z PROC			; IAndroidUserItem::IAndroidUserItem, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@ABU0@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAndroidUserItem@@6B@
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0IAndroidUserItem@@QAE@ABU0@@Z ENDP			; IAndroidUserItem::IAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAndroidUserItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAndroidUserItem@@QAE@XZ PROC			; IAndroidUserItem::IAndroidUserItem, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAndroidUserItem@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IAndroidUserItem@@QAE@XZ ENDP			; IAndroidUserItem::IAndroidUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -116						; size = 44
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00016	8d 45 8c	 lea	 eax, DWORD PTR $T1[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00023	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  00026	83 c7 18	 add	 edi, 24			; 00000018H
  00029	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002e	8b f0		 mov	 esi, eax
  00030	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00053	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00062	83 c4 04	 add	 esp, 4
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  00070	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00075	83 c4 04	 add	 esp, 4
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 224  : 			}
; 225  : 		else

  0007e	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 c0 18	 add	 eax, 24			; 00000018H
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	83 c0 18	 add	 eax, 24			; 00000018H
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000d0	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000de	5f		 pop	 edi
  000df	5e		 pop	 esi
  000e0	5b		 pop	 ebx
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e4	33 cd		 xor	 ecx, ebp
  000e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00012	83 c4 04	 add	 esp, 4
  00015	0f b6 f0	 movzx	 esi, al
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00021	83 c4 04	 add	 esp, 4
  00024	0f b6 d0	 movzx	 edx, al
  00027	3b f2		 cmp	 esi, edx
  00029	7e 04		 jle	 SHORT $LN2@InterfaceV
  0002b	32 c0		 xor	 al, al
  0002d	eb 74		 jmp	 SHORT $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00038	83 c4 04	 add	 esp, 4
  0003b	0f b6 f0	 movzx	 esi, al
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00047	83 c4 04	 add	 esp, 4
  0004a	0f b6 d0	 movzx	 edx, al
  0004d	3b f2		 cmp	 esi, edx
  0004f	74 04		 je	 SHORT $LN3@InterfaceV
  00051	32 c0		 xor	 al, al
  00053	eb 4e		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00055	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0005e	83 c4 04	 add	 esp, 4
  00061	0f b6 f0	 movzx	 esi, al
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 d0	 movzx	 edx, al
  00073	3b f2		 cmp	 esi, edx
  00075	74 04		 je	 SHORT $LN4@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 28		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 f0	 movzx	 esi, al
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00093	83 c4 04	 add	 esp, 4
  00096	0f b6 d0	 movzx	 edx, al
  00099	3b f2		 cmp	 esi, edx
  0009b	74 04		 je	 SHORT $LN5@InterfaceV
  0009d	32 c0		 xor	 al, al
  0009f	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000a1	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	d1 e0		 shl	 eax, 1
  00010	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 03	 imul	 ecx, eax, 3
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4IUnknownEx@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4IUnknownEx@@QAEAAU0@ABU0@@Z PROC			; IUnknownEx::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??4IUnknownEx@@QAEAAU0@ABU0@@Z ENDP			; IUnknownEx::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0IUnknownEx@@QAE@ABU0@@Z PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0IUnknownEx@@QAE@ABU0@@Z ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptrdest$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  00013	83 c4 04	 add	 esp, 4
  00016	83 c0 01	 add	 eax, 1
  00019	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPA_WPB_W@Z@4JA
  00021	83 c0 04	 add	 eax, 4
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0002a	6a 02		 push	 2
  0002c	6a 02		 push	 2
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00031	51		 push	 ecx
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 f8	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  0003e	83 7d f8 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  00042	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  00044	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 105  : 	_CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00050	51		 push	 ecx
  00051	8b 55 f8	 mov	 edx, DWORD PTR __Ptrdest$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 _wmemcpy
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	return (_Ptrdest);

  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -48						; size = 8
__Ptrnext$ = -40					; size = 4
__Ptrdest$ = -36					; size = 4
__Mbst1$ = -32						; size = 8
__Wc$ = -24						; size = 2
__Bytes$ = -20						; size = 4
__Ptr1$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Count1$ = -8						; size = 4
__Count$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 e0	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000e	89 45 e4	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  00011	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _strlen
  0001a	83 c4 04	 add	 esp, 4
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 f8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00026	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00036	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00038	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  0003b	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0003e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00044	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00047	89 4d f0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  0004a	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0004d	83 c2 01	 add	 edx, 1
  00050	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00053	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00057	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00059	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d e0	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 fc	 mov	 edx, DWORD PTR __Count$[ebp]
  00064	52		 push	 edx
  00065	8b 45 f0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00068	50		 push	 eax
  00069	8d 4d e8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 __Mbrtowc
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  00078	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0007c	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0007e	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  00080	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  00082	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	89 45 f4	 mov	 DWORD PTR __Wchars$[ebp], eax

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  0008b	68 ba 02 00 00	 push	 698			; 000002baH
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00095	6a 02		 push	 2
  00097	6a 02		 push	 2
  00099	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000a9	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000ad	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000af	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000b4	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  000b7	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax

; 703  : 	mbstate_t _Mbst2 = {};

  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d0	 mov	 DWORD PTR __Mbst2$[ebp], eax
  000bf	89 45 d4	 mov	 DWORD PTR __Mbst2$[ebp+4], eax

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000c2	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000c4	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  000c7	2b 45 ec	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
  000cd	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000d0	03 4d ec	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000d3	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000d6	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000d9	83 ea 01	 sub	 edx, 1
  000dc	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000df	8b 45 d8	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  000e2	83 c0 02	 add	 eax, 2
  000e5	89 45 d8	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e8	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  000ec	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  000ee	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d d0	 lea	 ecx, DWORD PTR __Mbst2$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 f8	 mov	 edx, DWORD PTR __Count1$[ebp]
  000f9	52		 push	 edx
  000fa	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 __Mbrtowc
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	89 45 ec	 mov	 DWORD PTR __Bytes$[ebp], eax
  0010d	83 7d ec 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00111	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00113	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00115	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00117	33 c0		 xor	 eax, eax
  00119	8b 4d d8	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0011c	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0011f	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00009	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	d1 e0		 shl	 eax, 1
  0000e	50		 push	 eax
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 _memcpy
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 330  : 		if (pszCategory == nullptr)

  00016	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0001a	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0001c	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00021	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00028	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0002a	33 c0		 xor	 eax, eax
  0002c	75 27		 jne	 SHORT $LN5@RegisterCa
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00038	6a 00		 push	 0
  0003a	68 51 01 00 00	 push	 337			; 00000151H
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00044	6a 02		 push	 2
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 01		 jne	 SHORT $LN5@RegisterCa
  00054	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00055	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00057	69 05 00 00 00
	00 04 01 00 00	 imul	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _nCategory$[ebp]
  00064	89 88 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[eax], ecx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  0006a	68 00 01 00 00	 push	 256			; 00000100H
  0006f	6a 00		 push	 0
  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memset
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  00080	8b 45 08	 mov	 eax, DWORD PTR _pszCategory$[ebp]
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00089	6a 7f		 push	 127			; 0000007fH
  0008b	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _swprintf_s
  00097	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000a0	50		 push	 eax
  000a1	6a 7f		 push	 127			; 0000007fH
  000a3	69 0d 00 00 00
	00 04 01 00 00	 imul	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000ad	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b3	51		 push	 ecx
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000c2	83 c0 01	 add	 eax, 1
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000e	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00013	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000c	68 00 20 00 00	 push	 8192			; 00002000H
  00011	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001a	83 c4 08	 add	 esp, 8

; 482  : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  :             return _time64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00013	83 c4 04	 add	 esp, 4

; 537  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vswprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1543 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vswprintf_
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vswprintf_:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv68 = -68						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _IsEqualGUID
  00016	83 c4 08	 add	 esp, 8
  00019	85 c0		 test	 eax, eax
  0001b	74 09		 je	 SHORT $LN3@
  0001d	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00026	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  0002d	8a 45 bc	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -68						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 _memcmp
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN3@IsEqualGUI
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\游戏服务\androiduseritem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
